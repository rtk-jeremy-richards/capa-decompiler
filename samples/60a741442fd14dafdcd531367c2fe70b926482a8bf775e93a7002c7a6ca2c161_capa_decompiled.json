{
    "00401000": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401000(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_14h;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 106496 named .text\n    arg_14h = arg_ch & 0xff;\n    uVar1 = (arg_ch - arg_14h & 0xffff) >> 3 & 0xff;\n    if (((uVar1 == '\\0') && (uVar2 = (arg_ch - uVar1) + 0x50400000 & 0xffff,  arg_14h = uVar1,  -1 < uVar1)) &&\n       (arg_14h = uVar2,  uVar2 != 0xffff)) {\n        arg_14h = uVar2 % 0x26;\n        var_8h._0_2_ = uVar1 + 0x675c + uVar2;\n        if (uVar2 == 0) {\n            if (var_8h == 0x675c) {\n                var_8h._0_2_ = fcn.0040363c(arg_14h * arg_ch & 0xffff, 0x675c, 0x675c, arg_14h);\n            }\n            arg_14h = var_8h;\n            if ((arg_8h & 0xffff) == 0) {\n                arg_14h = arg_8h & 0xffff & arg_8h | 0x7ce0000;\n            }\n        }\n    }\n    return arg_14h;\n}\n",
        "token_count": 394
    },
    "00401436": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040148e)\n// WARNING: Removing unreachable block (ram,0x00401470)\n// WARNING: Removing unreachable block (ram,0x004014a1)\n// WARNING: Removing unreachable block (ram,0x00401451)\n\nuint fcn.00401436(void)\n\n{\n    uint var_4h;\n    \n    fcn.004020e8(0);\n    return 0;\n}\n",
        "token_count": 98
    },
    "00401800": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401f37)\n// WARNING: Removing unreachable block (ram,0x00401c8c)\n// WARNING: Removing unreachable block (ram,0x00401b0c)\n// WARNING: Removing unreachable block (ram,0x00401ad4)\n// WARNING: Removing unreachable block (ram,0x00401b56)\n// WARNING: Removing unreachable block (ram,0x00401936)\n// WARNING: Removing unreachable block (ram,0x00401e41)\n// WARNING: Removing unreachable block (ram,0x00401e02)\n// WARNING: Removing unreachable block (ram,0x00401ca0)\n// WARNING: Removing unreachable block (ram,0x00401b78)\n// WARNING: Removing unreachable block (ram,0x00401be6)\n// WARNING: Removing unreachable block (ram,0x00401cb9)\n// WARNING: Removing unreachable block (ram,0x00401e22)\n// WARNING: Removing unreachable block (ram,0x00401a37)\n// WARNING: Removing unreachable block (ram,0x00401e5d)\n// WARNING: Removing unreachable block (ram,0x00401d7c)\n// WARNING: Removing unreachable block (ram,0x00401aa0)\n// WARNING: Removing unreachable block (ram,0x00401dd7)\n// WARNING: Removing unreachable block (ram,0x00401dad)\n\nuint32_t __cdecl fcn.00401800(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint lpCriticalSection;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint dwTlsIndex;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint8_t *var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    uVar9 = arg_ch & 0xff;\n    uVar10 = arg_8h + uVar9 * -0x3249 & 0xff;\n    uVar8 = uVar9;\n    if ((uVar9 == '\\0') && (uVar7 = uVar9 >> 3,  uVar8 = uVar7,  0xdf < uVar10)) {\n        uVar9 = (uVar9 ^ 0xa4c2e38b) & 0xff;\n        if (0x8b < uVar9) {\n            (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar7 ^ 0xc9000000, 0, uVar10 & uVar7);\n        }\n        uVar11 = (arg_10h ^ uVar10) & 0xff;\n        uVar8 = uVar9;\n        if (uVar11 != 0xe0) {\n            var_8h = *(((uVar7 | uVar10) + 0x6fa2374c ^ 0x6fe14820) + (uVar7 + uVar11 + -0xe1) * 4);\n            var_10h = var_8h + -((uVar9 & arg_8h & 0xffff) - 0x80);\n            uVar1 = arg_10h;\n            uVar3 = arg_8h * (uVar1 | uVar9);\n            uVar8 = uVar7;\n            if (uVar11 == 0xe1) {\n                var_14h = (uVar3 - uVar7) + 0x14d50;\n                while (var_14h != uVar7 + uVar9 + -0x8b) {\n                    if (var_14h < 8) {\n                        uVar8 = arg_ch % 0x5a;\n                        uVar2 = uVar8 + 0xa0;\n                        if (uVar2 != 0xa0) {\n                            return uVar2;\n                        }\n                        *var_10h = var_8h[-uVar8];\n                        if (uVar8 != 0) {\n                            return 0xa0;\n                        }\n                        var_10h = var_10h + uVar8 * 0x10000 + 1;\n                        if ((arg_8h ^ 0xa07955ba) == 0xa0795559) {\n                            return 0xa0;\n                        }\n                        var_8h = var_8h + (arg_8h ^ 0xa07955ba) * 0xa0 + -0x4bd5583f;\n                        var_14h = var_14h + -1;\n                    }\n                    else {\n                        iVar5 = *var_8h * 0x1000000 + *var_8h * 0x10000 + *var_8h * 0x100 + *var_8h;\n                        if (arg_10h != 0xa9bf01) {\n                            return 0;\n                        }\n                        bVar12 = false;\n                        if (*(var_8h + ((arg_8h ^ 0x91 | arg_ch) - 0x71) * 4) == iVar5) {\n                            if (arg_8h < 0xe0) {\n                                return arg_8h & 0xff;\n                            }\n                            bVar12 = *(var_8h + ((arg_8h & 0xd496) - 0x7f) * 4) == iVar5;\n                        }\n                        if (bVar12) {\n                            if (arg_ch == 0xffffffff) {\n                                return 0xffffffff;\n                            }\n                            if ((uVar1 & 0xd7) + arg_ch != 1) {\n                                return arg_ch;\n                            }\n                            if (arg_ch != 0) {\n                                return 0;\n                            }\n                            var_14h = var_14h - ((arg_8h & 0xff) - 0xd8);\n                            var_8h = var_8h + ((arg_8h - 1 ^ 1) - 0xd6);\n                        }\n                        else {\n                            uVar6 = uVar1 + 0x6585;\n                            if (0x2486 < uVar6) {\n                                return uVar6;\n                            }\n                            var_10h[0x2486 - uVar6] = *var_8h;\n                            uVar4 = arg_ch + (uVar1 & uVar6);\n                            var_10h = var_10h + ((uVar4 | uVar6) - 0x2485);\n                            var_8h = var_8h + (uVar4 & arg_ch & 0xff) + 1;\n                            var_14h = var_14h - (((arg_ch & 0xff) - uVar6) + 0x2487);\n                        }\n                    }\n                }\n                uVar10 = (uVar7 - 1 & 0xffff) >> 2;\n                uVar8 = uVar11;\n                if (-0x6661 < uVar3) {\n                    *((uVar9 >> 2 & uVar3) + 0xedce6e56 ^ 0xed8d1e62) =\n                         var_10h - *(((uVar9 | 0xe1) + 0x6fa23741 ^ 0x6fe14820) + ((uVar10 - uVar9) + -0x3f74) * 4) >> 3\n                    ;\n                    uVar8 = uVar10;\n                }\n            }\n        }\n    }\n    return uVar8;\n}\n",
        "token_count": 1928
    },
    "004021ff": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040225f)\n// WARNING: Removing unreachable block (ram,0x0040223d)\n// WARNING: Removing unreachable block (ram,0x004022b2)\n// WARNING: Removing unreachable block (ram,0x0040221a)\n// WARNING: Removing unreachable block (ram,0x004023f2)\n// WARNING: Removing unreachable block (ram,0x004023bd)\n\nuint32_t __cdecl fcn.004021ff(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_8h & 0xff;\n    var_8h = 0x404175;\n    var_14h = *(((0x33 - arg_10h) + 0x6fa23755 ^ 0x6fe14820) + (uVar2 * uVar2 + -0xe10) * 4);\n    if (uVar2 < 0x3c) {\n        uVar1 = 0x9e46;\n    }\n    else {\n        var_1ch = (uVar2 & uVar2 / uVar2) + 0x16d34;\n        do {\n            if (var_1ch == uVar2 * (uVar2 / uVar2 + 0x46) + -0x10a4) {\n                arg_14h = arg_14h | uVar2 << 0x18;\n                if (arg_14h + 0x60d7fc5a < -0x6328034a) {\n                    return uVar2;\n                }\n                *(0x26d78b98 - uVar2 ^ 0x2694fb4c) = var_14h;\n                if (0x3b < uVar2) {\n                    return arg_14h + 0x60d7fc5b;\n                }\n                return uVar2;\n            }\n            uVar1 = arg_ch >> 3;\n            if (uVar1 == 0x986) {\n                return 0x986;\n            }\n            if (arg_ch >> 5 != 'a') {\n                return arg_ch >> 5 & 0xff;\n            }\n            *(var_14h + (uVar1 - 0x987)) = *var_8h;\n            var_14h = var_14h + (uVar1 - 0x986);\n            var_8h = var_8h + 1;\n            var_1ch = var_1ch + -1;\n            uVar1 = ((arg_10h ^ 0x5500) + arg_ch) * arg_8h;\n        } while (uVar1 != 0x301eff9f);\n    }\n    return uVar1;\n}\n",
        "token_count": 719
    },
    "004026f3": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402718)\n// WARNING: Removing unreachable block (ram,0x00402781)\n// WARNING: Removing unreachable block (ram,0x0040270a)\n\nulong fcn.004026f3(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    cVar1 = fcn.00401800(0xe0, 0, 0xa9bf01);\n    iVar2 = 0xa9bf00;\n    iVar3 = iVar2;\n    if (cVar1 == -1) {\n        iVar2 = 0;\n        iVar3 = unaff_EDI * 0xa9bf00;\n    }\n    return CONCAT44(iVar3, iVar2);\n}\n",
        "token_count": 180
    },
    "004028ea": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004028ea(uint noname_0, uint noname_1, uint noname_2, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_14h = arg_14h | 0x594f9b09;\n    if (0x594f9b08 < arg_14h) {\n        uVar3 = arg_14h % arg_14h;\n        arg_14h = uVar3 - (uVar3 & 0xb1000000);\n        if (-1 < uVar3) {\n            uVar4 = arg_14h >> 3;\n            arg_14h = uVar3;\n            if (((uVar3 != 0xffffffff) && (arg_14h = uVar3 - 1,  uVar4 == 0)) && (arg_14h < 0)) {\n                if ((uVar4 & 0xffff) / arg_14h == 0) {\n                    uVar3 = fcn.004010f5();\n                }\n                uVar1 = (arg_14h & uVar4 & 0xffff) * arg_14h;\n                if ((uVar4 & 0xffff) != 0) {\n                    (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n                }\n                uVar2 = (uVar4 & 0xffff) / arg_14h;\n                if (uVar1 < 0) {\n                    arg_14h = uVar4 & 0xffff;\n                }\n                else if (uVar3 == 0x1d3) {\n                    arg_14h = uVar1;\n                    if (uVar2 != 0) {\n                        arg_14h = uVar2;\n                    }\n                }\n                else {\n                    arg_14h = uVar4 & 0xffff;\n                }\n            }\n        }\n    }\n    return arg_14h;\n}\n",
        "token_count": 466
    },
    "00402caf": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402cd7)\n// WARNING: Removing unreachable block (ram,0x00402d4e)\n\nuint32_t __cdecl fcn.00402caf(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_8h & 0xffff;\n    if ((arg_8h_00 != 0xffff) && (arg_8h_00 = (arg_8h & 0xff) * 0x100,  (arg_8h & 0xff) == 0)) {\n        fcn.00401000(arg_8h_00, arg_8h_00);\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 200
    },
    "004030bc": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403148)\n// WARNING: Removing unreachable block (ram,0x00403129)\n\nuint32_t __cdecl fcn.004030bc(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    arg_8h = arg_8h & 0xffff;\n    uVar5 = arg_8h * 0x10000;\n    uVar3 = uVar5;\n    if ((arg_8h != 0xffff) && (uVar3 = arg_8h,  arg_8h == 0)) {\n        var_4h = arg_14h + 0x640a09c9 ^ 0x644be245;\n        uVar2 = arg_14h >> 3;\n        var_10h = *(arg_14h + 0x26d7425c ^ 0x2694fb4c);\n        var_18h = (uVar5 ^ arg_14h) + 0x1863;\n        if (-1 < uVar5) {\n            for (; var_18h != uVar2 * uVar5; var_18h = var_18h - ((uVar1 & uVar1 >> 2) + 1)) {\n                uVar1 = arg_ch * 2;\n                if (arg_ch < 0x4900) {\n                    return arg_ch;\n                }\n                uVar4 = uVar1 >> 2;\n                *(var_10h + ((uVar4 ^ arg_ch) - 0x6d80)) = *var_4h;\n                var_10h = var_10h + ((uVar1 | arg_ch) - 0xdaff);\n                if (arg_ch < 0x4900) {\n                    return uVar4;\n                }\n                var_4h = var_4h + ((uVar4 | uVar4 & 0x4da6) - 0x247f);\n            }\n            if ((uVar5 != 0xffffffff) &&\n               (*((uVar5 & uVar2) + 0x26d78b5c ^ 0x2694fb4c) = var_10h,  uVar3 = uVar5,  uVar5 == 0xffffffff)) {\n                uVar3 = uVar2;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 662
    },
    "004034ad": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nuint32_t fcn.004034ad(uint32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (param_3 ^ param_1) >> 3 & 0xff;\n    if (((param_3 ^ param_1) == 0xffffffff) && (uVar1 == 0xff)) {\n        fcn.00401ff5(0xff, 0xff);\n    }\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "004010f5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040117c)\n// WARNING: Removing unreachable block (ram,0x0040119e)\n// WARNING: Removing unreachable block (ram,0x0040110f)\n// WARNING: Removing unreachable block (ram,0x00401269)\n// WARNING: Removing unreachable block (ram,0x004011f9)\n// WARNING: Removing unreachable block (ram,0x0040129d)\n\nulong fcn.004010f5(void)\n\n{\n    code *pcVar1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = resource.1;\n    var_ch = *0x437010;\n    for (var_10h = 0x1858; var_10h != 0; var_10h = var_10h + -1) {\n        *var_ch = *pcVar1;\n        var_ch = var_ch + 1;\n        pcVar1 = pcVar1 + 1;\n    }\n    *0x437010 = var_ch;\n    return 0xcd000000000001d3;\n}\n",
        "token_count": 284
    },
    "004012c7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401326)\n// WARNING: Removing unreachable block (ram,0x00401309)\n\nint32_t __cdecl fcn.004012c7(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h + 1 < 1) {\n        (*_sym.imp.KERNEL32.dll_UnregisterWaitEx)(arg_8h + 1, 0);\n    }\n    iVar1 = fcn.00401436();\n    if (iVar1 != -1) {\n        if (iVar1 < '\\x01') {\n            if (iVar1 < 1) {\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = 0;\n            }\n        }\n        else {\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 229
    },
    "004013b1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004013df)\n\nuint32_t fcn.004013b1(uint32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t unaff_retaddr;\n    \n    param_1 = param_1 & 0xffff;\n    uVar1 = (param_1 ^ param_3) & 0xffff;\n    if (param_1 == 0) {\n        if (uVar1 == 0) {\n            fcn.00403008(uVar1);\n        }\n        uVar1 = unaff_retaddr & 0xffff;\n        param_1 = uVar1;\n        if ((uVar1 != 0xffff) && (param_1 = param_2 & 0xffff | 0xe0fc | uVar1,  uVar1 != 0)) {\n            param_1 = uVar1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 220
    },
    "004014c3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040152c)\n// WARNING: Removing unreachable block (ram,0x0040157e)\n// WARNING: Removing unreachable block (ram,0x004015e1)\n// WARNING: Removing unreachable block (ram,0x00401506)\n// WARNING: Removing unreachable block (ram,0x004015a8)\n// WARNING: Removing unreachable block (ram,0x00401545)\n// WARNING: Removing unreachable block (ram,0x004014e8)\n\nuint32_t __cdecl fcn.004014c3(uint noname_0, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint bInitialState;\n    \n    uVar1 = 0x4900 - (arg_ch & 0x5774);\n    arg_8h = arg_ch & 0xffff;\n    if (arg_8h == 0) {\n        if (arg_8h < 0) {\n            uVar1 = 0x4900;\n        }\n        else {\n            uVar3 = (arg_8h ^ arg_10h) * -0x6391799e;\n            uVar1 = arg_8h;\n            if (arg_14h != -1) {\n                if (uVar3 == 0) {\n                    fcn.004030bc(arg_8h, 0x4900, arg_10h & 0x8872d49 | uVar3, 0x4900);\n                }\n                uVar2 = (arg_8h & 0x84) - arg_ch;\n                uVar1 = arg_10h * 2 + 0x7c9b0000;\n                if (uVar2 == 0xff) {\n                    (*_sym.imp.KERNEL32.dll_CreateEventA)(0x4900, uVar3 + 7, (uVar1 ^ 0xf7000000) + 0xff, uVar1 * 0x10);\n                }\n                if (uVar3 < 1) {\n                    uVar1 = uVar2;\n                }\n                else {\n                    uVar1 = uVar2;\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 535
    },
    "004020e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004021d8)\n// WARNING: Removing unreachable block (ram,0x00402152)\n// WARNING: Removing unreachable block (ram,0x00402120)\n\nuint32_t __cdecl fcn.004020e8(uint32_t arg_8h)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar1 = (arg_8h & 0xffff) % 0x54;\n    uVar3 = uVar1;\n    if (uVar3 == 0) {\n        uVar2 = fcn.004028ea(0, 0x72, 0x72, 0);\n        uVar3 = (arg_8h ^ 0x4c37cd84) & 0xffff;\n        if ((uVar3 != 0xcd83) && (uVar4 = (uVar2 & 0xff) % 0x53,  uVar3 = uVar2 & 0xff,  uVar4 != 0xffff)) {\n            uVar3 = 0;\n            if (uVar4 == 0xffff) {\n                uVar3 = 0;\n            }\n            else {\n                if (uVar1 == 0) {\n                    uVar3 = fcn.004013b1(0, 0, uVar4);\n                    uVar3 = uVar3 & 0xff;\n                }\n                if (0xfb < uVar3) {\n                    uVar3 = (arg_8h ^ uVar4 >> 1) & 0xffff;\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 387
    },
    "0040249c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402531)\n// WARNING: Removing unreachable block (ram,0x00402511)\n// WARNING: Removing unreachable block (ram,0x004024fb)\n\nuint32_t __cdecl fcn.0040249c(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = (arg_8h | arg_14h) & arg_ch + 0xd9000000 & 0xffff;\n    if ((uVar3 == 0) && (arg_ch + 0xd9000000 == 0xd9000000)) {\n        uVar2 = arg_10h * 0x4706 * arg_10h;\n        uVar3 = arg_10h & 0xffff;\n        if (uVar3 == 0) {\n            uVar3 = fcn.00402caf(uVar3, 0xffff6076, uVar3);\n            uVar3 = uVar3 & 0xffff;\n        }\n        arg_ch_00 = arg_10h - (arg_ch & 0xaa000000);\n        if (uVar3 < 0) {\n            uVar3 = uVar2;\n        }\n        else if (arg_ch_00 * 0xe284 < 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar1 = fcn.00402623(arg_ch_00 * 0xe284, arg_ch_00);\n            uVar3 = (arg_ch & uVar2 + 1) - 0x6384 & 0xffff;\n            if (uVar1 < '\\x01') {\n                if (0 < arg_ch_00) {\n                    uVar3 = uVar1;\n                }\n            }\n            else {\n                uVar3 = uVar1;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 477
    },
    "00402623": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004026e2)\n\nuint32_t __cdecl fcn.00402623(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_8h = arg_8h & 0xffff;\n    arg_ch_00 = arg_8h >> 2 & 0xff;\n    uVar1 = arg_ch_00;\n    if ((-1 < arg_ch_00) && (uVar3 = 0,  -1 < arg_8h)) {\n        if (arg_8h == 0) {\n            uVar3 = fcn.004014c3(arg_8h, arg_ch_00, 0, arg_ch_00);\n            uVar3 = uVar3 & 0xff;\n        }\n        uVar2 = (uVar3 | arg_ch_00) * 0x7c840000 * arg_ch;\n        uVar1 = uVar3 * 0x100;\n        if (-1 < uVar3) {\n            if (arg_ch_00 == '\\0') {\n                fcn.0040278f();\n            }\n            uVar1 = uVar2;\n            if ((uVar3 * 0x100 != 0xffff) && (uVar1 = 0,  uVar2 == 0xffffffff)) {\n                (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 359
    },
    "0040278f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027cf)\n// WARNING: Removing unreachable block (ram,0x004027bc)\n// WARNING: Removing unreachable block (ram,0x004027a9)\n\nuint32_t fcn.0040278f(void)\n\n{\n    uint32_t arg_8h;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint lpConsoleTitle;\n    \n    uVar2 = fcn.00403295(0, 0);\n    uVar3 = (uVar2 & 0xff) >> 1;\n    uVar2 = (uVar2 & 0xff) * 0x4df9 & 0xff;\n    if ((((uVar2 != 0xff) && (uVar2 = uVar3,  uVar3 == '\\0')) && (arg_8h = uVar3 * -0x64de,  arg_8h != 0xffffffff)) &&\n       (uVar3 == 0)) {\n        uVar1 = fcn.004012c7(arg_8h, 0, arg_8h, 0);\n        uVar2 = arg_8h;\n        if (arg_8h < 1) {\n            uVar4 = arg_8h ^ uVar1 & 0xff;\n            if (0 < uVar4) {\n                (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)(arg_8h | 0x802600, 0);\n            }\n            if ((uVar1 & 0xff) == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = uVar4;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 407
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402a57)\n// WARNING: Removing unreachable block (ram,0x00402a7b)\n// WARNING: Removing unreachable block (ram,0x00402ac0)\n// WARNING: Removing unreachable block (ram,0x00402a4d)\n// WARNING: Removing unreachable block (ram,0x00402a8c)\n\nuint32_t main(void)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(0, 0);\n    if (uVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x9b39, uVar1 | 0x9f00);\n    }\n    fcn.00402b89(0, 0, 0, 0);\n    uVar1 = fcn.0040249c(0, 0, 0, 0);\n    return 0 % uVar1;\n}\n",
        "token_count": 227
    },
    "00402b89": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c39)\n// WARNING: Removing unreachable block (ram,0x00402c9b)\n// WARNING: Removing unreachable block (ram,0x00402c1a)\n\nulong __cdecl fcn.00402b89(uint32_t arg_8h, uint noname_1, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_14h = arg_14h & 0xff;\n    uVar1 = arg_14h;\n    if (arg_14h == '\\0') {\n        arg_14h = (*_sym.imp.KERNEL32.dll_MoveFileA)(arg_8h & 0xffff | arg_14h, arg_8h & 0xffff & arg_14h);\n        arg_14h = arg_14h & 0xff;\n        if (arg_14h != '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        }\n        var_4h = arg_14h - arg_10h;\n        uVar1 = arg_14h;\n        if ((-1 < arg_14h) && (uVar1 = var_4h ^ 0xd85f0000,  arg_14h = 0,  (uVar1 & 0xffff) == 0)) {\n            arg_14h = 0;\n            if (var_4h < 1) {\n                if (var_4h == 0) {\n                    var_4h = fcn.0040174a(0, 0);\n                }\n                uVar1 = arg_14h;\n                if (arg_8h < 0) {\n                    uVar1 = var_4h;\n                }\n            }\n            else {\n                arg_14h = arg_8h & 0xffff;\n            }\n        }\n    }\n    return CONCAT44(uVar1, arg_14h);\n}\n",
        "token_count": 451
    },
    "00403295": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403397)\n// WARNING: Removing unreachable block (ram,0x00403450)\n// WARNING: Removing unreachable block (ram,0x0040349c)\n// WARNING: Removing unreachable block (ram,0x00403380)\n\nuint32_t __cdecl fcn.00403295(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_ch & 0xff;\n    if (uVar3 == 0) {\n        var_8h = 0x4255d2;\n        var_14h = *((arg_ch & 0xfc) + 0x437010);\n        uVar3 = arg_8h & arg_ch & 0xffff;\n        if (uVar3 == 0) {\n            var_18h = 1;\n            do {\n                if (var_18h == 0) {\n                    if ((arg_8h & 0xffff) != 0) {\n                        return 0;\n                    }\n                    *0x437010 = var_14h;\n                    return uVar3;\n                }\n                *var_14h = *var_8h;\n                iVar2 = (arg_ch & 0xff) * 0xe3 - arg_8h;\n                var_14h = var_14h + ((arg_ch & 0xff) - iVar2) + 1;\n                uVar1 = iVar2 + arg_ch + 0xe7ae;\n                var_8h = var_8h + (arg_ch & 0xff) + uVar1 + -0xe7ad;\n                var_18h = var_18h - ((uVar1 ^ arg_ch & 0xff) - 0xe7ad);\n            } while (iVar2 != -1);\n            uVar3 = arg_ch & 0xff;\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 531
    },
    "00403522": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403617)\n// WARNING: Removing unreachable block (ram,0x004035d5)\n\nulong __cdecl fcn.00403522(uint32_t arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = arg_8h & 0xff;\n    uVar4 = uVar6 * uVar6;\n    uVar2 = uVar6;\n    uVar5 = uVar4;\n    if (uVar4 != 0x8723) {\n        uVar5 = uVar6;\n        if (0xb9 < uVar6) {\n            uVar2 = (uVar6 | arg_14h & 0xff) >> 1;\n            uVar1 = uVar2;\n            uVar5 = uVar6 | arg_14h;\n            if (uVar1 != 0x7e) {\n                uVar3 = (uVar1 & 0x74) - arg_ch;\n                uVar2 = uVar4;\n                if ('s' < uVar3) {\n                    if (uVar3 == 0x74) {\n                        uVar6 = fcn.00401661(arg_10h + 0x38000000U & 0xff);\n                        uVar6 = uVar6 & 0xff;\n                    }\n                    uVar2 = arg_8h & 0xff;\n                    uVar5 = uVar2;\n                    if ((0xb9 < uVar2) && (uVar2 = uVar6,  uVar5 = uVar6 << 0x18,  uVar1 >> 1 != 0x3e)) {\n                        uVar2 = uVar3;\n                    }\n                }\n            }\n        }\n    }\n    return CONCAT44(uVar5, uVar2);\n}\n",
        "token_count": 478
    },
    "00403705": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004037ee)\n// WARNING: Removing unreachable block (ram,0x0040376b)\n// WARNING: Removing unreachable block (ram,0x00403753)\n// WARNING: Removing unreachable block (ram,0x004037db)\n// WARNING: Removing unreachable block (ram,0x0040372f)\n// WARNING: Removing unreachable block (ram,0x0040381c)\n// WARNING: Removing unreachable block (ram,0x004037bf)\n\nint32_t __cdecl fcn.00403705(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h >> 2 == 0) && (-1 < arg_8h)) {\n        if (arg_8h == 0) {\n            fcn.004026f3(0);\n        }\n        uVar1 = fcn.004034ad(0, 0, 0xffffffff);\n        if (uVar1 < 0x100) {\n            arg_8h = 0;\n        }\n        else {\n            arg_8h = 0;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 275
    },
    "00403855": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403b10)\n// WARNING: Removing unreachable block (ram,0x00403a3b)\n// WARNING: Removing unreachable block (ram,0x00403f74)\n// WARNING: Removing unreachable block (ram,0x0040387b)\n// WARNING: Removing unreachable block (ram,0x00403961)\n// WARNING: Removing unreachable block (ram,0x00403b48)\n// WARNING: Removing unreachable block (ram,0x00403c44)\n// WARNING: Removing unreachable block (ram,0x00403ca0)\n// WARNING: Removing unreachable block (ram,0x00403d61)\n// WARNING: Removing unreachable block (ram,0x00403942)\n// WARNING: Removing unreachable block (ram,0x00403cd3)\n// WARNING: Removing unreachable block (ram,0x00403c6b)\n// WARNING: Removing unreachable block (ram,0x00403c28)\n// WARNING: Removing unreachable block (ram,0x00403a7f)\n// WARNING: Removing unreachable block (ram,0x00403912)\n// WARNING: Removing unreachable block (ram,0x004038e6)\n// WARNING: Removing unreachable block (ram,0x004039ee)\n\nuint32_t __cdecl fcn.00403855(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint16_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint8_t *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint Locale;\n    uint lpTimeFmtEnumProc;\n    uint var_4h;\n    \n    uVar9 = arg_8h & 0xff;\n    uVar8 = *((uVar9 * 0xa7 + 0x239a6aed ^ 0x23db4e63) + (uVar9 * (arg_8h ^ arg_ch) + -0x4135fc) * 4) -\n            (uVar9 * -0x59000000 + -0x6e000000);\n    for (var_1ch = (uVar8 - ((uVar9 | 0x2727009f) + 0xd8d8ff01)) - (uVar8 & 0xffff);\n        *(var_1ch + (0xe2 - uVar9) * 2) != 0x5a4d;\n        var_1ch = var_1ch - ((arg_ch & 0xffff) * (arg_ch & 0xffff) + -0x14f24610)) {\n        if (arg_ch != 0x493c) {\n            return arg_ch & 0xffff;\n        }\n    }\n    iVar5 = var_1ch + *(var_1ch + *(var_1ch + 0x3c) + 0x78);\n    var_10h = *(iVar5 + 0x18);\n    var_34h = var_1ch + *(iVar5 + 0x20);\n    do {\n        if (var_10h == 0) {\n            return 0x34;\n        }\n        uVar1 = -(arg_8h ^ 0x49);\n        uVar8 = (uVar1 | 0x8e000000) ^ uVar1;\n        uVar4 = arg_ch ^ arg_8h;\n        var_4ch = (uVar4 + uVar1) - 0x4a33;\n        uVar2 = uVar4 >> 2;\n        for (var_48h = *(var_34h + (uVar1 * (arg_8h & 0xffff) + -0x4b0a) * 4) + var_1ch + (uVar8 - uVar4) + 0x720049de;\n            var_48h[uVar1 + uVar2 + -0x12cc] != (uVar2 + (uVar4 << 8)) - 0xf077; var_48h = var_48h + 1) {\n            var_4ch = (var_4ch << 7 | var_4ch >> 0x19) + (*var_48h ^ 0xe3);\n        }\n        uVar7 = uVar1 + 0x48 + uVar8;\n        if (var_4ch == 0x4a48d5cb) {\n            if (arg_ch == ';') {\n                return arg_ch;\n            }\n            uVar9 = ((arg_ch & 0xff) + arg_ch) - (arg_ch & 0xff);\n            if (arg_ch != '<') {\n                return uVar9;\n            }\n            var_10h = *(((*(iVar5 + 0x24) + ((arg_ch | arg_ch & 0xff) - 0x493c) + var_1ch) -\n                        (((arg_ch & 0xff) - arg_ch) + 0x4900)) +\n                       (((*(iVar5 + 0x18) - var_10h) - ((arg_ch & 0xff | arg_ch) - 0x493c)) -\n                       (((arg_ch & 0xff) - uVar9) + 0x4900)) * 2);\n            var_34h = var_1ch + *(iVar5 + ((arg_ch & uVar9) - 0x4935) * 4);\n            uVar9 = arg_8h | arg_ch & 0xff;\n            if (arg_8h != 0xe2) {\n                return arg_ch;\n            }\n            uVar6 = (arg_ch & 0xff) << 0x10;\n            if (arg_ch < 0x493c) {\n                return uVar6;\n            }\n            uVar3 = (*(var_1ch + *(var_34h + (var_10h - ((uVar9 ^ 0xe2) - 0x1c)) * 4)))\n                              (uVar9 + (arg_ch & 0xff) + -0x13a, uVar9 + 0x1e5f2, 0x1000, (uVar9 | uVar6) - 0x3c00be);\n            if (0xfe < uVar9) {\n                return arg_ch;\n            }\n            *(0x6fa23868 - (arg_ch & 0xff) ^ 0x6fe14820) = uVar3;\n            if (arg_ch == 0x493b) {\n                return arg_ch % uVar9 & 0xff;\n            }\n        }\n        var_34h = var_34h + uVar8 * uVar7 + -0x15fffffc;\n        if (uVar4 << 8 == 0xddff) {\n            return uVar2;\n        }\n        var_10h = var_10h - ((uVar7 & uVar2) - 0x14);\n        if (uVar8 < -0x72000000) {\n            return uVar7;\n        }\n    } while( true );\n}\n",
        "token_count": 1805
    },
    "00401ff5": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402084)\n// WARNING: Removing unreachable block (ram,0x00402030)\n// WARNING: Removing unreachable block (ram,0x0040204d)\n// WARNING: Removing unreachable block (ram,0x004020d6)\n// WARNING: Removing unreachable block (ram,0x00402017)\n// WARNING: Removing unreachable block (ram,0x00402064)\n\nuint __cdecl fcn.00401ff5(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00403522(0xba, 0, 0xba, arg_8h);\n    if ('t' < cVar1) {\n        arg_8h = arg_ch;\n    }\n    return arg_8h;\n}\n",
        "token_count": 197
    },
    "00402acd": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402b1d)\n// WARNING: Removing unreachable block (ram,0x00402af0)\n\nuint32_t __cdecl fcn.00402acd(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_8h & 0xff;\n    uVar1 = 0xb742aa99 - arg_8h_00;\n    uVar2 = uVar1 & 0xff;\n    if (uVar1 == 0xb742a9b7) {\n        fcn.00403855(arg_8h_00, (arg_ch ^ arg_8h) & 0xffff);\n    }\n    if ((uVar1 < -0x48bd5648) && (uVar2 = arg_8h_00,  uVar1 < -0x48bd5648)) {\n        uVar2 = (((uVar1 ^ 0x4a) - uVar1 & 0xffff) + 1) * 0x10000;\n    }\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "00403008": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403025)\n\nuint32_t __cdecl fcn.00403008(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_8h + 0x96000000;\n    uVar1 = fcn.00403705(0);\n    if ((uVar2 == 0x96000000) && (uVar2 = arg_8h + 0x96000000,  (uVar1 & 0xffff) != 0)) {\n        uVar2 = uVar1 & 0xffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "00401661": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401735)\n// WARNING: Removing unreachable block (ram,0x004016fc)\n// WARNING: Removing unreachable block (ram,0x004016bf)\n\nuint32_t __cdecl fcn.00401661(uint32_t arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0x7104;\n    if (((arg_8h & 0xffff) != 0xb9) && (arg_8h_00 = arg_8h | arg_8h & 0xffff | 0x7104,  0x71bd < arg_8h_00)) {\n        uVar1 = (arg_8h_00 + 0x23e1ec4d & 0xffff) >> 2;\n        uVar2 = fcn.00402d6b(arg_8h_00, arg_8h_00);\n        uVar2 = uVar2 & 0xffff;\n        if (uVar1 < -0x7d) {\n            if (arg_8h < 0xba) {\n                uVar2 = arg_8h & 0xffff;\n            }\n            else {\n                uVar2 = uVar1 & 0xff;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 329
    },
    "0040363c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004036f2)\n// WARNING: Removing unreachable block (ram,0x004036dc)\n\nuint32_t __cdecl fcn.0040363c(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_14h_00;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    uVar2 = arg_10h & 0xff;\n    if (((uVar2 < 0x5d) && (arg_14h_00 = arg_10h & 0xff,  uVar2 < 0x5d)) && (uVar2 != 0x5b)) {\n        uVar2 = arg_10h;\n        if (arg_14h_00 < 0x5d) {\n            uVar2 = ((arg_10h ^ 0x72ef30e2) * arg_10h) % arg_10h;\n            uVar1 = arg_10h;\n            if ((arg_10h - arg_14h & 0xff) == 0x5c) {\n                uVar1 = fcn.004021ff(uVar2, uVar2, 0x5c, arg_14h_00);\n            }\n            uVar2 = arg_10h & 0xff;\n            if (arg_14h_00 != 0x5c) {\n                uVar2 = uVar1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 356
    },
    "00402d6b": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e25)\n// WARNING: Removing unreachable block (ram,0x00402d89)\n\nuint32_t __cdecl fcn.00402d6b(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_24h;\n    uint lpCriticalSection;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t *var_8h;\n    uint var_4h;\n    \n    uVar6 = arg_ch ^ 0xda;\n    uVar8 = (arg_ch ^ 0x28) & 0xff;\n    if (0x95 < uVar8) {\n        var_8h = *((uVar6 - 0x7164) * 4 + 0x43700c);\n        uVar7 = arg_ch & arg_8h & 0xcc;\n        for (var_ch = *((uVar8 | uVar6) + 0xedcdfc80 ^ 0xed8d1e62); var_ch != 0;\n            var_ch = var_ch - ((uVar3 * uVar3 & arg_ch) - 0x187)) {\n            uVar2 = arg_ch;\n            uVar4 = uVar2 | (uVar2 | 0xd0fd) - uVar2;\n            if (-0xe01 < uVar4) {\n                return uVar4;\n            }\n            uVar3 = arg_ch;\n            uVar5 = uVar3 - 0x23;\n            *var_8h = var_8h[(arg_ch ^ uVar4) - 0x8041] ^ 0xecd9b8bd;\n            if (arg_ch < 0x71be) {\n                return uVar2 | uVar5;\n            }\n            uVar3 = uVar3 + (uVar3 | 0x69);\n            var_8h[1] = var_8h[(uVar5 | arg_ch) - 0x71be] ^ (uVar5 - (uVar2 | uVar5)) + 0xca56216c;\n            var_8h = var_8h + ((arg_ch & uVar3) - 0xb4);\n            if (uVar3 != 0xbd) {\n                return uVar3 * uVar3;\n            }\n        }\n        if (uVar6 < 0x7165) {\n            uVar8 = 0;\n            if (uVar6 < 0x7165) {\n                pcVar1 = *(uVar6 + 0x6fa1c6c8 ^ 0x6fe14820);\n                if (uVar7 < 0x8c) {\n                    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(-uVar7);\n                }\n                if (uVar7 == 0x8c) {\n                    (*pcVar1)();\n                    uVar8 = uVar6;\n                }\n                else {\n                    uVar8 = 0;\n                }\n            }\n        }\n        else {\n            uVar8 = 0;\n        }\n    }\n    return uVar8;\n}\n",
        "token_count": 766
    },
    "0040174a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "move file"
        ],
        "decompiled_code": "\nuint32_t fcn.0040174a(int32_t param_1)\n\n{\n    bool bVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = param_1 + 0xa8de;\n    iVar2 = (*_sym.imp.KERNEL32.dll_MoveFileA)(param_1, (uVar3 & 0xa8de) - 0xa8de);\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_FindFirstFileA)(iVar2, uVar3 | 0xb38e);\n    }\n    uVar4 = uVar3 * 0x9f & 0xffff;\n    if (uVar3 != 0xa8dd) {\n        if (uVar3 == 0xa8de) {\n            uVar4 = fcn.00402acd(uVar4, 0xa8de);\n            uVar4 = uVar4 & 0xffff;\n        }\n        if (((uVar4 + 0x395445bf & 0xffff) < 0x45c0) &&\n           (bVar1 = 0xa8dd < uVar3,  uVar3 = (uVar4 + 0x395445bf & 0xb3c3) + uVar3 & 0xffff,  bVar1)) {\n            uVar3 = param_1 + 0xa8dd;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 332
    }
}