{
    "null": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401014": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401014(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar3 = arg_8h;\n    arg_8h = 0;\n    iVar1 = *(*(iVar3 + 0x3c) + 0x78 + iVar3);\n    iVar5 = iVar1 + iVar3;\n    var_4h = *(iVar1 + 0x20 + iVar3) + iVar3;\n    iVar1 = *(iVar5 + 0x1c);\n    iVar2 = *(iVar5 + 0x24);\n    if (*(iVar5 + 0x18) != 0) {\n        do {\n            iVar4 = fcn.00401091(*var_4h + iVar3);\n            if (iVar4 == arg_ch) {\n                return *(iVar1 + iVar3 + *(iVar2 + iVar3 + arg_8h * 2) * 4) + iVar3;\n            }\n            arg_8h = arg_8h + 1;\n            var_4h = var_4h + 1;\n        } while (arg_8h < *(iVar5 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 317
    },
    "00435c92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00435c92(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.004372ee();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00437130();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 194
    },
    "00437130": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00437130(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[7] != NULL) && (extraout_ECX != 0x4854c8)) && (extraout_ECX != 0x485488)) &&\n       ((extraout_ECX != 0x485448 && (extraout_ECX != 0x485408)))) {\n        fcn.004372ee();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0xe];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x24) == extraout_ECX)) {\n        *(pcVar1 + 0x24) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043a1a5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 348
    },
    "004011d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004011d6(int32_t param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if ((param_2 != '\\0') && (iVar2 = *(param_1 + 4),  iVar2 != 0)) {\n        cVar1 = *(iVar2 + -1);\n        if ((cVar1 == '\\0') || (cVar1 == -1)) {\n            fcn.0043a720(iVar2 + -1);\n        }\n        else {\n            *(iVar2 + -1) = cVar1 + -1;\n        }\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 186
    },
    "00401208": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nuint * __cdecl fcn.00401208(uint arg_8h)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t arg_ch;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    fcn.00436067(0x82, *(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *extraout_ECX = 0x46c4c0;\n    *(unaff_EBP + -0x1c) = 300;\n    fcn.00401087(unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 1;\n    arg_ch = fcn.0043ba4f(0x2c);\n    *(unaff_EBP + -0x24) = 0;\n    puVar3 = fcn.0042da7e(unaff_EBP + -0x20, arg_ch);\n    iVar4 = fcn.00411420(*puVar3);\n    *(unaff_EBP + -0xd) = 300 < iVar4;\n    while( true ) {\n        fcn.0043b52e();\n        if (*(unaff_EBP + -0xd) == '\\0') break;\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) << 1;\n        *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 1;\n        puVar3 = fcn.0042da7e(unaff_EBP + -0x20, arg_ch);\n        iVar4 = fcn.00411420(*puVar3);\n        *(unaff_EBP + -0xd) = *(unaff_EBP + -0x1c) < iVar4;\n    }\n    cVar1 = *(arg_ch + 1 + *(unaff_EBP + -0x14));\n    if (cVar1 == 'E') {\ncode_r0x00402e54:\n        *(unaff_EBP + -0x18) = 2;\n    }\n    else {\n        if (cVar1 == 'N') {\ncode_r0x00402e4e:\n            *(unaff_EBP + -0x18) = 0;\n            goto code_r0x00402e5b;\n        }\n        if (cVar1 != 'O') {\n            if (cVar1 == 'e') goto code_r0x00402e54;\n            if (cVar1 == 'n') goto code_r0x00402e4e;\n            if (cVar1 != 'o') goto code_r0x00402e5b;\n        }\n        *(unaff_EBP + -0x18) = 1;\n    }\ncode_r0x00402e5b:\n    extraout_ECX[0x18] = *(unaff_EBP + -0x24);\n    iVar2 = fcn.004011fe();\n    extraout_ECX[0x19] = iVar2 + -1;\n    extraout_ECX[0x1a] = *(arg_ch + 3 + *(unaff_EBP + -0x14)) + -0x37;\n    extraout_ECX[0x1b] = *(*(unaff_EBP + 8) + 0x214);\n    uVar5 = fcn.004011b8();\n    extraout_ECX[0x1c] = uVar5;\n    extraout_ECX[0x1d] = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x1e] = *(arg_ch + 5 + *(unaff_EBP + -0x14)) + -0x31;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 1068
    },
    "0040127b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.0040127b(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    int32_t arg_ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    uVar4 = *0x480454;\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x10) = uVar4;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    iVar2 = fcn.00439ec8();\n    if (0x3fff < iVar2) {\n        fcn.0043746d(unaff_EBP + -0x10);\n        iVar3 = fcn.0043b95e(iVar2);\n        fcn.00439e72(iVar3 + 0x1001);\n        iVar2 = iVar2 + -0x1001;\n    }\n    fcn.0043b6b7(*(unaff_EBP + 8));\n    while( true ) {\n        iVar3 = fcn.0043ba4f(8);\n        if (iVar3 == -1) break;\n        if (iVar3 == 0) {\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n            uVar4 = fcn.0042d949(unaff_EBP + 8, 1);\n            *(unaff_EBP + -4) = 1;\n            fcn.0043b667(uVar4);\n            *(unaff_EBP + -4) = 0;\n        }\n        else {\n            uVar4 = fcn.0042d949(unaff_EBP + -0x24, iVar3 + 1);\n            *(unaff_EBP + -0x18) = uVar4;\n            *(unaff_EBP + -4) = 2;\n            uVar4 = fcn.0042da7e(unaff_EBP + -0x20, iVar3 + -1);\n            *(unaff_EBP + -4) = 3;\n            uVar4 = fcn.0043b75d(unaff_EBP + -0x1c, uVar4, *(unaff_EBP + -0x18));\n            *(unaff_EBP + -4) = 4;\n            fcn.0043b667(uVar4);\n            *(unaff_EBP + -4) = 3;\n            fcn.0043b52e();\n            *(unaff_EBP + -4) = 2;\n            fcn.0043b52e();\n            *(unaff_EBP + -4) = 0;\n        }\n        fcn.0043b52e();\n    }\n    if (*(unaff_EBP + -0x14) != iVar2 && iVar2 <= *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x14) = iVar2;\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(extraout_ECX + 500), 0xb1, iVar2 - *(unaff_EBP + -0x14), iVar2);\n    (*pcVar1)(*(extraout_ECX + 500), 0xb7, 0, 0);\n    while( true ) {\n        iVar2 = fcn.0043ba4f(10);\n        if (iVar2 == -1) break;\n        uVar4 = fcn.0042d949(unaff_EBP + -0x20, iVar2 + 1);\n        *(unaff_EBP + -4) = 5;\n        uVar5 = fcn.0042da7e(unaff_EBP + -0x24, iVar2);\n        *(unaff_EBP + -4) = 6;\n        fcn.0043b75d(unaff_EBP + 8, uVar5, uVar4);\n        *(unaff_EBP + -4) = 7;\n        fcn.0043b667();\n        *(unaff_EBP + -4) = 6;\n        fcn.0043b52e();\n        *(unaff_EBP + -4) = 5;\n        fcn.0043b52e();\n        *(unaff_EBP + -4) = 0;\n        fcn.0043b52e();\n    }\n    iVar3 = *(unaff_EBP + -0x10);\n    arg_ch = 0xd;\n    iVar2 = iVar3;\n    while( true ) {\n        iVar2 = fcn.00411685(iVar2, arg_ch);\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 - iVar3;\n        iVar3 = iVar2 + 1;\n        arg_ch = iVar3;\n        uVar4 = fcn.0042d949(unaff_EBP + -0x14, iVar3);\n        *(unaff_EBP + -4) = 8;\n        uVar5 = fcn.0042d43f(10, 1);\n        *(unaff_EBP + 8) = uVar5;\n        *(unaff_EBP + -4) = 9;\n        uVar5 = fcn.0042da7e(unaff_EBP + -0x1c, iVar3);\n        *(unaff_EBP + -4) = 10;\n        uVar5 = fcn.0043b75d(unaff_EBP + -0x20, uVar5, *(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0xb;\n        uVar4 = fcn.0043b75d(unaff_EBP + -0x24, uVar5, uVar4);\n        *(unaff_EBP + -4) = 0xc;\n        fcn.0043b667(uVar4);\n        *(unaff_EBP + -4) = 0xb;\n        fcn.0043b52e();\n        *(unaff_EBP + -4) = 10;\n        fcn.0043b52e();\n        *(unaff_EBP + -4) = 9;\n        fcn.0043b52e();\n        *(unaff_EBP + -4) = 8;\n        fcn.0043b52e();\n        *(unaff_EBP + -4) = 0;\n        fcn.0043b52e();\n        iVar3 = *(unaff_EBP + -0x10);\n        iVar2 = iVar2 + 1 + iVar3;\n    }\n    iVar2 = *(unaff_EBP + -0x28);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 500), 0xc2, 0, *(unaff_EBP + -0x10));\n    if (*(*(iVar2 + 0x268) + -8) != 0) {\n        (**(*(iVar2 + 600) + 0x38))(*(unaff_EBP + -0x10), *(*(unaff_EBP + -0x10) + -8));\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1797
    },
    "00401294": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401294(int32_t param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if ((param_2 != '\\0') && (iVar2 = *(param_1 + 4),  iVar2 != 0)) {\n        cVar1 = *(iVar2 + -1);\n        if ((cVar1 == '\\0') || (cVar1 == -1)) {\n            fcn.0043a720(iVar2 + -2);\n        }\n        else {\n            *(iVar2 + -1) = cVar1 + -1;\n        }\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 185
    },
    "00405172": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405172(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0040504c();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        if (((arg_10h & 3) == 0) &&\n           ((((arg_8h < 0 || (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar2 <= arg_8h)) || (arg_ch < 0)) ||\n            (iVar2 = (*pcVar1)(1),  iVar2 <= arg_ch)))) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 0x12340042;\n        }\n        return uVar3;\n    }\n    uVar3 = (**0x485514)(arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 238
    },
    "0045756c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045756c(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00405506": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00405506(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    if (param_2 == 0) {\n        puVar1 = param_1 + 0x12;\n    }\n    else {\n        puVar1 = param_1 + 0x18;\n    }\n    uVar2 = *puVar1;\n    if (uVar2 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        while (puVar1 = puVar1 + 1,  uVar2 != 0) {\n            uVar2 = *puVar1;\n        }\n    }\n    uVar2 = *puVar1;\n    if (uVar2 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        while (puVar1 = puVar1 + 1,  uVar2 != 0) {\n            uVar2 = *puVar1;\n        }\n    }\n    return *puVar1 + 5 + puVar1 & 0xfffffffc;\n}\n",
        "token_count": 261
    },
    "00405946": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405946(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h;\n    if (*(arg_8h + 0x34) != 0) {\n        var_4h = -(*(*(arg_8h + 0x34) + 0x2c) != 0);\n        while (var_4h != 0) {\n            fcn.004345a2(&var_4h, &var_8h, &arg_8h);\n            iVar2 = *(arg_8h + 0x8c);\n            while (iVar2 != 0) {\n                fcn.0040bbd6(arg_8h);\n                if (*(iVar2 + 4) != 0) {\n                    iVar2 = fcn.00439bdb(*(iVar2 + 4));\n                    fcn.0040bbdf(*(iVar2 + 0x38));\n                }\n                iVar2 = fcn.0040bbf3();\n            }\n            if (*(arg_8h + 0x90) != 0) {\n                iVar2 = fcn.00439bdb(*(arg_8h + 0x90));\n                (**(**(iVar2 + 0x38) + 0xb0))();\n                *(arg_8h + 0x90) = *(iVar2 + 0x38);\n                (**(**(*(iVar2 + 0x38) + 0x88) + 8))(arg_8h, 1);\n            }\n        }\n        var_4h = -(*(*(iVar1 + 0x34) + 0x2c) != 0);\n        while (var_4h != 0) {\n            fcn.004345a2(&var_4h, &var_8h, &arg_8h);\n            if (*(arg_8h + 0x88) != NULL) {\n                (**(**(arg_8h + 0x88) + 0xc))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "00405a61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8ch\n\nuint __cdecl\nfcn.00405a61(uint arg_8h, uint hWndInsertAfter, uint pbstr, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    ushort uVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint *puVar10;\n    int32_t unaff_EBP;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    uint *puVar14;\n    uint *in_FS_OFFSET;\n    uint var_8ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_56h;\n    uint var_50h;\n    uint lpRect;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    puVar14 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x18) = puVar14 + 0x12;\n    if (*(unaff_EBP + 0x10) != 0) {\n        uVar1 = *(puVar14 + 0x12);\n        *(unaff_EBP + -100) = puVar14[2];\n        *(unaff_EBP + -0x60) = puVar14[1];\n        *(unaff_EBP + -0x5c) = *(puVar14 + 3);\n        *(unaff_EBP + -0x5a) = *(puVar14 + 0xe);\n        uVar2 = *(puVar14 + 4);\n        *(unaff_EBP + -0x56) = uVar1;\n        uVar1 = *(puVar14 + 5);\n        puVar10 = puVar14 + 6;\n        *(unaff_EBP + -0x58) = uVar2;\n        *(unaff_EBP + -0x54) = uVar1;\n        puVar14 = unaff_EBP + -100;\n        *(unaff_EBP + -0x18) = puVar10;\n    }\n    iVar4 = *(puVar14 + 10);\n    iVar5 = *(puVar14 + 3);\n    iVar6 = *(puVar14 + 2);\n    *(unaff_EBP + -0x34) = *(puVar14 + 0xe) + iVar4;\n    *(unaff_EBP + -0x40) = iVar6;\n    iVar13 = *(*(unaff_EBP + 8) + 0x1c);\n    *(unaff_EBP + -0x3c) = iVar4;\n    *(unaff_EBP + -0x38) = iVar5 + iVar6;\n    (*_sym.imp.USER32.dll_MapDialogRect)(iVar13, unaff_EBP + -0x40);\n    piVar11 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + 0x10) = 0;\n    if (3 < *(unaff_EBP + 0x20)) {\n        iVar8 = *piVar11;\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + -4;\n        piVar11 = piVar11 + 1;\n        if (iVar8 != 0) {\n            uVar7 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(piVar11, iVar8);\n            *(unaff_EBP + 0x10) = uVar7;\n            piVar11 = piVar11 + iVar8 * 2;\n            *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + iVar8 * -2;\n        }\n    }\n    uVar7 = *0x480454;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x10) = uVar7;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    if ((*(unaff_EBP + 0x18) == 0x37a) || (*(unaff_EBP + 0x18) == 0x37b)) {\n        iVar8 = *piVar11;\n        piVar11 = piVar11 + 3;\n        *(unaff_EBP + -0x2c) = iVar8;\n        *(unaff_EBP + 0x1c) = iVar8 + -0xc;\n        piVar12 = piVar11;\n        if (iVar8 + -0xc != 0) {\n            do {\n                iVar8 = *piVar12;\n                uVar3 = *(piVar12 + 1);\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -6;\n                *(unaff_EBP + -0x28) = iVar8;\n                piVar11 = piVar12 + 6;\n                if (iVar8 == -0x7ffeffff) {\n                    *(unaff_EBP + -0x20) = *piVar11;\n                    iVar13 = piVar12 + 0x16;\n                    *(unaff_EBP + -0x24) = *(piVar12 + 10);\n                    fcn.0043b6b7();\n                    *(unaff_EBP + -0x1c) = uVar3;\n                    iVar8 = *(*(unaff_EBP + -0x10) + -8);\n                    *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + (-0x11 - iVar8);\n                    piVar11 = piVar12 + iVar8 + 0x17;\n                }\n                else {\n                    iVar8 = fcn.0043a6f7(0x1c);\n                    *(unaff_EBP + -0x30) = iVar8;\n                    *(unaff_EBP + -4) = 1;\n                    if (iVar8 == 0) {\n                        uVar7 = 0;\n                    }\n                    else {\n                        iVar13 = *(unaff_EBP + -0x14);\n                        uVar7 = fcn.0040bbb0();\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                piVar12 = piVar11;\n            } while (*(unaff_EBP + 0x1c) != 0);\n            iVar8 = *(unaff_EBP + -0x2c);\n        }\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) - iVar8;\n        *(unaff_EBP + 0x18) = *(unaff_EBP + 0x18) + 0xfffc;\n    }\n    uVar7 = 0;\n    if (**(unaff_EBP + -0x18) == 0x7b) {\n        uVar9 = (*_sym.imp.ole32.dll_CLSIDFromString)();\n    }\n    else {\n        uVar9 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(*(unaff_EBP + -0x18), unaff_EBP + -0x50, iVar13);\n    }\n    *(unaff_EBP + 0x1c) = uVar9;\n    fcn.0044a064(piVar11, *(unaff_EBP + 0x20), 0);\n    iVar4 = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + 0x14) = 0;\n    if (((-1 < *(unaff_EBP + 0x1c)) && (iVar13 = fcn.00405f87(),  iVar13 != 0)) &&\n       (iVar13 = fcn.00406195(0, unaff_EBP + -0x50, 0, *puVar14, unaff_EBP + -0x40, *(puVar14 + 4), \n                              -(iVar4 != 0x378) & unaff_EBP - 0x8cU, *(unaff_EBP + 0x18) == 0x377, *(unaff_EBP + 0x10), \n                              unaff_EBP + 0x14),  iVar13 != 0)) {\n        fcn.00408444(1);\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(*(unaff_EBP + 0x14) + 0x20), *(unaff_EBP + 0xc), 0, 0, 0, 0, 0x13);\n        *(*(unaff_EBP + 0x14) + 0x8c) = *(unaff_EBP + -0x14);\n        fcn.0043b667(unaff_EBP + -0x10);\n        *(*(unaff_EBP + 0x14) + 0x90) = *(unaff_EBP + -0x1c);\n        *(*(unaff_EBP + 0x14) + 0x94) = *(unaff_EBP + -0x20);\n        *(*(unaff_EBP + 0x14) + 0x98) = *(unaff_EBP + -0x24);\n    }\n    if (*(unaff_EBP + 0x10) != 0) {\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + 0x10));\n    }\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar7 = *(*(unaff_EBP + 0x14) + 0x20);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0044a0dd();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 2419
    },
    "00405f87": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nbool fcn.00405f87(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h_2;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (*(extraout_ECX + 0x34) == 0) {\n        iVar1 = fcn.00456c34();\n        uVar2 = (**(**(iVar1 + 0x1038) + 8))(extraout_ECX);\n        *(extraout_ECX + 0x34) = uVar2;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if ((*(extraout_ECX + 0x34) != 0) && (iVar1 = extraout_ECX,  extraout_ECX != 0)) {\n        while ((*(iVar1 + 0x24) & 0x100) == 0) {\n            *(iVar1 + 0x24) = *(iVar1 + 0x24) | 0x100;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar1 + 0x1c));\n            iVar1 = fcn.00436a76(uVar2);\n            iVar3 = iVar1;\n            if (iVar1 != 0) {\n                iVar3 = *(iVar1 + 0x1c);\n            }\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            if (((uVar4 & 0x40000000) == 0) || (iVar1 == 0)) break;\n        }\n    }\n    iVar1 = *(extraout_ECX + 0x34);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1 != 0;\n}\n",
        "token_count": 539
    },
    "004060b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.004060b7(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlContainer.0;\n    pcVar1 = extraout_ECX[0xb];\n    *(unaff_EBP + -4) = 1;\n    iVar2 = -(pcVar1 != NULL);\n    *(unaff_EBP + -0x10) = iVar2;\n    while (iVar2 != 0) {\n        fcn.004345a2();\n        if (*(*(unaff_EBP + -0x14) + 0x88) == 0) {\n            fcn.00434560();\n            if (*(unaff_EBP + -0x14) != NULL) {\n                (**(**(unaff_EBP + -0x14) + 4))(1);\n            }\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n    }\n    iVar2 = -(extraout_ECX[0xb] != NULL);\n    *(unaff_EBP + -0x10) = iVar2;\n    while (iVar2 != 0) {\n        fcn.004345a2();\n        if (*(unaff_EBP + -0x14) != NULL) {\n            (**(**(unaff_EBP + -0x14) + 4))(1);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n    }\n    fcn.004343cf();\n    fcn.0045b243(extraout_ECX + 0x11);\n    *(unaff_EBP + -4) = 0;\n    fcn.004343fa();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043a1a5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 548
    },
    "00406706": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406706(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = -(*(in_ECX + 0x2c) != 0);\n    while (var_4h != 0) {\n        fcn.004345a2(&var_4h, &var_ch, &var_8h);\n        fcn.00408444(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00407176": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t * fcn.00407176(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(extraout_ECX + 4);\n    if (extraout_ECX[3] == 0) {\n        iVar3 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.00433177(extraout_ECX + 2, extraout_ECX[1], iVar3);\n        iVar3 = extraout_ECX[1];\n        piVar2 = (iVar3 + -1) * *extraout_ECX + 4 + iVar1;\n        if (-1 < iVar3 + -1) {\n            do {\n                *piVar2 = extraout_ECX[3];\n                extraout_ECX[3] = piVar2;\n                piVar2 = piVar2 - *extraout_ECX;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    piVar2 = extraout_ECX[3];\n    extraout_ECX[3] = *piVar2;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(extraout_ECX + 4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return piVar2;\n}\n",
        "token_count": 439
    },
    "0040723c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nuint32_t __cdecl\nfcn.0040723c(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_ch)\n\n{\n    ushort *puVar1;\n    int32_t *arg_10h;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint arg_8h;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h_2;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t iVar9;\n    uint noname_6_00;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint in_stack_ffffffd0;\n    uint var_28h;\n    uint var_1ch_2;\n    uint var_18h;\n    uint var_14h_2;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    arg_10h = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    uVar6 = *(unaff_EBP + 8);\n    noname_6_00 = arg_8h;\n    iVar4 = fcn.0040744e(arg_8h, uVar6, arg_10h);\n    if (iVar4 == 0) {\n        uVar5 = 0;\n        goto code_r0x0040743d;\n    }\n    puVar2 = *(unaff_EBP + 0x10);\n    if (puVar2 != NULL) {\n        *puVar2 = arg_8h;\n        iVar9 = *arg_10h;\n        if (-1 < iVar9) {\n            if (iVar9 < 2) {\n                uVar6 = *(iVar4 + 0x10);\n            }\n            else {\n                if (iVar9 != 2) goto code_r0x00407299;\n                uVar6 = *(iVar4 + 0x14);\n            }\n            puVar2[1] = uVar6;\n        }\ncode_r0x00407299:\n        uVar5 = puVar2[1] != 0;\n        goto code_r0x0040743d;\n    }\n    iVar9 = *arg_10h;\n    iVar7 = *(iVar4 + 0x24);\n    *(unaff_EBP + 0x10) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar5 = iVar7 != -1;\n    *(unaff_EBP + -0x18) = uVar5;\n    if (iVar9 == 0) {\n        iVar9 = unaff_EBP + -0x40;\n        fcn.0040d697();\n        *(unaff_EBP + -0x30) = 0;\n        if (*(unaff_EBP + -0x18) == 0) {\n            iVar7 = arg_10h[2];\n        }\n        else {\n            fcn.00410d20(unaff_EBP + -0x30, arg_10h[2], 0x10);\n            iVar7 = *(unaff_EBP + -0x28) + 1;\n            *(unaff_EBP + -0x28) = iVar7;\n            uVar8 = fcn.0043a6f7(iVar7 * 0x10);\n            *(unaff_EBP + -0x30) = uVar8;\n            fcn.00410d20(uVar8, *arg_10h[2], (*(unaff_EBP + -0x28) + 0xfffffff) * 0x10);\n            puVar1 = *(unaff_EBP + -0x28) * 0x10 + -0x10 + *(unaff_EBP + -0x30);\n            uVar8 = *(unaff_EBP + 8);\n            *puVar1 = 3;\n            *(puVar1 + 4) = uVar8;\n            iVar7 = unaff_EBP + -0x30;\n        }\n        uVar6 = fcn.00463d78(iVar4, 1, unaff_EBP + -0x40, iVar7, unaff_EBP + -0x1c, iVar9, noname_6_00, uVar6, arg_10h, \n                             unaff_EDI, unaff_ESI, unaff_EBX, var_30h, in_stack_ffffffd0, var_28h);\n        *(unaff_EBP + -0x14) = uVar6;\n        *(unaff_EBP + 0x10) = *(unaff_EBP + -0x38);\n        if (*(unaff_EBP + -0x18) != 0) {\n            fcn.0043a720(*(unaff_EBP + -0x30));\n        }\ncode_r0x0040741d:\n        if (((*(unaff_EBP + -0x14) < 0) && (arg_10h[4] != NULL)) && (*(unaff_EBP + -0x1c) != -1)) {\n            *arg_10h[4] = *(unaff_EBP + -0x1c);\n        }\n    }\n    else {\n        if (iVar9 == 1) {\n            pcVar3 = *(iVar4 + 0x10);\n            *(unaff_EBP + -0x14) = 1;\n            if (uVar5 == 0) {\n                uVar6 = (*pcVar3)(unaff_EBP + -0x14);\n            }\n            else {\n                uVar6 = (*pcVar3)(*(unaff_EBP + 8));\n            }\n            *(unaff_EBP + 0x10) = uVar6;\n            iVar4 = *(unaff_EBP + -0x14);\ncode_r0x00407347:\n            *(unaff_EBP + -0x14) = iVar4 == 0;\n            goto code_r0x0040741d;\n        }\n        if (iVar9 == 2) {\n            if (uVar5 == 0) {\n                uVar6 = (**(iVar4 + 0x14))();\n            }\n            else {\n                uVar6 = (**(iVar4 + 0x14))(*(unaff_EBP + 8));\n            }\n            *(unaff_EBP + -0x14) = 0;\n            *(unaff_EBP + 0x10) = uVar6;\n        }\n        else if (iVar9 == 3) {\n            pcVar3 = *(iVar4 + 0x10);\n            iVar4 = arg_10h[8];\n            *(unaff_EBP + -0x14) = 1;\n            if (uVar5 == 0) {\n                uVar6 = (*pcVar3)(arg_10h[7], iVar4, unaff_EBP + -0x14);\n            }\n            else {\n                uVar6 = (*pcVar3)(*(unaff_EBP + 8));\n            }\n            *(unaff_EBP + 0x10) = uVar6;\n            iVar4 = *(unaff_EBP + -0x14);\n            goto code_r0x00407347;\n        }\n    }\n    arg_10h[6] = *(unaff_EBP + -0x14);\n    uVar5 = *(unaff_EBP + 0x10);\ncode_r0x0040743d:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 1926
    },
    "0040781e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nuint __cdecl\nfcn.0040781e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_38h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar6 = *(unaff_EBP + 8);\n    extraout_ECX[8] = 0;\n    if (iVar6 != 0) {\n        extraout_ECX[9] = iVar6;\n        *(iVar6 + 0x38) = extraout_ECX;\n    }\n    iVar6 = fcn.004569a4();\n    if ((*(iVar6 + 0x114) == 0) && (iVar6 = fcn.0045858f(),  iVar6 == 0)) {\n        uVar7 = 0x80004005;\n        goto code_r0x00407aab;\n    }\n    iVar6 = fcn.00407d18(*(unaff_EBP + 0xc), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), *(unaff_EBP + 0x2c));\n    *(unaff_EBP + 8) = iVar6;\n    if (-1 < iVar6) {\n        extraout_ECX[10] = *(unaff_EBP + 0x20);\n        piVar2 = *(unaff_EBP + 0x1c);\n        if (piVar2 == NULL) {\n            fcn.00442d20(0);\n            piVar2 = extraout_ECX[0x13];\n            iVar6 = *piVar2;\n            *(unaff_EBP + -4) = 0;\n            (**(iVar6 + 0x48))(piVar2, 1, unaff_EBP + -0x14);\n            fcn.004527c6(unaff_EBP + -0x14);\n            iVar6 = **(unaff_EBP + 0x18);\n            iVar3 = (*(unaff_EBP + 0x18))[1];\n            *(unaff_EBP + -0x24) = iVar6;\n            *(unaff_EBP + -0x1c) = iVar6 + *(unaff_EBP + -0x14);\n            *(unaff_EBP + -0x20) = iVar3;\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x10) + iVar3;\n            *(unaff_EBP + -4) = 0xffffffff;\n            extraout_ECX[0xb] = *(unaff_EBP + -0x24);\n            extraout_ECX[0xc] = *(unaff_EBP + -0x20);\n            extraout_ECX[0xd] = *(unaff_EBP + -0x1c);\n            extraout_ECX[0xe] = *(unaff_EBP + -0x18);\n            fcn.00442d92();\n        }\n        else {\n            iVar6 = *piVar2;\n            iVar3 = **(unaff_EBP + 0x18);\n            iVar4 = (*(unaff_EBP + 0x18))[1];\n            *(unaff_EBP + -0x18) = piVar2[1] + iVar4;\n            *(unaff_EBP + -0x24) = iVar3;\n            *(unaff_EBP + -0x1c) = iVar6 + iVar3;\n            *(unaff_EBP + -0x20) = iVar4;\n            extraout_ECX[0xb] = *(unaff_EBP + -0x24);\n            extraout_ECX[0xc] = *(unaff_EBP + -0x20);\n            extraout_ECX[0xd] = *(unaff_EBP + -0x1c);\n            extraout_ECX[0xe] = *(unaff_EBP + -0x18);\n        }\n        extraout_ECX[0x1a] = 0x30000;\n        if ((extraout_ECX[0x1c] & 0x1000U) != 0) {\n            extraout_ECX[0x1a] = 0x30001;\n        }\n        if ((extraout_ECX[0x1c] & 0x400U) != 0) {\n            *(unaff_EBP + 0x17) = *(unaff_EBP + 0x17) & 0xef;\n        }\n        iVar6 = *(unaff_EBP + 8);\n        extraout_ECX[0x1b] = extraout_ECX[0x1a] & *(unaff_EBP + 0x14);\n        if (iVar6 != 1) {\n            iVar6 = fcn.004080cb(extraout_ECX + 0xf, extraout_ECX + 0x33);\n            extraout_ECX[0x18] = iVar6;\n            iVar6 = fcn.004080cb(0x472e30, extraout_ECX + 0x32);\n            extraout_ECX[0x19] = iVar6;\n        }\n        iVar6 = fcn.004080cb(0x472de0, extraout_ECX + 0x35);\n        extraout_ECX[0x21] = iVar6;\n        fcn.00407718();\n        ppiVar1 = extraout_ECX + 0x14;\n        iVar6 = (***extraout_ECX[0x13])(extraout_ECX[0x13], 0x472e40, ppiVar1);\n        *(unaff_EBP + 8) = iVar6;\n        pcVar5 = _sym.imp.USER32.dll_OffsetRect;\n        if (iVar6 < 0) {\ncode_r0x00407a1f:\n            piVar2 = *ppiVar1;\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 8))(piVar2);\n                *ppiVar1 = NULL;\n            }\n            fcn.00408133(extraout_ECX + 0xf, extraout_ECX[0x18]);\n            fcn.00408133(0x472e30, extraout_ECX[0x19]);\n            fcn.00408133(0x472de0, extraout_ECX[0x21]);\n            extraout_ECX[0x18] = 0;\n            extraout_ECX[0x19] = 0;\n            extraout_ECX[0x21] = 0;\n            (**(*extraout_ECX[0x13] + 8))(extraout_ECX[0x13]);\n            iVar6 = *(unaff_EBP + 8);\n            extraout_ECX[0x13] = 0;\n            if (iVar6 < 0) goto code_r0x00407aa7;\n        }\n        else {\n            if ((*(unaff_EBP + 0x17) & 0x10) == 0) {\n                (*_sym.imp.USER32.dll_OffsetRect)(extraout_ECX + 0xb, 0xffff8300, 0xffff8300);\n                iVar6 = (**(*extraout_ECX + 0x54))(0xfffffffb, 0);\n                *(unaff_EBP + 8) = iVar6;\n                if (-1 < iVar6) {\n                    iVar6 = (**(*extraout_ECX + 0x54))(0xfffffffd, 0);\n                    *(unaff_EBP + 8) = iVar6;\n                    if (-1 < iVar6) {\n                        (*pcVar5)(extraout_ECX + 0xb, 32000, 32000);\n                        uVar7 = (**(**ppiVar1 + 0x1c))(*ppiVar1, extraout_ECX + 0xb, extraout_ECX + 0xb);\n                        *(unaff_EBP + 8) = uVar7;\n                        goto code_r0x00407a0f;\n                    }\n                }\n                goto code_r0x00407a1f;\n            }\n            uVar7 = (**(*extraout_ECX + 0x54))(0xfffffffb, 0);\n            *(unaff_EBP + 8) = uVar7;\ncode_r0x00407a0f:\n            if (*(unaff_EBP + 8) < 0) goto code_r0x00407a1f;\n            fcn.0040830b();\n        }\n        fcn.0040847a();\n        if (*(unaff_EBP + 0x10) != 0) {\n            (**(*extraout_ECX + 0x80))(*(unaff_EBP + 0x10));\n        }\n        (**(*extraout_ECX + 0x78))(0, *(unaff_EBP + 0x14) & 0x8800000 | extraout_ECX[0x1b], 0);\n    }\ncode_r0x00407aa7:\n    uVar7 = *(unaff_EBP + 8);\ncode_r0x00407aab:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 2177
    },
    "00408133": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408133(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((arg_ch != 0) && (puVar1 = in_ECX[0x13],  puVar1 != NULL)) {\n        var_8h = in_ECX;\n        iVar2 = (***puVar1)(puVar1, 0x472ed0, &var_8h);\n        if (-1 < iVar2) {\n            var_4h = NULL;\n            iVar2 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n            if (-1 < iVar2) {\n                (**(*var_4h + 0x18))(var_4h, arg_ch);\n                (**(*var_4h + 8))(var_4h);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00408191": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00408191(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = *0x471fa0;\n    arg_8h[1] = *0x471fa4;\n    arg_8h[2] = *0x471fa8;\n    arg_8h[3] = *0x471fac;\n    var_ch = NULL;\n    iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x472ef0, &var_ch);\n    if (-1 < iVar1) {\n        (**(*var_ch + 0x10))(var_ch, 1, arg_8h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    var_14h = NULL;\n    iVar1 = fcn.00411a10(arg_8h, 0x471fa0, 0x10);\n    if ((iVar1 == 0) && (iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x472ee0, &var_14h),  -1 < iVar1)) {\n        var_4h = NULL;\n        iVar1 = (**(*var_14h + 0xc))(var_14h, &var_4h);\n        if (-1 < iVar1) {\n            iVar1 = (**(*var_4h + 0xc))(var_4h, &var_10h);\n            if (-1 < iVar1) {\n                uVar2 = 0;\n                if (*(var_10h + 0x30) != 0) {\n                    do {\n                        iVar1 = (**(*var_4h + 0x24))(var_4h, uVar2, &var_1ch);\n                        if ((-1 < iVar1) && ((var_1ch & 7) == 3)) {\n                            var_8h = NULL;\n                            iVar1 = (**(*var_4h + 0x20))(var_4h, uVar2, &var_20h);\n                            if ((-1 < iVar1) && (iVar1 = (**(*var_4h + 0x38))(var_4h, var_20h, &var_8h),  -1 < iVar1)) {\n                                iVar1 = (**(*var_8h + 0xc))(var_8h, &var_18h);\n                                if (-1 < iVar1) {\n                                    *arg_8h = *var_18h;\n                                    arg_8h[1] = var_18h[1];\n                                    arg_8h[2] = var_18h[2];\n                                    arg_8h[3] = var_18h[3];\n                                    (**(*var_8h + 0x4c))(var_8h, var_18h);\n                                }\n                                (**(*var_8h + 8))(var_8h);\n                            }\n                            break;\n                        }\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < *(var_10h + 0x30));\n                }\n                (**(*var_4h + 0x4c))(var_4h, var_10h);\n            }\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_14h + 8))(var_14h);\n    }\n    iVar1 = fcn.00411a10(arg_8h, 0x471fa0, 0x10);\n    return iVar1 != 0;\n}\n",
        "token_count": 885
    },
    "004084b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004084b7(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + 0x24);\n    *(param_1 + 0x20) = 0;\n    if (piVar1 != NULL) {\n        if (piVar1[7] != 0) {\n            piVar1 = (**(*piVar1 + 0x80))();\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(*(param_1 + 0x24) + 0x1c));\n            if ((iVar2 != 0) && (*piVar1 != 0)) {\n                fcn.00439b23();\n            }\n            fcn.00436af4();\n        }\n        *(*(param_1 + 0x24) + 0x38) = 0;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00409823": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409823(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (*param_1 != NULL) {\n        fcn.00409852();\n        piVar1 = *param_1;\n        if (piVar1 != NULL) {\n            *param_1 = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n        piVar1 = param_1[1];\n        if (piVar1 != NULL) {\n            param_1[1] = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00409ea4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409ea4(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = 0;\n    uVar3 = 0;\n    uVar1 = *(*(param_1 + 8) + 4);\n    if (uVar1 != 0) {\n        do {\n            if ((*(**(param_1 + 8) + 4 + uVar3 * 8) != '\\0') && (iVar2 = fcn.00409ed8(uVar3),  iVar2 < 0)) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 182
    },
    "00409f10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nint32_t fcn.00409f10(void)\n\n{\n    int16_t iVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *extraout_ECX;\n    uint32_t arg_28h;\n    uint *puVar7;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar8;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint *noname_1;\n    uint uVar9;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x409f1a;\n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = &fcn.00409f10::var_28h;\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x14) = 0;\n    puVar7 = *(unaff_EBP + 8);\n    uVar9 = 0x480f18;\n    ppcVar2 = *puVar7;\n    *(unaff_EBP + -4) = 0;\n    noname_1 = puVar7;\n    var_28h = unaff_EDI;\n    var_24h = unaff_ESI;\n    iVar3 = (**ppcVar2)();\n    *(unaff_EBP + 8) = iVar3;\n    if (iVar3 < 0) {\n        piVar6 = *(unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        iVar3 = *(unaff_EBP + 8);\n        goto code_r0x0040a1b0;\n    }\n    iVar3 = extraout_ECX[4];\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n        ppcVar2 = *puVar7;\n        *(unaff_EBP + -4) = 1;\n        iVar3 = (**ppcVar2)(puVar7, 0x480f08, unaff_EBP + -0x1c);\n        if ((-1 < iVar3) &&\n           (iVar3 = (**(**(unaff_EBP + -0x1c) + 0xc))\n                              (*(unaff_EBP + -0x1c), extraout_ECX + 3, extraout_ECX + 4, extraout_ECX + 5),  -1 < iVar3)\n           ) {\n            piVar6 = *(unaff_EBP + -0x1c);\n            *(extraout_ECX + 6) = 0;\n            *(unaff_EBP + -4) = 0;\n            if (piVar6 != NULL) {\n                (**(*piVar6 + 8))(piVar6);\n            }\n            goto code_r0x00409fd6;\n        }\n        piVar6 = *(unaff_EBP + -0x1c);\n        *(unaff_EBP + -4) = 0;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\ncode_r0x0040a19d:\n        piVar6 = *(unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n    }\n    else {\n        *(extraout_ECX + 6) = 1;\ncode_r0x00409fd6:\n        iVar3 = extraout_ECX[3];\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -4) = 2;\n        uVar4 = fcn.0043a6f7(iVar3 * 0x34);\n        *(unaff_EBP + -0x18) = uVar4;\n        uVar8 = 0;\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + -0x18) == 0) {\n            piVar6 = *(unaff_EBP + -0x14);\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        else {\n            *(unaff_EBP + -0x24) = *(unaff_EBP + -0x18);\n            *(unaff_EBP + -0x20) = 0;\n            while (uVar8 < extraout_ECX[3]) {\n                iVar3 = uVar8 * 0x30;\n                if ((*(extraout_ECX[4] + iVar3 + 0x10) < 0x401) && (*(extraout_ECX[4] + iVar3 + 0x14) != 0xd)) {\n                    puVar7 = NULL;\n                }\n                else {\n                    *(unaff_EBP + -0x2c) = 0;\n                    *(unaff_EBP + -4) = 4;\n                    puVar7 = fcn.0043a6f7(0x14);\n                    *(unaff_EBP + -4) = 0;\n                    if (puVar7 == NULL) goto code_r0x0040a165;\n                    *puVar7 = 0;\n                    puVar7[1] = str.0:s_f._0_4_;\n                    puVar7[2] = *0x4732cc;\n                    puVar7[3] = *0x4732d0;\n                    puVar7[4] = *0x4732d4;\n                    iVar3 = *(unaff_EBP + -0x20) * 0x30;\n                    *(extraout_ECX[4] + 0x14 + iVar3) = 0xd;\n                    *(extraout_ECX[4] + 0x10 + iVar3) = 4;\n                }\n                iVar1 = *(extraout_ECX[4] + iVar3 + 0x14);\n                if ((iVar1 == 0x81) || (iVar1 == 0x82)) {\n                    piVar6 = extraout_ECX[4] + iVar3 + 0x10;\n                    *piVar6 = *piVar6 + 1;\n                }\n                iVar5 = extraout_ECX[4] + iVar3;\n                arg_28h = (*(iVar5 + 0x10) & 3) + *(iVar5 + 0x10) + *(unaff_EBP + 8);\n                fcn.0040a267(*(unaff_EBP + -0x24), *(iVar5 + 8), arg_28h & 0xffff0000 | *(iVar5 + 0x14), *(iVar5 + 0x10)\n                             , arg_28h & 0xffffff00 | *(iVar5 + 0x16), arg_28h & 0xffffff00 | *(iVar5 + 0x17), 0, \n                             *(unaff_EBP + 8), arg_28h, arg_28h + 4, puVar7);\n                iVar5 = extraout_ECX[4];\n                *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 0x34;\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                *(iVar5 + 4 + iVar3) = *(unaff_EBP + 8);\n                uVar8 = *(unaff_EBP + -0x20);\n                *(unaff_EBP + 8) = arg_28h + 8;\n            }\n            if (*extraout_ECX == 0) {\n                iVar3 = fcn.0040a1c1(1, noname_1, uVar9, unaff_EBP + -0x14, var_28h, var_24h);\n                if (iVar3 < 0) {\n                    fcn.0043a720(*(unaff_EBP + -0x18));\n                    goto code_r0x0040a19d;\n                }\n                *(*extraout_ECX + 4) = 1;\n            }\n            uVar9 = *(unaff_EBP + 8);\n            extraout_ECX[2] = 0;\n            *(unaff_EBP + -4) = 6;\n            iVar3 = fcn.0043a6f7(uVar9);\n            extraout_ECX[2] = iVar3;\n            *(unaff_EBP + -4) = 0;\n            if (extraout_ECX[2] != 0) {\n                iVar3 = fcn.0040a21d(*(unaff_EBP + -0x18), extraout_ECX[3], *extraout_ECX, *(unaff_EBP + 8), \n                                     *(unaff_EBP + -0x14));\n                fcn.0043a720(*(unaff_EBP + -0x18));\n                goto code_r0x0040a19d;\n            }\n            fcn.0043a720(*(unaff_EBP + -0x18));\ncode_r0x0040a165:\n            piVar6 = *(unaff_EBP + -0x14);\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        iVar3 = -0x7ff8fff2;\n    }\ncode_r0x0040a1b0:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 2331
    },
    "0040a48e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040a48e(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*(param_1 + 0x18) == '\\0') {\n        iVar1 = *(*(param_1 + 0x10) + 8);\n        in_EAX = *param_2;\n        if (in_EAX <= *(param_1 + 0xc) + -1 + iVar1) {\n            in_EAX = in_EAX - iVar1;\n            *param_2 = in_EAX;\ncode_r0x0040a4da:\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(param_1 + 0xc) != 0) {\n            puVar2 = *(param_1 + 0x10) + 8;\n            in_EAX = *param_2;\n            do {\n                if (*puVar2 == in_EAX) {\n                    *param_2 = uVar3;\n                    goto code_r0x0040a4da;\n                }\n                uVar3 = uVar3 + 1;\n                puVar2 = puVar2 + 0xc;\n            } while (uVar3 < *(param_1 + 0xc));\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 337
    },
    "0040a730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_140h\n\nuint __cdecl fcn.0040a730(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uchar uVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    double dVar6;\n    code *pcVar7;\n    char cVar8;\n    ulong *puVar9;\n    uint *puVar10;\n    uint uVar11;\n    uint16_t *puVar12;\n    uchar *puVar13;\n    int32_t iVar14;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_140h;\n    uint var_130h;\n    uint var_120h;\n    uint var_110h;\n    uint var_100h;\n    uint var_f0h;\n    uint var_e0h;\n    uint var_d4h;\n    uint var_c4h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_94h;\n    uint var_84h;\n    uint var_74h;\n    uint var_64h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint pvargDest;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x3c) = 0;\n    fcn.0040d697(unaff_EBP + -0x1c);\n    uVar11 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040aeac(uVar11, unaff_EBP + -0x3c);\n    if (*(unaff_EBP + -0x3c) != 3) {\n        iVar14 = *(extraout_ECX + 0x54);\n        *(unaff_EBP + 0xc) = uVar11;\n        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n        pcVar7 = _sym.imp.OLEAUT32.dll_VariantCopy;\n        if (cVar8 != '\\0') {\n            uVar3 = *(*(iVar14 + 0x10) + 0x14 + *(unaff_EBP + 0xc) * 0x30);\n            if (uVar3 < 0x82) {\n                if (uVar3 == 0x81) {\n                    iVar14 = *(extraout_ECX + 0x54);\n                    *(unaff_EBP + 0xc) = uVar11;\n                    cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                    if (cVar8 == '\\0') {\n                        iVar14 = 0;\n                    }\n                    else {\n                        iVar14 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                    }\n                    puVar10 = fcn.0043b59c(iVar14);\n                    uVar11 = *puVar10;\n                    *(unaff_EBP + -4) = 2;\n                    uVar11 = fcn.0040d0c2(uVar11, 8);\n                    *(unaff_EBP + -4) = 3;\n                    fcn.0040d403(uVar11);\n                    (*pcVar7)(unaff_EBP + -0x120);\n                    *(unaff_EBP + -4) = 0;\n                    goto code_r0x0040ae81;\n                }\n                if (uVar3 < 9) {\n                    if (uVar3 == 8) goto code_r0x0040ae1b;\n                    if (uVar3 == 2) {\ncode_r0x0040aa00:\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar12 = NULL;\n                        }\n                        else {\n                            puVar12 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.0040d1bd(puVar12 & 0xffff0000 | *puVar12, 2);\n                        *(unaff_EBP + -4) = 7;\n                        fcn.0040d403(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x110;\n                    }\n                    else if (uVar3 == 3) {\ncode_r0x0040a9a9:\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.0040d1f3(*puVar10, 3);\n                        *(unaff_EBP + -4) = 8;\n                        fcn.0040d403(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0xf0;\n                    }\n                    else if (uVar3 == 4) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = *puVar10;\n                        *(unaff_EBP + -100) = 4;\n                        *(unaff_EBP + -0x5c) = uVar11;\n                        *(unaff_EBP + -4) = 9;\n                        fcn.0040d403(unaff_EBP + -100);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -100;\n                    }\n                    else if (uVar3 == 5) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar9 = NULL;\n                        }\n                        else {\n                            puVar9 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar1 = *puVar9;\n                        *(unaff_EBP + -0x94) = 5;\n                        *(unaff_EBP + -0x8c) = uVar1;\n                        *(unaff_EBP + -4) = 10;\n                        fcn.0040d403(unaff_EBP + -0x94);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x94;\n                    }\n                    else if (uVar3 == 6) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = *(*(iVar14 + 0x10) + 4 + *(unaff_EBP + 0xc) * 0x30) + *(iVar14 + 8);\n                        }\n                        uVar11 = *puVar10;\n                        uVar4 = puVar10[1];\n                        *(unaff_EBP + -0x54) = 6;\n                        *(unaff_EBP + -0x4c) = uVar11;\n                        *(unaff_EBP + -0x48) = uVar4;\n                        *(unaff_EBP + -4) = 0xd;\n                        fcn.0040d403(unaff_EBP + -0x54);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x54;\n                    }\n                    else {\n                        if (uVar3 != 7) goto code_r0x0040ae86;\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar9 = NULL;\n                        }\n                        else {\n                            puVar9 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar1 = *puVar9;\n                        *(unaff_EBP + -0xc4) = 7;\n                        *(unaff_EBP + -0xbc) = uVar1;\n                        *(unaff_EBP + -4) = 0xc;\n                        fcn.0040d403(unaff_EBP + -0xc4);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0xc4;\n                    }\ncode_r0x0040ac88:\n                    (*pcVar7)(iVar14);\n                }\n                else {\n                    if (uVar3 == 0xb) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar12 = NULL;\n                        }\n                        else {\n                            puVar12 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.0040d1bd(puVar12 & 0xffff0000 | *puVar12, 0xb);\n                        *(unaff_EBP + -4) = 0xb;\n                        fcn.0040d403(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x100;\n                        goto code_r0x0040ac88;\n                    }\n                    if (uVar3 == 0xc) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            iVar14 = 0;\n                        }\n                        else {\n                            iVar14 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.0040d082(iVar14);\n                        *(unaff_EBP + -4) = 1;\n                        fcn.0040d403(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x130;\n                        goto code_r0x0040ac88;\n                    }\n                    if (0xf < uVar3) {\n                        if (uVar3 < 0x12) {\n                            iVar14 = *(extraout_ECX + 0x54);\n                            *(unaff_EBP + 0xc) = uVar11;\n                            cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                            if (cVar8 == '\\0') {\n                                puVar13 = NULL;\n                            }\n                            else {\n                                puVar13 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                            }\n                            uVar2 = *puVar13;\n                            *(unaff_EBP + -0xb4) = 0x11;\n                            *(unaff_EBP + -0xac) = uVar2;\n                            *(unaff_EBP + -4) = 6;\n                            fcn.0040d403(unaff_EBP + -0xb4);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0xb4;\n                            goto code_r0x0040ac88;\n                        }\n                        if (uVar3 == 0x12) goto code_r0x0040aa00;\n                        if (uVar3 == 0x13) goto code_r0x0040a9a9;\n                    }\n                }\n            }\n            else {\n                if (uVar3 != 0x82) {\n                    if (uVar3 == 0x83) {\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            puVar10 = fcn.0040aef0(*(unaff_EBP + 0xc));\n                            *(unaff_EBP + -0x38) = *puVar10;\n                            *(unaff_EBP + -0x34) = puVar10[1];\n                            *(unaff_EBP + -0x30) = puVar10[2];\n                            *(unaff_EBP + -0x2c) = puVar10[3];\n                            *(unaff_EBP + -0x28) = *(puVar10 + 4);\n                            *(unaff_EBP + -0x26) = *(puVar10 + 0x12);\n                            dVar6 = *(unaff_EBP + -0x35);\n                            cVar8 = *(unaff_EBP + -0x37);\n                            while (cVar8 != '\\0') {\n                                dVar6 = dVar6 * *0x46fc68;\n                                cVar8 = cVar8 + -1;\n                            }\n                            if (*(unaff_EBP + -0x36) == '\\0') {\n                                dVar6 = -dVar6;\n                            }\n                            *(unaff_EBP + -0x7c) = dVar6;\n                            *(unaff_EBP + -0x84) = 5;\n                            *(unaff_EBP + -4) = 0xe;\n                            fcn.0040d403(unaff_EBP + -0x84);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0x84;\n                            goto code_r0x0040ac88;\n                        }\n                    }\n                    else if (uVar3 == 0x85) {\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            puVar10 = fcn.0040aef0(*(unaff_EBP + 0xc));\n                            *(unaff_EBP + -0x24) = *puVar10;\n                            *(unaff_EBP + -0x34) = 0;\n                            *(unaff_EBP + -0x20) = *(puVar10 + 1);\n                            *(unaff_EBP + -0x2c) = 0;\n                            fcn.0040f0c9(*(unaff_EBP + -0x24), *(unaff_EBP + -0x22), *(unaff_EBP + -0x20), 0, 0, 0);\n                            *(unaff_EBP + -0x74) = 7;\n                            *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x34);\n                            *(unaff_EBP + -4) = 0xf;\n                            fcn.0040d403(unaff_EBP + -0x74);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0x74;\n                            goto code_r0x0040ac88;\n                        }\n                    }\n                    else if (uVar3 == 0x86) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            iVar5 = *(iVar14 + 0x10);\n                            *(unaff_EBP + -0x2c) = 0;\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + iVar5) + *(iVar14 + 8);\n                            *(unaff_EBP + -0x34) = 0;\n                            *(unaff_EBP + -0x24) = *puVar10;\n                            *(unaff_EBP + -0x20) = *(puVar10 + 1);\n                            fcn.0040f0c9(0x76b, 0xc, 0x1e, *(unaff_EBP + -0x24), *(unaff_EBP + -0x22), \n                                         *(unaff_EBP + -0x20));\n                            *(unaff_EBP + -0xa4) = 7;\n                            *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x34);\n                            *(unaff_EBP + -4) = 0x10;\n                            fcn.0040d403(unaff_EBP + -0xa4);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0xa4;\n                            goto code_r0x0040ac88;\n                        }\n                    }\n                    else if (uVar3 == 0x87) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                            *(unaff_EBP + -0x38) = *puVar10;\n                            *(unaff_EBP + -0x34) = puVar10[1];\n                            *(unaff_EBP + -0x30) = puVar10[2];\n                            *(unaff_EBP + -0x2c) = puVar10[3];\n                            fcn.0040f0c9(*(unaff_EBP + -0x38), *(unaff_EBP + -0x36), *(unaff_EBP + -0x34), \n                                         *(unaff_EBP + -0x32), *(unaff_EBP + -0x30), *(unaff_EBP + -0x2e));\n                            *(unaff_EBP + -0xd4) = 7;\n                            *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xe0);\n                            *(unaff_EBP + -4) = 0x11;\n                            fcn.0040d403(unaff_EBP + -0xd4);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0xd4;\n                            goto code_r0x0040ac88;\n                        }\n                    }\n                    goto code_r0x0040ae86;\n                }\ncode_r0x0040ae1b:\n                iVar14 = *(extraout_ECX + 0x54);\n                *(unaff_EBP + 0xc) = uVar11;\n                cVar8 = fcn.0040a48e(unaff_EBP + 0xc);\n                if (cVar8 == '\\0') {\n                    iVar14 = 0;\n                }\n                else {\n                    iVar14 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                }\n                puVar10 = fcn.0043b5ee(iVar14);\n                uVar11 = *puVar10;\n                *(unaff_EBP + -4) = 4;\n                uVar11 = fcn.0040d0c2(uVar11, 8);\n                *(unaff_EBP + -4) = 5;\n                fcn.0040d403(uVar11);\n                (*pcVar7)(unaff_EBP + -0x140);\n                *(unaff_EBP + -4) = 0;\ncode_r0x0040ae81:\n                fcn.0043b52e();\n            }\ncode_r0x0040ae86:\n            fcn.0040d0a2(unaff_EBP + -0x1c);\n            (*pcVar7)(unaff_EBP + -0x1c);\n            goto code_r0x0040ae98;\n        }\n    }\n    fcn.0040d0a2(unaff_EBP + -0x1c);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x1c);\ncode_r0x0040ae98:\n    uVar11 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar11;\n}\n",
        "token_count": 5083
    },
    "0040bb18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0040bb18(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *noname_1;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = 0;\n    noname_1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (***noname_1)();\n    if (iVar2 < 0) {\ncode_r0x0040bb5a:\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    else {\n        if (*extraout_ECX == 0) {\n            iVar2 = fcn.0040a1c1(1, noname_1, 0x480f18, unaff_EBP + -0x10, unaff_ESI, unaff_EBX);\n            if (iVar2 < 0) goto code_r0x0040bb5a;\n            *(*extraout_ECX + 4) = 1;\n        }\n        iVar2 = fcn.0040a21d(extraout_ECX[3], extraout_ECX[4], *extraout_ECX, extraout_ECX[6], *(unaff_EBP + -0x10));\n        *(unaff_EBP + -4) = 0xffffffff;\n        piVar1 = *(unaff_EBP + -0x10);\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 524
    },
    "0040bc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bc00(int32_t **param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t **var_4h;\n    \n    if ((param_1[2] != 0x80010001) && (*param_1 != NULL)) {\n        puVar1 = (*param_1)[0x13];\n        var_4h = param_1;\n        iVar2 = (***puVar1)(puVar1, 0x4732d8, &var_4h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.0040bc83();\n            if (iVar2 != 0) {\n                uVar3 = 0xd;\n                if (param_1[3][0x22] != 0) {\n                    uVar3 = 0x800d;\n                }\n                (**(**param_1 + 0x68))(*param_1, param_1[2], uVar3, iVar2);\n            }\n        }\n        else {\n            (*(*var_4h)[3])(var_4h, param_1[2], param_1[3] != NULL, param_1 + 4);\n            (*(*var_4h)[2])(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "0040c818": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c818(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_10h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = *(arg_10h + 0x1c);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_IsChild)(*(arg_8h + 0x1c), uVar1);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_10h != 0) {\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_10h + 0x1c), 0xffffffec);\n        if ((uVar3 & 0x10000) != 0) {\n            return;\n        }\n        var_4h = fcn.0040c768(arg_10h);\n    }\n    if (arg_ch == arg_10h) {\n        if ((var_4h & 0x20) == 0) {\n            return;\n        }\n        if (arg_ch != 0) {\n            uVar1 = fcn.0040c7eb(arg_8h);\n            iVar2 = fcn.0040c6c4(arg_8h, uVar1);\n            if (((iVar2 != 0) && (iVar2 != arg_10h)) && (uVar3 = fcn.0040c768(iVar2),  (uVar3 & 0x10) != 0))\n            goto code_r0x0040c8be;\n        }\n    }\n    else {\n        if (((arg_ch != 0) && (iVar2 = fcn.0040c768(arg_ch),  iVar2 != 0)) || ((arg_10h != 0 && (var_4h != 0)))) {\ncode_r0x0040c8be:\n            fcn.0040c789(arg_8h);\n        }\n        if ((var_4h & 0x30) == 0) {\n            iVar2 = arg_8h;\n            uVar1 = fcn.0040c7eb(arg_8h);\n            arg_10h = fcn.0040c6c4(arg_8h, uVar1);\n            uVar3 = fcn.0040c768(arg_10h);\n            if ((uVar3 & 0x20) == 0) {\n                return;\n            }\n            iVar4 = fcn.00439fde();\n            if (iVar4 == 0) {\n                return;\n            }\n            goto code_r0x0040c8f7;\n        }\n    }\n    iVar2 = 1;\ncode_r0x0040c8f7:\n    fcn.0040c71b(arg_10h, iVar2);\n    return;\n}\n",
        "token_count": 681
    },
    "0040cd0f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nbool __cdecl\nfcn.0040cd0f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint *in_FS_OFFSET;\n    bool bVar8;\n    uint psa;\n    uint var_ch;\n    uint var_10h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint plLbound;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x40cd19;\n    fcn.00410d00();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &fcn.0040cd0f::var_3ch;\n    pcVar1 = _sym.imp.OLEAUT32.dll_SafeArrayGetElemsize;\n    if ((iVar2 == 0) || (*(unaff_EBP + 0xc) == 0)) {\n        bVar8 = iVar2 == *(unaff_EBP + 0xc);\n        goto code_r0x0040cf6a;\n    }\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(iVar2);\n    *(unaff_EBP + -0x30) = iVar2;\n    iVar3 = (*pcVar1)(*(unaff_EBP + 0xc));\n    pcVar1 = _sym.imp.OLEAUT32.dll_SafeArrayGetUBound;\n    if (iVar2 == iVar3) {\n        if (iVar2 == 0) {\n            bVar8 = true;\n            goto code_r0x0040cf6a;\n        }\n        uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(unaff_EBP + 8));\n        *(unaff_EBP + -0x2c) = uVar4;\n        iVar5 = (*pcVar1)(*(unaff_EBP + 0xc));\n        if (*(unaff_EBP + -0x2c) == iVar5) {\n            *(unaff_EBP + -0x14) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -0x1c) = 0;\n            *(unaff_EBP + -0x20) = 0;\n            *(unaff_EBP + -0x24) = 0;\n            *(unaff_EBP + -0x28) = 0;\n            *(unaff_EBP + -4) = 0;\n            uVar4 = fcn.0043a6f7(iVar2 << 2);\n            *(unaff_EBP + -0x14) = uVar4;\n            uVar4 = fcn.0043a6f7(iVar3 << 2);\n            *(unaff_EBP + -0x18) = uVar4;\n            uVar4 = fcn.0043a6f7(iVar2 << 2);\n            *(unaff_EBP + -0x1c) = uVar4;\n            uVar4 = fcn.0043a6f7(iVar3 << 2);\n            *(unaff_EBP + -0x20) = uVar4;\n            uVar6 = 0;\n            iVar2 = 1;\n            while (pcVar1 = _sym.imp.OLEAUT32.dll_SafeArrayUnaccessData,  uVar6 < *(unaff_EBP + -0x30)) {\n                iVar5 = uVar6 * 4;\n                iVar3 = *(unaff_EBP + -0x14) + iVar5;\n                uVar6 = uVar6 + 1;\n                *(unaff_EBP + -0x38) = iVar3;\n                uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(unaff_EBP + 8), uVar6, iVar3);\n                fcn.0040ccf0(uVar4);\n                iVar3 = *(unaff_EBP + -0x18) + iVar5;\n                *(unaff_EBP + -0x3c) = iVar3;\n                uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(unaff_EBP + 0xc), uVar6, iVar3);\n                fcn.0040ccf0(uVar4);\n                iVar3 = *(unaff_EBP + -0x1c) + iVar5;\n                *(unaff_EBP + -0x34) = iVar3;\n                uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(unaff_EBP + 8), uVar6, iVar3);\n                fcn.0040ccf0(uVar4);\n                piVar7 = iVar5 + *(unaff_EBP + -0x20);\n                uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(unaff_EBP + 0xc), uVar6, piVar7);\n                fcn.0040ccf0(uVar4);\n                iVar3 = **(unaff_EBP + -0x34) - **(unaff_EBP + -0x38);\n                if (iVar3 != *piVar7 - **(unaff_EBP + -0x3c)) {\n                    fcn.0043a720(*(unaff_EBP + -0x14));\n                    fcn.0043a720(*(unaff_EBP + -0x18));\n                    fcn.0043a720(*(unaff_EBP + -0x1c));\n                    fcn.0043a720(*(unaff_EBP + -0x20));\n                    goto code_r0x0040ce73;\n                }\n                iVar2 = iVar2 * (iVar3 + 1);\n            }\n            uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(*(unaff_EBP + 8), unaff_EBP + -0x24);\n            fcn.0040ccf0(uVar4);\n            uVar4 = (*pcVar1)(*(unaff_EBP + 0xc), unaff_EBP + -0x28);\n            fcn.0040ccf0(uVar4);\n            iVar2 = fcn.00411a10(*(unaff_EBP + -0x24), *(unaff_EBP + -0x28), iVar2 * *(unaff_EBP + -0x2c));\n            pcVar1 = _sym.imp.OLEAUT32.dll_SafeArrayGetElement;\n            bVar8 = iVar2 == 0;\n            uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(*(unaff_EBP + 8));\n            fcn.0040ccf0(uVar4);\n            uVar4 = (*pcVar1)(*(unaff_EBP + 0xc));\n            fcn.0040ccf0(uVar4);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0043a720(*(unaff_EBP + -0x14));\n            fcn.0043a720(*(unaff_EBP + -0x18));\n            fcn.0043a720(*(unaff_EBP + -0x1c));\n            fcn.0043a720(*(unaff_EBP + -0x20));\n            goto code_r0x0040cf6a;\n        }\n    }\ncode_r0x0040ce73:\n    bVar8 = false;\ncode_r0x0040cf6a:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return bVar8;\n}\n",
        "token_count": 1931
    },
    "0040cf7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cf7b(int16_t *plLbound, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t cDims;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar1 = plLbound;\n    if ((*plLbound != 0x2011) || (iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(plLbound + 4)),  iVar2 != 1))\n    {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar1);\n        var_8h = 0;\n        cDims = arg_ch;\n        *piVar1 = 0x2011;\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(0x11, 1, &cDims);\n        *(piVar1 + 4) = iVar2;\n        if (iVar2 == 0) {\n            fcn.0042f1c0();\n        }\n        return;\n    }\n    uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(piVar1 + 4), 1, &var_4h);\n    fcn.0040ccf0(uVar3);\n    uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(piVar1 + 4), 1, &plLbound);\n    fcn.0040ccf0(uVar3);\n    iVar2 = plLbound - var_4h;\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    if (iVar2 == arg_ch) {\n        return;\n    }\n    cDims = arg_ch;\n    var_8h = var_4h;\n    uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayAllocDescriptorEx)(*(piVar1 + 4), &cDims);\n    fcn.0040ccf0(uVar3);\n    return;\n}\n",
        "token_count": 466
    },
    "0040d1bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040d1bd(ushort *param_1, int16_t param_2, int16_t param_3)\n\n{\n    if (param_3 == 0xb) {\n        *param_1 = 0xb;\n        if (param_2 == 0) {\n            param_1[4] = 0;\n        }\n        else {\n            param_1[4] = 0xffff;\n        }\n    }\n    else {\n        *param_1 = 2;\n        param_1[4] = param_2;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0040d1f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d1f3(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            if (arg_8h == 0) {\n                in_ECX[4] = 0;\n                return;\n            }\n            in_ECX[4] = 0xffff;\n            return;\n        }\n        *in_ECX = 3;\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 154
    },
    "0040d41d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040d41d(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    ushort *in_ECX;\n    uint32_t uStack24;\n    uint var_ch;\n    \n    uStack24 = 0x40d42c;\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    *in_ECX = 8;\n    if (arg_8h == 0) {\n        *(in_ECX + 4) = 0;\n    }\n    else {\n        uStack24 = arg_8h;\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.00412040();\n        uStack24 = uStack24 & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &stack0xffffffe8, iVar1 + 1);\n        iVar1 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(&stack0xffffffe8);\n        *(in_ECX + 4) = iVar1;\n        if (iVar1 == 0) {\n            fcn.0042f1c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "0040dd81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dd81(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if ((in_ECX[2] == 2) || (arg_ch[2] == 2)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 2;\n    }\n    else if ((in_ECX[2] == 1) || (arg_ch[2] == 1)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 1;\n    }\n    else {\n        uVar2 = in_ECX[1];\n        uVar1 = *arg_ch + *in_ECX;\n        uVar3 = uVar2 + arg_ch[1];\n        if (uVar1 < *in_ECX) {\n            uVar3 = uVar3 + 1;\n        }\n        if ((((uVar2 ^ arg_ch[1]) & 0x80000000) == 0) && (((uVar2 ^ uVar3) & 0x80000000) != 0)) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n        *arg_8h = uVar1;\n        arg_8h[1] = uVar3;\n        arg_8h[2] = uVar2;\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "0040de0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de0d(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if ((in_ECX[2] == 2) || (arg_ch[2] == 2)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 2;\n    }\n    else if ((in_ECX[2] == 1) || (arg_ch[2] == 1)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 1;\n    }\n    else {\n        uVar1 = in_ECX[1];\n        uVar3 = *in_ECX - *arg_ch;\n        uVar2 = uVar1 - arg_ch[1];\n        if (*in_ECX < uVar3) {\n            uVar2 = uVar2 - 1;\n        }\n        if ((((arg_ch[1] ^ uVar1) & 0x80000000) == 0) || (((uVar1 ^ uVar2) & 0x80000000) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *arg_8h = uVar3;\n        arg_8h[1] = uVar2;\n        arg_8h[2] = uVar1;\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "0040dee2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dee2(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (in_ECX[2] == 0) {\n        var_20h = *in_ECX;\n        var_18h = 0;\n        var_1ch = in_ECX[1];\n        if (((var_1ch == 0) && (*in_ECX == 0)) || (arg_ch == 0)) {\n            uVar5 = 0;\n            *arg_8h = 0;\n        }\n        else {\n            if (((var_1ch != 0x80000000) || (*in_ECX != 0)) || (arg_ch != 1)) {\n                var_14h = in_ECX;\n                if (var_1ch < 0) {\n                    uVar3 = fcn.0040de98(&var_2ch);\n                    fcn.0040dc34(uVar3);\n                }\n                uVar5 = fcn.0041413b(arg_ch);\n                if (var_1ch != 0) {\n                    uVar1 = 0x20;\n                    uVar4 = var_1ch & 0x80000000;\n                    while (uVar4 == 0) {\n                        uVar1 = uVar1 - 1;\n                        uVar4 = var_1ch & 1 << (uVar1 - 1U & 0x1f);\n                    }\n                    if (uVar5 == 0) {\n                        uVar2 = 0;\n                    }\n                    else {\n                        uVar2 = 0x20;\n                        uVar4 = uVar5 & 0x80000000;\n                        while (uVar4 == 0) {\n                            uVar2 = uVar2 - 1;\n                            uVar4 = uVar5 & 1 << (uVar2 - 1U & 0x1f);\n                        }\n                    }\n                    if (0x3f < (uVar2 - 1) + uVar1) {\n                        *arg_8h = 0;\n                        arg_8h[1] = 0x80000000;\n                        arg_8h[2] = 1;\n                        return;\n                    }\n                }\n                uVar4 = uVar5 & 0xffff;\n                uVar5 = uVar5 >> 0x10;\n                uVar7 = uVar4 * (var_20h >> 0x10);\n                var_10h = (var_20h >> 0x10) * uVar5;\n                var_4h = var_20h & 0xffff;\n                uVar8 = var_1ch & 0xffff;\n                uVar6 = var_4h * uVar5;\n                var_8h = (var_1ch >> 0x10) * uVar4;\n                var_ch = uVar8 * uVar4;\n                uVar4 = uVar4 * var_4h + uVar6 * 0x10000;\n                var_20h = uVar7 * 0x10000 + uVar4;\n                var_1ch = uVar4 < uVar6 * 0x10000;\n                if (var_20h < uVar4) {\n                    var_1ch = var_1ch + 1;\n                }\n                var_1ch = var_1ch + (uVar6 >> 0x10) + (uVar7 >> 0x10) + var_ch + (var_8h + uVar8 * uVar5) * 0x10000 +\n                                    var_10h;\n                if (((var_14h[1] ^ arg_ch) & 0x80000000) != 0) {\n                    uVar3 = fcn.0040de98(&var_2ch);\n                    fcn.0040dc34(uVar3);\n                }\n                *arg_8h = var_20h;\n                arg_8h[1] = var_1ch;\n                goto code_r0x0040e0b5;\n            }\n            *arg_8h = *in_ECX;\n            uVar5 = in_ECX[1];\n        }\n        arg_8h[1] = uVar5;\n        arg_8h[2] = 0;\n    }\n    else {\n        *arg_8h = *in_ECX;\n        arg_8h[1] = in_ECX[1];\n        var_18h = in_ECX[2];\ncode_r0x0040e0b5:\n        arg_8h[2] = var_18h;\n    }\n    return;\n}\n",
        "token_count": 1167
    },
    "0040e5ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040e5ea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, double *arg_20h)\n\n{\n    bool bVar1;\n    double dVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (9999 < arg_8h) {\n        return 0;\n    }\n    iVar4 = 1;\n    if (arg_ch == 0) {\n        return 0;\n    }\n    if (0xc < arg_ch) {\n        return 0;\n    }\n    if (((arg_8h & 3) == 0) && ((arg_8h % 100 != 0 || (arg_8h % 400 == 0)))) {\n        bVar1 = true;\n        if ((arg_10h == 0x1d) && (arg_ch == 2)) goto code_r0x0040e65f;\n    }\n    else {\n        bVar1 = false;\n    }\n    iVar4 = 0;\n    if (arg_10h == 0) {\n        return 0;\n    }\ncode_r0x0040e65f:\n    iVar3 = *(arg_ch * 4 + 0x480f58);\n    if ((((arg_10h <= (iVar4 - iVar3) + *(arg_ch * 4 + 0x480f5c)) && (arg_14h < 0x18)) && (arg_18h < 0x3c)) &&\n       (arg_1ch < 0x3c)) {\n        uVar5 = arg_8h;\n        iVar3 = (((arg_8h >> 2) + uVar5 / 400 + uVar5 * 0x16d) - uVar5 / 100) + arg_10h + iVar3;\n        if ((arg_ch < 3) && (bVar1)) {\n            iVar3 = iVar3 + -1;\n        }\n        dVar2 = ((arg_14h * 0x3c + arg_18h) * 0x3c + arg_1ch) * *0x46fd20;\n        if (iVar3 + -0xa96c7 < 0) {\n            dVar2 = -dVar2;\n        }\n        *arg_20h = iVar3 + -0xa96c7 + dVar2;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 567
    },
    "0040eaf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040eaf0(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_10h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.0040e727(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_10h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 117
    },
    "0040eb4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040eb4d(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_14h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.0040e727(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_14h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 117
    },
    "0040eb77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040eb77(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_18h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.0040e727(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_18h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 116
    },
    "0040ebd3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ebd3(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_1ch;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.0040e727(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_1ch;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 117
    },
    "0040ec35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ec35(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.0040e727(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_20h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 116
    },
    "0040ec91": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ec91(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.0040e727(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_24h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 109
    },
    "0040ecbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ecbb(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_ch;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.0040e727(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_ch;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 112
    },
    "0040ece5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ece5(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_8h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.0040e727(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 116
    },
    "0040faec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040faec(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_ch;\n    var_4h = arg_14h;\n    var_8h = arg_ch;\n    fcn.0040fc11(arg_8h, 1, &var_8h);\n    if (arg_10h != 0) {\n        fcn.0040fc5b(&arg_ch);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        fcn.00410d20(arg_ch, arg_10h, iVar2 * iVar1);\n        fcn.0040fc71();\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00410197": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410197(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) == 0) {\n        *(param_1 + 4) = 0xffffffff;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 0x20);\n    return;\n}\n",
        "token_count": 77
    },
    "004101dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004101dd(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *unaff_retaddr;\n    \n    if (param_3 != 0) {\n        *(param_1 + 4) = param_2;\n        *(param_1 + 0xc) = *0x471fa0;\n        *(param_1 + 0x10) = *0x471fa4;\n        *(param_1 + 0x14) = *0x471fa8;\n        *(param_1 + 0x18) = *0x471fac;\n        fcn.0045b243(param_1 + 0x1c);\n        fcn.0045b243(param_1 + 8);\n        *(param_1 + 8) = unaff_retaddr;\n        (**(*unaff_retaddr + 4))(unaff_retaddr);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00410220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00410220(int32_t param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    \n    if ((((*(param_1 + 4) != -1) && (*(param_1 + 4) == param_2)) && (*(param_1 + 0x1c) != 0)) &&\n       (iVar1 = fcn.00411a10(param_1 + 0xc, param_3, 0x10),  iVar1 == 0)) {\n        *param_4 = *(param_1 + 0x1c);\n        (**(**(param_1 + 0x1c) + 4))(*(param_1 + 0x1c));\n        return 1;\n    }\n    *param_4 = 0;\n    return 0;\n}\n",
        "token_count": 196
    },
    "00410c52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410c52(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    \n    iStack16 = param_1;\n    uStack24 = 0x410c30;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    while( true ) {\n        iVar1 = *(param_1 + 8);\n        iVar2 = *(param_1 + 0xc);\n        if ((iVar2 == -1) || (iVar2 == param_2)) break;\n        uStack20 = *(iVar1 + iVar2 * 0xc);\n        *(param_1 + 0xc) = uStack20;\n        if (*(iVar1 + 4 + iVar2 * 0xc) == 0) {\n            fcn.00410ce6(0x101);\n            (**(iVar1 + 8 + iVar2 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 265
    },
    "00411824": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00411824(uint param_1)\n\n{\n    if (*0x485c44 == 1) {\n        fcn.00416dd4();\n    }\n    fcn.00416e0d(param_1);\n    (**0x481420)(0xff);\n    return;\n}\n",
        "token_count": 65
    },
    "00412733": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00412733(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t arg_8h;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 * param_2;\n    uVar1 = arg_8h;\n    if (arg_8h < 0xffffffe1) {\n        if (arg_8h == 0) {\n            uVar1 = 1;\n        }\n        uVar1 = uVar1 + 0xf & 0xfffffff0;\n    }\n    do {\n        iVar2 = 0;\n        if (uVar1 < 0xffffffe1) {\n            if (arg_8h < *0x481854 || arg_8h - *0x481854 == 0) {\n                fcn.004147a6(9);\n                iVar2 = fcn.00414be5(arg_8h);\n                fcn.00414807(9);\n                if (iVar2 != 0) {\n                    fcn.004108b0(iVar2, 0, arg_8h);\n                    return iVar2;\n                }\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x487924, 8, uVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        if (*0x485cd8 == 0) {\n            return iVar2;\n        }\n        iVar2 = fcn.00414645(uVar1);\n    } while (iVar2 != 0);\n    return 0;\n}\n",
        "token_count": 358
    },
    "0041347b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041347b(uint8_t *arg_8h, uint32_t arg_ch, uint8_t *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t arg_18h_00;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    bool bVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_18h_00 = arg_18h;\n    if (arg_18h == 0) {\n        arg_18h_00 = *0x481568;\n    }\n    arg_18h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x4877b4);\n    pcVar2 = _sym.imp.KERNEL32.dll_InterlockedDecrement;\n    bVar5 = *0x4877a4 == 0;\n    puVar3 = arg_10h;\n    if (!bVar5) {\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x4877b4);\n        fcn.004147a6(0x13);\n        puVar3 = arg_10h;\n    }\n    while ((arg_18h != 0 && (uVar1 = *puVar3,  uVar1 != 0))) {\n        if (uVar1 == 0x25) {\n            puVar4 = puVar3 + 1;\n            uVar1 = *puVar4;\n            if (uVar1 == 0x23) {\n                puVar4 = puVar3 + 2;\n            }\n            *0x487930 = uVar1 == 0x23;\n            fcn.00413575(*0x10 | *puVar4, arg_14h, &arg_8h, &arg_18h, arg_18h_00);\n        }\n        else {\n            if (((*(*0x481868 + 1 + uVar1 * 2) & 0x80) != 0) && (1 < arg_18h)) {\n                *arg_8h = uVar1;\n                arg_8h = arg_8h + 1;\n                puVar3 = puVar3 + 1;\n                arg_18h = arg_18h - 1;\n            }\n            *arg_8h = *puVar3;\n            arg_8h = arg_8h + 1;\n            arg_18h = arg_18h - 1;\n            puVar4 = puVar3;\n        }\n        puVar3 = puVar4 + 1;\n    }\n    if (bVar5) {\n        (*pcVar2)(0x4877b4);\n    }\n    else {\n        fcn.00414807(0x13);\n    }\n    if (arg_18h == 0) {\n        return 0;\n    }\n    *arg_8h = 0;\n    return arg_ch - arg_18h;\n}\n",
        "token_count": 676
    },
    "00413a43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413a43(uint8_t *arg_8h, int32_t arg_ch, uint8_t **arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t **arg_10h_00;\n    uint32_t *arg_14h_00;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    arg_14h_00 = arg_14h;\n    arg_10h_00 = arg_10h;\n    uVar1 = *arg_8h;\n    do {\n        if ((uVar1 == 0) || (*arg_14h_00 == 0)) {\n            return;\n        }\n        *0x487940 = 0;\n        uVar1 = *arg_8h;\n        uVar5 = 0;\n        puVar3 = arg_8h + 1;\n        do {\n            arg_10h = puVar3;\n            uVar4 = uVar5;\n            uVar5 = uVar4 + 1;\n            puVar3 = arg_10h + 1;\n        } while (*arg_10h == uVar1);\n        arg_14h._1_3_ = arg_14h >> 8;\n        if (uVar1 < 'e') {\n            if (uVar1 == 100) {\n                if (uVar4 == 0) {\n                    *0x487940 = 1;\n                }\n                else if (uVar4 != 1) {\n                    if (uVar4 == 2) {\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x61);\n                    }\n                    else {\n                        if (uVar4 != 3) goto code_r0x00413ac7;\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x41);\n                    }\n                    goto code_r0x00413cfd;\n                }\n                arg_14h = CONCAT31(arg_14h._1_3_, 100);\n                goto code_r0x00413cfd;\n            }\n            if (uVar1 != 0x27) {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x48) {\n                        if (uVar4 == 0) {\n                            *0x487940 = 1;\n                        }\n                        else if (uVar5 != 2) goto code_r0x00413ac7;\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x48);\n                        goto code_r0x00413cfd;\n                    }\n                    if (uVar1 == 0x4d) {\n                        if (uVar4 == 0) {\n                            *0x487940 = 1;\n                        }\n                        else if (uVar4 != 1) {\n                            if (uVar4 == 2) {\n                                arg_14h = CONCAT31(arg_14h._1_3_, 0x62);\n                            }\n                            else {\n                                if (uVar4 != 3) goto code_r0x00413ac7;\n                                arg_14h = CONCAT31(arg_14h._1_3_, 0x42);\n                            }\n                            goto code_r0x00413cfd;\n                        }\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x6d);\n                        goto code_r0x00413cfd;\n                    }\n                    if (uVar1 != 0x61) goto code_r0x00413ac7;\n                }\n                iVar2 = fcn.00419310(arg_8h, \"am/pm\");\n                if (iVar2 == 0) {\n                    arg_10h = arg_8h + 5;\n                }\n                else {\n                    iVar2 = fcn.00419310(arg_8h, 0x471278);\n                    if (iVar2 == 0) {\n                        arg_10h = arg_8h + 3;\n                    }\n                }\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x70);\n                goto code_r0x00413cfd;\n            }\n            if ((uVar5 & 1) == 0) {\n                arg_10h = arg_8h + uVar5;\n            }\n            else {\n                arg_10h = arg_8h + uVar5;\n                while( true ) {\n                    uVar1 = *arg_10h;\n                    if ((uVar1 == 0) || (*arg_14h_00 == 0)) goto code_r0x00413aed;\n                    if (uVar1 == 0x27) break;\n                    if (((*(*0x481868 + 1 + uVar1 * 2) & 0x80) != 0) && (1 < *arg_14h_00)) {\n                        **arg_10h_00 = uVar1;\n                        *arg_10h_00 = *arg_10h_00 + 1;\n                        arg_10h = arg_10h + 1;\n                        *arg_14h_00 = *arg_14h_00 - 1;\n                    }\n                    **arg_10h_00 = *arg_10h;\n                    *arg_10h_00 = *arg_10h_00 + 1;\n                    arg_10h = arg_10h + 1;\n                    *arg_14h_00 = *arg_14h_00 - 1;\n                }\n                arg_10h = arg_10h + 1;\n            }\n        }\n        else {\n            if (uVar1 == 0x68) {\n                if (uVar4 == 0) {\n                    *0x487940 = 1;\n                }\n                else if (uVar5 != 2) goto code_r0x00413ac7;\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x49);\n            }\n            else if (uVar1 == 0x6d) {\n                if (uVar4 == 0) {\n                    *0x487940 = 1;\n                }\n                else if (uVar5 != 2) goto code_r0x00413ac7;\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x4d);\n            }\n            else if (uVar1 == 0x73) {\n                if (uVar4 == 0) {\n                    *0x487940 = 1;\n                }\n                else if (uVar5 != 2) goto code_r0x00413ac7;\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x53);\n            }\n            else {\n                if (uVar1 == 0x74) {\n                    if (*(arg_ch + 8) < 0xc) {\n                        puVar3 = *(arg_18h + 0x98);\n                    }\n                    else {\n                        puVar3 = *(arg_18h + 0x9c);\n                    }\n                    while ((0 < uVar5 && (*arg_14h_00 != 0))) {\n                        if (((*(*0x481868 + 1 + *puVar3 * 2) & 0x80) != 0) && (1 < *arg_14h_00)) {\n                            **arg_10h_00 = *puVar3;\n                            *arg_10h_00 = *arg_10h_00 + 1;\n                            puVar3 = puVar3 + 1;\n                            *arg_14h_00 = *arg_14h_00 - 1;\n                        }\n                        **arg_10h_00 = *puVar3;\n                        *arg_10h_00 = *arg_10h_00 + 1;\n                        puVar3 = puVar3 + 1;\n                        *arg_14h_00 = *arg_14h_00 - 1;\n                        uVar5 = uVar5 - 1;\n                    }\n                    goto code_r0x00413aed;\n                }\n                if (uVar1 != 0x79) {\ncode_r0x00413ac7:\n                    if ((*(*0x481868 + 1 + uVar1 * 2) & 0x80) != 0) {\n                        **arg_10h_00 = uVar1;\n                        *arg_10h_00 = *arg_10h_00 + 1;\n                        *arg_14h_00 = *arg_14h_00 - 1;\n                        arg_8h = arg_8h + 1;\n                    }\n                    **arg_10h_00 = *arg_8h;\n                    *arg_10h_00 = *arg_10h_00 + 1;\n                    arg_10h = arg_8h + 1;\n                    *arg_14h_00 = *arg_14h_00 - 1;\n                    goto code_r0x00413aed;\n                }\n                if (uVar4 == 1) {\n                    arg_14h = CONCAT31(arg_14h._1_3_, 0x79);\n                }\n                else {\n                    if (uVar4 != 3) goto code_r0x00413ac7;\n                    arg_14h = CONCAT31(arg_14h._1_3_, 0x59);\n                }\n            }\ncode_r0x00413cfd:\n            fcn.00413575(arg_14h, arg_ch, arg_10h_00, arg_14h_00, arg_18h);\n        }\ncode_r0x00413aed:\n        uVar1 = *arg_10h;\n        arg_8h = arg_10h;\n    } while( true );\n}\n",
        "token_count": 2180
    },
    "00413e43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413e43(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.00413edb(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00413ec3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413ec3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.00413edb(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00414003": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414003(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.0041081b(arg_ch);\n    }\n    else {\n        if (arg_ch == 0) {\n            fcn.00411abc(arg_8h);\n        }\n        else {\n            do {\n                iVar1 = 0;\n                if (arg_ch < 0xffffffe1) {\n                    fcn.004147a6(9);\n                    arg_8h_00 = fcn.0041488f(arg_8h);\n                    if (arg_8h_00 == 0) {\n                        fcn.00414807(9);\n                        if (arg_ch == 0) {\n                            arg_ch = 1;\n                        }\n                        arg_ch = arg_ch + 0xf & 0xfffffff0;\n                        iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x487924, 0, arg_8h, arg_ch);\n                    }\n                    else {\n                        if (*0x481854 < arg_ch) {\ncode_r0x004140a2:\n                            if (arg_ch == 0) {\n                                arg_ch = 1;\n                            }\n                            arg_ch = arg_ch + 0xf & 0xfffffff0;\n                            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x487924, 0, arg_ch);\n                            if (iVar1 != 0) {\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.00410d20(iVar1, arg_8h, uVar3);\n                                fcn.004148ba(arg_8h_00, arg_8h);\n                            }\n                        }\n                        else {\n                            iVar2 = fcn.0041509a(arg_8h_00, arg_8h, arg_ch);\n                            iVar1 = arg_8h;\n                            if (iVar2 == 0) {\n                                iVar1 = fcn.00414be5(arg_ch);\n                                if (iVar1 == 0) goto code_r0x004140a2;\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.00410d20(iVar1, arg_8h, uVar3);\n                                fcn.004148ba(arg_8h_00, arg_8h);\n                            }\n                            if (iVar1 == 0) goto code_r0x004140a2;\n                        }\n                        fcn.00414807(9);\n                    }\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                }\n                if (*0x485cd8 == 0) {\n                    return iVar1;\n                }\n                iVar1 = fcn.00414645(arg_ch);\n            } while (iVar1 != 0);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 722
    },
    "004148ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004148ba(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = arg_8h[4];\n    iVar6 = *(arg_ch - 4);\n    piVar10 = arg_ch - 4;\n    uVar11 = arg_ch - arg_8h[3] >> 0xf;\n    uVar7 = *(arg_ch - 8);\n    var_ch = iVar6 + -1;\n    piVar3 = uVar11 * 0x204 + 0x144 + uVar5;\n    uVar13 = *(var_ch + piVar10);\n    if ((uVar13 & 1) == 0) {\n        arg_ch = (uVar13 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        if (*(iVar6 + 3 + piVar10) == *(iVar6 + 7 + piVar10)) {\n            if (arg_ch < 0x20) {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    *arg_8h = *arg_8h & uVar12;\n                }\n            }\n            else {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar12;\n                }\n            }\n        }\n        *(*(iVar6 + 7 + piVar10) + 4) = *(iVar6 + 3 + piVar10);\n        var_ch = var_ch + uVar13;\n        *(*(iVar6 + 3 + piVar10) + 8) = *(iVar6 + 7 + piVar10);\n    }\n    uVar13 = (var_ch >> 4) - 1;\n    if (0x3f < uVar13) {\n        uVar13 = 0x3f;\n    }\n    if ((uVar7 & 1) == 0) {\n        piVar10 = piVar10 - uVar7;\n        arg_ch = (uVar7 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        var_ch = var_ch + uVar7;\n        uVar13 = (var_ch >> 4) - 1;\n        if (0x3f < uVar13) {\n            uVar13 = 0x3f;\n        }\n        if (arg_ch != uVar13) {\n            if (piVar10[1] == piVar10[2]) {\n                if (arg_ch < 0x20) {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                    puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        *arg_8h = *arg_8h & uVar12;\n                    }\n                }\n                else {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                    puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar12;\n                    }\n                }\n            }\n            *(piVar10[2] + 4) = piVar10[1];\n            *(piVar10[1] + 8) = piVar10[2];\n        }\n    }\n    if (((uVar7 & 1) != 0) || (arg_ch != uVar13)) {\n        piVar10[1] = piVar3[uVar13 * 2 + 1];\n        piVar10[2] = piVar3 + uVar13 * 2;\n        (piVar3 + uVar13 * 2)[1] = piVar10;\n        *(piVar10[1] + 8) = piVar10;\n        if (piVar10[1] == piVar10[2]) {\n            cVar4 = *(uVar13 + 4 + uVar5);\n            *(uVar13 + 4 + uVar5) = cVar4 + '\\x01';\n            uVar9 = uVar13;\n            if (uVar13 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n            }\n        }\n    }\n    *piVar10 = var_ch;\n    *(var_ch + -4 + piVar10) = var_ch;\n    *piVar3 = *piVar3 + -1;\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n    uVar5 = *0x487910;\n    puVar2 = *0x487918;\n    if ((*piVar3 == 0) && (uVar5 = uVar11,  puVar2 = arg_8h,  *0x487918 != NULL)) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(*0x487910 * 0x8000 + (*0x487918)[3], 0x8000, 0x4000);\n        (*0x487918)[2] = (*0x487918)[2] | 0x80000000U >> (*0x487910 & 0x1f);\n        *((*0x487918)[4] + 0xc4 + *0x487910 * 4) = 0;\n        *((*0x487918)[4] + 0x43) = *((*0x487918)[4] + 0x43) + -1;\n        if (*((*0x487918)[4] + 0x43) == '\\0') {\n            (*0x487918)[1] = (*0x487918)[1] & 0xfffffffe;\n        }\n        puVar2 = arg_8h;\n        if ((*0x487918)[2] == 0xffffffff) {\n            (*pcVar8)((*0x487918)[3], 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x487924, 0, (*0x487918)[4]);\n            fcn.00411060(*0x487918, *0x487918 + 5, (*0x48791c * 0x14 - *0x487918) + -0x14 + *0x487920);\n            *0x48791c = *0x48791c + -1;\n            if (*0x487918 < arg_8h) {\n                arg_8h = arg_8h + -5;\n            }\n            *0x487914 = *0x487920;\n            puVar2 = arg_8h;\n        }\n    }\n    *0x487918 = puVar2;\n    *0x487910 = uVar5;\n    return;\n}\n",
        "token_count": 2133
    },
    "00415ce1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00415ce1(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    *(unaff_ESI + -4) = *(unaff_EBP + -0x28);\n    iVar1 = fcn.00416081();\n    *(iVar1 + 0x6c) = *(unaff_EBP + -0x1c);\n    iVar1 = fcn.00416081();\n    *(iVar1 + 0x70) = *(unaff_EBP + -0x20);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) && (unaff_EDI[5] == 0x19930520)) &&\n       ((*(unaff_EBP + -0x24) == 0 && (*(unaff_EBP + -0x2c) != 0)))) {\n        fcn.00410cba();\n        fcn.00415f1d();\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00416e0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416e0d(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_1a4h;\n    uint var_a0h;\n    \n    iVar2 = 0;\n    piVar1 = 0x481b30;\n    do {\n        if (arg_8h == *piVar1) break;\n        piVar1 = piVar1 + 2;\n        iVar2 = iVar2 + 1;\n    } while (piVar1 < 0x481bc0);\n    if (arg_8h == *(iVar2 * 8 + 0x481b30)) {\n        if ((*0x485c44 == 1) || ((*0x485c44 == 0 && (*0x481424 == 1)))) {\n            fcn.004107a0();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n        }\n        else if (arg_8h != 0xfc) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            if (iVar2 == 0) {\n                fcn.00417090();\n            }\n            iVar2 = fcn.004107a0();\n            if (0x3c < iVar2 + 1U) {\n                fcn.004107a0();\n                fcn.0041ac90();\n            }\n            fcn.00417090();\n            fcn.004170a0();\n            fcn.004170a0();\n            fcn.004170a0();\n            fcn.0041ac02(&var_a0h, \"Microsoft Visual C++ Runtime Library\");\n        }\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "00417b1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00417b1f(uint arg_8h, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_ch_00;\n    int16_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint var_248h;\n    uint var_49h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar var_16h;\n    char var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_30h = 0;\n    uVar8 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    var_ch = 0;\n    var_14h = 0;\n    do {\n        if ((uVar8 == 0) || (var_14h < 0)) {\n            return var_14h;\n        }\n        if ((uVar8 < ' ') || ('x' < uVar8)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(uVar8 + 0x471668) & 0xf;\n        }\n        var_30h = *(var_30h + 0x471688 + uVar2 * 8) >> 4;\n    // switch table (8 cases) at 0x418240\n        switch(var_30h) {\n        case 0:\ncode_r0x00417cbe:\n            var_24h = 0;\n            if ((*(*0x481868 + 1 + uVar8 * 2) & 0x80) != 0) {\n                fcn.00418260(uVar8, arg_8h, &var_14h);\n                uVar8 = *arg_ch;\n                arg_ch = arg_ch + 1;\n            }\n            fcn.00418260(uVar8, arg_8h, &var_14h);\n            break;\n        case 1:\n            var_10h = -1;\n            var_34h = 0;\n            var_28h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            var_4h = 0;\n            var_24h = 0;\n            break;\n        case 2:\n            if (uVar8 == 0x20) {\n                var_4h = var_4h | 2;\n            }\n            else if (uVar8 == 0x23) {\n                var_4h = var_4h | 0x80;\n            }\n            else if (uVar8 == 0x2b) {\n                var_4h = var_4h | 1;\n            }\n            else if (uVar8 == 0x2d) {\n                var_4h = var_4h | 4;\n            }\n            else if (uVar8 == 0x30) {\n                var_4h = var_4h | 8;\n            }\n            break;\n        case 3:\n            if (uVar8 == 0x2a) {\n                var_20h = fcn.004182fe(&arg_10h);\n                if (var_20h < 0) {\n                    var_4h = var_4h | 4;\n                    var_20h = -var_20h;\n                }\n            }\n            else {\n                var_20h = uVar8 + -0x30 + var_20h * 10;\n            }\n            break;\n        case 4:\n            var_10h = 0;\n            break;\n        case 5:\n            if (uVar8 == 0x2a) {\n                var_10h = fcn.004182fe(&arg_10h);\n                if (var_10h < 0) {\n                    var_10h = -1;\n                }\n            }\n            else {\n                var_10h = uVar8 + -0x30 + var_10h * 10;\n            }\n            break;\n        case 6:\n            if (uVar8 == 0x49) {\n                if ((*arg_ch != 0x36) || (arg_ch[1] != 0x34)) {\n                    var_30h = 0;\n                    goto code_r0x00417cbe;\n                }\n                arg_ch = arg_ch + 2;\n                var_4h = var_4h | 0x8000;\n            }\n            else if (uVar8 == 0x68) {\n                var_4h = var_4h | 0x20;\n            }\n            else if (uVar8 == 0x6c) {\n                var_4h = var_4h | 0x10;\n            }\n            else if (uVar8 == 0x77) {\n                var_4h = var_4h | 0x800;\n            }\n            break;\n        case 7:\n            puVar4 = var_8h;\n            if (uVar8 < 'h') {\n                if (uVar8 < 'e') {\n                    if (uVar8 < 'Y') {\n                        if (uVar8 == 0x58) {\ncode_r0x00417f9e:\n                            var_2ch = 7;\ncode_r0x00417fa5:\n                            var_ch = 0x10;\n                            if ((var_4h & 0x80) != 0) {\n                                var_16h = 0x30;\n                                var_15h = var_2ch + 'Q';\n                                var_1ch = 2;\n                            }\n                            goto code_r0x0041800f;\n                        }\n                        if (uVar8 != 0x43) {\n                            if ((uVar8 != 0x45) && (uVar8 != 0x47)) {\n                                if (uVar8 == 0x53) {\n                                    if ((var_4h & 0x830) == 0) {\n                                        var_4h = var_4h | 0x800;\n                                    }\n                                    goto code_r0x00417d4c;\n                                }\n                                goto code_r0x00418129;\n                            }\n                            var_34h = 1;\n                            uVar8 = uVar8 + 0x20;\n                            goto code_r0x00417dad;\n                        }\n                        if ((var_4h & 0x830) == 0) {\n                            var_4h = var_4h | 0x800;\n                        }\ncode_r0x00417dda:\n                        if ((var_4h & 0x810) == 0) {\n                            var_248h._0_1_ = fcn.004182fe(&arg_10h);\n                            var_ch = 1;\n                        }\n                        else {\n                            arg_ch_00 = fcn.0041831b();\n                            var_ch = fcn.0041bb78(&var_248h, arg_ch_00);\n                            if (var_ch < 0) {\n                                var_28h = 1;\n                            }\n                        }\n                        puVar4 = &var_248h;\n                    }\n                    else if (uVar8 == 0x5a) {\n                        piVar5 = fcn.004182fe(&arg_10h);\n                        if ((piVar5 == NULL) || (puVar4 = *(piVar5 + 2),  puVar4 == NULL)) {\n                            var_8h = *0x481be0;\n                            puVar4 = *0x481be0;\n                            goto code_r0x00417f1f;\n                        }\n                        if ((var_4h & 0x800) == 0) {\n                            var_24h = 0;\n                            var_ch = *piVar5;\n                        }\n                        else {\n                            var_ch = *piVar5 >> 1;\n                            var_24h = 1;\n                        }\n                    }\n                    else {\n                        if (uVar8 == 99) goto code_r0x00417dda;\n                        if (uVar8 == 100) goto code_r0x00418004;\n                    }\n                }\n                else {\ncode_r0x00417dad:\n                    var_4h = var_4h | 0x40;\n                    puVar4 = &var_248h;\n                    if (var_10h < 0) {\n                        var_10h = 6;\n                    }\n                    else if ((var_10h == 0) && (uVar8 == 0x67)) {\n                        var_10h = 1;\n                    }\n                    unique0x00007a00 = *arg_10h;\n                    var_44h = arg_10h[1];\n                    arg_10h = arg_10h + 2;\n                    var_8h = puVar4;\n                    (**0x481bc0)(&var_49h + 1, &var_248h, uVar8, var_10h, var_34h);\n                    uVar2 = var_4h & 0x80;\n                    if ((uVar2 != 0) && (var_10h == 0)) {\n                        (**0x481bcc)(&var_248h);\n                    }\n                    if ((uVar8 == 0x67) && (uVar2 == 0)) {\n                        (**0x481bc4)(&var_248h);\n                    }\n                    if (var_248h == '-') {\n                        var_4h = var_4h | 0x100;\n                        puVar4 = &var_248h + 1;\n                        var_8h = puVar4;\n                    }\ncode_r0x00417f1f:\n                    var_ch = fcn.004107a0(puVar4);\n                    puVar4 = var_8h;\n                }\n            }\n            else {\n                if (uVar8 == 0x69) {\ncode_r0x00418004:\n                    var_4h = var_4h | 0x40;\n                }\n                else {\n                    if (uVar8 == 0x6e) {\n                        piVar6 = fcn.004182fe(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            *piVar6 = var_14h;\n                        }\n                        else {\n                            *piVar6 = var_14h;\n                        }\n                        var_28h = 1;\n                        break;\n                    }\n                    if (uVar8 == 0x6f) {\n                        var_ch = 8;\n                        if ((var_4h & 0x80) != 0) {\n                            var_4h = var_4h | 0x200;\n                        }\n                        goto code_r0x0041800f;\n                    }\n                    if (uVar8 == 0x70) {\n                        var_10h = 8;\n                        goto code_r0x00417f9e;\n                    }\n                    if (uVar8 == 0x73) {\ncode_r0x00417d4c:\n                        iVar9 = var_10h;\n                        if (var_10h == -1) {\n                            iVar9 = 0x7fffffff;\n                        }\n                        puVar3 = fcn.004182fe(&arg_10h);\n                        if ((var_4h & 0x810) == 0) {\n                            puVar4 = puVar3;\n                            if (puVar3 == NULL) {\n                                puVar3 = *0x481be0;\n                                puVar4 = *0x481be0;\n                            }\n                            for (; (iVar9 != 0 && (*puVar3 != '\\0')); puVar3 = puVar3 + 1) {\n                                iVar9 = iVar9 + -1;\n                            }\n                            var_ch = puVar3 - puVar4;\n                        }\n                        else {\n                            if (puVar3 == NULL) {\n                                puVar3 = *0x481be4;\n                            }\n                            var_24h = 1;\n                            for (puVar4 = puVar3; (iVar9 != 0 && (*puVar4 != 0)); puVar4 = puVar4 + 2) {\n                                iVar9 = iVar9 + -1;\n                            }\n                            var_ch = puVar4 - puVar3 >> 1;\n                            puVar4 = puVar3;\n                        }\n                        goto code_r0x00418129;\n                    }\n                    if (uVar8 != 0x75) {\n                        if (uVar8 != 0x78) goto code_r0x00418129;\n                        var_2ch = 0x27;\n                        goto code_r0x00417fa5;\n                    }\n                }\n                var_ch = 10;\ncode_r0x0041800f:\n                if ((var_4h & 0x8000) == 0) {\n                    if ((var_4h & 0x20) == 0) {\n                        if ((var_4h & 0x40) == 0) {\n                            uVar2 = fcn.004182fe(&arg_10h);\n                            uVar11 = uVar2;\n                            goto code_r0x00418062;\n                        }\n                        uVar2 = fcn.004182fe(&arg_10h);\n                    }\n                    else if ((var_4h & 0x40) == 0) {\n                        uVar2 = fcn.004182fe(&arg_10h);\n                        uVar2 = uVar2 & 0xffff;\n                    }\n                    else {\n                        iVar1 = fcn.004182fe(&arg_10h);\n                        uVar2 = iVar1;\n                    }\n                    uVar11 = uVar2;\n                }\n                else {\n                    uVar11 = fcn.0041830b(&arg_10h);\n                }\ncode_r0x00418062:\n                if ((((var_4h & 0x40) != 0) && (uVar11 < 0x100000000)) && (uVar11 < 0)) {\n                    uVar11 = CONCAT44(-((uVar11 >> 0x20) + (uVar11 != 0)), -uVar11);\n                    var_4h = var_4h | 0x100;\n                }\n                uVar2 = uVar11 >> 0x20;\n                if ((var_4h & 0x8000) == 0) {\n                    uVar2 = 0;\n                }\n                uVar12 = uVar11 & 0xffffffff | uVar2 << 0x20;\n                if (var_10h < 0) {\n                    var_10h = 1;\n                }\n                else {\n                    var_4h = var_4h & 0xfffffff7;\n                }\n                if ((uVar11 | uVar2) == 0) {\n                    var_1ch = 0;\n                }\n                var_8h = &var_49h;\n                while ((iVar9 = var_10h + -1,  0 < var_10h || (uVar12 != 0))) {\n                    var_3ch = var_ch >> 0x1f;\n                    var_40h = var_ch;\n                    var_10h = iVar9;\n                    iVar9 = fcn.00416390(uVar12, var_ch, var_3ch);\n                    iVar9 = iVar9 + 0x30;\n                    uVar12 = fcn.00416320();\n                    if (0x39 < iVar9) {\n                        iVar9 = iVar9 + var_2ch;\n                    }\n                    puVar4 = var_8h + -1;\n                    *var_8h = iVar9;\n                    var_8h = puVar4;\n                }\n                var_ch = &var_49h + -var_8h;\n                puVar4 = var_8h + 1;\n                var_10h = iVar9;\n                if (((var_4h & 0x200) != 0) && ((*puVar4 != '0' || (var_ch == 0)))) {\n                    var_ch = &var_49h + -var_8h + 1;\n                    *var_8h = '0';\n                    puVar4 = var_8h;\n                }\n            }\ncode_r0x00418129:\n            var_8h = puVar4;\n            uVar2 = var_4h;\n            if (var_28h == 0) {\n                if ((var_4h & 0x40) != 0) {\n                    if ((var_4h & 0x100) == 0) {\n                        if ((var_4h & 1) == 0) {\n                            if ((var_4h & 2) == 0) goto code_r0x00418161;\n                            var_16h = 0x20;\n                        }\n                        else {\n                            var_16h = 0x2b;\n                        }\n                    }\n                    else {\n                        var_16h = 0x2d;\n                    }\n                    var_1ch = 1;\n                }\ncode_r0x00418161:\n                iVar9 = (var_20h - var_1ch) - var_ch;\n                if ((var_4h & 0xc) == 0) {\n                    fcn.00418295(0x20, iVar9, arg_8h, &var_14h);\n                }\n                fcn.004182c6(&var_16h, var_1ch, arg_8h, &var_14h);\n                if (((uVar2 & 8) != 0) && ((uVar2 & 4) == 0)) {\n                    fcn.00418295(0x30, iVar9, arg_8h, &var_14h);\n                }\n                if ((var_24h == 0) || (uVar2 = var_ch,  puVar4 = var_8h,  var_ch < 1)) {\n                    fcn.004182c6(var_8h, var_ch, arg_8h, &var_14h);\n                }\n                else {\n                    do {\n                        uVar10 = uVar2 - 1;\n                        iVar7 = fcn.0041bb78(&var_38h, uVar2 & 0xffff0000 | *puVar4);\n                        if (iVar7 < 1) break;\n                        fcn.004182c6(&var_38h, iVar7, arg_8h, &var_14h);\n                        uVar2 = uVar10;\n                        puVar4 = puVar4 + 2;\n                    } while (uVar10 != 0);\n                }\n                if ((var_4h & 4) != 0) {\n                    fcn.00418295(0x20, iVar9, arg_8h, &var_14h);\n                }\n            }\n        }\n        uVar8 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 4313
    },
    "0041a299": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041a299(uint arg_8h, uint16_t *arg_ch, uint *arg_10h)\n\n{\n    bool bVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int16_t *piVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint16_t uVar8;\n    uint32_t unaff_EBX;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint var_450h;\n    uint var_251h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_38h = 0;\n    uVar8 = *arg_ch;\n    uVar9 = unaff_EBX & 0xffff0000 | uVar8;\n    var_8h = 0;\n    var_14h = 0;\n    arg_ch = arg_ch + 1;\n    do {\n        if ((uVar8 == 0) || (var_14h < 0)) {\n            return var_14h;\n        }\n        uVar8 = uVar9;\n        if ((uVar8 < 0x20) || (0x78 < uVar8)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *((uVar9 & 0xffff) + 0x471668) & 0xf;\n        }\n        var_38h = *(var_38h + 0x471688 + uVar3 * 8) >> 4;\n    // switch table (8 cases) at 0x41a9c6\n        switch(var_38h) {\n        case 0:\ncode_r0x0041a434:\n            var_1ch = 1;\n            fcn.0041a9e6(uVar9, arg_8h, &var_14h);\n            break;\n        case 1:\n            var_10h = -1;\n            var_34h = 0;\n            var_30h = 0;\n            var_28h = 0;\n            var_18h = 0;\n            var_4h = 0;\n            var_1ch = 0;\n            break;\n        case 2:\n            uVar3 = uVar9 & 0xffff;\n            if (uVar3 == 0x20) {\n                var_4h = var_4h | 2;\n            }\n            else if (uVar3 == 0x23) {\n                var_4h = var_4h | 0x80;\n            }\n            else if (uVar3 == 0x2b) {\n                var_4h = var_4h | 1;\n            }\n            else if (uVar3 == 0x2d) {\n                var_4h = var_4h | 4;\n            }\n            else if (uVar3 == 0x30) {\n                var_4h = var_4h | 8;\n            }\n            break;\n        case 3:\n            if (uVar8 == 0x2a) {\n                var_28h = fcn.0041aa70(&arg_10h);\n                if (var_28h < 0) {\n                    var_4h = var_4h | 4;\n                    var_28h = -var_28h;\n                }\n            }\n            else {\n                var_28h = ((uVar9 & 0xffff) - 0x30) + var_28h * 10;\n            }\n            break;\n        case 4:\n            var_10h = 0;\n            break;\n        case 5:\n            if (uVar8 == 0x2a) {\n                var_10h = fcn.0041aa70(&arg_10h);\n                if (var_10h < 0) {\n                    var_10h = -1;\n                }\n            }\n            else {\n                var_10h = ((uVar9 & 0xffff) - 0x30) + var_10h * 10;\n            }\n            break;\n        case 6:\n            uVar3 = uVar9 & 0xffff;\n            if (uVar3 == 0x49) {\n                if ((*arg_ch != 0x36) || (arg_ch[1] != 0x34)) {\n                    var_38h = 0;\n                    goto code_r0x0041a434;\n                }\n                arg_ch = arg_ch + 2;\n                var_4h = var_4h | 0x8000;\n            }\n            else if (uVar3 == 0x68) {\n                var_4h = var_4h | 0x20;\n            }\n            else if (uVar3 == 0x77) {\n                var_4h = var_4h | 0x800;\n            }\n            break;\n        case 7:\n            uVar3 = uVar9 & 0xffff;\n            puVar4 = var_ch;\n            if (uVar3 < 0x68) {\n                if (uVar3 < 0x65) {\n                    if (uVar3 < 0x59) {\n                        if (uVar3 == 0x58) {\ncode_r0x0041a70d:\n                            var_2ch = 7;\ncode_r0x0041a710:\n                            var_8h = 0x10;\n                            if ((var_4h & 0x80) != 0) {\n                                var_20h._0_2_ = 0x30;\n                                var_20h._2_2_ = var_2ch + 0x51;\n                                var_18h = 2;\n                            }\n                            goto code_r0x0041a77e;\n                        }\n                        if (uVar3 != 0x43) {\n                            if ((uVar3 != 0x45) && (uVar3 != 0x47)) {\n                                if (uVar3 == 0x53) {\n                                    if ((var_4h & 0x830) == 0) {\n                                        var_4h = var_4h | 0x20;\n                                    }\n                                    goto code_r0x0041a49e;\n                                }\n                                goto code_r0x0041a89f;\n                            }\n                            var_34h = 1;\n                            uVar9 = uVar9 + 0x20;\n                            goto code_r0x0041a50f;\n                        }\n                        if ((var_4h & 0x830) == 0) {\n                            var_4h = var_4h | 0x20;\n                        }\ncode_r0x0041a53c:\n                        var_1ch = 1;\n                        var_3ch = fcn.0041aa70(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            var_450h._0_2_ = var_3ch;\n                        }\n                        else {\n                            var_21h = 0;\n                            var_22h = var_3ch;\n                            iVar10 = fcn.0041d39d(&var_450h, &var_22h, *0x481a74);\n                            if (iVar10 < 0) {\n                                var_30h = 1;\n                            }\n                        }\n                        var_8h = 1;\n                        puVar4 = &var_450h;\n                    }\n                    else if (uVar3 == 0x5a) {\n                        piVar5 = fcn.0041aa70(&arg_10h);\n                        if ((piVar5 == NULL) || (puVar4 = *(piVar5 + 2),  puVar4 == NULL)) {\n                            var_ch = *0x481be0;\n                            puVar4 = *0x481be0;\n                            goto code_r0x0041a5f8;\n                        }\n                        if ((var_4h & 0x800) == 0) {\n                            var_8h = *piVar5;\n                            var_1ch = 0;\n                        }\n                        else {\n                            var_8h = *piVar5 >> 1;\n                            var_1ch = 1;\n                        }\n                    }\n                    else {\n                        if (uVar3 == 99) goto code_r0x0041a53c;\n                        if (uVar3 == 100) goto code_r0x0041a773;\n                    }\n                }\n                else {\ncode_r0x0041a50f:\n                    var_4h = var_4h | 0x40;\n                    puVar4 = &var_450h;\n                    if (var_10h < 0) {\n                        var_10h = 6;\n                    }\n                    else if ((var_10h == 0) && (uVar9 == 0x67)) {\n                        var_10h = 1;\n                    }\n                    var_50h = *arg_10h;\n                    var_4ch = arg_10h[1];\n                    arg_10h = arg_10h + 2;\n                    var_ch = puVar4;\n                    (**0x481bc0)(&var_50h, &var_450h, uVar9, var_10h, var_34h);\n                    uVar3 = var_4h & 0x80;\n                    if ((uVar3 != 0) && (var_10h == 0)) {\n                        (**0x481bcc)(&var_450h);\n                    }\n                    if ((uVar9 == 0x67) && (uVar3 == 0)) {\n                        (**0x481bc4)(&var_450h);\n                    }\n                    if (var_450h == '-') {\n                        var_4h = var_4h | 0x100;\n                        puVar4 = &var_450h + 1;\n                        var_ch = puVar4;\n                    }\ncode_r0x0041a5f8:\n                    var_8h = fcn.004107a0(puVar4);\n                    puVar4 = var_ch;\n                }\n            }\n            else {\n                if (uVar3 == 0x69) {\ncode_r0x0041a773:\n                    var_4h = var_4h | 0x40;\n                }\n                else {\n                    if (uVar3 == 0x6e) {\n                        piVar6 = fcn.0041aa70(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            *piVar6 = var_14h;\n                        }\n                        else {\n                            *piVar6 = var_14h;\n                        }\n                        var_30h = 1;\n                        break;\n                    }\n                    if (uVar3 == 0x6f) {\n                        var_8h = 8;\n                        if ((var_4h & 0x80) != 0) {\n                            var_4h = var_4h | 0x200;\n                        }\n                        goto code_r0x0041a77e;\n                    }\n                    if (uVar3 == 0x70) {\n                        var_10h = 8;\n                        goto code_r0x0041a70d;\n                    }\n                    if (uVar3 == 0x73) {\ncode_r0x0041a49e:\n                        iVar10 = var_10h;\n                        if (var_10h == -1) {\n                            iVar10 = 0x7fffffff;\n                        }\n                        puVar4 = fcn.0041aa70(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            if (puVar4 == NULL) {\n                                puVar4 = *0x481be4;\n                            }\n                            var_1ch = 1;\n                            for (puVar7 = puVar4; (iVar10 != 0 && (*puVar7 != 0)); puVar7 = puVar7 + 2) {\n                                iVar10 = iVar10 + -1;\n                            }\n                            var_8h = puVar7 - puVar4 >> 1;\n                        }\n                        else {\n                            if (puVar4 == NULL) {\n                                puVar4 = *0x481be0;\n                            }\n                            var_8h = 0;\n                            puVar7 = puVar4;\n                            if (0 < iVar10) {\n                                do {\n                                    if (*puVar7 == 0) break;\n                                    if ((*(*0x481868 + 1 + *puVar7 * 2) & 0x80) != 0) {\n                                        puVar7 = puVar7 + 1;\n                                    }\n                                    puVar7 = puVar7 + 1;\n                                    var_8h = var_8h + 1;\n                                } while (var_8h < iVar10);\n                            }\n                        }\n                        goto code_r0x0041a89f;\n                    }\n                    if (uVar3 != 0x75) {\n                        if (uVar3 != 0x78) goto code_r0x0041a89f;\n                        var_2ch = 0x27;\n                        goto code_r0x0041a710;\n                    }\n                }\n                var_8h = 10;\ncode_r0x0041a77e:\n                if ((var_4h & 0x8000) == 0) {\n                    if ((var_4h & 0x20) == 0) {\n                        if ((var_4h & 0x40) == 0) {\n                            uVar3 = fcn.0041aa70(&arg_10h);\n                            uVar11 = uVar3;\n                            goto code_r0x0041a7d1;\n                        }\n                        uVar3 = fcn.0041aa70(&arg_10h);\n                    }\n                    else if ((var_4h & 0x40) == 0) {\n                        uVar3 = fcn.0041aa70(&arg_10h);\n                        uVar3 = uVar3 & 0xffff;\n                    }\n                    else {\n                        iVar2 = fcn.0041aa70(&arg_10h);\n                        uVar3 = iVar2;\n                    }\n                    uVar11 = uVar3;\n                }\n                else {\n                    uVar11 = fcn.0041aa7d(&arg_10h);\n                }\ncode_r0x0041a7d1:\n                if ((((var_4h & 0x40) != 0) && (uVar11 < 0x100000000)) && (uVar11 < 0)) {\n                    uVar11 = CONCAT44(-((uVar11 >> 0x20) + (uVar11 != 0)), -uVar11);\n                    var_4h = var_4h | 0x100;\n                }\n                uVar3 = uVar11 >> 0x20;\n                if ((var_4h & 0x8000) == 0) {\n                    uVar3 = 0;\n                }\n                uVar12 = uVar11 & 0xffffffff | uVar3 << 0x20;\n                if (var_10h < 0) {\n                    var_10h = 1;\n                }\n                else {\n                    var_4h = var_4h & 0xfffffff7;\n                }\n                if ((uVar11 | uVar3) == 0) {\n                    var_18h = 0;\n                }\n                var_ch = &var_251h;\n                while ((iVar10 = var_10h + -1,  0 < var_10h || (uVar12 != 0))) {\n                    var_44h = var_8h >> 0x1f;\n                    var_48h = var_8h;\n                    var_10h = iVar10;\n                    iVar10 = fcn.00416390(uVar12, var_8h, var_44h);\n                    uVar9 = iVar10 + 0x30;\n                    uVar12 = fcn.00416320();\n                    if (0x39 < uVar9) {\n                        uVar9 = uVar9 + var_2ch;\n                    }\n                    puVar4 = var_ch + -1;\n                    *var_ch = uVar9;\n                    var_ch = puVar4;\n                }\n                var_8h = &var_251h + -var_ch;\n                puVar4 = var_ch + 1;\n                var_10h = iVar10;\n                if (((var_4h & 0x200) != 0) && ((*puVar4 != 0x30 || (var_8h == 0)))) {\n                    var_8h = &var_251h + -var_ch + 1;\n                    *var_ch = 0x30;\n                    puVar4 = var_ch;\n                }\n            }\ncode_r0x0041a89f:\n            var_ch = puVar4;\n            uVar3 = var_4h;\n            if (var_30h == 0) {\n                if ((var_4h & 0x40) != 0) {\n                    if ((var_4h & 0x100) == 0) {\n                        if ((var_4h & 1) == 0) {\n                            if ((var_4h & 2) == 0) goto code_r0x0041a8dd;\n                            var_20h._0_2_ = 0x20;\n                        }\n                        else {\n                            var_20h._0_2_ = 0x2b;\n                        }\n                    }\n                    else {\n                        var_20h._0_2_ = 0x2d;\n                    }\n                    var_18h = 1;\n                }\ncode_r0x0041a8dd:\n                iVar10 = (var_28h - var_18h) - var_8h;\n                if ((var_4h & 0xc) == 0) {\n                    fcn.0041aa06(0x20, iVar10, arg_8h, &var_14h);\n                }\n                fcn.0041aa37(&var_20h, var_18h, arg_8h, &var_14h);\n                if (((uVar3 & 8) != 0) && ((uVar3 & 4) == 0)) {\n                    fcn.0041aa06(0x30, iVar10, arg_8h, &var_14h);\n                }\n                if ((var_1ch == 0) && (0 < var_8h)) {\n                    uVar9 = var_8h - 1;\n                    puVar4 = var_ch;\n                    do {\n                        var_40h = fcn.0041d39d(&var_3ch, puVar4, *0x481a74);\n                        uVar3 = uVar9;\n                        if (var_40h < 1) break;\n                        fcn.0041a9e6(var_3ch, arg_8h, &var_14h);\n                        puVar4 = puVar4 + var_40h;\n                        uVar3 = uVar9 - 1;\n                        bVar1 = 0 < uVar9;\n                        uVar9 = uVar3;\n                    } while (bVar1);\n                }\n                else {\n                    fcn.0041aa37(var_ch, var_8h, arg_8h, &var_14h);\n                }\n                uVar9 = uVar3;\n                if ((var_4h & 4) != 0) {\n                    fcn.0041aa06(0x20, iVar10, arg_8h, &var_14h);\n                }\n            }\n        }\n        uVar8 = *arg_ch;\n        uVar9 = uVar9 & 0xffff0000 | uVar8;\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 4540
    },
    "0041db4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041de26)\n// WARNING: Removing unreachable block (ram,0x0041de2f)\n// WARNING: Removing unreachable block (ram,0x0041dec4)\n// WARNING: Removing unreachable block (ram,0x0041dfac)\n// WARNING: Removing unreachable block (ram,0x0041ded3)\n// WARNING: Removing unreachable block (ram,0x0041def0)\n// WARNING: Removing unreachable block (ram,0x0041dedb)\n// WARNING: Removing unreachable block (ram,0x0041dee1)\n// WARNING: Removing unreachable block (ram,0x0041dee4)\n// WARNING: Removing unreachable block (ram,0x0041def3)\n// WARNING: Removing unreachable block (ram,0x0041dfa2)\n// WARNING: Removing unreachable block (ram,0x0041defd)\n// WARNING: Removing unreachable block (ram,0x0041df03)\n// WARNING: Removing unreachable block (ram,0x0041df0b)\n// WARNING: Removing unreachable block (ram,0x0041df28)\n// WARNING: Removing unreachable block (ram,0x0041df2a)\n// WARNING: Removing unreachable block (ram,0x0041df32)\n// WARNING: Removing unreachable block (ram,0x0041df35)\n// WARNING: Removing unreachable block (ram,0x0041df3a)\n// WARNING: Removing unreachable block (ram,0x0041df3d)\n// WARNING: Removing unreachable block (ram,0x0041df74)\n// WARNING: Removing unreachable block (ram,0x0041df84)\n// WARNING: Removing unreachable block (ram,0x0041df7b)\n// WARNING: Removing unreachable block (ram,0x0041df44)\n// WARNING: Removing unreachable block (ram,0x0041df4b)\n// WARNING: Removing unreachable block (ram,0x0041df57)\n// WARNING: Removing unreachable block (ram,0x0041dfbd)\n// WARNING: Removing unreachable block (ram,0x0041dfc3)\n// WARNING: Removing unreachable block (ram,0x0041df5d)\n// WARNING: Removing unreachable block (ram,0x0041dfd2)\n\nuint __cdecl\nfcn.0041db4c(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_5ch;\n    uint var_45h;\n    uint var_40h;\n    uint var_3ah;\n    uint var_36h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = &var_5ch;\n    var_28h = 0;\n    var_18h = 1;\n    var_4h = 0;\n    var_10h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_2ch = 0;\n    var_30h = 0;\n    var_1ch = 0;\n    var_8h = 0;\n    var_14h = 0;\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0041dbaf. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x41dfed\n    uVar2 = (**0x41dfed)();\n    return uVar2;\n}\n",
        "token_count": 917
    },
    "00420d42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00420d42(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.004213c3();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.004011d6(1);\n        fcn.0043a720(pcVar2);\n    }\n    fcn.00420b6b();\n    *extraout_ECX = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.00420b6b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 333
    },
    "00422bf1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00422bf1(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x486414,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x486414] < '\\x01'))\n    {\n        fcn.00422dd6();\n    }\n    fcn.00420b6b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 248
    },
    "00421cdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00421cdc(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.00422326();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.004011d6(1);\n        fcn.0043a720(pcVar2);\n    }\n    fcn.00420b6b();\n    *extraout_ECX = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.00420b6b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 339
    },
    "00423f2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423f2b(code **param_1)\n\n{\n    *param_1 = vtable.exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0043a720(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0042d43f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042d43f(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    char unaff_retaddr;\n    \n    *param_1 = *0x480454;\n    if (0 < param_3) {\n        fcn.0043b39b(param_3);\n        fcn.004108b0(*param_1, unaff_retaddr, param_2);\n    }\n    return param_1;\n}\n",
        "token_count": 107
    },
    "0042d473": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042d473(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *param_1 = *0x480454;\n    if (param_3 != 0) {\n        fcn.0043b39b(param_3);\n        fcn.00410d20(*param_1, unaff_retaddr, param_2);\n    }\n    return param_1;\n}\n",
        "token_count": 107
    },
    "0042d5c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d5c7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (arg_8h < 0) {\n        arg_8h = 0;\n    }\n    iVar1 = *(*in_ECX + -8);\n    if ((0 < arg_ch) && (arg_8h < iVar1)) {\n        fcn.0043b4d7();\n        fcn.00410d20(*in_ECX + arg_8h, *in_ECX + arg_8h + arg_ch, ((iVar1 - arg_8h) - arg_ch) + 1);\n        *(*in_ECX + -8) = iVar1 - arg_ch;\n    }\n    return iVar1;\n}\n",
        "token_count": 184
    },
    "0042d61f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d61f(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.0043b4d7();\n    if (arg_8h < 0) {\n        arg_8h = 0;\n    }\n    arg_ch_00 = *in_ECX;\n    iVar1 = *(arg_ch_00 + -8);\n    if (iVar1 < arg_8h) {\n        arg_8h = iVar1;\n    }\n    iVar1 = iVar1 + 1;\n    if (*(arg_ch_00 + -4) < iVar1) {\n        fcn.0043b39b(iVar1);\n        fcn.00410d20(*in_ECX, arg_ch_00, *(arg_ch_00 + -8) + 1);\n        fcn.0043b496(arg_ch_00 + -0xc);\n    }\n    fcn.00410d20(*in_ECX + arg_8h + 1, *in_ECX + arg_8h, iVar1 - arg_8h);\n    *(*in_ECX + arg_8h) = arg_ch;\n    *(*in_ECX + -8) = iVar1;\n    return iVar1;\n}\n",
        "token_count": 303
    },
    "0042d795": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d795(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t arg_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    if ((arg_8h == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h),  iVar2 == 0)) {\n        var_8h = 0;\n    }\n    else {\n        if (arg_ch == 0) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_ch);\n        }\n        uVar6 = *in_ECX;\n        var_8h = 0;\n        uVar5 = *(uVar6 - 8) + uVar6;\n        if (uVar6 < uVar5) {\n            do {\n                while (iVar3 = fcn.00412086(uVar6, arg_8h),  iVar3 != 0) {\n                    var_8h = var_8h + 1;\n                    uVar6 = iVar3 + iVar2;\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar6);\n                uVar6 = uVar6 + 1 + iVar3;\n            } while (uVar6 < uVar5);\n            if (0 < var_8h) {\n                fcn.0043b4d7();\n                uVar6 = *in_ECX;\n                iVar3 = *(uVar6 - 8);\n                iVar7 = (var_4h - iVar2) * var_8h + iVar3;\n                if ((*(uVar6 - 4) < iVar7) || (1 < *(uVar6 - 0xc))) {\n                    fcn.0043b39b(iVar7);\n                    fcn.00410d20(*in_ECX, uVar6, *(uVar6 - 8));\n                    fcn.0043b496(uVar6 - 0xc);\n                }\n                uVar6 = *in_ECX;\n                uVar5 = *(uVar6 - 8) + uVar6;\n                for (; uVar6 < uVar5; uVar6 = uVar6 + 1 + iVar4) {\n                    iVar4 = fcn.00412086(uVar6, arg_8h);\n                    while (iVar4 != 0) {\n                        uVar6 = iVar4 + var_4h;\n                        arg_10h = ((*in_ECX - iVar4) - iVar2) + iVar3;\n                        fcn.00411060(uVar6, iVar2 + iVar4, arg_10h);\n                        fcn.00410d20(iVar4, arg_ch, var_4h);\n                        *(arg_10h + uVar6) = 0;\n                        iVar3 = iVar3 + (var_4h - iVar2);\n                        iVar4 = fcn.00412086(uVar6, arg_8h);\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar6);\n                }\n                *(*in_ECX - 8) = iVar7;\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 827
    },
    "0042dba7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042dba7(uint *param_1, char *param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint unaff_retaddr;\n    int32_t iStack16;\n    uint32_t uStack12;\n    \n    iStack16 = 0;\n    cVar1 = *param_2;\n    piVar6 = param_3;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.0043b95e(iStack16);\n            fcn.0041228c(*param_1, unaff_retaddr, param_1);\n            fcn.0043b9ad(0xffffffff);\n            return;\n        }\n        if (*param_2 == '%') {\n            param_2 = fcn.0041206f(param_2);\n            cVar1 = *param_2;\n            if (cVar1 == '%') goto code_r0x0042de62;\n            iVar7 = 0;\n            param_3 = NULL;\n            if (cVar1 == '\\0') {\ncode_r0x0042dc34:\n                param_3 = fcn.00411420(param_2);\n                while ((piVar5 = piVar6,  *param_2 != '\\0' && (iVar2 = fcn.004123e2(*param_2),  iVar2 != 0))) {\n                    param_2 = fcn.0041206f(param_2);\n                }\n            }\n            else {\n                do {\n                    if (cVar1 == '#') {\n                        iStack16 = iStack16 + 2;\n                    }\n                    else if (cVar1 == '*') {\n                        param_3 = *piVar6;\n                        piVar6 = piVar6 + 1;\n                    }\n                    else if ((((cVar1 != '-') && (cVar1 != '+')) && (cVar1 != '0')) && (cVar1 != ' ')) break;\n                    param_2 = fcn.0041206f(param_2);\n                    cVar1 = *param_2;\n                } while (cVar1 != '\\0');\n                piVar5 = piVar6;\n                if (param_3 == NULL) goto code_r0x0042dc34;\n            }\n            iVar2 = 0;\n            if (*param_2 == '.') {\n                param_2 = fcn.0041206f(param_2);\n                if (*param_2 == '*') {\n                    iVar2 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                    param_2 = fcn.0041206f(param_2);\n                }\n                else {\n                    iVar2 = fcn.00411420(param_2);\n                    while ((*param_2 != '\\0' && (iVar3 = fcn.004123e2(*param_2),  iVar3 != 0))) {\n                        param_2 = fcn.0041206f(param_2);\n                    }\n                }\n            }\n            uStack12 = 0;\n            iVar3 = fcn.004122f3(param_2, 0x46dd60, 3);\n            if (iVar3 == 0) {\n                param_2 = param_2 + 3;\n                uStack12 = 0x40000;\n            }\n            else {\n                cVar1 = *param_2;\n                if (((cVar1 != 'F') && (cVar1 != 'L')) && (cVar1 != 'N')) {\n                    if (cVar1 == 'h') {\n                        uStack12 = 0x10000;\n                    }\n                    else {\n                        if (cVar1 != 'l') goto code_r0x0042dd06;\n                        uStack12 = 0x20000;\n                    }\n                }\n                param_2 = fcn.0041206f(param_2);\n            }\ncode_r0x0042dd06:\n            uVar4 = *param_2 | uStack12;\n            piVar6 = piVar5;\n            if (uVar4 < 0x10064) {\n                if ((uVar4 == 0x10063) || (uVar4 == 0x43)) {\ncode_r0x0042ddbe:\n                    iVar7 = 2;\n                }\n                else {\n                    if (uVar4 == 0x53) goto code_r0x0042ddab;\n                    if (uVar4 == 99) goto code_r0x0042ddbe;\n                    if (uVar4 != 0x73) {\n                        if (uVar4 == 0x10043) goto code_r0x0042ddbe;\n                        if (uVar4 != 0x10053) goto code_r0x0042dd47;\n                    }\ncode_r0x0042ddc6:\n                    if (*piVar5 == 0) goto code_r0x0042ddd0;\n                    iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*piVar5);\ncode_r0x0042dddc:\n                    if (iVar7 < 1) {\n                        iVar7 = 1;\n                    }\n                    piVar6 = piVar5 + 1;\n                    if (iVar7 == 0) goto code_r0x0042dd47;\n                }\ncode_r0x0042ddee:\n                piVar6 = piVar5 + 1;\n                if ((iVar2 != 0) && (iVar2 <= iVar7)) {\n                    iVar7 = iVar2;\n                }\n                if (iVar7 <= param_3) {\n                    iVar7 = param_3;\n                }\n            }\n            else {\n                if (uVar4 == 0x10073) goto code_r0x0042ddc6;\n                if (uVar4 == 0x20043) goto code_r0x0042ddbe;\n                if (uVar4 == 0x20053) {\ncode_r0x0042ddab:\n                    if (*piVar5 != 0) {\n                        iVar7 = fcn.00411da6(*piVar5);\n                        goto code_r0x0042dddc;\n                    }\ncode_r0x0042ddd0:\n                    iVar7 = 6;\n                    goto code_r0x0042ddee;\n                }\n                if (uVar4 == 0x20063) goto code_r0x0042ddbe;\n                if (uVar4 == 0x20073) goto code_r0x0042ddab;\ncode_r0x0042dd47:\n                cVar1 = *param_2;\n                if (cVar1 < 'j') {\n                    if (cVar1 == 'i') goto code_r0x0042de49;\n                    if (cVar1 == 'G') goto code_r0x0042de14;\n                    if ((cVar1 == 'X') || (cVar1 == 'd')) goto code_r0x0042de49;\n                    if (cVar1 == 'e') {\ncode_r0x0042de14:\n                        piVar6 = piVar6 + 2;\n                        iVar7 = 0x80;\n                        goto code_r0x0042de3b;\n                    }\n                    if (cVar1 != 'f') {\n                        if (cVar1 != 'g') goto code_r0x0042de58;\n                        goto code_r0x0042de14;\n                    }\n                    piVar6 = piVar6 + 2;\n                    iVar7 = 0x80;\n                    iVar2 = iVar2 + 0x138;\n                }\n                else {\n                    if (cVar1 == 'n') {\n                        piVar6 = piVar6 + 1;\n                        goto code_r0x0042de58;\n                    }\n                    if (cVar1 == 'o') {\ncode_r0x0042de49:\n                        if ((uStack12 & 0x40000) == 0) goto code_r0x0042de35;\n                        piVar6 = piVar6 + 2;\n                    }\n                    else {\n                        if (cVar1 != 'p') {\n                            if ((cVar1 != 'u') && (cVar1 != 'x')) goto code_r0x0042de58;\n                            goto code_r0x0042de49;\n                        }\ncode_r0x0042de35:\n                        piVar6 = piVar6 + 1;\n                    }\n                    iVar7 = 0x20;\ncode_r0x0042de3b:\n                    iVar2 = param_3 + iVar2;\n                }\n                if (iVar7 <= iVar2) {\n                    iVar7 = iVar2;\n                }\n            }\ncode_r0x0042de58:\n            iStack16 = iStack16 + iVar7;\n        }\n        else {\ncode_r0x0042de62:\n            iVar7 = fcn.004122dd(param_2);\n            iStack16 = iStack16 + iVar7;\n        }\n        param_2 = fcn.0041206f(param_2);\n        cVar1 = *param_2;\n    } while( true );\n}\n",
        "token_count": 2013
    },
    "0042df0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042df0b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = &arg_10h;\n    iVar1 = (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x500, arg_ch, 0, 0, &var_4h, 0, &var_8h);\n    if ((iVar1 == 0) || (var_4h == 0)) {\n        fcn.0042f1c0();\n    }\n    fcn.0043b6b7(var_4h);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(var_4h);\n    return;\n}\n",
        "token_count": 179
    },
    "0042e3cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e3cf(int32_t param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EDI;\n    uint uVar5;\n    \n    uVar5 = *(param_1 + 0x78);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar5);\n    fcn.004108b0(iVar3 + 1 + *(param_1 + 0x78), 0, *(param_1 + 0x7c) - (iVar3 + 1));\n    (*_sym.imp.USER32.dll_GetFocus)();\n    bVar1 = false;\n    uVar4 = fcn.004360db();\n    *(param_1 + 0x60) = uVar4;\n    fcn.00436f75();\n    pcVar2 = _sym.imp.USER32.dll_EnableWindow;\n    if (*(param_1 + 0x60) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x60));\n        if (iVar3 != 0) {\n            bVar1 = true;\n            (*pcVar2)(*(param_1 + 0x60), 0);\n        }\n    }\n    iVar3 = fcn.004569a4();\n    if ((*(param_1 + 0x92) & 8) == 0) {\n        fcn.00436f29(param_1);\n    }\n    else {\n        *(iVar3 + 0x18) = param_1;\n    }\n    if (*(param_1 + 0xa8) == 0) {\n        sub.comdlg32.dll_GetSaveFileNameA(param_1 + 0x5c);\n    }\n    else {\n        sub.comdlg32.dll_GetOpenFileNameA();\n    }\n    *(iVar3 + 0x18) = 0;\n    if (bVar1) {\n        (*pcVar2)(*(param_1 + 0x60), 1);\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindow)(unaff_EDI);\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n    }\n    fcn.00436115();\n    if (unaff_EDI == 0) {\n        unaff_EDI = 2;\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 548
    },
    "0042e4aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0042e4aa(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = 0;\n    uVar1 = *(extraout_ECX + 0x92);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    iVar6 = extraout_ECX;\n    if (((uVar1 & 8) != 0) && (iVar2 = *(extraout_ECX + 0x1c),  iVar2 != 0)) {\n        *(unaff_EBP + -0x10) = *0x480454;\n        pcVar4 = _sym.imp.USER32.dll_GetParent;\n        *(unaff_EBP + -4) = 0;\n        uVar5 = (*pcVar4)(iVar2);\n        iVar6 = fcn.00436a76(uVar5);\n        uVar5 = fcn.0043b95e(0x104);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar6 + 0x1c), 0x464, 0x104, uVar5);\n        if (iVar6 < 0) {\n            fcn.0043b4b9();\n        }\n        else {\n            fcn.0043b9ad(iVar2, 0xffffffff);\n        }\n        if (*(*(unaff_EBP + -0x10) + -8) != 0) {\n            uVar5 = (*pcVar4)(*(*(unaff_EBP + -0x14) + 0x1c));\n            iVar6 = fcn.00436a76(uVar5);\n            uVar5 = fcn.0043b95e(0x104);\n            iVar6 = (*pcVar3)(*(iVar6 + 0x1c), 0x465, 0x104, uVar5);\n            if (-1 < iVar6) {\n                fcn.0043b9ad(0xffffffff);\n                fcn.0043b2a3(unaff_EBP + -0x10);\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.0043b52e();\n                goto code_r0x0042e582;\n            }\n            fcn.0043b4b9();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0043b52e();\n        iVar6 = *(unaff_EBP + -0x14);\n    }\n    fcn.0043b59c(*(iVar6 + 0x78));\ncode_r0x0042e582:\n    uVar5 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 774
    },
    "0042f1f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f1f8(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    if (arg_8h != 0) {\n        iVar2 = fcn.0045744f(0x455298);\n        if (*(iVar2 + 0x18) != 0) {\n            fcn.00439a79(arg_8h);\n            *(iVar2 + 0x18) = 0;\n        }\n        pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n        if (arg_ch == 0x110) {\n            *0x485c00 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"commdlg_LBSelChangedNotify\");\n            *0x485bfc = (*pcVar1)(\"commdlg_ShareViolation\");\n            *0x485bf8 = (*pcVar1)(\"commdlg_FileNameOK\");\n            *0x485bf4 = (*pcVar1)(\"commdlg_ColorOK\");\n            *0x485bf0 = (*pcVar1)(\"commdlg_help\");\n            *0x485bec = (*pcVar1)(\"commdlg_SetRGBColor\");\n            uVar3 = fcn.00435af6(arg_8h, 0x110, arg_10h, arg_14h);\n            return uVar3;\n        }\n        if ((arg_ch == *0x485bf0) || ((arg_ch == 0x111 && (arg_10h == 0x40e)))) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x111, 0xe146, 0);\n            return 1;\n        }\n        if (0xbfff < arg_ch) {\n            piVar4 = fcn.00436a9d(arg_8h);\n            iVar2 = fcn.0043c860(0x46f088);\n            if ((iVar2 == 0) || ((*(piVar4 + 0x92) & 8) == 0)) {\n                if (arg_ch == *0x485bfc) {\n                    uVar3 = (**(*piVar4 + 0xd0))(arg_14h);\n                    return uVar3;\n                }\n                if (arg_ch == *0x485bf8) {\n                    if (*0x48598c != 0) {\n                        piVar4[0x7d] = arg_14h;\n                    }\n                    uVar3 = (**(*piVar4 + 0xd4))();\n                    piVar4[0x7d] = 0;\n                    return uVar3;\n                }\n                if (arg_ch == *0x485c00) {\n                    (**(*piVar4 + 0xd8))(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n                }\n                else if (arg_ch == *0x485bf4) {\n                    uVar3 = (**(*piVar4 + 0xd0))();\n                    return uVar3;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 720
    },
    "00430da5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430da5(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_8h;\n    \n    fcn.00431037(&var_2ch, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        fcn.00410d20(&var_1ch, arg_10h, 0x10);\n    }\n    var_8h = arg_ch;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x404, 0, &var_2ch);\n    return;\n}\n",
        "token_count": 177
    },
    "00430df3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430df3(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    fcn.00431037(&var_2ch, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        fcn.00410d20(&var_1ch, arg_10h, 0x10);\n    }\n    iVar1 = fcn.00456c34();\n    var_ch = *(iVar1 + 0xc);\n    var_8h = arg_ch & 0xffff;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x404, 0, &var_2ch);\n    return;\n}\n",
        "token_count": 221
    },
    "0043108a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043108a(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    iVar1 = fcn.004569a4();\n    iVar2 = *(iVar1 + 0xcc);\n    if (arg_8h == 0) {\n        if ((*(in_ECX + 0x24) & arg_ch) != 0) {\n            if (*(iVar1 + 0xd0) == in_ECX) {\n                fcn.004373a5(1);\n            }\n            if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n                fcn.004108b0(&var_2ch, 0, 0x2c);\n                var_24h = *(in_ECX + 0x1c);\n                var_2ch = 0x28;\n                var_28h = 1;\n                var_20h = var_24h;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_2ch);\n            }\n            *(in_ECX + 0x24) = *(in_ECX + 0x24) & ~arg_ch;\n        }\n    }\n    else if ((*(in_ECX + 0x24) & arg_ch) == 0) {\n        iVar2 = fcn.00456c34();\n        *(iVar2 + 0x1034) = 0x4311ce;\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) | arg_ch;\n    }\n    return 1;\n}\n",
        "token_count": 418
    },
    "004311de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl fcn.004311de(uint arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *extraout_ECX;\n    uint32_t uVar8;\n    int32_t unaff_EBP;\n    uint *puVar9;\n    int32_t *piVar10;\n    uint *puVar11;\n    uint *in_FS_OFFSET;\n    uint var_80h;\n    uint var_7ch;\n    uint var_60h;\n    uint var_5ch;\n    uint lParam;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint lpPoint;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    puVar9 = *(unaff_EBP + 8);\n    uVar8 = puVar9[1];\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -0x1c) = uVar8;\n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((((uVar8 == 0x200) || (uVar8 == 0xa0)) || (uVar8 == 0x202)) || ((uVar8 == 0x205 || (uVar8 == 0x208)))) {\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar2) {\n            iVar2 = (*pcVar1)(2);\n            if (-1 < iVar2) {\n                iVar2 = (*pcVar1)(4);\n                if (-1 < iVar2) {\n                    var_80h = *puVar9;\n                    while( true ) {\n                        piVar3 = fcn.00436a76(var_80h);\n                        if ((piVar3 == NULL) || ((*(piVar3 + 9) & 0x401) != 0)) break;\n                        var_80h = (*_sym.imp.USER32.dll_GetParent)(piVar3[7]);\n                    }\n                    if (piVar3 != extraout_ECX) {\n                        if (piVar3 == NULL) {\n                            iVar4 = fcn.0045744f(0x455298);\n                            *(iVar4 + 0xd0) = 0;\n                            *(iVar4 + 0xd4) = 0xffffffff;\n                        }\n                        goto code_r0x00431639;\n                    }\n                    iVar4 = fcn.0045744f(0x455298);\n                    *(unaff_EBP + -0x18) = iVar4;\n                    piVar3 = *(iVar4 + 0xcc);\n                    uVar5 = fcn.00438201();\n                    *(unaff_EBP + -0x14) = uVar5;\n                    if (piVar3 == NULL) {\ncode_r0x004312f2:\n                        iVar6 = fcn.0043a6f7(0x58);\n                        *(unaff_EBP + -0x1c) = iVar6;\n                        piVar3 = NULL;\n                        *(unaff_EBP + -4) = 0;\n                        if (iVar6 != 0) {\n                            piVar3 = fcn.00430b85();\n                        }\n                        *(unaff_EBP + -4) = 0xffffffff;\n                        iVar6 = fcn.00430bda(*(unaff_EBP + -0x14), 1);\n                        if (iVar6 == 0) {\n                            if (piVar3 != NULL) {\n                                (**(*piVar3 + 4))(1);\n                            }\n                            goto code_r0x00431639;\n                        }\n                        (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x401, 0, 0);\n                        piVar10 = *(unaff_EBP + -0x10);\n                        *(iVar4 + 0xcc) = piVar3;\n                    }\n                    else {\n                        iVar6 = fcn.0040540d();\n                        if (iVar6 != *(unaff_EBP + -0x14)) {\n                            (**(*piVar3 + 0x58))();\n                            (**(*piVar3 + 4))(1);\n                            piVar3 = NULL;\n                            *(iVar4 + 0xcc) = 0;\n                        }\n                        piVar10 = extraout_ECX;\n                        if (piVar3 == NULL) goto code_r0x004312f2;\n                    }\n                    fcn.004108b0(unaff_EBP + -0x54, 0, 0x2c);\n                    iVar6 = piVar10[7];\n                    *(unaff_EBP + -0x4c) = iVar6;\n                    *(unaff_EBP + -0x48) = iVar6;\n                    *(unaff_EBP + -0x54) = 0x28;\n                    *(unaff_EBP + -0x50) = 1;\n                    iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x408, 0, unaff_EBP + -0x54);\n                    if (iVar6 == 0) {\n                        (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x404, 0, unaff_EBP + -0x54);\n                    }\n                    uVar5 = *(*(unaff_EBP + 8) + 0x14);\n                    *(unaff_EBP + -0x24) = *(*(unaff_EBP + 8) + 0x18);\n                    *(unaff_EBP + -0x28) = uVar5;\n                    (*_sym.imp.USER32.dll_ScreenToClient)(piVar10[7], unaff_EBP + -0x28);\n                    fcn.004108b0(unaff_EBP + -0x80, 0, 0x2c);\n                    iVar6 = *piVar10;\n                    *(unaff_EBP + -0x80) = 0x28;\n                    iVar7 = (**(iVar6 + 100))(*(unaff_EBP + -0x28), *(unaff_EBP + -0x24), unaff_EBP + -0x80);\n                    *(unaff_EBP + -0x1c) = iVar7;\n                    uVar8 = -(iVar7 != -1) & piVar10;\n                    iVar6 = *(iVar4 + 0xd4);\n                    *(unaff_EBP + -0x14) = uVar8;\n                    if ((iVar6 == iVar7) && (*(iVar4 + 0xd0) == uVar8)) {\n                        if ((*(piVar10 + 0x25) & 4) == 0) {\n                            if (iVar7 != -1) {\n                                fcn.0043114c(piVar3, *(unaff_EBP + 8));\n                            }\n                        }\n                        else {\n                            (*_sym.imp.USER32.dll_GetCursorPos)(unaff_EBP + -0x20);\n                            (*_sym.imp.USER32.dll_SendMessageA)\n                                      (piVar3[7], 0x412, 0, CONCAT22(*(unaff_EBP + -0x1c), *(unaff_EBP + -0x20)));\n                        }\n                    }\n                    else {\n                        if (iVar7 == -1) {\n                            (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x401, 0, 0);\n                        }\n                        else {\n                            uVar8 = *(unaff_EBP + -0x7c) & 0x3fffffff;\n                            puVar9 = unaff_EBP + -0x80;\n                            puVar11 = unaff_EBP + -0x54;\n                            for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *puVar11 = *puVar9;\n                                puVar9 = puVar9 + 1;\n                                puVar11 = puVar11 + 1;\n                            }\n                            *(unaff_EBP + -0x50) = uVar8;\n                            if ((*(*(unaff_EBP + -0x10) + 0x24) & 0x400) != 0) {\n                                *(unaff_EBP + -0x50) = uVar8 | 0x20;\n                            }\n                            (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x404, 0, unaff_EBP + -0x54);\n                            if ((*(unaff_EBP + -0x79) & 0x40) == 0) {\n                                iVar4 = fcn.00438245();\n                                if (iVar4 != 0) goto code_r0x004314ac;\n                            }\n                            else {\ncode_r0x004314ac:\n                                (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x401, 1, 0);\n                                if ((*(*(unaff_EBP + -0x10) + 0x24) & 0x400) != 0) {\n                                    (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x411, 1, unaff_EBP + -0x54);\n                                }\n                                (*_sym.imp.USER32.dll_SetWindowPos)(piVar3[7], 0, 0, 0, 0, 0, 0x213);\n                            }\n                            iVar4 = *(unaff_EBP + -0x18);\n                        }\n                        fcn.0043114c(piVar3, *(unaff_EBP + 8));\n                        if (0x27 < *(iVar4 + 0xd8)) {\n                            (*_sym.imp.USER32.dll_SendMessageA)(piVar3[7], 0x405, 0, iVar4 + 0xd8);\n                        }\n                        *(iVar4 + 0xd0) = *(unaff_EBP + -0x14);\n                        *(iVar4 + 0xd4) = *(unaff_EBP + -0x1c);\n                        puVar9 = unaff_EBP + -0x80;\n                        puVar11 = iVar4 + 0xd8;\n                        for (iVar6 = 0xb; iVar6 != 0; iVar6 = iVar6 + -1) {\n                            *puVar11 = *puVar9;\n                            puVar9 = puVar9 + 1;\n                            puVar11 = puVar11 + 1;\n                        }\n                    }\n                    if ((*(unaff_EBP + -0x5c) != -1) && (*(unaff_EBP + -0x60) == 0)) {\n                        fcn.00411abc(*(unaff_EBP + -0x5c));\n                    }\n                    goto code_r0x00431639;\n                }\n            }\n        }\n        uVar8 = *(unaff_EBP + -0x1c);\n    }\n    if ((*(extraout_ECX + 9) & 0x401) != 0) {\n        var_80h = *puVar9;\n        while( true ) {\n            piVar3 = fcn.00436a76(var_80h);\n            if (piVar3 == NULL) break;\n            if (piVar3 == extraout_ECX) goto code_r0x004315a2;\n            if ((*(piVar3 + 9) & 0x401) != 0) break;\n            var_80h = (*_sym.imp.USER32.dll_GetParent)(piVar3[7]);\n        }\n        if (piVar3 == extraout_ECX) {\ncode_r0x004315a2:\n            if (((uVar8 < 0x100) || (0x108 < uVar8)) && ((uVar8 < 0x104 || (0x107 < uVar8)))) {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = 1;\n            }\n            if (((*(extraout_ECX + 0x25) & 4) == 0) &&\n               ((((((iVar4 != 0 || (uVar8 == 0x201)) || (uVar8 == 0x203)) || ((uVar8 == 0x204 || (uVar8 == 0x206)))) ||\n                 ((((uVar8 == 0x207 || ((uVar8 == 0x209 || (uVar8 == 0xa1)))) || (uVar8 == 0xa3)) ||\n                  (((uVar8 == 0xa4 || (uVar8 == 0xa6)) || (uVar8 == 0xa7)))))) || (uVar8 == 0xa9)))) {\n                fcn.004373a5(iVar4);\n            }\n        }\n    }\ncode_r0x00431639:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 2924
    },
    "00432bcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432bcb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar1 = fcn.00433177(param_1 + 0x14, *(param_1 + 0x18));\n        iVar3 = *(param_1 + 0x18);\n        puVar2 = iVar1 + -8 + iVar3 * 0xc;\n        if (-1 < iVar3 + -1) {\n            do {\n                *puVar2 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar2;\n                puVar2 = puVar2 + -3;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    puVar2 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar2;\n    puVar2[1] = uStack8;\n    *puVar2 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar2[2] = 0;\n    return;\n}\n",
        "token_count": 318
    },
    "0043438a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043438a(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        fcn.0043a720(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.0043a6f7(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.004108b0(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 175
    },
    "00434423": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434423(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.00433177(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar4 * 0xc;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -3;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    puVar3[1] = 0;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 302
    },
    "00434657": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434657(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        fcn.0043a720(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.0043a6f7(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.004108b0(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 174
    },
    "00434717": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00434717(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.00433177(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -0xc + iVar4 * 0x10;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -4;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    fcn.00410d20(puVar3 + 2, 0x480454, 4);\n    puVar3[3] = 0;\n    return puVar3;\n}\n",
        "token_count": 323
    },
    "00435cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00435cd0(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_EDI;\n    \n    *(param_1 + 0x40) = param_2;\n    if ((param_2 >> 0x10 == 0) && (*(param_1 + 0x3c) == 0)) {\n        *(param_1 + 0x3c) = param_2 & 0xffff;\n    }\n    iVar2 = fcn.00456c34();\n    uVar1 = *(iVar2 + 0xc);\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, param_2, 5);\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, uVar3);\n    fcn.00435d31(uVar3, unaff_EDI, uVar1);\n    return;\n}\n",
        "token_count": 227
    },
    "00436157": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t fcn.00436157(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint noname_1;\n    uint32_t uVar4;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_10h;\n    int32_t *noname_4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hWnd;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    uint noname_13;\n    \n    noname_13 = 0x436161;\n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = &fcn.00436157::var_20h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar2 = extraout_ECX[0x11];\n    *(unaff_EBP + -0x18) = extraout_ECX[0x12];\n    var_20h = unaff_EDI;\n    var_1ch = unaff_ESI;\n    var_18h = unaff_EBX;\n    iVar1 = fcn.00456c34();\n    uVar5 = *(iVar1 + 0xc);\n    if (extraout_ECX[0x10] != 0) {\n        iVar2 = fcn.00456c34();\n        uVar5 = *(iVar2 + 0xc);\n        uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar5, extraout_ECX[0x10], 5);\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar5, uVar3);\n    }\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        *(unaff_EBP + -0x18) = uVar3;\n    }\n    if (*(unaff_EBP + -0x18) == 0) {\n        iVar2 = -1;\n    }\n    else {\n        uVar3 = fcn.004360db();\n        *(unaff_EBP + -0x14) = uVar3;\n        fcn.00436f75();\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14));\n            if (iVar2 != 0) {\n                (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n                *(unaff_EBP + -0x20) = 1;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        noname_4 = extraout_ECX;\n        fcn.00436f29();\n        uVar3 = *(unaff_EBP + -0x14);\n        noname_1 = fcn.00436a76();\n        iVar2 = fcn.00435deb(*(unaff_EBP + -0x18), noname_1, uVar5, uVar3, noname_4, var_20h, var_1ch, var_18h, hWnd, \n                             in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h, noname_13, unaff_retaddr, param_1, \n                             param_2, param_3, var_10h);\n        if (iVar2 != 0) {\n            if ((*(extraout_ECX + 9) & 0x10) != 0) {\n                uVar5 = 4;\n                uVar4 = fcn.00439ddc();\n                if ((uVar4 & 0x100) != 0) {\n                    uVar5 = 5;\n                }\n                fcn.004394c6(uVar5);\n            }\n            if (extraout_ECX[7] != 0) {\n                fcn.00439f68(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n            if (iVar2 == extraout_ECX[7]) {\n                (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n            }\n        }\n        (**(*extraout_ECX + 0x58))();\n        fcn.00436115();\n        iVar2 = extraout_ECX[0xb];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 1306
    },
    "004368b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nuint fcn.004368b5(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_40h;\n    uint var_24h;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    iVar1 = fcn.0045744f(0x455298);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    puVar4 = iVar1 + 0x34;\n    puVar5 = unaff_EBP + -0x40;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(iVar1 + 0x34) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x3c) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x38) = iVar3;\n    *(iVar1 + 0x40) = uVar2;\n    if ((iVar3 == 2) && (arg_8h[0xd] != NULL)) {\n        (**(*arg_8h[0xd] + 0x5c))(0);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.00436742(arg_8h, unaff_EBP + -0x24, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h + 0x98))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.00436765(arg_8h, unaff_EBP + -0x24);\n    }\n    uVar2 = *(unaff_EBP + 0x18);\n    puVar4 = unaff_EBP + -0x40;\n    puVar5 = iVar1 + 0x34;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 780
    },
    "00436a04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00436a04(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar1 = fcn.00456c5a();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0043a6e5(0x441bd8);\n        iVar3 = fcn.0043a6f7(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0043d236(0x46cd20, 0x1c, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.0043a6e5(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 359
    },
    "00436d33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00436d33(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    code *pcVar9;\n    uint32_t var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0045744f(0x455298);\n    if (arg_8h != 3) {\n        uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), arg_8h, arg_ch, arg_10h);\n        return uVar2;\n    }\n    piVar1 = *(var_4h + 0x14);\n    iVar6 = *arg_10h;\n    iVar3 = fcn.00456c34();\n    var_8h = *(iVar3 + 0x14);\n    if ((piVar1 == NULL) && (((*(iVar6 + 0x23) & 0x40) != 0 || (var_8h != 0)))) goto code_r0x00436efc;\n    if (*0x48599c != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe6);\n        if ((uVar4 & 0x10000) != 0) goto code_r0x00436efc;\n        puVar5 = *(iVar6 + 0x28);\n        if (puVar5 >> 0x10 == 0) {\n            var_10h = var_10h & 0xffffff00 | var_10h & puVar5 >> 0x10;\n            (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(&var_10h & 0xffff0000 | *(iVar6 + 0x28), &var_10h, 5);\n            puVar5 = &var_10h;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(puVar5, 0x46d1d0);\n        if (iVar6 == 0) goto code_r0x00436efc;\n    }\n    if (piVar1 == NULL) {\n        iVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        pcVar9 = _sym.imp.USER32.dll_GetPropA;\n        if ((iVar6 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetPropA)(arg_ch, \"AfxOldWndProc423\"),  iVar3 == 0)) {\n            (*_sym.imp.USER32.dll_SetPropA)(arg_ch, \"AfxOldWndProc423\", iVar6);\n            iVar3 = (*pcVar9)(arg_ch, \"AfxOldWndProc423\");\n            if (iVar3 == iVar6) {\n                (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(\"AfxOldWndProc423\");\n                pcVar9 = fcn.00436cb7;\n                if (*(var_4h + 0x28) == 0) {\n                    pcVar9 = fcn.00436b58;\n                }\n                (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, pcVar9);\n            }\n        }\n        goto code_r0x00436efc;\n    }\n    fcn.00436abb(arg_ch);\n    (**(*piVar1 + 0x50))();\n    piVar7 = (**(*piVar1 + 0x80))();\n    iVar6 = *0x485928;\n    if ((((*0x48598c == 0) && (var_8h == 0)) && (*0x485928 != 0)) &&\n       ((*(*0x485928 + 0x20) != 0 && (var_10h = fcn.004368b5(piVar1, arg_ch, 0x36f, 0, 0),  var_10h != 0)))) {\n        iVar3 = fcn.00436b52();\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        (**(iVar6 + 0x20))(arg_ch, var_10h);\n        if (iVar8 != iVar3) {\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar3);\ncode_r0x00436e90:\n            *piVar7 = iVar3;\n        }\n    }\n    else {\n        iVar6 = fcn.00436b52();\n        iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar6);\n        if (iVar3 != iVar6) goto code_r0x00436e90;\n    }\n    *(var_4h + 0x14) = 0;\ncode_r0x00436efc:\n    iVar6 = var_4h;\n    uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), 3, arg_ch, arg_10h);\n    if (var_8h != 0) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar6 + 0x2c));\n        *(iVar6 + 0x2c) = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1268
    },
    "00436f29": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00436f29(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.0045744f(0x455298);\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x2c) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, fcn.00436d33, 0, uVar2);\n            *(iVar1 + 0x2c) = iVar3;\n            if (iVar3 == 0) {\n                fcn.0042f1c0();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00436f75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00436f75(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0045744f(0x455298);\n    iVar2 = fcn.00456c34();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x2c) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x2c));\n        *(iVar1 + 0x2c) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 172
    },
    "004370c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004370c4(int32_t param_1)\n\n{\n    if (*(param_1 + 0x28) == 0) {\n        fcn.0043970d(1);\n        *(param_1 + 0x28) = \"AfxWnd42s\";\n    }\n    return 1;\n}\n",
        "token_count": 72
    },
    "004371ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004371ca(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    \n    iVar2 = fcn.0043aa46();\n    if (iVar2 == 0) goto code_r0x00437215;\n    if (*(iVar2 + 0x1c) == param_1) {\n        iVar3 = fcn.00456c34();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00456c34();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00451462();\n                if (iVar3 == 0) goto code_r0x0043720a;\n            }\n            fcn.0046695d(0);\n        }\ncode_r0x0043720a:\n        *(iVar2 + 0x1c) = 0;\n    }\n    if (*(iVar2 + 0x20) == param_1) {\n        *(iVar2 + 0x20) = 0;\n    }\ncode_r0x00437215:\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 0x50))();\n        param_1[0xc] = 0;\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    param_1[0xd] = 0;\n    if ((*(param_1 + 9) & 1) != 0) {\n        iVar2 = fcn.004569a4();\n        iVar2 = *(iVar2 + 0xcc);\n        if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n            fcn.004108b0(&var_2ch, 0, 0x2c);\n            var_24h = param_1[7];\n            var_2ch = 0x28;\n            var_28h = 1;\n            var_20h = var_24h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_2ch);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[7], 0xfffffffc);\n    fcn.004369dd();\n    iVar3 = (*pcVar1)(param_1[7], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0x80))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[7], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.00436af4();\n    (**(*param_1 + 0xa4))();\n    return;\n}\n",
        "token_count": 728
    },
    "004372ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004372ee(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        return 0;\n    }\n    fcn.00436a04(0);\n    iVar1 = fcn.004344bb(*(param_1 + 0x1c));\n    if (*(param_1 + 0x38) == NULL) {\n        uVar2 = (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 0x1c));\n    }\n    else {\n        uVar2 = (**(**(param_1 + 0x38) + 0x50))();\n    }\n    if (iVar1 == 0) {\n        fcn.00436af4();\n    }\n    return uVar2;\n}\n",
        "token_count": 190
    },
    "004373a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004373a5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.004569a4();\n    if ((*(iVar4 + 0xcc) != 0) && (iVar1 = *(*(iVar4 + 0xcc) + 0x1c),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x108);\n    if ((param_1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0xdc))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "004379e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004379e2(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "00437a7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_60h\n\nuint __cdecl fcn.00437a7b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *arg_8h_00;\n    uint *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    code *pcVar10;\n    int32_t unaff_EBP;\n    int16_t iVar11;\n    uint *in_FS_OFFSET;\n    uint uVar12;\n    uint var_60h;\n    uint var_44h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = 0;\n    iVar4 = *(unaff_EBP + 8);\n    if (iVar4 == 0x111) {\n        iVar4 = (**(*arg_8h_00 + 0x78))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar4 != 0) {\ncode_r0x00437ed1:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x00437f15;\n        }\ncode_r0x00437c04:\n        uVar12 = 0;\n        goto code_r0x00437c06;\n    }\n    if (iVar4 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar4 = (**(*arg_8h_00 + 0x7c))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\ncode_r0x00437ad4:\n            if (iVar4 != 0) goto code_r0x00437f15;\n        }\n        goto code_r0x00437c04;\n    }\n    puVar7 = *(unaff_EBP + 0x10);\n    if (iVar4 == 6) {\n        uVar12 = fcn.00436a76(puVar7);\n        fcn.004367de(arg_8h_00, *(unaff_EBP + 0xc), uVar12);\n    }\n    iVar11 = puVar7;\n    if ((iVar4 == 0x20) && (iVar4 = fcn.0043683f(arg_8h_00, iVar11, puVar7 >> 0x10),  iVar4 != 0))\n    goto code_r0x00437ed1;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    *(unaff_EBP + -0x14) = uVar5;\n    uVar9 = uVar5 & 0x1ff ^ *(unaff_EBP + 8) & 0x1ff;\n    fcn.00457a83(7);\n    uVar5 = *(unaff_EBP + 8);\n    iVar4 = uVar9 * 0xc;\n    iVar6 = *(unaff_EBP + -0x14);\n    if ((uVar5 != *(uVar9 * 0xc + 0x483be0)) || (iVar6 != *(iVar4 + 0x483be8))) {\n        *(iVar4 + 0x483be0) = uVar5;\n        *(iVar4 + 0x483be8) = iVar6;\n        if (iVar6 != 0) {\n            while( true ) {\n                if (uVar5 < 0xc000) {\n                    iVar6 = fcn.004379e2(*(iVar6 + 4), uVar5, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        *(iVar4 + 0x483be4) = iVar6;\n                        fcn.00457af3(7);\n                        iVar4 = *(unaff_EBP + 0x10);\n                        goto code_r0x00437c24;\n                    }\n                }\n                else {\n                    iVar6 = fcn.004379e2(*(iVar6 + 4), 0xc000, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        while( true ) {\n                            if (**(iVar6 + 0x10) == *(unaff_EBP + 8)) {\n                                *(iVar4 + 0x483be4) = iVar6;\n                                fcn.00457af3(7);\n                                iVar4 = *(unaff_EBP + 0x10);\n                                goto code_r0x00437f07;\n                            }\n                            iVar6 = fcn.004379e2(iVar6 + 0x18, 0xc000, 0, 0);\n                            *(unaff_EBP + 0x10) = iVar6;\n                            if (iVar6 == 0) break;\n                            iVar6 = *(unaff_EBP + 0x10);\n                        }\n                    }\n                }\n                iVar6 = **(unaff_EBP + -0x14);\n                *(unaff_EBP + -0x14) = iVar6;\n                if (iVar6 == 0) break;\n                iVar6 = *(unaff_EBP + -0x14);\n                uVar5 = *(unaff_EBP + 8);\n            }\n        }\n        *(iVar4 + 0x483be4) = 0;\n        fcn.00457af3(7);\n        goto code_r0x00437c04;\n    }\n    iVar4 = *(iVar4 + 0x483be4);\n    *(unaff_EBP + 0x10) = iVar4;\n    fcn.00457af3(7);\n    if (iVar4 == 0) goto code_r0x00437c04;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x00437f07:\n        pcVar10 = *(iVar4 + 0x14);\ncode_r0x00437f0a:\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x00437f0e;\n    }\ncode_r0x00437c24:\n    iVar6 = *(unaff_EBP + 0x10);\n    pcVar10 = *(iVar4 + 0x14);\n    iVar4 = *(iVar6 + 0x10);\n    if (*(iVar6 + 8) == 0x1a) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        iVar6 = *(unaff_EBP + 0x10);\n        iVar4 = (-(uVar2 < 4) & 0xfffffff0) + 0x2f;\n    }\n    iVar3 = puVar7 >> 0x10;\n    // switch table (49 cases) at 0x437f29\n    switch(iVar4) {\n    case 1:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.00441ccc(puVar7);\n        goto code_r0x00437d5f;\n    case 2:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00437d5f;\n    case 3:\n    case 8:\n        uVar9 = puVar7 >> 0x10;\n        puVar7 = iVar11;\n        uVar5 = *(unaff_EBP + 0xc);\n        uVar9 = fcn.00436a76(uVar5, puVar7, uVar9);\n        goto code_r0x00437d7a;\n    case 4:\n        fcn.00441c2a();\n        uVar12 = puVar7[1];\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x20) = uVar12;\n        fcn.00436655();\n        uVar12 = *puVar7;\n        uVar1 = puVar7[2];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x44) = uVar12;\n        iVar4 = fcn.00436a9d(uVar12);\n        if (iVar4 == 0) {\n            if ((arg_8h_00[0xd] != 0) && (iVar4 = fcn.004344bb(*(unaff_EBP + -0x44)),  iVar4 != 0)) {\n                *(unaff_EBP + -0x28) = iVar4;\n            }\n            iVar4 = unaff_EBP + -0x60;\n        }\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, iVar4, uVar1);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = uVar12;\n        fcn.00437130();\n        *(unaff_EBP + -4) = 0xffffffff;\n        goto code_r0x00437d35;\n    case 5:\n        fcn.00441c2a();\n        uVar12 = puVar7[2];\n        *(unaff_EBP + -0x20) = puVar7[1];\n        *(unaff_EBP + -4) = 2;\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, uVar12);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x10) = uVar12;\ncode_r0x00437d35:\n        fcn.00441d5f();\n        break;\n    case 6:\n        uVar5 = fcn.00436a76(puVar7, *(unaff_EBP + 0xc) >> 0x10);\n        goto code_r0x00437d75;\n    case 7:\n        puVar7 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x00437f0e;\n    case 9:\n    case 0x2a:\ncode_r0x00437d5f:\n        uVar12 = (*pcVar10)(puVar7);\ncode_r0x00437f12:\n        *(unaff_EBP + -0x10) = uVar12;\n        break;\n    case 10:\n    case 0x21:\n        goto code_r0x00437f0a;\n    case 0xb:\n        puVar7 = fcn.0043d50e(puVar7);\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00437d75:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x00437d7a:\n        uVar12 = (*pcVar10)(uVar9, uVar5, puVar7);\n        goto code_r0x00437f12;\n    case 0xc:\n        (*pcVar10)();\n        break;\n    case 0xd:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00437e9e;\n    case 0xe:\n    case 0x12:\n    case 0x25:\n    case 0x2f:\n        goto code_r0x00437e7e;\n    case 0xf:\n        puVar8 = iVar3;\n        iVar4 = iVar11;\n        goto code_r0x00437e81;\n    case 0x10:\n    case 0x11:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x00437ebf;\n    case 0x13:\n        puVar8 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.00436a76(puVar8);\n        fcn.00436a76(puVar7, uVar5);\n        uVar9 = arg_8h_00[7] == puVar7;\n        goto code_r0x00437ec3;\n    case 0x14:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.00441ccc(puVar7);\n        goto code_r0x00437e9e;\n    case 0x15:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.0043d50e(puVar7);\n        goto code_r0x00437e9e;\n    case 0x16:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        uVar9 = fcn.0043d50e(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x00437ec3;\n    case 0x17:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00437e05;\n    case 0x18:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x00437e21;\n    case 0x19:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x00437e21:\n        uVar9 = fcn.00436a76(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x00437ec3;\n    case 0x1a:\n        iVar4 = fcn.00436a76(*(unaff_EBP + 0xc), puVar7);\n        puVar8 = puVar7;\n        goto code_r0x00437e81;\n    case 0x1b:\n        fcn.00436a76(puVar7);\ncode_r0x00437e7e:\n        iVar4 = *(unaff_EBP + 0xc);\n        puVar8 = puVar7;\n        goto code_r0x00437e81;\n    case 0x1c:\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = fcn.00436a76(puVar7, puVar8);\n        goto code_r0x00437eab;\n    case 0x1d:\n    case 0x1e:\n        iVar4 = *(unaff_EBP + 0xc);\n        iVar6 = *(iVar6 + 0x10);\n        *(unaff_EBP + 8) = iVar4;\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 0xc) = puVar8;\n        if (iVar6 == 0x1d) {\n            uVar5 = fcn.00436a76(puVar7);\n            uVar9 = *(unaff_EBP + 0xc);\n            puVar8 = puVar7;\n            goto code_r0x00437ec3;\n        }\ncode_r0x00437e81:\n        (*pcVar10)(iVar4, puVar8);\n        break;\n    case 0x1f:\n    case 0x24:\n        goto code_r0x00437e9e;\n    case 0x20:\n    case 0x2b:\n        (*pcVar10)(*(unaff_EBP + 0xc), puVar7);\n        goto code_r0x00437ed1;\n    case 0x22:\n        uVar5 = iVar11;\n        puVar7 = iVar3;\n        goto code_r0x00437f0e;\n    case 0x23:\n        uVar12 = (*pcVar10)();\n        goto code_r0x00437f12;\n    case 0x2c:\ncode_r0x00437e05:\n        fcn.00436a76(puVar7);\ncode_r0x00437e9e:\n        (*pcVar10)(puVar7);\n        break;\n    case 0x2d:\n        uVar5 = fcn.00436a76(*(unaff_EBP + 0xc), puVar7);\ncode_r0x00437f0e:\n        uVar12 = (*pcVar10)(uVar5, puVar7);\n        goto code_r0x00437f12;\n    case 0x2e:\n        iVar4 = (*pcVar10)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, puVar7 & 0xffff, puVar7 >> 0x10);\n        *(unaff_EBP + -0x10) = iVar4;\n        goto code_r0x00437ad4;\n    case 0x30:\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        puVar8 = puVar7;\ncode_r0x00437eab:\n        uVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x00437ec3;\n    case 0x31:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x00437ebf:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x00437ec3:\n        (*pcVar10)(uVar9, uVar5, puVar8);\n    }\ncode_r0x00437f15:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    uVar12 = 1;\ncode_r0x00437c06:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar12;\n}\n",
        "token_count": 4147
    },
    "004382b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004382b6(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[7] != 0)) {\n        iVar2 = (**(*param_1 + 0xb0))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.00438126();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.00438126();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 184
    },
    "00438347": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00438347(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.00438347(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return iVar3;\n        }\n        if (arg_10h == 0) {\n            iVar2 = fcn.00436a76();\n            return iVar2;\n        }\n        iVar2 = fcn.00436a9d(iVar2);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.00438347(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return iVar3;\n}\n",
        "token_count": 331
    },
    "004383c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004383c0(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.00436a9d(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.004368b5(iVar2, *(iVar2 + 0x1c), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.004383c0(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 331
    },
    "0043858d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043858d(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*0x485984 < 0x333) {\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = param_1[7];\n        if (param_2 != 2) {\n            iVar2 = (**(*param_1 + 0x68))(param_2);\n            if (iVar2 != 0) {\n                iVar3 = *(iVar2 + 0x1c);\n                param_2 = 2;\n            }\n        }\n        *param_3 = 0x1c;\n        param_3[1] = param_4;\n        uVar1 = (*_sym.imp.USER32.dll_GetScrollInfo)(iVar3, param_2, param_3);\n    }\n    return uVar1;\n}\n",
        "token_count": 223
    },
    "00438621": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438621(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0x1c));\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (((iVar2 == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        uVar3 = 5;\n        iVar2 = *(in_ECX + 0x1c);\n        while( true ) {\n            iVar2 = (*pcVar1)(iVar2, uVar3);\n            if (iVar2 == 0) break;\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar2, &var_10h);\n            fcn.0044272e(&var_10h);\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar2, 0, var_10h + arg_8h, var_ch + arg_ch, 0, 0, 0x15);\n            uVar3 = 2;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_ScrollWindow)(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    if ((*(in_ECX + 0x34) != NULL) && (arg_10h == 0)) {\n        (**(**(in_ECX + 0x34) + 0x58))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "004386c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004386c7(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x1c), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    if (arg_14h == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x1c)); iVar2 != 0;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        uVar3 = uVar3 & 0xffff;\n        iVar4 = fcn.00436a9d(iVar2);\n        iVar1 = iVar2;\n        if ((((uVar3 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar3)) && (uVar3 <= arg_ch)) && (iVar4 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (arg_14h == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar5 = fcn.00436a76(var_4h);\n            if (arg_14h == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            (**(*piVar5 + 0x60))(&lprcSrc, 0);\n            fcn.00438801(&hWinPosInfo, var_4h, &lprcSrc);\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 906
    },
    "00438801": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438801(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar2 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar3, &lpRect);\n        (*pcVar2)(uVar3, &var_8h);\n        iVar4 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar4 == 0) {\n            iVar4 = lprc2[1];\n            iVar1 = *lprc2;\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, iVar1, iVar4, lprc2[2] - iVar1, lprc2[3] - iVar4, 0x14);\n            }\n            else {\n                iVar4 = (*_sym.imp.USER32.dll_DeferWindowPos)\n                                  (*arg_8h, hWnd, 0, iVar1, iVar4, lprc2[2] - iVar1, lprc2[3] - iVar4);\n                *arg_8h = iVar4;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0043889b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043889b(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = fcn.00439df6();\n    if (param_2 == 0) {\n        uVar1 = uVar1 & 0xfffffdff;\n    }\n    uVar2 = fcn.00439ddc(0, uVar1);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(param_1, uVar2);\n    return;\n}\n",
        "token_count": 122
    },
    "004388c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004388c6(uint32_t wParam, int32_t lParam)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint hWnd;\n    \n    iVar4 = fcn.004381a9();\n    uVar7 = wParam & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (lParam != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.0043a020();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (lParam != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x1c);\n            uVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n            pcVar2 = _sym.imp.USER32.dll_SetActiveWindow;\n            uVar6 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar4 + 0x1c));\n            fcn.00436a76(uVar6);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x1c), 0x112, wParam, lParam);\n            pcVar3 = _sym.imp.USER32.dll_IsWindow;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar2)(uVar1);\n            }\n            iVar4 = (*pcVar3)(uVar5);\n            if (iVar4 != 0) {\n                (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 459
    },
    "00438a9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00438a9b(uint32_t arg_8h, uint wParam, uint lParam, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x38) == 0) {\n        iVar1 = fcn.00438af6(arg_8h, wParam, lParam, arg_14h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), arg_8h + 0x2000, wParam, lParam);\n        if (((arg_8h < 0x132) || (0x138 < arg_8h)) || (iVar1 != 0)) {\n            if (arg_14h != NULL) {\n                *arg_14h = iVar1;\n            }\n            iVar1 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 215
    },
    "00438c0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00438c0b(int16_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        iVar1 = fcn.004569a4();\n        if ((*(iVar1 + 0xdf) & 0x40) == 0) {\n            fcn.004373a5(1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00438f81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438f81(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x00438ff0:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.004419d0(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x00438ff0;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 305
    },
    "004392bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004392bf(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    if (arg_8h != NULL) {\n        do {\n            if (*arg_8h == 0) break;\n            iVar3 = arg_8h[1];\n            iVar1 = *(arg_8h + 2);\n            puVar5 = arg_8h + 4;\n            if (iVar3 == 0x1234) {\ncode_r0x00439321:\n                var_24h = 0xffffffff;\n                var_28h = 1;\n                iVar3 = 0x401;\n                puVar6 = &var_28h;\n                var_20h = puVar5;\ncode_r0x0043934f:\n                iVar4 = (*pcVar2)(*(in_ECX + 0x1c), *arg_8h, iVar3, 0, puVar6);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                puVar6 = puVar5;\n                if (iVar3 == 0x401) {\n                    iVar3 = 0x180;\n                    goto code_r0x0043934f;\n                }\n                if (iVar3 == 0x403) {\n                    iVar3 = 0x143;\n                }\n                if (iVar3 == 0x401) goto code_r0x00439321;\n                if ((iVar3 == 0x180) || (iVar3 == 0x143)) goto code_r0x0043934f;\n            }\n            arg_8h = puVar5 + iVar1;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.004383c0(*(in_ECX + 0x1c), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 543
    },
    "00439391": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_74h\n\nvoid __cdecl fcn.00439391(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_74h;\n    uint hWnd;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0043a4b1();\n    fcn.00436655();\n    uVar1 = *(extraout_ECX + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(uVar1);\n    do {\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(unaff_EBP + -0x58) = 0;\n            fcn.00437130();\n            *in_FS_OFFSET = *(unaff_EBP + -0xc);\n            return;\n        }\n        *(unaff_EBP + -0x58) = iVar2;\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        *(unaff_EBP + -0x34) = uVar3 & 0xffff;\n        *(unaff_EBP + -0x24) = unaff_EBP + -0x74;\n        iVar4 = fcn.00436a9d(iVar2);\n        if (((iVar4 == 0) || (iVar4 = fcn.0043a2d7(0, 0xbd11ffff, unaff_EBP + -0x38, 0),  iVar4 == 0)) &&\n           (iVar4 = fcn.0043a2d7(*(unaff_EBP + -0x34), 0xffffffff, unaff_EBP + -0x38, 0),  iVar4 == 0)) {\n            iVar4 = *(unaff_EBP + 0xc);\n            if (iVar4 != 0) {\n                uVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(unaff_EBP + -0x58), 0x87, 0, 0);\n                if ((uVar3 & 0x2000) != 0) {\n                    uVar3 = fcn.00439ddc();\n                    uVar3 = uVar3 & 0xf;\n                    if (((uVar3 != 3) && (uVar3 != 6)) && ((uVar3 != 7 && (uVar3 != 9)))) goto code_r0x00439457;\n                }\n                iVar4 = 0;\n            }\ncode_r0x00439457:\n            fcn.0043a676(*(unaff_EBP + 8), iVar4);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    } while( true );\n}\n",
        "token_count": 729
    },
    "00439a79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00439a79(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00436abb(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0x80))();\n        uVar3 = fcn.00436b52();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, uVar3);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 192
    },
    "0043a068": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043a068(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint unaff_retaddr;\n    \n    if (*(param_1 + 0x38) != 0) {\n        fcn.0043a041(param_1, param_2, 2, param_3, param_4, 0, unaff_retaddr);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0043a101": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a101(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x38) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n        iVar2 = fcn.004344bb(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x34) != NULL)) {\n            (**(**(iVar2 + 0x34) + 0x8c))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0043a2d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043a2d7(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00456c34();\n        iVar1 = (**(**(iVar1 + 0x1038) + 4))();\n        return iVar1;\n    }\n    if (arg_ch == 0xfffffffd) {\n        arg_ch = 0;\n        iVar1 = *(arg_10h + 0x30);\n        puVar2 = (**(*in_ECX + 0x2c))();\n        do {\n            if (puVar2 == NULL) {\n                return arg_ch;\n            }\n            if (arg_ch != 0) {\n                return arg_ch;\n            }\n            piVar5 = puVar2[1];\n            while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                if (arg_8h == piVar5[1]) {\n                    if (iVar1 == 0) {\n                        iVar3 = *piVar5;\n                    }\n                    else {\n                        if (*piVar5 == 0) goto code_r0x0043a37a;\n                        iVar3 = fcn.00411a10(iVar1, *piVar5, 0x10);\n                    }\n                    if (iVar3 == 0) {\n                        arg_ch = 1;\n                        *(arg_10h + 4) = piVar5[2];\n                    }\n                }\ncode_r0x0043a37a:\n                piVar5 = piVar5 + 3;\n            }\n            puVar2 = *puVar2;\n        } while( true );\n    }\n    if (arg_ch != 0xffffffff) {\n        uVar4 = arg_ch & 0xffff;\n        arg_ch_00 = arg_ch >> 0x10;\n        arg_ch = uVar4;\n        if (arg_ch_00 != 0) goto code_r0x0043a39f;\n    }\n    arg_ch_00 = 0x111;\ncode_r0x0043a39f:\n    puVar2 = (**(*in_ECX + 0x28))();\n    while( true ) {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        iVar1 = fcn.004379e2(puVar2[1], arg_ch_00, arg_ch, arg_8h);\n        if (iVar1 != 0) break;\n        puVar2 = *puVar2;\n    }\n    iVar1 = fcn.0043a1d0(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n    return iVar1;\n}\n",
        "token_count": 696
    },
    "0043a86b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a86b(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x98) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x98));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if (iVar2 == 0) {\n            iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0);\n            if (iVar2 != 0) {\n                if (*(in_ECX + 0x94) != 0) {\n                    fcn.00441ba2(*(in_ECX + 0x94));\n                }\n                uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n                *(in_ECX + 0x94) = uVar3;\n                uVar3 = (*pcVar1)(uVar3);\n                iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n                if (iVar2 != 1) {\n                    fcn.00441ba2(*(in_ECX + 0x94));\n                    *(in_ECX + 0x94) = 0;\n                }\n                sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "0043ab3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043ab3b(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar2 = fcn.00456c5a();\n    piVar1 = *(iVar2 + 4);\n    if (piVar1 != NULL) {\n        if (piVar1[0x15] != NULL) {\n            (*piVar1[0x15])(1, 0);\n        }\n        if (param_2 != 0) {\n            (**(*piVar1 + 0x78))();\n        }\n        *(iVar2 + 4) = 0;\n    }\n    fcn.0043abdf(0);\n    fcn.00411d74(unaff_retaddr);\n    return;\n}\n",
        "token_count": 182
    },
    "0043ab80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043ab80(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00456c34();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.004569a4();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x43b02a, 0, uVar2);\n        *(iVar1 + 0x30) = uVar2;\n        iVar1 = fcn.00457511(0x4552fd);\n        if (*(iVar1 + 0x14) != 0) {\n            iVar3 = fcn.00456c34();\n            (**(iVar1 + 0x14))(*(iVar3 + 8));\n        }\n        fcn.0045744f(0x455b36);\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0043abdf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043abdf(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    fcn.0043d133();\n    fcn.0043d13c(0xffffffff);\n    if (unaff_retaddr == 0) {\n        iVar1 = fcn.004574c6();\n        if ((iVar1 != 0) && (*(iVar1 + 0xcc) != NULL)) {\n            (**(**(iVar1 + 0xcc) + 0x58))();\n            if (*(iVar1 + 0xcc) != NULL) {\n                (**(**(iVar1 + 0xcc) + 4))(1);\n            }\n            *(iVar1 + 0xcc) = 0;\n        }\n    }\n    if (*0x4858ec != 0) {\n        fcn.004573f6(unaff_retaddr, 0);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0043b005": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043b005(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (param_2[1] == 1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (param_2[1] == 0xf) {\n            (*_sym.imp.USER32.dll_ValidateRect)(*param_2, 0);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "0043b2a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0043b2a3(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -0xc) < 0) {\n        *param_1 = *0x480454;\n        fcn.0043b6b7(*param_2);\n    }\n    else {\n        *param_1 = iVar1;\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n    }\n    return param_1;\n}\n",
        "token_count": 136
    },
    "0043b4b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b4b9(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(*param_1 + -8) != 0) {\n        if (-1 < *(*param_1 + -0xc)) {\n            if (*param_1 + -0xc != *0x480458) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n                if (iVar1 < 1) {\n                    fcn.0043b41d();\n                }\n                *param_1 = *0x480454;\n            }\n            return;\n        }\n        fcn.0043b6b7(0x4855d8);\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "0043b4d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b4d7(int32_t *param_1)\n\n{\n    int32_t arg_ch;\n    \n    arg_ch = *param_1;\n    if (1 < *(arg_ch + -0xc)) {\n        fcn.0043b465();\n        fcn.0043b39b(*(arg_ch + -8));\n        fcn.00410d20(*param_1, arg_ch, *(arg_ch + -8) + 1);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0043b505": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043b505(int32_t *param_1, int32_t param_2)\n\n{\n    if ((1 < *(*param_1 + -0xc)) || (*(*param_1 + -4) < param_2)) {\n        fcn.0043b465();\n        fcn.0043b39b(param_2);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0043b667": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0043b667(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *param_1;\n    iVar2 = *param_2;\n    if (iVar1 != iVar2) {\n        if (((*(iVar1 + -0xc) < 0) && (iVar1 + -0xc != *0x480458)) || (*(iVar2 + -0xc) < 0)) {\n            fcn.0043b63a(*(iVar2 + -8), iVar2);\n        }\n        else {\n            fcn.0043b465();\n            iVar1 = *param_2;\n            *param_1 = iVar1;\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 201
    },
    "0043b8ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043b8ab(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = *param_1;\n        if ((*(iVar1 + -0xc) < 2) && (*(iVar1 + -8) + param_2 <= *(iVar1 + -4))) {\n            fcn.00410d20(*(iVar1 + -8) + iVar1, param_3, param_2);\n            *(*param_1 + -8) = *(*param_1 + -8) + param_2;\n            *(*(*param_1 + -8) + *param_1) = 0;\n        }\n        else {\n            fcn.0043b71f(*(iVar1 + -8), iVar1, param_2, param_3);\n            fcn.0043b496(iVar1 + -0xc);\n        }\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "0043b95e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043b95e(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    \n    arg_ch = *param_1;\n    if ((1 < *(arg_ch + -0xc)) || (*(arg_ch + -4) < param_2)) {\n        iVar1 = *(arg_ch + -8);\n        if (param_2 < iVar1) {\n            param_2 = iVar1;\n        }\n        fcn.0043b39b(param_2);\n        fcn.00410d20(*param_1, arg_ch, iVar1 + 1);\n        *(*param_1 + -8) = iVar1;\n        fcn.0043b496(arg_ch + -0xc);\n    }\n    return *param_1;\n}\n",
        "token_count": 187
    },
    "0043bb57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0043bb57(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if ((param_3 == 0) && (param_1 != 0)) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, param_2, 0xffffffff, param_1, param_3);\n    if (0 < iVar1) {\n        *(param_1 + -2 + iVar1 * 2) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "0043bce9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043bce9(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    pcVar1 = extraout_ECX[1];\n    *(unaff_EBP + -4) = 1;\n    if ((pcVar1 != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.0043bfc1();\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 227
    },
    "0043bec3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043bec3(uint lpBuffer, int32_t nNumberOfBytesToRead)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    if (nNumberOfBytesToRead == 0) {\n        nNumberOfBytesToRead = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                          (*(in_ECX + 4), lpBuffer, nNumberOfBytesToRead, &nNumberOfBytesToRead, 0);\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n            fcn.0043e1cf(uVar2);\n        }\n    }\n    return nNumberOfBytesToRead;\n}\n",
        "token_count": 174
    },
    "0043c5c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c5c4(char *lpString1, uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_618h;\n    uint var_410h;\n    uint var_208h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString2);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString1);\n            iVar3 = (*pcVar1)(lpString2);\n            if (iVar2 != iVar3) goto code_r0x0043c683;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n            pcVar1 = _sym.imp.KERNEL32.dll_GetStringTypeExA;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(uVar4, 1, lpString1, 0xffffffff, &var_208h);\n            (*pcVar1)(uVar4, 4, lpString1, 0xffffffff, &var_410h);\n            (*pcVar1)(uVar4, 1, lpString2, 0xffffffff, &var_618h);\n            if (*lpString1 != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_410h + iVar2) & 0x80) != 0) && (*(&var_208h + iVar2) != *(&var_618h + iVar2)))\n                    goto code_r0x0043c683;\n                    iVar2 = iVar2 + 2;\n                    lpString1 = fcn.0041206f(lpString1);\n                } while (*lpString1 != '\\0');\n            }\n        }\n        uVar4 = 1;\n    }\n    else {\ncode_r0x0043c683:\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 489
    },
    "0043c737": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043c737(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_104h;\n    uint var_4h;\n    \n    iVar1 = fcn.0043c7bb(arg_8h, &var_104h, 0x100);\n    if (0x100U - iVar1 < 3) {\n        iVar2 = 0x100;\n        do {\n            iVar3 = iVar2 + 0x100;\n            fcn.0043b95e(iVar2 + 0xff, iVar3);\n            iVar1 = fcn.0043c7bb();\n            iVar2 = iVar3;\n        } while (iVar3 - iVar1 < 3);\n        fcn.0043b9ad(0xffffffff);\n    }\n    else {\n        fcn.0043b6b7(&var_104h);\n    }\n    return 0 < iVar1;\n}\n",
        "token_count": 219
    },
    "0043c872": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043c872(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.0043c860(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "0043c96c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c96c(int32_t *param_1)\n\n{\n    if ((0 < param_1[1]) && (param_1 != NULL)) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0043cea8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cea8(uint lpMultiByteStr, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint *in_ECX;\n    int32_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t arg_8h;\n    uint lpWideCharStr;\n    ushort *var_10h;\n    uint32_t var_ch;\n    uint *hMem;\n    uint32_t var_4h;\n    \n    if (in_ECX[1] == 0) {\n        uVar1 = 0;\n    }\n    else {\n        hMem = in_ECX;\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        var_4h = *(puVar2 + 2) == -1;\n        if (*(puVar2 + 2) == -1) {\n            var_ch = puVar2[3];\n        }\n        else {\n            var_ch = *puVar2;\n        }\n        var_ch = var_ch & 0x40;\n        iVar7 = (-(var_4h != 0) & 2) + 1;\n        if (var_4h == 0) {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        else {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &lpWideCharStr, 0x20);\n        iVar3 = iVar7 * 2 + iVar3 * 2;\n        puVar4 = fcn.0043ccfd(puVar2);\n        iVar5 = 0;\n        var_10h = puVar4;\n        if (var_ch != 0) {\n            iVar5 = fcn.00411da6(puVar4 + iVar7);\n            iVar5 = iVar7 * 2 + 2 + iVar5 * 2;\n        }\n        var_ch = iVar5 + 3 + puVar4 & 0xfffffffc;\n        arg_8h = puVar4 + iVar3 + 3 & 0xfffffffc;\n        if (var_4h == 0) {\n            iVar6 = *(puVar2 + 2);\n        }\n        else {\n            iVar6 = *(puVar2 + 4);\n        }\n        if ((iVar3 != iVar5) && (iVar6 != 0)) {\n            fcn.00411060(arg_8h, var_ch, puVar2 + (hMem[1] - var_ch));\n        }\n        *var_10h = arg_ch;\n        fcn.00411060(var_10h + iVar7, &lpWideCharStr, iVar3 + iVar7 * -2);\n        hMem[1] = hMem[1] + (arg_8h - var_ch);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*hMem);\n        hMem[2] = 0;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 709
    },
    "0043cfc2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cfc2(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *lpMultiByteStr;\n    int32_t lpvObject;\n    uint var_24h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    uVar4 = 10;\n    lpMultiByteStr = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x0043d036;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        lpMultiByteStr = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x0043d036:\n    if (arg_8h == 0) {\n        arg_8h = uVar4;\n    }\n    fcn.0043cea8(lpMultiByteStr, arg_8h);\n    return;\n}\n",
        "token_count": 395
    },
    "0043d13c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043d13c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.00456c5a();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (arg_8h != -1) {\n                iVar2 = fcn.0043aa46();\n                if ((iVar2 != 0) && (*(iVar2 + 0x54) != NULL)) {\n                    (**(iVar2 + 0x54))(0, 0);\n                }\n            }\n            fcn.0043d35a();\n            fcn.0043d35a();\n            fcn.0043d35a();\n            fcn.0043d35a();\n            fcn.0043d35a();\n        }\n        iVar2 = fcn.00456c34();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.0045744f(0x455298);\n        if (iVar2 != 0) {\n            if (*(iVar3 + 0xc) != 0) {\n                uVar4 = fcn.00413d89(*(iVar3 + 0xc));\n                if (*(iVar2 + 0xb8) <= uVar4) goto code_r0x0043d227;\n            }\n            if (*(iVar2 + 0xb8) != 0) {\n                arg_8h = 0;\n                if (*(iVar3 + 0xc) != 0) {\n                    arg_8h = fcn.00413d89(*(iVar3 + 0xc));\n                    fcn.00411abc(*(iVar3 + 0xc));\n                }\n                iVar2 = fcn.0041081b(*(iVar2 + 0xb8));\n                *(iVar3 + 0xc) = iVar2;\n                if ((iVar2 == 0) && (arg_8h != 0)) {\n                    uVar5 = fcn.0041081b(arg_8h);\n                    *(iVar3 + 0xc) = uVar5;\n                }\n            }\n        }\n    }\ncode_r0x0043d227:\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 565
    },
    "0043d29b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0043d29b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if (arg_8h_00 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.004344bb(arg_8h_00);\n        if (iVar2 == 0) {\n            iVar2 = fcn.004344bb(arg_8h_00);\n            if (iVar2 == 0) {\n                uVar3 = fcn.0043a6e5(0x441bd8);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + 8) = uVar3;\n                iVar2 = fcn.0043c892();\n                if (iVar2 == 0) {\n                    fcn.0042f1c0();\n                }\n                piVar4 = fcn.00434510(arg_8h_00);\n                uVar3 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xffffffff;\n                *piVar4 = iVar2;\n                fcn.0043a6e5(uVar3);\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n            else {\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 610
    },
    "0043d35a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d35a(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x2c) != 0);\n        while (var_8h != 0) {\n            fcn.004345a2(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x40) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x44) == 2) {\n                puVar1[1] = 0;\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 4))(1);\n            }\n        }\n        fcn.004343cf();\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0043d444": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d444(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n    *(param_1 + 8) = uVar2;\n    uVar2 = (*pcVar1)(0xc);\n    *(param_1 + 0xc) = uVar2;\n    if (*(param_1 + 0x68) == 0) {\n        fcn.00457835();\n    }\n    else {\n        fcn.00457805();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x58);\n    *(param_1 + 0x18) = uVar3;\n    uVar3 = (*pcVar1)(uVar2, 0x5a);\n    *(param_1 + 0x1c) = uVar3;\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return;\n}\n",
        "token_count": 288
    },
    "0043d49c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043d49c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar1 = fcn.00456c5a();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0043a6e5(0x441bd8);\n        iVar3 = fcn.0043a6f7(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0043d236(0x46f8b8, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.0043a6e5(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x18);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 359
    },
    "0043d598": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043d598(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0043d56e();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "0043d5b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d5b4(char *lpString, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar3 = fcn.00458457(lpString, 0, 0);\n    iVar3 = iVar3 + -1;\n    pcVar5 = lpString + (iVar2 - iVar3);\n    if (arg_ch < iVar2) {\n        if (arg_ch < iVar3) {\n            if (arg_10h == 0) {\n                pcVar5 = 0x4855d8;\n            }\n        }\n        else {\n            pcVar4 = lpString + 2;\n            if ((*lpString == '\\\\') && (lpString[1] == '\\\\')) {\n                for (; *pcVar4 != '\\\\'; pcVar4 = fcn.0041206f(pcVar4)) {\n                }\n            }\n            if (3 < iVar2 - iVar3) {\n                do {\n                    pcVar4 = fcn.0041206f(pcVar4);\n                } while (*pcVar4 != '\\\\');\n            }\n            iVar2 = pcVar4 - lpString;\n            if (iVar2 + 5 + iVar3 <= arg_ch) {\n                while (iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar4),  arg_ch < iVar3 + 4 + iVar2) {\n                    do {\n                        pcVar4 = fcn.0041206f(pcVar4);\n                    } while (*pcVar4 != '\\\\');\n                }\n                lpString[iVar2] = '\\0';\n                pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(lpString, \"\\\\...\");\n                (*pcVar1)(lpString, pcVar4);\n                return;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString, pcVar5);\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "0043d8ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d8ad(uint arg_8h, int32_t arg_ch, uint lpString1, int32_t arg_14h, uint arg_18h)\n\n{\n    uchar uVar1;\n    int32_t lpString;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lpString2;\n    int32_t var_4h;\n    \n    if (*(*(*(in_ECX + 8) + arg_ch * 4) + -8) == 0) {\n        return 0;\n    }\n    var_4h = in_ECX;\n    lpString = fcn.0043b95e(0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString, *(*(var_4h + 8) + arg_ch * 4));\n    iVar2 = fcn.00458457(lpString, 0, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar3 = (1 - iVar2) + iVar3;\n    if (iVar3 == arg_14h) {\n        uVar1 = *(iVar3 + lpString);\n        *(arg_14h + lpString) = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString);\n        *(iVar3 + lpString) = uVar1;\n        if (iVar2 == 0) {\n            fcn.0043c687(arg_14h + lpString, &lpString2, 0x104);\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)(lpString, &lpString2, 0x104);\n            goto code_r0x0043d99f;\n        }\n    }\n    if (*(var_4h + 0x18) != -1) {\n        fcn.0043c687(iVar3 + lpString, &lpString2, 0x104);\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(iVar3 + lpString, &lpString2, 0x104 - iVar3);\n        fcn.0043d5b4(lpString, *(var_4h + 0x18), arg_18h);\n    }\ncode_r0x0043d99f:\n    fcn.0043b9ad(0xffffffff);\n    return 1;\n}\n",
        "token_count": 534
    },
    "0043de43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043de43(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.004108b0(arg_8h, 0, 0x118);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_8h + 0x12, *(in_ECX + 0xc), 0x104);\n    if (*(in_ECX + 4) == -1) {\ncode_r0x0043df13:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[3] = iVar1;\n            if (iVar1 != -1) {\n                if (*(*(in_ECX + 0xc) + -8) == 0) {\ncode_r0x0043deb7:\n                    *(arg_8h + 4) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    if (iVar1 == -1) goto code_r0x0043deb7;\n                    *(arg_8h + 4) = iVar1;\n                }\n                piVar3 = fcn.0042ed21(&lpCreationTime, 0xffffffff);\n                *arg_8h = *piVar3;\n                piVar3 = fcn.0042ed21(&lpLastAccessTime, 0xffffffff);\n                arg_8h[2] = *piVar3;\n                piVar3 = fcn.0042ed21(&lpLastWriteTime, 0xffffffff);\n                iVar1 = *piVar3;\n                arg_8h[1] = iVar1;\n                if (*arg_8h == 0) {\n                    *arg_8h = iVar1;\n                }\n                if (arg_8h[2] == 0) {\n                    arg_8h[2] = arg_8h[1];\n                }\n                goto code_r0x0043df13;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 580
    },
    "0043df1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043df1d(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_140h;\n    uint var_13ch;\n    uint var_134h;\n    uint var_12ch;\n    int32_t var_120h;\n    \n    iVar1 = fcn.0043c42e(arg_ch + 0x12, arg_8h);\n    if (iVar1 == 0) {\n        *(arg_ch + 0x12) = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(arg_8h, &var_140h);\n        if (iVar1 != -1) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n            *(arg_ch + 4) = var_140h & 0x7f;\n            arg_ch[3] = var_120h;\n            piVar2 = fcn.0042ed21(&var_13ch, 0xffffffff);\n            *arg_ch = *piVar2;\n            piVar2 = fcn.0042ed21(&var_134h, 0xffffffff);\n            arg_ch[2] = *piVar2;\n            piVar2 = fcn.0042ed21(&var_12ch, 0xffffffff);\n            iVar1 = *piVar2;\n            arg_ch[1] = iVar1;\n            if (*arg_ch == 0) {\n                *arg_ch = iVar1;\n            }\n            if (arg_ch[2] == 0) {\n                arg_ch[2] = arg_ch[1];\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 398
    },
    "0043e1cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043e1cf(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.0043e375(param_1, param_1, param_2);\n        fcn.0043e2b4(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004419d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004419d0(int32_t hWnd, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpClassName;\n    \n    if ((hWnd != 0) && (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar1 & 0xf) == arg_ch)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 10);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"combobox\");\n        return iVar2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 157
    },
    "00441c5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00441c5a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar1 = fcn.00456c5a();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0043a6e5(0x441bd8);\n        iVar3 = fcn.0043a6f7(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0043d236(0x46f388, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.0043a6e5(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 360
    },
    "00441d5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00441d5f(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDC.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != NULL) {\n        uVar1 = fcn.00441d18(extraout_ECX);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 203
    },
    "00442f41": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00442f41(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar1 = fcn.00456c5a();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0043a6e5(0x441bd8);\n        iVar3 = fcn.0043a6f7(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0043d236(0x46f360, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.0043a6e5(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x20);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 356
    },
    "0044301f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044301f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00442ff5();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "004432f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004432f3(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t var_4h;\n    \n    var_4h = fcn.0044329c(arg_8h);\n    bVar4 = var_4h == -1;\n    if (bVar4) {\n        var_4h = fcn.0044329c(arg_8h);\n    }\n    uVar2 = bVar4;\n    iVar3 = (uVar2 + 1) * var_4h;\n    if (var_4h == 0) {\n        fcn.0043b9d5(0);\n    }\n    else {\n        fcn.0043b9d5(iVar3 + uVar2);\n        iVar1 = fcn.0044360e(*arg_ch, iVar3);\n        if (iVar1 != iVar3) {\n            fcn.00443b53(3, 0);\n        }\n        if (uVar2 != 0) {\n            iVar3 = *arg_ch;\n            *(iVar3 + var_4h * 2) = 0;\n            *arg_ch = *0x480454;\n            fcn.0043b6de(iVar3);\n            fcn.0043a720(iVar3 + -0xc);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 329
    },
    "00443578": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00443578(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x20) != 0) && ((*(extraout_ECX + 0x14) & 2) == 0)) {\n        fcn.00443600();\n    }\n    fcn.004435be();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 216
    },
    "0044360e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044360e(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0;\n    }\n    else {\n        uVar3 = *(in_ECX + 0x28) - *(in_ECX + 0x24);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.00410d20(arg_8h, *(in_ECX + 0x24), uVar3);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x1c);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x20) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if (var_8h == iVar1) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    var_4h = uVar3;\n                    if (uVar3 <= *(in_ECX + 0x1c)) {\n                        var_4h = *(in_ECX + 0x1c);\n                    }\n                    var_8h = *(in_ECX + 0x2c);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x20) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x2c);\n                    *(in_ECX + 0x24) = iVar1;\n                    *(in_ECX + 0x28) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x20) + 0x50))(0, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n                    iVar1 = *(in_ECX + 0x2c);\n                    *(in_ECX + 0x24) = iVar1;\n                }\n                uVar4 = *(in_ECX + 0x28) - iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.00410d20(arg_8h, iVar1, uVar4);\n                *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 871
    },
    "0044371d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044371d(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    if (arg_ch != 0) {\n        arg_10h = *(in_ECX + 0x28) - *(in_ECX + 0x24);\n        if (arg_ch < arg_10h) {\n            arg_10h = arg_ch;\n        }\n        fcn.00410d20(*(in_ECX + 0x24), arg_8h, arg_10h);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + arg_10h;\n        arg_ch = arg_ch - arg_10h;\n        if (arg_ch != 0) {\n            fcn.004437ad();\n            iVar1 = arg_ch - arg_ch % *(in_ECX + 0x1c);\n            (**(**(in_ECX + 0x20) + 0x38))(arg_8h + arg_10h, iVar1);\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x20) + 0x50))(1, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n                *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n            }\n            fcn.00410d20(*(in_ECX + 0x24), arg_8h + arg_10h + iVar1, arg_ch - iVar1);\n            *(in_ECX + 0x24) = *(in_ECX + 0x24) + (arg_ch - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 416
    },
    "00443829": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443829(uint32_t arg_8h)\n\n{\n    uint32_t arg_ch;\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_ch = *(in_ECX + 0x24);\n    var_4h = *(in_ECX + 0x28) - arg_ch;\n    uVar1 = arg_8h + var_4h;\n    if (*(in_ECX + 8) == 0) {\n        arg_8h_00 = *(in_ECX + 0x2c);\n        if (arg_8h_00 < arg_ch) {\n            if (0 < var_4h) {\n                fcn.00411060(arg_8h_00, arg_ch, var_4h);\n                arg_8h_00 = *(in_ECX + 0x2c);\n                *(in_ECX + 0x24) = arg_8h_00;\n                *(in_ECX + 0x28) = arg_8h_00 + var_4h;\n            }\n            iVar3 = *(in_ECX + 0x1c) - var_4h;\n            iVar4 = var_4h + arg_8h_00;\n            do {\n                iVar2 = (**(**(in_ECX + 0x20) + 0x34))(iVar4, iVar3);\n                var_4h = var_4h + iVar2;\n                iVar4 = iVar4 + iVar2;\n                iVar3 = iVar3 - iVar2;\n                if ((iVar2 == 0) || (iVar3 == 0)) break;\n            } while (var_4h < arg_8h);\n            *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n            *(in_ECX + 0x28) = *(in_ECX + 0x2c) + var_4h;\n        }\n    }\n    else {\n        if (var_4h != 0) {\n            (**(**(in_ECX + 0x20) + 0x28))(-var_4h, 1);\n        }\n        (**(**(in_ECX + 0x20) + 0x50))(0, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n        *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n    }\n    if (*(in_ECX + 0x28) - *(in_ECX + 0x24) < uVar1) {\n        fcn.00443b53(3, 0);\n    }\n    return;\n}\n",
        "token_count": 646
    },
    "004457bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004457bc(uint lpText, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint *puVar4;\n    uint var_114h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    fcn.0044578e(0);\n    var_ch = fcn.00445934(0, &hWnd);\n    if (((var_ch == 0) || (piVar1 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar1 == NULL)) &&\n       (piVar1 = NULL,  in_ECX != 0)) {\n        piVar1 = in_ECX + 0x9c;\n    }\n    var_8h = 0;\n    if ((piVar1 != NULL) && (var_8h = *piVar1,  arg_10h != 0)) {\n        *piVar1 = arg_10h + 0x30000;\n    }\n    if (((arg_ch & 0xf0) == 0) && ((uVar2 = arg_ch & 0xf,  uVar2 < 2 || ((2 < uVar2 && (uVar2 < 5)))))) {\n        arg_ch = arg_ch | 0x30;\n    }\n    if (in_ECX == 0) {\n        puVar4 = &var_114h;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &var_114h, 0x104);\n    }\n    else {\n        puVar4 = *(in_ECX + 0x78);\n    }\n    uVar3 = (*_sym.imp.USER32.dll_MessageBoxA)(var_ch, lpText, puVar4, arg_ch);\n    if (piVar1 != NULL) {\n        *piVar1 = var_8h;\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    fcn.0044578e(1);\n    return uVar3;\n}\n",
        "token_count": 510
    },
    "004459ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004459ff(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00439c05(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        fcn.0042f1d9();\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = arg_8h;\n    return;\n}\n",
        "token_count": 105
    },
    "00445a2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445a2e(int32_t *param_1)\n\n{\n    if ((*param_1 != 0) && (param_1[2] != 0)) {\n        (*_sym.imp.USER32.dll_SetFocus)(param_1[2]);\n        if (param_1[3] != 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(param_1[2], 0xb1, 0, 0xffffffff);\n        }\n    }\n    fcn.0044320a();\n    return;\n}\n",
        "token_count": 122
    },
    "00445a63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445a63(char *arg_8h, int32_t arg_ch, int32_t **arg_10h)\n\n{\n    char cVar1;\n    bool bVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    pcVar3 = arg_ch + 1;\n    bVar2 = false;\n    if (*pcVar3 != 'l') {\n        if (*pcVar3 != 's') goto code_r0x00445a81;\n        bVar2 = true;\n    }\n    pcVar3 = arg_ch + 2;\ncode_r0x00445a81:\n    for (; (*arg_8h == ' ' || (*arg_8h == '\\t')); arg_8h = arg_8h + 1) {\n    }\n    cVar1 = *arg_8h;\n    if (*pcVar3 == 'd') {\n        iVar4 = fcn.00412500(arg_8h, &arg_8h, 10);\n    }\n    else {\n        if (cVar1 == '-') {\n            return 0;\n        }\n        iVar4 = fcn.0041271c(arg_8h, &arg_8h, 10);\n    }\n    if ((iVar4 != 0) || (cVar1 == '0')) {\n        for (; (*arg_8h == ' ' || (*arg_8h == '\\t')); arg_8h = arg_8h + 1) {\n        }\n        if (*arg_8h == '\\0') {\n            if (bVar2) {\n                if (iVar4 != iVar4) {\n                    return 0;\n                }\n                **arg_10h = iVar4;\n            }\n            else {\n                **arg_10h = iVar4;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 405
    },
    "00445b08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445b08(int32_t *arg_8h, uint arg_ch, uint ARG_1, uint arg_14h, uint arglist)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint lpString;\n    \n    hWnd = fcn.004459e8(arg_ch);\n    if (*arg_8h == 0) {\n        (*_sym.imp.USER32.dll_wvsprintfA)(&lpString, ARG_1, &arglist);\n        fcn.00441aba(hWnd, &lpString);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString, 0x20);\n        iVar1 = fcn.00445a63(&lpString, ARG_1, &arglist);\n        if (iVar1 == 0) {\n            fcn.004458db(arg_14h, 0, 0xffffffff);\n            fcn.00445a2e();\n        }\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00445b78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445b78(int32_t *arg_8h, uint arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = arg_10h;\n    arg_10h = *arg_10h;\n    if (*arg_8h == 0) {\n        fcn.00445b08(arg_8h, arg_ch, 0x46dd64, 0xf116, arg_10h);\n    }\n    else {\n        fcn.00445b08(arg_8h, arg_ch, 0x46dd64, 0xf116, &arg_10h);\n        if (0xff < arg_10h) {\n            fcn.004458db(0xf116, 0, 0xffffffff);\n            fcn.00445a2e();\n        }\n        *puVar1 = arg_10h;\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00445be9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445be9(int32_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    uint ARG_1;\n    \n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n        ARG_1 = 0x46dd68;\n    }\n    else {\n        ARG_1 = 0x46dd6c;\n    }\n    fcn.00445b08(arg_8h, arg_ch, ARG_1, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 131
    },
    "00445c24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445c24(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00445b08(arg_8h, arg_ch, 0x46dd70, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "00445c53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445c53(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00445b08(arg_8h, arg_ch, 0x46dd64, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "00445c82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445c82(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00445b08(arg_8h, arg_ch, 0x46dd74, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "00445cb1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445cb1(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00445b08(arg_8h, arg_ch, 0x46dd78, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "00445ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445ce0(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint uVar2;\n    \n    hWnd = fcn.004459e8(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00441aba(hWnd, *arg_10h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        uVar2 = fcn.0043b9d5(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar2);\n        fcn.0043b9ad(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00445d32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445d32(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint hWnd;\n    \n    hWnd = fcn.004459e8(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00441aba(hWnd, arg_10h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00445ed3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445ed3(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.004459ff(arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*arg_8h == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0x1a2, 0xffffffff, *arg_10h);\n        if (-1 < iVar3) {\n            (*pcVar1)(uVar2, 0x186, iVar3, 0);\n        }\n    }\n    else {\n        fcn.00445e53(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00445f24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445f24(int32_t *arg_8h, uint arg_ch, uint *lParam)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint uVar2;\n    \n    hWnd = fcn.004459ff(arg_ch);\n    if (*arg_8h == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x14d, 0xffffffff, *lParam);\n        if (iVar1 == -1) {\n            fcn.00441aba(hWnd, *lParam);\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        if (iVar1 < 1) {\n            uVar2 = fcn.0043b95e(0xff, 0x100);\n        }\n        else {\n            uVar2 = fcn.0043b9d5(iVar1, iVar1 + 1);\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar2);\n        fcn.0043b9ad(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00445fa3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445fa3(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    uint hWnd;\n    int32_t iVar2;\n    \n    hWnd = fcn.004459ff(arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*arg_8h == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x158, 0xffffffff, *arg_10h);\n        if (iVar2 < 0) {\n            fcn.00441aba(hWnd, *arg_10h);\n        }\n        else {\n            (*pcVar1)(hWnd, 0x14e, iVar2, 0);\n        }\n    }\n    else {\n        fcn.00445f24(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00446103": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.00446103(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_2ch;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    pcVar1 = _sym.imp.USER32.dll_wsprintfA;\n    if (**(unaff_EBP + 8) != 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0x4c, *(unaff_EBP + 0x14), *(unaff_EBP + 0xc));\n        (*pcVar1)(unaff_EBP + -0x2c, *(unaff_EBP + 0x14), *(unaff_EBP + 0x10));\n        *(unaff_EBP + 8) = *0x480454;\n        *(unaff_EBP + -4) = 0;\n        fcn.0044a502(unaff_EBP + 8, *(unaff_EBP + 0x18), unaff_EBP + -0x4c, unaff_EBP + -0x2c);\n        fcn.004458a3(*(unaff_EBP + 8), 0x30, *(unaff_EBP + 0x18));\n        fcn.0043b4b9();\n        fcn.00445a2e();\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0043b52e();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 410
    },
    "004462a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004462a6(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if ((*arg_8h != 0) || ((arg_10h <= arg_ch && (arg_ch <= arg_14h)))) {\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h[2], 0x407, 0, arg_10h);\n        (*pcVar1)(arg_8h[2], 0x407, 1, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "004464b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004464b9(uint hModule, int32_t hResInfo, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar uVar4;\n    uchar extraout_AH;\n    int32_t iVar5;\n    int32_t *arg_ch;\n    int32_t *arg_8h;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint var_ch;\n    uint var_8h;\n    uint nIndex;\n    \n    iVar5 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    if ((iVar5 != 0) && (arg_ch = (*_sym.imp.KERNEL32.dll_LockResource)(iVar5),  arg_ch != NULL)) {\n        iVar5 = *arg_ch;\n        arg_8h = fcn.0041081b(iVar5 + 0x40);\n        if (arg_8h != NULL) {\n            fcn.00410d20(arg_8h, arg_ch, iVar5 + 0x40);\n            puVar12 = arg_8h + *arg_8h;\n            hResInfo = 0x10;\n            do {\n                iVar5 = 0;\n                puVar11 = 0x46e5e8;\n                do {\n                    if (*puVar12 == *puVar11) {\n                        if (arg_10h == 0) {\n                            puVar1 = iVar5 * 8 + 0x46e5ec;\n                            (*_sym.imp.USER32.dll_GetSysColor)(*(iVar5 * 8 + 0x46e5ec));\n                            uVar4 = (*_sym.imp.USER32.dll_GetSysColor)(*puVar1);\n                            uVar6 = (*_sym.imp.USER32.dll_GetSysColor)(*puVar1);\n                            *puVar12 = CONCAT11(uVar4, extraout_AH) << 8 | uVar6 >> 0x10 & 0xff;\n                        }\n                        else if (*(iVar5 * 8 + 0x46e5ec) != 0x12) {\n                            *puVar12 = 0xffffff;\n                        }\n                        break;\n                    }\n                    puVar11 = puVar11 + 2;\n                    iVar5 = iVar5 + 1;\n                } while (puVar11 < 0x46e608);\n                puVar12 = puVar12 + 1;\n                hResInfo = hResInfo + -1;\n                if (hResInfo == 0) {\n                    iVar5 = arg_8h[1];\n                    iVar2 = arg_8h[2];\n                    uVar7 = (*_sym.imp.USER32.dll_GetDC)(0);\n                    iVar8 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar7, iVar5, iVar2);\n                    if (iVar8 != 0) {\n                        uVar9 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar7);\n                        pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n                        uVar10 = (*_sym.imp.GDI32.dll_SelectObject)(uVar9, iVar8);\n                        (*_sym.imp.GDI32.dll_StretchDIBits)\n                                  (uVar9, 0, 0, iVar5, iVar2, 0, 0, iVar5, iVar2, \n                                   arg_ch + (1 << (*(arg_8h + 0xe) & 0x1f)) + 10, arg_8h, 0, 0xcc0020);\n                        (*pcVar3)(uVar9, uVar10);\n                        (*_sym.imp.GDI32.dll_DeleteDC)(uVar9);\n                    }\n                    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar7);\n                    fcn.00411abc(arg_8h);\n                    return iVar8;\n                }\n            } while( true );\n        }\n    }\n    return 0;\n}\n",
        "token_count": 903
    },
    "0044685c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044685c(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = 0;\n    var_18h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    uVar2 = (**(*in_ECX + 0xa0))(0x455, 0, 0);\n    if (0 < arg_10h) {\n        var_4h = arg_10h;\n        puVar7 = arg_ch + 9;\n        do {\n            arg_ch = *(puVar7 + -9);\n            uVar3 = fcn.00439ddc();\n            if (((uVar3 & 0x800) == 0) && (*0x4805c8 != 0x40047)) {\n                arg_ch = (arg_ch * 2) / 3;\n            }\n            if ((puVar7[-1] & 8) == 0) {\n                uVar1 = *puVar7;\n                iVar5 = in_ECX[0x24];\n                if ((uVar1 & 1) == 0) {\n                    if (((uVar1 & 8) != 0) && ((uVar2 & 1) != 0)) {\n                        iVar5 = iVar5 + *0x4805cc;\n                    }\n                    if (var_10h < var_18h + iVar5) {\n                        var_10h = var_18h + iVar5;\n                    }\n                    iVar4 = in_ECX[0x25] + iVar6;\ncode_r0x0044692b:\n                    if (var_ch < iVar4) {\n                        var_ch = iVar4;\n                    }\n                }\n                else {\n                    if ((puVar7[-1] & 0x20) != 0) {\n                        iVar4 = in_ECX[0x25] + iVar6 + arg_ch;\n                        goto code_r0x0044692b;\n                    }\n                    if (var_10h < *(puVar7 + -9) + var_18h) {\n                        var_10h = *(puVar7 + -9) + var_18h;\n                    }\n                }\n                if ((uVar1 & 1) != 0) {\n                    iVar5 = *(puVar7 + -9);\n                }\n                var_18h = var_18h + iVar5;\n                if ((puVar7[-1] & 0x20) != 0) {\n                    var_18h = 0;\n                    iVar6 = iVar6 + in_ECX[0x25];\n                    if ((uVar1 & 1) != 0) {\n                        iVar6 = iVar6 + arg_ch;\n                    }\n                }\n            }\n            puVar7 = puVar7 + 0x14;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return;\n}\n",
        "token_count": 776
    },
    "0044697e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044697e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = 0;\n    iVar5 = 0;\n    var_4h = 0;\n    if (arg_ch < 1) {\ncode_r0x00446a4e:\n        return var_4h + 1;\n    }\ncode_r0x0044699c:\n    piVar1 = arg_8h + iVar6 * 0x14;\n    *(piVar1 + 2) = *(piVar1 + 2) & 0xdf;\n    piVar2 = piVar1 + 2;\n    if ((*piVar2 & 8) == 0) {\n        if ((*(piVar1 + 9) & 1) == 0) {\n            iVar3 = *(in_ECX + 0x90);\n        }\n        else {\n            iVar3 = *piVar1;\n        }\n        iVar5 = iVar3 + iVar5;\n        iVar3 = iVar6;\n        if (arg_10h < iVar5) {\n            for (; (-1 < iVar3 && ((*piVar2 & 0x20) == 0)); piVar2 = piVar2 + -5) {\n                if (((*(piVar2 + 1) & 1) != 0) && ((piVar2[-1] == 0 && ((*piVar2 & 8) == 0)))) goto code_r0x00446a33;\n                iVar3 = iVar3 + -1;\n            }\n            iVar3 = iVar6 + -1;\n            if (-1 < iVar3) {\n                puVar4 = arg_8h + 8 + iVar3 * 0x14;\n                do {\n                    if ((*puVar4 & 0x20) != 0) break;\n                    if (((*puVar4 & 8) == 0) && (((puVar4[1] & 1) == 0 || (*(puVar4 + -4) == 0))))\n                    goto code_r0x00446a33;\n                    iVar3 = iVar3 + -1;\n                    puVar4 = puVar4 + -0x14;\n                } while (-1 < iVar3);\n            }\n        }\n    }\n    goto code_r0x00446a43;\ncode_r0x00446a33:\n    iVar5 = 0;\n    puVar4 = arg_8h + 8 + iVar3 * 0x14;\n    *puVar4 = *puVar4 | 0x20;\n    var_4h = var_4h + 1;\n    iVar6 = iVar3;\ncode_r0x00446a43:\n    iVar6 = iVar6 + 1;\n    if (arg_ch <= iVar6) goto code_r0x00446a4e;\n    goto code_r0x0044699c;\n}\n",
        "token_count": 710
    },
    "00446bb5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpRect\n\nvoid __cdecl fcn.00446bb5(int32_t *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t *puVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint *arg_8h_00;\n    uint32_t uVar8;\n    uint32_t lpRect;\n    uint *var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lprc;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t *var_14h;\n    int32_t var_10h;\n    uint32_t *var_ch;\n    uint32_t *var_8h;\n    uint32_t *var_4h;\n    \n    puVar5 = NULL;\n    arg_8h_00 = 0x418;\n    var_4h = NULL;\n    var_30h = 0;\n    var_2ch = 0;\n    iVar1 = (**(*in_ECX + 0xa0))(0x418, 0, 0);\n    var_18h = iVar1;\n    if ((iVar1 == 0) || (var_4h = fcn.0043a6f7(iVar1 * 0x14),  puVar6 = var_4h,  iVar1 < 1)) goto code_r0x00446e72;\n    do {\n        var_8h = puVar6;\n        arg_8h_00 = puVar5;\n        fcn.00446625();\n        var_8h = var_8h + 5;\n        puVar5 = puVar5 + 1;\n        puVar6 = var_8h;\n    } while (puVar5 < iVar1);\n    puVar6 = NULL;\n    if (iVar1 < 1) goto code_r0x00446e72;\n    uVar8 = in_ECX[0x19];\n    if ((uVar8 & 2) == 0) {\n        var_1ch = uVar8 & 4;\n        if (var_1ch == 0) {\ncode_r0x00446c9e:\n            uVar8 = -((arg_ch & 2) != 0) & 0x7fff;\n        }\n        else if ((arg_ch & 4) == 0) {\n            if ((arg_ch & 8) == 0) {\n                if ((arg_ch & 0x10) == 0) {\n                    if (arg_10h == 0xffffffff) {\n                        if ((uVar8 & 1) == 0) goto code_r0x00446c9e;\n                        goto code_r0x00446c98;\n                    }\n                    (*_sym.imp.USER32.dll_SetRectEmpty)(&fcn.00446bb5::lprc);\n                    var_38h = arg_ch & 2;\n                    var_3ch = &fcn.00446bb5::lprc;\n                    lpRect = 0x446c75;\n                    fcn.00449dbf();\n                    lpRect = arg_ch & 0x20;\n                    if (lpRect == 0) {\n                        var_24h = var_20h - lprc;\n                    }\n                    else {\n                        var_24h = var_1ch - var_24h;\n                    }\n                    uVar8 = var_24h + arg_10h;\n                }\n                else {\n                    uVar8 = 0;\n                }\n            }\n            else {\n                uVar8 = 0x7fff;\n            }\n        }\n        else {\ncode_r0x00446c98:\n            uVar8 = in_ECX[0x15];\n        }\n        fcn.00446a58(var_4h, iVar1, uVar8, lpRect);\n    }\n    arg_8h_00 = &fcn.00446bb5::var_20h;\n    piVar2 = fcn.0044685c(arg_8h_00, var_4h, iVar1);\n    var_30h = *piVar2;\n    var_2ch = piVar2[1];\n    if ((arg_ch & 0x40) != 0) {\n        var_1ch = in_ECX[0x21];\n        in_ECX[0x21] = 0;\n        var_10h = 0;\n        if (0 < iVar1) {\n            var_14h = var_4h + 1;\n            puVar3 = var_14h;\n            iVar4 = iVar1;\n            do {\n                if (((*(puVar3 + 5) & 1) != 0) && (*puVar3 != 0)) {\n                    puVar6 = puVar6 + 1;\n                }\n                puVar3 = puVar3 + 5;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            if (0 < puVar6) {\n                var_10h = fcn.0043a6f7(puVar6 * 0x18);\n                if (var_10h == 0) {\n                    var_10h = 0;\n                }\n                var_ch = NULL;\n                arg_10h = NULL;\n                var_8h = var_10h + 8;\n                puVar3 = var_8h;\n                do {\n                    puVar7 = puVar3;\n                    if (((*(var_14h + 5) & 1) != 0) && (*var_14h != 0)) {\n                        puVar3[-2] = arg_10h;\n                        puVar3[-1] = *var_14h;\n                        (**(*in_ECX + 0xe0))(arg_10h, &fcn.00446bb5::lpRect);\n                        arg_8h_00 = &fcn.00446bb5::lpRect;\n                        fcn.0044276a(arg_8h_00);\n                        var_ch = var_ch + 1;\n                        *puVar3 = lpRect;\n                        puVar3[1] = var_3ch;\n                        puVar7 = var_8h + 6;\n                        puVar3[2] = var_38h;\n                        puVar3[3] = var_34h;\n                        iVar1 = var_18h;\n                        var_8h = puVar7;\n                    }\n                    arg_10h = arg_10h + 1;\n                    var_14h = var_14h + 5;\n                    puVar6 = var_ch;\n                    puVar3 = puVar7;\n                } while (arg_10h < iVar1);\n            }\n        }\n        if (((in_ECX[0x19] & 1U) != 0) && ((in_ECX[0x19] & 4U) != 0)) {\n            in_ECX[0x15] = var_30h;\n        }\n        arg_10h = NULL;\n        if (0 < iVar1) {\n            var_ch = var_4h;\n            do {\n                arg_8h_00 = arg_10h;\n                fcn.00446644(arg_10h, var_ch);\n                arg_10h = arg_10h + 1;\n                var_ch = var_ch + 5;\n            } while (arg_10h < iVar1);\n        }\n        if (0 < puVar6) {\n            piVar2 = var_10h + 8;\n            var_14h = puVar6;\n            do {\n                arg_8h_00 = piVar2[-1];\n                var_18h = fcn.00439bdb();\n                if (var_18h != 0) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*(var_18h + 0x1c), &fcn.00446bb5::lpRect);\n                    iVar4 = var_3ch - piVar2[1];\n                    iVar1 = lpRect - *piVar2;\n                    (**(*in_ECX + 0xe0))(piVar2[-2], &fcn.00446bb5::lpRect);\n                    arg_8h_00 = NULL;\n                    fcn.00439f68(0, iVar1 + lpRect, iVar4 + var_3ch, 0, 0, 0x15);\n                }\n                piVar2 = piVar2 + 6;\n                var_14h = var_14h + -1;\n            } while (var_14h != NULL);\n            fcn.0043a720(var_10h, arg_8h_00);\n        }\n        in_ECX[0x21] = var_1ch;\n    }\n    fcn.0043a720(var_4h);\ncode_r0x00446e72:\n    (*_sym.imp.USER32.dll_SetRectEmpty)(&fcn.00446bb5::lpRect, arg_8h_00);\n    fcn.00449dbf(&fcn.00446bb5::lpRect, arg_ch & 2);\n    var_2ch = var_3ch + (var_2ch - var_34h);\n    var_30h = var_30h + (lpRect - var_38h);\n    piVar2 = fcn.00448f4c(&fcn.00446bb5::var_20h, arg_ch & 1, arg_ch & 2);\n    if (var_30h <= *piVar2) {\n        var_30h = *piVar2;\n    }\n    if (var_2ch <= piVar2[1]) {\n        var_2ch = piVar2[1];\n    }\n    *arg_8h = var_30h;\n    arg_8h[1] = var_2ch;\n    return;\n}\n",
        "token_count": 2250
    },
    "00447266": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447266(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    if (*(extraout_ECX + 0x98) != 0) {\n        iVar2 = *(unaff_EBP + 8);\n        fcn.00446625(iVar2, unaff_EBP + -0x28);\n        iVar1 = *(*(extraout_ECX + 0x98) + 0xc);\n        *(unaff_EBP + 8) = *0x480454;\n        iVar1 = -(iVar1 != 0);\n        *(unaff_EBP + -0x10) = iVar1;\n        *(unaff_EBP + -4) = 0;\n        while (iVar1 != 0) {\n            iVar2 = unaff_EBP + -0x10;\n            fcn.00434902();\n            if (*(unaff_EBP + -0x14) == *(unaff_EBP + -0x18)) {\n                fcn.0043b667(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.0043b52e();\n                goto code_r0x004472e5;\n            }\n            iVar1 = *(unaff_EBP + -0x10);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0043b52e(iVar2);\n    }\n    fcn.0043b4b9();\ncode_r0x004472e5:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 440
    },
    "00447735": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447735(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    bool bVar2;\n    uint var_4h;\n    \n    bVar2 = false;\n    puVar1 = *(in_ECX + 0x5c) + arg_8h * 0x14;\n    *puVar1 = arg_ch;\n    if (puVar1[2] != arg_10h) {\n        bVar2 = ((puVar1[2] ^ arg_10h) & 0x8000000) == 0;\n        if (bVar2) {\n            puVar1[3] = puVar1[3] | 1;\n            puVar1[2] = arg_10h;\n            fcn.004477f1(arg_8h, puVar1[4], 1, unaff_EDI, unaff_ESI, unaff_EBX);\n        }\n        bVar2 = !bVar2;\n        puVar1[2] = arg_10h;\n    }\n    if (arg_14h != puVar1[1]) {\n        puVar1[1] = arg_14h;\n        bVar2 = true;\n    }\n    if (bVar2) {\n        fcn.0045662f(1, 0);\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "004477f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nuint __cdecl fcn.004477f1(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar2 = extraout_ECX[0x17];\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    iVar1 = iVar2 + *(unaff_EBP + 8) * 0x14;\n    if ((*(iVar2 + 0xc + *(unaff_EBP + 8) * 0x14) & 1) == 0) {\n        if (*(unaff_EBP + 0xc) == 0) {\n            iVar2 = *(*(iVar1 + 0x10) + -8);\n        }\n        else {\n            iVar2 = fcn.0041191c(*(iVar1 + 0x10), *(unaff_EBP + 0xc));\n        }\n        if (iVar2 == 0) goto code_r0x0044789d;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        fcn.0043b4b9();\n    }\n    else {\n        fcn.0043b6b7(*(unaff_EBP + 0xc));\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) == 0) {\n        *(iVar1 + 0xc) = *(iVar1 + 0xc) | 1;\n    }\n    else {\n        *(iVar1 + 0xc) = *(iVar1 + 0xc) & 0xfffffffe;\n        if ((*(iVar1 + 0xb) & 4) == 0) {\n            uVar3 = *(iVar1 + 0x10);\n        }\n        else {\n            uVar3 = 0;\n        }\n        (**(*extraout_ECX + 0xa0))(0x401, *(iVar1 + 8) | *(unaff_EBP + 8), uVar3);\n    }\ncode_r0x0044789d:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 1;\n}\n",
        "token_count": 617
    },
    "00447fff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447fff(int32_t arg_8h, int32_t lprcSrc)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint uVar6;\n    uint var_124h;\n    uint lpRect;\n    int32_t lprcDst;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(*(arg_8h + 0x1c), &lpRect);\n    if (*(arg_8h + 0x70) == in_ECX) {\n        if (lprcSrc == 0) {\n            return;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprcSrc);\n        if (iVar4 != 0) {\n            return;\n        }\n    }\n    if ((*(in_ECX + 0x78) != 0) && ((*(arg_8h + 0x68) & 0x40) != 0)) {\n        *(in_ECX + 100) = *(in_ECX + 100) | 0x40;\n    }\n    *(in_ECX + 100) = *(in_ECX + 100) & 0xfffffff9;\n    uVar5 = *(in_ECX + 100);\n    *(in_ECX + 100) = *(arg_8h + 100) & 6 | uVar5;\n    if ((uVar5 & 0x40) == 0) {\n        fcn.00439e99(&var_124h, 0x104);\n        fcn.00441aba(*(in_ECX + 0x1c), &var_124h);\n    }\n    uVar5 = *(arg_8h + 100);\n    uVar2 = uVar5 >> 8;\n    uVar1 = CONCAT11((*(in_ECX + 100) >> 8 ^ uVar2) & 0xf0 ^ uVar2, uVar5);\n    if (*(in_ECX + 0x78) == 0) {\n        uVar5 = uVar5 & 0xffff0000 | uVar1 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar5 = uVar5 & 0xffff0000 | uVar1 | 0xf01;\n    }\n    fcn.0045688e(uVar5);\n    uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x1c), 0xffffffff);\n    iVar4 = fcn.0044891c(uVar3);\n    if (0 < iVar4) {\n        *(*(in_ECX + 0x80) + iVar4 * 4) = arg_8h;\n    }\n    if (lprcSrc == 0) {\n        if (iVar4 < 1) {\n            fcn.00433040(*(in_ECX + 0x84), arg_8h);\n            fcn.00433040(*(in_ECX + 0x84), 0);\n        }\n        uVar6 = 0x115;\n        var_4h = 0;\n        var_ch = -*0x485944;\n        var_8h = 0;\n        lprcDst = -*0x485940;\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, lprcSrc);\n        fcn.0044272e();\n        if (iVar4 < 1) {\n            fcn.004489a7(arg_8h, lprcDst, var_ch, var_8h, var_4h, (var_8h - lprcDst) / 2 + lprcDst, \n                         (var_4h - var_ch) / 2 + var_ch);\n        }\n        uVar6 = 0x114;\n        var_4h = var_4h - var_ch;\n        var_8h = var_8h - lprcDst;\n    }\n    fcn.00439f68(0, lprcDst, var_ch, var_8h, var_4h, uVar6);\n    uVar6 = (*_sym.imp.USER32.dll_GetParent)(*(arg_8h + 0x1c));\n    iVar4 = fcn.00436a76(uVar6);\n    if (iVar4 != in_ECX) {\n        if (in_ECX == 0) {\n            uVar6 = 0;\n        }\n        else {\n            uVar6 = *(in_ECX + 0x1c);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_SetParent)(*(arg_8h + 0x1c), uVar6);\n        fcn.00436a76(uVar6);\n    }\n    if (*(arg_8h + 0x70) != 0) {\n        fcn.00448247(arg_8h, 0xffffffff, 0);\n    }\n    *(arg_8h + 0x70) = in_ECX;\n    iVar4 = fcn.00451067();\n    *(iVar4 + 0xb8) = *(iVar4 + 0xb8) | 0xc;\n    return;\n}\n",
        "token_count": 1205
    },
    "004481e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004481e6(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 >> 0x10 != 0) {\n        param_2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_2 + 0x1c));\n        param_2 = param_2 & 0xffff;\n    }\n    iVar1 = fcn.0044891c(param_2, 0xffffffff);\n    if (0 < iVar1) {\n        fcn.004330f9(iVar1, 1);\n        if ((*(*(param_1 + 0x80) + -4 + iVar1 * 4) == 0) && (*(*(param_1 + 0x80) + iVar1 * 4) == 0)) {\n            fcn.004330f9(iVar1, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00448247": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448247(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    iVar4 = arg_8h;\n    iVar2 = fcn.0044891c(arg_8h, arg_ch);\n    if (arg_10h == 1) {\n        iVar1 = in_ECX[0x20];\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x1c));\n        *(iVar1 + iVar2 * 4) = uVar3 & 0xffff;\n        iVar4 = fcn.0044891c(iVar4, iVar2);\n        if (0 < iVar4) {\n            fcn.004330f9();\n            if ((*(in_ECX[0x20] + -4 + iVar2 * 4) == 0) && (*(in_ECX[0x20] + iVar2 * 4) == 0)) {\n                fcn.004330f9(iVar2, 1);\n            }\n        }\n    }\n    else {\n        fcn.004330f9(iVar2, 1);\n        if ((*(in_ECX[0x20] + -4 + iVar2 * 4) == 0) && (*(in_ECX[0x20] + iVar2 * 4) == 0)) {\n            fcn.004330f9(iVar2, 1);\n        }\n        if (arg_10h != -1) {\n            fcn.004481e6(arg_8h);\n        }\n    }\n    if (*(arg_8h + 0x74) != 0) {\n        piVar5 = fcn.00451067();\n        if ((in_ECX[0x1e] == 0) || (iVar4 = (**(*in_ECX + 0xe0))(),  iVar4 != 0)) {\n            piVar5[0x2e] = piVar5[0x2e] | 0xc;\n        }\n        else {\n            iVar4 = fcn.00447d6c();\n            if (iVar4 == 0) {\n                (**(*piVar5 + 0x58))();\n                return 1;\n            }\n            fcn.00439fb7(0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 562
    },
    "00448ae6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00448ae6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(extraout_ECX + 0x68) = *(unaff_EBP + 8);\n    if (*(extraout_ECX + 0x74) == 0) {\n        iVar1 = fcn.0043a6f7(0xb0);\n        *(unaff_EBP + 8) = iVar1;\n        *(unaff_EBP + -4) = 0;\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.0044a569(extraout_ECX);\n        }\n        *(extraout_ECX + 0x74) = uVar2;\n    }\n    if (*(extraout_ECX + 0x20) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(extraout_ECX + 0x1c));\n        *(extraout_ECX + 0x20) = uVar2;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 325
    },
    "00448db8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448db8(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (arg_8h == 2) {\n        fcn.00438279();\n        if ((*(in_ECX + 0x130) & 0x40) == 0) {\n            uVar3 = 1;\n            iVar1 = 0;\n            iVar2 = 1;\n            do {\n                if (*(in_ECX + 0x150) <= iVar2) break;\n                iVar1 = fcn.0044898b(uVar3, iVar2);\n                iVar2 = iVar2 + 1;\n            } while (iVar1 == 0);\n            (****(iVar1 + 0x74))(arg_ch, arg_10h);\n            return;\n        }\n    }\n    else if ((9 < arg_8h) && (arg_8h < 0x12)) {\n        fcn.00438279();\n        uVar3 = 1;\n        iVar1 = 0;\n        iVar2 = 1;\n        do {\n            if (*(in_ECX + 0x150) <= iVar2) break;\n            iVar1 = fcn.0044898b(uVar3, iVar2);\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        (**(**(iVar1 + 0x74) + 4))(arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    fcn.00451c52(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 383
    },
    "00448fea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448fea(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n    if (iVar2 < 0) {\n        return;\n    }\n    iVar3 = fcn.004569a4();\n    var_8h = iVar3;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    (*_sym.imp.USER32.dll_ScreenToClient)(in_ECX[7], &var_10h);\n    var_4h = (**(*in_ECX + 100))(var_10h, var_ch, 0);\n    if (var_4h < 0) {\n        *(iVar3 + 0x104) = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.004381a9();\n        iVar5 = fcn.00438245();\n        if ((iVar5 == 0) || (iVar5 = fcn.00439fde(),  iVar5 == 0)) {\n            var_4h = -1;\n        }\n        if (*(iVar3 + 0xcc) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(*(iVar3 + 0xcc) + 0x1c);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_GetCapture)();\n        piVar7 = fcn.00436a76(uVar6);\n        if (piVar7 != in_ECX) {\n            if (piVar7 == NULL) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = piVar7[7];\n            }\n            if ((iVar5 != iVar3) && (iVar3 = fcn.004381a9(),  iVar3 == iVar4)) {\n                var_4h = -1;\n            }\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_KillTimer;\n    if (-1 < var_4h) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[7], &var_10h);\n        iVar3 = (*_sym.imp.USER32.dll_WindowFromPoint)(var_10h, var_ch);\n        if (iVar3 == 0) {\ncode_r0x004490fa:\n            var_4h = -1;\n            *(var_8h + 0x104) = 0xffffffff;\n        }\n        else if ((iVar3 != in_ECX[7]) && (iVar4 = (*_sym.imp.USER32.dll_IsChild)(in_ECX[7], iVar3),  iVar4 == 0)) {\n            iVar4 = *(var_8h + 0xcc);\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + 0x1c);\n            }\n            if (iVar4 != iVar3) goto code_r0x004490fa;\n        }\n        if (-1 < var_4h) goto code_r0x00449130;\n    }\n    if (*(var_8h + 0x104) == -1) {\n        (*pcVar1)(in_ECX[7], 0xe001);\n    }\n    (**(*in_ECX + 0xdc))(0xffffffff);\ncode_r0x00449130:\n    if ((arg_8h == 0xe000) && ((*pcVar1)(in_ECX[7], 0xe000),  -1 < var_4h)) {\n        (**(*in_ECX + 0xdc))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 864
    },
    "0044967d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044967d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (*(param_1 + 0x1c) != 0) {\n        iVar1 = fcn.00451078();\n        if (iVar1 != 0) {\n            piVar2 = fcn.00451067();\n            (**(*piVar2 + 0x58))();\n            return;\n        }\n    }\n    fcn.004372ee();\n    return;\n}\n",
        "token_count": 119
    },
    "00449840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449840(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((in_ECX[0x1c] != 0) && (iVar1 = (**(*in_ECX + 100))(arg_ch, arg_10h, 0),  iVar1 == -1)) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[7], &arg_ch);\n        (***in_ECX[0x1d])(arg_ch, arg_10h);\n        return;\n    }\n    fcn.004369dd();\n    return;\n}\n",
        "token_count": 152
    },
    "004499da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004499da(uint noname_0, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    bool bVar7;\n    int32_t lprcDst;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    uVar1 = (**(*in_ECX + 0xcc))(arg_ch);\n    if (((uVar1 & 0x10000000) != 0) && ((uVar1 & 0xf000) != 0)) {\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, arg_ch + 1);\n        iVar6 = var_14h - lprcDst;\n        iVar5 = var_10h - var_18h;\n        bVar7 = arg_ch[7] != 0;\n        if (((var_4h[0x19] & 4U) == 0) || ((var_4h[0x19] & 1U) == 0)) {\n            if ((uVar1 & 0xa000) == 0) {\n                uVar4 = bVar7 | 0x10;\n            }\n            else {\n                uVar4 = bVar7 | 10;\n            }\n        }\n        else {\n            uVar4 = bVar7 | 6;\n        }\n        piVar2 = (**(*var_4h + 0xbc))(&var_ch, 0xffffffff, uVar4);\n        iVar3 = *piVar2;\n        if (iVar6 <= *piVar2) {\n            iVar3 = iVar6;\n        }\n        iVar6 = piVar2[1];\n        if (iVar5 <= piVar2[1]) {\n            iVar6 = iVar5;\n        }\n        if ((uVar1 & 0xa000) == 0) {\n            if ((uVar1 & 0x5000) != 0) {\n                arg_ch[5] = arg_ch[5] + iVar3;\n                iVar5 = arg_ch[6];\n                if (arg_ch[6] <= iVar6) {\n                    iVar5 = iVar6;\n                }\n                arg_ch[6] = iVar5;\n                if ((uVar1 & 0x1000) == 0) {\n                    if ((uVar1 & 0x4000) != 0) {\n                        lprcDst = var_14h - iVar3;\n                        arg_ch[3] = arg_ch[3] - iVar3;\n                    }\n                }\n                else {\n                    arg_ch[1] = arg_ch[1] + iVar3;\n                }\n            }\n        }\n        else {\n            arg_ch[6] = arg_ch[6] + iVar6;\n            iVar5 = arg_ch[5];\n            if (arg_ch[5] <= iVar3) {\n                iVar5 = iVar3;\n            }\n            arg_ch[5] = iVar5;\n            if ((uVar1 & 0x2000) == 0) {\n                if ((uVar1 & 0x8000) != 0) {\n                    var_18h = var_10h - iVar6;\n                    arg_ch[4] = arg_ch[4] - iVar6;\n                }\n            }\n            else {\n                arg_ch[2] = arg_ch[2] + iVar6;\n            }\n        }\n        var_14h = iVar3 + lprcDst;\n        var_10h = var_18h + iVar6;\n        if (*arg_ch != 0) {\n            fcn.00438801(arg_ch, var_4h[7], &lprcDst);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 876
    },
    "00449b98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449b98(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(in_ECX + 100);\n    if ((uVar1 & 0xf00) != 0) {\n        var_2ch = arg_ch[2];\n        var_28h = arg_ch[3];\n        var_20h = arg_ch[1];\n        iVar7 = arg_ch[3];\n        uVar5 = *0x48595c;\n        if (*0x48598c == 0) {\n            uVar5 = *0x485968;\n        }\n        if ((uVar1 & 0x80) != 0) {\n            var_2ch = var_2ch + -1;\n            var_28h = var_28h + -1;\n        }\n        uVar2 = uVar1 & 0x200;\n        if (uVar2 != 0) {\n            var_20h = var_20h + *0x485944;\n        }\n        uVar3 = uVar1 & 0x800;\n        if (uVar3 != 0) {\n            iVar7 = iVar7 - *0x485944;\n        }\n        uVar4 = uVar1 & 0x100;\n        if (uVar4 != 0) {\n            fcn.00452c2b(0, var_20h, 1, iVar7 - var_20h, uVar5);\n        }\n        if (uVar2 != 0) {\n            fcn.00452c2b(0, 0, arg_ch[2], 1, uVar5);\n        }\n        uVar6 = uVar1 & 0x400;\n        if (uVar6 != 0) {\n            fcn.00452c2b(var_2ch, var_20h, 0xffffffff, iVar7 - var_20h, uVar5);\n        }\n        if (uVar3 != 0) {\n            fcn.00452c2b(0, var_28h, arg_ch[2], 0xffffffff, uVar5);\n        }\n        uVar5 = *0x485960;\n        if ((uVar1 & 0x80) != 0) {\n            if (uVar4 != 0) {\n                fcn.00452c2b(1, var_20h, 1, iVar7 - var_20h, *0x485960);\n            }\n            if (uVar2 != 0) {\n                fcn.00452c2b(0, 1, arg_ch[2], 1, uVar5);\n            }\n            if (uVar6 != 0) {\n                fcn.00452c2b(arg_ch[2], var_20h, 0xffffffff, iVar7 - var_20h, uVar5);\n            }\n            if (uVar3 != 0) {\n                fcn.00452c2b(0, arg_ch[3], arg_ch[2], 0xffffffff, uVar5);\n            }\n        }\n        if (uVar4 != 0) {\n            *arg_ch = *arg_ch + *0x485940;\n        }\n        if (uVar2 != 0) {\n            arg_ch[1] = arg_ch[1] + *0x485944;\n        }\n        if (uVar6 != 0) {\n            arg_ch[2] = arg_ch[2] - *0x485940;\n        }\n        if (uVar3 != 0) {\n            arg_ch[3] = arg_ch[3] - *0x485944;\n        }\n    }\n    return;\n}\n",
        "token_count": 951
    },
    "00449dbf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00449dbf(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 100);\n    if ((uVar1 & 0x100) != 0) {\n        *param_2 = *param_2 + *0x485940;\n    }\n    if ((uVar1 & 0x200) != 0) {\n        param_2[1] = param_2[1] + *0x485944;\n    }\n    if ((uVar1 & 0x400) != 0) {\n        param_2[2] = param_2[2] - *0x485940;\n    }\n    if ((uVar1 & 0x800) != 0) {\n        param_2[3] = param_2[3] - *0x485944;\n    }\n    if (param_3 == 0) {\n        *param_2 = *param_2 + *(param_1 + 0x48);\n        param_2[1] = param_2[1] + *(param_1 + 0x40);\n        param_2[2] = param_2[2] - *(param_1 + 0x4c);\n        param_2[3] = param_2[3] - *(param_1 + 0x44);\n        if ((*(param_1 + 100) & 0x400001) == 0x400000) {\n            param_2[1] = param_2[1] + 7;\n        }\n    }\n    else {\n        *param_2 = *param_2 + *(param_1 + 0x40);\n        param_2[1] = param_2[1] + *(param_1 + 0x48);\n        param_2[2] = param_2[2] - *(param_1 + 0x44);\n        param_2[3] = param_2[3] - *(param_1 + 0x4c);\n        if ((*(param_1 + 100) & 0x400001) == 0x400000) {\n            *param_2 = *param_2 + 7;\n        }\n    }\n    return;\n}\n",
        "token_count": 517
    },
    "00449e62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00449e62(uint lpAppName, uint lpValueName, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint lpString;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(&lpString, 0x46dd70, arg_10h);\n        uVar1 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, &lpString, *(in_ECX + 0x90))\n        ;\n    }\n    else {\n        uVar1 = fcn.00457c16(lpAppName);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, lpValueName, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "00449ed7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00449ed7(uint lpAppName, int32_t lpValueName, int32_t lpString)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, lpString, *(in_ECX + 0x90));\n        return uVar3;\n    }\n    if (lpValueName == 0) {\n        iVar1 = fcn.00457b82();\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(iVar1, lpAppName);\n            goto code_r0x00449f4a;\n        }\n    }\n    else if (lpString == 0) {\n        iVar1 = fcn.00457c16(lpAppName);\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar1, lpValueName);\ncode_r0x00449f4a:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            return iVar2 == 0;\n        }\n    }\n    else {\n        iVar1 = fcn.00457c16(lpAppName);\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 1, lpString, iVar2 + 1);\n            goto code_r0x00449f4a;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 407
    },
    "00449f77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00449f77(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *lpString;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        lpString = fcn.0043a6f7(arg_14h * 2 + 1);\n        uVar1 = 0;\n        pcVar4 = lpString;\n        if (arg_14h != 0) {\n            do {\n                puVar3 = arg_10h + uVar1;\n                *pcVar4 = (*puVar3 & 0xf) + 0x41;\n                uVar1 = uVar1 + 1;\n                pcVar4[1] = (*puVar3 >> 4) + 0x41;\n                pcVar4 = pcVar4 + 2;\n            } while (uVar1 < arg_14h);\n        }\n        lpString[uVar1 * 2] = '\\0';\n        uVar1 = fcn.00449ed7(arg_8h, arg_ch, lpString);\n        fcn.0043a720(lpString);\n    }\n    else {\n        uVar1 = fcn.00457c16(arg_8h);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, arg_ch, 0, 3, arg_10h, arg_14h);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 424
    },
    "0044a3ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a3ec(int32_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar4 = 0;\n    uVar1 = *arg_ch;\n    puVar5 = arg_ch;\n    while (uVar1 != 0) {\n        if (*puVar5 == 0x25) {\n            uVar1 = puVar5[1];\n            if ((uVar1 < '0') || ('9' < uVar1)) {\n                if ((uVar1 < 'A') || ('Z' < uVar1)) goto code_r0x0044a445;\n                if (uVar1 < ':') goto code_r0x0044a423;\n                iVar3 = uVar1 + -0x38;\n            }\n            else {\ncode_r0x0044a423:\n                iVar3 = uVar1 + -0x31;\n            }\n            puVar5 = puVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x0044a454;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                iVar4 = iVar4 + iVar3;\n            }\n        }\n        else {\ncode_r0x0044a445:\n            if ((*(*puVar5 + 0x487ae1) & 4) != 0) {\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            puVar5 = puVar5 + 1;\ncode_r0x0044a454:\n            iVar4 = iVar4 + 1;\n        }\n        uVar1 = *puVar5;\n    }\n    puVar5 = fcn.0043b95e(iVar4);\n    do {\n        while( true ) {\n            if (*arg_ch == 0) {\n                fcn.0043b9ad(puVar5 - *arg_8h);\n                return;\n            }\n            uVar1 = *arg_ch;\n            if (uVar1 == 0x25) break;\ncode_r0x0044a4c2:\n            if ((*(uVar1 + 0x487ae1) & 4) != 0) {\n                *puVar5 = uVar1;\n                puVar5 = puVar5 + 1;\n                arg_ch = arg_ch + 1;\n            }\n            *puVar5 = *arg_ch;\n            puVar5 = puVar5 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        uVar2 = arg_ch[1];\n        if ((uVar2 < '0') || ('9' < uVar2)) {\n            if ((uVar2 < 'A') || ('Z' < uVar2)) goto code_r0x0044a4c2;\n            if (uVar2 < ':') goto code_r0x0044a492;\n            iVar4 = uVar2 + -0x38;\n        }\n        else {\ncode_r0x0044a492:\n            iVar4 = uVar2 + -0x31;\n        }\n        arg_ch = arg_ch + 2;\n        if (iVar4 < arg_14h) {\n            iVar4 = *(arg_10h + iVar4 * 4);\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar5, iVar4);\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar5);\n                puVar5 = puVar5 + iVar4;\n            }\n        }\n        else {\n            *puVar5 = 0x3f;\n            puVar5 = puVar5 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 900
    },
    "0044a93c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a93c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n    iVar4 = arg_8h - *(in_ECX + 4);\n    iVar2 = arg_ch - *(in_ECX + 8);\n    (*_sym.imp.USER32.dll_OffsetRect)(in_ECX + 0x28, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x48, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x38, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x58, iVar4, iVar2);\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    if (*(in_ECX + 0x80) == 0) {\n        uVar3 = fcn.0044b13a();\n    }\n    else {\n        uVar3 = 0;\n    }\n    *(in_ECX + 0x74) = uVar3;\n    fcn.0044afd2(0);\n    return;\n}\n",
        "token_count": 310
    },
    "0044a9ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a9ec(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    fcn.0044af89();\n    if (*(param_1 + 0x74) == 0) {\n        uVar1 = *(param_1 + 0x78);\n        if ((((uVar1 & 4) == 0) && (((uVar1 & 0xa000) == 0 || (*(param_1 + 0x7c) != 0)))) &&\n           (((uVar1 & 0x5000) == 0 || (*(param_1 + 0x7c) == 0)))) {\n            *(param_1 + 0xa8) = *(param_1 + 0x58);\n            arg_10h = *(param_1 + 0x5c);\n            uVar1 = CONCAT11(0x10, *(param_1 + 0x70) & 0x40);\n            arg_ch = *(param_1 + 0x58);\n            *(param_1 + 0xa4) = uVar1;\n            *(param_1 + 0xac) = arg_10h;\n        }\n        else {\n            *(param_1 + 0xa8) = *(param_1 + 0x48);\n            arg_10h = *(param_1 + 0x4c);\n            uVar1 = CONCAT11(0x20, *(param_1 + 0x70) & 0x40);\n            arg_ch = *(param_1 + 0x48);\n            *(param_1 + 0xa4) = uVar1;\n            *(param_1 + 0xac) = arg_10h;\n        }\n        fcn.00451272(*(param_1 + 0x68), arg_ch, arg_10h, uVar1);\n    }\n    else {\n        var_4h = fcn.0044b251(*(param_1 + 0x74));\n        puVar2 = param_1 + 0x38;\n        if ((*(param_1 + 0x75) & 0x50) == 0) {\n            puVar2 = param_1 + 0x28;\n        }\n        var_14h = *puVar2;\n        uStack20 = puVar2[1];\n        uStack16 = puVar2[2];\n        uStack12 = puVar2[3];\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(var_4h + 0x1c));\n        uVar1 = uVar1 & 0xffff;\n        if ((0xe81a < uVar1) && (uVar1 < 0xe81f)) {\n            *(param_1 + 0x90) = uVar1;\n            *(param_1 + 0x94) = var_14h;\n            *(param_1 + 0x98) = uStack20;\n            *(param_1 + 0x9c) = uStack16;\n            *(param_1 + 0xa0) = uStack12;\n            fcn.0044272e(param_1 + 0x94);\n        }\n        fcn.00451198(*(param_1 + 0x68), var_4h, &var_14h);\n        (**(**(param_1 + 0x6c) + 200))(1);\n    }\n    return;\n}\n",
        "token_count": 810
    },
    "0044afd2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044afd2(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_24h;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint lprc;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 1;\n    var_10h = 1;\n    uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0);\n    var_8h = fcn.00442fb3(uVar2);\n    var_ch = var_8h;\n    var_4h = fcn.0045288a();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if ((*(in_ECX + 0x74) & 0xa000) == 0) {\n        if ((*(in_ECX + 0x74) & 0x5000) == 0) {\n            var_14h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x20);\n            var_14h = var_14h + -1;\n            var_10h = (*pcVar1)(0x21);\n            var_10h = var_10h + -1;\n            if ((((*(in_ECX + 0x78) & 0xa000) == 0) || (*(in_ECX + 0x7c) != 0)) &&\n               (((*(in_ECX + 0x78) & 0x5000) == 0 || (*(in_ECX + 0x7c) == 0)))) {\n                puVar3 = in_ECX + 0x58;\n            }\n            else {\n                puVar3 = in_ECX + 0x48;\n            }\n            lprc = *puVar3;\n            uStack36 = puVar3[1];\n            uStack32 = puVar3[2];\n            uStack28 = puVar3[3];\n            var_8h = var_4h;\n            goto code_r0x0044b069;\n        }\n        puVar3 = in_ECX + 0x38;\n    }\n    else {\n        puVar3 = in_ECX + 0x28;\n    }\n    lprc = *puVar3;\n    uStack36 = puVar3[1];\n    uStack32 = puVar3[2];\n    uStack28 = puVar3[3];\ncode_r0x0044b069:\n    if (arg_8h != 0) {\n        var_10h = 0;\n        var_14h = 0;\n    }\n    if ((*0x48598c != 0) && ((*(in_ECX + 0x75) & 0xf0) != 0)) {\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, 0xffffffff, 0xffffffff);\n    }\n    arg_24h = var_4h;\n    if (*(in_ECX + 0x24) == 0) {\n        arg_24h = var_ch;\n    }\n    fcn.004528fd(&lprc, var_14h, var_10h, in_ECX + 0xc, *(in_ECX + 0x1c), *(in_ECX + 0x20), var_8h, arg_24h);\n    *(in_ECX + 0xc) = lprc;\n    *(in_ECX + 0x1c) = var_14h;\n    *(in_ECX + 0x10) = uStack36;\n    *(in_ECX + 0x14) = uStack32;\n    *(in_ECX + 0x20) = var_10h;\n    *(in_ECX + 0x18) = uStack28;\n    *(in_ECX + 0x24) = var_8h == var_4h;\n    return;\n}\n",
        "token_count": 916
    },
    "0044b0e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044b0e8(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*param_2 != param_3) {\n        *param_2 = param_3;\n        if ((((*(param_1 + 0x70) & 0xa000) == 0) || ((*(param_1 + 0x70) & 0x5000) == 0)) || (*(param_1 + 0x7c) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *(param_1 + 0x7c) = uVar1;\n        if (*(param_1 + 0x80) == 0) {\n            uVar1 = fcn.0044b13a();\n        }\n        else {\n            uVar1 = 0;\n        }\n        *(param_1 + 0x74) = uVar1;\n        fcn.0044afd2(0);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "0044b13a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044b13a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar1 = 0;\n    uVar2 = *(param_1 + 0x78) & 0xa000;\n    if (*(param_1 + 0x7c) != 0) {\n        uVar2 = uVar2 == 0;\n    }\n    if ((uVar2 == 0) || ((*(param_1 + 0x70) & 0xa000) == 0)) {\n        if ((*(param_1 + 0x70) & 0x5000) == 0) goto code_r0x0044b195;\n        uVar1 = *(param_1 + 0x70) & 0xffff5fff;\n        puVar3 = param_1 + 0x38;\n    }\n    else {\n        uVar1 = *(param_1 + 0x70) & 0xffffafff;\n        puVar3 = param_1 + 0x28;\n    }\n    uVar1 = fcn.0045136f(*puVar3, puVar3[1], puVar3[2], puVar3[3], uVar1, 0);\ncode_r0x0044b195:\n    if ((*(param_1 + 0x7c) == 0) && (uVar1 == 0)) {\n        if ((*(param_1 + 0x70) & 0xa000) != 0) {\n            fcn.0045136f(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), \n                         *(param_1 + 0x70) & 0xffffafff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffffafff;\n            uVar1 = fcn.0045136f(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        if ((*(param_1 + 0x70) & 0x5000) != 0) {\n            fcn.0045136f(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), \n                         *(param_1 + 0x70) & 0xffff5fff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffff5fff;\n            uVar1 = fcn.0045136f(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 759
    },
    "0044b83f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044b83f(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    puVar3 = *(param_1 + 8);\n    var_4h = param_1;\n    while (puVar3 != NULL) {\n        puVar1 = *puVar3;\n        piVar2 = puVar3[2];\n        var_4h = (**(*piVar2 + 0x54))();\n        while (puVar3 = puVar1,  var_4h != 0) {\n            (**(*piVar2 + 0x58))(&var_4h);\n            iVar4 = iVar4 + 1;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 200
    },
    "0044f46b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044f4c3)\n// WARNING: Removing unreachable block (ram,0x0044f4cf)\n\nvoid fcn.0044f46b(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar1)(iVar4, 2)) {\n        iVar5 = fcn.00436a9d(iVar4);\n        if ((((iVar5 != 0) && (*0x21 != iVar4)) && (iVar6 = fcn.0044f2c0(*0x21, iVar4),  iVar6 != 0)) &&\n           ((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n            ((*(iVar5 + 0x24) & 2) != 0)))) {\n            (*pcVar2)(iVar4, 4);\n            *(iVar5 + 0x24) = *(iVar5 + 0x24) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "0044f663": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0044f663(int32_t param_1)\n\n{\n    if (*(param_1 + 0x28) == 0) {\n        fcn.0043970d(8);\n        *(param_1 + 0x28) = \"AfxFrameOrView42s\";\n    }\n    if ((*(param_1 + 0x20) & 0x8000) != 0) {\n        if (*0x48598c == 0) {\n            return 1;\n        }\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x4000;\n    }\n    if (*0x48598c != 0) {\n        *(param_1 + 0x2d) = *(param_1 + 0x2d) | 2;\n    }\n    return 1;\n}\n",
        "token_count": 193
    },
    "0044f837": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f837(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t lpClassName;\n    uint lpWndClass;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.00456c34();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.004108b0(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 0x5c))(&var_58h);\n        if (lpClassName != 0) {\n            iVar2 = fcn.00456c34();\n            iVar2 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar2 + 8), lpClassName, &lpWndClass);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.00437800(lpWndClass, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "0044fa80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fa80(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if ((param_1[0x27] != NULL) && (iVar1 = (*param_1[0x27])(param_1),  iVar1 == 0)) {\n        return;\n    }\n    piVar2 = (**(*param_1 + 0xbc))();\n    if ((piVar2 != NULL) && (iVar1 = (**(*piVar2 + 0x8c))(param_1),  iVar1 == 0)) {\n        return;\n    }\n    iVar1 = fcn.00456c34();\n    piVar3 = *(iVar1 + 4);\n    if ((piVar3 != NULL) && (piVar3[7] == param_1)) {\n        if ((piVar2 == NULL) && (iVar1 = (**(*piVar3 + 0x88))(),  iVar1 == 0)) {\n            return;\n        }\n        fcn.0044563d();\n        fcn.00445709();\n        iVar1 = fcn.00451462();\n        if (iVar1 == 0) {\n            fcn.0045149b(0);\n            return;\n        }\n        iVar1 = fcn.00456c34();\n        if ((*(iVar1 + 0x14) == '\\0') && (piVar3[7] == 0)) {\n            fcn.0046695d(0);\n            return;\n        }\n    }\n    if ((piVar2 != NULL) && (piVar2[0x12] != 0)) {\n        var_4h = (**(*piVar2 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                (**(*piVar2 + 0x7c))();\n                return;\n            }\n            (**(*piVar2 + 100))(&var_4h);\n            piVar3 = fcn.00438126();\n        } while (piVar3 == param_1);\n        (**(*piVar2 + 0x94))(param_1);\n    }\n    (**(*param_1 + 0x58))();\n    return;\n}\n",
        "token_count": 519
    },
    "0044fd73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fd73(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    fcn.004369dd();\n    uVar2 = fcn.00439ddc();\n    piVar5 = in_ECX;\n    if ((uVar2 & 0x40000000) == 0) {\n        piVar5 = fcn.004382b6();\n    }\n    if (arg_8h != 0) {\n        arg_ch = in_ECX;\n    }\n    if ((piVar5 == arg_ch) ||\n       ((piVar3 = fcn.004382b6(),  piVar5 == piVar3 &&\n        (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[7], 0x36d, 0x40, 0),  iVar4 != 0)))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    piVar5[9] = piVar5[9] & 0xffffffdf;\n    if (bVar1) {\n        piVar5[9] = piVar5[9] | 0x20;\n    }\n    fcn.0044f5b9((-bVar1 & 0xfffffffc) + 8);\n    piVar5 = fcn.0045015b();\n    if (piVar5 == NULL) {\n        (**(*in_ECX + 0xc0))();\n        piVar5 = fcn.0045015b();\n        if (piVar5 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != 0) && (arg_10h == 0)) {\n        (**(*piVar5 + 0xe4))(1, piVar5, piVar5);\n    }\n    (**(*piVar5 + 0xe8))(arg_8h);\n    return;\n}\n",
        "token_count": 475
    },
    "0044fe7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044fe7e(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.004382b6();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    param_2 = param_2 & 0xfff0;\n    if (*(iVar2 + 0x50) == 0) {\ncode_r0x0044ff07:\n        fcn.004369dd();\n    }\n    else {\n        if (param_2 < 0xf041) {\n            if (((param_2 != 0xf040) && (param_2 != 0xf000)) && (param_2 != 0xf010)) {\n                iVar2 = param_2 - 0xf020;\ncode_r0x0044fec8:\n                if ((iVar2 != 0) && (iVar2 != 0x10)) goto code_r0x0044ff07;\n            }\n        }\n        else if ((param_2 != 0xf050) && (param_2 != 0xf060)) {\n            iVar2 = param_2 - 0xf120;\n            goto code_r0x0044fec8;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x365, 0, (param_2 - 0xf000 >> 4) + 0x1ef00);\n        if (iVar2 == 0) {\n            (*pcVar1)(*(param_1 + 0x1c), 0x111, 0xe147, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0044ffe2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ffe2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    uint var_108h;\n    int32_t var_4h;\n    \n    uVar4 = fcn.00456c34();\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalGetAtomNameA;\n    iVar1 = *(uVar4 + 4);\n    if ((((iVar1 != 0) && (arg_ch != 0)) && (iVar5 = arg_ch >> 0x10,  iVar5 != 0)) &&\n       ((arg_ch == *(iVar1 + 0xb0) && (iVar5 == *(iVar1 + 0xb2))))) {\n        (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(uVar4 & 0xffff0000 | *(iVar1 + 0xb0), &var_108h, 0x103);\n        pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n        (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(&var_108h);\n        (*pcVar2)(&var_108h & 0xffff0000 | *(iVar1 + 0xb2), &var_108h, 0x103);\n        (*pcVar3)(&var_108h);\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x3e4, *(var_4h + 0x1c), *(iVar1 + 0xb0));\n    }\n    return 0;\n}\n",
        "token_count": 371
    },
    "00450162": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00450162(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0x98);\n    if (param_2 != piVar1) {\n        *(param_1 + 0x98) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0xe4))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0x98) == 0) && (*(param_1 + 0x98) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0xe4))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "004501e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004501e7(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    piVar1 = fcn.00451067();\n    if (arg_10h == 0) {\n        fcn.00439f68(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0xc4))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.00451078(),  iVar2 == 0)) {\n            (**(*piVar1 + 200))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0xc4))(arg_ch);\n        piVar1[0x2e] = piVar1[0x2e] | 0xc;\n    }\n    iVar2 = fcn.00451078();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x1c] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x1c] + 0xe0))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x22] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x004502a5;\n            }\n            piVar1[0x22] = 8;\n            goto code_r0x004502d0;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x22] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x22] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x004502a5:\n        fcn.00439fb7(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x004502d0:\n    (**(*piVar1 + 200))(0);\n    return;\n}\n",
        "token_count": 557
    },
    "00450300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450300(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00441b2b(*(in_ECX + 0x1c));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x68) == NULL || (iVar2 = (**(**(in_ECX + 0x68) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        fcn.0043a4b1();\n        iVar2 = fcn.004569a4();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((*(iVar2 + 0x54) != *(arg_8h + 4)) &&\n           (((iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x1c)),  iVar2 != 0 &&\n             (iVar2 = fcn.004381a9(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x1c)),  iVar2 != 0)))) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar8 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar9 = iVar8;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar8);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.0043d50e(iVar9, iVar2);\n                        break;\n                    }\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar6 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        uVar5 = (*_sym.imp.USER32.dll_GetSubMenu)(*(arg_8h + 4), var_24h);\n                        iVar2 = fcn.0043d50e(uVar5);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x0045046b;\n                        uVar5 = 0;\n                    }\n                    else if ((*(in_ECX + 0x3c) == 0) || (0xefff < var_28h)) {\n                        uVar5 = 0;\n                    }\n                    else {\n                        uVar5 = 1;\n                    }\n                    fcn.0043a676(in_ECX, uVar5);\n                    uVar6 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar6 < var_ch) {\n                        var_24h = var_24h + (uVar6 - var_ch);\n                        while ((var_24h < uVar6 && (uVar7 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar7 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x0045046b:\n                var_ch = uVar6;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 998
    },
    "00450481": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450481(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.004382b6();\n    if ((in_ECX[0x1a] != NULL) && (iVar2 = (**(*in_ECX[0x1a] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[9] = in_ECX[9] & 0xffffffbf;\n        if (*(iVar1 + 0x50) == 0) {\n            in_ECX[0x24] = 0xe001;\n        }\n        else {\n            in_ECX[0x24] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[7], 0x362, in_ECX[0x24], 0);\n        iVar1 = (**(*in_ECX + 0xd4))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x1c));\n        }\n        goto code_r0x00450558;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x24] = 0;\n    }\n    else {\n        if ((arg_8h < 0xf000) || (0xf1ef < arg_8h)) {\n            if (0xfeff < arg_8h) {\n                in_ECX[0x24] = 0xef1f;\n                goto code_r0x00450554;\n            }\n        }\n        else {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        in_ECX[0x24] = arg_8h;\n    }\ncode_r0x00450554:\n    *(iVar1 + 0x24) = *(iVar1 + 0x24) | 0x40;\ncode_r0x00450558:\n    if (in_ECX[0x24] != in_ECX[0x25]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[7]);\n        iVar1 = fcn.00436a76(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[7], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 624
    },
    "00450733": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00450733(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    fcn.00432b43(10);\n    puVar4 = *(extraout_ECX + 0x70);\n    *(unaff_EBP + -4) = 0;\n    while (puVar4 != NULL) {\n        puVar1 = *puVar4;\n        iVar2 = (**(*puVar4[2] + 0xd0))();\n        puVar4 = puVar1;\n        if (iVar2 != 0) {\n            fcn.00432c66();\n        }\n    }\n    puVar4 = *(unaff_EBP + -0x24);\n    while (puVar4 != NULL) {\n        puVar1 = *puVar4;\n        if (puVar4[2][0x1e] == 0) {\n            (**(*puVar4[2] + 0x58))();\n            puVar4 = puVar1;\n        }\n        else {\n            piVar3 = fcn.00438126();\n            (**(*piVar3 + 0x58))();\n            puVar4 = puVar1;\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00432ba2();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 397
    },
    "004507be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004507be(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (param_2 == 0) {\ncode_r0x004507eb:\n        iVar3 = 0;\n    }\n    else {\n        puVar4 = *(param_1 + 0x70);\n        do {\n            if (puVar4 == NULL) goto code_r0x004507eb;\n            puVar1 = *puVar4;\n            iVar3 = puVar4[2];\n            uVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(iVar3 + 0x1c));\n            puVar4 = puVar1;\n        } while ((uVar2 & 0xffff) != param_2);\n    }\n    return iVar3;\n}\n",
        "token_count": 206
    },
    "00450a0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450a0b(int32_t lpString2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lpString1;\n    \n    uVar2 = fcn.00439ddc();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n    if ((uVar2 & 0x4000) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, *(in_ECX + 0xac));\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n        if (lpString2 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(&lpString1, 0x46e368);\n            (*pcVar1)(&lpString1, lpString2);\n            if (0 < *(in_ECX + 0x40)) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString1, 0x46e36c, *(in_ECX + 0x40));\n                (*_sym.imp.USER32.dll_wsprintfA)(&lpString1 + iVar3);\n            }\n        }\n    }\n    else {\n        lpString1._0_1_ = 0;\n        if (lpString2 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, lpString2);\n            if (0 < *(in_ECX + 0x40)) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString1, 0x46e36c, *(in_ECX + 0x40));\n                (*_sym.imp.USER32.dll_wsprintfA)(&lpString1 + iVar3);\n            }\n            (*pcVar1)(&lpString1, 0x46e368);\n        }\n        (*pcVar1)(&lpString1, *(in_ECX + 0xac));\n    }\n    fcn.00441aba(*(in_ECX + 0x1c), &lpString1);\n    return;\n}\n",
        "token_count": 477
    },
    "00451078": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00451078(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0xd0))();\n    if (iVar1 != 0) {\n        return param_1[0x1e];\n    }\n    if ((param_1[0x1c] != 0) && (*(param_1[0x1c] + 0x78) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00451272": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451272(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if ((((*(arg_8h + 0x6c) == 0) || (iVar1 = *(arg_8h + 0x70),  iVar1 == 0)) || (*(iVar1 + 0x78) == 0)) ||\n       ((iVar2 = fcn.00447d6c(),  iVar2 != 1 || ((*(iVar1 + 100) & arg_14h & 0xf000) == 0)))) {\n        uVar5 = arg_14h;\n        if (((*(arg_8h + 100) & 4) != 0) && (uVar5 = arg_14h | 4,  (arg_14h & 0x5000) != 0)) {\n            uVar5 = arg_14h & 0xffff2fff | 0x2004;\n        }\n        arg_14h = uVar5;\n        piVar4 = fcn.004510a2(arg_14h);\n        fcn.00439f68(0, arg_ch, arg_10h, 0, 0, 0x15);\n        if (piVar4[8] == 0) {\n            piVar4[8] = *(arg_8h + 0x1c);\n        }\n        fcn.00439bdb(0xe81f);\n        fcn.00447dd4(arg_8h, 0);\n        (**(*piVar4 + 200))(1);\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_8h + 0x1c), 0xfffffff0);\n        if ((uVar5 & 0x10000000) == 0) {\n            return;\n        }\n        fcn.00439fb7(8);\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar1 + 0x1c));\n        piVar4 = fcn.00436a76(uVar3);\n        fcn.00439f68(0, arg_ch, arg_10h, 0, 0, 0x15);\n        (**(*piVar4 + 200))(1);\n    }\n    (*_sym.imp.USER32.dll_UpdateWindow)(piVar4[7]);\n    return;\n}\n",
        "token_count": 585
    },
    "0045136f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0045136f(uint lprcSrc2, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t **arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    int32_t lprcSrc1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar3 = arg_1ch;\n    arg_18h = arg_18h & 0xf040;\n    if (arg_1ch != NULL) {\n        *arg_1ch = NULL;\n    }\n    puVar5 = *(in_ECX + 0x70);\n    do {\n        do {\n            if (puVar5 == NULL) {\n                return 0;\n            }\n            puVar1 = *puVar5;\n            piVar2 = puVar5[2];\n            iVar4 = (**(*piVar2 + 0xd0))();\n            puVar5 = puVar1;\n        } while ((((iVar4 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(piVar2[7]),  iVar4 == 0)) ||\n                 ((piVar2[0x19] & arg_18h & 0xf000) == 0)) ||\n                ((piVar2[0x1e] != 0 && ((piVar2[0x19] & arg_18h & 0x40) == 0))));\n        (*_sym.imp.USER32.dll_GetWindowRect)(piVar2[7], &lprcSrc1);\n        if (var_8h == lprcSrc1) {\n            var_8h = var_8h + 1;\n        }\n        if (var_4h == var_ch) {\n            var_4h = var_4h + 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcSrc1, &lprcSrc1, &lprcSrc2);\n    } while (iVar4 == 0);\n    if (ppiVar3 != NULL) {\n        *ppiVar3 = piVar2;\n    }\n    return piVar2[0x19] & arg_18h;\n}\n",
        "token_count": 546
    },
    "00451482": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00451482(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00456c34();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.004514aa();\n    if (iVar2 == 0) {\n        fcn.0045149b(1);\n        iVar2 = fcn.00456c34();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x1c) == 0)) {\n            iVar2 = fcn.00456c34();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.0046695d(0);\n            }\n        }\n        else {\n            iVar1 = fcn.00439fde();\n            if (iVar1 != 0) {\n                (**(**(iVar2 + 0x1c) + 0x58))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "004518ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004518ed(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    uint uVar4;\n    \n    if (*0x485994 == 0) {\n        uVar2 = fcn.00439ddc();\n        pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n        if ((uVar2 & 0x40600) == 0) {\n            iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(6);\n            uVar4 = 5;\n        }\n        else {\n            iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x21);\n            uVar4 = 0x20;\n        }\n        iVar3 = (*pcVar1)(uVar4, -iVar3);\n        (*_sym.imp.USER32.dll_InflateRect)(unaff_retaddr, -iVar3);\n        if ((uVar2 & 0xc00000) != 0) {\n            *(unaff_retaddr + 4) = *(unaff_retaddr + 4) + *0x485bd4;\n        }\n    }\n    else {\n        fcn.004369dd();\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00451953": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00451953(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t lprcSrc;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint lprcDst;\n    int32_t lpRect;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t dx;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t dy;\n    uint32_t var_4h;\n    \n    var_4h = fcn.00439ddc();\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &lpRect);\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x21);\n    dy = iVar4;\n    dx = (*pcVar2)(0x20);\n    pcVar1 = _sym.imp.USER32.dll_PtInRect;\n    if (*0x485994 == 0) {\n        iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, arg_8h, arg_ch);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        iVar4 = (*pcVar2)(6);\n        var_10h = iVar4;\n        iVar6 = (*pcVar2)(5);\n        var_68h = var_24h;\n        lprcSrc = lpRect;\n        var_60h = var_1ch;\n        var_64h = var_20h;\n        fcn.004518ed(0, &lprcSrc);\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        iVar7 = (*pcVar1)(&lprcDst, arg_8h, arg_ch);\n        if (iVar7 != 0) {\n            return 1;\n        }\n        if ((var_4h & 0x40600) == 0) {\ncode_r0x00451c10:\n            var_1ch = iVar4 + *0x485bd4 + var_24h;\n            iVar4 = (*pcVar1)(&lpRect, arg_8h, arg_ch);\n            if (iVar4 == 0) {\n                return 0xfffffffe;\n            }\n            if ((arg_8h < *0x485bd0 + -2 + lpRect) && ((var_4h & 0x80000) != 0)) {\n                return 3;\n            }\n        }\n        else {\n            iVar6 = *0x485bd0 + iVar6 * -3 + dx;\n            iVar4 = dy + iVar4 * -2 + *0x485bd4;\n            if (arg_ch < var_24h + dy) {\n                if ((var_4h & 0x200) == 0) {\n                    if (lpRect + iVar6 < arg_8h) {\n                        uVar5 = ((arg_8h < var_20h - iVar6) - 1 & 2) + 0xc;\n                    }\n                    else {\ncode_r0x00451b2e:\n                        uVar5 = 0xd;\n                    }\n                }\n                else {\n                    uVar5 = 0xc;\n                }\n            }\n            else if (arg_ch < var_1ch - dy) {\n                if (arg_8h < lpRect + dx) {\n                    if ((var_4h & 0x200) == 0) {\n                        if (arg_ch <= var_24h + iVar4) goto code_r0x00451b2e;\n                        uVar5 = ((arg_ch < var_1ch - iVar4) - 1 & 6) + 10;\n                    }\n                    else {\n                        uVar5 = 10;\n                    }\n                }\n                else {\n                    if (arg_8h < var_20h - dx) {\n                        (*_sym.imp.USER32.dll_InflateRect)(&lpRect, -dx, -dy);\n                        iVar4 = var_10h;\n                        goto code_r0x00451c10;\n                    }\n                    if ((var_4h & 0x200) == 0) {\n                        if (var_24h + iVar4 < arg_ch) {\n                            uVar5 = ((arg_ch < var_1ch - iVar4) - 1 & 6) + 0xb;\n                        }\n                        else {\n                            uVar5 = 0xe;\n                        }\n                    }\n                    else {\n                        uVar5 = 0xb;\n                    }\n                }\n            }\n            else if ((var_4h & 0x200) == 0) {\n                if (lpRect + iVar6 < arg_8h) {\n                    uVar5 = ((arg_8h < var_20h - iVar6) - 1 & 2) + 0xf;\n                }\n                else {\n                    uVar5 = 0x10;\n                }\n            }\n            else {\n                uVar5 = 0xf;\n            }\n            if ((var_4h & 0x800) == 0) {\n                return uVar5;\n            }\n        }\n        return 2;\n    }\n    uVar5 = fcn.004369dd();\n    if ((*0x48598c != 0) && ((var_4h & 0x1000) != 0)) {\n        if (uVar5 == 3) {\n            uVar5 = 2;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(2);\n        if (iVar3 < 0) {\n            return 0;\n        }\n    }\n    if (((uVar5 < 10) || (0x11 < uVar5)) && (uVar5 != 4)) {\n        return uVar5;\n    }\n    if ((var_4h & 0x800) != 0) {\n        return 2;\n    }\n    (*_sym.imp.USER32.dll_InflateRect)(&lpRect, -dx, -iVar4);\n    if ((var_4h & 0x200) == 0) {\n        return uVar5;\n    }\n    if (uVar5 == 4) {\ncode_r0x00451a51:\n        uVar5 = (arg_ch <= var_1ch) - 1 & 4;\ncode_r0x00451a60:\n        uVar5 = uVar5 + 0xb;\n    }\n    else {\n        if (uVar5 == 0xd) {\n            uVar5 = (var_24h <= arg_ch) - 1 & 2;\n        }\n        else {\n            if (uVar5 == 0xe) {\n                uVar5 = arg_ch < var_24h;\n                goto code_r0x00451a60;\n            }\n            if (uVar5 != 0x10) {\n                if (uVar5 != 0x11) {\n                    return uVar5;\n                }\n                goto code_r0x00451a51;\n            }\n            uVar5 = (arg_ch <= var_1ch) - 1 & 5;\n        }\n        uVar5 = uVar5 + 10;\n    }\n    return uVar5;\n}\n",
        "token_count": 1673
    },
    "00451c52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00451c52(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((*0x485994 == 0) && (param_2 == 3)) {\n        *(param_1 + 0xbc) = 1;\n        *(param_1 + 0xc0) = 1;\n        uVar1 = (*_sym.imp.USER32.dll_SetCapture)(*(param_1 + 0x1c));\n        fcn.00436a76(uVar1);\n        fcn.00451d7e();\n    }\n    else {\n        fcn.004369dd();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004524fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004524fd(int32_t lpRect, uint32_t dwStyle)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (*0x485994 == 0) {\n        if ((dwStyle & 0x40600) == 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(6);\n            uVar3 = 5;\n        }\n        else {\n            uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x21);\n            uVar3 = 0x20;\n        }\n        uVar2 = (*pcVar1)(uVar3, uVar2);\n        (*_sym.imp.USER32.dll_InflateRect)(lpRect, uVar2);\n        if ((dwStyle & 0xc00000) != 0) {\n            fcn.0045154a();\n            *(lpRect + 4) = *(lpRect + 4) - *0x485bd4;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_AdjustWindowRectEx)(lpRect, dwStyle, 0, 0x188);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00452738": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452738(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x48594c;\n    uVar3 = *0x485948;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.00442cb7(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 352
    },
    "004527c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004527c6(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x48594c;\n    uVar3 = *0x485948;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.00442c4e(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 354
    },
    "0045288a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0045288a(void)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint lpvBits;\n    \n    fcn.00457a83(8);\n    if (*0x485be4 == 0) {\n        iVar3 = 0;\n        puVar2 = &lpvBits;\n        do {\n            uVar1 = iVar3;\n            iVar3 = iVar3 + 1;\n            *puVar2 = 0x5555 << (uVar1 & 1);\n            puVar2 = puVar2 + 2;\n        } while (iVar3 < 8);\n        iVar3 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, &lpvBits);\n        if (iVar3 != 0) {\n            *0x485be4 = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar3);\n        }\n    }\n    fcn.00457af3(8);\n    fcn.00442fb3(*0x485be4);\n    return;\n}\n",
        "token_count": 258
    },
    "00452f32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00452f32(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CSharedFile.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.0044a2c4();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044a0dd();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 200
    },
    "004557e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004557e9(int32_t param_1, uint param_2)\n\n{\n    if ((*(*(param_1 + 0x14) + -8) == 0) ||\n       ((*(param_1 + 0x10) == 3 &&\n        (((*(*(param_1 + 0x18) + -8) == 0 || (*(*(param_1 + 0x1c) + -8) == 0)) || (*(*(param_1 + 0x20) + -8) == 0))))))\n    {\n        fcn.0043b6b7(param_2);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00455fea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00455fea(uint lpName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *arg_8h;\n    uint16_t *puVar4;\n    uint32_t *puVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00456c34();\n    uVar1 = *(iVar2 + 0xc);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, lpName, 0xf1);\n    if (((iVar2 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2),  iVar2 == 0)) ||\n       (iVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2),  iVar2 == 0)) {\n        iVar3 = 0;\n    }\n    else {\n        arg_8h = fcn.0043a6f7(*(iVar2 + 6) << 2);\n        var_4h = 0;\n        if (*(iVar2 + 6) != 0) {\n            puVar4 = iVar2 + 8;\n            puVar5 = arg_8h;\n            do {\n                var_4h = var_4h + 1;\n                *puVar5 = *puVar4;\n                puVar5 = puVar5 + 1;\n                puVar4 = puVar4 + 1;\n            } while (var_4h < *(iVar2 + 6));\n        }\n        iVar3 = fcn.004561ae(arg_8h, *(iVar2 + 6));\n        fcn.0043a720(arg_8h);\n        if (iVar3 != 0) {\n            fcn.00455f00(*(iVar2 + 2) + 7, *(iVar2 + 4) + 7, *(iVar2 + 2), *(iVar2 + 4));\n            iVar3 = fcn.004560ae(lpName);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 467
    },
    "0045681b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0045681b(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    unkuint3 Var2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = fcn.004370c4(param_2);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *(param_2 + 0x23) = *(param_2 + 0x23) | 4;\n    if (*0x48598c == 0) {\n        return 1;\n    }\n    uVar1 = *(param_1 + 100);\n    if ((uVar1 & 0x80) != 0) {\n        return 1;\n    }\n    uVar4 = uVar1 & 0xff00;\n    if (uVar4 != 0x1400) {\n        if (uVar4 == 0x2800) {\n            Var2 = 2;\n            goto code_r0x0045687c;\n        }\n        if (uVar4 != 0x4100) {\n            if (uVar4 != 0x8200) {\n                return 1;\n            }\n            Var2 = 8;\n            goto code_r0x0045687c;\n        }\n    }\n    Var2 = 10;\ncode_r0x0045687c:\n    *(param_1 + 100) = uVar1 & 0xff | (uVar1 >> 8 & 0xfffff0 | Var2) << 8 | 0x80;\n    return 1;\n}\n",
        "token_count": 358
    },
    "00456b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00456b50(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_THREAD_STATE.0;\n    puVar1 = extraout_ECX[5];\n    *(unaff_EBP + -4) = 0;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[6] != NULL) {\n        (***extraout_ECX[6])(1);\n    }\n    if (extraout_ECX[7] != NULL) {\n        (***extraout_ECX[7])(1);\n    }\n    if (extraout_ECX[8] != NULL) {\n        (***extraout_ECX[8])(1);\n    }\n    if (extraout_ECX[9] != NULL) {\n        (***extraout_ECX[9])(1);\n    }\n    pcVar3 = extraout_ECX[0xe];\n    if (pcVar3 != NULL) {\n        while (*(pcVar3 + 0xc) != 0) {\n            uVar2 = fcn.00432cd8();\n            fcn.0043a720(uVar2);\n            pcVar3 = extraout_ECX[0xe];\n        }\n    }\n    if (extraout_ECX[0xc] != NULL) {\n        (**(*extraout_ECX[0xc] + 4))(1);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    if (extraout_ECX[0xe] != NULL) {\n        (**(*extraout_ECX[0xe] + 4))(1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 512
    },
    "00456ffa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00456ffa(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_LocalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "00457216": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457216(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    code **ppcVar3;\n    uint var_4h;\n    \n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = fcn.00456fdc(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        ppcVar3 = ppcVar1 + 2;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n        fcn.00456f83(ppcVar1);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    }\n    else {\n        ppcVar3 = ppcVar1 + 2;\n        if ((arg_8h < *ppcVar3) || (arg_ch == 0)) goto code_r0x004572ed;\n    }\n    if (ppcVar1[3] == NULL) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, in_ECX[3] << 2);\n    }\n    else {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], in_ECX[3] << 2, 2);\n    }\n    ppcVar1[3] = pcVar2;\n    if (pcVar2 == NULL) {\n        fcn.0042f1c0();\n    }\n    fcn.004108b0(ppcVar1[3] + *ppcVar3 * 4, 0, (*ppcVar3 * 0x3fffffff + in_ECX[3]) * 4);\n    *ppcVar3 = in_ECX[3];\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, ppcVar1);\ncode_r0x004572ed:\n    *(ppcVar1[3] + arg_8h * 4) = arg_ch;\n    return;\n}\n",
        "token_count": 535
    },
    "0045731c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045731c(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x1c);\n    iVar2 = 1;\n    if (1 < *(param_1 + 0xc)) {\n        do {\n            puVar1 = *(param_1 + 0x10) + iVar2 * 8;\n            if ((*(*(param_1 + 0x10) + 4 + iVar2 * 8) == 0) && ((*puVar1 & 1) != 0)) {\n                *(puVar1 + 4) = unaff_retaddr;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0xc));\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 225
    },
    "0045735d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045735d(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00456f96(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    if (arg_8h != NULL) {\n        (***arg_8h)(1);\n    }\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 374
    },
    "004573f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004573f6(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if (iVar2 != 0) {\n            fcn.0045735d(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.0045735d(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 219
    },
    "0045744f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00457476)\n\nint32_t __fastcall fcn.0045744f(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *unaff_retaddr;\n    \n    if (*param_1 == 0) {\n        if (*0x4858ec == NULL) {\n            *0x4858ec = fcn.0045700e();\n        }\n        iVar1 = fcn.004570a7();\n        *param_1 = iVar1;\n    }\n    iVar1 = *param_1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**0x4858ec);\n    if ((iVar2 == 0) || (*(iVar2 + 8) <= iVar1)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(*(iVar2 + 0xc) + iVar1 * 4);\n    }\n    if (iVar1 == 0) {\n        iVar1 = (*unaff_retaddr)();\n        fcn.00457216(*param_1, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 255
    },
    "00457805": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00457805(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (*0x48598c != 0) {\n        *0x485930 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        *0x485930 = *0x485930 + 1;\n        *0x485934 = (*pcVar1)(3);\n        *0x485934 = *0x485934 + 1;\n        *0x485998 = 1;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004579f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "get OS version"
        ],
        "decompiled_code": "\nint32_t fcn.004579f0(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x485bcc == 0) {\n        *0x485bcc = 1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if ((uVar1 < 4) && ((uVar1 & 0x80000000) != 0)) {\n            *0x485bc8 = 1;\n        }\n        else {\n            *0x485bc8 = 0;\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x485a18);\n        }\n    }\n    return *0x485bcc;\n}\n",
        "token_count": 148
    },
    "00457a35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00457a35(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n    if ((*0x485bcc != 0) && (*0x485bcc = *0x485bcc + -1,  *0x485bc8 == 0)) {\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x485a18);\n        piVar3 = 0x4859d0;\n        iVar2 = 0x485a30;\n        do {\n            if (*piVar3 != 0) {\n                (*pcVar1)(iVar2);\n                *piVar3 = *piVar3 + -1;\n            }\n            iVar2 = iVar2 + 0x18;\n            piVar3 = piVar3 + 1;\n        } while (iVar2 < 0x485bc8);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00457a83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00457a83(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (*0x485bcc == 0) {\n        fcn.004579f0();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    if (*0x485bc8 == 0) {\n        piVar1 = param_1 * 4 + 0x4859d0;\n        if (*(param_1 * 4 + 0x4859d0) == 0) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x485a18);\n            if (*piVar1 == 0) {\n                (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x485a30);\n                *piVar1 = *piVar1 + 1;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x485a18);\n        }\n        (*pcVar2)(param_1 * 0x18 + 0x485a30);\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00457af3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00457af3(int32_t param_1)\n\n{\n    if (*0x485bc8 == 0) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x485a30);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00457c5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00457c5c(uint lpAppName, uint lpValueName, int32_t nDefault)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        nDefault = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(lpAppName, lpValueName, nDefault, *(in_ECX + 0x90));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.00457c16(lpAppName);\n        if (iVar1 != 0) {\n            lpAppName = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar1, lpValueName, 0, &var_8h, &var_4h, &lpAppName);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return nDefault;\n}\n",
        "token_count": 262
    },
    "004582d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004582d7(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00456c34();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    iVar3 = fcn.00456c34();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x68) = unaff_ESI;\n        *(iVar3 + 0x6c) = unaff_retaddr;\n        *(iVar3 + 0x70) = param_1;\n        *(iVar3 + 0x74) = param_2;\n        fcn.0045833a();\n    }\n    iVar3 = fcn.00456c34();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.0043ab80();\n    }\n    return 1;\n}\n",
        "token_count": 301
    },
    "0045833a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045833a(int32_t param_1)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_30ch;\n    uint lpFilename;\n    uint var_108h;\n    uchar *var_4h;\n    \n    iVar2 = fcn.00456c34();\n    *(iVar2 + 8) = *(param_1 + 0x68);\n    *(iVar2 + 0xc) = *(param_1 + 0x68);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x68), &lpFilename, 0x104);\n    var_4h = fcn.0041221a(&lpFilename, 0x2e);\n    *var_4h = 0;\n    fcn.00458457(&lpFilename, &var_108h, 0x104);\n    if (*(param_1 + 0x88) == 0) {\n        uVar3 = fcn.00411b04(&var_108h);\n        *(param_1 + 0x88) = uVar3;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        iVar4 = fcn.0043c7bb(0xe000, &var_30ch, 0x100);\n        if (iVar4 == 0) {\n            puVar5 = *(param_1 + 0x88);\n        }\n        else {\n            puVar5 = &var_30ch;\n        }\n        uVar3 = fcn.00411b04(puVar5);\n        *(param_1 + 0x78) = uVar3;\n    }\n    puVar1 = var_4h;\n    *(iVar2 + 0x10) = *(param_1 + 0x78);\n    if (*(param_1 + 0x8c) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(var_4h, \".HLP\");\n        uVar3 = fcn.00411b04(&lpFilename);\n        *(param_1 + 0x8c) = uVar3;\n        *puVar1 = 0;\n    }\n    if (*(param_1 + 0x90) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_108h, \".INI\");\n        uVar3 = fcn.00411b04(&var_108h);\n        *(param_1 + 0x90) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 591
    },
    "00458457": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00458457(char *param_1, int32_t param_2, uint param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    pcVar2 = param_1;\n    for (; *param_1 != '\\0'; param_1 = fcn.0041206f(param_1)) {\n        cVar1 = *param_1;\n        if (((cVar1 == '\\\\') || (cVar1 == '/')) || (cVar1 == ':')) {\n            pcVar2 = fcn.0041206f(param_1);\n        }\n    }\n    if (param_2 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar2);\n        iVar3 = iVar3 + 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(param_2, pcVar2, param_3);\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 230
    },
    "0045862c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0045862c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0045fdc9();\n    fcn.00466aa3();\n    fcn.00410694();\n    if (param_1 == 0) {\n        iVar1 = fcn.0043aa46();\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x58) != NULL) {\n                (**(**(iVar1 + 0x58) + 4))(1);\n            }\n            *(iVar1 + 0x58) = 0;\n        }\n        iVar1 = fcn.004569a4();\n        if (*(iVar1 + 0x114) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar1 + 0x114) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00458a8e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00458a8e(uint phkResult, uint lpString, int32_t lpValueName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (lpValueName == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(0x80000000, phkResult, 1, lpString, uVar1);\n        bVar4 = iVar2 == 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(0x80000000, phkResult, &phkResult);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(phkResult, lpValueName, 0, 1, lpString, iVar2 + 1);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if ((iVar3 == 0) && (iVar2 == 0)) {\n                return true;\n            }\n        }\n        bVar4 = false;\n    }\n    return bVar4;\n}\n",
        "token_count": 306
    },
    "0045b280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045b280(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[1] == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(param_1 + 1);\n    if (iVar1 == 0) {\n        (**(*param_1 + 0x10))();\n    }\n    return iVar1;\n}\n",
        "token_count": 106
    },
    "0045b2bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0045b2bd(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x472f00 == *param_2) && (param_2[1] == *0x472f04)) && (param_2[2] == *0x472f08)) &&\n           (param_2[3] == *0x472f0c)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 456
    },
    "0045b36b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045b36b(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(*piVar3 + in_ECX);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 293
    },
    "0045bb9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0045bb9a(int32_t arg_8h, int32_t noname_1, int32_t noname_2, int32_t noname_3, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int16_t *arg_30h, int16_t *arg_34h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint var_8h;\n    uint hMem;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n    if (arg_30h == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_30h);\n        iVar2 = iVar2 + 1;\n    }\n    if ((arg_34h == NULL) || (*arg_34h == 0)) {\n        arg_34h = arg_30h;\n        iVar3 = iVar2;\n    }\n    else {\n        iVar3 = (*pcVar1)(arg_34h);\n        iVar3 = iVar3 + 1;\n    }\n    iVar3 = (iVar3 + iVar2) * 2 + 0x34;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2042, iVar3);\n    if (iVar4 != 0) {\n        piVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n        if (arg_30h == NULL) {\n            piVar5[0xb] = 0;\n        }\n        else {\n            piVar5[0xb] = 0x34;\n            iVar6 = (*pcVar1)(arg_30h);\n            fcn.00410d20(piVar5 + 0xd, arg_30h, iVar6 * 2 + 2);\n        }\n        if (arg_34h == NULL) {\n            piVar5[0xc] = 0;\n        }\n        else {\n            iVar2 = iVar2 * 2 + 0x34;\n            piVar5[0xc] = iVar2;\n            iVar6 = (*pcVar1)(arg_34h);\n            fcn.00410d20(iVar2 + piVar5, arg_34h, iVar6 * 2 + 2);\n        }\n        *piVar5 = iVar3;\n        piVar5[5] = arg_18h;\n        piVar5[1] = arg_8h;\n        piVar5[6] = arg_1ch;\n        piVar5[2] = noname_1;\n        piVar5[7] = arg_20h;\n        piVar5[8] = arg_24h;\n        piVar5[3] = noname_2;\n        piVar5[9] = arg_28h;\n        piVar5[4] = noname_3;\n        piVar5[10] = arg_2ch;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n    }\n    return iVar4;\n}\n",
        "token_count": 737
    },
    "0045bf83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045bf83(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTreatAsClass;\n    iVar2 = (*_sym.imp.ole32.dll_CoTreatAsClass)(arg_ch, arg_10h);\n    if ((iVar2 != 0) && (arg_8h != 0)) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n        var_4h = 0;\n        (*_sym.imp.ole32.dll_StringFromCLSID)(arg_ch, &var_4h);\n        uVar3 = fcn.00457faf(var_4h);\n        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueA)(var_8h, uVar3, 1, arg_8h, uVar4);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(uVar3);\n        iVar2 = (*pcVar1)(arg_ch, arg_10h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_8h);\n    }\n    return iVar2;\n}\n",
        "token_count": 338
    },
    "0045c2a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0045c2a5(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = arg_8h;\n    if (arg_8h != NULL) {\n        iVar2 = (**(*arg_8h + 0x58))(arg_8h, &var_8h);\n        if ((iVar2 != 0) || (var_8h != 1)) {\n            (**(*piVar1 + 4))(piVar1);\n            return piVar1;\n        }\n        arg_8h = NULL;\n        iVar2 = (**(*piVar1 + 0x30))(piVar1, 1, &arg_8h);\n        if (iVar2 == 0) {\n            var_4h = NULL;\n            (**(*arg_8h + 0xc))(arg_8h, 1, &var_4h, 0);\n            fcn.0045b243(&arg_8h);\n            return var_4h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 265
    },
    "0045c30d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl fcn.0045c30d(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    int32_t *piStack48;\n    uint *puStack44;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    uVar4 = 0;\n    if (arg_8h == 0) {\n        uVar4 = 0;\n    }\n    else {\n        puStack44 = 0x45c32c;\n        piStack48 = fcn.0045c2a5(arg_8h);\n        if (piStack48 != NULL) {\n            puStack44 = &fcn.0045c30d::var_ch;\n            var_8h = piStack48;\n            iVar2 = (**(*piStack48 + 0x58))();\n            if ((iVar2 == 0) && (var_ch == 2)) {\n                var_4h = 0;\n                iVar2 = (*_sym.imp.ole32.dll_CreateBindCtx)(0, &fcn.0045c30d::var_4h);\n                if (iVar2 == 0) {\n                    arg_8h = 0;\n                    iVar2 = (**(*var_8h + 0x50))(var_8h, var_4h, 0, &fcn.0045c30d::arg_8h);\n                    uVar1 = arg_8h;\n                    if (arg_8h == 0) {\n                        puVar5 = NULL;\n                    }\n                    else {\n                        piStack48 = arg_8h;\n                        puVar5 = &stack0xffffffd0;\n                        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                        fcn.00412040();\n                        piStack48 = piStack48 & 0xffffff00;\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (0, 0, uVar1, 0xffffffff, &stack0xffffffd0, iVar3 * 2 + 2, 0, 0);\n                    }\n                    if ((iVar2 == 0) && (puVar5 != NULL)) {\n                        piStack48 = puVar5;\n                        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg_8h);\n                    }\n                    piStack48 = &fcn.0045c30d::var_4h;\n                    fcn.0045b243();\n                }\n            }\n            fcn.0045b243(&fcn.0045c30d::var_8h);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 655
    },
    "0045c777": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0045c777(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.COleStreamFile.0;\n    pcVar1 = extraout_ECX[4];\n    *(unaff_EBP + -4) = 1;\n    if ((pcVar1 != NULL) && (extraout_ECX[2] != NULL)) {\n        fcn.0045cd84();\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043bce9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 250
    },
    "0045c7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c7e0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0) {\n        *arg_14h = 0;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(*arg_8h + 0xc))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 127
    },
    "0045cb7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0045cb7b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(0, 1);\n    if ((iVar1 < 0) && (param_1 + 0x10 != 0)) {\n        fcn.0045c809(param_1 + 0x10, iVar1);\n    }\n    return -1 < iVar1;\n}\n",
        "token_count": 106
    },
    "0045cd84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cd84(int32_t *param_1)\n\n{\n    if (param_1[4] != 0) {\n        (**(*param_1 + 0x48))();\n        fcn.0045b243(param_1 + 4);\n    }\n    fcn.0043b4b9();\n    return;\n}\n",
        "token_count": 79
    },
    "0045e4f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0045e4f1(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x5c) = param_2;\n    if (param_2 != 1) {\n        param_2 = ((param_2 != 2) - 1 & 3) - 1;\n    }\n    return param_2;\n}\n",
        "token_count": 92
    },
    "0045e50f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0045e50f(code **param_1, int32_t param_2, code *param_3, uint param_4, uint param_5)\n\n{\n    code *unaff_retaddr;\n    \n    fcn.0045e4d9(param_5);\n    *param_1 = vtable.COleBusyDialog.0;\n    fcn.004108b0(param_1 + 0x18, 0, 0x2c);\n    param_1[0x18] = 0x2c;\n    param_1[0x19] = param_3;\n    if (param_2 != 0) {\n        param_1[0x19] = param_3 | 8;\n    }\n    param_1[0x1c] = fcn.0045e48e;\n    param_1[0x21] = unaff_retaddr;\n    return param_1;\n}\n",
        "token_count": 210
    },
    "0045e58a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045e58a(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    \n    iVar2 = *(param_1 + 0x50);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x1c);\n    }\n    hWnd = param_1;\n    uVar1 = fcn.00445934(iVar2, &hWnd);\n    *(param_1 + 0x68) = uVar1;\n    fcn.00436f29(param_1);\n    iVar2 = sub.oledlg.dll_OleUIBusyA(param_1 + 0x60);\n    fcn.00436f75();\n    fcn.00436af4();\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    uVar1 = 2;\n    if (iVar2 != 2) {\n        if (iVar2 == 0x75) {\n            *(param_1 + 0x8c) = 1;\n        }\n        else {\n            if (iVar2 != 0x76) {\n                if (iVar2 == 0x77) {\n                    *(param_1 + 0x8c) = 3;\n                    return 1;\n                }\n                uVar1 = fcn.0045e4f1(iVar2);\n            }\n            *(param_1 + 0x8c) = uVar1;\n        }\n        return 1;\n    }\n    return 2;\n}\n",
        "token_count": 354
    },
    "0045f6d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0045f6d8(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0045b280();\n    }\n    if (extraout_ECX[0xc] != NULL) {\n        fcn.0043a720(extraout_ECX[9]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043a1a5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 248
    },
    "0045f9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0045f9e0(int32_t *param_1)\n\n{\n    uchar uVar1;\n    \n    if (*(param_1 + 0x10) == '\\0') {\n        uVar1 = (**(*param_1 + 0x60))();\n        *(param_1 + 0x41) = uVar1;\n        *(param_1 + 0x10) = 1;\n    }\n    return *(param_1 + 0x41);\n}\n",
        "token_count": 109
    },
    "0045fe14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0045fe14(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint *unaff_EBX;\n    uint *puVar3;\n    \n    puVar1 = fcn.0045ffe0(param_2, param_3);\n    if (puVar1 == NULL) {\n        if ((*(param_1 + 0x1c) == 0) || (*(param_1 + 0x24) == *(param_1 + 0x20))) {\n            arg_8h = fcn.0043a6f7((*(param_1 + 0x20) + *(param_1 + 0x28)) * 0x24);\n            *(param_1 + 0x20) = *(param_1 + 0x20) + *(param_1 + 0x28);\n            if (*(param_1 + 0x1c) != 0) {\n                fcn.00410d20(arg_8h, *(param_1 + 0x1c), *(param_1 + 0x24) * 0x24);\n                fcn.0043a720(*(param_1 + 0x1c));\n            }\n            *(param_1 + 0x1c) = arg_8h;\n        }\n        iVar2 = *(param_1 + 0x24);\n        *(param_1 + 0x24) = iVar2 + 1;\n        puVar1 = *(param_1 + 0x1c) + iVar2 * 0x24;\n    }\n    else {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(puVar1[1]);\n        (*_sym.imp.ole32.dll_ReleaseStgMedium)(puVar1 + 5);\n    }\n    puVar1[8] = param_3;\n    puVar3 = puVar1;\n    for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *unaff_EBX;\n        unaff_EBX = unaff_EBX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return puVar1;\n}\n",
        "token_count": 513
    },
    "0045ffe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0045ffe0(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    int16_t *var_8h;\n    int32_t var_4h;\n    \n    uVar4 = 0;\n    var_8h = NULL;\n    if (*(in_ECX + 0x24) != 0) {\n        var_4h = 0;\n        do {\n            piVar2 = var_4h + *(in_ECX + 0x1c);\n            if ((((*piVar2 == *arg_8h) && ((*(arg_8h + 8) & *(piVar2 + 8)) != 0)) &&\n                ((*(piVar2 + 10) == 0 || (*(piVar2 + 6) == *(arg_8h + 6))))) &&\n               ((*(piVar2 + 4) == *(arg_8h + 4) && (*(piVar2 + 0x10) == arg_ch)))) {\n                piVar3 = *(arg_8h + 2);\n                piVar1 = *(piVar2 + 2);\n                var_8h = piVar2;\n                if (piVar1 != NULL) {\n                    if ((piVar3 == NULL) || (*piVar1 != *piVar3)) goto code_r0x00460058;\n                    piVar3 = fcn.00411a10(piVar1, piVar3, *piVar1);\n                }\n                if (piVar3 == NULL) {\n                    return piVar2;\n                }\n            }\ncode_r0x00460058:\n            var_4h = var_4h + 0x24;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(in_ECX + 0x24));\n    }\n    return var_8h;\n}\n",
        "token_count": 455
    },
    "00461e26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: pszExeFileName\n// WARNING: Variable defined which should be unmapped: lplpsz\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.00461e26(uint arg_8h, uint rclsid, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lplpsz;\n    uint var_14h;\n    uint pszExeFileName;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    (*_sym.imp.ole32.dll_StringFromCLSID)(*(unaff_EBP + 0xc), unaff_EBP + -0x18);\n    iVar2 = fcn.00457faf(*(unaff_EBP + -0x18));\n    if (iVar2 == 0) goto code_r0x00462037;\n    fcn.00461db4(0, iVar2);\n    fcn.00461db4(1, *(unaff_EBP + 0x10));\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n    *(unaff_EBP + -0x10) = *0x480454;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.00456c34();\n    fcn.0043c6dd(*(iVar2 + 8), unaff_EBP + -0x10);\n    fcn.00461db4(2, *(unaff_EBP + -0x10));\n    fcn.00461db4(3, *(unaff_EBP + 0x14));\n    fcn.00461db4(4, *(unaff_EBP + 0x18));\n    iVar2 = fcn.00456c34();\n    fcn.00461db4(5, *(iVar2 + 0x10));\n    *(unaff_EBP + -0x14) = *0x480454;\n    iVar2 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -4) = 1;\n    if (iVar2 != 0) {\n        iVar3 = fcn.00456c34();\n        iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconA)(*(iVar3 + 8), *(unaff_EBP + -0x10), iVar2);\n        if (iVar3 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            (*_sym.imp.USER32.dll_DestroyIcon)(iVar3);\n        }\n    }\n    fcn.0042deaf(unaff_EBP + -0x14, 0x46dd70, iVar2);\n    fcn.00461db4(6, *(unaff_EBP + -0x14));\n    fcn.00461db4(7, *(unaff_EBP + 0x20));\n    *(unaff_EBP + 0xc) = *0x480454;\n    pcVar1 = *(unaff_EBP + 0x24);\n    *(unaff_EBP + -4) = 2;\n    if ((pcVar1 == NULL) || (*pcVar1 == '\\0')) {\n        fcn.0043b6b7(*(unaff_EBP + 0x20));\n        iVar2 = fcn.0043ba4f(0x28);\n        if (iVar2 != -1) {\n            uVar4 = fcn.0042d949(unaff_EBP + 0x20, iVar2 + 1);\n            *(unaff_EBP + -4) = 3;\n            fcn.0043b667(uVar4);\n            *(unaff_EBP + -4) = 2;\n            fcn.0043b52e();\n            iVar2 = fcn.0043ba4f(0x2e);\n            if (iVar2 != -1) {\n                uVar4 = fcn.0042d949(unaff_EBP + 0x20, iVar2);\n                *(unaff_EBP + -4) = 4;\n                fcn.0043b667(uVar4);\n                *(unaff_EBP + -4) = 2;\n                fcn.0043b52e();\n                iVar2 = fcn.0043ba4f(0x29);\n                if (iVar2 != -1) {\n                    uVar4 = fcn.0042da7e(unaff_EBP + 0x20, iVar2);\n                    *(unaff_EBP + -4) = 5;\n                    fcn.0043b667(uVar4);\n                    *(unaff_EBP + -4) = 2;\n                    fcn.0043b52e();\n                    goto code_r0x00462004;\n                }\n            }\n        }\n        fcn.0043b4b9();\n    }\n    else {\n        fcn.0043b6b7(pcVar1);\n    }\ncode_r0x00462004:\n    fcn.00461db4(8, *(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 1;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 0;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043b52e();\n    iVar2 = 1;\ncode_r0x00462037:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 1312
    },
    "0046206f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.0046206f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    arg_8h_00 = *(unaff_EBP + 0x1c);\n    iVar2 = *(unaff_EBP + 0x18);\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = *(iVar2 * 8 + 0x470d10);\n    }\n    iVar1 = *(unaff_EBP + 0x20);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00456c34();\n        if (*(iVar1 + 0x14) == '\\0') {\n            iVar1 = *(iVar2 * 8 + 0x470d14);\n        }\n        else {\n            iVar1 = *(iVar2 * 8 + 0x470d3c);\n        }\n    }\n    fcn.00461d60(10);\n    iVar3 = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.00461e26(unaff_EBP + -0x14, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                         *(unaff_EBP + 0x14), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), *(unaff_EBP + 0x2c));\n    if (((iVar2 != 0) && (iVar3 = fcn.00462293(arg_8h_00, *(unaff_EBP + -0x14), 10, 0, 0x80000000),  iVar3 != 0)) &&\n       (iVar1 != 0)) {\n        iVar3 = fcn.00462293(iVar1, *(unaff_EBP + -0x14), 10, 1, 0x80000000);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00461d8d();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 638
    },
    "00462293": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpData\n\nuint __cdecl fcn.00462293(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint hKey)\n\n{\n    char *arg_ch_00;\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpData;\n    uint lpcbData;\n    uint var_20h;\n    uint lpSubKey;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    uVar1 = *0x480454;\n    *(unaff_EBP + -0x10) = *0x480454;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = uVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x18) == -0x80000000) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", unaff_EBP + -0x14);\n    }\n    *(unaff_EBP + -0x20) = 1;\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    arg_ch_00 = **(unaff_EBP + 8);\n    do {\n        if (arg_ch_00 == NULL) {\ncode_r0x00462396:\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x14));\n            }\n            *(unaff_EBP + -4) = 0;\n            fcn.0043b52e();\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0043b52e();\n            uVar1 = *(unaff_EBP + -0x20);\n            *in_FS_OFFSET = *(unaff_EBP + -0xc);\n            return uVar1;\n        }\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 4;\n        if ((*(unaff_EBP + 0x18) != -0x80000000) || (*arg_ch_00 != '\\0')) {\n            iVar3 = (*pcVar2)(arg_ch_00);\n            *(unaff_EBP + -0x1c) = arg_ch_00 + iVar3 + 1;\n            fcn.0044a3ec(unaff_EBP + -0x10, arg_ch_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n            fcn.0044a3ec(unaff_EBP + -0x18, *(unaff_EBP + -0x1c), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n            iVar3 = *(unaff_EBP + -0x10);\n            if ((*(unaff_EBP + 0x18) != -0x80000000) || (*(iVar3 + -8) != 0)) {\n                if (*(unaff_EBP + 0x14) == 0) {\n                    *(unaff_EBP + -0x24) = 0x100;\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueA)\n                                      (*(unaff_EBP + 0x18), iVar3, unaff_EBP + -0x124, unaff_EBP + -0x24);\n                    if (iVar3 == 0) goto code_r0x00462383;\n                    iVar3 = *(unaff_EBP + -0x10);\n                }\n                uVar1 = *(unaff_EBP + -0x18);\n                *(unaff_EBP + -0x1c) = iVar3;\n                uVar4 = (*pcVar2)(uVar1);\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)\n                                  (*(unaff_EBP + 0x18), *(unaff_EBP + -0x1c), 1, uVar1, uVar4);\n                if (iVar3 != 0) {\n                    *(unaff_EBP + -0x20) = 0;\n                    goto code_r0x00462396;\n                }\n            }\n        }\ncode_r0x00462383:\n        arg_ch_00 = **(unaff_EBP + 8);\n    } while( true );\n}\n",
        "token_count": 1061
    },
    "00463711": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00463711(int32_t arg_8h, uint16_t **arg_ch, uint *arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    uint *puVar6;\n    ulong *puVar7;\n    uint pvargDest;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puVar7 = &pvargDest;\n    var_4h = 0;\n    fcn.0040d697(puVar7);\n    puVar6 = *arg_ch;\n    uVar1 = *(arg_8h + 0xc);\n    if ((uVar1 != 0xc) && (*puVar6 != uVar1)) {\n        var_4h = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, puVar6, 0, arg_ch & 0xffff0000 | uVar1);\n        if (var_4h < 0) {\n            *arg_10h = 0;\n            return var_4h;\n        }\n        puVar6 = &pvargDest;\n    }\n    uVar3 = *(arg_8h + 0xc) - 2;\n    puVar5 = *(arg_8h + 0x18) + var_8h;\n    if (0xe < uVar3) {\ncode_r0x004637e4:\n        var_4h = -0x7ffdfff8;\n        *arg_10h = 0;\n        goto code_r0x004637f1;\n    }\n    // switch table (15 cases) at 0x463817\n    switch(*(uVar3 * 4 + 0x463817)) {\n    case 0x46377c:\n        *puVar5 = *(puVar6 + 2);\n        break;\n    case 0x463783:\n        *puVar5 = *(puVar6 + 2);\n        break;\n    case 0x46378c:\n        *puVar5 = *(puVar6 + 2);\n        break;\n    case 0x463793:\n        *puVar5 = puVar6[2];\n        *(puVar5 + 4) = puVar6[3];\n        break;\n    case 0x4637a0:\n        fcn.00457f01(puVar5, puVar6[2]);\n        break;\n    case 0x4637ab:\n        uVar3 = *(puVar6 + 2) != 0;\ncode_r0x004637e0:\n        *puVar5 = uVar3;\n        break;\n    case 0x4637b6:\n        iVar4 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(puVar5, puVar6);\n        if (iVar4 != 0) {\n            *arg_10h = 0;\n        }\n        break;\n    case 0x4637ca:\n        piVar2 = puVar6[2];\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 4))(piVar2);\n        }\n        puVar7 = puVar5;\n        fcn.0045b243();\n    case 0x4637dd:\n        uVar3 = puVar6[2];\n        goto code_r0x004637e0;\n    case 0x4637e4:\n        goto code_r0x004637e4;\n    }\ncode_r0x004637f1:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest, puVar7);\n    if ((-1 < var_4h) && (*(arg_8h + 0x14) != NULL)) {\n        (**(arg_8h + 0x14))();\n    }\n    return var_4h;\n}\n",
        "token_count": 869
    },
    "00463af9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00463af9(uint32_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint32_t in_ECX;\n    int16_t *piVar9;\n    int16_t *piVar10;\n    ulong *puVar11;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = in_ECX;\n    puVar11 = arg_8h + 1;\n    if ((arg_14h == 6) || (arg_14h == 0xc)) {\n        *puVar11 = arg_10h;\n        puVar11 = arg_8h + 2;\n    }\n    bVar3 = false;\n    iVar2 = *arg_18h;\n    arg_14h = arg_18h[2];\n    var_4h = arg_18h[3];\n    arg_10h = arg_ch;\n    do {\n        if (*arg_10h == 0) {\ncode_r0x00463ccf:\n            if (arg_14h < 1) {\n                if (*arg_10h == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    *arg_1ch = arg_18h[2];\n                    iVar4 = -0x7ffdfff1;\n                }\n            }\n            else {\n                iVar4 = -0x7ffdfff2;\ncode_r0x00463cda:\n                *arg_1ch = arg_14h;\n            }\n            return iVar4;\n        }\n        arg_14h = arg_14h + -1;\n        uVar1 = *arg_10h;\n        arg_8h = in_ECX & 0xffff0000 | uVar1;\n        if ((uVar1 != 0xff) && ((uVar1 & 0x40) != 0)) {\n            arg_8h = CONCAT11(0x40, uVar1 & 0xbf);\n        }\n        iVar8 = arg_8h;\n        if (arg_14h < var_4h) {\n            if (iVar8 == 0xff) {\n                arg_14h = arg_18h[3];\n                var_4h = 0;\n                bVar3 = true;\n                goto code_r0x00463cc4;\n            }\n            if ((!bVar3) && (iVar8 == 0xc)) {\n                *0x4855e0 = 10;\n                *0x4855e8 = 0x80020004;\n                piVar9 = 0x4855e0;\n                goto code_r0x00463c1b;\n            }\n            goto code_r0x00463ccf;\n        }\n        if (iVar8 == 0xff) goto code_r0x00463ccf;\n        piVar10 = iVar2 + arg_14h * 0x10;\n        piVar9 = piVar10;\n        if ((iVar8 != 0xc) && (iVar8 != *piVar10)) {\n            arg_ch = 0x8;\n            piVar9 = arg_20h + arg_14h * 0x10;\n            if (iVar8 != 0xe) {\n                arg_ch = arg_8h;\n            }\n            uVar7 = 4;\n            if ((*piVar10 != arg_ch) &&\n               (iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(piVar9, piVar10, 0, arg_ch),  uVar7 = arg_ch, \n               iVar4 < 0)) goto code_r0x00463cda;\n            if (iVar8 == 0xe) {\n                if (*piVar10 == arg_ch) {\n                    uVar6 = fcn.00457f46(uVar7, *(piVar10 + 4));\n                    *(piVar9 + 4) = uVar6;\n                    *piVar9 = 8;\n                }\n                else {\n                    uVar6 = *(piVar9 + 4);\n                    uVar5 = fcn.00457f46(uVar6);\n                    *(piVar9 + 4) = uVar5;\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar6);\n                }\n                arg_8h = 0x8;\n            }\n        }\ncode_r0x00463c1b:\n        uVar7 = arg_8h & 0xffff;\n        if (0x11 < uVar7) {\n    // switch table (17 cases) at 0x463d34\n            switch(uVar7) {\n            case 0x4002:\n            case 0x4003:\n            case 0x4004:\n            case 0x4005:\n            case 0x4006:\n            case 0x4007:\n            case 0x4008:\n            case 0x4009:\n            case 0x400a:\n            case 0x400b:\n            case 0x400c:\n            case 0x400d:\n            case 0x4012:\ncode_r0x00463cbd:\n                uVar7 = *(piVar9 + 4);\n                goto code_r0x00463cc0;\n            }\n            goto code_r0x00463cc4;\n        }\n        if (uVar7 == 0x11) {\n            uVar7 = *(piVar9 + 4);\n            goto code_r0x00463cc0;\n        }\n    // switch table (12 cases) at 0x463d04\n        switch(uVar7) {\n        case 2:\n            uVar7 = piVar9[4];\n            break;\n        case 3:\n        case 4:\n        case 8:\n        case 9:\n        case 10:\n        case 0xd:\n            goto code_r0x00463cbd;\n        case 5:\n        case 7:\n            *puVar11 = *(piVar9 + 4);\n            goto code_r0x00463c92;\n        case 6:\n            *puVar11 = *(piVar9 + 4);\n            *(puVar11 + 4) = *(piVar9 + 6);\ncode_r0x00463c92:\n            puVar11 = puVar11 + 1;\n            goto code_r0x00463cc4;\n        case 0xb:\n            uVar7 = piVar9[4] != 0;\n            break;\n        case 0xc:\n            *puVar11 = piVar9;\n            goto code_r0x00463cc2;\n        default:\n            goto code_r0x00463cc4;\n        }\ncode_r0x00463cc0:\n        *puVar11 = uVar7;\ncode_r0x00463cc2:\n        puVar11 = puVar11 + 4;\ncode_r0x00463cc4:\n        arg_10h = arg_10h + 1;\n        in_ECX = arg_8h;\n    } while( true );\n}\n",
        "token_count": 1636
    },
    "004648e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.004648e4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0043c956();\n    pcVar5 = *0x480454;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[3] = pcVar5;\n    extraout_ECX[5] = *0x480454;\n    extraout_ECX[6] = *0x480454;\n    iVar2 = *(unaff_EBP + 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 3;\n    iVar4 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.COleDispatchException.0;\n    extraout_ECX[4] = -(iVar2 != 0) & iVar2 + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar4 != 0) {\n        fcn.0043b6b7(*(unaff_EBP + 8));\n    }\n    uVar3 = *(unaff_EBP + -0xc);\n    extraout_ECX[7] = (-(iVar1 != 0) & 0x7fff0001) + 0x8000ffff;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 452
    },
    "00464b69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464b69(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoCreateInstance;\n    var_4h = NULL;\n    in_ECX[1] = 1;\n    var_8h = (*pcVar1)(arg_8h, 0, 0x17, 0x472f00, &var_4h);\n    if (var_8h == -0x7ff8ffa9) {\n        var_8h = (*pcVar1)(arg_8h, 0, 7, 0x472f00, &var_4h);\n    }\n    if ((-1 < var_8h) && (var_8h = (*_sym.imp.ole32.dll_OleRun)(var_4h),  -1 < var_8h)) {\n        iVar2 = fcn.0045b21f(var_4h, 0x471f90);\n        *in_ECX = iVar2;\n        if (iVar2 != 0) {\n            (**(*var_4h + 8))(var_4h);\n            return 1;\n        }\n    }\n    fcn.0045b243(&var_4h);\n    if (arg_ch != 0) {\n        *(arg_ch + 8) = var_8h;\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "00464c5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464c5b(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00464c7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_68h\n\nvoid __cdecl fcn.00464c7b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    code *pcVar10;\n    int16_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t *puVar14;\n    uint uVar15;\n    int32_t **extraout_ECX;\n    int32_t **ppiVar16;\n    int32_t iVar17;\n    int32_t unaff_EBP;\n    ulong *puVar18;\n    char *pcVar19;\n    uint *in_FS_OFFSET;\n    uint noname_1;\n    uint noname_0;\n    uint lpString2;\n    uint noname_3;\n    uint var_78h;\n    char *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint pvargDest;\n    uint pbstr;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint cchWideChar;\n    uint var_1ch;\n    uint lpMultiByteStr;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x464c85;\n    fcn.00410d00();\n    piVar9 = *extraout_ECX;\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    if (piVar9 != NULL) {\n        var_6ch = 0x10;\n        fcn.004108b0(unaff_EBP + -0x4c, 0);\n        pcVar19 = *(unaff_EBP + 0x18);\n        if (pcVar19 == NULL) {\n            iVar12 = *(unaff_EBP + -0x44);\n        }\n        else {\n            var_6ch = pcVar19;\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            *(unaff_EBP + -0x44) = iVar12;\n        }\n        *(unaff_EBP + -0x1c) = 0xfffffffd;\n        if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n            *(unaff_EBP + -0x40) = 1;\n            *(unaff_EBP + -0x48) = unaff_EBP + -0x1c;\n        }\n        ppiVar16 = extraout_ECX;\n        if (iVar12 != 0) {\n            var_6ch = iVar12 << 4;\n            iVar12 = fcn.0043a6f7();\n            *(unaff_EBP + -0x4c) = iVar12;\n            fcn.004108b0(iVar12, 0, *(unaff_EBP + -0x44) << 4);\n            cVar2 = *pcVar19;\n            *(unaff_EBP + -0x14) = pcVar19;\n            iVar12 = *(unaff_EBP + -0x44) * 0x10 + -0x10 + iVar12;\n            *(unaff_EBP + -0x10) = iVar12;\n            if (cVar2 != '\\0') {\n                puVar18 = iVar12 + 8;\n                *(unaff_EBP + -0x18) = puVar18;\n                iVar12 = *(unaff_EBP + 0x1c) + -4;\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -8;\n                do {\n                    puVar5 = *(unaff_EBP + -0x10);\n                    uVar3 = **(unaff_EBP + -0x14);\n                    *puVar5 = uVar3;\n                    if ((uVar3 & 0x40) != 0) {\n                        *puVar5 = CONCAT11(0x40, uVar3 & 0xbf);\n                    }\n                    uVar4 = *puVar5;\n                    if (0x4002 < uVar4) {\n    // switch table (15 cases) at 0x465126\n                        switch(uVar4) {\n                        case 0x4003:\n                        case 0x4004:\n                        case 0x4005:\n                        case 0x4006:\n                        case 0x4007:\n                        case 0x4008:\n                        case 0x4009:\n                        case 0x400a:\n                        case 0x400c:\n                        case 0x400d:\n                        case 0x4011:\n                            goto code_r0x00464ebb;\n                        case 0x400b:\n                            puVar14 = *(iVar12 + 4);\n                            *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                            *puVar14 = -(*puVar14 != 0) & 0xffff;\n                            break;\n                        default:\n                            goto code_r0x00464ec5;\n                        }\ncode_r0x00464ec3:\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = puVar14;\n                        goto code_r0x00464ec5;\n                    }\n                    if (uVar4 == 0x4002) {\ncode_r0x00464ebb:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar14 = *(iVar12 + 4);\n                        goto code_r0x00464ec3;\n                    }\n    // switch table (16 cases) at 0x4650e6\n                    switch(uVar4) {\n                    case 2:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar11 = *(iVar12 + 4);\n                        goto code_r0x00464d8b;\n                    case 3:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                        goto code_r0x00464ebb;\n                    case 4:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        iVar12 = iVar12 + 8;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 5:\n                    case 7:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        iVar12 = iVar12 + 8;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 6:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar8 = *(iVar12 + 4);\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = *puVar8;\n                        *(puVar18 + 4) = puVar8[1];\n                        break;\n                    case 8:\n                        var_6ch = *(iVar12 + 4);\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = iVar12 + 4;\n                        *(unaff_EBP + -0x18) = var_6ch;\n                        iVar13 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                        iVar17 = *(unaff_EBP + -0x18);\n                        *puVar18 = iVar13;\n                        if ((iVar17 != 0) && (iVar13 == 0)) {\n                            var_6ch = 0x464dfb;\n                            fcn.0042f1c0();\n                        }\n                        break;\n                    case 0xb:\n                        iVar17 = *(iVar12 + 4);\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar11 = -(iVar17 != 0);\ncode_r0x00464d8b:\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = iVar11;\n                        break;\n                    case 0xc:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar8 = *(iVar12 + 4);\n                        puVar6 = *(unaff_EBP + -0x10);\n                        iVar12 = iVar12 + 4;\n                        *puVar6 = *puVar8;\n                        puVar6[1] = puVar8[1];\n                        puVar6[2] = puVar8[2];\n                        puVar6[3] = puVar8[3];\n                        puVar18 = *(unaff_EBP + -0x18);\n                        break;\n                    case 0xe:\n                        var_6ch = *(iVar12 + 4);\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = iVar12 + 4;\n                        *(unaff_EBP + -0x18) = var_6ch;\n                        if (var_6ch != NULL) {\n                            var_6ch = *(unaff_EBP + -0x18);\n                            iVar17 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                            *(unaff_EBP + -0x20) = iVar17 + 1;\n                            fcn.00412040();\n                            *(unaff_EBP + -0x24) = &fcn.00464c7b::var_6ch;\n                            var_6ch = var_6ch & 0xffff0000;\n                            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                      (0, 0, *(unaff_EBP + -0x18), 0xffffffff, &fcn.00464c7b::var_6ch, \n                                       *(unaff_EBP + -0x20));\n                            var_6ch = *(unaff_EBP + -0x24);\n                        }\n                        iVar13 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                        iVar17 = *(unaff_EBP + -0x18);\n                        *puVar18 = iVar13;\n                        if ((iVar17 != 0) && (iVar13 == 0)) {\n                            var_6ch = 0x464e5e;\n                            fcn.0042f1c0();\n                        }\n                        **(unaff_EBP + -0x10) = 8;\n                        break;\n                    case 0x11:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar1 = iVar12 + 4;\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = *puVar1;\n                    }\ncode_r0x00464ec5:\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x10;\n                    puVar18 = puVar18 + -2;\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                    *(unaff_EBP + -0x18) = puVar18;\n                } while (**(unaff_EBP + -0x14) != '\\0');\n                ppiVar16 = *(unaff_EBP + -0x28);\n                pcVar19 = *(unaff_EBP + 0x18);\n            }\n        }\n        var_6ch = unaff_EBP + -0x3c;\n        fcn.0040d697();\n        fcn.004108b0(unaff_EBP + -0x6c, 0, 0x20);\n        piVar9 = *ppiVar16;\n        *(unaff_EBP + -0x2c) = 0xffffffff;\n        iVar12 = unaff_EBP + -0x4c;\n        noname_3 = *(unaff_EBP + 0xc);\n        lpString2 = 0;\n        noname_0 = 0x471fa0;\n        noname_1 = *(unaff_EBP + 8);\n        uVar15 = (**(*piVar9 + 0x18))(piVar9);\n        *(unaff_EBP + 0x18) = uVar15;\n        if (*(unaff_EBP + -0x44) != 0) {\n            iVar17 = *(unaff_EBP + -0x44) * 0x10 + -0x10 + *(unaff_EBP + -0x4c);\n            cVar2 = *pcVar19;\n            while (cVar2 != '\\0') {\n                if ((*pcVar19 == '\\b') || (*pcVar19 == '\\x0e')) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar17);\n                }\n                iVar17 = iVar17 + -0x10;\n                pcVar19 = pcVar19 + 1;\n                cVar2 = *pcVar19;\n            }\n        }\n        fcn.0043a720(*(unaff_EBP + -0x4c));\n        if (*(unaff_EBP + 0x18) < 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x3c);\n            if (*(unaff_EBP + 0x18) != -0x7ffdfff7) {\n                noname_0 = *(unaff_EBP + 0x18);\n                fcn.0045b4d9(noname_0, noname_0, lpString2, noname_3, iVar12);\n            }\n            if (*(unaff_EBP + -0x54) != 0) {\n                (**(unaff_EBP + -0x54))(unaff_EBP + -0x6c);\n            }\n            iVar12 = fcn.0043a6f7(0x20);\n            *(unaff_EBP + 0x14) = iVar12;\n            *(unaff_EBP + -4) = 0;\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                noname_0 = 0;\n                iVar12 = fcn.004648e4(0, 0, *(unaff_EBP + -0x6c));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            pcVar10 = _sym.imp.OLEAUT32.dll_SysStringLen;\n            if (*(unaff_EBP + -0x68) != 0) {\n                fcn.0043b6de(*(unaff_EBP + -0x68));\n                (*pcVar10)(*(unaff_EBP + -0x68));\n            }\n            if (*(unaff_EBP + -100) != 0) {\n                fcn.0043b6de(*(unaff_EBP + -100));\n                (*pcVar10)(*(unaff_EBP + -100));\n            }\n            if (*(unaff_EBP + -0x60) != 0) {\n                fcn.0043b6de(*(unaff_EBP + -0x60));\n                (*pcVar10)(*(unaff_EBP + -0x60));\n            }\n            noname_1 = 0x478fe0;\n            *(iVar12 + 0x10) = *(unaff_EBP + -0x5c);\n            *(iVar12 + 0x1c) = *(unaff_EBP + -0x50);\n            *(unaff_EBP + 0x14) = iVar12;\n            fcn.004119cb(unaff_EBP + 0x14, 0x478fe0);\n        }\n        uVar7 = *(unaff_EBP + 0x10);\n        if (uVar7 != 0) {\n            if ((uVar7 != 0xc) &&\n               (iVar12 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)\n                                   (unaff_EBP + -0x3c, unaff_EBP + -0x3c, 0, uVar7),  iVar12 < 0)) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x3c);\n                fcn.0045b4d9(iVar12, noname_1, noname_0, lpString2, noname_3);\n            }\n    // switch table (16 cases) at 0x465162\n            switch(uVar7 & 0xffff) {\n            case 2:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34);\n                break;\n            case 3:\n            case 4:\n            case 9:\n            case 10:\n            case 0xd:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34);\n                break;\n            case 5:\n            case 6:\n            case 7:\n                puVar8 = *(unaff_EBP + 0x14);\n                *puVar8 = *(unaff_EBP + -0x34);\n                puVar8[1] = *(unaff_EBP + -0x30);\n                break;\n            case 8:\n                fcn.00457f01(*(unaff_EBP + 0x14), *(unaff_EBP + -0x34));\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x34));\n                break;\n            case 0xb:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34) != 0;\n                break;\n            case 0xc:\n                puVar8 = *(unaff_EBP + 0x14);\n                *puVar8 = *(unaff_EBP + -0x3c);\n                puVar8[1] = *(unaff_EBP + -0x38);\n                puVar8[2] = *(unaff_EBP + -0x34);\n                puVar8[3] = *(unaff_EBP + -0x30);\n                break;\n            case 0x11:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34);\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 4340
    },
    "00466a11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466a11(int32_t param_1)\n\n{\n    if (*(param_1 + 0x1c) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(param_1 + 0x1c) = 0;\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00466a82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466a82(int32_t param_1)\n\n{\n    if (*(param_1 + 0x42) != '\\0') {\n        if (*(param_1 + 0x20) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)(*(param_1 + 0x20));\n            *(param_1 + 0x20) = 0;\n        }\n        *(param_1 + 0x42) = 0;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00466ace": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00466ace(void)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDocManager.0;\n    puVar1 = extraout_ECX[2];\n    *(unaff_EBP + -4) = 1;\n    while (puVar3 = puVar1,  puVar3 != NULL) {\n        puVar1 = *puVar3;\n        piVar2 = puVar3[2];\n        if ((piVar2[7] != 0) && (fcn.00432d9c(puVar3),  piVar2 != NULL)) {\n            (**(*piVar2 + 4))(1);\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00432ba2();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 326
    },
    "00422819": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00422819(void)\n\n{\n    if (*0x4863e8 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4863d0);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "0040807b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040807b(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (((*(in_ECX + 0x71) & 0x10) != 0) && ((*(in_ECX + 0x6c) & 1) != arg_8h)) {\n        arg_8h = NULL;\n        *(in_ECX + 0x6c) = *(in_ECX + 0x6c) ^ 1;\n        iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x472ec0, &arg_8h);\n        if (-1 < iVar1) {\n            (**(*arg_8h + 0x14))(arg_8h, 0xfffffd37);\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0040c3d9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040c3d9(int32_t noname_0, int32_t noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint hWnd)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint noname_3_00;\n    uint noname_4_00;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    uint32_t noname_2_00;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (noname_1 == 0) {\ncode_r0x0040c488:\n        noname_2_00 = 0x40c491;\n        uVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(*(noname_0 + 0x1c));\n        iVar3 = fcn.00436a76();\n        if (iVar3 == 0) {\n            return noname_0;\n        }\n    }\n    else {\n        noname_2_00 = *(noname_1 + 0x1c);\n        uVar2 = (*_sym.imp.USER32.dll_GetWindow)(noname_2_00, 2);\n        noname_0 = unaff_ESI;\n        iVar3 = fcn.00436a76(uVar2);\n        while (iVar3 == 0) {\n            in_stack_ffffffe4 = *(noname_1 + 0x1c);\n            in_stack_ffffffe0 = 0x40c40d;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)();\n            uVar2 = fcn.00436a76(uVar2);\n            noname_1 = fcn.0040c380(noname_0, uVar2);\n            if ((noname_1 == 0) || (noname_1 == noname_0)) goto code_r0x0040c488;\n            noname_2_00 = *(noname_1 + 0x1c);\n            uVar2 = (*pcVar1)(noname_2_00, 2);\n            iVar3 = fcn.00436a76(uVar2);\n        }\n        in_stack_ffffffe0 = *(noname_1 + 0x1c);\n        in_stack_ffffffe4 = 2;\n        uVar2 = (*pcVar1)();\n        iVar3 = fcn.00436a76();\n    }\n    noname_4_00 = 0xffffffec;\n    noname_3_00 = *(iVar3 + 0x1c);\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar4 & 0x10000) != 0) {\n        if ((((noname_2_00 & 1) == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c)),  iVar5 != 0))\n           && (((noname_2_00 & 2) == 0 || (iVar5 = fcn.00439fde(),  iVar5 != 0)))) {\n            noname_0 = iVar3;\n            iVar3 = 0;\n        }\n        iVar3 = fcn.0040c3d9(noname_0, iVar3, noname_2_00, noname_3_00, noname_4_00, unaff_EBX, uVar2, in_stack_ffffffe0\n                             , in_stack_ffffffe4);\n    }\n    return iVar3;\n}\n",
        "token_count": 847
    },
    "0040c768": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.0040c768(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (param_1 == 0) {\n        return param_1;\n    }\n    iVar1 = *(param_1 + 0x38);\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x71) & 0x10) != 0) {\n            return (-((*(iVar1 + 0x6c) & 1) != 0) & 0xfffffff0) + 0x20;\n        }\n        return 0;\n    }\n    uVar2 = fcn.0040c324(param_1, 0);\n    return uVar2 & 0x30;\n}\n",
        "token_count": 176
    },
    "0040db21": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl\nfcn.0040db21(int32_t noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_8h\n            , uint arg_ch, uint arg_10h)\n\n{\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    int32_t var_ch;\n    \n    if ((~*(noname_0 + 0x14) & 1) == 0) {\n        iVar1 = noname_2;\n        if (noname_2 != 0) {\n            do {\n                fcn.0040d874(noname_0, var_ch, noname_0, unaff_ESI, unaff_EBP, unaff_retaddr, noname_0, var_ch, noname_2\n                             , noname_3, noname_4, noname_5, arg_8h, arg_ch);\n                var_ch = var_ch + 0x10;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else if (noname_2 != 0) {\n        do {\n            fcn.0040d0a2(var_ch);\n            fcn.0040d6aa();\n            var_ch = var_ch + 0x10;\n            noname_2 = noname_2 + -1;\n        } while (noname_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "004394c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043951e)\n// WARNING: Removing unreachable block (ram,0x0043952d)\n// WARNING: Removing unreachable block (ram,0x00439533)\n// WARNING: Removing unreachable block (ram,0x00439545)\n// WARNING: Removing unreachable block (ram,0x0043954c)\n// WARNING: Removing unreachable block (ram,0x00439552)\n// WARNING: Removing unreachable block (ram,0x00439558)\n// WARNING: Removing unreachable block (ram,0x0043956b)\n// WARNING: Removing unreachable block (ram,0x00439572)\n// WARNING: Removing unreachable block (ram,0x0043958e)\n\nint32_t __thiscall fcn.004394c6(int32_t *param_1, uint8_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    \n    if ((param_2 & 4) != 0) {\n        fcn.00439ddc();\n    }\n    (*_sym.imp.USER32.dll_GetParent)(param_1[7]);\n    param_1[9] = param_1[9] | 0x18;\n    iVar2 = fcn.0043aa46();\n    pcVar1 = _sym.imp.USER32.dll_UpdateWindow;\n    while( true ) {\n        piVar3 = fcn.0043aa46();\n        iVar4 = (**(*piVar3 + 0x5c))();\n        if (iVar4 == 0) {\n            fcn.0046695d(0);\n            return -1;\n        }\n        if ((unaff_EBX != 0) && ((*(iVar2 + 0x34) == 0x118 || (*(iVar2 + 0x34) == 0x104)))) {\n            fcn.00439fb7(1);\n            (*pcVar1)(param_1[7]);\n            unaff_EBX = 0;\n        }\n        iVar4 = (**(*param_1 + 0x70))();\n        if (iVar4 == 0) break;\n        piVar3 = fcn.0043aa46();\n        iVar4 = (**(*piVar3 + 100))(iVar2 + 0x30);\n        if (iVar4 != 0) {\n            unaff_EBX = 0;\n        }\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2 + 0x30, 0, 0, 0, 0);\n    }\n    param_1[9] = param_1[9] & 0xffffffe7;\n    return param_1[0xb];\n}\n",
        "token_count": 605
    },
    "0043970d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nbool __cdecl fcn.0043970d(uint32_t arg_8h)\n\n{\n    uint noname_8;\n    uint noname_11;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    bool bVar4;\n    uint *noname_0;\n    uint32_t var_34h;\n    uint var_30h;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00456c34();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.004108b0(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00456c34();\n        noname_11 = *0x485970;\n        noname_8 = *(iVar1 + 8);\n        noname_0 = 0x8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            noname_0 = &var_34h;\n            var_34h = 0xb;\n            iVar1 = fcn.0043775f(noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0xb, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, *0x485970, var_18h, in_stack_ffffffe8, \n                                 \"AfxWnd42s\", 8, var_8h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            iVar1 = fcn.0043775f(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, var_34h, var_30h, \n                                 in_stack_ffffffd0, in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, var_18h, \n                                 in_stack_ffffffe8, \"AfxOleControl42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            iVar1 = fcn.0043775f(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, 0x10, in_stack_ffffffe8, \n                                 \"AfxControlBar42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            iVar1 = fcn.00439655(&var_34h, \"AfxMDIFrame42s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            iVar1 = fcn.00439655(&var_34h, \"AfxFrameOrView42s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.00439696(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.00439696(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.00439696(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.00439696(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.00439696(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.00439696(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.00439696(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.00439696(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.00439696(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.00439696(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.00439696(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.00439696(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.00439696(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            uVar3 = uVar3 | 0x10;\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 2123
    },
    "00439d5a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00439d5a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_18h != 0) {\n        arg_18h = *(arg_18h + 4);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_ScrollWindowEx)\n                      (*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if ((*(in_ECX + 0x34) != NULL) && ((arg_20h & 1) != 0)) {\n        (**(**(in_ECX + 0x34) + 0x58))(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "00439da9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00439da9(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 0x25) & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(param_1 + 0x1c), param_2);\n    }\n    else {\n        iVar1 = fcn.00456c34();\n        (**(**(iVar1 + 0x1038) + 0x24))(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0043c30c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_178h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043c30c(int32_t arg_8h, uint32_t lpMultiByteStr, uchar *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t *piStack432;\n    int32_t *piStack428;\n    uint uStack424;\n    uint *puStack420;\n    uint var_178h;\n    uint psfi;\n    uint var_162h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    uVar3 = 0;\n    *arg_10h = 0;\n    iVar1 = (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    if ((iVar1 != 0) && ((var_162h & 1) != 0)) {\n        puStack420 = 0x43c366;\n        iVar1 = fcn.0043c112(0x46e3a0, 0, 0x46e390, &fcn.0043c30c::var_4h);\n        if (-1 < iVar1) {\n            puStack420 = &fcn.0043c30c::var_8h;\n            uStack424 = 0x471fc0;\n            piStack428 = var_4h;\n            piStack432 = 0x43c37f;\n            iVar1 = (***var_4h)();\n            if (-1 < iVar1) {\n                if (lpMultiByteStr == 0) {\n                    puVar4 = NULL;\n                }\n                else {\n                    piStack432 = lpMultiByteStr;\n                    puVar4 = &stack0xfffffe50;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    fcn.00412040();\n                    piStack432 = piStack432 & 0xffff0000;\n                    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (0, 0, lpMultiByteStr, 0xffffffff, &stack0xfffffe50, iVar1 + 1);\n                }\n                piStack432 = NULL;\n                iVar1 = (**(*var_8h + 0x14))(var_8h, puVar4);\n                if (-1 < iVar1) {\n                    if (arg_8h == 0) {\n                        uVar2 = 0;\n                    }\n                    else {\n                        uVar2 = *(arg_8h + 0x1c);\n                    }\n                    iVar1 = (**(*var_4h + 0x4c))(var_4h, uVar2, 2);\n                    if (-1 < iVar1) {\n                        (**(*var_4h + 0xc))(var_4h, arg_10h, arg_14h, 0, 0);\n                        (**(*var_8h + 8))(var_8h);\n                        uVar3 = 1;\n                        goto code_r0x0043c412;\n                    }\n                }\n                (**(*var_8h + 8))(var_8h);\n            }\ncode_r0x0043c412:\n            piStack432 = var_4h;\n            (**(*var_4h + 8))();\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 760
    },
    "0043cc09": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043cc09(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t *arg_8h;\n    uint32_t uVar2;\n    \n    param_1[1] = param_3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n    *param_1 = iVar1;\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n        fcn.00410d20(arg_8h, param_3 + 0x40, param_1[1]);\n        if (*(arg_8h + 2) == -1) {\n            uVar2 = arg_8h[3];\n        }\n        else {\n            uVar2 = *arg_8h;\n        }\n        param_1[2] = ~uVar2 >> 6 & 1;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 255
    },
    "0043d759": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043d759(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.0043b52e();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.0043a720(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.00413e5b(param_1, 4, *puVar1, fcn.0043b52e);\n        if ((param_2 & 1) != 0) {\n            fcn.0043a720(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 184
    },
    "0043e082": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e082(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint *var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = NULL;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(arg_8h);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (var_4h == 0xffffffff) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.0043e1cf(uVar2);\n    }\n    if (((*(arg_ch + 4) != var_4h) && ((var_4h & 1) != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 4)),  iVar3 == 0)) {\n        uVar2 = (*pcVar1)(0);\n        fcn.0043e1cf(uVar2);\n    }\n    if (arg_ch[1] != 0) {\n        fcn.0043dfcf(arg_ch + 1, &var_24h);\n        if (arg_ch[2] != 0) {\n            fcn.0043dfcf(arg_ch + 2, &var_14h);\n            var_8h = &var_14h;\n        }\n        if (*arg_ch != 0) {\n            fcn.0043dfcf(arg_ch, &var_1ch);\n            var_ch = &var_1ch;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n        if (iVar3 == -1) {\n            uVar2 = (*pcVar1)(0);\n            fcn.0043e1cf(uVar2);\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, var_ch, var_8h, &var_24h);\n        if (iVar4 == 0) {\n            uVar2 = (*pcVar1)(0);\n            fcn.0043e1cf(uVar2);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(0);\n            fcn.0043e1cf(uVar2);\n        }\n    }\n    if (((*(arg_ch + 4) != var_4h) && ((var_4h & 1) == 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 4)),  iVar3 == 0)) {\n        uVar2 = (*pcVar1)(0);\n        fcn.0043e1cf(uVar2);\n    }\n    return;\n}\n",
        "token_count": 720
    },
    "0044338b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044338b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if ((~*(arg_8h + 0x14) & 1) == 0) {\n        if (arg_10h != 0) {\n            do {\n                fcn.004432f3(arg_8h, arg_ch);\n                arg_ch = arg_ch + 4;\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n        }\n    }\n    else if (arg_10h != 0) {\n        do {\n            fcn.00443223();\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0044349c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.0044349c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    piVar1 = *(unaff_EBP + 8);\n    iVar2 = *piVar1;\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    (**(iVar2 + 0x18))(extraout_ECX + 4);\n    uVar3 = *(unaff_EBP + 0xc);\n    extraout_ECX[3] = 0xffffffff;\n    extraout_ECX[5] = uVar3;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[8] = piVar1;\n    extraout_ECX[0xe] = 0;\n    extraout_ECX[0xd] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[1] = 1;\n    if ((~uVar3 & 1) == 0) {\n        extraout_ECX[0xf] = 0x40;\n    }\n    else {\n        extraout_ECX[0xf] = 0x10;\n    }\n    uVar3 = *(unaff_EBP + 0x14);\n    extraout_ECX[6] = 1;\n    extraout_ECX[0xb] = uVar3;\n    iVar2 = *(unaff_EBP + 0x10);\n    extraout_ECX[0x10] = 0x89;\n    extraout_ECX[2] = 0;\n    if (iVar2 < 0x80) {\n        extraout_ECX[7] = 0x80;\n        extraout_ECX[0xb] = 0;\n    }\n    else {\n        extraout_ECX[7] = iVar2;\n    }\n    iVar2 = extraout_ECX[0xb];\n    *(unaff_EBP + 0x10) = extraout_ECX[7];\n    if (iVar2 == 0) {\n        iVar2 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = fcn.0043a6f7(extraout_ECX[7]);\n            extraout_ECX[0xb] = uVar3;\n            extraout_ECX[6] = 0;\n        }\n        else {\n            *(unaff_EBP + 0x10) = 0;\n        }\n    }\n    iVar4 = *(unaff_EBP + 0x10) + extraout_ECX[0xb];\n    extraout_ECX[10] = iVar4;\n    iVar2 = extraout_ECX[0xb];\n    if ((*(extraout_ECX + 5) & 1) != 0) {\n        iVar2 = iVar4;\n    }\n    uVar3 = *(unaff_EBP + -0xc);\n    extraout_ECX[9] = iVar2;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 820
    },
    "004437ad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004437ad(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(param_1 + 0x14) & 1) == 0) {\n        iVar1 = *(param_1 + 0x24);\n        iVar2 = *(param_1 + 0x2c);\n        if (*(param_1 + 8) == 0) {\n            if (iVar1 != iVar2) {\n                (**(**(param_1 + 0x20) + 0x38))(iVar2, iVar1 - iVar2);\n            }\n        }\n        else {\n            if (iVar1 != iVar2) {\n                (**(**(param_1 + 0x20) + 0x50))(2, iVar1 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x20) + 0x50))(1, *(param_1 + 0x1c), param_1 + 0x2c, param_1 + 0x28);\n        }\n        *(param_1 + 0x24) = *(param_1 + 0x2c);\n    }\n    else {\n        if (*(param_1 + 0x28) != *(param_1 + 0x24)) {\n            (**(**(param_1 + 0x20) + 0x28))(*(param_1 + 0x24) - *(param_1 + 0x28), 1);\n        }\n        *(param_1 + 0x24) = *(param_1 + 0x28);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "0044679c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044679c(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *var_8h;\n    int32_t *piStack8;\n    \n    uVar1 = param_1[0x19];\n    param_1[0x21] = 0;\n    if (((uVar1 & 1) == 0) || ((uVar1 & 4) == 0)) {\n        iVar2 = *param_1;\n        if ((uVar1 & 0xa000) == 0) {\n            uVar3 = 0x50;\n        }\n        else {\n            uVar3 = 0x4a;\n        }\n    }\n    else {\n        iVar2 = *param_1;\n        uVar3 = 0x46;\n    }\n    var_8h = param_1;\n    piStack8 = param_1;\n    (**(iVar2 + 0xbc))(&var_8h, 0, uVar3);\n    return;\n}\n",
        "token_count": 241
    },
    "004494f3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004494f3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_DefWindowProcA)(*(in_ECX + 0x1c), 0x46, 0, arg_8h);\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &lpRect);\n        var_ch = var_ch - lpRect;\n        var_4h = *(arg_8h + 0x10);\n        var_8h = var_8h - var_10h;\n        iVar1 = *(arg_8h + 0x14);\n        if ((var_4h != var_ch) && ((*(in_ECX + 0x65) & 4) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_4h - *0x485940, 0, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_ch - *0x485940, 0, var_ch, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n        }\n        pcVar2 = _sym.imp.USER32.dll_SetRect;\n        if ((iVar1 != var_8h) && ((*(in_ECX + 0x65) & 8) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, iVar1 - *0x485944, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n            (*pcVar2)(&lpRect, 0, var_8h - *0x485944, var_4h, var_8h);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 576
    },
    "004498b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004498b8(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint in_stack_ffffffec;\n    \n    uVar1 = fcn.00439ddc();\n    uVar2 = param_1[0x18];\n    uVar5 = 0;\n    if (((uVar2 & 1) == 0) || ((uVar1 & 0x10000000) == 0)) {\n        if (((uVar2 & 2) != 0) && ((uVar1 & 0x10000000) == 0)) {\n            uVar5 = 0x40;\n        }\n    }\n    else {\n        uVar5 = 0x80;\n    }\n    param_1[0x18] = uVar2 & 0xfffffffc;\n    if (uVar5 != 0) {\n        in_stack_ffffffec = 0;\n        fcn.00439f68(0, 0, 0, 0, 0, uVar5 | 0x17);\n    }\n    uVar2 = fcn.00439ddc();\n    if ((uVar2 & 0x10000000) != 0) {\n        if ((param_1[0x1c] != 0) && (uVar2 = fcn.00439ddc(),  (uVar2 & 0x10000000) == 0)) {\n            return 0;\n        }\n        piVar3 = fcn.0040540d();\n        if ((piVar3 == NULL) || (iVar4 = (**(*piVar3 + 0xb0))(),  iVar4 == 0)) {\n            piVar3 = fcn.00438126();\n        }\n        if (piVar3 != NULL) {\n            (**(*param_1 + 0xc0))(piVar3, in_stack_ffffffec);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 465
    },
    "0045242d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045242d(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = fcn.00439ddc();\n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if (((uVar3 & 0x80000000) != 0) &&\n       ((((arg_8h & 0xfff0) != 0xf060 ||\n         (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x73),  iVar2 < 0 && (iVar2 = (*pcVar1)(0x12),  iVar2 < 0)) &&\n          ((uVar3 & 0x100) != 0)))) && (iVar4 = fcn.004388c6(arg_8h, arg_ch),  iVar4 != 0)))) {\n        return;\n    }\n    fcn.0044fe7e(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 236
    },
    "004565bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004565bf(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    int32_t var_ch;\n    \n    fcn.00449dbf(arg_8h, arg_ch);\n    uVar2 = fcn.00439ddc();\n    if ((uVar2 & 0x100) != 0) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[7]);\n        iVar4 = (*_sym.imp.USER32.dll_IsZoomed)(uVar3);\n        if (iVar4 == 0) {\n            (**(*in_ECX + 0xa0))(0x407, 0, &var_ch);\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(5);\n            iVar4 = *(arg_8h + 8);\n            iVar6 = (*pcVar1)(2);\n            *(arg_8h + 8) = ((iVar4 + iVar5 * -2) - var_ch) - iVar6;\n        }\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "0045662f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.0045662f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t aiStack96 [2];\n    uint *puStack88;\n    uint var_34h;\n    int32_t lpRect;\n    uint dy;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uchar *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_34h = unaff_EDI;\n    if (arg_8h != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        (*_sym.imp.USER32.dll_OffsetRect)();\n        puStack88 = 0x456675;\n        fcn.004565bf(&fcn.0045662f::lpRect, 1);\n        puStack88 = &fcn.0045662f::var_18h;\n        aiStack96[1] = 0;\n        aiStack96[0] = 0x407;\n        var_ch = &stack0xffffffa0;\n        (**(*in_ECX + 0xa0))();\n        arg_8h = 0;\n        iVar4 = in_ECX[0x16];\n        iVar5 = (var_20h - lpRect) + var_10h;\n        if (0 < iVar4) {\n            piVar2 = in_ECX[0x17] + 4;\n            iVar3 = iVar4;\n            do {\n                if ((*(piVar2 + 7) & 8) != 0) {\n                    arg_8h = arg_8h + 1;\n                }\n                iVar1 = *piVar2;\n                piVar2 = piVar2 + 5;\n                iVar5 = iVar5 + ((-6 - iVar1) - var_10h);\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.00412040();\n        var_8h = 0;\n        if (0 < iVar4) {\n            iVar4 = in_ECX[0x17] + 8;\n            var_ch = &stack0xffffffa0;\n            var_4h = &stack0xffffffa0;\n            do {\n                var_18h = var_18h + 6 + *(iVar4 + -4);\n                if (((*(iVar4 + 3) & 8) != 0) && (0 < iVar5)) {\n                    iVar3 = iVar5 / arg_8h;\n                    var_18h = var_18h + iVar3;\n                    arg_8h = arg_8h + -1;\n                    iVar5 = iVar5 - iVar3;\n                }\n                iVar4 = iVar4 + 0x14;\n                piVar2 = var_4h + 1;\n                *var_4h = var_18h;\n                var_4h = piVar2;\n                var_18h = var_18h + var_10h;\n                var_8h = var_8h + 1;\n            } while (var_8h < in_ECX[0x16]);\n        }\n        (**(*in_ECX + 0xa0))(0x404, in_ECX[0x16], var_ch);\n    }\n    iVar4 = 0;\n    if ((arg_ch != 0) && (0 < in_ECX[0x16])) {\n        puVar6 = in_ECX[0x17] + 0x10;\n        do {\n            if ((*(puVar6 + -1) & 1) != 0) {\n                fcn.004477f1(iVar4, *puVar6, 1, var_34h, unaff_ESI, unaff_EBX);\n            }\n            puVar6 = puVar6 + 5;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < in_ECX[0x16]);\n    }\n    return;\n}\n",
        "token_count": 967
    },
    "004570a7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004570a7(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    iVar6 = param_1 + 0x1c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar6);\n    iVar7 = *(param_1 + 4);\n    iVar8 = *(param_1 + 8);\n    if ((iVar7 <= iVar8) || ((*(*(param_1 + 0x10) + iVar8 * 8) & 1) != 0)) {\n        iVar8 = 1;\n        if (1 < iVar7) {\n            puVar3 = *(param_1 + 0x10);\n            do {\n                puVar3 = puVar3 + 8;\n                if ((*puVar3 & 1) == 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar7);\n            if (iVar8 < iVar7) goto code_r0x0045718c;\n        }\n        iVar7 = iVar7 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, iVar7 * 8);\n        }\n        else {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar5);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar5, iVar7 * 8, 0x2002);\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GlobalLock;\n        if (iVar4 == 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*pcVar2)(uVar5);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar6);\n            fcn.0042f1c0();\n        }\n        iVar6 = (*pcVar2)(iVar4);\n        fcn.004108b0(iVar6 + *(param_1 + 4) * 8, 0, (*(param_1 + 4) * 0x1fffffff + iVar7) * 8);\n        *(param_1 + 0x10) = iVar6;\n        *(param_1 + 4) = iVar7;\n    }\ncode_r0x0045718c:\n    if (*(param_1 + 0xc) <= iVar8) {\n        *(param_1 + 0xc) = iVar8 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar8 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n    return iVar8;\n}\n",
        "token_count": 710
    },
    "00401091": {
        "rules": [
            "encrypt data using HC-128/425018b86d394d5ebff49c9438559e47"
        ],
        "decompiled_code": "\nuint32_t fcn.00401091(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0xffffffff;\n    uVar1 = *param_1;\n    while (uVar1 != 0) {\n        uVar3 = uVar2 ^ uVar1;\n        uVar2 = (uVar3 << 0x1e) >> 0x1f & 0xee0e612cU ^\n                (uVar3 << 0x1f) >> 0x1f & 0x77073096U ^ (uVar3 << 0x1d) >> 0x1f & 0x76dc419U ^\n                (uVar3 << 0x19) >> 0x1f & 0x76dc4190U ^ (uVar3 << 0x1a) >> 0x1f & 0x3b6e20c8U ^\n                (uVar3 << 0x1b) >> 0x1f & 0x1db71064U ^ (uVar3 << 0x1c) >> 0x1f & 0xedb8832U ^ uVar2 >> 8 ^\n                (uVar3 << 0x18) >> 0x1f & 0xedb88320U;\n        param_1 = param_1 + 1;\n        uVar1 = *param_1;\n    }\n    return ~uVar2;\n}\n",
        "token_count": 348
    },
    "00408359": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408359(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*(in_ECX + 0x7c) == 0) || (*(in_ECX + 0x78) == 0)) {\n        var_8h = 0;\n    }\n    else {\n        puVar2 = fcn.0043a6f7(*(in_ECX + 0x7c) * 6);\n        iVar3 = (*_sym.imp.USER32.dll_CopyAcceleratorTableA)(*(in_ECX + 0x78), puVar2, *(in_ECX + 0x7c));\n        var_8h = 0;\n        var_4h = 0;\n        if (0 < iVar3) {\n            puVar4 = puVar2;\n            do {\n                if (*(arg_8h + 4) == 0x106) {\n                    uVar1 = 0x10;\n                }\n                else {\n                    uVar1 = 0;\n                }\n                if (((*puVar4 & 0xfd) == uVar1) && (*(puVar4 + 2) == *(arg_8h + 8))) {\n                    var_8h = 1;\n                    break;\n                }\n                var_4h = var_4h + 1;\n                puVar4 = puVar4 + 6;\n            } while (var_4h < iVar3);\n        }\n        fcn.0043a720(puVar2);\n    }\n    return var_8h;\n}\n",
        "token_count": 392
    },
    "0040e0bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e0bf(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t *in_ECX;\n    uint16_t uVar8;\n    bool bVar9;\n    uint var_60h;\n    uint var_54h;\n    uint var_48h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t *var_ch;\n    uint32_t var_4h;\n    \n    if (in_ECX[2] == 0) {\n        var_18h = *in_ECX;\n        var_14h = in_ECX[1];\n        var_10h = 0;\n        if (arg_ch == 0) {\n            *arg_8h = 0;\n            arg_8h[1] = 0x80000000;\n            arg_8h[2] = 1;\n            return;\n        }\n        var_ch = in_ECX;\n        if (var_14h < 0) {\n            uVar5 = fcn.0040de98(&var_48h);\n            fcn.0040dc34(uVar5);\n        }\n        var_3ch = fcn.0041413b(arg_ch);\n        var_4h = var_3ch;\n        if (var_14h == 0) {\n            var_18h = *in_ECX / var_3ch;\n            if (((in_ECX[1] ^ arg_ch) & 0x80000000) != 0) {\n                uVar5 = fcn.0040de98(&var_48h);\n                fcn.0040dc34(uVar5);\n            }\n            *arg_8h = var_18h;\n            arg_8h[1] = var_14h;\n        }\n        else {\n            var_2ch = 0;\n            var_30h = 0;\n            var_28h = 0;\n            var_20h = 0;\n            var_24h = 0;\n            var_1ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            iVar6 = fcn.0040dd5c(&var_3ch);\n            while (iVar6 != 0) {\n                if (var_14h == 0) {\n                    iVar4 = 0;\ncode_r0x0040e1de:\n                    if (iVar4 != 0) goto code_r0x0040e1e3;\n                    if (var_18h == 0) {\n                        iVar4 = 0;\n                    }\n                    else {\n                        uVar7 = var_18h & 0x80000000;\n                        iVar4 = 0x20;\n                        while (uVar7 == 0) {\n                            uVar7 = var_18h & 1 << (iVar4 - 2U & 0x1f);\n                            iVar4 = iVar4 + -1;\n                        }\n                    }\n                }\n                else {\n                    iVar4 = 0x20;\n                    iVar3 = iVar4;\n                    if ((var_14h & 0x80000000) == 0) {\n                        do {\n                            iVar4 = iVar3 + -1;\n                            cVar2 = iVar3;\n                            iVar3 = iVar4;\n                        } while ((var_14h & 1 << (cVar2 - 2U & 0x1f)) == 0);\n                        goto code_r0x0040e1de;\n                    }\ncode_r0x0040e1e3:\n                    iVar4 = iVar4 + 0x20;\n                }\n                uVar8 = 0x40 - iVar4;\n                if (uVar8 != 0) {\n                    uVar7 = uVar8;\n                    do {\n                        uVar1 = var_18h << 1;\n                        var_14h = var_14h << 1 | var_18h >> 0x1f;\n                        uVar7 = uVar7 - 1;\n                        var_18h = uVar1;\n                    } while (uVar7 != 0);\n                }\n                bVar9 = var_14h < var_4h;\n                var_20h = var_14h / (var_4h >> bVar9);\n                if (uVar8 != 0) {\n                    uVar7 = uVar8;\n                    do {\n                        var_18h = var_18h >> 1 | var_14h << 0x1f;\n                        var_14h = var_14h >> 1;\n                        uVar7 = uVar7 - 1;\n                    } while (uVar7 != 0);\n                }\n                uVar8 = uVar8 - bVar9;\n                if (uVar8 != 0) {\n                    uVar7 = uVar8;\n                    do {\n                        var_24h = var_24h >> 1 | var_20h << 0x1f;\n                        var_20h = var_20h >> 1;\n                        uVar7 = uVar7 - 1;\n                    } while (uVar7 != 0);\n                }\n                uVar5 = fcn.0040dd81(&var_48h, &var_24h);\n                fcn.0040dc34(uVar5);\n                uVar5 = fcn.0040dee2(&var_54h, var_4h);\n                uVar5 = fcn.0040de0d(&var_60h, uVar5);\n                fcn.0040dc34(uVar5);\n                iVar6 = fcn.0040dd5c();\n                in_ECX = var_ch;\n            }\n            if (((in_ECX[1] ^ arg_ch) & 0x80000000) != 0) {\n                uVar5 = fcn.0040de98(&var_60h);\n                fcn.0040dc34(uVar5);\n            }\n            *arg_8h = var_30h;\n            arg_8h[1] = var_2ch;\n            var_10h = var_28h;\n        }\n    }\n    else {\n        *arg_8h = *in_ECX;\n        arg_8h[1] = in_ECX[1];\n        var_10h = in_ECX[2];\n    }\n    arg_8h[2] = var_10h;\n    return;\n}\n",
        "token_count": 1537
    },
    "0042ec6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec6c(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    var_24h = (arg_ch & 0x1f) << 1;\n    var_1ch = arg_ch >> 0xb;\n    var_20h = arg_ch >> 5 & 0xf83f;\n    var_18h = arg_8h & 0x1f;\n    var_10h = (arg_8h >> 9) + 0x50;\n    var_4h = arg_10h;\n    var_14h = (arg_8h >> 5 & 0xf80f) - 1;\n    uVar1 = fcn.004127c0(&var_24h);\n    *in_ECX = uVar1;\n    return;\n}\n",
        "token_count": 265
    },
    "0040335f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040335f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0044f7d9(arg_8h);\n    if (iVar1 != -1) {\n        iVar1 = fcn.00455d9d(in_ECX, 0x50002800, 0xe800);\n        if ((((iVar1 != 0) && (iVar1 = fcn.00455fea(0x80),  iVar1 != 0)) && (iVar1 = fcn.0045636d(),  iVar1 != 0)) &&\n           (iVar1 = fcn.00456422(0x4800a4, 4),  iVar1 != 0)) {\n            fcn.0045688e(*(in_ECX + 0x1a0) | 0x34);\n            fcn.00448ae6(0xf000);\n            fcn.004510db(0xf000);\n            fcn.00451170(in_ECX + 0x13c, 0, 0);\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n            var_4h = 0;\n            iVar1 = fcn.00405ee0(0x46c9b8, 0, 0, &var_10h, in_ECX, 0x7d1, 0, 0, 0);\n            if (iVar1 != 0) {\n                fcn.00401177(1);\n                iVar1 = fcn.0044ed8a(0x50201044, 0x4855f8);\n                if (iVar1 != 0) {\n                    fcn.00439e41(0x200, 0, 0x20);\n                    fcn.00439e41(0, 0x200, 0x20);\n                    return 0;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 478
    },
    "0040744e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040744e(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar2 = (**(*arg_8h + 0x3c))();\n    do {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        if (*(puVar2[1] + 0x18) != -1) {\n            iVar3 = puVar2[1];\n            do {\n                if ((*(iVar3 + 4) == arg_10h[1]) && (*(iVar3 + 0x18) == (*arg_10h != 0))) {\n                    if (*(iVar3 + 0x24) == 0xffffffff) {\n                        if (*(iVar3 + 0x20) == 0xffffffff) {\n                            return iVar3;\n                        }\n                        if (*(iVar3 + 0x20) == arg_ch) {\n                            return iVar3;\n                        }\n                    }\n                    else if ((*(iVar3 + 0x20) < arg_ch || *(iVar3 + 0x20) == arg_ch) && (arg_ch <= *(iVar3 + 0x24))) {\n                        return iVar3;\n                    }\n                }\n                piVar1 = iVar3 + 0x40;\n                iVar3 = iVar3 + 0x28;\n            } while (*piVar1 != -1);\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 348
    },
    "00408d3e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00408d3e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar1 = *(unaff_EBP + 0xc);\n    if ((iVar1 == 0) || (*(unaff_EBP + 8) == -1)) {\n        iVar1 = *(extraout_ECX + 0x8c);\n        *(unaff_EBP + -0x10) = 0;\n        while (iVar1 != 0) {\n            iVar3 = fcn.0040bbf3();\n            if (((*(unaff_EBP + 8) == -1) || (*(iVar1 + 8) == *(unaff_EBP + 8))) &&\n               ((*(unaff_EBP + 0xc) == 0 || (*(*(unaff_EBP + 0xc) + 0x38) == *(iVar1 + 0xc))))) {\n                if (*(unaff_EBP + -0x10) == 0) {\n                    *(extraout_ECX + 0x8c) = iVar3;\n                }\n                else {\n                    *(*(unaff_EBP + -0x10) + 0x18) = iVar3;\n                }\n                if ((*(iVar1 + 0xc) != 0) && (piVar2 = *(*(iVar1 + 0xc) + 0x88),  piVar2 != NULL)) {\n                    (**(*piVar2 + 4))(iVar1, 0);\n                }\n                if (iVar1 != 0) {\n                    fcn.0043a720(iVar1);\n                }\n            }\n            iVar1 = iVar3;\n            if (*(unaff_EBP + -0x10) != 0) {\n                uVar4 = fcn.0040bbf3();\n                *(unaff_EBP + -0x10) = uVar4;\n            }\n        }\n    }\n    else {\n        iVar3 = fcn.0043a6f7(0x1c);\n        *(unaff_EBP + 0xc) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0040bbb0(*(extraout_ECX + 0x8c), *(unaff_EBP + 8), 0);\n        }\n        *(extraout_ECX + 0x8c) = iVar3;\n        *(iVar3 + 0xc) = *(iVar1 + 0x38);\n        piVar2 = *(extraout_ECX + 0x8c);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *piVar2 = extraout_ECX;\n        (**(**(*(extraout_ECX + 0x8c) + 0xc) + 0xb0))();\n        (**(**(*(*(extraout_ECX + 0x8c) + 0xc) + 0x88) + 4))(*(extraout_ECX + 0x8c), 1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 823
    },
    "004101ac": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004101ac(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 4) == -1) || (*(param_1 + 4) != param_2)) {\n        *param_3 = 0;\n        uVar1 = 0;\n    }\n    else {\n        *param_3 = *(param_1 + 8);\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "00415ae5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00415ae5(int32_t param_1, uint param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_1ch;\n    uint var_10h;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4712c0;\n    pcStack16 = fcn.00416cfc;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    for (iVar2 = *(var_8h + 8); var_4h = 0xffffffff,  iVar2 != var_14h; iVar2 = *(*(var_18h + 8) + iVar2 * 8)) {\n        if ((iVar2 < 0) || (*(var_18h + 4) <= iVar2)) {\n            fcn.0041620d();\n        }\n        var_4h = 0;\n        iVar1 = *(*(var_18h + 8) + 4 + iVar2 * 8);\n        if (iVar1 != 0) {\n            fcn.00415fb0(iVar1, var_8h, 0x103);\n        }\n    }\n    *(var_8h + 8) = iVar2;\n    *in_FS_OFFSET = var_10h;\n    return;\n}\n",
        "token_count": 355
    },
    "00418260": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418260(uint32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = arg_ch + 1;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 < 0) {\n        arg_8h = fcn.00417a07(arg_8h, arg_ch);\n    }\n    else {\n        **arg_ch = arg_8h;\n        *arg_ch = *arg_ch + 1;\n        arg_8h = arg_8h & 0xff;\n    }\n    if (arg_8h == 0xffffffff) {\n        *arg_10h = -1;\n        return;\n    }\n    *arg_10h = *arg_10h + 1;\n    return;\n}\n",
        "token_count": 194
    },
    "00418295": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00418295(uint param_1, int32_t param_2, uint param_3, int32_t *param_4)\n\n{\n    if (0 < param_2) {\n        do {\n            param_2 = param_2 + -1;\n            fcn.00418260(param_1, param_3, param_4);\n            if (*param_4 == -1) {\n                return;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0041aa06": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041aa06(uint param_1, int32_t param_2, uint param_3, int32_t *param_4)\n\n{\n    if (0 < param_2) {\n        do {\n            param_2 = param_2 + -1;\n            fcn.0041a9e6(param_1, param_3, param_4);\n            if (*param_4 == -1) {\n                return;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00430c90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430c90(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_2ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_2ch;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_ch == 0) && (var_8h != -1)) && (var_8h != 0)) {\n        iVar2 = fcn.004347f8(var_8h, &arg_ch);\n        if (iVar2 == 0) {\n            puVar1 = fcn.0043483c(var_8h);\n            *puVar1 = 0;\n        }\n        fcn.0043481a(var_8h, &var_8h);\n    }\n    (**(*in_ECX + 0xa0))(0x404, arg_8h, &var_2ch);\n    return;\n}\n",
        "token_count": 299
    },
    "00432e7c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432e7c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (arg_ch != -1) {\n        *(in_ECX + 0x10) = arg_ch;\n    }\n    if (arg_8h == 0) {\n        fcn.0043a720(*(in_ECX + 4));\n        *(in_ECX + 4) = 0;\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 8) = 0;\n        return;\n    }\n    if (*(in_ECX + 4) == 0) {\n        uVar1 = fcn.0043a6f7(arg_8h << 2);\n        *(in_ECX + 4) = uVar1;\n        fcn.004108b0(uVar1, 0, arg_8h << 2);\n        *(in_ECX + 0xc) = arg_8h;\ncode_r0x00432ed3:\n        *(in_ECX + 8) = arg_8h;\n        return;\n    }\n    if (arg_8h <= *(in_ECX + 0xc)) {\n        iVar2 = *(in_ECX + 8);\n        if (iVar2 < arg_8h) {\n            fcn.004108b0(*(in_ECX + 4) + iVar2 * 4, 0, (iVar2 * 0x3fffffff + arg_8h) * 4);\n        }\n        goto code_r0x00432ed3;\n    }\n    arg_ch = *(in_ECX + 0x10);\n    if (arg_ch != 0) goto code_r0x00432f31;\n    arg_ch = *(in_ECX + 8) / 8;\n    if (3 < arg_ch) {\n        if (0x400 < arg_ch) {\n            arg_ch = 0x400;\n            goto code_r0x00432f31;\n        }\n        if (3 < arg_ch) goto code_r0x00432f31;\n    }\n    arg_ch = 4;\ncode_r0x00432f31:\n    arg_ch = arg_ch + *(in_ECX + 0xc);\n    if (arg_ch <= arg_8h) {\n        arg_ch = arg_8h;\n    }\n    iVar2 = fcn.0043a6f7(arg_ch << 2);\n    fcn.00410d20(iVar2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.004108b0(iVar2 + *(in_ECX + 8) * 4, 0, (*(in_ECX + 8) * 0x3fffffff + arg_8h) * 4);\n    fcn.0043a720(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar2;\n    *(in_ECX + 8) = arg_8h;\n    *(in_ECX + 0xc) = arg_ch;\n    return;\n}\n",
        "token_count": 700
    },
    "004345a2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004345a2(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 == 0xffffffff) {\n        uVar4 = 0;\n        if (*(param_1 + 8) != 0) {\n            ppiVar1 = *(param_1 + 4);\n            do {\n                piVar3 = *ppiVar1;\n                if (piVar3 != NULL) break;\n                uVar4 = uVar4 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar4 < *(param_1 + 8));\n        }\n    }\n    piVar5 = *piVar3;\n    if (piVar5 == NULL) {\n        uVar4 = *(param_1 + 8);\n        uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n        if (uVar2 < uVar4) {\n            ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5 != NULL) break;\n                uVar2 = uVar2 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar2 < uVar4);\n        }\n    }\n    *param_2 = piVar5;\n    *param_3 = piVar3[1];\n    *param_4 = piVar3[2];\n    return;\n}\n",
        "token_count": 412
    },
    "00434902": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434902(int32_t param_1, int32_t **param_2, int32_t *param_3)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    piVar3 = *param_2;\n    if (piVar3 == 0xffffffff) {\n        uVar4 = 0;\n        if (*(param_1 + 8) != 0) {\n            ppiVar1 = *(param_1 + 4);\n            do {\n                piVar3 = *ppiVar1;\n                if (piVar3 != NULL) break;\n                uVar4 = uVar4 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar4 < *(param_1 + 8));\n        }\n    }\n    piVar2 = *piVar3;\n    if (piVar2 == NULL) {\n        uVar4 = piVar3[1] + 1;\n        if (uVar4 < *(param_1 + 8)) {\n            ppiVar1 = *(param_1 + 4) + uVar4 * 4;\n            do {\n                piVar2 = *ppiVar1;\n                if (piVar2 != NULL) break;\n                uVar4 = uVar4 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar4 < *(param_1 + 8));\n        }\n    }\n    *param_2 = piVar2;\n    fcn.0043b667(piVar3 + 2);\n    *param_3 = piVar3[3];\n    return;\n}\n",
        "token_count": 384
    },
    "0043b9ad": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043b9ad(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.0043b4d7();\n    if (param_2 == -1) {\n        param_2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n    }\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 106
    },
    "0043bda6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043bda6(uint lpFileName, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    uint uVar6;\n    uint var_110h;\n    uint lpSecurityAttributes;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    *(in_ECX + 8) = 0;\n    *(in_ECX + 4) = 0xffffffff;\n    fcn.0043b4b9();\n    fcn.0043c42e(&var_110h, lpFileName);\n    fcn.0043b6b7(&var_110h);\n    uVar3 = 0;\n    uVar1 = arg_ch & 3;\n    if (uVar1 == 0) {\n        uVar3 = 0x80000000;\n    }\n    else if (uVar1 == 1) {\n        uVar3 = 0x40000000;\n    }\n    else if (uVar1 == 2) {\n        uVar3 = 0xc0000000;\n    }\n    uVar1 = arg_ch & 0x70;\n    uVar4 = 1;\n    if ((uVar1 != 0) && (uVar1 != 0x10)) {\n        uVar6 = uVar4;\n        if (uVar1 == 0x20) goto code_r0x0043be3d;\n        if (uVar1 == 0x30) {\n            uVar6 = 2;\n            goto code_r0x0043be3d;\n        }\n        if (uVar1 == 0x40) {\n            uVar6 = 3;\n            goto code_r0x0043be3d;\n        }\n    }\n    uVar6 = 0;\ncode_r0x0043be3d:\n    var_8h = 0;\n    var_4h = ~(arg_ch & 0xffff7fff) >> 7 & 1;\n    lpSecurityAttributes = 0xc;\n    if ((arg_ch & 0x1000) == 0) {\n        cVar5 = '\\x03';\n    }\n    else {\n        cVar5 = (-((arg_ch & 0x2000) != 0) & 2U) + 2;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, uVar3, uVar6, &lpSecurityAttributes, cVar5, 0x80, 0);\n    if (iVar2 == -1) {\n        if (arg_10h != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            *(arg_10h + 0xc) = uVar3;\n            uVar3 = fcn.0043e375(uVar3);\n            *(arg_10h + 8) = uVar3;\n            fcn.0043b6b7(lpFileName);\n        }\n        uVar4 = 0;\n    }\n    else {\n        *(in_ECX + 4) = iVar2;\n        *(in_ECX + 8) = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 736
    },
    "0043bfc1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043bfc1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.0043b4b9();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.0043e1cf(uVar2);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0043c42e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n\nuint __cdecl fcn.0043c42e(uint lpRootPathName, uint lpFileName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpFindFileData;\n    uint lpString2;\n    uint var_18h;\n    uint lpFilePart;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    uVar1 = *(unaff_EBP + 8);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(*(unaff_EBP + 0xc), 0x104, uVar1, unaff_EBP + -0x14);\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, *(unaff_EBP + 0xc), 0x104);\n        uVar3 = 0;\n    }\n    else {\n        *(unaff_EBP + 8) = *0x480454;\n        uVar3 = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.0043c4fe(uVar1, unaff_EBP + 8);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                          (*(unaff_EBP + 8), 0, 0, 0, unaff_EBP + -0x18, unaff_EBP + -0x10, 0, 0);\n        if (iVar2 != 0) {\n            if ((*(unaff_EBP + -0x10) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(uVar1);\n            }\n            if ((*(unaff_EBP + -0x10) & 4) == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*(unaff_EBP + 0xc), unaff_EBP + -0x158);\n                if (iVar2 != -1) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(*(unaff_EBP + -0x14), unaff_EBP + -300);\n                }\n            }\n            uVar3 = 1;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0043b52e();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 600
    },
    "004458db": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004458db(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = *0x480454;\n    *(unaff_EBP + -4) = 0;\n    fcn.0043c737(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    uVar1 = fcn.004458a3(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 325
    },
    "00445e53": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445e53(int32_t *arg_8h, uint arg_ch, uint *lParam)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.004459ff(arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*arg_8h == 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0x18c, 0xffffffff, *lParam);\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0x188, 0, 0);\n        if (iVar3 == -1) {\n            fcn.0043b4b9();\n        }\n        else {\n            uVar4 = (*pcVar1)(uVar2, 0x18a, iVar3, 0);\n            uVar4 = fcn.0043b9d5(uVar4);\n            (*pcVar1)(uVar2, 0x189, iVar3, uVar4);\n        }\n        fcn.0043b9ad(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "0044f7e8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0044f7e8(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004369dd();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0xdc))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[7], 0x362, 0xe001, 0);\n        (**(*param_1 + 200))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 149
    },
    "00455bdd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00455bdd(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = *0x4805c8;\n    if (*0x4805c8 == -1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DllGetVersion\");\n        iVar4 = 0x40000;\n        if (pcVar2 != NULL) {\n            fcn.004108b0(&var_14h, 0, 0x14);\n            var_14h = 0x14;\n            iVar3 = (*pcVar2)(&var_14h);\n            if (-1 < iVar3) {\n                iVar4 = CONCAT22(var_10h, var_ch);\n            }\n        }\n    }\n    *0x4805c8 = iVar4;\n    return iVar4;\n}\n",
        "token_count": 260
    },
    "00455c4b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00455c4b(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*0x4805cc == -1) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x48, 0, 0, 0, 400, 0, 0, 0, 2, 0, 0, 0, 0, \"Marlett\");\n        iVar4 = (*_sym.imp.GDI32.dll_CreateFontA)(uVar3);\n        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n        if (iVar4 != 0) {\n            iVar4 = (*_sym.imp.GDI32.dll_SelectObject)(uVar2, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_GetCharWidthA)(uVar2, 0x36, 0x36, 0x4805cc);\n        if (iVar4 != 0) {\n            (*pcVar1)(uVar2, iVar4);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar4);\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    return *0x4805cc;\n}\n",
        "token_count": 305
    },
    "0045700e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0045700e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar1;\n    if (iVar1 == -1) {\n        fcn.0042f1c0();\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 + 7);\n    return param_1;\n}\n",
        "token_count": 183
    },
    "00457050": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457050(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.0045735d(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 229
    },
    "00463853": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00463853(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (**(param_1 + 8) == -1) {\n        for (iVar1 = *(param_1 + 4); *(iVar1 + 0x18) != -1; iVar1 = iVar1 + 0x20) {\n        }\n        **(param_1 + 8) = iVar1 - *(param_1 + 4) >> 5;\n    }\n    return **(param_1 + 8);\n}\n",
        "token_count": 121
    },
    "00463880": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00463880(uint *arg_8h, uint lpString2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        if (arg_8h == NULL) {\n            return 0xffffffff;\n        }\n        puVar4 = arg_8h[1];\n        uVar1 = fcn.00463853(arg_8h);\n        uVar3 = 0;\n        if (uVar1 != 0) {\n            do {\n                if ((*(puVar4 + 3) != 0xfff) &&\n                   (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(*puVar4, lpString2),  iVar2 == 0)) {\n                    if (puVar4[1] != 0xffffffff) {\n                        return puVar4[1];\n                    }\n                    return var_4h << 0x10 | uVar3 + 1 & 0xffff;\n                }\n                puVar4 = puVar4 + 8;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar1);\n        }\n        arg_8h = *arg_8h;\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 318
    },
    "004638ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004638ec(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    bool bVar6;\n    \n    arg_8h_00 = (**(*arg_8h + 0x30))();\n    bVar6 = arg_ch == 0;\n    puVar5 = arg_8h_00;\n    if (bVar6) {\n        for (; puVar5 != NULL; puVar5 = *puVar5) {\n            for (puVar1 = puVar5[1]; puVar1[6] != -1; puVar1 = puVar1 + 8) {\n                if (*(puVar1 + 3) == 0xfff) {\n                    arg_ch = puVar1[1];\n                    if ((arg_ch == 0xffffffff) && (arg_ch = fcn.00463880(arg_8h_00, *puVar1),  arg_ch == 0xffffffff)) {\n                        return 0;\n                    }\n                    bVar6 = arg_ch == 0;\n                    goto code_r0x00463943;\n                }\n            }\n        }\n    }\n    else {\ncode_r0x00463943:\n        if ((!bVar6 && -1 < arg_ch) && (uVar3 = 0,  arg_8h_00 != NULL)) {\n            puVar5 = arg_8h_00;\n            do {\n                if (arg_ch >> 0x10 <= uVar3) break;\n                puVar5 = *puVar5;\n                uVar3 = uVar3 + 1;\n            } while (puVar5 != NULL);\n            if (puVar5 != NULL) {\n                uVar4 = arg_ch & 0xffff;\n                uVar3 = fcn.00463853(puVar5);\n                if (uVar4 <= uVar3) {\n                    uVar3 = *(puVar5[1] + (uVar4 * 8 + -7) * 4);\n                    iVar2 = puVar5[1] + (uVar4 * 8 + -8) * 4;\n                    if (uVar3 == 0xffffffff) {\n                        return iVar2;\n                    }\n                    if (uVar3 == arg_ch) {\n                        return iVar2;\n                    }\n                }\n            }\n        }\n    }\n    do {\n        if (arg_8h_00 == NULL) {\n            return 0;\n        }\n        for (iVar2 = arg_8h_00[1]; *(iVar2 + 0x18) != -1; iVar2 = iVar2 + 0x20) {\n            if (*(iVar2 + 4) == arg_ch) {\n                return iVar2;\n            }\n        }\n        arg_8h_00 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 658
    },
    "00443b53": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h_2\n\nint32_t * fcn.00443b53(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    code **ppcVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    uint arg_8h;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t extraout_ECX;\n    int32_t iVar9;\n    int32_t unaff_EBP;\n    uint *puVar10;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    uchar *lpMultiByteStr;\n    uint arg_14h;\n    uchar auStack812 [20];\n    uint lpString2;\n    uchar auStack552 [20];\n    uint lpString1;\n    uchar auStack292 [20];\n    uint var_10ch;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    char *pcStack16;\n    uint var_8h_2;\n    uint var_4h_2;\n    uint var_14h;\n    \n    var_14h = 0x443b5d;\n    fcn.00410d00();\n    pcStack16 = 0x10;\n    ppcVar4 = fcn.0043a6f7();\n    *(unaff_EBP + -0x14) = ppcVar4;\n    *(unaff_EBP + -4) = 0;\n    if (ppcVar4 == NULL) {\n        ppcVar4 = NULL;\n    }\n    else {\n        pcStack16 = 0x443b7c;\n        fcn.0043c956();\n        ppcVar4[3] = *0x480454;\n        pcVar1 = *(unaff_EBP + 8);\n        pcStack16 = *(unaff_EBP + 0xc);\n        *(unaff_EBP + -4) = 2;\n        *ppcVar4 = vtable.CArchiveException.0;\n        ppcVar4[2] = pcVar1;\n        fcn.0043b6b7();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x10) = ppcVar4;\n    piStack28 = 0x443bb7;\n    fcn.004119cb(unaff_EBP + -0x10, 0x47ba28);\n    iVar9 = 0;\n    puVar10 = *(extraout_ECX + 8);\n    piStack32 = NULL;\n    piStack28 = NULL;\n    pcVar5 = pcStack16;\n    if (*pcStack16 == '\\\"') {\n        pcVar5 = pcStack16 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(&stack0xfffffdd8, pcVar5, 0x104);\n    puVar6 = fcn.0041221a(&stack0xfffffdd8, 0x22);\n    if (puVar6 != NULL) {\n        *puVar6 = 0;\n    }\n    fcn.0043c42e(&stack0xfffffedc, &stack0xfffffdd8);\n    puVar6 = &stack0xfffffcd4;\n    arg_14h = 0x104;\n    lpMultiByteStr = &stack0xfffffedc;\n    arg_8h = fcn.0040103c();\n    iVar7 = fcn.0043c30c(arg_8h, lpMultiByteStr, puVar6, arg_14h);\n    if (iVar7 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&stack0xfffffedc, &stack0xfffffcd4);\n    }\n    do {\n        if (puVar10 == NULL) break;\n        puVar2 = *puVar10;\n        piVar8 = puVar10[2];\n        iVar7 = (**(*piVar8 + 0x68))(&stack0xfffffedc, &stack0xffffffe4);\n        if (iVar9 < iVar7) {\n            iVar9 = iVar7;\n            piStack32 = piVar8;\n        }\n        puVar10 = puVar2;\n    } while (iVar7 != 5);\n    if (piStack28 == NULL) {\n        if (piStack32 == NULL) {\n            fcn.004458db(0xf101, 0, 0xffffffff);\n            piStack28 = NULL;\n        }\n        else {\n            piStack28 = (**(*piStack32 + 0x80))(&stack0xfffffedc, 1);\n        }\n    }\n    else {\n        pcStack16 = (**(*piStack28 + 0x60))();\n        if (pcStack16 != NULL) {\n            (**(*piStack28 + 100))(&stack0xfffffff0);\n            piVar8 = fcn.00438126();\n            if (piVar8 != NULL) {\n                (**(*piVar8 + 0xcc))(0xffffffff);\n            }\n            iVar9 = fcn.00456c34();\n            piVar3 = *(*(iVar9 + 4) + 0x1c);\n            if (piVar8 != piVar3) {\n                (**(*piVar3 + 0xcc))(0xffffffff);\n            }\n        }\n    }\n    return piStack28;\n}\n",
        "token_count": 1203
    },
    "0043e31f": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0043e31f(int32_t param_1)\n\n{\n    uint uStack4;\n    \n    if (param_1 < 0x17) {\n        if (param_1 == 0x16) {\n            return 10;\n        }\n        if (param_1 != 1) {\n            if (param_1 == 2) goto code_r0x0043e36f;\n            if (param_1 == 5) {\n                return 10;\n            }\n            if (param_1 == 9) {\n                return 6;\n            }\n            if (param_1 != 0xd) {\n                return 1;\n            }\n        }\n        uStack4 = 5;\n    }\n    else {\n        if (param_1 != 0x17) {\n            if (param_1 == 0x18) {\n                return 4;\n            }\n            if (param_1 != 0x1c) {\n                if (param_1 != 0x24) {\n                    return 1;\n                }\n                return 0xb;\n            }\n            return 0xd;\n        }\ncode_r0x0043e36f:\n        uStack4 = 2;\n    }\n    return uStack4;\n}\n",
        "token_count": 270
    },
    "0045b8e7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nuint32_t __cdecl fcn.0045b8e7(uint arg_8h, int32_t *lpWideCharStr, int32_t *lpNewFileName)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uint var_5ch;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_4h;\n    \n    piVar1 = lpNewFileName;\n    if (*lpWideCharStr != 0) goto code_r0x0045ba0b;\n    iVar4 = *lpNewFileName;\n    if (iVar4 == 1) {\ncode_r0x0045ba06:\n        *lpWideCharStr = iVar4;\n    }\n    else {\n        if (iVar4 == 2) {\n            *lpWideCharStr = 2;\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            iVar5 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(iVar4 * 2);\n            lpWideCharStr[1] = iVar5;\n            if (iVar5 != 0) {\n                fcn.00410d20(iVar5, lpNewFileName[1], iVar4 * 2 + 2);\n                return 1;\n            }\n            return 0;\n        }\n        if (iVar4 == 4) {\n            piVar1 = lpNewFileName[1];\n            lpWideCharStr[1] = piVar1;\n            (**(*piVar1 + 4))();\n            *lpWideCharStr = 4;\n            return 1;\n        }\n        if (iVar4 == 8) {\n            piVar1 = lpNewFileName[1];\n            lpWideCharStr[1] = piVar1;\n            (**(*piVar1 + 4))();\n            *lpWideCharStr = 8;\n            return 1;\n        }\n        if (iVar4 != 0x10) {\n            if (iVar4 == 0x20) {\n                iVar4 = fcn.0045b879(0, lpNewFileName[1]);\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n                iVar3 = (*_sym.imp.GDI32.dll_CopyMetaFileA)(*(iVar5 + 0xc), 0);\n                *(iVar5 + 0xc) = iVar3;\n                if (iVar3 == 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar4);\n                    return 0;\n                }\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n                lpWideCharStr[1] = iVar4;\n                *lpWideCharStr = 0x20;\n                return 1;\n            }\n            if (iVar4 != 0x40) {\n                return 0;\n            }\n            goto code_r0x0045ba06;\n        }\n        *lpWideCharStr = 0x10;\n    }\n    lpWideCharStr[1] = 0;\ncode_r0x0045ba0b:\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar4 = *lpNewFileName;\n    if (iVar4 == 1) {\n        iVar4 = fcn.0045b879(lpWideCharStr[1], lpNewFileName[1]);\n        if (iVar4 != 0) {\n            lpWideCharStr[1] = iVar4;\n            return 1;\n        }\n    }\n    else {\n        if (iVar4 == 2) {\n            iVar4 = lpWideCharStr[1];\n            if (iVar4 == 0) {\n                lpNewFileName = NULL;\n            }\n            else {\n                lpNewFileName = &stack0xffffff9c;\n                iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                fcn.00412040();\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                          (0, 0, iVar4, 0xffffffff, &stack0xffffff9c, iVar5 * 2 + 2, 0, 0);\n            }\n            iVar4 = piVar1[1];\n            if (iVar4 == 0) {\n                puVar7 = NULL;\n            }\n            else {\n                puVar7 = &stack0xffffff9c;\n                iVar5 = (*pcVar2)();\n                fcn.00412040();\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                          (0, 0, iVar4, 0xffffffff, &stack0xffffff9c, iVar5 * 2 + 2, 0, 0);\n            }\n            uVar6 = (*_sym.imp.KERNEL32.dll_CopyFileA)(puVar7, lpNewFileName);\n            return uVar6;\n        }\n        if (iVar4 == 4) {\n            iVar4 = (**(*lpNewFileName[1] + 0x30))(lpNewFileName[1], &var_50h);\n            if (iVar4 == 0) {\n                var_4h = 0;\n                (**(*lpWideCharStr[1] + 0x14))(lpWideCharStr[1], 0, 0, 0, 0);\n                (**(*lpNewFileName[1] + 0x14))(lpNewFileName[1], 0, 0, 0, 0);\n                iVar4 = (**(*lpNewFileName[1] + 0x1c))(lpNewFileName[1], lpWideCharStr[1], var_48h, var_44h, 0, 0);\n                if (iVar4 == 0) {\n                    (**(*lpWideCharStr[1] + 0x14))(lpWideCharStr[1], 0, 0, 0, 0);\n                    (**(*lpNewFileName[1] + 0x14))(lpNewFileName[1], 0, 0, 0, 0);\n                    return 1;\n                }\n            }\n        }\n        else {\n            if (iVar4 == 8) {\n                iVar4 = (**(*lpNewFileName[1] + 0x1c))(lpNewFileName[1], 0, 0, 0);\n                return iVar4 == 0;\n            }\n            if (((iVar4 == 0x10) || (iVar4 == 0x40)) && (lpWideCharStr[1] == 0)) {\n                iVar4 = (*_sym.imp.ole32.dll_OleDuplicateData)(lpNewFileName[1], arg_8h);\n                lpWideCharStr[1] = iVar4;\n                return iVar4 != 0;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1535
    },
    "00463d78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nint32_t __cdecl\nfcn.00463d78(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint arg_8h)\n\n{\n    uint *puVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    int32_t *piVar6;\n    int32_t unaff_EBP;\n    uint32_t uVar7;\n    uint *in_FS_OFFSET;\n    float10 fVar8;\n    uint lpString;\n    uint pvargDest;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_20h;\n    uint var_11h;\n    uint var_44h;\n    uint uStack60;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h_2;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x11) = 0;\n    iVar5 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    iVar3 = *(iVar5 + 8);\n    *(unaff_EBP + -0x10) = &var_34h;\n    *(unaff_EBP + 8) = iVar3;\n    if (iVar3 == 0) {\n        *(unaff_EBP + 8) = unaff_EBP + -0x11;\n    }\n    uStack60 = *(unaff_EBP + 8);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    *(unaff_EBP + -0x1c) = *(iVar5 + 0x10);\n    *(unaff_EBP + -0x18) = *(iVar5 + 0xc);\n    if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n        fcn.00412040();\n        fcn.00410d20(&uStack60, *(unaff_EBP + 8), iVar3);\n        iVar2 = *(iVar5 + 0xc);\n        *(unaff_EBP + 8) = &uStack60;\n        if (iVar2 == 8) {\n            iVar2 = 0xe;\n        }\n        *(&uStack60 + iVar3) = 0xff;\n        *(&uStack60 + iVar3 + 1) = iVar2;\n        *(&uStack60 + iVar3 + 2) = 0;\n        uVar4 = *(iVar5 + 0x14);\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    fcn.00412040();\n    *(unaff_EBP + 0xc) = &uStack60;\n    if (*0x10 != 0x3c) {\n        fcn.004108b0(&uStack60);\n        uVar4 = fcn.00463ab6();\n        fcn.00412040();\n        if (*0x10 != 0x44) {\n            iVar5 = fcn.00463af9(&stack0xffffffbc, *(unaff_EBP + 8), unaff_EBP + -0x34, *(unaff_EBP + -0x18), \n                                 *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), &uStack60);\n            piVar6 = NULL;\n            *(unaff_EBP + 0x18) = iVar5;\n            if (iVar5 == 0) {\n                iVar2 = *(unaff_EBP + -0x18);\n                *(unaff_EBP + -4) = 0;\n                if (iVar2 == 4) {\n                    fVar8 = fcn.00464a45(*(unaff_EBP + -0x1c), &stack0xffffffbc, uVar4);\n                    *(unaff_EBP + 8) = fVar8;\n                    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n                }\n                else {\n                    if (iVar2 == 5) {\n                        fVar8 = fcn.00464a45(*(unaff_EBP + -0x1c), &stack0xffffffbc, uVar4);\n                        *(unaff_EBP + -0x24) = fVar8;\n                    }\n                    else {\n                        if (iVar2 != 7) {\n                            piVar6 = fcn.00464a45(*(unaff_EBP + -0x1c), &stack0xffffffbc, uVar4);\n                            goto code_r0x00463ece;\n                        }\n                        fVar8 = fcn.00464a45(*(unaff_EBP + -0x1c), &stack0xffffffbc, uVar4);\n                        *(unaff_EBP + -0x24) = fVar8;\n                    }\n                    *(unaff_EBP + -0x34) = fVar8;\n                }\ncode_r0x00463ece:\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            iVar5 = *(unaff_EBP + 0x14);\n            uVar7 = 0;\n            if (*(iVar5 + 8) != 0) {\n                *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc);\n                do {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 0x10;\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < *(iVar5 + 8));\n            }\n            iVar5 = *(unaff_EBP + 0x18);\n            if (iVar5 != 0) goto code_r0x00463fc8;\n            puVar1 = *(unaff_EBP + 0x10);\n            if (puVar1 == NULL) {\n                iVar2 = *(unaff_EBP + -0x18);\n                if (iVar2 == 8) {\n                    if (piVar6 != NULL) {\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(piVar6);\n                    }\n                }\n                else if (iVar2 == 9) {\ncode_r0x00463faf:\n                    if (piVar6 != NULL) {\n                        (**(*piVar6 + 8))(piVar6);\n                    }\n                }\n                else if (iVar2 == 0xc) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x34);\n                }\n                else if (iVar2 == 0xd) goto code_r0x00463faf;\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x18);\n                *puVar1 = uVar7;\n    // switch table (17 cases) at 0x463fdc\n                switch(uVar7 & 0xffff) {\n                case 3:\n                case 8:\n                case 9:\n                case 10:\n                case 0xd:\n                    puVar1[2] = piVar6;\n                    break;\n                case 4:\n                    puVar1[2] = *(unaff_EBP + -0x34);\n                    break;\n                case 5:\n                case 7:\n                    *(puVar1 + 2) = *(unaff_EBP + -0x34);\n                    break;\n                case 6:\n                    puVar1[2] = *(unaff_EBP + -0x34);\n                    puVar1[3] = *(unaff_EBP + -0x30);\n                    break;\n                case 0xb:\n                    piVar6 = -(piVar6 != NULL);\n                case 2:\n                    *(puVar1 + 2) = piVar6;\n                    break;\n                case 0xc:\n                    *puVar1 = *(unaff_EBP + -0x34);\n                    puVar1[1] = *(unaff_EBP + -0x30);\n                    puVar1[2] = *(unaff_EBP + -0x2c);\n                    puVar1[3] = *(unaff_EBP + -0x28);\n                    break;\n                case 0x12:\n                    *(puVar1 + 2) = piVar6;\n                }\n            }\n            iVar5 = 0;\n            goto code_r0x00463fc8;\n        }\n    }\n    iVar5 = -0x7ff8fff2;\ncode_r0x00463fc8:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar5;\n}\n",
        "token_count": 2093
    },
    "004109a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004109a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00415790(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "00406d22": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406d22(int32_t *param_1, uint param_2)\n\n{\n    *param_1 = param_2;\n    param_1[1] = param_2 >> 0x10;\n    return;\n}\n",
        "token_count": 57
    },
    "0040c7eb": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.0040c7eb(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x400, 0, 0);\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar1 = uVar1 & 0xffff;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "004369a8": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.004369a8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0045744f(0x455298);\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x44) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x48) = uVar2;\n    *(iVar1 + 0x4c) = uVar2 >> 0x10;\n    return iVar1 + 0x34;\n}\n",
        "token_count": 139
    },
    "00436b58": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00436b58(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint hWnd)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint Msg;\n    uint wParam;\n    uint lParam;\n    uint var_10h;\n    uint var_30h;\n    uint var_1ch;\n    uint lpPrevWndFunc;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.00410d00();\n    uVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffb4;\n    uVar1 = (*_sym.imp.USER32.dll_GetPropA)(uVar2, \"AfxOldWndProc423\");\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = uVar1;\n    iVar3 = *(unaff_EBP + 0xc);\n    bVar4 = true;\n    if (iVar3 == 6) {\n        uVar1 = fcn.00436a76(*(unaff_EBP + 0x14));\n        arg_8h = fcn.00436a76(uVar2);\n        fcn.004367de(arg_8h, *(unaff_EBP + 0x10), uVar1);\ncode_r0x00436c5c:\n        if (!bVar4) goto code_r0x00436be9;\n    }\n    else {\n        if (iVar3 == 0x20) {\n            uVar1 = fcn.00436a76(uVar2);\n            iVar3 = fcn.0043683f(uVar1, *(unaff_EBP + 0x14), *(unaff_EBP + 0x14) >> 0x10);\n            bVar4 = iVar3 == 0;\n            goto code_r0x00436c5c;\n        }\n        if (iVar3 == 0x82) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(uVar2, 0xfffffffc, *(unaff_EBP + -0x18));\n            (*_sym.imp.USER32.dll_RemovePropA)(uVar2, \"AfxOldWndProc423\");\n            uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFindAtomA)(\"AfxOldWndProc423\");\n            (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar1);\n        }\n        else if (iVar3 == 0x110) {\n            uVar1 = fcn.00436a76(uVar2);\n            fcn.00436742(uVar1, unaff_EBP + -0x30, unaff_EBP + -0x1c);\n            uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                              (*(unaff_EBP + -0x18), uVar2, 0x110, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n            *(unaff_EBP + -0x14) = uVar2;\n            fcn.00436765(uVar1, unaff_EBP + -0x30);\n            goto code_r0x00436be9;\n        }\n    }\n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                      (*(unaff_EBP + -0x18), uVar2, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x14) = uVar2;\ncode_r0x00436be9:\n    uVar2 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 1004
    },
    "00438020": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438020(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.00437fed();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x00438064:\n            uVar1 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.0045744f(0x455298);\n        if ((*(iVar2 + 0xb8) != in_ECX[7]) && (iVar2 = fcn.004389f7(arg_ch, 0),  iVar2 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x00438064;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 357
    },
    "00438af6": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438af6(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.0043a2d7(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x00438b8a;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.0043a2d7(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x00438b8a:\n        uVar1 = fcn.00437a7b(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if ((0x131 < arg_8h) && (arg_8h < 0x139)) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.00437a7b(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 543
    },
    "0043b082": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.0043b082(int32_t param_1)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((((*(param_1 + 4) == 0x100) && (*(param_1 + 8) == 0x70)) && ((*(param_1 + 0xc) >> 0x10 & 0x4000) == 0)) &&\n       (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x10),  -1 < iVar2 && (iVar2 = (*pcVar1)(0x11),  -1 < iVar2)) &&\n        (iVar2 = (*pcVar1)(0x12),  -1 < iVar2)))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "0043b59c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043b59c(uint *param_1, uint32_t param_2)\n\n{\n    int32_t arg_10h;\n    \n    *param_1 = *0x480454;\n    if (param_2 != 0) {\n        if (param_2 >> 0x10 == 0) {\n            fcn.0043c737(param_2 & 0xffff);\n        }\n        else {\n            arg_10h = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2);\n            if (arg_10h != 0) {\n                fcn.0043b39b(arg_10h);\n                fcn.00410d20(*param_1, param_2, arg_10h);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 181
    },
    "0043ca60": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043ca60(uint lpString2, uint nNumber, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t var_80h;\n    uint var_70h;\n    uint var_69h;\n    uint lpString1;\n    int32_t lptm;\n    int32_t var_34h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n    fcn.004108b0(&var_80h, 0, 0x3c);\n    uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a, 0x48);\n    var_80h = (*_sym.imp.KERNEL32.dll_MulDiv)(nNumber, uVar4);\n    var_70h = 400;\n    var_80h = -var_80h;\n    var_69h._0_1_ = 1;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, lpString2);\n    iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_80h);\n    pcVar2 = _sym.imp.USER32.dll_GetDialogBaseUnits;\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    if (iVar5 == 0) {\n        uVar6 = (*_sym.imp.USER32.dll_GetDialogBaseUnits)();\n        uVar6 = uVar6 & 0xffff;\n        uVar7 = (*pcVar2)();\n        uVar7 = uVar7 >> 0x10;\n    }\n    else {\n        uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(uVar3, iVar5);\n        (*_sym.imp.GDI32.dll_GetTextMetricsA)(uVar3, &lptm);\n        uVar7 = var_34h + lptm;\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)\n                  (uVar3, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 0x34, &var_ch);\n        var_4h = (var_ch + 0x1a) / 0x34;\n        (*pcVar1)(uVar3, uVar4);\n        (*_sym.imp.GDI32.dll_DeleteObject)(iVar5);\n        uVar6 = var_4h;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_10h, uVar6, 4);\n    *arg_18h = uVar3;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_14h, uVar7, 8);\n    arg_18h[1] = uVar3;\n    return;\n}\n",
        "token_count": 701
    },
    "0044680f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044680f(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint var_14h;\n    char var_ch;\n    uint var_bh;\n    \n    fcn.00446625(arg_8h, &var_14h);\n    cVar1 = arg_ch >> 0x10;\n    if ((var_bh != arg_ch) || (var_ch != cVar1)) {\n        var_ch = cVar1;\n        var_bh._0_1_ = arg_ch;\n        fcn.00446644(arg_8h, &var_14h);\n        *(in_ECX + 0x84) = 1;\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00446fd2": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00446fd2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uchar var_ch;\n    uint var_bh;\n    \n    fcn.00446625(arg_8h, &var_14h);\n    fcn.00410d20(&var_28h, &var_14h, 0x14);\n    var_10h = arg_ch;\n    var_14h = arg_14h;\n    var_bh._0_1_ = arg_10h;\n    var_ch = arg_10h >> 0x10;\n    iVar1 = fcn.00411a10(&var_28h, &var_14h, 0x14);\n    if (iVar1 != 0) {\n        fcn.00446644(arg_8h, &var_14h);\n        *(in_ECX + 0x84) = 1;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00447436": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00447436(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    uVar2 = 0;\n    if (0x40046 < *0x4805c8) {\n        uVar2 = fcn.00439ddc();\n        iVar3 = fcn.00439e10(0, 0x8800, 0);\n    }\n    iVar1 = fcn.004369dd();\n    if (iVar1 != 0) {\n        *arg_8h = arg_ch;\n        arg_8h[1] = arg_ch >> 0x10;\n    }\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(in_ECX + 0x1c), 0xfffffff0, uVar2);\n    }\n    return iVar1;\n}\n",
        "token_count": 234
    },
    "0044898b": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0044898b(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(*(param_1 + 0x80) + param_2 * 4);\n    return uVar1 & -(uVar1 >> 0x10 != 0);\n}\n",
        "token_count": 82
    },
    "0045532d": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0045532d(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint lpvBits;\n    int32_t nHeight;\n    int32_t var_8h;\n    uint8_t *var_4h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar5 = uVar2;\n    nHeight = uVar2 >> 0x10;\n    if (0x20 < iVar5) {\n        iVar5 = 0x20;\n    }\n    iVar6 = iVar5 + 0xf >> 4;\n    iVar7 = ((iVar5 + -4) / 2 + iVar6 * 0x10) - iVar5;\n    if (0xc < iVar7) {\n        iVar7 = 0xc;\n    }\n    if (0x20 < nHeight) {\n        nHeight = 0x20;\n    }\n    fcn.004108b0(&lpvBits, 0xff, 0x80);\n    var_4h = 0x46d31c;\n    var_8h = 5;\n    puVar4 = &lpvBits + (nHeight + -6 >> 1) * iVar6 * 2;\n    do {\n        uVar1 = *var_4h;\n        uVar3 = var_4h & 0xffff0000;\n        var_4h = var_4h + 1;\n        uVar3 = ~((uVar3 | uVar1) << (iVar7 & 0x1f));\n        puVar4[1] = uVar3;\n        *puVar4 = uVar3 >> 8;\n        puVar4 = puVar4 + iVar6 * 2;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    *0x485980 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar5, nHeight, 1, 1, &lpvBits);\n    if (*0x485980 == 0) {\n        *0x485980 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "00447dd4": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447dd4(int32_t arg_8h, int32_t lprcSrc)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint arg_ch;\n    uint var_12ch;\n    uint lpRect;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t lprcDst;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(*(arg_8h + 0x1c), &lpRect);\n    if (*(arg_8h + 0x70) == in_ECX) {\n        if (lprcSrc == 0) {\n            return;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprcSrc);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    if ((*(in_ECX + 0x78) != 0) && ((*(arg_8h + 0x68) & 0x40) != 0)) {\n        *(in_ECX + 100) = *(in_ECX + 100) | 0x40;\n    }\n    *(in_ECX + 100) = *(in_ECX + 100) & 0xfffffff9;\n    uVar4 = *(in_ECX + 100);\n    *(in_ECX + 100) = *(arg_8h + 100) & 6 | uVar4;\n    if ((uVar4 & 0x40) == 0) {\n        fcn.00439e99(&var_12ch, 0x104);\n        fcn.00441aba(*(in_ECX + 0x1c), &var_12ch);\n    }\n    uVar4 = *(arg_8h + 100);\n    uVar2 = uVar4 >> 8;\n    uVar1 = CONCAT11((*(in_ECX + 100) >> 8 ^ uVar2) & 0xf0 ^ uVar2, uVar4);\n    if (*(in_ECX + 0x78) == 0) {\n        uVar4 = uVar4 & 0xffff0000 | uVar1 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar4 = uVar4 & 0xffff0000 | uVar1 | 0xf01;\n    }\n    fcn.0045688e(uVar4);\n    var_18h = 0;\n    if ((*(arg_8h + 0x70) != in_ECX) && (iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(arg_8h + 0x1c)),  iVar3 != 0))\n    {\n        fcn.00439f68(0, 0, 0, 0, 0, 0x97);\n        var_18h = 1;\n    }\n    var_14h = 0xffffffff;\n    if (lprcSrc == 0) {\n        fcn.00433040(*(in_ECX + 0x84), arg_8h);\n        fcn.00433040(*(in_ECX + 0x84), 0);\n        fcn.00439f68(0, -*0x485940, -*0x485944, 0, 0, 0x115);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, lprcSrc);\n        fcn.0044272e(&lprcDst);\n        var_14h = fcn.004489a7(arg_8h, lprcDst, var_ch, var_8h, var_4h, (var_8h - lprcDst) / 2 + lprcDst, \n                               (var_4h - var_ch) / 2 + var_ch);\n        fcn.00439f68(0, lprcDst, var_ch, var_8h - lprcDst, var_4h - var_ch, 0x114);\n    }\n    uVar5 = (*_sym.imp.USER32.dll_GetParent)(*(arg_8h + 0x1c));\n    iVar3 = fcn.00436a76(uVar5);\n    if (iVar3 != in_ECX) {\n        if (in_ECX == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = *(in_ECX + 0x1c);\n        }\n        uVar5 = (*_sym.imp.USER32.dll_SetParent)(*(arg_8h + 0x1c), uVar5);\n        fcn.00436a76(uVar5);\n    }\n    iVar3 = *(arg_8h + 0x70);\n    if (iVar3 == in_ECX) {\n        uVar5 = 0;\n        arg_ch = var_14h;\n    }\n    else {\n        if (iVar3 == 0) goto code_r0x00447fcc;\n        if ((*(in_ECX + 0x78) == 0) || (*(iVar3 + 0x78) != 0)) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = 1;\n        }\n        arg_ch = 0xffffffff;\n    }\n    fcn.00448247(arg_8h, arg_ch, uVar5);\ncode_r0x00447fcc:\n    *(arg_8h + 0x70) = in_ECX;\n    if (var_18h != 0) {\n        fcn.00439f68(0, 0, 0, 0, 0, 0x57);\n    }\n    fcn.004481e6(arg_8h);\n    iVar3 = fcn.00451067();\n    *(iVar3 + 0xb8) = *(iVar3 + 0xb8) | 0xc;\n    return;\n}\n",
        "token_count": 1364
    },
    "004651de": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.004651de(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2h;\n    \n    if ((arg_10h & 0x4000) != 0) {\n        arg_10h._0_2_ = arg_10h & 0xbfff | 0x40;\n    }\n    if (arg_10h == 8) {\n        arg_10h._0_2_ = 0xe;\n    }\n    fcn.00464c7b(arg_ch, ((arg_10h != 9) - 1 & 4) + 4, 0, 0, &var_2h, &arg_14h);\n    return;\n}\n",
        "token_count": 187
    },
    "00409e4b": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409e4b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t **in_ECX;\n    uint var_8h;\n    int32_t **var_4h;\n    \n    var_8h = 0;\n    fcn.00409852();\n    var_4h = in_ECX + 3;\n    iVar1 = (**(**in_ECX + 0x14))(*in_ECX, 0, arg_8h, (-(arg_ch != '\\0') & 2) - 1, &var_8h, &var_4h);\n    if ((iVar1 == 0) && (iVar1 = fcn.00409ea4(),  iVar1 < 0)) {\n        fcn.00409852();\n    }\n    return iVar1;\n}\n",
        "token_count": 191
    },
    "0040a21d": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a21d(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = (**(*arg_18h + 0x10))(arg_18h, (-(*(arg_8h + 0x24) != 0) & 2U) + 2, arg_ch, arg_8h, arg_14h, arg_10h, 0);\n    if (0 < arg_ch) {\n        puVar2 = arg_8h + 0x14;\n        do {\n            fcn.0043a720(*puVar2);\n            puVar2 = puVar2 + 0xd;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 212
    },
    "0043cd53": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t fcn.0043cd53(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = *(param_1 + 2) == -1;\n    iVar1 = fcn.0043ccfd(param_1);\n    if (*(param_1 + 2) == -1) {\n        uVar5 = param_1[3];\n    }\n    else {\n        uVar5 = *param_1;\n    }\n    if ((uVar5 & 0x40) != 0) {\n        iVar1 = iVar1 + ((-bVar6 & 2) + 1) * 2;\n        iVar2 = fcn.00411da6(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        uVar4 = *(param_1 + 4);\n    }\n    else {\n        uVar4 = *(param_1 + 2);\n    }\n    if (uVar4 != 0) {\n        uVar5 = uVar4;\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar5 = uVar5 - 1;\n            iVar1 = puVar3 + *puVar3 + 2;\n        } while (uVar5 != 0);\n    }\n    return iVar1 - param_1;\n}\n",
        "token_count": 515
    },
    "0043ce0b": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint fcn.0043ce0b(uint32_t *param_1, uint param_2, ushort *param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint uVar4;\n    \n    if (*(param_1 + 2) == -1) {\n        uVar2 = param_1[3];\n    }\n    else {\n        uVar2 = *param_1;\n    }\n    if ((uVar2 & 0x40) == 0) {\n        return 0;\n    }\n    puVar3 = fcn.0043ccfd(param_1);\n    *param_3 = *puVar3;\n    iVar1 = *(param_1 + 2);\n    uVar4 = fcn.0043b9d5(0x20, 0x20, 0, 0);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + ((iVar1 != -1) - 1 & 2) + 1, 0xffffffff, uVar4);\n    fcn.0043b9ad(0xffffffff);\n    return 1;\n}\n",
        "token_count": 265
    },
    "0044ac44": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ac44(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint uVar5;\n    uint lprcSrc1;\n    int32_t lprcSrc2;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint lprcDst;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h - *(in_ECX + 4);\n    iVar4 = arg_ch - *(in_ECX + 8);\n    iVar2 = *(in_ECX + 0x8c);\n    uVar5 = 2;\n    if (iVar2 == 10) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + iVar1;\n    }\n    else {\n        if (iVar2 != 0xb) {\n            uVar5 = 0x22;\n            if (iVar2 == 0xc) {\n                *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + iVar4;\n            }\n            else {\n                *(in_ECX + 0x34) = *(in_ECX + 0x34) + iVar4;\n            }\n            iVar2 = *(in_ECX + 0x34) - *(in_ECX + 0x2c);\n            goto code_r0x0044ac9c;\n        }\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + iVar1;\n    }\n    iVar2 = *(in_ECX + 0x30) - *(in_ECX + 0x28);\ncode_r0x0044ac9c:\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    piVar3 = (**(**(in_ECX + 0x68) + 0xbc))(&var_10h, iVar2, uVar5);\n    var_8h = *piVar3;\n    var_4h = piVar3[1];\n    uVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar5, &lprcSrc1);\n    lprcSrc2 = *(in_ECX + 0x48);\n    var_24h = *(in_ECX + 0x4c);\n    var_20h = *(in_ECX + 0x50);\n    var_1ch = *(in_ECX + 0x54);\n    if ((*(in_ECX + 0x8c) == 10) || (*(in_ECX + 0x8c) == 0xc)) {\n        lprcSrc2 = ((*(in_ECX + 0x58) - *(in_ECX + 0x60)) - var_8h) + var_20h;\n        var_24h = ((*(in_ECX + 0x5c) - *(in_ECX + 100)) - var_4h) + var_1ch;\n        iVar2 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar2 != 0) {\n            *(in_ECX + 0x38) = *(in_ECX + 0x40) - var_8h;\n            *(in_ECX + 0x3c) = *(in_ECX + 0x44) - var_4h;\n            *(in_ECX + 0x48) = lprcSrc2;\n            *(in_ECX + 0x4c) = var_24h;\n        }\n    }\n    else {\n        var_20h = (*(in_ECX + 0x60) - *(in_ECX + 0x58)) + lprcSrc2 + var_8h;\n        var_1ch = (*(in_ECX + 100) - *(in_ECX + 0x5c)) + var_24h + var_4h;\n        iVar2 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar2 != 0) {\n            *(in_ECX + 0x40) = *(in_ECX + 0x38) + var_8h;\n            *(in_ECX + 0x44) = *(in_ECX + 0x3c) + var_4h;\n            *(in_ECX + 0x50) = var_20h;\n            *(in_ECX + 0x54) = var_1ch;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    fcn.0044afd2(0);\n    return;\n}\n",
        "token_count": 1142
    },
    "004429d5": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004429d5(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_10h + 4);\n    if (uVar1 < 0x20c) {\n        if (uVar1 == 0x20b) {\n            fcn.00442266(&var_10h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x1e) {\n            (**(*arg_18h + 0x1c))();\n            return 1;\n        }\n        if (uVar1 == 0x103) {\n            (**(*arg_18h + 0x34))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x127) {\n            (**(*arg_18h + 0x20))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x12d) {\n            uVar5 = *(arg_ch + *(arg_10h + 6) * 4);\n            iVar3 = (*_sym.imp.GDI32.dll_GetObjectType)(uVar5);\n            if (iVar3 == 0) {\n                var_4h = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(arg_18h[1], var_4h);\n                var_8h = (*pcVar2)(arg_18h[1], uVar5);\n                if (var_8h == var_4h) {\n                    iVar3 = *arg_18h;\n                    uVar5 = fcn.00442fb3(uVar5);\n                    (**(iVar3 + 0x28))(uVar5);\n                    return 1;\n                }\n                (*pcVar2)(arg_18h[1], uVar4);\n                (*pcVar2)(arg_18h[1], var_8h);\n            }\n            else if (iVar3 == 6) {\n                iVar3 = *arg_18h;\n                uVar5 = fcn.00442fb3(uVar5);\n                (**(iVar3 + 0x28))(uVar5);\n                return 1;\n            }\n        }\n        else {\n            if (uVar1 == 0x201) {\n                (**(*arg_18h + 0x2c))(*(arg_10h + 6));\n                return 1;\n            }\n            if (uVar1 == 0x209) {\n                (**(*arg_18h + 0x30))(*(arg_10h + 6));\n                return 1;\n            }\n        }\n    }\n    else {\n        if (uVar1 == 0x20c) {\n            (**(*arg_18h + 0x48))(&var_40h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20d) {\n            (**(*arg_18h + 0x38))(&var_38h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20e) {\n            (**(*arg_18h + 0x40))(&var_30h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x211) {\n            (**(*arg_18h + 0x3c))(&var_28h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x410) {\n            (**(*arg_18h + 0x4c))(&var_20h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x412) {\n            (**(*arg_18h + 0x44))(&var_18h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n    }\n    (*_sym.imp.GDI32.dll_PlayMetaFileRecord)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return 1;\n}\n",
        "token_count": 1180
    },
    "00451038": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00451038(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x1c));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0043114c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043114c(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t var_18h;\n    uint var_10h;\n    uint32_t lpPoint;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    puVar3 = arg_ch;\n    puVar4 = &var_24h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_24h = (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x1c), 0x410, 0, &var_10h);\n    lpPoint = arg_ch[5];\n    var_4h = arg_ch[6];\n    if ((0x1ff < var_20h) && (var_20h < 0x20a)) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(var_24h, &lpPoint);\n    }\n    var_18h = lpPoint & 0xffff | var_4h << 0x10;\n    (*pcVar1)(*(arg_8h + 0x1c), 0x407, 0, &var_24h);\n    return;\n}\n",
        "token_count": 371
    },
    "004467ec": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004467ec(uint arg_8h)\n\n{\n    uint var_14h;\n    uint var_ch;\n    \n    fcn.00446625(arg_8h, &var_14h);\n    return var_ch << 0x10 | var_ch._1_1_;\n}\n",
        "token_count": 78
    },
    "00446f9a": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00446f9a(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    fcn.00446625(arg_8h, &var_14h);\n    *arg_ch = var_10h;\n    *arg_10h = var_ch << 0x10 | var_ch._1_1_;\n    *arg_14h = var_14h;\n    return;\n}\n",
        "token_count": 136
    },
    "00450f45": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00450f45(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar7 = 8;\n    }\n    else {\n        uVar7 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar3 = 4;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar4 == 0) {\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n    }\n    else {\n        do {\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4);\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            if (iVar4 == 0) {\n                return 0;\n            }\n        } while (iVar4 != iVar5);\n    }\n    return iVar6;\n}\n",
        "token_count": 420
    },
    "00455f00": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455f00(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x1c));\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        *(in_ECX + 0x90) = arg_8h;\n        *(in_ECX + 0x94) = arg_ch;\n        *(in_ECX + 0x88) = arg_10h;\n        *(in_ECX + 0x8c) = arg_14h;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x420, 0, arg_10h & 0xffff | arg_14h << 0x10);\n        (*pcVar1)(*(in_ECX + 0x1c), 0x41f, 0, arg_8h & 0xffff | arg_ch << 0x10);\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "0040e727": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e727(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    float10 extraout_ST0;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*0x46fd50 < _arg_8h) || (_arg_8h < *0x46fd48)) {\n        return 0;\n    }\n    bVar1 = true;\n    iVar2 = fcn.00413f50();\n    fcn.00414215(SUB84(extraout_ST0, 0), extraout_ST0 >> 0x20);\n    fcn.00414146();\n    iVar3 = fcn.00413f50();\n    arg_10h[6] = (iVar2 + 0xa96c6) % 7 + 1;\n    iVar6 = (iVar2 + 0xa96c7) % 0x23ab1;\n    iVar4 = (iVar6 + -1) / 0x8eac;\n    if (iVar4 == 0) {\n        var_4h = iVar6 / 0x5b5;\ncode_r0x0040e874:\n        iVar6 = iVar6 % 0x5b5;\n        iVar7 = iVar6 + -1;\n        iVar5 = iVar7 / 0x16d;\n        if (iVar5 != 0) goto code_r0x0040e822;\n    }\n    else {\n        iVar7 = (iVar6 + -1) % 0x8eac;\n        iVar6 = iVar7 + 1;\n        var_4h = iVar6 / 0x5b5;\n        if (var_4h != 0) goto code_r0x0040e874;\n        bVar1 = false;\n        iVar5 = iVar7 / 0x16d;\ncode_r0x0040e822:\n        iVar6 = iVar7 % 0x16d;\n    }\n    arg_10h[7] = iVar6 + 1;\n    arg_10h[5] = iVar5 + ((iVar4 + ((iVar2 + 0xa96c7) / 0x23ab1) * 4) * 0x19 + var_4h) * 4;\n    if ((iVar5 == 0) && (bVar1)) {\n        if (iVar6 == 0x3b) {\n            arg_10h[4] = 2;\n            arg_10h[3] = 0x1d;\n            goto code_r0x0040e8c3;\n        }\n        if (0x3b < iVar6) {\n            iVar6 = iVar6 + -1;\n        }\n    }\n    iVar6 = iVar6 + 1;\n    iVar2 = (iVar6 >> 5) + 1;\n    arg_10h[4] = iVar2;\n    while (*(iVar2 * 4 + 0x480f5c) < iVar6) {\n        arg_10h[4] = arg_10h[4] + 1;\n        iVar2 = arg_10h[4];\n    }\n    arg_10h[3] = iVar6 - *(arg_10h[4] * 4 + 0x480f58);\ncode_r0x0040e8c3:\n    if (iVar3 == 0) {\n        *arg_10h = 0;\n        arg_10h[1] = 0;\n        arg_10h[2] = 0;\n    }\n    else {\n        *arg_10h = iVar3 % 0x3c;\n        arg_10h[1] = (iVar3 / 0x3c) % 0x3c;\n        arg_10h[2] = (iVar3 / 0x3c) / 0x3c;\n    }\n    return 1;\n}\n",
        "token_count": 920
    },
    "004102f9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nushort * fcn.004102f9(ushort *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    if (param_2 == 0) {\n        return NULL;\n    }\n    *param_1 = 0;\n    (*pcVar1)(0, 0, param_2, 0xffffffff, param_1, 0x40);\n    fcn.00410d20(param_1 + 0x20, param_2 + 0x20, 0x26);\n    param_1[0x33] = 0;\n    (*pcVar1)(0, 0, param_2 + 0x46, 0xffffffff, param_1 + 0x33, 0x40);\n    fcn.00410d20(param_1 + 0x53, param_2 + 0x66, 0x2e);\n    if (*(param_2 + 0x26) != 0) {\n        fcn.00410d20(param_1 + 0x6a, param_2 + 0x94, *(param_2 + 0x26));\n    }\n    param_1[0x22] = 0xd4;\n    return param_1;\n}\n",
        "token_count": 298
    },
    "0041038a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuchar * fcn.0041038a(uchar *param_1, int32_t param_2)\n\n{\n    if (param_2 == 0) {\n        param_1 = NULL;\n    }\n    else {\n        *param_1 = 0;\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_2, 0xffffffff, param_1, 0x20, 0, 0);\n        fcn.00410d20(param_1 + 0x20, param_2 + 0x40, 0x26);\n        param_1[0x46] = 0;\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_2 + 0x66, 0xffffffff, param_1 + 0x46, 0x20, 0, 0);\n        fcn.00410d20(param_1 + 0x66, param_2 + 0xa6, 0x2e);\n        if (*(param_2 + 0x46) != 0) {\n            fcn.00410d20(param_1 + 0x94, param_2 + 0xd4, *(param_2 + 0x46));\n        }\n        *(param_1 + 0x24) = 0x94;\n    }\n    return param_1;\n}\n",
        "token_count": 312
    },
    "00422427": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\ncode ** __cdecl fcn.00422427(uint arg_8h)\n\n{\n    uchar *arg_8h_00;\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_20h;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.004011d6(0);\n    uVar1 = fcn.004107a0(\"string too long\");\n    fcn.0040121c(\"string too long\", uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.00422481(unaff_EBP + -0x20);\n    *(unaff_EBP + -0x3c) = vtable.std::length_error.0;\n    fcn.004119cb(unaff_EBP + -0x3c, 0x47c6c8);\n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0x483bd0;\n    fcn.00423e85(unaff_EBP + -0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = *arg_8h_00;\n    fcn.004011d6(0);\n    fcn.004012c1(arg_8h_00, 0, *0x46c258);\n    uVar1 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 467
    },
    "00422653": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid fcn.00422653(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.004011d6(0);\n    uVar1 = fcn.004107a0(\"invalid string position\");\n    fcn.0040121c(\"invalid string position\", uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.00422481(unaff_EBP + -0x20);\n    arg_8h = unaff_EBP + -0x3c;\n    *(unaff_EBP + -0x3c) = vtable.std::out_of_range.0;\n    fcn.004119cb(arg_8h, 0x47c7f0);\n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::logic_error.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004011d6(1, arg_8h, extraout_ECX);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00423f2b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 387
    },
    "00436ffe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.00436ffe(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpWindowName;\n    uint lpClassName;\n    uint dwExStyle;\n    \n    dwExStyle = arg_8h;\n    lpClassName = arg_ch;\n    lpWindowName = arg_10h;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00456c34();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 0x5c))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0xa4))();\n        bVar3 = false;\n    }\n    else {\n        fcn.00436f29();\n        iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (dwExStyle, lpClassName, lpWindowName, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, \n                           var_28h, var_2ch, var_30h);\n        iVar2 = fcn.00436f75();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0xa4))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 526
    },
    "0043775f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043775f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpWndClass;\n    uint var_ah;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffc4;\n    iVar4 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar1 + 0x10), *(iVar1 + 0x24), unaff_EBP + -0x38);\n    if (iVar4 == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_RegisterClassA)(iVar1);\n        if (iVar3 == 0) {\n            uVar5 = 0;\n            goto code_r0x004377df;\n        }\n        iVar4 = fcn.00456c34();\n        if (*(iVar4 + 0x14) != '\\0') {\n            fcn.00457a83(1);\n            *(unaff_EBP + -4) = 0;\n            iVar4 = fcn.00456c34();\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(iVar4 + 0x34, *(iVar1 + 0x24));\n            *(unaff_EBP + 10) = 10;\n            *(unaff_EBP + 0xb) = 0;\n            (*pcVar2)(iVar4 + 0x34, unaff_EBP + 10);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00457af3(1);\n        }\n    }\n    uVar5 = 1;\ncode_r0x004377df:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 571
    },
    "004347a2": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004347a2(int32_t param_1, char *param_2, uint32_t *param_3)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char cVar4;\n    char *pcVar5;\n    uint *puVar6;\n    \n    uVar2 = 0;\n    cVar4 = *param_2;\n    pcVar5 = param_2;\n    while (cVar4 != '\\0') {\n        uVar2 = uVar2 * 0x21 + cVar4;\n        pcVar1 = pcVar5 + 1;\n        pcVar5 = pcVar5 + 1;\n        cVar4 = *pcVar1;\n    }\n    uVar2 = uVar2 % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar6 = *(*(param_1 + 4) + uVar2 * 4); puVar6 != NULL; puVar6 = *puVar6) {\n            iVar3 = fcn.0041191c(puVar6[2], param_2);\n            if (iVar3 == 0) {\n                return puVar6;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 301
    },
    "0043b41d": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b41d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 8);\n    if ((((iVar1 != 0x40) && (iVar1 != 0x80)) && (iVar1 != 0x100)) && (iVar1 != 0x200)) {\n        fcn.0043a720(param_1);\n        return;\n    }\n    fcn.00407205(param_1);\n    return;\n}\n",
        "token_count": 114
    },
    "00441ba2": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00441ba2(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004577e5": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.004577e5(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    *0x485984 = (uVar2 >> 8 & 0xff) + (uVar2 & 0xff) * 0x100;\n    *0x485988 = uVar2 >> 0x1f;\n    *0x48598c = 3 < uVar2;\n    *0x485990 = 1 - *0x48598c;\n    *0x485998 = 0;\n    *0x485994 = *0x48598c;\n    if (*0x48598c != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessVersion)(0);\n        *0x485998 = 0x3ffff < uVar2;\n    }\n    fcn.0043d444();\n    *0x485954 = 0;\n    fcn.0043d400();\n    pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n    *0x48596c = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n    *0x485970 = (*pcVar1)(0, 0x7f00);\n    *0x485940 = (*0x48598c != 0) + 1;\n    *0x485944 = *0x485940;\n    *0x485974 = 0;\n    *0x485980 = 0;\n    return 0x485930;\n}\n",
        "token_count": 358
    },
    "00456383": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456383(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint lprc;\n    \n    uVar2 = CONCAT31(arg_10h >> 8 & 0xffbf00, 0x4e);\n    *(in_ECX + 100) = arg_10h & 0x40ffff;\n    uVar1 = fcn.00439ddc();\n    if ((uVar1 & 0x40000) != 0) {\n        uVar2 = uVar2 | 0x100;\n    }\n    fcn.0043970d(0x1000);\n    (*_sym.imp.USER32.dll_SetRectEmpty)(&lprc);\n    fcn.004370e4(\"msctls_statusbar32\", 0, arg_ch | uVar2, &lprc, arg_8h, arg_14h, 0);\n    return;\n}\n",
        "token_count": 242
    },
    "00401019": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401019(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    *param_1 = ((param_3 + param_2 * 0x18) * 0x3c + param_4) * 0x3c + param_5;\n    return;\n}\n",
        "token_count": 94
    },
    "0040101e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040101e(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    int32_t in_FS_OFFSET;\n    \n    puVar3 = *(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0x14);\n    do {\n        iVar2 = 0x18;\n        uVar5 = 0;\n        puVar4 = puVar3[10];\n        do {\n            uVar1 = *puVar4;\n            if ('`' < uVar1) {\n                uVar1 = uVar1 - 0x20;\n            }\n            uVar5 = (uVar5 >> 0xd | uVar5 << 0x13) + uVar1;\n            iVar2 = iVar2 + -1;\n            puVar4 = puVar4 + 1;\n        } while (iVar2 != 0);\n        puVar3 = *puVar3;\n    } while (uVar5 != *0x483ba4);\n    return;\n}\n",
        "token_count": 247
    },
    "00401023": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nuint32_t __cdecl fcn.00401023(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    int32_t arg_8h_00;\n    uint *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = fcn.00410d00();\n    if (*(unaff_EBP + 0x10) != 0) {\n        iVar4 = fcn.0040110e(unaff_EBP + -0x2c, 0xee, 0);\n        iVar4 = *(iVar4 + 4);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = 0x46c194;\n        if (iVar4 != 0) {\n            arg_8h_00 = iVar4;\n        }\n        iVar4 = fcn.0040110e(unaff_EBP + -0x1c, 0xe9, 0);\n        iVar4 = *(iVar4 + 4);\n        *(unaff_EBP + -4) = 1;\n        iVar6 = 0x46c194;\n        if (iVar4 != 0) {\n            iVar6 = iVar4;\n        }\n        uVar5 = fcn.00401122(arg_8h_00);\n        uVar5 = fcn.004010e6(iVar6, uVar5);\n        *(unaff_EBP + -0x3c) = uVar5;\n        *(unaff_EBP + -4) = 0;\n        fcn.00401294(1);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00401294(1);\n        piVar1 = *(unaff_EBP + 0xc);\n        uVar3 = (**(unaff_EBP + -0x3c))(*(unaff_EBP + 0x10), *(unaff_EBP + 0x14), 1, 0, piVar1, 0, 0);\n        if (uVar3 != 0) {\n            uVar3 = fcn.0041081b(*piVar1 + 1);\n            puVar2 = *(unaff_EBP + 8);\n            *puVar2 = uVar3;\n            if (uVar3 != 0) {\n                fcn.004108b0(uVar3, 0, *piVar1 + 1);\n                uVar3 = (**(unaff_EBP + -0x3c))(*(unaff_EBP + 0x10), *(unaff_EBP + 0x14), 1, *puVar2, piVar1, 0, 0);\n                uVar3 = uVar3 & 0xffffff00 | uVar3 != 0;\n                goto code_r0x00401be1;\n            }\n        }\n    }\n    uVar3 = uVar3 & 0xffffff00;\ncode_r0x00401be1:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 773
    },
    "00401041": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401041(uint param_1, int16_t param_2)\n\n{\n    fcn.0043a08a(param_1, 0x18, 2, param_2);\n    return;\n}\n",
        "token_count": 53
    },
    "0040107d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040107d(uint param_1, uint param_2)\n\n{\n    fcn.0043a08a(param_1, 9, 0xb, param_2);\n    return;\n}\n",
        "token_count": 51
    },
    "004010c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004010c3(uint param_1, int16_t param_2)\n\n{\n    fcn.0043a08a(param_1, 4, 2, param_2);\n    return;\n}\n",
        "token_count": 52
    },
    "004010f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004010f5(uint param_1, uint param_2)\n\n{\n    fcn.0043a08a(param_1, 10, 3, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "00401109": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401109(uint param_1, uint param_2)\n\n{\n    fcn.0043a08a(param_1, 0x14, 0xb, param_2);\n    return;\n}\n",
        "token_count": 52
    },
    "0040114a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040114a(uint param_1, uint param_2)\n\n{\n    fcn.0043a08a(param_1, 0x17, 8, param_2);\n    return;\n}\n",
        "token_count": 52
    },
    "00401177": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401177(uint param_1, int16_t param_2)\n\n{\n    fcn.0043a08a(param_1, 0x15, 2, param_2);\n    return;\n}\n",
        "token_count": 53
    },
    "00401181": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nuint32_t fcn.00401181(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    int32_t arg_8h;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar1 = fcn.0040110e(unaff_EBP + -0x30, 0xed, 0);\n    iVar1 = *(iVar1 + 4);\n    *(unaff_EBP + -4) = 0;\n    arg_8h = 0x46c194;\n    if (iVar1 != 0) {\n        arg_8h = iVar1;\n    }\n    iVar1 = fcn.0040110e(unaff_EBP + -0x20, 0xea, 0);\n    iVar1 = *(iVar1 + 4);\n    *(unaff_EBP + -4) = 1;\n    iVar5 = 0x46c194;\n    if (iVar1 != 0) {\n        iVar5 = iVar1;\n    }\n    uVar2 = fcn.00401122(arg_8h);\n    pcVar3 = fcn.004010e6(iVar5, uVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.00401294(1);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401294(1);\n    *(unaff_EBP + -0x10) = 0;\n    uVar4 = (*pcVar3)(unaff_EBP + -0x10, 0, 0, 1, 0);\n    if (uVar4 != 0) {\n        iVar1 = (*pcVar3)(unaff_EBP + -0x10, 0, 0, 1, 8);\n        uVar4 = iVar1 != 0;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 513
    },
    "004011cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004011cc(int32_t *param_1, int32_t *param_2, int32_t param_3)\n\n{\n    *param_2 = *param_1 + param_3;\n    return;\n}\n",
        "token_count": 54
    },
    "004011e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004011e5(uint param_1, uint param_2)\n\n{\n    fcn.0043a08a(param_1, 0x13, 8, param_2);\n    return;\n}\n",
        "token_count": 52
    },
    "0040120d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0040120d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    ushort *puVar4;\n    int32_t extraout_ECX;\n    ushort *puVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint32_t uVar7;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    uVar7 = *(unaff_EBP + 8) | 0x1f;\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (0x7ffffffd < uVar7) {\n        uVar7 = *(unaff_EBP + 8);\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar2 = uVar7 + 2;\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    uVar3 = fcn.0043a6f7(iVar2 * 2);\n    *(unaff_EBP + 8) = uVar3;\n    uVar1 = *(extraout_ECX + 8);\n    if (uVar1 != 0) {\n        uVar6 = uVar7;\n        if (uVar1 <= uVar7) {\n            uVar6 = uVar1;\n        }\n        puVar4 = *(unaff_EBP + 8);\n        puVar5 = *(extraout_ECX + 4);\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n            puVar4 = puVar4 + 1;\n            *puVar4 = *puVar5;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    uVar1 = *(extraout_ECX + 8);\n    fcn.00401294(1);\n    iVar2 = *(unaff_EBP + 8);\n    *(extraout_ECX + 4) = iVar2 + 2;\n    *(iVar2 + 1) = 0;\n    *(extraout_ECX + 0xc) = uVar7;\n    if (uVar1 <= uVar7) {\n        uVar7 = uVar1;\n    }\n    uVar3 = *(unaff_EBP + -0xc);\n    *(extraout_ECX + 8) = uVar7;\n    *(*(extraout_ECX + 4) + uVar7 * 2) = 0;\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 682
    },
    "0040121c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040121c(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    char cVar1;\n    uint unaff_ESI;\n    \n    cVar1 = fcn.00401195(param_3, 1);\n    if (cVar1 != '\\0') {\n        fcn.00410d20(*(param_1 + 4), unaff_ESI, param_3);\n        *(param_1 + 8) = param_3;\n        *(*(param_1 + 4) + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 144
    },
    "00401244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401244(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*(param_1 + 8) < param_2) {\n        fcn.00422653();\n    }\n    fcn.004012f3();\n    uVar2 = *(param_1 + 8) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        iVar3 = *(param_1 + 4) + param_2;\n        fcn.00411060(iVar3, iVar3 + param_3, uVar2 - param_3);\n        iVar3 = *(param_1 + 8) - param_3;\n        cVar1 = fcn.00401195(iVar3, 0);\n        if (cVar1 != '\\0') {\n            *(param_1 + 8) = iVar3;\n            *(iVar3 + *(param_1 + 4)) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 274
    },
    "00455868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00455868(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x20];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x2a] != NULL) {\n        (**(*extraout_ECX[0x2a] + 0x14))(1);\n    }\n    iVar3 = fcn.00456c34();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x48552c != NULL) {\n            (**(**0x48552c + 4))(1);\n            *0x48552c = NULL;\n        }\n        if (*0x485528 != NULL) {\n            (**(**0x485528 + 4))(1);\n            *0x485528 = NULL;\n        }\n    }\n    if (extraout_ECX[0x25] != NULL) {\n        fcn.00441ba2(extraout_ECX[0x25]);\n    }\n    pcVar4 = extraout_ECX[0x26];\n    if (pcVar4 != NULL) {\n        pcVar4 = fcn.00441ba2(pcVar4);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    uVar5 = pcVar4 & 0xffff0000 | *(extraout_ECX + 0x2c);\n    if (*(extraout_ECX + 0x2c) != 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar5);\n    }\n    if (*(extraout_ECX + 0xb2) != 0) {\n        (*pcVar2)(uVar5 & 0xffff0000 | *(extraout_ECX + 0xb2));\n    }\n    if (extraout_ECX[0x2b] != NULL) {\n        (**(*extraout_ECX[0x2b] + 4))(1);\n    }\n    iVar3 = fcn.00456c34();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x1e]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.00411abc(extraout_ECX[0x1e]);\n    fcn.00411abc(extraout_ECX[0x1f]);\n    fcn.00411abc(extraout_ECX[0x22]);\n    fcn.00411abc(extraout_ECX[0x23]);\n    fcn.00411abc(extraout_ECX[0x24]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[10] = NULL;\n    fcn.00466980();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 840
    },
    "0040128f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040128f(uint param_1, uint param_2)\n\n{\n    fcn.0043a08a(param_1, 0x19, 0xc, param_2);\n    return;\n}\n",
        "token_count": 53
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00401299(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    uVar5 = *(unaff_EBP + 8) | 0x1f;\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (0xfffffffd < uVar5) {\n        uVar5 = *(unaff_EBP + 8);\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar2 = uVar5 + 2;\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    uVar3 = fcn.0043a6f7(iVar2);\n    *(unaff_EBP + 8) = uVar3;\n    uVar4 = *(extraout_ECX + 8);\n    if (uVar4 != 0) {\n        if (uVar5 < uVar4) {\n            uVar4 = uVar5;\n        }\n        fcn.00410d20(*(unaff_EBP + 8) + 1, *(extraout_ECX + 4), uVar4);\n    }\n    uVar4 = *(extraout_ECX + 8);\n    fcn.004011d6(1);\n    puVar1 = *(unaff_EBP + 8);\n    *(extraout_ECX + 4) = puVar1 + 1;\n    *puVar1 = 0;\n    *(extraout_ECX + 0xc) = uVar5;\n    if (uVar4 <= uVar5) {\n        uVar5 = uVar4;\n    }\n    uVar3 = *(unaff_EBP + -0xc);\n    *(extraout_ECX + 8) = uVar5;\n    *(*(extraout_ECX + 4) + uVar5) = 0;\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 596
    },
    "004012b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004012b7(uint param_1, int16_t param_2)\n\n{\n    fcn.0043a08a(param_1, 0xe, 2, param_2);\n    return;\n}\n",
        "token_count": 53
    },
    "004012c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012c1(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t arg_10h_00;\n    \n    if (*(arg_8h + 8) < arg_ch) {\n        fcn.00422653();\n    }\n    arg_10h_00 = *(arg_8h + 8) - arg_ch;\n    if (arg_10h < arg_10h_00) {\n        arg_10h_00 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00401244(arg_10h_00 + arg_ch, *0x46c258);\n        fcn.00401244(0, arg_ch);\n    }\n    else {\n        if ((arg_10h_00 != 0) && (arg_10h_00 == *(arg_8h + 8))) {\n            iVar2 = *(arg_8h + 4);\n            if (iVar2 == 0) {\n                iVar2 = 0x46c254;\n            }\n            if (*(iVar2 + -1) < 0xfe) {\n                fcn.004011d6(1);\n                iVar2 = *(arg_8h + 4);\n                if (iVar2 == 0) {\n                    iVar2 = 0x46c254;\n                }\n                *(in_ECX + 4) = iVar2;\n                *(in_ECX + 8) = *(arg_8h + 8);\n                *(in_ECX + 0xc) = *(arg_8h + 0xc);\n                *(iVar2 + -1) = *(iVar2 + -1) + '\\x01';\n                return;\n            }\n        }\n        cVar1 = fcn.00401195(arg_10h_00, 1);\n        if (cVar1 != '\\0') {\n            iVar2 = *(arg_8h + 4);\n            if (iVar2 == 0) {\n                iVar2 = 0x46c254;\n            }\n            fcn.00410d20(*(in_ECX + 4), iVar2 + arg_ch, arg_10h_00);\n            *(in_ECX + 8) = arg_10h_00;\n            *(*(in_ECX + 4) + arg_10h_00) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "00401302": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401302(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    int32_t iVar2;\n    \n    if (-*(param_1 + 8) - 1U <= param_3) {\n        fcn.00422427(unaff_EDI);\n    }\n    if (param_3 != 0) {\n        iVar2 = param_3 + *(param_1 + 8);\n        cVar1 = fcn.00401195(iVar2, 0);\n        if (cVar1 != '\\0') {\n            fcn.00410d20(*(param_1 + 8) + *(param_1 + 4), unaff_EBX, param_3);\n            *(param_1 + 8) = iVar2;\n            *(iVar2 + *(param_1 + 4)) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 227
    },
    "0040170e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint fcn.0040170e(void)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    fcn.0042277d();\n    bVar4 = *0x482cac < 0;\n    if (bVar4) {\n        *0x482cac = 1;\n    }\n    else {\n        *0x482cac = *0x482cac + 1;\n    }\n    fcn.00422819();\n    if (bVar4) {\n        *(unaff_EBP + -0x10) = 0x486148;\n        *(unaff_EBP + -4) = 0;\n        fcn.00420ab7(0x481fb0);\n        *(unaff_EBP + -0x10) = 0x486020;\n        *(unaff_EBP + -4) = 1;\n        fcn.00420ab7(0x481fd0);\n        *(unaff_EBP + -0x10) = 0x486108;\n        *(unaff_EBP + -4) = 2;\n        fcn.004209f0(0x486148, 1, 1);\n        *(unaff_EBP + -0x10) = 0x486078;\n        *(unaff_EBP + -4) = 3;\n        fcn.004208d2(0x486020, 1, 1, 1);\n        iVar3 = *0x486108;\n        *(unaff_EBP + -0x10) = 0x4860b0;\n        *(*(iVar3 + 4) + 0x486134) = 0x486078;\n        *(unaff_EBP + -4) = 4;\n        fcn.00420ab7(0x481ff0);\n        *(unaff_EBP + -0x10) = 0x4861a0;\n        *(unaff_EBP + -4) = 5;\n        fcn.004208d2(0x4860b0, 1, 1, 1);\n        iVar3 = *0x4861a0;\n        *(unaff_EBP + -0x10) = 0x485fe8;\n        *(*(iVar3 + 4) + 0x4861cc) = 0x486078;\n        puVar1 = *(*0x4861a0 + 4) + 0x4861ac;\n        *puVar1 = *puVar1 | 2;\n        *(unaff_EBP + -4) = 6;\n        fcn.004208d2(0x4860b0, 1, 1, 1);\n        *(*(*0x485fe8 + 4) + 0x486014) = 0x486078;\n    }\n    uVar2 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 807
    },
    "00401741": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint fcn.00401741(void)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    fcn.0042277d();\n    bVar4 = *0x482e04 < 0;\n    if (bVar4) {\n        *0x482e04 = 1;\n    }\n    else {\n        *0x482e04 = *0x482e04 + 1;\n    }\n    fcn.00422819();\n    if (bVar4) {\n        *(unaff_EBP + -0x10) = 0x4862e8;\n        *(unaff_EBP + -4) = 0;\n        fcn.00421aca(0x481fb0);\n        *(unaff_EBP + -0x10) = 0x486290;\n        *(unaff_EBP + -4) = 1;\n        fcn.00421aca(0x481fd0);\n        *(unaff_EBP + -0x10) = 0x486378;\n        *(unaff_EBP + -4) = 2;\n        fcn.00421aca(0x481ff0);\n        *(unaff_EBP + -0x10) = 0x486250;\n        *(unaff_EBP + -4) = 3;\n        fcn.00421a03(0x4862e8, 1, 1);\n        *(unaff_EBP + -0x10) = 0x486340;\n        *(unaff_EBP + -4) = 4;\n        fcn.004218e5(0x486290, 1, 1, 1);\n        *(*(*0x486250 + 4) + 0x48627c) = 0x486340;\n        *(unaff_EBP + -0x10) = 0x4861d8;\n        *(unaff_EBP + -4) = 5;\n        fcn.004218e5(0x486378, 1, 1, 1);\n        iVar3 = *0x4861d8;\n        *(unaff_EBP + -0x10) = 0x486218;\n        *(*(iVar3 + 4) + 0x486204) = 0x486340;\n        puVar1 = *(*0x4861d8 + 4) + 0x4861e4;\n        *puVar1 = *puVar1 | 2;\n        *(unaff_EBP + -4) = 6;\n        fcn.004218e5(0x486378, 1, 1, 1);\n        *(*(*0x486218 + 4) + 0x486244) = 0x486340;\n    }\n    uVar2 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 796
    },
    "00405289": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405289(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0040504c();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_ch + 10, \"DISPLAY\");\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x485518)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 412
    },
    "00405480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00405480(uint32_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    bVar4 = *(param_1 + 2) == -1;\n    uVar3 = *param_1;\n    if (bVar4) {\n        uVar3 = param_1[3];\n        piVar1 = param_1 + 0x1a;\n    }\n    else {\n        piVar1 = param_1 + 0x12;\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    do {\n        iVar2 = *piVar1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 != 0);\n    if ((uVar3 & 0x40) != 0) {\n        piVar1 = piVar1 + (-bVar4 & 2) + 1;\n        do {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 != 0);\n    }\n    return piVar1 + 3U & 0xfffffffc;\n}\n",
        "token_count": 398
    },
    "00405e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405e60(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFileException.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0043b52e(extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 146
    },
    "00406503": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n\nvoid __cdecl fcn.00406503(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint32_t var_94h;\n    uint uStack148;\n    uint uStack144;\n    int32_t lpvObject;\n    uint var_78h;\n    uint var_71h;\n    uint lpMultiByteStr;\n    uint lpFontDesc;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hdc;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = 0x46eae4;\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    if ((iVar2 == 0) || (*(iVar2 + 4) == 0)) {\n        lpvObject = 0x11;\n        uStack144 = 0x40653d;\n        iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)();\n        *(unaff_EBP + -0x14) = iVar2;\n        if (iVar2 == 0) {\n            lpvObject = 0xd;\n            uStack144 = 0x406548;\n            iVar2 = (*pcVar1)();\n            *(unaff_EBP + -0x14) = iVar2;\n            if (iVar2 == 0) {\n                *(extraout_ECX + 0x44) = 0;\n                *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n                *(unaff_EBP + -4) = 1;\n                goto code_r0x0040665d;\n            }\n        }\n        iVar2 = unaff_EBP + -0x18;\n    }\n    lpvObject = unaff_EBP + -0x88;\n    uStack144 = 0x3c;\n    uStack148 = *(iVar2 + 4);\n    var_94h = 0x40657a;\n    (*_sym.imp.GDI32.dll_GetObjectA)();\n    *(unaff_EBP + -0x4c) = 0x20;\n    if (unaff_EBP == 0x6c) {\n        *0x24 = 0;\n        iVar2 = extraout_ECX;\n    }\n    else {\n        var_94h = unaff_EBP - 0x6c;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.00412040();\n        var_94h = var_94h & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                  (0, 0, unaff_EBP + -0x6c, 0xffffffff, &fcn.00406503::var_94h, iVar2 + 1);\n        iVar2 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x48) = &fcn.00406503::var_94h;\n    }\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x78);\n    *(unaff_EBP + -0x3a) = *(unaff_EBP + -0x71);\n    *(unaff_EBP + -0x38) = *(unaff_EBP + -0x74);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + -0x73);\n    *(unaff_EBP + -0x30) = *(unaff_EBP + -0x72);\n    iVar3 = *(unaff_EBP + -0x88);\n    if (iVar3 < 0) {\n        iVar3 = -iVar3;\n    }\n    var_94h = *(iVar2 + 0x1c);\n    fcn.00442dd4(var_94h);\n    *(unaff_EBP + -4) = 2;\n    iVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(unaff_EBP + -0x24), 0x5a);\n    puVar5 = iVar2 + 0x44;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x44) = (iVar3 * 720000) / iVar4;\n    fcn.0045b243(puVar5);\n    iVar2 = (*_sym.imp.OLEPRO32.DLL_OleCreateFontIndirect)(unaff_EBP + -0x4c, 0x472000, puVar5);\n    if (iVar2 < 0) {\n        *puVar5 = 0;\n    }\n    *(unaff_EBP + -4) = 0;\n    lpvObject = 0x40664f;\n    fcn.00442e46();\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 3;\ncode_r0x0040665d:\n    lpvObject = 0x406665;\n    fcn.0044301f();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1325
    },
    "00406b27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00406b27(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t **ppiVar2;\n    int32_t unaff_EBP;\n    code *pcVar3;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumUnknown.0;\n    pcVar3 = NULL;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) && (ppiVar2 = extraout_ECX[9],  extraout_ECX[0xb] != NULL)) {\n        do {\n            (**(**ppiVar2 + 8))(*ppiVar2);\n            pcVar3 = pcVar3 + 1;\n            ppiVar2 = ppiVar2 + 1;\n        } while (pcVar3 < extraout_ECX[0xb]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0045f6d8();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 343
    },
    "00406d4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00406d4e(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 4;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.004437ad();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 148
    },
    "00406d74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406d74(int32_t param_1)\n\n{\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 4U) {\n        fcn.00443829((*(param_1 + 0x24) - *(param_1 + 0x28)) + 4);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 145
    },
    "004074c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.004074c9(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0043a18b();\n    pcVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[7] = pcVar1;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    fcn.00464aee();\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = *0x480454;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2e] = vtable.COleControlSite::XOleClientSite.0;\n    extraout_ECX[0x2f] = vtable.COleControlSite::XOleIPSite.0;\n    extraout_ECX[0x30] = vtable.COleControlSite::XOleControlSite.0;\n    extraout_ECX[0x31] = vtable.COleControlSite::XAmbientProps.0;\n    extraout_ECX[0x32] = vtable.COleControlSite::XPropertyNotifySink.0;\n    extraout_ECX[0x33] = vtable.COleControlSite::XEventSink.0;\n    extraout_ECX[0x34] = vtable.COleControlSite::XBoundObjectSite.0;\n    extraout_ECX[0x35] = vtable.COleControlSite::XNotifyDBEvents.0;\n    extraout_ECX[0x36] = vtable.COleControlSite::XRowsetNotify.0;\n    *extraout_ECX = vtable.COleControlSite.0;\n    fcn.004108b0(extraout_ECX + 0x2a, 0, 0x10);\n    uVar2 = *(unaff_EBP + -0xc);\n    *(extraout_ECX + 0x2a) = 0;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 755
    },
    "00407718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nbool fcn.00407718(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar1 = *(extraout_ECX + 0x38);\n    iVar2 = *(extraout_ECX + 0x30);\n    *(unaff_EBP + -0x14) = *(extraout_ECX + 0x34) - *(extraout_ECX + 0x2c);\n    *(unaff_EBP + -0x10) = iVar1 - iVar2;\n    fcn.00442d20(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.00452738(unaff_EBP + -0x14);\n    iVar1 = (**(**(extraout_ECX + 0x4c) + 0x44))(*(extraout_ECX + 0x4c), 1, unaff_EBP + -0x14);\n    if (-1 < iVar1) {\n        iVar2 = (**(**(extraout_ECX + 0x4c) + 0x48))(*(extraout_ECX + 0x4c), 1, unaff_EBP + -0x14);\n        if (-1 < iVar2) {\n            fcn.004527c6(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x34) = *(unaff_EBP + -0x14) + *(extraout_ECX + 0x2c);\n            *(extraout_ECX + 0x38) = *(extraout_ECX + 0x30) + *(unaff_EBP + -0x10);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00442d92();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return -1 < iVar1;\n}\n",
        "token_count": 497
    },
    "00407d18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_70h\n\nint32_t __cdecl fcn.00407d18(uint arg_8h, uint arg_ch, uint hMem, uint arg_14h)\n\n{\n    int32_t **arg_18h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_70h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    arg_18h = extraout_ECX + 0x13;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    iVar1 = fcn.00407aea(*(unaff_EBP + 8), 0, 3, 0x472eb0, arg_18h, *(unaff_EBP + 0x14));\n    *(unaff_EBP + 0x14) = iVar1;\n    if (iVar1 < 0) goto code_r0x00408011;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + 8) = 0;\n    fcn.00408191(extraout_ECX + 0xf);\n    iVar1 = (**(*extraout_ECX + 0xbc))();\n    *(unaff_EBP + -0x20) = iVar1;\n    if (iVar1 == 0) {\n        (**(**arg_18h + 0x58))(*arg_18h, 1, extraout_ECX + 0x1c);\n        if ((*(extraout_ECX + 0x72) & 2) == 0) goto code_r0x00407da4;\n        iVar1 = (**(**arg_18h + 0xc))(*arg_18h, extraout_ECX + 0x2e);\n        *(unaff_EBP + 0x14) = iVar1;\n        if (-1 < iVar1) goto code_r0x00407da4;\ncode_r0x00407fd8:\n        piVar3 = *arg_18h;\n        if (piVar3 != NULL) {\n            (**(*piVar3 + 0x18))(piVar3, 1);\n            (**(**arg_18h + 8))(*arg_18h);\n            *arg_18h = NULL;\n        }\n    }\n    else {\ncode_r0x00407da4:\n        piVar3 = *(unaff_EBP + 0xc);\n        if (piVar3 == NULL) {\n            if (*(unaff_EBP + 0x10) == 0) goto code_r0x00407e13;\ncode_r0x00407e7d:\n            iVar1 = (****arg_18h)(*arg_18h, 0x472e80, unaff_EBP + -0x14);\n            if (-1 < iVar1) {\n                if (piVar3 == NULL) {\n                    *(unaff_EBP + 0xc) = 0;\n                    iVar1 = (*_sym.imp.ole32.dll_CreateILockBytesOnHGlobal)(0, 1, unaff_EBP + 0xc);\n                    *(unaff_EBP + 0x14) = iVar1;\n                    if (-1 < iVar1) {\n                        *(unaff_EBP + 0x10) = 0;\n                        iVar1 = (*_sym.imp.ole32.dll_StgCreateDocfileOnILockBytes)\n                                          (*(unaff_EBP + 0xc), 0x1012, 0, unaff_EBP + 0x10);\n                        *(unaff_EBP + 0x14) = iVar1;\n                        if (-1 < iVar1) {\n                            uVar2 = (**(**(unaff_EBP + -0x14) + 0x14))(*(unaff_EBP + -0x14), *(unaff_EBP + 0x10));\n                            *(unaff_EBP + 0x14) = uVar2;\n                            (**(**(unaff_EBP + 0x10) + 8))(*(unaff_EBP + 0x10));\n                        }\n                        piVar3 = *(unaff_EBP + 0xc);\ncode_r0x00407eec:\n                        (**(*piVar3 + 8))(piVar3);\n                    }\n                }\n                else {\n                    if (*(unaff_EBP + 0x10) == 0) {\n                        *(unaff_EBP + 0x14) = 0x8000ffff;\n                        goto code_r0x00407fa5;\n                    }\n                    uVar2 = (**(*piVar3 + 0x30))();\n                    *(unaff_EBP + 0xc) = uVar2;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, uVar2);\n                    *(unaff_EBP + 0x10) = iVar1;\n                    if (iVar1 == 0) {\ncode_r0x00407f3a:\n                        *(unaff_EBP + 0x14) = 0x8007000e;\n                        *(unaff_EBP + 0x10) = 0;\n                    }\n                    else {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n                        if (iVar1 == 0) goto code_r0x00407f3a;\n                        (**(*piVar3 + 0x34))(iVar1, *(unaff_EBP + 0xc));\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + 0x10));\n                    }\n                    *(unaff_EBP + -0x1c) = 0;\n                    if (*(unaff_EBP + 0x10) != 0) {\n                        iVar1 = (*_sym.imp.ole32.dll_CreateILockBytesOnHGlobal)\n                                          (*(unaff_EBP + 0x10), 1, unaff_EBP + -0x1c);\n                        *(unaff_EBP + 0x14) = iVar1;\n                        if (-1 < iVar1) {\n                            *(unaff_EBP + -0x18) = 0;\n                            iVar1 = (*_sym.imp.ole32.dll_StgOpenStorageOnILockBytes)\n                                              (*(unaff_EBP + -0x1c), 0, 0x12, 0, 0, unaff_EBP + -0x18);\n                            *(unaff_EBP + 0x14) = iVar1;\n                            if (-1 < iVar1) {\n                                uVar2 = (**(**(unaff_EBP + -0x14) + 0x18))(*(unaff_EBP + -0x14), *(unaff_EBP + -0x18));\n                                *(unaff_EBP + 0x14) = uVar2;\n                                (**(**(unaff_EBP + -0x18) + 8))(*(unaff_EBP + -0x18));\n                            }\n                            piVar3 = *(unaff_EBP + -0x1c);\n                            goto code_r0x00407eec;\n                        }\n                    }\n                }\ncode_r0x00407fa5:\n                piVar3 = *(unaff_EBP + -0x14);\ncode_r0x00407fa8:\n                (**(*piVar3 + 8))(piVar3);\n                goto code_r0x00407fae;\n            }\n        }\n        else {\n            if (*(unaff_EBP + 0x10) != 0) goto code_r0x00407e7d;\n            iVar1 = (****arg_18h)(*arg_18h, 0x472ea0, unaff_EBP + 8);\n            if (iVar1 < 0) {\ncode_r0x00407e13:\n                iVar1 = (****arg_18h)(*arg_18h, 0x472e90, unaff_EBP + -0x10);\n                if (iVar1 < 0) goto code_r0x00407e7d;\n                if (piVar3 == NULL) {\n                    uVar2 = (**(**(unaff_EBP + -0x10) + 0x20))(*(unaff_EBP + -0x10));\n                    *(unaff_EBP + 0x14) = uVar2;\n                }\n                else {\n                    fcn.0044349c(piVar3, 1, 0x1000, 0);\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0043164a(unaff_EBP + -0x70);\n                    uVar2 = (**(**(unaff_EBP + -0x10) + 0x14))(*(unaff_EBP + -0x10), unaff_EBP + -0x2c);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(unaff_EBP + 0x14) = uVar2;\n                    fcn.00443578();\n                }\n                piVar3 = *(unaff_EBP + -0x10);\n                goto code_r0x00407fa8;\n            }\n            iVar1 = (**(*piVar3 + 0x50))(3, 0, 0, 0);\n            if (iVar1 == 0) goto code_r0x00407e13;\n            iVar1 = *piVar3;\n            *(unaff_EBP + 0x10) = 0;\n            uVar2 = (**(iVar1 + 0x50))(0, 0xffffffff, unaff_EBP + 0x10, unaff_EBP + 0xc);\n            uVar2 = (**(**(unaff_EBP + 8) + 0x14))(*(unaff_EBP + 8), *(unaff_EBP + 0x10), uVar2);\n            *(unaff_EBP + 0x14) = uVar2;\n            (**(**(unaff_EBP + 8) + 8))(*(unaff_EBP + 8));\n            *(unaff_EBP + 8) = 0;\ncode_r0x00407fae:\n            if (*(unaff_EBP + 0x14) < 0) goto code_r0x00407fd8;\n            if ((*(unaff_EBP + -0x20) == 0) && ((*(*(unaff_EBP + -0x24) + 0x72) & 2) == 0)) {\n                uVar2 = (**(**arg_18h + 0xc))(*arg_18h, *(unaff_EBP + -0x24) + 0xb8);\n                *(unaff_EBP + 0x14) = uVar2;\n            }\n        }\n        if (*(unaff_EBP + 0x14) < 0) goto code_r0x00407fd8;\n    }\n    piVar3 = *(unaff_EBP + 8);\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    if ((*(unaff_EBP + -0x20) != 0) && (-1 < *(unaff_EBP + 0x14))) {\n        *(unaff_EBP + 0x14) = 1;\n    }\n    iVar1 = *(unaff_EBP + 0x14);\ncode_r0x00408011:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 2607
    },
    "0040830b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040830b(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *var_4h;\n    \n    puVar1 = param_1 + 0x74;\n    var_4h = param_1;\n    fcn.004108b0(puVar1, 0, 0x10);\n    var_4h = NULL;\n    *puVar1 = 0x10;\n    iVar2 = (****(param_1 + 0x4c))(*(param_1 + 0x4c), 0x472ec0, &var_4h);\n    if (-1 < iVar2) {\n        (**(*var_4h + 0xc))(var_4h, puVar1);\n        (**(*var_4h + 8))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00409571": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00409571(void)\n\n{\n    code *pcVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    code **extraout_ECX;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    *extraout_ECX = vtable.CDataSourceControl.0;\n    iVar7 = 0;\n    pcVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (((pcVar1 != NULL) && (extraout_ECX[0x14] != NULL)) &&\n       (puVar6 = *extraout_ECX[0x14],  iVar5 = (***puVar6)(puVar6, 0x472ed0, unaff_EBP + -0x18),  -1 < iVar5)) {\n        *(unaff_EBP + -0x10) = 0;\n        iVar5 = (**(**(unaff_EBP + -0x18) + 0x10))(*(unaff_EBP + -0x18), 0x472430, unaff_EBP + -0x10);\n        if (-1 < iVar5) {\n            (**(**(unaff_EBP + -0x10) + 0x18))(*(unaff_EBP + -0x10), extraout_ECX[0x16]);\n            (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n        }\n        (**(**(unaff_EBP + -0x18) + 8))(*(unaff_EBP + -0x18));\n    }\n    while (extraout_ECX[9] != NULL) {\n        ppiVar2 = *(extraout_ECX[7] + 8);\n        (**(**ppiVar2 + 0xb8))(ppiVar2[2], 0);\n        (*ppiVar2)[0x24] = 0;\n    }\n    *(unaff_EBP + -0x1c) = extraout_ECX + 6;\n    fcn.00432b82();\n    if (extraout_ECX[0x10] != NULL) {\n        iVar5 = 0;\n        pcVar1 = extraout_ECX[0xe];\n        if (0 < pcVar1) {\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX[0x10] + iVar7);\n                iVar5 = iVar5 + 1;\n                iVar7 = iVar7 + 0x10;\n            } while (iVar5 < extraout_ECX[0xe]);\n            pcVar1 = extraout_ECX[0xe];\n        }\n        if (pcVar1 != NULL) {\n            fcn.0043a720(extraout_ECX[0xf]);\n            fcn.0043a720(extraout_ECX[0x10]);\n        }\n    }\n    piVar3 = extraout_ECX[2];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    piVar3 = extraout_ECX[3];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    if (extraout_ECX[5] != NULL) {\n        pcVar1 = extraout_ECX[4];\n        *(unaff_EBP + -0x14) = 0;\n        if (0 < pcVar1) {\n            iVar7 = 0;\n            do {\n                puVar6 = *(*(extraout_ECX[5] + iVar7 + 0x24) + 4);\n                while (puVar6 != NULL) {\n                    puVar4 = *puVar6;\n                    *(puVar6[2] + 0x90) = 0;\n                    puVar6 = puVar4;\n                }\n                fcn.00432b82();\n                if (*(extraout_ECX[5] + iVar7 + 0x24) != NULL) {\n                    (**(**(extraout_ECX[5] + iVar7 + 0x24) + 4))(1);\n                }\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                iVar7 = iVar7 + 0x28;\n            } while (*(unaff_EBP + -0x14) < extraout_ECX[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[5]);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[0xd]);\n    }\n    if (extraout_ECX[0x15] != NULL) {\n        fcn.00409751(*extraout_ECX[0x14]);\n        fcn.00409872();\n    }\n    pcVar1 = extraout_ECX[0x15];\n    if (pcVar1 != NULL) {\n        fcn.00409872();\n        fcn.0043a720(pcVar1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if (pcVar1 != NULL) {\n        fcn.004097d8();\n        fcn.0043a720(pcVar1);\n    }\n    piVar3 = extraout_ECX[0x13];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    piVar3 = extraout_ECX[0x12];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00432ba2();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1470
    },
    "00409ab7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a4h\n\nint32_t fcn.00409ab7(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint pv;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar3 = extraout_ECX[0x12];\n    *(unaff_EBP + -0x28) = extraout_ECX[5];\n    *(unaff_EBP + -0x2c) = extraout_ECX[4];\n    if (iVar3 == 0) {\n        piVar1 = extraout_ECX[2];\n        if (piVar1 == NULL) {\n            iVar3 = 0;\n            goto code_r0x00409dc8;\n        }\n        iVar3 = (**(*piVar1 + 0xc))(piVar1, 0x472f30, unaff_EBP + -0x1c, unaff_EBP + -0x24);\n        if (iVar3 < 0) goto code_r0x00409dc8;\n        fcn.0040a2e6(unaff_EBP + -0xa4, 0x473000);\n        *(unaff_EBP + -0x84) = 0xffffffff;\n        *(unaff_EBP + -0x8c) = 0;\n        *(unaff_EBP + -0x88) = 0;\n        *(unaff_EBP + -0x80) = 0x18;\n        *(unaff_EBP + -0x7c) = 0;\n        *(unaff_EBP + -0x78) = 0x1fb;\n        fcn.0040a2e6(unaff_EBP + -0x74, 0x4730d8);\n        *(unaff_EBP + -0x54) = 0xffffffff;\n        *(unaff_EBP + -0x5c) = 0x1c;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x50) = 0x20;\n        *(unaff_EBP + -0x4c) = 0;\n        *(unaff_EBP + -0x48) = 0x1e;\n        iVar3 = (**(**(unaff_EBP + -0x1c) + 0x10))(*(unaff_EBP + -0x1c), 2, unaff_EBP + -0xa4, 0x28, 0);\n        if (iVar3 < 0) {\n            (**(**(unaff_EBP + -0x1c) + 8))(*(unaff_EBP + -0x1c));\n            goto code_r0x00409dc8;\n        }\n        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x24);\n        *(unaff_EBP + -0x40) = 1;\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        iVar3 = (**(**(unaff_EBP + -0x1c) + 0x18))(*(unaff_EBP + -0x1c), 0, 0, unaff_EBP + -0x44);\n        *(unaff_EBP + -0x20) = iVar3;\n        if (-1 < iVar3) {\n            iVar3 = *(unaff_EBP + -0x38);\n            extraout_ECX[5] = *(unaff_EBP + -0x3c);\n            *(unaff_EBP + -0x24) = *(unaff_EBP + -0x30);\n            extraout_ECX[4] = *(unaff_EBP + -0x30);\n            piVar1 = *(unaff_EBP + -0x1c);\n            extraout_ECX[0xd] = iVar3;\n            (**(*piVar1 + 8))(piVar1);\n            goto code_r0x00409d1e;\n        }\n        (**(**(unaff_EBP + -0x1c) + 8))(*(unaff_EBP + -0x1c));\n    }\n    else {\n        iVar3 = (**(*extraout_ECX[0x13] + 0x14))(extraout_ECX[0x13], 0x4725a0, unaff_EBP + -0x14);\n        *(unaff_EBP + -0x20) = iVar3;\n        if (iVar3 < 0) goto code_r0x00409dc8;\n        iVar3 = (****(unaff_EBP + -0x14))(*(unaff_EBP + -0x14), 0x472ed0, unaff_EBP + -0x18);\n        if (-1 < iVar3) {\n            *(unaff_EBP + -0x10) = 0;\n            iVar3 = (**(**(unaff_EBP + -0x18) + 0x10))(*(unaff_EBP + -0x18), 0x472430, unaff_EBP + -0x10);\n            if (-1 < iVar3) {\n                (**(**(unaff_EBP + -0x10) + 0x14))(*(unaff_EBP + -0x10), extraout_ECX[1] + 0xd8, extraout_ECX + 0x16);\n                (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n            }\n            (**(**(unaff_EBP + -0x18) + 8))(*(unaff_EBP + -0x18));\n        }\n        iVar3 = fcn.0043a6f7(0x10);\n        *(unaff_EBP + -0x24) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00409dd7(*(unaff_EBP + -0x14));\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        extraout_ECX[0x14] = iVar3;\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n        fcn.00409efb();\n        puVar4 = fcn.0043a6f7(0x1c);\n        if (puVar4 == NULL) {\n            puVar4 = NULL;\n        }\n        else {\n            *puVar4 = 0;\n            puVar4[1] = 0;\n            puVar4[2] = 0;\n            puVar4[3] = 0;\n            puVar4[4] = 0;\n            puVar4[5] = 0;\n        }\n        extraout_ECX[0x15] = puVar4;\n        fcn.00409f10(*extraout_ECX[0x14]);\n        *(extraout_ECX[0x14] + 8) = extraout_ECX[0x15];\n        iVar3 = *(extraout_ECX[0x15] + 0xc);\n        extraout_ECX[4] = iVar3;\n        iVar3 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(iVar3 * 0x28);\n        extraout_ECX[5] = iVar3;\n        fcn.004108b0(iVar3, 0, extraout_ECX[4] * 0x28);\n        fcn.00409e28();\n        fcn.00409852();\ncode_r0x00409d1e:\n        iVar3 = extraout_ECX[4];\n        *(unaff_EBP + -0x14) = 0;\n        if (0 < iVar3) {\n            iVar3 = 0;\n            do {\n                uVar6 = 0x1c;\n                iVar5 = fcn.0043a6f7(0x1c);\n                *(unaff_EBP + -0x18) = iVar5;\n                *(unaff_EBP + -4) = 1;\n                if (iVar5 == 0) {\n                    uVar6 = 0;\n                }\n                else {\n                    uVar6 = fcn.00432b43(uVar6, 10);\n                }\n                iVar5 = extraout_ECX[5];\n                *(unaff_EBP + -4) = 0xffffffff;\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                *(iVar3 + 0x24 + iVar5) = uVar6;\n                iVar3 = iVar3 + 0x28;\n            } while (*(unaff_EBP + -0x14) < extraout_ECX[4]);\n        }\n        if (*(unaff_EBP + -0x28) != 0) {\n            if (0 < *(unaff_EBP + -0x2c)) {\n                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x2c);\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x28) + 0x24;\n                do {\n                    puVar4 = *(**(unaff_EBP + -0x10) + 4);\n                    while (puVar4 != NULL) {\n                        puVar2 = *puVar4;\n                        (**(*extraout_ECX + 8))(puVar4[2], 1);\n                        puVar4 = puVar2;\n                    }\n                    fcn.00432b82();\n                    if (**(unaff_EBP + -0x10) != NULL) {\n                        (**(***(unaff_EBP + -0x10) + 4))(1);\n                    }\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x28;\n                    piVar1 = unaff_EBP + -0x18;\n                    *piVar1 = *piVar1 + -1;\n                } while (*piVar1 != 0);\n            }\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(*(unaff_EBP + -0x28));\n        }\n    }\n    iVar3 = *(unaff_EBP + -0x20);\ncode_r0x00409dc8:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 2601
    },
    "00409efb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409efb(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *param_1;\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 0x480ef8, param_1 + 1);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0040a1c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0040a1c1(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch;\n    \n    fcn.00410d00();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = 0;\n    extraout_ECX[1] = iVar1;\n    iVar1 = fcn.0043a6f7(iVar1 << 3);\n    *extraout_ECX = iVar1;\n    iVar1 = *extraout_ECX;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return (-(iVar1 != 0) & 0x7ff8fff2) + 0x8007000e;\n}\n",
        "token_count": 323
    },
    "0040aeac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040aeac(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    uVar2 = fcn.0040a48e(&param_2);\n    if (uVar2 == '\\0') {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        iVar3 = unaff_retaddr * 0x30 + *(param_1 + 0x10);\n        uVar2 = *(iVar3 + 0x10);\n        uVar1 = *(*(iVar3 + 4) + (uVar2 & 3) + *(param_1 + 8) + 4 + uVar2);\n        *param_2 = uVar1;\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 220
    },
    "0040aef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040aef0(int32_t param_1, int32_t param_2)\n\n{\n    return *(param_2 * 0x30 + 4 + *(param_1 + 0x10)) + *(param_1 + 8);\n}\n",
        "token_count": 65
    },
    "0040ba4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.0040ba4d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    uVar2 = *(extraout_ECX + 0xc);\n    *(extraout_ECX + 8) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(extraout_ECX + 0x18) = *(unaff_EBP + 0x10);\n    *(extraout_ECX + 0x10) = iVar1;\n    *(extraout_ECX + 0x14) = 0;\n    fcn.0043a720(uVar2);\n    *(extraout_ECX + 0xc) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.0043a6f7(iVar1 * 0x34);\n    *(extraout_ECX + 0xc) = uVar2;\n    iVar1 = *(extraout_ECX + 0xc);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return (-(iVar1 != 0) & 0x7ff8fff2) + 0x8007000e;\n}\n",
        "token_count": 450
    },
    "0040bac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bac4(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_1ch == 0) {\n        arg_1ch = 0;\n    }\n    else {\n        arg_1ch = arg_1ch - *(in_ECX + 8);\n    }\n    if (arg_18h == 0) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = arg_18h - *(in_ECX + 8);\n    }\n    fcn.0040a267(*(in_ECX + 0x14) * 0x34 + *(in_ECX + 0xc), arg_8h, arg_ch, arg_10h, 0, 0, 0, arg_14h - *(in_ECX + 8), \n                 arg_18h, arg_1ch, 0);\n    *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n    return;\n}\n",
        "token_count": 268
    },
    "0040bf5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bf5e(uint32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_24h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h & 3) == 0) || (uVar1 = 0,  arg_ch == 0)) {\n        return 0;\n    }\ncode_r0x0040bf7c:\n    // switch table (31 cases) at 0x40bfe3\n    switch(*arg_10h) {\n    case 1:\n        var_4h = 3;\n        break;\n    case 2:\n    case 0x14:\n        var_4h = 5;\n        break;\n    case 3:\n    case 9:\n    case 10:\n    case 0x17:\n        var_4h = 6;\n        break;\n    default:\n        goto code_r0x0040bf92;\n    case 6:\n    case 7:\n    case 8:\n    case 0xb:\n    case 0xc:\n    case 0xf:\n    case 0x10:\n    case 0x13:\n    case 0x15:\n        var_4h = 7;\n        break;\n    case 0x18:\n        var_4h = 2;\n        break;\n    case 0x19:\n        var_4h = 1;\n        break;\n    case 0x1f:\n        var_4h = 4;\n    }\n    fcn.0040c301(3);\n    var_8h = arg_14h;\n    fcn.00408505(&var_24h);\n    return var_ch;\ncode_r0x0040bf92:\n    uVar1 = uVar1 + 1;\n    arg_10h = arg_10h + 9;\n    if (arg_ch <= uVar1) {\n        return 0;\n    }\n    goto code_r0x0040bf7c;\n}\n",
        "token_count": 468
    },
    "0040c71b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c71b(int32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_retaddr;\n    \n    if (*(param_1 + 0x38) != 0) {\n        fcn.0040807b(param_2);\n        return;\n    }\n    uVar1 = fcn.0040c324(param_1, 0);\n    if (((-(unaff_retaddr != 0) & 0x10U) + 0x10 & uVar1) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0xf4, unaff_retaddr != 0, 1);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0040d027": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d027(uint psa, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(psa, &var_4h);\n    fcn.0040ccf0(uVar1);\n    fcn.00410d20(var_4h, arg_ch, arg_10h);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n    fcn.0040ccf0(uVar1);\n    return;\n}\n",
        "token_count": 144
    },
    "0040d0c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040d0c2(uint32_t lpMultiByteStr, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_ECX;\n    uint32_t uStack20;\n    uint var_ch;\n    \n    *(in_ECX + 4) = 0;\n    *in_ECX = 8;\n    if (lpMultiByteStr != 0) {\n        uStack20 = lpMultiByteStr;\n        if (arg_ch == 0xe) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            iVar2 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(lpMultiByteStr, uVar1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            fcn.00412040();\n            uStack20 = uStack20 & 0xffff0000;\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &uStack20, iVar2 + 1);\n            iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(&uStack20);\n        }\n        *(in_ECX + 4) = iVar2;\n        if (iVar2 == 0) {\n            fcn.0042f1c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "0040d13d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040d13d(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_ECX;\n    uint32_t uStack24;\n    uint var_ch;\n    \n    uStack24 = 0x40d14c;\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    *(in_ECX + 4) = 0;\n    *in_ECX = 8;\n    if (arg_8h != 0) {\n        uStack24 = arg_8h;\n        if (arg_ch == 0xe) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            iVar2 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(arg_8h, uVar1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            fcn.00412040();\n            uStack24 = uStack24 & 0xffff0000;\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &stack0xffffffe8, iVar2 + 1);\n            iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(&stack0xffffffe8);\n        }\n        *(in_ECX + 4) = iVar2;\n        if (iVar2 == 0) {\n            fcn.0042f1c0();\n        }\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "0040d48b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nushort * __cdecl fcn.0040d48b(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ushort *in_ECX;\n    uchar *puVar3;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack28 = 0x40d49e;\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    *in_ECX = 8;\n    uVar1 = *arg_8h;\n    if (uVar1 == 0) {\n        puVar3 = NULL;\n    }\n    else {\n        puVar3 = &stack0xffffffe4;\n        puStack28 = uVar1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.00412040();\n        puStack28 = puStack28 & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar1, 0xffffffff, &stack0xffffffe4, iVar2 + 1);\n    }\n    puStack28 = puVar3;\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n    *(in_ECX + 4) = iVar2;\n    if (iVar2 == 0) {\n        fcn.0042f1c0();\n    }\n    return in_ECX;\n}\n",
        "token_count": 335
    },
    "0040d697": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d697(uint param_1)\n\n{\n    fcn.004108b0(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 39
    },
    "0040d874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nuint __cdecl\nfcn.0040d874(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t unaff_EBP;\n    uint16_t *puVar7;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    puVar7 = *(unaff_EBP + 0xc);\n    uVar2 = *puVar7;\n    *(unaff_EBP + -0x10) = &var_2ch;\n    if (uVar2 != 0) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar7);\n    }\n    uVar5 = *(unaff_EBP + 8);\n    fcn.0040eb1a(puVar7);\n    if ((*puVar7 & 0x6000) != 0) goto code_r0x0040d948;\n    // switch table (18 cases) at 0x40da5d\n    switch(*puVar7) {\n    case 2:\n    case 0xb:\n        uVar5 = fcn.0040eb1a(puVar7 + 4);\n        break;\n    case 3:\n    case 10:\n        puVar7 = puVar7 + 4;\n        goto code_r0x0040d8df;\n    case 4:\n        uVar5 = fcn.0040eba1(puVar7 + 4);\n        break;\n    case 5:\n    case 7:\n        uVar5 = fcn.0040ebfd(puVar7 + 4);\n        break;\n    case 6:\n        fcn.00406d74(puVar7 + 4);\n        puVar7 = puVar7 + 6;\ncode_r0x0040d8df:\n        uVar5 = fcn.0040ec5f(puVar7);\n        break;\n    case 8:\n        fcn.00406d74(unaff_EBP + 8);\n        if (*(unaff_EBP + 8) == 0) {\n            *(puVar7 + 4) = 0;\n        }\n        else {\n            iVar6 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(0, *(unaff_EBP + 8));\n            *(puVar7 + 4) = iVar6;\n            if (iVar6 == 0) {\n                fcn.0042f1c0();\n            }\n            fcn.0044360e(*(puVar7 + 4), *(unaff_EBP + 8));\n        }\n        break;\n    case 9:\n    case 0xd:\n        *(unaff_EBP + -0x14) = 0;\n        fcn.0043164a(uVar5);\n        fcn.00406d74(unaff_EBP + -0x2c);\n        fcn.0040eb1a(unaff_EBP + -0x28);\n        fcn.0040eb1a(unaff_EBP + -0x26);\n        fcn.0044360e(unaff_EBP + -0x24, 8);\n        pcVar4 = _sym.imp.ole32.dll_CoCreateInstance;\n        uVar5 = 0x472f00;\n        if (*puVar7 != 0xd) {\n            uVar5 = 0x471f90;\n        }\n        puVar1 = puVar7 + 4;\n        iVar6 = (*_sym.imp.ole32.dll_CoCreateInstance)(unaff_EBP + -0x2c, 0, 0x17, uVar5, puVar1);\n        if (iVar6 == -0x7ff8ffa9) {\n            uVar5 = 0x472f00;\n            if (*puVar7 != 0xd) {\n                uVar5 = 0x471f90;\n            }\n            iVar6 = (*pcVar4)(unaff_EBP + -0x2c, 0, 7, uVar5, puVar1);\n        }\n        fcn.0040ccf0(iVar6);\n        puVar3 = *puVar1;\n        *(unaff_EBP + -4) = 0;\n        iVar6 = (***puVar3)(puVar3, 0x4732e8, unaff_EBP + -0x14);\n        if (iVar6 < 0) {\n            iVar6 = (****puVar1)(*puVar1, 0x472e90, unaff_EBP + -0x14);\n        }\n        fcn.0040ccf0(iVar6);\n        uVar5 = (**(**(unaff_EBP + -0x14) + 0x14))(*(unaff_EBP + -0x14), unaff_EBP + -0x1c);\n        fcn.0040ccf0(uVar5);\n        *(unaff_EBP + -4) = 0xffffffff;\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n        uVar5 = *(unaff_EBP + 8);\n        break;\n    case 0x11:\n        uVar5 = fcn.0040eac1(puVar7 + 4);\n    }\ncode_r0x0040d948:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 1399
    },
    "0040daf5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040daf5(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        do {\n            fcn.0040d403();\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0040e925": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040e925(int32_t param_1, ushort param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 2;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.004437ad();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 2;\n    return param_1;\n}\n",
        "token_count": 147
    },
    "0040e963": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040e963(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 4;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.004437ad();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 147
    },
    "0040e9d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040e9d5(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 4;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.004437ad();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 149
    },
    "0040ea2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040ea2a(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(param_1 + 0x24) + 8;\n    if (*(param_1 + 0x28) <= uVar2 && uVar2 != *(param_1 + 0x28)) {\n        fcn.004437ad();\n    }\n    puVar1 = *(param_1 + 0x24);\n    *puVar1 = param_2;\n    puVar1[1] = param_3;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 8;\n    return param_1;\n}\n",
        "token_count": 180
    },
    "0040eb1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040eb1a(int32_t param_1)\n\n{\n    ushort *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 2U) {\n        fcn.00443829((*(param_1 + 0x24) - *(param_1 + 0x28)) + 2);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 2;\n    return param_1;\n}\n",
        "token_count": 146
    },
    "0040eba1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040eba1(int32_t param_1)\n\n{\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 4U) {\n        fcn.00443829((*(param_1 + 0x24) - *(param_1 + 0x28)) + 4);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 145
    },
    "0040ebfd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ebfd(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 8U) {\n        fcn.00443829((*(param_1 + 0x24) - *(param_1 + 0x28)) + 8);\n    }\n    puVar1 = *(param_1 + 0x24);\n    *unaff_retaddr = *puVar1;\n    unaff_retaddr[1] = puVar1[1];\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 8;\n    return param_1;\n}\n",
        "token_count": 176
    },
    "0040ec5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ec5f(int32_t param_1)\n\n{\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 4U) {\n        fcn.00443829((*(param_1 + 0x24) - *(param_1 + 0x28)) + 4);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 146
    },
    "0040edad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040edad(int32_t param_1, uint32_t param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.00412ba6(param_2);\n    if (puVar1 == NULL) {\n        *(param_1 + 8) = 1;\n    }\n    else {\n        param_2 = param_2 & 0xffff0000;\n        iVar2 = fcn.0040e5ea(puVar1 & 0xffff0000 | puVar1[10] + 0x76c, param_2 | puVar1[8] + 1, param_2 | puVar1[6], \n                             param_2 | puVar1[4], param_2 | puVar1[2], param_2 | *puVar1, param_1);\n        *(param_1 + 8) = iVar2 == 0;\n    }\n    return param_1;\n}\n",
        "token_count": 224
    },
    "0040fda6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040fda6(uint param_1)\n\n{\n    fcn.004108b0(param_1, 0, 0x18);\n    return;\n}\n",
        "token_count": 40
    },
    "0040ff68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nuint __cdecl fcn.0040ff68(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uchar *puVar2;\n    int32_t *piStack320;\n    int32_t *piStack316;\n    uint *puStack312;\n    int32_t *piStack308;\n    uint *puStack304;\n    int32_t *piStack300;\n    int32_t *piStack296;\n    uint uStack292;\n    uint var_11ch;\n    uint lpMultiByteStr;\n    uint var_ch;\n    uint var_8h;\n    int32_t *wVerMajor;\n    \n    uStack292 = 0xd;\n    piStack296 = 0x40ff7d;\n    fcn.00457a83();\n    var_ch = 0x80029c4a;\n    piStack296 = 0x40ff8b;\n    var_8h = (**(*in_ECX + 0x20))();\n    piStack296 = arg_10h;\n    puVar2 = NULL;\n    piStack300 = arg_ch;\n    wVerMajor = NULL;\n    puStack304 = arg_8h;\n    piStack308 = 0x40ffa4;\n    iVar1 = fcn.00410220();\n    if (iVar1 == 0) {\n        piStack308 = &fcn.0040ff68::wVerMajor;\n        puStack312 = arg_8h;\n        piStack316 = 0x40ffbf;\n        iVar1 = fcn.004101ac();\n        if (iVar1 == 0) {\n            piStack316 = &fcn.0040ff68::wVerMajor;\n            piStack320 = arg_8h;\n            iVar1 = (**(*in_ECX + 0x24))();\n            if (iVar1 < 0) {\n                piStack308 = 0x40ffde;\n                iVar1 = fcn.00456c34();\n                piStack316 = *(iVar1 + 8);\n                puStack312 = &fcn.0040ff68::lpMultiByteStr;\n                piStack308 = 0x104;\n                piStack320 = 0x40fff4;\n                (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n                if (*0x10 != 0x114) {\n                    piStack320 = &fcn.0040ff68::lpMultiByteStr;\n                    puVar2 = &stack0xfffffec0;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    fcn.00412040();\n                    piStack320 = piStack320 & 0xffff0000;\n                    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (0, 0, &fcn.0040ff68::lpMultiByteStr, 0xffffffff, &stack0xfffffec0, iVar1 + 1);\n                }\n                piStack320 = &fcn.0040ff68::wVerMajor;\n                iVar1 = (*_sym.imp.OLEAUT32.dll_LoadRegTypeLib)(puVar2);\n                if (iVar1 < 0) {\n                    wVerMajor = NULL;\n                }\n            }\n            piStack308 = wVerMajor;\n            puStack312 = arg_8h;\n            piStack316 = 0x410056;\n            fcn.004101dd();\n        }\n        if (wVerMajor != NULL) {\n            piStack316 = arg_10h;\n            piStack320 = arg_ch;\n            var_ch = (**(*wVerMajor + 0x18))(wVerMajor);\n            (**(*wVerMajor + 8))(wVerMajor);\n            puStack304 = *arg_10h;\n            piStack308 = arg_ch;\n            puStack312 = arg_8h;\n            piStack316 = 0x410083;\n            fcn.00410271();\n        }\n    }\n    else {\n        var_ch = 0;\n    }\n    piStack316 = 0xd;\n    piStack320 = 0x41008a;\n    fcn.00457af3();\n    return var_ch;\n}\n",
        "token_count": 926
    },
    "00410463": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410463(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CArchiveException.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0043b52e(extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 145
    },
    "0041062e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041062e(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_retaddr;\n    \n    iVar3 = fcn.00456c34();\n    fcn.00457a83(0xb);\n    uVar4 = 0;\n    puVar1 = *(iVar3 + 0x103c);\n    while (puVar2 = puVar1,  puVar2 != NULL) {\n        puVar1 = puVar2[6];\n        iVar3 = fcn.00411a10(unaff_retaddr, puVar2 + 1, 0x10);\n        if (iVar3 == 0) {\n            fcn.00456f96(puVar2);\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n            uVar4 = 1;\n        }\n    }\n    fcn.00457af3(0xb);\n    return uVar4;\n}\n",
        "token_count": 227
    },
    "00410859": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00410859(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 <= *0x481854) {\n        fcn.004147a6(9);\n        iVar1 = fcn.00414be5(param_1);\n        fcn.00414807(9);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x487924, 0, param_1 + 0xf & 0xfffffff0);\n    return iVar1;\n}\n",
        "token_count": 160
    },
    "00411abc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411abc(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    \n    if (param_1 != 0) {\n        fcn.004147a6(9);\n        arg_8h = fcn.0041488f(param_1);\n        if (arg_8h != 0) {\n            fcn.004148ba(arg_8h, param_1);\n            fcn.00414807(9);\n            return;\n        }\n        fcn.00414807(9);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x487924, 0, param_1);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00413460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413460(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.0041347b(param_1, param_2, param_3, param_4, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "00413d12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00413d12(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (param_2 < 0xffffffe1) {\n        fcn.004147a6(9);\n        iVar2 = fcn.0041488f(param_1);\n        if (iVar2 == 0) {\n            fcn.00414807(9);\n            if (param_2 == 0) {\n                param_2 = 1;\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x487924, 0x10, param_1, param_2 + 0xf & 0xfffffff0);\n        }\n        else {\n            uVar1 = 0;\n            if (param_2 <= *0x481854) {\n                iVar2 = fcn.0041509a(iVar2, param_1, param_2);\n                if (iVar2 != 0) {\n                    uVar1 = param_1;\n                }\n            }\n            fcn.00414807(9);\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 270
    },
    "004144ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004144ba(uint32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.00414536();\n    iVar3 = 0;\n    *puVar1 = param_1;\n    puVar1 = 0x481628;\n    do {\n        if (param_1 == *puVar1) {\n            puVar2 = fcn.0041452d();\n            *puVar2 = *(iVar3 * 8 + 0x48162c);\n            return;\n        }\n        puVar1 = puVar1 + 2;\n        iVar3 = iVar3 + 1;\n    } while (puVar1 < 0x481790);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        puVar2 = fcn.0041452d();\n        *puVar2 = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        puVar2 = fcn.0041452d();\n        *puVar2 = 8;\n        return;\n    }\n    puVar2 = fcn.0041452d();\n    *puVar2 = 0x16;\n    return;\n}\n",
        "token_count": 297
    },
    "0041620d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041620d(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h_2;\n    uint var_4h;\n    uint var_18h;\n    uint uStack64;\n    code *pcStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h_2;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack12 = 0x471320;\n    pcStack16 = fcn.00416cfc;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if (*0x481864 != NULL) {\n        var_4h_2 = 1;\n        uStack44 = 0x416248;\n        (**0x481864)();\n    }\n    var_4h_2 = 0xffffffff;\n    uStack44 = 0x41625e;\n    uStack56 = 0x471308;\n    pcStack60 = fcn.00416cfc;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack52 = 0;\n    iVar1 = fcn.00416081();\n    if (*(iVar1 + 0x60) != 0) {\n        uStack52 = 1;\n        iVar1 = fcn.00416081();\n        (**(iVar1 + 0x60))();\n    }\n    uStack52 = 0xffffffff;\n    fcn.00416e0d(10);\n    fcn.0041d7da(0x16);\n    fcn.00411b6d(3);\n    fcn.0041abd1(0x4161f0, 0, 1);\n    return;\n}\n",
        "token_count": 427
    },
    "004170a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.004170a0(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x004170ef;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x00417101;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x00417101;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x00417101;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x004170ef:\n    puVar5 = puVar3 + -1;\ncode_r0x00417101:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x00417178;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x00417178:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 744
    },
    "00417090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00417090(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x00417178;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x00417178:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 436
    },
    "004171ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004171ba(uint param_1, uint32_t param_2, uint param_3, int32_t param_4, uint param_5, int32_t param_6, \n                    int32_t param_7, int32_t param_8)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint Locale;\n    uint32_t lpWideCharStr;\n    uint lpSrcStr;\n    int32_t cchSrc;\n    uint lpDestStr;\n    int32_t cchDest;\n    int32_t var_20h_3;\n    int32_t var_24h_4;\n    uint var_1ch;\n    uint var_18h_2;\n    uint var_10h;\n    uint dwMapFlags;\n    uint var_10h_3;\n    uint var_4h;\n    uint var_20h;\n    uint lpMultiByteStr;\n    uint cbMultiByte;\n    uint CodePage;\n    uint dwFlags;\n    uint uStack132;\n    uint32_t uStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uint uStack100;\n    int32_t iStack96;\n    uchar *puStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    uint32_t uStack80;\n    uint uStack76;\n    int32_t iStack72;\n    uint uStack68;\n    int32_t iStack64;\n    uint var_24h_3;\n    uint var_20h_2;\n    uint var_1ch_2;\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h_2;\n    \n    var_4h_2 = 0xffffffff;\n    uStack12 = 0x471630;\n    pcStack16 = fcn.00416cfc;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if (*0x485e50 == 0) {\n        iStack64 = 0;\n        uStack68 = 0;\n        iStack72 = 1;\n        uStack76 = 0x47162c;\n        uStack80 = 0x100;\n        iStack84 = 0;\n        iStack88 = 0x417202;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        if (iVar1 != 0) {\n            *0x485e50 = 1;\n            goto code_r0x00417230;\n        }\n        iStack64 = 0;\n        uStack68 = 0;\n        iStack72 = 1;\n        uStack76 = 0x471628;\n        uStack80 = 0x100;\n        iStack84 = 0;\n        iStack88 = 0x41721e;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n        if (iVar1 != 0) {\n            *0x485e50 = 2;\n            goto code_r0x00417230;\n        }\n    }\n    else {\ncode_r0x00417230:\n        if (0 < cchSrc) {\n            iStack64 = cchSrc;\n            uStack68 = lpSrcStr;\n            iStack72 = 0x417240;\n            cchSrc = fcn.004173de();\n        }\n        if (*0x485e50 == 2) {\n            iStack64 = cchDest;\n            uStack68 = lpDestStr;\n            iStack72 = cchSrc;\n            uStack76 = lpSrcStr;\n            uStack80 = lpWideCharStr;\n            iStack84 = Locale;\n            iStack88 = 0x417267;\n            iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n            goto code_r0x0041734a;\n        }\n        if (*0x485e50 == 1) {\n            if (var_20h_3 == 0) {\n                var_20h_3 = *0x485f2c;\n            }\n            iStack64 = 0;\n            uStack68 = 0;\n            iStack72 = cchSrc;\n            uStack76 = lpSrcStr;\n            uStack80 = (-(var_24h_4 != 0) & 8) + 1;\n            iStack84 = var_20h_3;\n            iStack88 = 0x41729f;\n            puStack92 = &stack0xffffffac;\n            puStack124 = &stack0xffffffac;\n            iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n            if (iVar2 != 0) {\n                var_4h_2 = 0;\n                iStack88 = 0x4172bc;\n                fcn.00412040();\n                var_4h_2 = 0xffffffff;\n                if (*0x10 != 0x54) {\n                    iStack96 = cchSrc;\n                    uStack100 = lpSrcStr;\n                    uStack104 = 1;\n                    iStack108 = var_20h_3;\n                    uStack112 = 0x4172f7;\n                    iStack88 = iVar2;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n                    if (iVar1 != 0) {\n                        uStack112 = 0;\n                        uStack116 = 0;\n                        uStack128 = lpWideCharStr;\n                        uStack132 = Locale;\n                        iStack120 = iVar2;\n                        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n                        if (iVar1 != 0) {\n                            if ((lpWideCharStr & 0x400) == 0) {\n                                var_4h_2 = 1;\n                                fcn.00412040();\n                                var_4h_2 = 0xffffffff;\n                                if ((*0x10 != 0x84) &&\n                                   (iVar2 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                                                      (Locale, lpWideCharStr, &stack0xffffffac, iVar2, &stack0xffffff7c\n                                                       , iVar1),  iVar2 != 0)) {\n                                    if (cchDest == 0) {\n                                        cchDest = 0;\n                                        lpDestStr = 0;\n                                    }\n                                    iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                                      (var_20h_3, 0x220, &stack0xffffff7c, iVar1, lpDestStr, cchDest, 0\n                                                       , 0);\n                                    iVar2 = iVar1;\njoined_r0x004173d1:\n                                    if (iVar2 != 0) goto code_r0x0041734a;\n                                }\n                            }\n                            else {\n                                if (cchDest == 0) goto code_r0x0041734a;\n                                if (iVar1 <= cchDest) {\n                                    iVar2 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                                                      (Locale, lpWideCharStr, &stack0xffffffac, iVar2, lpDestStr, \n                                                       cchDest);\n                                    goto joined_r0x004173d1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    iVar1 = 0;\ncode_r0x0041734a:\n    *in_FS_OFFSET = uStack20;\n    return iVar1;\n}\n",
        "token_count": 1660
    },
    "0041a9e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041a9e6(uint param_1, uint param_2, int32_t *param_3)\n\n{\n    int16_t iVar1;\n    \n    iVar1 = fcn.0041d4ed(param_1, param_2);\n    if (iVar1 == -1) {\n        *param_3 = -1;\n        return;\n    }\n    *param_3 = *param_3 + 1;\n    return;\n}\n",
        "token_count": 100
    },
    "0041b423": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b423(uint param_1, uint param_2)\n\n{\n    fcn.0041b2b7(param_1, param_2, 0x481f80);\n    return;\n}\n",
        "token_count": 49
    },
    "0041b439": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b439(uint param_1, uint param_2)\n\n{\n    fcn.0041b2b7(param_1, param_2, 0x481f98);\n    return;\n}\n",
        "token_count": 49
    },
    "0041b4c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b4c9(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.0041db4c(&var_ch, &arg_ch, arg_ch, 0, 0, 0, 0);\n    fcn.0041b423(&var_ch, arg_8h);\n    return;\n}\n",
        "token_count": 83
    },
    "0041b524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b524(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.0041db4c(&var_ch, &arg_ch, arg_ch, 0, 0, 0, 0);\n    fcn.0041b439(&var_ch, arg_8h);\n    return;\n}\n",
        "token_count": 81
    },
    "0041ea46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041ea46(uint param_1, uint param_2, int32_t param_3, uint param_4, int32_t param_5, int32_t param_6)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint dwInfoType;\n    uint lpSrcStr;\n    int32_t cchSrc;\n    uint var_14h;\n    int32_t var_28h;\n    int32_t var_4h_2;\n    uint var_18h_3;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_18h_4;\n    uint var_4h;\n    uint lpWideCharStr;\n    uint var_10h_2;\n    uint CodePage;\n    uint var_18h;\n    int32_t iStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    uchar *puStack104;\n    uint uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t iStack68;\n    uint *puStack64;\n    uchar *var_2ch_2;\n    int32_t var_28h_2;\n    uint var_24h;\n    uint var_20h;\n    uint lpCharType;\n    uchar *puStack28;\n    uint uStack20;\n    code *var_2ch;\n    uint uStack12;\n    uint var_4h_3;\n    \n    var_4h_3 = 0xffffffff;\n    uStack12 = 0x471f40;\n    var_2ch = fcn.00416cfc;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack28 = &stack0xffffffc4;\n    iVar4 = *0x485fd4;\n    puVar1 = &stack0xffffffc4;\n    if (*0x485fd4 == 0) {\n        puStack64 = &fcn.0041ea46::lpCharType;\n        iStack68 = 1;\n        uStack72 = 0x47162c;\n        uStack76 = 1;\n        iStack80 = 0x41ea8b;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n        iVar4 = 1;\n        puVar1 = puStack28;\n        if (iVar2 != 0) goto code_r0x0041eab5;\n        puStack64 = &fcn.0041ea46::lpCharType;\n        iStack68 = 1;\n        uStack72 = 0x471628;\n        uStack76 = 1;\n        iStack80 = 0;\n        uStack84 = 0x41eaa5;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetStringTypeA)();\n        if (iVar4 != 0) {\n            iVar4 = 2;\n            puVar1 = puStack28;\n            goto code_r0x0041eab5;\n        }\n    }\n    else {\ncode_r0x0041eab5:\n        puStack28 = puVar1;\n        *0x485fd4 = iVar4;\n        if (*0x485fd4 == 1) {\n            puStack64 = var_14h;\n            iStack68 = cchSrc;\n            uStack72 = lpSrcStr;\n            uStack76 = dwInfoType;\n            iStack80 = 0x41eacc;\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n            goto code_r0x0041ebf9;\n        }\n        if (*0x485fd4 == 2) {\n            if (var_28h == 0) {\n                var_28h = *0x485f2c;\n            }\n            puStack64 = NULL;\n            iStack68 = 0;\n            uStack72 = 0;\n            uStack76 = 0;\n            iStack80 = cchSrc;\n            uStack84 = lpSrcStr;\n            uStack88 = 0x220;\n            iStack92 = var_28h;\n            iStack96 = 0x41eaff;\n            var_2ch_2 = &stack0xffffffa4;\n            puStack104 = &stack0xffffffa4;\n            var_28h_2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n            if (var_28h_2 != 0) {\n                var_4h_3 = 0;\n                iStack96 = 0x41eb19;\n                fcn.00412040();\n                uStack100 = 0;\n                puStack108 = 0x41eb29;\n                iStack96 = var_28h_2;\n                puStack28 = &stack0xffffffa4;\n                fcn.004108b0();\n                var_4h_3 = 0xffffffff;\n                if (*0x10 != 0x5c) {\n                    iStack96 = 0;\n                    uStack100 = 0;\n                    iStack112 = cchSrc;\n                    uStack116 = lpSrcStr;\n                    uStack120 = 0x220;\n                    iStack124 = var_28h;\n                    puStack108 = &stack0xffffffa4;\n                    puStack104 = var_28h_2;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    if (iVar4 != 0) {\n                        var_4h_3 = 1;\n                        fcn.00412040();\n                        var_4h_3 = 0xffffffff;\n                        if (*0x10 != 0x7c) {\n                            if (var_4h_2 == 0) {\n                                var_4h_2 = *0x485f1c;\n                            }\n                            cchSrc = cchSrc * 2;\n                            puStack28 = &stack0xffffff84;\n                            *(&stack0xffffff84 + cchSrc) = -1;\n                            *(&stack0xffffff82 + cchSrc) = 0xffff;\n                            uVar3 = (*_sym.imp.KERNEL32.dll_GetStringTypeA)\n                                              (var_4h_2, dwInfoType, var_2ch_2, var_28h_2, &stack0xffffff84);\n                            if ((*(&stack0xffffff82 + cchSrc) != -1) && (*(&stack0xffffff84 + cchSrc) == -1)) {\n                                fcn.00411060(var_14h, &stack0xffffff84, cchSrc);\n                                goto code_r0x0041ebf9;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    uVar3 = 0;\ncode_r0x0041ebf9:\n    *in_FS_OFFSET = uStack20;\n    return uVar3;\n}\n",
        "token_count": 1557
    },
    "0041f1e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0041f1e4(uint param_1, uint param_2, uint8_t *param_3, int32_t param_4, uint8_t *param_5, int32_t param_6, \n                   int32_t param_7)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint Locale;\n    uint dwCmpFlags;\n    uint8_t *lpString1;\n    int32_t lpCPInfo;\n    uint8_t *lpString2;\n    int32_t cbMultiByte;\n    int32_t var_20h_4;\n    uint var_4h_2;\n    uint var_1ch_2;\n    uint var_18h_2;\n    uint var_10h;\n    uint var_18h_3;\n    uint var_4h;\n    uint var_20h_2;\n    uint lpMultiByteStr;\n    uint var_14h;\n    uint var_1ch;\n    uint CodePage;\n    uint var_18h;\n    int32_t iStack152;\n    uint uStack148;\n    uint8_t *puStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uint uStack132;\n    int32_t iStack128;\n    uint uStack124;\n    uint8_t *puStack120;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint8_t *puStack96;\n    int32_t iStack92;\n    uint8_t *puStack88;\n    uint *puStack84;\n    uint32_t var_3ch_2;\n    uint var_36h;\n    uchar *var_28h;\n    uchar *var_24h_2;\n    int32_t iStack36;\n    int32_t cchCount1;\n    uchar *puStack28;\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h_3;\n    \n    var_4h_3 = 0xffffffff;\n    uStack12 = 0x471f58;\n    pcStack16 = fcn.00416cfc;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack28 = &stack0xffffffb0;\n    uVar6 = 1;\n    puVar2 = &stack0xffffffb0;\n    if (*0x485fd8 == 0) {\n        puStack84 = 0x1;\n        puStack88 = 0x47162c;\n        iStack92 = 1;\n        puStack96 = 0x47162c;\n        uStack100 = 0;\n        iStack104 = 0;\n        iStack108 = 0x41f228;\n        iVar3 = (*_sym.imp.KERNEL32.dll_CompareStringW)();\n        if (iVar3 != 0) {\n            *0x485fd8 = 1;\n            puVar2 = puStack28;\n            goto code_r0x0041f257;\n        }\n        puStack84 = 0x1;\n        puStack88 = 0x471628;\n        iStack92 = 1;\n        puStack96 = 0x471628;\n        uStack100 = 0;\n        iStack104 = 0;\n        iStack108 = 0x41f245;\n        iVar3 = (*_sym.imp.KERNEL32.dll_CompareStringA)();\n        if (iVar3 != 0) {\n            *0x485fd8 = 2;\n            puVar2 = puStack28;\n            goto code_r0x0041f257;\n        }\n    }\n    else {\ncode_r0x0041f257:\n        puStack28 = puVar2;\n        if (0 < lpCPInfo) {\n            puStack84 = lpCPInfo;\n            puStack88 = lpString1;\n            iStack92 = 0x41f267;\n            lpCPInfo = fcn.0041f461();\n        }\n        if (0 < cbMultiByte) {\n            puStack84 = cbMultiByte;\n            puStack88 = lpString2;\n            iStack92 = 0x41f27e;\n            cbMultiByte = fcn.0041f461();\n        }\n        if (*0x485fd8 == 2) {\n            puStack84 = cbMultiByte;\n            puStack88 = lpString2;\n            puStack96 = lpString1;\n            uStack100 = dwCmpFlags;\n            iStack104 = Locale;\n            iStack108 = 0x41f2a3;\n            iStack92 = lpCPInfo;\n            puStack84 = (*_sym.imp.KERNEL32.dll_CompareStringA)();\n            goto code_r0x0041f44f;\n        }\n        if (*0x485fd8 == 1) {\n            if (var_20h_4 == 0) {\n                var_20h_4 = *0x485f2c;\n            }\n            if ((lpCPInfo == 0) || (cbMultiByte == 0)) {\n                if (lpCPInfo == cbMultiByte) {\ncode_r0x0041f2cf:\n                    puStack84 = 0x2;\n                    goto code_r0x0041f44f;\n                }\n                puStack84 = uVar6;\n                if (1 < cbMultiByte) goto code_r0x0041f44f;\n                if (lpCPInfo < 2) {\n                    puStack84 = &fcn.0041f1e4::var_3ch_2;\n                    puStack88 = var_20h_4;\n                    iStack92 = 0x41f2f4;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n                    if (iVar3 == 0) goto code_r0x0041f44d;\n                    if (lpCPInfo < 1) {\n                        if (0 < cbMultiByte) {\n                            puStack84 = uVar6;\n                            if (1 < var_3ch_2) {\n                                puVar4 = &fcn.0041f1e4::var_36h;\n                                while ((var_36h != 0 && (*(puVar4 + 1) != 0))) {\n                                    if ((*puVar4 <= *lpString2) && (*lpString2 <= *(puVar4 + 1))) goto code_r0x0041f2cf;\n                                    puVar4 = puVar4 + 2;\n                                    var_36h._0_1_ = *puVar4;\n                                }\n                            }\n                            goto code_r0x0041f44f;\n                        }\n                        goto code_r0x0041f362;\n                    }\n                    if (1 < var_3ch_2) {\n                        puVar4 = &fcn.0041f1e4::var_36h;\n                        while ((var_36h != 0 && (*(puVar4 + 1) != 0))) {\n                            if ((*puVar4 <= *lpString1) && (*lpString1 <= *(puVar4 + 1))) goto code_r0x0041f2cf;\n                            puVar4 = puVar4 + 2;\n                            var_36h._0_1_ = *puVar4;\n                        }\n                    }\n                }\n                puStack84 = 0x3;\n                goto code_r0x0041f44f;\n            }\ncode_r0x0041f362:\n            puStack84 = NULL;\n            puStack88 = NULL;\n            puStack96 = lpString1;\n            uStack100 = 9;\n            iStack104 = var_20h_4;\n            iStack108 = 0x41f373;\n            puStack112 = &stack0xffffff98;\n            var_24h_2 = &stack0xffffff98;\n            iStack92 = lpCPInfo;\n            cchCount1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n            if (cchCount1 != 0) {\n                var_4h_3 = 0;\n                iStack108 = 0x41f38d;\n                fcn.00412040();\n                pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n                var_4h_3 = 0xffffffff;\n                if (*0x10 != 0x68) {\n                    iStack108 = cchCount1;\n                    puStack120 = lpString1;\n                    uStack124 = 1;\n                    iStack128 = var_20h_4;\n                    uStack132 = 0x41f3d0;\n                    iStack116 = lpCPInfo;\n                    puStack28 = &stack0xffffff98;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n                    if (iVar3 != 0) {\n                        uStack132 = 0;\n                        uStack136 = 0;\n                        iStack140 = cbMultiByte;\n                        puStack144 = lpString2;\n                        uStack148 = 9;\n                        iStack152 = var_20h_4;\n                        var_28h = &stack0xffffff68;\n                        iVar3 = (*pcVar1)();\n                        if (iVar3 != 0) {\n                            var_4h_3 = 1;\n                            iStack36 = iVar3;\n                            fcn.00412040();\n                            var_4h_3 = 0xffffffff;\n                            if ((*0x10 != 0x98) &&\n                               (puStack28 = &stack0xffffff68, \n                               iVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                                 (var_20h_4, 1, lpString2, cbMultiByte, &stack0xffffff68, iVar3), \n                               iVar5 != 0)) {\n                                puStack84 = (*_sym.imp.KERNEL32.dll_CompareStringW)\n                                                      (Locale, dwCmpFlags, var_24h_2, cchCount1, &stack0xffffff68, iVar3\n                                                      );\n                                goto code_r0x0041f44f;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0041f44d:\n    puStack84 = 0;\ncode_r0x0041f44f:\n    *in_FS_OFFSET = uStack20;\n    return puStack84;\n}\n",
        "token_count": 2305
    },
    "0042062b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042062b(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + -8 + param_1 + 2) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    param_1[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x486414,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x486414] < '\\x01'))\n    {\n        fcn.00422dd6();\n    }\n    fcn.00420b6b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 286
    },
    "0042066f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042066f(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + -4 + param_1 + 1) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    param_1[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x486414,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x486414] < '\\x01'))\n    {\n        fcn.00422dd6();\n    }\n    fcn.00420b6b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 286
    },
    "004208d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.004208d2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x14) != 0) {\n        *extraout_ECX = 0x473370;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    cVar1 = *(unaff_EBP + 0x10);\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    if (cVar1 != '\\0') {\n        fcn.00421319(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 385
    },
    "0042093c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042093c(uint noname_0, uint arg_ch)\n\n{\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        *extraout_ECX = 0x473370;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    fcn.00422d50();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 290
    },
    "004209f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.004209f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x473378;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    extraout_ECX[1] = 0;\n    uVar1 = *(unaff_EBP + 0xc);\n    uVar2 = *(unaff_EBP + 8);\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    fcn.00421319(uVar2, uVar1);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 387
    },
    "00420a58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00420a58(uint noname_0, uint arg_ch)\n\n{\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        *extraout_ECX = 0x473378;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    *(*(*extraout_ECX + 4) + extraout_ECX) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    fcn.00422d50();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 291
    },
    "00420bbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420bbc(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.00420b83();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0042166a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042166a(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + -8 + param_1 + 2) =\n         vtable.std::basic_istream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    param_1[2] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x486414,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x486414] < '\\x01'))\n    {\n        fcn.00422dd6();\n    }\n    fcn.00420b6b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 295
    },
    "004216ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004216ae(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + -4 + param_1 + 1) =\n         vtable.std::basic_ostream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    param_1[1] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x486414,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x486414] < '\\x01'))\n    {\n        fcn.00422dd6();\n    }\n    fcn.00420b6b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 294
    },
    "004218e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.004218e5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x14) != 0) {\n        *extraout_ECX = 0x473408;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    cVar1 = *(unaff_EBP + 0x10);\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_ostream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    if (cVar1 != '\\0') {\n        fcn.00422283(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 394
    },
    "0042194f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042194f(uint noname_0, uint arg_ch)\n\n{\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        *extraout_ECX = 0x473408;\n        extraout_ECX[10] = 0;\n        extraout_ECX[1] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_ostream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.00422d50();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 299
    },
    "00421a03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.00421a03(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x473410;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    extraout_ECX[1] = 0;\n    uVar1 = *(unaff_EBP + 0xc);\n    uVar2 = *(unaff_EBP + 8);\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_istream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.00422283(uVar2, uVar1);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 396
    },
    "00421a6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00421a6b(uint noname_0, uint arg_ch)\n\n{\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0xc) != 0) {\n        *extraout_ECX = 0x473410;\n        extraout_ECX[0xb] = 0;\n        extraout_ECX[2] = vtable.std::basic_ios_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n        *(unaff_EBP + -0x10) = 1;\n        *(unaff_EBP + -4) = 0;\n    }\n    *(*(*extraout_ECX + 4) + extraout_ECX) =\n         vtable.std::basic_istream_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.00422d50();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 301
    },
    "00421b2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421b2a(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.00420b83();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00422568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.00422568(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00423ec2(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.004011d6(0);\n    fcn.004012c1(iVar2 + 0xc, 0, *0x46c258);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 307
    },
    "004229b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.004229b1(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00423ec2(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.004011d6(0);\n    fcn.004012c1(iVar2 + 0xc, 0, *0x46c258);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::runtime_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 308
    },
    "00423829": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423829(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    fcn.0041bad4(arg_14h);\n    uVar1 = fcn.00423858(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.0041bb26(arg_14h);\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "0042d6a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d6a3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0) {\n        arg_8h = 0;\n    }\n    if (arg_ch == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    }\n    iVar1 = *(*in_ECX + -8);\n    if (0 < var_4h) {\n        fcn.0043b4d7();\n        if (iVar1 < arg_8h) {\n            arg_8h = iVar1;\n        }\n        iVar1 = iVar1 + var_4h;\n        arg_ch_00 = *in_ECX;\n        if (*(arg_ch_00 + -4) < iVar1) {\n            fcn.0043b39b(iVar1);\n            fcn.00410d20(*in_ECX, arg_ch_00, *(arg_ch_00 + -8) + 1);\n            fcn.0043b496(arg_ch_00 + -0xc);\n        }\n        fcn.00410d20(*in_ECX + var_4h + arg_8h, *in_ECX + arg_8h, ((iVar1 - var_4h) - arg_8h) + 1);\n        fcn.00410d20(*in_ECX + arg_8h, arg_ch, var_4h);\n        *(*in_ECX + -8) = iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 400
    },
    "0042d8f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d8f8(uint arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char **in_ECX;\n    char *pcVar3;\n    uint var_4h;\n    \n    fcn.0043b4d7();\n    pcVar1 = *in_ECX;\n    pcVar3 = pcVar1 + *(pcVar1 + -8);\n    for (pcVar2 = pcVar1; pcVar2 < pcVar3; pcVar2 = fcn.0041206f(pcVar2)) {\n        if (*pcVar2 != arg_8h) {\n            *pcVar1 = *pcVar2;\n            pcVar1 = fcn.0041206f(pcVar1);\n        }\n    }\n    *pcVar1 = '\\0';\n    *(*in_ECX + -8) = *(*in_ECX + -8) - (pcVar2 - pcVar1);\n    return;\n}\n",
        "token_count": 214
    },
    "0042db7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042db7c(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if ((param_3 <= *(*param_1 + -8)) && (iVar1 = fcn.00412086(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 109
    },
    "0042e20a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e20a(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        do {\n            fcn.0043b667();\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0042e26d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.0042e26d(uint arg_8h, uint arg_ch, uint lpString2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00436067(0, *(unaff_EBP + 0x1c));\n    pcVar2 = *0x480454;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x2b] = pcVar2;\n    *(unaff_EBP + -4) = 1;\n    *extraout_ECX = vtable.CFileDialog.0;\n    fcn.004108b0(extraout_ECX + 0x17, 0, 0x4c);\n    pcVar2 = *(unaff_EBP + 8);\n    extraout_ECX[0x2a] = pcVar2;\n    ppcVar1 = extraout_ECX + 0x3c;\n    *ppcVar1 = 0;\n    extraout_ECX[0xf] = 0x7005 - (pcVar2 != NULL);\n    extraout_ECX[0x26] = *(unaff_EBP + 0xc);\n    uVar3 = *(unaff_EBP + 0x14);\n    *(extraout_ECX + 0x2c) = 0;\n    extraout_ECX[0x24] = extraout_ECX[0x24] | uVar3 | 0x800020;\n    extraout_ECX[0x7d] = NULL;\n    extraout_ECX[0x17] = 0x4c;\n    extraout_ECX[0x1e] = ppcVar1;\n    extraout_ECX[0x1f] = 0x104;\n    extraout_ECX[0x20] = extraout_ECX + 0x2c;\n    extraout_ECX[0x21] = 0x40;\n    if (*0x48598c == 0) {\n        iVar4 = fcn.00436387();\n        if (iVar4 != 0) {\n            extraout_ECX[0x24] = extraout_ECX[0x24] | 0x10;\n        }\n        if (*0x48598c == 0) goto code_r0x0042e347;\n    }\n    *(extraout_ECX + 0x92) = *(extraout_ECX + 0x92) | 8;\n    iVar4 = fcn.00456c34();\n    extraout_ECX[0x19] = *(iVar4 + 0xc);\ncode_r0x0042e347:\n    iVar4 = *(unaff_EBP + 0x10);\n    extraout_ECX[0x28] = fcn.0042f1f8;\n    if (iVar4 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(ppcVar1, *(unaff_EBP + 0x10), 0x104);\n    }\n    if (*(unaff_EBP + 0x18) != 0) {\n        fcn.0043b6b7(*(unaff_EBP + 0x18));\n        puVar5 = fcn.0043b95e(0);\n        while( true ) {\n            puVar5 = fcn.00411685(puVar5, 0x7c);\n            if (puVar5 == NULL) break;\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        extraout_ECX[0x1a] = extraout_ECX[0x2b];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 990
    },
    "0042ec20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042ec20(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    var_24h = arg_1ch;\n    var_20h = arg_18h;\n    var_1ch = arg_14h;\n    var_18h = arg_10h;\n    var_14h = arg_ch + -1;\n    var_10h = arg_8h + -0x76c;\n    var_4h = arg_20h;\n    uVar1 = fcn.004127c0(&var_24h);\n    *in_ECX = uVar1;\n    return;\n}\n",
        "token_count": 239
    },
    "0042effa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042effa(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint var_84h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00412ba6(in_ECX);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00413460(&var_84h, 0x80, arg_ch, iVar1);\n        if (iVar1 != 0) goto code_r0x0042f035;\n    }\n    var_84h._0_1_ = 0;\ncode_r0x0042f035:\n    fcn.0043b59c(&var_84h);\n    return arg_8h;\n}\n",
        "token_count": 188
    },
    "0042f04b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042f04b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_84h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00412a9c();\n    if (iVar1 != 0) {\n        iVar1 = fcn.00413460(&var_84h, 0x80, arg_ch, iVar1);\n        if (iVar1 != 0) goto code_r0x0042f086;\n    }\n    var_84h._0_1_ = 0;\ncode_r0x0042f086:\n    fcn.0043b59c(&var_84h);\n    return arg_8h;\n}\n",
        "token_count": 181
    },
    "00430efb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00430efb(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    \n    fcn.004108b0(&var_38h, 0, 0x38);\n    var_2ch = 0x28;\n    if (arg_8h == 0) {\n        var_38h = 0;\n    }\n    else {\n        var_38h = *(arg_8h + 0x1c);\n    }\n    var_34h = arg_ch;\n    var_30h = arg_10h;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x40a, 0, &var_38h);\n    if (iVar1 != 0) {\n        fcn.00410d20(arg_14h, &var_2ch, 0x28);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 265
    },
    "00430f6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430f6e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    \n    fcn.00431037(&var_2ch, arg_8h, arg_ch);\n    fcn.00410d20(&var_1ch, arg_10h, 0x10);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x406, 0, &var_2ch);\n    return;\n}\n",
        "token_count": 138
    },
    "00431037": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431037(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    fcn.004108b0(param_1, 0, 0x28);\n    *param_1 = 0x28;\n    if (param_2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(param_2 + 0x1c);\n    }\n    if (param_3 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(uVar2);\n        param_1[2] = uVar1;\n        param_1[1] = 1;\n        param_1[3] = uVar2;\n    }\n    else {\n        param_1[1] = 0;\n        param_1[2] = uVar2;\n        param_1[3] = param_3;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00433067": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433067(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(in_ECX + 8);\n    if (arg_8h < iVar1) {\n        fcn.00432e7c(iVar1 + arg_10h, 0xffffffff);\n        fcn.00411060(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, *(in_ECX + 4) + arg_8h * 4, \n                     (arg_8h * 0x3fffffff + iVar1) * 4);\n        fcn.004108b0(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n    }\n    else {\n        fcn.00432e7c(arg_8h + arg_10h, 0xffffffff);\n    }\n    if (arg_10h != 0) {\n        arg_8h = arg_8h << 2;\n        do {\n            *(*(in_ECX + 4) + arg_8h) = arg_ch;\n            arg_8h = arg_8h + 4;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "004330f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004330f9(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*(param_1 + 8) - param_2) - param_3;\n    if (iVar1 != 0) {\n        fcn.00411060(*(param_1 + 4) + param_2 * 4, *(param_1 + 4) + (param_2 + param_3) * 4, iVar1 * 4);\n    }\n    *(param_1 + 8) = *(param_1 + 8) - param_3;\n    return;\n}\n",
        "token_count": 154
    },
    "00433177": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433177(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.0043a6f7(param_2 * param_3 + 4);\n    *puVar1 = *param_1;\n    *param_1 = puVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "00434510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00434510(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.00434489(arg_8h, &arg_8h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.0043438a(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.00434423();\n        puVar2[1] = iVar1;\n        *puVar2 = *(*(in_ECX + 4) + arg_8h * 4);\n        *(*(in_ECX + 4) + arg_8h * 4) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 203
    },
    "00435deb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nuint __cdecl\nfcn.00435deb(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpTemplate;\n    uint var_ch_2;\n    uint hInstance;\n    uint var_10h;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint hWnd;\n    uint hMem;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.00456c34();\n        *(unaff_EBP + 0x10) = *(iVar2 + 8);\n    }\n    iVar2 = fcn.00456c34();\n    piVar1 = *(iVar2 + 0x1038);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0043970d(0x10);\n    fcn.0043970d(0x3c000);\n    if (piVar1 == NULL) {\ncode_r0x00435e68:\n        if (*(unaff_EBP + 8) != 0) {\n            *(unaff_EBP + -0x1c) = *0x480454;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x20) = 0;\n            iVar2 = fcn.0043ce0b(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x20);\n            if (iVar2 == 0) {\ncode_r0x00435ef3:\n                fcn.0043cb99(*(unaff_EBP + 8));\n                *(unaff_EBP + -4) = 2;\n                fcn.0043cfc2(*(unaff_EBP + -0x20));\n                uVar3 = fcn.0043cccc();\n                *(unaff_EBP + -0x14) = uVar3;\n                *(unaff_EBP + -4) = 1;\n                fcn.0043cc69();\n                if (*(unaff_EBP + -0x14) != 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n                    *(unaff_EBP + 8) = uVar3;\n                }\n            }\n            else {\n                iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.0041191c(*(unaff_EBP + -0x1c), \"MS Shell Dlg\");\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.0041191c(*(unaff_EBP + -0x1c), 0x46ccfc);\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.0041191c(*(unaff_EBP + -0x1c), \"Helv\");\n                            if (iVar2 != 0) goto code_r0x00435f35;\n                        }\n                    }\n                    if (*(unaff_EBP + -0x20) == 8) {\n                        *(unaff_EBP + -0x20) = 0;\n                    }\n                    goto code_r0x00435ef3;\n                }\n            }\ncode_r0x00435f35:\n            extraout_ECX[0xb] = -1;\n            extraout_ECX[9] = extraout_ECX[9] | 0x10;\n            fcn.00436f29(extraout_ECX);\n            if (*(unaff_EBP + 0xc) == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = *(*(unaff_EBP + 0xc) + 0x1c);\n            }\n            uVar3 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)\n                              (*(unaff_EBP + 0x10), *(unaff_EBP + 8), uVar3, fcn.00435af6, 0);\n            *(unaff_EBP + -0x18) = uVar3;\n            *(unaff_EBP + -4) = 0;\n            fcn.0043b52e();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 0x14))(unaff_EBP + -0x34);\n                if (*(unaff_EBP + -0x18) != 0) {\n                    (**(*extraout_ECX + 0xb4))(0);\n                }\n            }\n            iVar2 = fcn.00436f75();\n            if (iVar2 == 0) {\n                (**(*extraout_ECX + 0xa4))();\n            }\n            if ((*(unaff_EBP + -0x18) != 0) && ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(*(unaff_EBP + -0x18));\n                *(unaff_EBP + -0x18) = 0;\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n            }\n            if ((*(unaff_EBP + -0x18) != 0) || ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                uVar3 = 1;\n                goto code_r0x00436007;\n            }\n        }\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 0xb4))(unaff_EBP + -0x34);\n        if (iVar2 != 0) {\n            uVar3 = (**(*piVar1 + 0x10))(unaff_EBP + -0x34, *(unaff_EBP + 8));\n            *(unaff_EBP + 8) = uVar3;\n            goto code_r0x00435e68;\n        }\n    }\n    uVar3 = 0;\ncode_r0x00436007:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 1723
    },
    "00436067": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00436067(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.00436655();\n    *param_1 = vtable.CDialog.0;\n    fcn.004108b0(param_1 + 0xf, 0, 0x20);\n    param_1[0x14] = param_3;\n    param_1[0xf] = param_2;\n    param_1[0x10] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 128
    },
    "00436655": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00436655(code **param_1)\n\n{\n    fcn.0043a18b();\n    *param_1 = vtable.CWnd.0;\n    fcn.004108b0(param_1 + 7, 0, 0x20);\n    return param_1;\n}\n",
        "token_count": 71
    },
    "00436693": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00436693(code **param_1, code *param_2)\n\n{\n    fcn.0043a18b();\n    *param_1 = vtable.CWnd.0;\n    fcn.004108b0(param_1 + 7, 0, 0x20);\n    param_1[7] = param_2;\n    return param_1;\n}\n",
        "token_count": 90
    },
    "00436a9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00436a9d(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00436a04(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.004344bb(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 91
    },
    "00437800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00437800(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint *noname_3;\n    uint lpWndClass;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004569a4();\n    iVar1 = iVar1 + 0x58;\n    iVar2 = fcn.00456c34();\n    var_18h = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        (*_sym.imp.USER32.dll_wsprintfA)(iVar1, \"Afx:%x:%x\", var_18h, arg_8h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_wsprintfA)(iVar1, \"Afx:%x:%x:%x:%x:%x\", var_18h, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    noname_3 = &lpWndClass;\n    noname_1 = var_18h;\n    iVar2 = iVar1;\n    iVar3 = (*_sym.imp.USER32.dll_GetClassInfoA)();\n    if (iVar3 == 0) {\n        lpWndClass = arg_8h;\n        var_24h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_1ch = 0;\n        var_20h = 0;\n        var_8h = 0;\n        var_14h = arg_14h;\n        var_10h = arg_ch;\n        var_ch = arg_10h;\n        var_4h = iVar1;\n        iVar2 = fcn.0043775f(&lpWndClass, noname_1, iVar2, noname_3, unaff_EDI, unaff_ESI, unaff_EBX, arg_8h, \n                             _sym.imp.USER32.dll_DefWindowProcA, 0, 0, var_18h, arg_14h, arg_ch, arg_10h, 0);\n        if (iVar2 == 0) {\n            fcn.004431f1();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 751
    },
    "00437fed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00437fed(code **param_1)\n\n{\n    fcn.0043a4b1();\n    *param_1 = vtable.CTestCmdUI.0;\n    param_1[10] = 0x1;\n    return param_1;\n}\n",
        "token_count": 64
    },
    "004390b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004390b6(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t lpPoints;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.00439ddc();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x1c), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x1c);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_28h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.0040103c();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x1c);\n            }\n            uVar3 = fcn.0040521e(iVar5, 1);\n            fcn.00405289(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0040521e(iVar5, 2);\n            fcn.00405289(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_30h) / 2 - (var_20h - var_28h) / 2;\n    iVar4 = (var_34h + var_2ch) / 2 - (var_1ch - var_24h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_20h - var_28h) + iVar5)) {\n        lprcDst = (var_10h - var_20h) + var_28h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_1ch - var_24h) + iVar4)) {\n        var_14h = (var_24h - var_1ch) + var_ch;\n    }\n    fcn.00439f68(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1082
    },
    "0043a1a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a1a5(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    iVar1 = *(extraout_ECX + 0x10);\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 != 0) {\n        (**(iVar1 + 0x1c))(extraout_ECX);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 171
    },
    "0043ac43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ac43(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t hHandle;\n    int32_t hEvent;\n    int32_t var_4h;\n    \n    fcn.004108b0(&var_1ch, 0, 0x1c);\n    var_1ch = fcn.004569a4();\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateEventA;\n    hHandle = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    hEvent = (*pcVar1)(0, 1, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    var_14h = arg_8h;\n    if (hHandle != 0) {\n        if (hEvent != 0) {\n            iVar2 = fcn.00411c6d(arg_10h, arg_ch, 0x43a918, &var_1ch, arg_8h | 4, in_ECX + 0x2c);\n            *(in_ECX + 0x28) = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(iVar2);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n            (*pcVar1)(hHandle);\n            if ((arg_8h & 4) != 0) {\n                (*_sym.imp.KERNEL32.dll_SuspendThread)(*(in_ECX + 0x28));\n            }\n            if (var_4h == 0) {\n                (*_sym.imp.KERNEL32.dll_SetEvent)(hEvent);\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(in_ECX + 0x28), 0xffffffff);\n            (*pcVar1)(*(in_ECX + 0x28));\n            *(in_ECX + 0x28) = 0;\n            goto code_r0x0043ad17;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hHandle);\n    }\n    if (hEvent == 0) {\n        return 0;\n    }\ncode_r0x0043ad17:\n    (*pcVar1)(hEvent);\n    return 0;\n}\n",
        "token_count": 581
    },
    "0043ae16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0043ae16(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t arg_8h;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x1c);\n        if ((iVar3 != 0) && (*(iVar3 + 0x1c) != 0)) {\n            iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c));\n            if (iVar1 != 0) {\n                fcn.004368b5(iVar3, *(iVar3 + 0x1c), 0x363, 1, 0);\n                fcn.004383c0(*(iVar3 + 0x1c), 0x363, 1, 0, 1, 1);\n            }\n        }\n        fcn.00456c34();\n        arg_8h = 0x455a30;\n        iVar1 = fcn.0045744f(0x455a30);\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x54)) {\n            if ((*(iVar1 + 0x1c) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0x88) == 0) {\n                    fcn.00439fb7(0, arg_8h);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0x88))) {\n                    fcn.004368b5(iVar1, *(iVar1 + 0x1c), 0x363, 1, 0);\n                    arg_8h = *(iVar1 + 0x1c);\n                    fcn.004383c0(arg_8h, 0x363, 1, 0, 1, 1);\n                }\n                iVar2 = *(iVar1 + 0x88);\n                if (0 < iVar2) {\n                    fcn.00439fb7();\n                    arg_8h = iVar2;\n                }\n                *(iVar1 + 0x88) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00456c34();\n        iVar3 = fcn.0045744f(0x455a30);\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.0043d133();\n            fcn.0043d13c(1);\n        }\n    }\n    return unaff_EBX < 0;\n}\n",
        "token_count": 631
    },
    "0043af2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043af2d(int32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint arg_14h;\n    \n    puVar1 = (**(*param_1 + 0x28))();\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.004379e2(puVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x0043af8c:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            iVar2 = puVar1[1];\n            arg_14h = 0;\n            arg_10h = 0;\n            while (iVar2 = fcn.004379e2(iVar2, 0xc000, arg_10h, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x0043af8c;\n                iVar2 = iVar2 + 0x18;\n            }\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 337
    },
    "0043b39b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043b39b(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        *param_1 = *0x480454;\n    }\n    else {\n        uVar2 = 0x40;\n        if ((((param_2 < 0x41) || (uVar2 = 0x80,  param_2 < 0x81)) || (uVar2 = 0x100,  param_2 < 0x101)) ||\n           (uVar2 = 0x200,  param_2 < 0x201)) {\n            puVar1 = fcn.00407176();\n            puVar1[2] = uVar2;\n        }\n        else {\n            puVar1 = fcn.0043a6f7(param_2 + 0xd);\n            puVar1[2] = param_2;\n        }\n        *puVar1 = 1;\n        *(puVar1 + param_2 + 0xc) = 0;\n        puVar1[1] = param_2;\n        *param_1 = puVar1 + 3;\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0043b465": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b465(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x480458) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.0043b41d();\n        }\n        *param_1 = *0x480454;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0043b52e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b52e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x480458) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.0043b41d();\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0043b558": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b558(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_14h + arg_ch == 0) {\n        *arg_8h = *0x480454;\n    }\n    else {\n        fcn.0043b39b(arg_14h + arg_ch);\n        fcn.00410d20(*arg_8h, *in_ECX + arg_10h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "0043b5ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043b5ee(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = *0x480454;\n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00411da6(param_2);\n    }\n    if (iVar1 != 0) {\n        fcn.0043b39b(iVar1 * 2);\n        fcn.0043bb21(*param_1, param_2, iVar1 * 2 + 1);\n        fcn.0043b9ad(0xffffffff);\n    }\n    return param_1;\n}\n",
        "token_count": 162
    },
    "0043b63a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043b63a(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.0043b505(param_2);\n    fcn.00410d20(*param_1, param_2, param_2);\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 94
    },
    "0043b6de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043b6de(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00411da6(param_2);\n    }\n    fcn.0043b505(iVar1 * 2);\n    fcn.0043bb21(*param_1, param_2, iVar1 * 2 + 1);\n    fcn.0043b9ad(0xffffffff);\n    return param_1;\n}\n",
        "token_count": 137
    },
    "0043b71f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043b71f(int32_t *param_1, int32_t param_2, uint param_3, int32_t param_4)\n\n{\n    if (param_2 + param_4 != 0) {\n        fcn.0043b39b(param_2 + param_4);\n        fcn.00410d20(*param_1, param_2, param_2);\n        fcn.00410d20(*param_1 + param_2, param_4, param_4);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0043ba5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043ba5d(int32_t *param_1, uint8_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if ((param_3 < *(*param_1 + -8)) && (iVar1 = fcn.00411685(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 111
    },
    "0043c1f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c1f1(uint arg_8h, uint *arg_ch)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    var_4h = 0;\n    (*_sym.imp.USER32.dll_wsprintfA)\n              (&var_104h, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), *(arg_ch + 6), \n               *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), *(arg_ch + 0xd), \n               *(arg_ch + 0xe), *(arg_ch + 0xf));\n    fcn.0043b59c(&var_104h);\n    return arg_8h;\n}\n",
        "token_count": 208
    },
    "0043c4fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043c4fe(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint unaff_retaddr;\n    \n    pcVar1 = fcn.0043b95e(0x104);\n    fcn.004108b0(pcVar1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(pcVar1, unaff_retaddr, 0x104);\n    cVar3 = *pcVar1;\n    pcVar2 = pcVar1;\n    while ((cVar3 != '\\0' && (((cVar3 != '\\\\' && (cVar3 != '/')) || ((pcVar2[1] != '\\\\' && (pcVar2[1] != '/'))))))) {\n        pcVar2 = fcn.0041206f(pcVar2);\n        cVar3 = *pcVar2;\n    }\n    if (*pcVar2 == '\\0') {\n        cVar3 = *pcVar1;\n        while (((cVar3 != '\\0' && (cVar3 != '\\\\')) && (cVar3 != '/'))) {\n            pcVar1 = fcn.0041206f(pcVar1);\n            cVar3 = *pcVar1;\n        }\n    }\n    else {\n        for (pcVar1 = pcVar2 + 2; ((cVar3 = *pcVar1,  cVar3 != '\\0' && (cVar3 != '\\\\')) && (cVar3 != '/'));\n            pcVar1 = fcn.0041206f(pcVar1)) {\n        }\n        if (*pcVar1 == '\\0') goto code_r0x0043c57f;\n        do {\n            pcVar1 = fcn.0041206f(pcVar1);\ncode_r0x0043c57f:\n            cVar3 = *pcVar1;\n        } while (((cVar3 != '\\0') && (cVar3 != '\\\\')) && (cVar3 != '/'));\n    }\n    if (*pcVar1 != '\\0') {\n        pcVar1[1] = '\\0';\n    }\n    fcn.0043b9ad(0xffffffff);\n    return;\n}\n",
        "token_count": 482
    },
    "0043c7e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c7e2(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == 0) {\ncode_r0x0043c836:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.00411685(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.0043b4b9();\n                    goto code_r0x0043c836;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar1 = fcn.00411685(arg_ch, arg_14h);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar1 = iVar1 - arg_ch;\n        }\n        uVar2 = fcn.0043b9d5(iVar1, arg_ch, iVar1);\n        fcn.00410d20(uVar2, iVar1, arg_ch);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 314
    },
    "0043ccfd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043ccfd(int32_t param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar1 = param_1 + 0x1a;\n    }\n    else {\n        piVar1 = param_1 + 0x12;\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    do {\n        iVar2 = *piVar1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 265
    },
    "0043ce7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043ce7a(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*param_1);\n    uVar1 = fcn.0043ce0b(uVar1, unaff_retaddr, param_2);\n    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "0043d523": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043d523(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0043d49c(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.004344bb(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 91
    },
    "0043d685": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\ncode ** __cdecl fcn.0043d685(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **ppcVar3;\n    code *pcVar4;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    pcVar1 = *0x480454;\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[3] = pcVar1;\n    pcVar1 = *0x480454;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[4] = pcVar1;\n    extraout_ECX[7] = *0x480454;\n    pcVar1 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -4) = 2;\n    *extraout_ECX = vtable.CRecentFileList.0;\n    ppcVar3 = fcn.0043a6f7(pcVar1 * 4 + 4);\n    *(unaff_EBP + -0x14) = ppcVar3;\n    *(unaff_EBP + -4) = 3;\n    if (ppcVar3 == NULL) {\n        pcVar4 = NULL;\n    }\n    else {\n        *ppcVar3 = pcVar1;\n        *(unaff_EBP + 0x14) = ppcVar3 + 1;\n        fcn.00413dd9(ppcVar3 + 1, 4, pcVar1, 0x407231);\n        pcVar4 = *(unaff_EBP + 0x14);\n    }\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[2] = pcVar4;\n    pcVar4 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[1] = pcVar1;\n    extraout_ECX[5] = pcVar4;\n    fcn.0043b6b7(uVar2);\n    fcn.0043b6b7(*(unaff_EBP + 0x10));\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x18);\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 645
    },
    "0043dfcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043dfcf(uint arg_8h, uint lpFileTime)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    uint var_ah;\n    \n    iVar2 = fcn.0042edac(0);\n    lpSystemTime._0_2_ = *(iVar2 + 0x14) + 0x76c;\n    iVar2 = fcn.0042edac(0);\n    lpSystemTime._2_2_ = *(iVar2 + 0x10) + 1;\n    iVar2 = fcn.0042edac(0);\n    var_12h._0_2_ = *(iVar2 + 0xc);\n    iVar2 = fcn.0042edac(0);\n    var_12h._2_2_ = *(iVar2 + 8);\n    iVar2 = fcn.0042edac(0);\n    var_eh = *(iVar2 + 4);\n    puVar3 = fcn.0042edac(0);\n    var_ch = *puVar3;\n    var_ah._0_2_ = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, &var_ah + 2);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.0043e1cf(uVar4);\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&var_ah + 2, lpFileTime);\n    if (iVar2 == 0) {\n        uVar4 = (*pcVar1)(0);\n        fcn.0043e1cf(uVar4);\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "0043e375": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043e375(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x43e56b\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x0043e477;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x0043e477;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x0043e477;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x0043e477:\n                return 5;\n            case 0xb:\ncode_r0x0043e477:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x0043e477:\n                return 10;\n            default:\n                goto code_r0x0043e477;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x43e5cf\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x0043e477;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x0043e477;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x0043e477;\n            case 0x3c:\n                goto code_r0x0043e477;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x0043e3ed:\n        if (iVar1 == 1) {\ncode_r0x0043e477:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x0043e477:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x0043e3ed;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x0043e477:\n            return 3;\n        }\n    }\ncode_r0x0043e477:\n    return 1;\n}\n",
        "token_count": 1736
    },
    "00441958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00441958(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint lpString2;\n    \n    iVar1 = fcn.0043c7bb(arg_8h, &lpString2, 0x100);\n    if (iVar1 != 0) {\n        puVar2 = fcn.00411685(&lpString2, 10);\n        if (puVar2 != NULL) {\n            uVar3 = fcn.00411420(puVar2 + 1);\n            *arg_ch = uVar3;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar3, *0x48594c, 0x48);\n            *arg_ch = uVar3;\n            *puVar2 = 0;\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch + 7, &lpString2, 0x20);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 244
    },
    "00441db3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441db3(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.004108b0(&var_14h, 0, 0x14);\n    var_10h = arg_8h;\n    var_14h = 0x14;\n    (*_sym.imp.GDI32.dll_StartDocA)(*(in_ECX + 4), &var_14h);\n    return;\n}\n",
        "token_count": 116
    },
    "00446644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00446644(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    uint *puVar3;\n    int32_t var_24h;\n    uint8_t var_1bh;\n    uint var_1ah;\n    uint var_10h;\n    \n    (**(*in_ECX + 0xa0))(0x417, arg_8h, &var_24h);\n    var_1ah._0_1_ = 0;\n    var_1ah._1_1_ = 0;\n    *(arg_ch + 2) = *(arg_ch + 2) ^ 4;\n    *(arg_ch + 10) = 0;\n    *(arg_ch + 0xb) = 0;\n    iVar1 = fcn.00411a10(arg_ch, &var_24h, 0x14);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00439ddc();\n        fcn.00439e10(0x10000000, 0, 0);\n        (**(*in_ECX + 0xa0))(0x416, arg_8h, 0);\n        (**(*in_ECX + 0xa0))(0x415, arg_8h, arg_ch);\n        fcn.00439e10(0, uVar2 & 0x10000000, 0);\n        if ((((*(arg_ch + 9) ^ var_1bh) & 1) == 0) && (((*(arg_ch + 9) & 1) == 0 || (*arg_ch == var_24h)))) {\n            iVar1 = (**(*in_ECX + 0xa0))(0x41d, arg_8h, &var_10h);\n            if (iVar1 == 0) {\n                return;\n            }\n            puVar3 = &var_10h;\n        }\n        else {\n            puVar3 = NULL;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(in_ECX[7], puVar3, 1);\n    }\n    return;\n}\n",
        "token_count": 493
    },
    "00446a58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446a58(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (arg_14h == 0) {\n        arg_14h = arg_10h;\n        var_4h = fcn.0044697e(arg_8h, arg_ch, arg_10h);\n        iVar1 = fcn.0044697e(arg_8h, arg_ch, 0);\n        if ((iVar1 != var_4h) && (0 < arg_10h)) {\n            do {\n                iVar1 = (arg_14h + iVar4) / 2;\n                iVar2 = fcn.0044697e(arg_8h, arg_ch, iVar1);\n                if ((iVar2 != var_4h) && (bVar5 = iVar4 == iVar1,  iVar4 = iVar1,  iVar1 = arg_14h,  bVar5)) {\n                    fcn.0044697e(arg_8h, arg_ch, arg_14h);\n                    break;\n                }\n                arg_14h = iVar1;\n            } while (iVar4 < arg_14h);\n        }\n        piVar3 = fcn.0044685c(&var_10h, arg_8h, arg_ch);\n        iVar4 = *piVar3;\n        var_ch = piVar3[1];\ncode_r0x00446ba1:\n        fcn.0044697e(arg_8h, arg_ch, iVar4);\n    }\n    else {\n        fcn.0044697e(arg_8h, arg_ch, 0);\n        piVar3 = fcn.0044685c(&var_10h, arg_8h, arg_ch);\n        iVar1 = *piVar3;\n        var_4h = piVar3[1];\n        fcn.0044697e(arg_8h, arg_ch, 0x7fff);\n        piVar3 = fcn.0044685c(&var_10h, arg_8h, arg_ch);\n        iVar4 = *piVar3;\n        while( true ) {\n            var_ch = piVar3[1];\n            while( true ) {\n                if (iVar4 <= iVar1) {\n                    return;\n                }\n                fcn.0044697e(arg_8h, arg_ch, (iVar1 + iVar4) / 2);\n                piVar3 = fcn.0044685c(&var_18h, arg_8h, arg_ch);\n                var_10h = *piVar3;\n                if (piVar3[1] <= arg_10h) break;\n                if ((iVar1 == *piVar3) && (var_4h == piVar3[1])) goto code_r0x00446ba1;\n                iVar1 = *piVar3;\n                var_4h = piVar3[1];\n            }\n            if (arg_10h <= piVar3[1]) break;\n            iVar4 = *piVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 751
    },
    "00447322": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447322(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.00449dbf(&var_10h, (*(in_ECX + 100) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    if (*0x4805c8 < 0x40047) {\n        arg_ch[1] = arg_ch[1] + -2;\n    }\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 222
    },
    "0044764a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0044764a(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar1 = *(param_1 + 0x58);\n    if (0 < iVar1) {\n        piVar3 = *(param_1 + 0x5c);\n        iVar2 = 0;\n        if (0 < iVar1) {\n            do {\n                if (*piVar3 == param_2) {\n                    return iVar2;\n                }\n                iVar2 = iVar2 + 1;\n                piVar3 = piVar3 + 5;\n            } while (iVar2 < iVar1);\n        }\n    }\n    return -1;\n}\n",
        "token_count": 172
    },
    "0044798b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044798b(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.00449dbf(&var_10h, 1);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch + -2;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 168
    },
    "0044884e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044884e(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.00449dbf(&var_10h, *(in_ECX + 100) & 0xa000);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 184
    },
    "004489a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004489a7(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    uVar4 = *(in_ECX + 100) & 0xa000;\n    var_10h = 0;\n    var_4h = 0;\n    if (0 < *(in_ECX + 0x84)) {\n        do {\n            iVar3 = var_4h;\n            piVar1 = fcn.0044898b();\n            if ((piVar1 == NULL) || (iVar2 = (**(*piVar1 + 200))(),  iVar2 == 0)) {\n                iVar3 = var_8h - *0x485944;\n                var_8h = 0;\n                var_10h = var_10h + iVar3;\n                iVar3 = arg_20h;\n                if (uVar4 == 0) {\n                    iVar3 = arg_1ch;\n                }\n                if (iVar3 < var_10h) {\n                    if (var_4h == 0) {\n                        fcn.00433067(var_ch + 1, 0, 1);\n                    }\n                    iVar3 = var_ch + 1;\n                    goto code_r0x00448aaf;\n                }\ncode_r0x00448a79:\n                var_ch = var_4h;\n            }\n            else {\n                (*_sym.imp.USER32.dll_GetWindowRect)(piVar1[7], &lpRect, iVar3);\n                fcn.0044272e(&lpRect);\n                if (uVar4 == 0) {\n                    iVar3 = (var_18h - lpRect) + -1;\n                }\n                else {\n                    iVar3 = var_14h - var_1ch;\n                }\n                if (var_8h <= iVar3) {\n                    if (uVar4 == 0) {\n                        var_8h = (var_18h - lpRect) + -1;\n                    }\n                    else {\n                        var_8h = var_14h - var_1ch;\n                    }\n                }\n                if (uVar4 == 0) {\n                    bVar6 = SBORROW4(arg_10h, var_1ch);\n                    iVar3 = arg_10h - var_1ch;\n                    bVar5 = arg_10h == var_1ch;\n                }\n                else {\n                    bVar6 = SBORROW4(arg_ch, lpRect);\n                    iVar3 = arg_ch - lpRect;\n                    bVar5 = arg_ch == lpRect;\n                }\n                if (!bVar5 && bVar6 == iVar3 < 0) goto code_r0x00448a79;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0x84));\n    }\n    iVar3 = var_ch + 1;\n    fcn.00433067(iVar3, 0, 1);\ncode_r0x00448aaf:\n    fcn.00433067(iVar3, arg_8h, 1);\n    return iVar3;\n}\n",
        "token_count": 850
    },
    "00449d46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00449d46(int32_t param_1, uint param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t arg_14h;\n    int32_t arg_10h;\n    \n    if ((*(param_1 + 100) & 0x400001) == 0x400000) {\n        iVar1 = *(param_1 + 0x48);\n        if ((*(param_1 + 100) & 0xa000) == 0) {\n            arg_10h = ((param_3[2] - *(param_1 + 0x4c)) - *param_3) - iVar1;\n            arg_14h = 3;\n            arg_ch = param_3[1] + 2;\n            iVar1 = *param_3 + iVar1;\n        }\n        else {\n            arg_14h = ((param_3[3] - *(param_1 + 0x4c)) - param_3[1]) - iVar1;\n            arg_ch = param_3[1] + iVar1;\n            arg_10h = 3;\n            iVar1 = *param_3 + 2;\n        }\n        fcn.00452ca2(iVar1, arg_ch, arg_10h, arg_14h, *0x485960, *0x48595c);\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0044aec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aec8(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        puStack64 = auStack28;\n        uStack52 = 0xf;\n        uStack56 = 0xf;\n        uStack48 = 0;\n        uStack60 = 0;\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            *(param_1 + 0x70) = *(*(param_1 + 0x68) + 0x68);\n            *(param_1 + 0x78) = *(*(param_1 + 0x68) + 100) & 0xf000;\n            (*_sym.imp.USER32.dll_SetRectEmpty)(param_1 + 0xc);\n            *(param_1 + 0x20) = 0;\n            *(param_1 + 0x1c) = 0;\n            *(param_1 + 0x24) = 0;\n            *(param_1 + 0x7c) = 0;\n            *(param_1 + 0x80) = 0;\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            iVar2 = fcn.00436a76(uVar3);\n            iVar4 = (*_sym.imp.USER32.dll_LockWindowUpdate)(*(iVar2 + 0x1c));\n            if (iVar4 == 0) {\n                uVar3 = 3;\n            }\n            else {\n                uVar3 = 0x403;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetDCEx)(*(iVar2 + 0x1c), 0, uVar3);\n            uVar3 = fcn.00441ccc(uVar3);\n            *(param_1 + 0x84) = uVar3;\n            return;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&uStack48, 0, 0xf, 0xf);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&puStack64);\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "0044af89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044af89(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.0044afd2(1);\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    uVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    iVar2 = fcn.00436a76(uVar1);\n    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n    if (*(param_1 + 0x84) != 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(iVar2 + 0x1c), *(*(param_1 + 0x84) + 4));\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0044eff4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044eff4(uint param_1)\n\n{\n    fcn.00456c34();\n    fcn.0045744f(0x455a30);\n    fcn.00456f83(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "0044f018": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f018(uint param_1)\n\n{\n    fcn.00456c34();\n    fcn.0045744f(0x455a30);\n    fcn.00456f96(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "004510db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004510db(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_10h;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint32_t *puVar3;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    puVar3 = 0x46eb58;\n    *(arg_8h_00 + 0xb4) = 0x46eb78;\n    do {\n        if (((*(unaff_EBP + 8) & *puVar3 & 0xf000) != 0) && (iVar2 = fcn.004507be(puVar3[-1]),  iVar2 == 0)) {\n            iVar2 = fcn.0043a6f7(0xa4);\n            *(unaff_EBP + -0x10) = iVar2;\n            *(unaff_EBP + -4) = 0;\n            if (iVar2 != 0) {\n                fcn.00447c1e(0);\n            }\n            uVar1 = *puVar3;\n            arg_10h = puVar3[-1];\n            *(unaff_EBP + -4) = 0xffffffff;\n            iVar2 = fcn.00447d21(arg_8h_00, uVar1 | 0x56000000, arg_10h);\n            if (iVar2 == 0) {\n                fcn.004431f1();\n            }\n        }\n        puVar3 = puVar3 + 2;\n    } while (puVar3 < 0x46eb78);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 455
    },
    "00451198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451198(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        iVar2 = 0;\n        puVar1 = 0x46eb58;\n        do {\n            if (((*puVar1 ^ *(arg_8h + 100)) & 0xf000) == 0) {\n                fcn.004507be(*(iVar2 * 8 + 0x46eb54));\n                break;\n            }\n            puVar1 = puVar1 + 2;\n            iVar2 = iVar2 + 1;\n        } while (puVar1 < 0x46eb78);\n    }\n    fcn.00447dd4(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 202
    },
    "004511ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004511ed(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    \n    if (arg_ch == 0) {\n        puVar3 = 0x46eb54;\n        do {\n            uVar2 = *puVar3;\n            iVar1 = fcn.004507be();\n            if (iVar1 != 0) {\n                uVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x1c), 0xffffffff);\n                uVar2 = uVar2 & 0xffff;\n                iVar1 = fcn.0044891c(uVar2);\n                if (0 < iVar1) break;\n            }\n            if (((puVar3[1] ^ *(arg_8h + 100)) & 0xf000) == 0) {\n                fcn.004507be(*puVar3, uVar2);\n            }\n            puVar3 = puVar3 + 2;\n        } while (puVar3 < 0x46eb74);\n    }\n    fcn.00447fff(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 283
    },
    "00451472": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00451472(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00456c34();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 57
    },
    "0045154a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lptm\n// WARNING: Variable defined which should be unmapped: var_a4h\n\nvoid fcn.0045154a(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    char *lptm;\n    uint var_a4h;\n    uint lpvObject;\n    uint var_74h;\n    uint var_70h;\n    uint var_60h;\n    uint var_50h;\n    uint var_49h;\n    uint lpString1;\n    uint var_24h;\n    uint var_20h;\n    uint hdc;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    if (*0x485994 != 0) goto code_r0x004516a9;\n    fcn.00457a83(10);\n    if (*0x485bdc == 0) {\n        iVar2 = fcn.00456c34();\n        *0x485bdc = (*_sym.imp.USER32.dll_LoadBitmapA)(*(iVar2 + 0xc), 0x7912);\n        iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(*0x485bdc, 0x18, unaff_EBP + -0x78);\n        if (iVar2 != 0) {\n            *0x485bd0 = *(unaff_EBP + -0x74);\n            *0x485bd4 = *(unaff_EBP + -0x70);\n        }\n    }\n    if (*0x485bd8 == 0) {\n        fcn.004108b0(unaff_EBP + -0x60, 0, 0x3c);\n        *(unaff_EBP + -0x49) = 1;\n        *(unaff_EBP + -0x50) = 400;\n        *(unaff_EBP + -0x60) = 1 - *0x485bd4;\n        iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        if (iVar2 == 0) {\n            lptm = \"Small Fonts\";\n        }\n        else {\n            lptm = \"Terminal\";\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(unaff_EBP + -0x44, lptm);\n        iVar2 = fcn.00441958(0xf233, unaff_EBP + -0x60);\n        if (iVar2 == 0) {\n            *(unaff_EBP + -0x45) = 0x20;\n        }\n        *0x485bd8 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(unaff_EBP + -0x60);\n        if (*0x485bd8 != 0) goto code_r0x0045162b;\n    }\n    else {\ncode_r0x0045162b:\n        fcn.00442d20(0);\n        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n        iVar2 = *0x485bd8;\n        bVar4 = *0x485bd8 == 0;\n        *(unaff_EBP + -4) = 0;\n        if (bVar4) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*pcVar1)(*(unaff_EBP + -0x20), iVar2);\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetTextMetricsA)(*(unaff_EBP + -0x1c), unaff_EBP + -0xb0);\n        *(unaff_EBP + -0x10) = uVar3;\n        if (iVar2 != 0) {\n            (*pcVar1)(*(unaff_EBP + -0x20), iVar2);\n        }\n        if ((*(unaff_EBP + -0x10) == 0) || (*0x485bd4 < *(unaff_EBP + -0xb0) - *(unaff_EBP + -0xa4))) {\n            fcn.00441b12(0x485bd8);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00442d92();\n    }\n    fcn.00457af3(10);\ncode_r0x004516a9:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1004
    },
    "00451e16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451e16(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_CopyRect;\n    (*_sym.imp.USER32.dll_CopyRect)(&var_10h, arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_FillRect;\n    var_8h = var_10h + arg_10h;\n    iVar3 = arg_18h;\n    if (arg_18h != 0) {\n        iVar3 = *(arg_18h + 4);\n    }\n    (*_sym.imp.USER32.dll_FillRect)(*(arg_8h + 4), &var_10h, iVar3);\n    var_8h = *(arg_ch + 8);\n    var_10h = var_8h - arg_10h;\n    iVar3 = arg_18h;\n    if (arg_18h != 0) {\n        iVar3 = *(arg_18h + 4);\n    }\n    (*pcVar1)(*(arg_8h + 4), &var_10h, iVar3);\n    (*pcVar2)(&var_10h, arg_ch);\n    var_4h = var_ch + arg_14h;\n    var_10h = var_10h + arg_10h;\n    var_8h = var_8h - arg_10h;\n    iVar3 = arg_18h;\n    if (arg_18h != 0) {\n        iVar3 = *(arg_18h + 4);\n    }\n    (*pcVar1)(*(arg_8h + 4), &var_10h, iVar3);\n    var_4h = *(arg_ch + 0xc);\n    var_ch = var_4h - arg_14h;\n    if (arg_18h != 0) {\n        arg_18h = *(arg_18h + 4);\n    }\n    (*pcVar1)(*(arg_8h + 4), &var_10h, arg_18h);\n    return;\n}\n",
        "token_count": 534
    },
    "00452c2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452c2b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 208
    },
    "00452ca2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452ca2(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.00452c2b(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.00452c2b(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.00452c2b(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.00452c2b(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 204
    },
    "00452d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00452d0c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_3ch;\n    uint var_25h;\n    uint var_20h;\n    \n    fcn.004108b0(&var_3ch, 0, 0x3c);\n    var_3ch = arg_8h;\n    var_25h._0_1_ = 1;\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(&var_20h, arg_ch, 0x20);\n    fcn.00452d51(&var_3ch, arg_10h);\n    return;\n}\n",
        "token_count": 161
    },
    "004561ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004561ae(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar4 = arg_8h;\n    for (iVar1 = (**(*in_ECX + 0xa0))(0x418, 0, 0); iVar1 != 0; iVar1 = iVar1 + -1) {\n        (**(*in_ECX + 0xa0))(0x416, 0, 0);\n    }\n    fcn.004108b0(&var_18h, 0, 0x14);\n    var_8h = 0xffffffff;\n    if (arg_8h == NULL) {\n        iVar1 = 0;\n        var_10h._0_1_ = 4;\n        if (0 < arg_ch) {\n            do {\n                iVar3 = (**(*in_ECX + 0xa0))(0x414, 1, &var_18h);\n                if (iVar3 == 0) {\n                    return 0;\n                }\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n    }\n    else {\n        arg_8h = NULL;\n        var_4h = 0;\n        if (0 < arg_ch) {\n            do {\n                var_14h = *piVar4;\n                piVar4 = piVar4 + 1;\n                var_10h._0_1_ = 4;\n                if (var_14h == 0) {\n                    var_10h._1_1_ = 1;\n                    uVar2 = fcn.00439ddc();\n                    if (((uVar2 & 0x800) == 0) && (*0x4805c8 != 0x40047)) {\n                        var_18h = 8;\n                    }\n                    else {\n                        var_18h = 6;\n                    }\n                }\n                else {\n                    var_10h._1_1_ = 0;\n                    var_18h = arg_8h;\n                    arg_8h = arg_8h + 1;\n                }\n                iVar1 = (**(*in_ECX + 0xa0))(0x414, 1, &var_18h);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h < arg_ch);\n        }\n    }\n    iVar1 = (**(*in_ECX + 0xa0))(0x418, 0, 0);\n    in_ECX[0x16] = iVar1;\n    in_ECX[0x21] = 1;\n    return 1;\n}\n",
        "token_count": 683
    },
    "00456422": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hdc\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nint32_t __cdecl fcn.00456422(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t *piVar5;\n    uint unaff_EDI;\n    int32_t *piVar6;\n    uint *in_FS_OFFSET;\n    uint var_38h;\n    uint hdc;\n    uint var_30h;\n    uint in_stack_ffffffd4;\n    uint lpSize;\n    uint var_1ch;\n    uint var_18h;\n    uint hgdiobj;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar2 = fcn.0045655b(*(unaff_EBP + 0xc));\n    if (iVar2 != 0) {\n        *(unaff_EBP + -0x18) = 1;\n        if (*(unaff_EBP + 8) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(extraout_ECX + 0x1c), 0x31, 0, 0);\n            fcn.00442d20(0);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            if (iVar2 != 0) {\n                uVar3 = (*_sym.imp.GDI32.dll_SelectObject)(*(unaff_EBP + -0x34), iVar2);\n                *(unaff_EBP + -0x14) = uVar3;\n            }\n            piVar6 = *(extraout_ECX + 0x5c);\n            *(unaff_EBP + -0x10) = 0;\n            if (0 < *(unaff_EBP + 0xc)) {\n                piVar5 = piVar6 + 4;\n                do {\n                    piVar1 = *(unaff_EBP + 8);\n                    *(unaff_EBP + 8) = *(unaff_EBP + 8) + 4;\n                    iVar2 = *piVar1;\n                    piVar5[-1] = piVar5[-1] | 1;\n                    *piVar6 = iVar2;\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.0043c737(iVar2);\n                        if (iVar2 != 0) {\n                            (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)\n                                      (*(unaff_EBP + -0x30), *piVar5, *(*piVar5 + -8), unaff_EBP + -0x24);\n                            piVar5[-3] = *(unaff_EBP + -0x24);\n                            iVar2 = fcn.004477f1(*(unaff_EBP + -0x10), *piVar5, 0, 0x14, unaff_EDI, in_stack_ffffffd4);\n                            if (iVar2 != 0) goto code_r0x00456506;\n                        }\n                        *(unaff_EBP + -0x18) = 0;\n                        break;\n                    }\n                    iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n                    iVar2 = *(unaff_EBP + -0x10);\n                    piVar5[-3] = iVar4 / 4;\n                    if (iVar2 == 0) {\n                        piVar5[-2] = piVar5[-2] | 0x8000100;\n                    }\ncode_r0x00456506:\n                    piVar6 = piVar6 + 5;\n                    piVar5 = piVar5 + 5;\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                } while (*(unaff_EBP + -0x10) < *(unaff_EBP + 0xc));\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(*(unaff_EBP + -0x34), *(unaff_EBP + -0x14));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00442d92();\n        }\n        fcn.0045662f(1, 1);\n        iVar2 = *(unaff_EBP + -0x18);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 1079
    },
    "0045655b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0045655b(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x58)) {\n        do {\n            fcn.0043b52e();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0x58));\n    }\n    iVar1 = fcn.004568bf(param_2, param_3);\n    if (iVar1 != 0) {\n        iVar1 = 0;\n        if (0 < *(param_1 + 0x58)) {\n            arg_8h = *(param_1 + 0x5c) + 0x10;\n            do {\n                fcn.00410d20(arg_8h, 0x480454, 4);\n                arg_8h = arg_8h + 0x14;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < *(param_1 + 0x58));\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 273
    },
    "00456c5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456c5a(void)\n\n{\n    fcn.00456c34();\n    fcn.0045744f(0x455a30);\n    return;\n}\n",
        "token_count": 41
    },
    "00457b14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00457b14(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.00411abc(*(param_1 + 0x7c));\n    uVar1 = fcn.00411b04(param_2);\n    *(param_1 + 0x7c) = uVar1;\n    fcn.00411abc(*(param_1 + 0x90));\n    uVar1 = fcn.00411b04(*(param_1 + 0x78));\n    *(param_1 + 0x90) = uVar1;\n    return;\n}\n",
        "token_count": 142
    },
    "004586d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004586d6(char *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t arg_10h;\n    int32_t iVar3;\n    char *arg_8h_00;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    arg_10h = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    cVar2 = *arg_8h;\n    if (cVar2 != '\\0') {\n        arg_8h_00 = arg_8h;\n        arg_8h = arg_8h + 1;\n        do {\n            if (((cVar2 == '-') || (cVar2 == '/')) && (iVar3 = fcn.004122f3(arg_ch, arg_8h, arg_10h),  iVar3 == 0)) {\n                iVar3 = (*pcVar1)(arg_8h_00);\n                fcn.00411060(arg_8h_00, arg_8h_00 + arg_10h + 1, iVar3 - arg_10h);\n                return 1;\n            }\n            cVar2 = arg_8h_00[1];\n            arg_8h_00 = arg_8h_00 + 1;\n            arg_8h = arg_8h + 1;\n        } while (cVar2 != '\\0');\n    }\n    return 0;\n}\n",
        "token_count": 326
    },
    "004589f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "delete registry key",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004589f8(uint phkResult)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint lpName;\n    \n    arg_8h = fcn.00411b04(phkResult);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n    puVar2 = iVar1 + arg_8h;\n    while (puVar2 != NULL) {\n        *puVar2 = 0;\n        fcn.004145ae(arg_8h, puVar2);\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, arg_8h, &phkResult);\n        if (iVar1 != 0) break;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(phkResult, 0, &lpName, 0x105);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        if (iVar1 == 0) break;\n        (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(0x80000000, arg_8h);\n        puVar2 = fcn.0041221a(arg_8h, 0x5c);\n    }\n    fcn.00411abc(arg_8h);\n    return 1;\n}\n",
        "token_count": 309
    },
    "0045b267": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b267(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 8);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(piVar1);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 95
    },
    "0045b3cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0045b3cb(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0045b2bd(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0045b36b(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.0045b267();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "0045b581": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0045b581(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043c860(0x470528);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0043c860(0x46f298);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0043c860(0x46f268);\n            iVar1 = (-(iVar1 != 0) & 0xffff4002) + 0x8000ffff;\n        }\n        else {\n            iVar1 = -0x7ff8fff2;\n        }\n    }\n    else {\n        iVar1 = *(param_1 + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 172
    },
    "0045b879": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045b879(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t arg_10h;\n    uint32_t uVar2;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalSize;\n    arg_10h = (*_sym.imp.KERNEL32.dll_GlobalSize)(arg_ch);\n    if (arg_8h == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, arg_10h);\n        if (arg_8h != 0) {\ncode_r0x0045b8b2:\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n            arg_ch_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(arg_ch);\n            arg_8h_00 = (*pcVar1)(arg_8h);\n            fcn.00410d20(arg_8h_00, arg_ch_00, arg_10h);\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg_8h);\n            (*pcVar1)(arg_ch);\n            return arg_8h;\n        }\n    }\n    else {\n        uVar2 = (*pcVar1)(arg_8h);\n        if (arg_10h <= uVar2) goto code_r0x0045b8b2;\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "0045bc98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n\nuint __cdecl fcn.0045bc98(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_94h;\n    uint var_88h;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_1ch = NULL;\n    var_18h = 0;\n    var_8h = NULL;\n    var_14h = 0;\n    var_24h = fcn.0045b21f(arg_8h, 0x473318);\n    var_20h = var_24h != NULL;\n    var_28h = fcn.0045b21f(arg_8h, 0x473308);\n    iVar2 = (**(*arg_8h + 0x3c))();\n    if (iVar2 != 0) {\n        var_38h = *0x471fa0;\n        uStack56 = *0x471fa4;\n        uStack52 = *0x471fa8;\n        uStack48 = *0x471fac;\n    }\n    (**(*arg_8h + 0x40))();\n    if (var_20h == 0) {\n        if ((arg_ch == 0) && (iVar2 = (**(*arg_8h + 0x20))(),  iVar2 == 0)) {\n            (*_sym.imp.ole32.dll_CreateBindCtx)();\n            (**(*var_1ch + 0x50))(var_1ch, var_18h);\n            fcn.0045b243();\n            var_8h = 0x1;\n        }\n    }\n    else {\n        if (var_4h != 0) {\n            fcn.0043c7bb();\n            if (*0x10 == 0x8c) {\n                var_8h = NULL;\n            }\n            else {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                fcn.00412040();\n                (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, &var_88h, 0xffffffff, &stack0xffffff34, iVar2 + 1);\n                var_8h = &stack0xffffff34;\n            }\n            iVar2 = var_4h;\n            pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n            var_20h = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            iVar2 = (*pcVar1)(iVar2);\n            iVar2 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)((iVar2 + var_20h) * 2 + 2);\n            if (iVar2 != 0) {\n                fcn.0041453f(iVar2, var_8h, var_4h);\n                (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                var_4h = iVar2;\n            }\n        }\n        (**(*var_24h + 0x20))();\n        var_8h = 0x1;\n    }\n    if (arg_1ch == NULL) {\n        if ((var_28h == NULL) || (iVar2 = (**(*var_28h + 0x24))(var_28h),  iVar2 != 0)) {\n            var_ch = 0;\n            var_10h = 0;\n        }\n    }\n    else {\n        var_10h = *arg_1ch;\n        var_ch = arg_1ch[1];\n    }\n    iVar2 = (**(*arg_8h + 0x58))();\n    if (iVar2 != 0) {\n        var_14h = 0;\n    }\n    uVar3 = fcn.0045bb9a(var_38h, uStack56, uStack52, uStack48, arg_10h, var_10h, var_ch, arg_14h, arg_18h, var_14h, \n                         var_4h, arg_ch);\n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(var_4h);\n    if (var_8h != NULL) {\n        (*pcVar1)(arg_ch);\n    }\n    fcn.0045b243(&var_1ch);\n    fcn.0045b243(&var_24h);\n    fcn.0045b243(&var_28h);\n    return uVar3;\n}\n",
        "token_count": 1137
    },
    "0045c00e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0045c00e(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint16_t *puVar4;\n    uint16_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uchar *puStack40;\n    uint var_20h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uchar *var_8h;\n    uchar *var_4h;\n    \n    puVar4 = arg_8h;\n    pcVar3 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    if (*arg_8h == 0) {\n        arg_8h = NULL;\n    }\n    else {\n        arg_8h = *arg_8h + arg_8h;\n    }\n    if (puVar4[1] == 0) {\n        var_8h = NULL;\n    }\n    else {\n        var_8h = puVar4[1] + puVar4;\n    }\n    if (puVar4[2] == 0) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = puVar4[2] + puVar4;\n    }\n    if (arg_8h == NULL) {\n        arg_8h = NULL;\n    }\n    else {\n        puStack40 = arg_8h;\n        iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.00412040();\n        puStack40 = puStack40 & 0xffff0000;\n        (*pcVar3)(0, 0, arg_8h, 0xffffffff, &stack0xffffffd8, iVar7 + 1);\n        arg_8h = &stack0xffffffd8;\n    }\n    if (var_8h == NULL) {\n        var_4h = NULL;\n    }\n    else {\n        puStack40 = var_8h;\n        var_4h = &stack0xffffffd8;\n        iVar7 = (*pcVar2)();\n        fcn.00412040();\n        puStack40 = puStack40 & 0xffff0000;\n        (*pcVar3)(0, 0, var_8h, 0xffffffff, &stack0xffffffd8, iVar7 + 1);\n    }\n    if (var_ch == 0) {\n        var_8h = NULL;\n    }\n    else {\n        puStack40 = var_ch;\n        var_8h = &stack0xffffffd8;\n        iVar7 = (*pcVar2)();\n        fcn.00412040();\n        puStack40 = puStack40 & 0xffff0000;\n        (*pcVar3)(0, 0, var_ch, 0xffffffff, &stack0xffffffd8, iVar7 + 1);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenW;\n    if (arg_8h == NULL) {\n        var_ch = 0;\n    }\n    else {\n        puStack40 = arg_8h;\n        iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        var_ch = iVar7 * 2 + 2;\n    }\n    if (var_4h == NULL) {\n        var_10h = 0;\n    }\n    else {\n        puStack40 = var_4h;\n        iVar7 = (*pcVar2)();\n        var_10h = iVar7 * 2 + 2;\n    }\n    if (var_8h == NULL) {\n        var_14h = 0;\n    }\n    else {\n        puStack40 = var_8h;\n        iVar7 = (*pcVar2)();\n        var_14h = iVar7 * 2 + 2;\n    }\n    if (arg_ch == 0) {\n        arg_ch = 0;\n    }\n    else {\n        puStack40 = 0x45c17d;\n        fcn.00412040();\n        puStack40 = arg_ch;\n        arg_ch = fcn.004102f9(&fcn.0045c00e::var_20h);\n    }\n    iVar7 = *(arg_ch + 0x46) + var_14h + *(arg_ch + 0x44) + var_10h + 0x10 + var_ch;\n    puStack40 = iVar7;\n    piVar6 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)();\n    if (piVar6 != NULL) {\n        *piVar6 = iVar7;\n        *(piVar6 + 1) = 0x10;\n        iVar7 = (*pcVar2)(arg_8h);\n        fcn.00410d20(piVar6 + 4, arg_8h, iVar7 * 2 + 2);\n        iVar1 = *(piVar6 + 1);\n        *(piVar6 + 6) = iVar1 + var_ch;\n        iVar7 = (*pcVar2)(var_4h);\n        fcn.00410d20(iVar1 + var_ch + piVar6, var_4h, iVar7 * 2 + 2);\n        uVar5 = *(piVar6 + 6) + var_10h;\n        *(piVar6 + 2) = uVar5;\n        iVar7 = (*pcVar2)(var_8h);\n        fcn.00410d20(uVar5 + piVar6, var_8h, iVar7 * 2 + 2);\n        *(piVar6 + 10) = *(piVar6 + 2) + var_14h;\n        fcn.00410d20(*(piVar6 + 2) + var_14h + piVar6, arg_ch, *(arg_ch + 0x46) + 0xd4);\n    }\n    return piVar6;\n}\n",
        "token_count": 1344
    },
    "0045c3ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0045c3ef(uint *param_1)\n\n{\n    int32_t arg_8h;\n    \n    if ((param_1 != NULL) && (arg_8h = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(*param_1),  arg_8h != 0)) {\n        fcn.00410d20(arg_8h, param_1, *param_1);\n        return arg_8h;\n    }\n    return 0;\n}\n",
        "token_count": 110
    },
    "0045c450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.0045c450(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        iStack40 = 0;\n        puStack44 = NULL;\n        uStack48 = 0;\n    }\n    else {\n        if (*(arg_8h + 10) == 0) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = *(arg_8h + 10) + arg_8h;\n        }\n        uVar3 = *(arg_8h + 4) + arg_8h;\n        uVar6 = *(arg_8h + 8) + arg_8h;\n        uVar4 = *(arg_8h + 6) + arg_8h;\n        if (iVar5 == 0) {\n            var_10h = 0;\n        }\n        else {\n            iStack40 = 0x45c4b5;\n            fcn.00412040();\n            uStack48 = 0x45c4be;\n            puStack44 = &fcn.0045c450::var_20h;\n            iStack40 = iVar5;\n            var_10h = fcn.0041038a();\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n        if (uVar6 != 0) {\n            uStack48 = uVar6;\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            fcn.00412040();\n            uStack48 = uStack48 & 0xffffff00;\n            (*pcVar2)(0, 0, uVar6, 0xffffffff, &stack0xffffffd0, iVar5 * 2 + 2, 0, 0);\n        }\n        if (uVar4 != 0) {\n            uStack48 = uVar4;\n            iVar5 = (*pcVar1)();\n            fcn.00412040();\n            uStack48 = uStack48 & 0xffffff00;\n            (*pcVar2)(0, 0, uVar4, 0xffffffff, &stack0xffffffd0, iVar5 * 2 + 2, 0, 0);\n        }\n        if (uVar3 != 0) {\n            uStack48 = uVar3;\n            iVar5 = (*pcVar1)();\n            fcn.00412040();\n            uStack48 = uStack48 & 0xffffff00;\n            (*pcVar2)(0, 0, uVar3, 0xffffffff, &stack0xffffffd0, iVar5 * 2 + 2, 0, 0);\n        }\n        uStack48 = var_10h;\n    }\n    (*_sym.imp.GDI32.dll_CreateDCA)();\n    return;\n}\n",
        "token_count": 748
    },
    "0045c68d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.0045c68d(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint32_t var_16ch;\n    int32_t *piStack364;\n    int32_t iStack360;\n    uint var_160h;\n    uint pv;\n    uint var_14h;\n    uint lpWideCharStr;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    var_160h = 0x45c6aa;\n    fcn.0043bbf4();\n    pcVar1 = *0x480454;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[5] = pcVar1;\n    pcVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    *extraout_ECX = vtable.COleStreamFile.0;\n    extraout_ECX[4] = pcVar1;\n    var_160h = 0x45c6ce;\n    fcn.0043b4b9();\n    piStack364 = extraout_ECX[4];\n    if (piStack364 != NULL) {\n        iStack360 = unaff_EBP + -0x5c;\n        var_160h = 0;\n        var_16ch = 0x45c6e0;\n        iVar2 = (**(*piStack364 + 0x30))();\n        if ((iVar2 == 0) && (var_16ch = *(unaff_EBP + -0x5c),  var_16ch != 0)) {\n            *(unaff_EBP + -0x10) = var_16ch;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            *(unaff_EBP + 8) = iVar2 * 2 + 2;\n            fcn.00412040();\n            var_16ch = var_16ch & 0xffffff00;\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                      (0, 0, *(unaff_EBP + -0x10), 0xffffffff, &fcn.0045c68d::var_16ch, *(unaff_EBP + 8), 0, 0);\n            fcn.0043c42e(unaff_EBP + -0x160, &fcn.0045c68d::var_16ch);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(*(unaff_EBP + -0x5c));\n            fcn.0043b6b7(unaff_EBP + -0x160);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 662
    },
    "0045c8f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nuint __cdecl fcn.0045c8f8(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint32_t uStack132;\n    uint var_58h;\n    uint32_t var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint32_t var_4h;\n    \n    iVar1 = (**(**(in_ECX + 0x10) + 0x30))();\n    if (iVar1 == 0) {\n        puVar3 = fcn.0042ed21(&fcn.0045c8f8::var_3ch, 0xffffffff);\n        arg_8h[1] = *puVar3;\n        puVar3 = fcn.0042ed21(&fcn.0045c8f8::var_34h, 0xffffffff);\n        *arg_8h = *puVar3;\n        uStack132 = 0x45c952;\n        puVar3 = fcn.0042ed21(&fcn.0045c8f8::var_2ch, 0xffffffff);\n        arg_8h[2] = *puVar3;\n        arg_8h[3] = var_44h;\n        *(arg_8h + 4) = 0;\n        *(arg_8h + 0x12) = 0;\n        if (var_4ch != 0) {\n            uStack132 = var_4ch;\n            var_4h = var_4ch;\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            fcn.00412040();\n            uStack132 = uStack132 & 0xffffff00;\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                      (0, 0, var_4h, 0xffffffff, &stack0xffffff7c, iVar1 * 2 + 2, 0, 0);\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_8h + 0x12, &stack0xffffff7c, 0x104);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(var_4ch);\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 563
    },
    "0045ca09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nbool __cdecl fcn.0045ca09(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t *puVar2;\n    uint32_t uStack24;\n    uint var_10h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        uStack24 = arg_ch;\n        puVar2 = &uStack24;\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.00412040();\n        uStack24 = uStack24 & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch, 0xffffffff, &uStack24, iVar1 + 1);\n    }\n    uStack24 = in_ECX + 0x10;\n    iVar1 = (**(*arg_8h + 0x10))(arg_8h, puVar2, 0, arg_10h, 0);\n    if ((iVar1 < 0) && (arg_14h != 0)) {\n        fcn.0045c809(arg_14h, iVar1);\n    }\n    return -1 < iVar1;\n}\n",
        "token_count": 321
    },
    "0045ca86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_160h\n\nbool __cdecl fcn.0045ca86(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uStack372;\n    int32_t *piStack368;\n    uint *puStack364;\n    uint uStack360;\n    uint var_160h;\n    uint var_154h;\n    uint32_t var_50h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    puStack364 = &fcn.0045ca86::var_50h;\n    uStack360 = 0;\n    piStack368 = arg_8h;\n    uStack372 = 0x45caa5;\n    iVar1 = (**(*arg_8h + 0x44))();\n    if ((iVar1 == 0) && (var_50h != 0)) {\n        uStack372 = var_50h;\n        var_8h = var_50h;\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        fcn.00412040();\n        uStack372 = uStack372 & 0xffffff00;\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, var_8h, 0xffffffff, &stack0xfffffe8c, iVar1 * 2 + 2, 0, 0);\n        fcn.0043c42e(&fcn.0045ca86::var_154h, &stack0xfffffe8c);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_50h);\n        piStack368 = &fcn.0045ca86::var_154h;\n        uStack372 = 0x45cb07;\n        fcn.0043b6b7();\n    }\n    if (arg_ch == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        uStack372 = arg_ch;\n        puVar2 = &stack0xfffffe8c;\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.00412040();\n        uStack372 = uStack372 & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch, 0xffffffff, &stack0xfffffe8c, iVar1 + 1);\n    }\n    uStack372 = var_4h + 0x10;\n    iVar1 = (**(*arg_8h + 0xc))(arg_8h, puVar2, arg_10h, 0, 0);\n    if ((iVar1 < 0) && (arg_14h != 0)) {\n        fcn.0045c809(arg_14h, iVar1);\n    }\n    return -1 < iVar1;\n}\n",
        "token_count": 656
    },
    "0045f726": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0045f726(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = *(param_1 + 0x28);\n    bVar2 = uVar1 < *(param_1 + 0x2c);\n    if (bVar2) {\n        fcn.00410d20(param_2, *(param_1 + 0x1c) * uVar1 + *(param_1 + 0x24), *(param_1 + 0x1c));\n        *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 167
    },
    "0045f964": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0045f964(int32_t param_1, int32_t param_2)\n\n{\n    if ((param_2 != 0) || (param_2 = *(param_1 + 0x3c),  param_2 != 0)) {\n        fcn.00462046(param_1 + 0x24, param_2, param_2, param_2, 3, 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0045fd3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fd3f(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0x1c) != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 0x24) != 0) {\n            iVar2 = 0;\n            do {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(*(iVar2 + 4 + *(param_1 + 0x1c)));\n                (*_sym.imp.ole32.dll_ReleaseStgMedium)(iVar2 + 0x14 + *(param_1 + 0x1c));\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 0x24;\n            } while (uVar1 < *(param_1 + 0x24));\n        }\n        fcn.0043a720(*(param_1 + 0x1c));\n        *(param_1 + 0x1c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0045ff5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ff5f(uint arg_8h, int16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    if (arg_ch == NULL) {\n        arg_ch = fcn.0045b84a(0, arg_8h, &var_14h);\n        *(arg_ch + 8) = 1;\n    }\n    if (arg_8h != 0) {\n        *arg_ch = arg_8h;\n    }\n    iVar1 = fcn.0045fe14(arg_ch, 1);\n    fcn.004108b0(iVar1 + 0x14, 0, 0xc);\n    return;\n}\n",
        "token_count": 159
    },
    "0046020b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046020b(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    pcVar1 = NULL;\n    *param_1 = vtable.CEnumFormatEtc.0;\n    if ((param_1[8] == NULL) && (param_1[0xb] != NULL)) {\n        puVar2 = param_1[9] + 4;\n        do {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(*puVar2);\n            pcVar1 = pcVar1 + 1;\n            puVar2 = puVar2 + 5;\n        } while (pcVar1 < param_1[0xb]);\n    }\n    fcn.0045f6d8();\n    return;\n}\n",
        "token_count": 174
    },
    "00460273": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00460273(int32_t param_1, ushort *param_2)\n\n{\n    ushort *puVar1;\n    uint arg_8h;\n    \n    if (*(param_1 + 0x2c) == *(param_1 + 0x38)) {\n        arg_8h = fcn.0043a6f7((*(param_1 + 0x2c) * 5 + 0x32) * 4);\n        *(param_1 + 0x38) = *(param_1 + 0x38) + 10;\n        fcn.00410d20(arg_8h, *(param_1 + 0x24), *(param_1 + 0x2c) * 0x14);\n        fcn.0043a720(*(param_1 + 0x24));\n        *(param_1 + 0x24) = arg_8h;\n    }\n    puVar1 = *(param_1 + 0x24) + *(param_1 + 0x2c) * 0x14;\n    *puVar1 = *param_2;\n    *(puVar1 + 2) = *(param_2 + 2);\n    *(puVar1 + 4) = *(param_2 + 4);\n    *(puVar1 + 6) = *(param_2 + 6);\n    *(puVar1 + 8) = *(param_2 + 8);\n    *(param_1 + 0x2c) = *(param_1 + 0x2c) + 1;\n    return;\n}\n",
        "token_count": 356
    },
    "00461d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00461d60(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0043a6f7(param_2 << 2);\n    *param_1 = uVar1;\n    fcn.004108b0(uVar1, 0, param_2 << 2);\n    param_1[1] = param_2;\n    return param_1;\n}\n",
        "token_count": 106
    },
    "00463643": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00463643(int32_t param_1, int32_t param_2, int16_t *param_3, uint *param_4)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    ulong *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    puVar3 = *(param_2 + 0x18) + param_1;\n    if (*(param_2 + 0xc) != 0xc) {\n        *param_3 = *(param_2 + 0xc);\n    }\n    // switch table (15 cases) at 0x4636d5\n    switch(*(param_2 + 0xc)) {\n    case 2:\n        iVar2 = *puVar3;\n        goto code_r0x004636a7;\n    case 3:\n    case 4:\n    case 10:\n        uVar4 = *puVar3;\n        goto code_r0x0046369c;\n    case 5:\n    case 7:\n        *(param_3 + 4) = *puVar3;\n        break;\n    case 6:\n        *(param_3 + 4) = *puVar3;\n        *(param_3 + 6) = *(puVar3 + 4);\n        break;\n    case 8:\n        uVar4 = fcn.00463a1e();\ncode_r0x0046369c:\n        *(param_3 + 4) = uVar4;\n        break;\n    case 9:\n    case 0xd:\n        piVar1 = *puVar3;\n        *(param_3 + 4) = piVar1;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 4))(piVar1);\n        }\n        break;\n    case 0xb:\n        iVar2 = -(*puVar3 != 0);\ncode_r0x004636a7:\n        param_3[4] = iVar2;\n        break;\n    case 0xc:\n        iVar5 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(param_3, puVar3);\n        if (iVar5 == 0) {\n            return;\n        }\n    default:\n        *param_4 = 0;\n        break;\n    case 0x10:\n        *(param_3 + 4) = *puVar3;\n    }\n    return;\n}\n",
        "token_count": 531
    },
    "00463ab6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00463ab6(uint8_t *param_1, uint16_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = *(param_2 * 4 + 0x46dc70) + 4;\n    uVar2 = *param_1;\n    while (uVar2 != 0) {\n        if (uVar2 != 0xff) {\n            iVar4 = 0x46dcac;\n            if ((uVar2 & 0x40) == 0) {\n                iVar4 = 0x46dce8;\n            }\n            iVar3 = iVar3 + *(iVar4 + (uVar2 & 0xffffffbf) * 4);\n        }\n        puVar1 = param_1 + 1;\n        param_1 = param_1 + 1;\n        uVar2 = *puVar1;\n    }\n    return iVar3;\n}\n",
        "token_count": 226
    },
    "004646a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.004646a8(ushort *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uchar *puStack316;\n    uint *puStack312;\n    uint uStack308;\n    uint *puStack304;\n    ushort *puStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint var_11ch;\n    uint var_110h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    uStack292 = 0x20;\n    puStack296 = NULL;\n    puStack300 = arg_8h;\n    puStack304 = 0x4646c1;\n    fcn.004108b0();\n    var_ch = &fcn.004646a8::var_110h;\n    uStack292 = 0x46dc40;\n    puStack296 = 0x4646da;\n    iVar4 = fcn.0043c860();\n    pcVar3 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    if (iVar4 == 0) {\n        puStack296 = 0x46f298;\n        puStack300 = 0x4647b9;\n        iVar4 = fcn.0043c860();\n        puStack304 = &fcn.004646a8::var_110h;\n        puStack300 = 0x100;\n        if (iVar4 == 0) {\n            uStack308 = 0xf108;\n            puStack312 = 0x4647e7;\n            fcn.0043c7bb();\n            *arg_8h = 0xf108;\n        }\n        else {\n            uStack308 = 0xf10a;\n            puStack312 = 0x4647d3;\n            fcn.0043c7bb();\n            *arg_8h = 0xf10a;\n        }\n    }\n    else {\n        var_ch = *(arg_ch + 0xc);\n        *arg_8h = *(arg_ch + 8);\n        *(arg_8h + 8) = *(arg_ch + 0x10);\n        *(arg_8h + 0xe) = *(arg_ch + 0x1c);\n        var_10h = *(arg_ch + 0x14);\n        if (*(var_10h - 8) != 0) {\n            if (var_10h == 0) {\n                puStack296 = NULL;\n            }\n            else {\n                puStack300 = 0x464723;\n                var_8h = &stack0xfffffed8;\n                puStack296 = var_10h;\n                var_4h = (*pcVar2)();\n                var_4h = var_4h + 1;\n                puStack300 = 0x464733;\n                fcn.00412040();\n                puStack300 = var_4h;\n                uStack308 = 0xffffffff;\n                puStack312 = var_10h;\n                puStack296 = puStack296 & 0xffff0000;\n                puStack316 = NULL;\n                puStack304 = &stack0xfffffed8;\n                (*pcVar3)(0);\n                puStack296 = var_8h;\n            }\n            puStack300 = 0x464752;\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n            *(arg_8h + 6) = uVar5;\n        }\n        uVar1 = *(arg_ch + 0x18);\n        if (*(uVar1 - 8) != 0) {\n            if (uVar1 == 0) {\n                puStack312 = NULL;\n            }\n            else {\n                puStack316 = 0x464775;\n                puStack312 = uVar1;\n                var_4h = (*pcVar2)();\n                var_4h = var_4h + 1;\n                puStack316 = 0x464785;\n                fcn.00412040();\n                puStack316 = var_4h;\n                puStack312 = puStack312 & 0xffff0000;\n                var_8h = &stack0xfffffec8;\n                (*pcVar3)(0, 0, uVar1, 0xffffffff, &stack0xfffffec8);\n                puStack312 = var_8h;\n            }\n            puStack316 = 0x4647a4;\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n            *(arg_8h + 2) = uVar5;\n        }\n    }\n    if (var_ch == NULL) {\n        puVar6 = NULL;\n    }\n    else {\n        puStack312 = var_ch;\n        puStack316 = 0x4647fd;\n        puVar6 = &stack0xfffffec8;\n        var_4h = (*pcVar2)();\n        var_4h = var_4h + 1;\n        puStack316 = 0x46480d;\n        fcn.00412040();\n        puStack316 = var_4h;\n        puStack312 = puStack312 & 0xffff0000;\n        (*pcVar3)(0, 0, var_ch, 0xffffffff, &stack0xfffffec8);\n    }\n    puStack316 = 0x46482c;\n    puStack312 = puVar6;\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n    *(arg_8h + 4) = uVar5;\n    if (*(arg_8h + 2) == 0) {\n        puStack316 = 0x46483c;\n        iVar4 = fcn.00456c34();\n        uVar1 = *(iVar4 + 0x10);\n        if (uVar1 == 0) {\n            puStack316 = NULL;\n        }\n        else {\n            puStack316 = uVar1;\n            var_4h = (*pcVar2)();\n            var_4h = var_4h + 1;\n            fcn.00412040();\n            puStack316 = puStack316 & 0xffff0000;\n            var_8h = &stack0xfffffec4;\n            (*pcVar3)(0, 0, uVar1, 0xffffffff, &stack0xfffffec4, var_4h);\n            puStack316 = var_8h;\n        }\n        uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n        *(arg_8h + 2) = uVar5;\n    }\n    if ((*(arg_8h + 6) == 0) && (*(arg_8h + 8) != 0)) {\n        puStack316 = 0x464891;\n        iVar4 = fcn.00456c34();\n        uVar1 = *(*(iVar4 + 4) + 0x8c);\n        puStack316 = NULL;\n        if (uVar1 != 0) {\n            puStack316 = uVar1;\n            iVar4 = (*pcVar2)();\n            fcn.00412040();\n            puStack316 = puStack316 & 0xffff0000;\n            var_8h = &stack0xfffffec4;\n            (*pcVar3)(0, 0, uVar1, 0xffffffff, &stack0xfffffec4, iVar4 + 1);\n            puStack316 = var_8h;\n        }\n        uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n        *(arg_8h + 6) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 1744
    },
    "00464a45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464a45(code *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_2 + param_3) = unaff_retaddr;\n    *((param_2 + param_3) - param_3) = 0x464a55;\n    (*param_1)();\n    return;\n}\n",
        "token_count": 87
    },
    "00464a56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00464a56(char *arg_8h, char *lpclsid)\n\n{\n    int32_t iVar1;\n    char **ppcVar2;\n    char *pcStack16;\n    uint var_8h;\n    \n    if (*arg_8h == '{') {\n        if (arg_8h == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            pcStack16 = arg_8h;\n            ppcVar2 = &pcStack16;\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            fcn.00412040();\n            pcStack16 = pcStack16 & 0xffff0000;\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &pcStack16, iVar1 + 1);\n        }\n        pcStack16 = lpclsid;\n        (*_sym.imp.ole32.dll_CLSIDFromString)(ppcVar2);\n    }\n    else {\n        if (arg_8h == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            pcStack16 = arg_8h;\n            ppcVar2 = &pcStack16;\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            fcn.00412040();\n            pcStack16 = pcStack16 & 0xffff0000;\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &pcStack16, iVar1 + 1);\n        }\n        pcStack16 = lpclsid;\n        (*_sym.imp.ole32.dll_CLSIDFromProgID)(ppcVar2);\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "00466930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00466930(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_WIN_STATE.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00441b12(extraout_ECX + 1, extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 169
    },
    "00466b39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00466b39(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    \n    iVar2 = fcn.00456c34();\n    fcn.00457a83(1);\n    arg_8h = iVar2 + 0x34;\n    while (*arg_8h != '\\0') {\n        puVar3 = fcn.00411685(arg_8h, 10);\n        *puVar3 = 0;\n        iVar4 = fcn.00456c34();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(arg_8h, *(iVar4 + 8));\n        arg_8h = puVar3 + 1;\n    }\n    *(iVar2 + 0x34) = '\\0';\n    fcn.00457af3(1);\n    iVar2 = fcn.00456c34();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x54),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.004569a4();\n    if (*(iVar2 + 0xcc) != NULL) {\n        iVar4 = (**(**(iVar2 + 0xcc) + 0xb8))();\n        if (iVar4 != 0) {\n            *(iVar2 + 0xcc) = 0;\n        }\n    }\n    iVar4 = fcn.00456c34();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar4 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x30) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x30));\n            *(iVar2 + 0x30) = 0;\n        }\n        if (*(iVar2 + 0x2c) != 0) {\n            (*pcVar1)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 500
    },
    "00401122": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401122(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_ch = 0x9a80e589;\n    arg_8h_00 = fcn.0040101e();\n    pcVar1 = fcn.00401014(arg_8h_00, arg_ch);\n    if (((arg_8h != 0) && (iVar2 = (*pcVar1)(0xfde9, 0, arg_8h, 0xffffffff, 0, 0, 0, 0),  iVar2 != 0)) &&\n       (iVar3 = fcn.0041081b(iVar2 + 1),  iVar3 != 0)) {\n        (*pcVar1)(0xfde9, 0, arg_8h, 0xffffffff, iVar3, iVar2, 0, 0);\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 252
    },
    "0040a6d3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a6d3(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (*(param_1 + 0x48) == 0) {\n        if (*(param_1 + 0x38) != 0) {\n            var_10h = *(param_1 + 0x40);\n            var_ch = 0;\n            var_8h = 0;\n            var_18h = 1;\n            var_14h = 0;\n            uVar1 = (**(**(param_1 + 8) + 0x20))(*(param_1 + 8), 1, 0x4732bc, 0, 0, &var_18h);\n            return uVar1;\n        }\n    }\n    else if ((*(param_1 + 0x50) != 0) && (*(*(param_1 + 0x50) + 0xc) != 0)) {\n        uVar1 = fcn.00409ea4();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "0040e316": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e316(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_10h = 0;\n    var_ch = fcn.0041413b(arg_8h);\n    uVar1 = fcn.0040dee2(&var_24h, 10000);\n    fcn.0040dc34(uVar1);\n    if (arg_8h < 0) {\n        uVar1 = fcn.0040de98(&var_24h);\n        fcn.0040dc34(uVar1);\n    }\n    var_18h = fcn.0041413b(arg_ch);\n    if (arg_ch < 0) {\n        uVar1 = fcn.0040de98(&var_24h);\n        fcn.0040dc34(uVar1);\n    }\n    uVar1 = fcn.0040dd81(&var_24h, &var_18h);\n    fcn.0040dc34(uVar1);\n    *(in_ECX + 8) = 0;\n    return;\n}\n",
        "token_count": 345
    },
    "0040ea57": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040ea57(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    ulong *in_ECX;\n    uint uVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar2 = 0;\n    if (*(in_ECX + 1) == 0) {\n        iVar1 = fcn.0040e727(*in_ECX, *in_ECX >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            *arg_8h = var_10h;\n            arg_8h[1] = var_14h;\n            arg_8h[7] = 0;\n            arg_8h[2] = var_ch + -1;\n            arg_8h[3] = var_18h;\n            arg_8h[4] = var_1ch;\n            arg_8h[5] = var_20h;\n            arg_8h[6] = var_24h;\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 291
    },
    "0040ef70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ef70(ulong *arg_8h, double *arg_ch)\n\n{\n    ulong *in_ECX;\n    uint uVar1;\n    float10 fVar2;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = 2;\n    if ((*(in_ECX + 1) != 2) && (*(arg_ch + 1) != 2)) {\n        uVar1 = 1;\n        if ((*(in_ECX + 1) != 1) && (uVar1 = 1,  *(arg_ch + 1) != 1)) {\n            fVar2 = fcn.0040e989(*in_ECX);\n            fVar2 = fcn.0040e9af(fVar2 + *arg_ch);\n            fcn.0040ed9e(fVar2);\n            fcn.0040f3e9();\n            *arg_8h = 0;\n            *(arg_8h + 1) = 0;\n            return;\n        }\n    }\n    *(arg_8h + 1) = uVar1;\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 261
    },
    "0040efed": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040efed(ulong *arg_8h, double *arg_ch)\n\n{\n    ulong *in_ECX;\n    uint uVar1;\n    float10 fVar2;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = 2;\n    if ((*(in_ECX + 1) != 2) && (*(arg_ch + 1) != 2)) {\n        uVar1 = 1;\n        if ((*(in_ECX + 1) != 1) && (uVar1 = 1,  *(arg_ch + 1) != 1)) {\n            fVar2 = fcn.0040e989(*in_ECX);\n            fVar2 = fcn.0040e9af(fVar2 - *arg_ch);\n            fcn.0040ed9e(fVar2);\n            fcn.0040f3e9();\n            *arg_8h = 0;\n            *(arg_8h + 1) = 0;\n            return;\n        }\n    }\n    *(arg_8h + 1) = uVar1;\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 261
    },
    "0040f511": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f511(double *arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    double dVar2;\n    double *in_ECX;\n    uint uVar3;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = 2;\n    if ((((*(in_ECX + 1) != 2) && (*(arg_ch + 1) != 2)) && (uVar3 = 1,  *(in_ECX + 1) != 1)) && (*(arg_ch + 1) != 1)) {\n        dVar1 = *arg_ch;\n        dVar2 = *in_ECX;\n        fcn.0040f81f();\n        *arg_8h = dVar1 + dVar2;\n        *(arg_8h + 1) = 0;\n        return;\n    }\n    *(arg_8h + 1) = uVar3;\n    *arg_8h = 0.0;\n    return;\n}\n",
        "token_count": 226
    },
    "0040f570": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f570(double *arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    double dVar2;\n    double *in_ECX;\n    uint uVar3;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = 2;\n    if ((((*(in_ECX + 1) != 2) && (*(arg_ch + 1) != 2)) && (uVar3 = 1,  *(in_ECX + 1) != 1)) && (*(arg_ch + 1) != 1)) {\n        dVar1 = *in_ECX;\n        dVar2 = *arg_ch;\n        fcn.0040f81f();\n        *arg_8h = dVar1 - dVar2;\n        *(arg_8h + 1) = 0;\n        return;\n    }\n    *(arg_8h + 1) = uVar3;\n    *arg_8h = 0.0;\n    return;\n}\n",
        "token_count": 226
    },
    "00410541": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nbool fcn.00410541(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.0043a6f7(0x1c);\n    *(unaff_EBP + -0x14) = iVar1;\n    *(unaff_EBP + -4) = 1;\n    if (iVar1 == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = fcn.0041048f(*(unaff_EBP + 8));\n    }\n    iVar1 = puVar2[5];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + 8) = puVar2;\n    if (iVar1 == 0) {\n        if (puVar2 != NULL) {\n            (***puVar2)(1);\n        }\n        *(unaff_EBP + 8) = 0;\n    }\n    else {\n        fcn.00456c34();\n        fcn.00457a83(0xb);\n        fcn.00456f83(puVar2);\n        fcn.00457af3(0xb);\n    }\n    iVar1 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1 != 0;\n}\n",
        "token_count": 409
    },
    "004380ac": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004380ac(uint noname_0, uint *hWnd, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = *hWnd;\n    var_4h = (*_sym.imp.USER32.dll_GetDlgCtrlID)(uVar3);\n    var_4h = var_4h & 0xffff;\n    uVar1 = hWnd[2];\n    iVar2 = fcn.0045744f(0x455298);\n    if ((*(iVar2 + 0xb8) != in_ECX[7]) && (iVar2 = fcn.004389f7(uVar3, arg_10h),  iVar2 == 0)) {\n        var_ch = arg_10h;\n        var_8h = hWnd;\n        uVar3 = (**(*in_ECX + 0xc))(var_4h, uVar1 & 0xffff | 0x4e0000, &var_ch, 0);\n        return uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 275
    },
    "004385da": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004385da(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.004384cd(arg_8h, &var_8h, &var_4h);\n    iVar1 = fcn.0043858d(arg_8h, &var_24h, 2);\n    if (iVar1 != 0) {\n        var_4h = var_4h - (-(var_14h != 1) & var_14h - 1U);\n    }\n    return var_4h;\n}\n",
        "token_count": 159
    },
    "0043c892": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint fcn.0043c892(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    uVar2 = 0;\n    iVar1 = *(extraout_ECX + 0xc);\n    *(unaff_EBP + -0x10) = &var_14h;\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -4) = 0;\n        uVar2 = (**(extraout_ECX + 0xc))();\n        *(unaff_EBP + -0x14) = uVar2;\n        uVar2 = *(unaff_EBP + -0x14);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "00441aba": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441aba(uint hWnd, uint lpString2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpString1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    if (((uVar1 < 0x101) && (uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString1, 0x100),  uVar2 == uVar1))\n       && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, lpString2),  iVar3 == 0)) {\n        return;\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(hWnd, lpString2);\n    return;\n}\n",
        "token_count": 184
    },
    "004433d9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004433d9(uint arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_44h;\n    uint var_4h;\n    \n    fcn.0040eb1a(&var_4h);\n    *arg_ch = var_4h;\n    fcn.0040eb1a(&var_4h + 2);\n    if (var_4h._2_2_ < 0x40) {\n        uVar1 = fcn.0044360e(&var_44h, var_4h._2_2_);\n        if (uVar1 == var_4h._2_2_) {\n            *(&var_44h + var_4h._2_2_) = 0;\n            iVar2 = fcn.00456c34();\n            fcn.00457a83(0);\n            for (puVar3 = *(iVar2 + 0x1c); puVar3 != NULL; puVar3 = puVar3[5]) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&var_44h, *puVar3);\n                if (iVar2 == 0) goto code_r0x00443452;\n            }\n            puVar3 = NULL;\ncode_r0x00443452:\n            fcn.00457af3(0);\n            return puVar3;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 345
    },
    "004487e8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004487e8(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_ECX + 0x90);\n    puVar1 = in_ECX + 0x94;\n    uVar2 = *puVar1;\n    uVar3 = *(in_ECX + 0x98);\n    uVar4 = *(in_ECX + 0x9c);\n    uVar5 = *(in_ECX + 0xa0);\n    *(in_ECX + 0x90) = *arg_ch == 0;\n    (*_sym.imp.USER32.dll_CopyRect)(puVar1, arg_ch + 1);\n    fcn.004499da(arg_8h, arg_ch);\n    *puVar1 = uVar2;\n    *(in_ECX + 0x98) = uVar3;\n    *(in_ECX + 0x9c) = uVar4;\n    *(in_ECX + 0xa0) = uVar5;\n    *(in_ECX + 0x90) = uVar6;\n    return;\n}\n",
        "token_count": 311
    },
    "0044f73f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044f73f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.0043c892();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            if (*0x48598c == 0) {\n                return piVar1;\n            }\n            uVar3 = fcn.00439df6();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.00439e41(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 292
    },
    "0044ff13": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ff13(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(in_ECX + 0x1c));\n    fcn.00436a76(uVar3);\n    pcVar2 = _sym.imp.SHELL32.dll_DragQueryFileA;\n    uVar5 = 0;\n    var_4h = (*_sym.imp.SHELL32.dll_DragQueryFileA)(arg_8h, 0xffffffff, 0, 0);\n    iVar4 = fcn.00456c34();\n    piVar1 = *(iVar4 + 4);\n    if (var_4h != 0) {\n        do {\n            (*pcVar2)(arg_8h, uVar5, &var_108h, 0x104);\n            (**(*piVar1 + 0x7c))(&var_108h);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < var_4h);\n    }\n    (*_sym.imp.SHELL32.dll_DragFinish)(arg_8h);\n    return;\n}\n",
        "token_count": 313
    },
    "00450da9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450da9(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[0x2c] == 0) {\n        in_ECX[0x2c] = 1;\n        if ((in_ECX[0x2e] & 4U) != 0) {\n            arg_8h = 1;\n        }\n        in_ECX[0x2e] = in_ECX[0x2e] & 0xfffffff3;\n        if ((arg_8h != 0) && (in_ECX[0x1a] != NULL)) {\n            (**(*in_ECX[0x1a] + 0x50))();\n        }\n        uVar1 = fcn.00439ddc();\n        if ((uVar1 & 0x2000) == 0) {\n            fcn.004386c7(0, 0xffff, 0xe900, 2, in_ECX + 0x16, 0, 1);\n        }\n        else {\n            var_8h = 0x7fff;\n            var_4h = 0x7fff;\n            var_10h = 0;\n            var_ch = 0;\n            fcn.004386c7(0, 0xffff, 0xe900, 1, &var_10h, &var_10h, 0);\n            fcn.004386c7(0, 0xffff, 0xe900, 2, in_ECX + 0x16, &var_10h, 1);\n            (**(*in_ECX + 0x60))(&var_10h, 0);\n            fcn.00439f68(0, 0, 0, var_8h - var_10h, var_4h - var_ch, 0x16);\n        }\n        in_ECX[0x2c] = 0;\n    }\n    return;\n}\n",
        "token_count": 486
    },
    "004528fd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: nLeftRect\n// WARNING: Variable defined which should be unmapped: nBottomRect\n// WARNING: Variable defined which should be unmapped: nRightRect\n// WARNING: Variable defined which should be unmapped: nTopRect\n\nvoid __cdecl\nfcn.004528fd(uint lprcSrc2, uint dx, uint dy, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint nLeftRect;\n    uint nTopRect;\n    uint nRightRect;\n    uint nBottomRect;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hrgnDest;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint hrgnSrc1;\n    uint var_14h;\n    uint hrgnSrc2;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    fcn.004102a7();\n    *(unaff_EBP + -0x2c) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004102a7();\n    *(unaff_EBP + -0x1c) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.004102a7();\n    *(unaff_EBP + -0x14) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 2;\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(*(unaff_EBP + 8));\n    fcn.00442fc8(uVar2);\n    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0xc), -*(unaff_EBP + 0x10));\n    (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 8));\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x44);\n    fcn.00442fc8(uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n    fcn.00442fc8(uVar2);\n    (*_sym.imp.GDI32.dll_CombineRgn)\n              (*(unaff_EBP + -0x28), -(unaff_EBP != 0x1c) & *(unaff_EBP + -0x18), \n               -(unaff_EBP != 0x14) & *(unaff_EBP + -0x10), 3);\n    if (*(unaff_EBP + 0x20) == 0) {\n        uVar2 = fcn.0045288a();\n        *(unaff_EBP + 0x20) = uVar2;\n    }\n    if (*(unaff_EBP + 0x24) == 0) {\n        *(unaff_EBP + 0x24) = *(unaff_EBP + 0x20);\n    }\n    fcn.004102a7();\n    *(unaff_EBP + -0x24) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.004102a7();\n    *(unaff_EBP + -0x34) = vtable.CRgn.0;\n    puVar1 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -4) = 4;\n    if (puVar1 != NULL) {\n        uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n        fcn.00442fc8(uVar2);\n        (*_sym.imp.GDI32.dll_SetRectRgn)(*(unaff_EBP + -0x18), *puVar1, puVar1[1], puVar1[2], puVar1[3]);\n        (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, puVar1);\n        (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0x18), -*(unaff_EBP + 0x1c));\n        (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, puVar1);\n        (*_sym.imp.GDI32.dll_SetRectRgn)\n                  (*(unaff_EBP + -0x10), *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c), \n                   *(unaff_EBP + -0x38));\n        (*_sym.imp.GDI32.dll_CombineRgn)\n                  (*(unaff_EBP + -0x20), -(unaff_EBP != 0x1c) & *(unaff_EBP + -0x18), \n                   -(unaff_EBP != 0x14) & *(unaff_EBP + -0x10), 3);\n        if (*(*(unaff_EBP + 0x20) + 4) == *(*(unaff_EBP + 0x24) + 4)) {\n            uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n            fcn.00442fc8(uVar2);\n            (*_sym.imp.GDI32.dll_CombineRgn)\n                      (*(unaff_EBP + -0x30), -(unaff_EBP != 0x24) & *(unaff_EBP + -0x20), \n                       -(unaff_EBP != 0x2c) & *(unaff_EBP + -0x28), 3);\n        }\n    }\n    if ((*(*(unaff_EBP + 0x20) + 4) != *(*(unaff_EBP + 0x24) + 4)) && (puVar1 != NULL)) {\n        fcn.004423b2(unaff_EBP + -0x24);\n        (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n        uVar2 = fcn.00441ef3(*(unaff_EBP + 0x24));\n        (*_sym.imp.GDI32.dll_PatBlt)\n                  (extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), \n                   *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n        fcn.00441ef3(uVar2);\n    }\n    iVar3 = unaff_EBP + -0x34;\n    if (*(unaff_EBP + -0x30) == 0) {\n        iVar3 = unaff_EBP + -0x2c;\n    }\n    fcn.004423b2(iVar3);\n    (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n    iVar3 = fcn.00441ef3(*(unaff_EBP + 0x20));\n    (*_sym.imp.GDI32.dll_PatBlt)\n              (extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44)\n               , *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n    if (iVar3 != 0) {\n        fcn.00441ef3(iVar3);\n    }\n    fcn.004423b2(0);\n    *(unaff_EBP + -0x34) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 5;\n    fcn.0044301f();\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 6;\n    fcn.0044301f();\n    *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 7;\n    fcn.0044301f();\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 8;\n    fcn.0044301f();\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 9;\n    fcn.0044301f();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 2149
    },
    "00452d51": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452d51(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t var_50h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    }\n    else {\n        uVar2 = *(arg_ch + 8);\n    }\n    puVar4 = &var_50h;\n    for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    iVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    pcVar1 = _sym.imp.GDI32.dll_DPtoLP;\n    var_10h = (iVar3 * var_50h) / 0x2d0;\n    (*_sym.imp.GDI32.dll_DPtoLP)(uVar2, &var_14h, 1);\n    var_ch = 0;\n    var_8h = 0;\n    (*pcVar1)(uVar2, &var_ch, 1);\n    var_50h = fcn.00413dce(var_10h - var_8h);\n    var_50h = -var_50h;\n    if (arg_ch == 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    uVar2 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_50h);\n    fcn.00442fc8(uVar2);\n    return;\n}\n",
        "token_count": 451
    },
    "0045610a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045610a(int32_t hgdiobj)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    uint lpvObject;\n    int32_t var_30h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0x18, &lpvObject);\n    if (in_ECX[0x20] == 0) {\n        var_8h = 0;\n        var_4h = hgdiobj;\n        iVar1 = (**(*in_ECX + 0xa0))(0x413, var_30h / in_ECX[0x22], &var_8h);\n        uVar2 = iVar1 == 0;\n    }\n    else {\n        var_ch = var_30h / in_ECX[0x22];\n        var_1ch = 0;\n        var_14h = 0;\n        var_10h = hgdiobj;\n        var_18h = in_ECX[0x20];\n        uVar2 = (**(*in_ECX + 0xa0))(0x42e, 0, &var_1ch);\n    }\n    if (uVar2 != 0) {\n        fcn.00441b12(in_ECX + 0x20);\n        in_ECX[0x20] = hgdiobj;\n    }\n    return uVar2;\n}\n",
        "token_count": 374
    },
    "004578f2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.004578f2(void)\n\n{\n    uint uVar1;\n    uint32_t var_14h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_14h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1);\n    return 1 < var_14h;\n}\n",
        "token_count": 80
    },
    "0045bec6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045bec6(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_8h;\n    iVar4 = (*_sym.imp.ole32.dll_ReadClassStg)(arg_8h, &var_1ch);\n    if (iVar4 == 0) {\n        var_4h = 0;\n        (*_sym.imp.ole32.dll_ReadFmtUserTypeStg)(uVar3, &var_8h, &var_4h);\n        var_ch = 0;\n        arg_8h = NULL;\n        iVar4 = (*_sym.imp.ole32.dll_OleRegGetUserType)(arg_ch, 1, &arg_8h);\n        pcVar1 = _sym.imp.ole32.dll_WriteClassStg;\n        if (iVar4 != 0) {\n            arg_8h = &var_ch;\n        }\n        arg_ch = (*_sym.imp.ole32.dll_WriteClassStg)(uVar3, arg_ch);\n        pcVar2 = _sym.imp.ole32.dll_WriteFmtUserTypeStg;\n        if ((arg_ch == 0) &&\n           ((arg_ch = (*_sym.imp.ole32.dll_WriteFmtUserTypeStg)(uVar3, var_8h, arg_8h),  arg_ch != 0 ||\n            (arg_ch = (*_sym.imp.ole32.dll_SetConvertStg)(uVar3, 1),  arg_ch != 0)))) {\n            (*pcVar1)(uVar3, &var_1ch);\n            (*pcVar2)(uVar3, var_8h, var_4h);\n        }\n        pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n        if (arg_8h != &var_ch) {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(arg_8h);\n        }\n        (*pcVar1)(var_4h);\n        return arg_ch;\n    }\n    return iVar4;\n}\n",
        "token_count": 497
    },
    "0045c872": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0045c872(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    if (*(unaff_EBP + 8) < 0) {\n        fcn.0043c956();\n        uVar1 = *0x480454;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = uVar1;\n        *(unaff_EBP + -0x14) = 0xffffffff;\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x20) = vtable.CFileException.0;\n        *(unaff_EBP + -0x18) = 0;\n        fcn.0043b6b7(0);\n        *(unaff_EBP + -4) = 2;\n        fcn.0045c809(unaff_EBP + -0x20, *(unaff_EBP + 8));\n        fcn.0043e2b4(*(unaff_EBP + -0x18), *(unaff_EBP + -0x14), 0);\n        *(unaff_EBP + -0x20) = vtable.CFileException.0;\n        *(unaff_EBP + -4) = 3;\n        fcn.0043b52e();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 429
    },
    "00401046": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "hide graphical window",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid fcn.00401046(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (param_3 != 0) {\n        do {\n            (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n            uVar1 = fcn.004107a0(param_1);\n            *(uVar2 + param_2) = *(uVar2 + param_2) ^ *(uVar2 % uVar1 + param_1);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 != param_3);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00409523": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00409523(code **param_1, code *param_2)\n\n{\n    param_1[1] = param_2;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    fcn.00432b43(10);\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = NULL;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    param_1[0x16] = NULL;\n    *param_1 = vtable.CDataSourceControl.0;\n    return param_1;\n}\n",
        "token_count": 226
    },
    "0040a267": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040a267(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h)\n\n{\n    if ((arg_10h & 0x4000) == 0) {\n        arg_8h[8] = 0;\n    }\n    else {\n        arg_8h[8] = 1;\n    }\n    *(arg_8h + 0xc) = arg_10h;\n    arg_8h[5] = arg_30h;\n    *(arg_8h + 0x32) = arg_18h;\n    arg_8h[9] = arg_20h;\n    *(arg_8h + 0x33) = arg_1ch;\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_24h;\n    arg_8h[10] = arg_14h;\n    arg_8h[7] = 1;\n    arg_8h[0xb] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[6] = 0;\n    if (arg_28h != 0) {\n        arg_8h[7] = 3;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != 0) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "0040bbb0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040bbb0(uint *param_1, uint param_2, uint param_3, ushort param_4)\n\n{\n    *param_1 = 0;\n    *(param_1 + 1) = param_4;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    param_1[2] = param_3;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 107
    },
    "0040fc11": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fc11(uint16_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(param_1);\n    iVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(unaff_retaddr, param_2, param_3);\n    *(param_1 + 4) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0042f1c0();\n    }\n    *param_1 = unaff_retaddr | 0x2000;\n    *(param_1 + 10) = param_2;\n    uVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(param_1 + 4));\n    *(param_1 + 8) = uVar2;\n    return;\n}\n",
        "token_count": 215
    },
    "0041048f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0041048f(code **param_1, code **param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.COleControlLock.0;\n    param_1[6] = NULL;\n    param_1[1] = *param_2;\n    param_1[2] = param_2[1];\n    param_1[3] = param_2[2];\n    param_1[4] = param_2[3];\n    ppiVar1 = param_1 + 5;\n    *ppiVar1 = NULL;\n    iVar2 = fcn.004569a4();\n    if ((*(iVar2 + 0x114) == 0) && (iVar2 = fcn.0045858f(),  iVar2 == 0)) {\n        return param_1;\n    }\n    iVar2 = (*_sym.imp.ole32.dll_CoGetClassObject)(param_2, 3, 0, 0x471fb0, ppiVar1);\n    if ((-1 < iVar2) && (iVar2 = (**(**ppiVar1 + 0x10))(*ppiVar1, 1),  iVar2 < 0)) {\n        (**(**ppiVar1 + 8))(*ppiVar1);\n        *ppiVar1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 314
    },
    "00432b43": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432b43(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 105
    },
    "00434347": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434347(code **param_1, code *param_2)\n\n{\n    param_1[1] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CMapPtrToPtr.0;\n    param_1[2] = 0x11;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 109
    },
    "00434614": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434614(code **param_1, code *param_2)\n\n{\n    param_1[1] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CMapStringToPtr.0;\n    param_1[2] = 0x11;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 109
    },
    "0043a18b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a18b(int32_t param_1)\n\n{\n    *(param_1 + 4) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 109
    },
    "0043a4b1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a4b1(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 128
    },
    "00445dc2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00445dc2(int32_t *param_1, uint *param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t *unaff_EDI;\n    \n    iVar2 = fcn.004459ff(param_2);\n    if (*param_1 != 0) {\n        *param_2 = 0xffffffff;\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    iVar5 = 0;\n    while( true ) {\n        uVar3 = (*pcVar1)(iVar2, 0x87, 0, 0);\n        if ((uVar3 & 0x40) != 0) {\n            if (*unaff_EDI == 0) {\n                (*pcVar1)(iVar2, 0xf1, iVar5 == *unaff_EBP, 0);\n            }\n            else {\n                iVar4 = (*pcVar1)(iVar2, 0xf0, 0, 0);\n                if (iVar4 != 0) {\n                    *unaff_EBP = iVar5;\n                }\n            }\n            iVar5 = iVar5 + 1;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n        if (iVar2 == 0) break;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar2, 0xfffffff0);\n        if ((uVar3 & 0x20000) != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "0044a018": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0044a018(code **param_1, code *param_2)\n\n{\n    fcn.0043bbf4();\n    *param_1 = vtable.CMemFile.0;\n    param_1[4] = param_2;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = 0x1;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "0044a064": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0044a064(code **param_1, code *param_2, code *param_3, code *param_4)\n\n{\n    fcn.0043bbf4();\n    param_1[5] = NULL;\n    param_1[4] = param_4;\n    param_1[9] = NULL;\n    *param_1 = vtable.CMemFile.0;\n    param_1[7] = ~-(param_4 != NULL) & param_3;\n    param_1[8] = param_2;\n    param_1[6] = param_3;\n    return param_1;\n}\n",
        "token_count": 146
    },
    "0044a0dd": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0044a0dd(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0044a2c4();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.0043bce9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 260
    },
    "0044a2c4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a2c4(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "0044b3b4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044b3b4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    uVar3 = *0x480454;\n    *(unaff_EBP + -0x10) = *0x480454;\n    *(unaff_EBP + -0x14) = uVar3;\n    *(unaff_EBP + -4) = 0;\n    piVar1 = *(unaff_EBP + 0x10);\n    iVar4 = *piVar1;\n    *(unaff_EBP + -4) = 1;\n    iVar4 = (**(iVar4 + 100))(unaff_EBP + -0x10, 4);\n    if ((iVar4 != 0) && (*(*(unaff_EBP + -0x10) + -8) != 0)) {\n        iVar4 = (**(*piVar1 + 100))(unaff_EBP + -0x14, 3);\n        if ((iVar4 != 0) && (*(*(unaff_EBP + -0x14) + -8) != 0)) {\n            iVar4 = *(unaff_EBP + 0xc);\n            puVar2 = *(unaff_EBP + 0x14);\n            if (puVar2 != NULL) {\n                fcn.0043b6b7();\n                *(iVar4 + 0x3c) = *puVar2;\n                *(iVar4 + 0x18) = *(iVar4 + 0x14) + 1;\n            }\n            fcn.0043b946(unaff_EBP + -0x14);\n            fcn.0043b931(0);\n            fcn.0043b931(0x2a);\n            fcn.0043b946(unaff_EBP + -0x10);\n            fcn.0043b931(0);\n            *(iVar4 + 0x14) = *(iVar4 + 0x14) + 1;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 655
    },
    "00455650": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455650(code **param_1)\n\n{\n    param_1[5] = *0x480454;\n    param_1[6] = *0x480454;\n    param_1[7] = *0x480454;\n    param_1[8] = *0x480454;\n    *param_1 = vtable.CCommandLineInfo.0;\n    param_1[1] = 0x1;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    return;\n}\n",
        "token_count": 134
    },
    "004556ab": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004556ab(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CCommandLineInfo.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 2;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 1;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 0;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 229
    },
    "004569da": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004569da(code **param_1, uchar param_2)\n\n{\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0x40f] = NULL;\n    param_1[0x410] = NULL;\n    param_1[0x413] = 0xffffffff;\n    param_1[0x414] = NULL;\n    param_1[0x419] = NULL;\n    param_1[0x41a] = NULL;\n    *param_1 = vtable.AFX_MODULE_STATE.0;\n    param_1[10] = 0x1c;\n    param_1[8] = 0x14;\n    param_1[6] = NULL;\n    *(param_1 + 5) = param_2;\n    param_1[0xc] = 0x1;\n    param_1[0x410] = 0x18;\n    return;\n}\n",
        "token_count": 238
    },
    "0045feb7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045feb7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.0045b84a(arg_10h, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = 1;\n    iVar1 = fcn.0045fe14(iVar1, 1);\n    *(iVar1 + 0x1c) = 0;\n    *(iVar1 + 0x14) = 1;\n    *(iVar1 + 0x18) = arg_ch;\n    return;\n}\n",
        "token_count": 150
    },
    "0045ff29": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ff29(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.0045b84a(arg_ch, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = *(iVar1 + 0x10) | 5;\n    iVar1 = fcn.0045fe14(iVar1, 1);\n    *(iVar1 + 0x14) = 0;\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 152
    },
    "0045ffae": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ffae(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    \n    uVar1 = fcn.0045b84a(arg_ch, arg_8h, &var_14h);\n    iVar2 = fcn.0045fe14(uVar1, 2);\n    *(iVar2 + 0x14) = 0;\n    *(iVar2 + 0x18) = 0;\n    *(iVar2 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 135
    },
    "00464641": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00464641(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.COleDispatchException.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 1;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 0;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 206
    },
    "0042f154": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f154(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0043c7bb(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 99
    },
    "00432b82": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432b82(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00433197();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "004343cf": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004343cf(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.0043a720(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.00433197();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 120
    },
    "0043469c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043469c(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    if (*(param_1 + 4) != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 8) != 0) {\n            do {\n                for (puVar2 = *(*(param_1 + 4) + uVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    fcn.0043b52e();\n                }\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < *(param_1 + 8));\n        }\n        fcn.0043a720(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.00433197();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 245
    },
    "0045f67d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0045f67d(code **param_1, code *param_2, code *param_3, code *param_4, code *param_5)\n\n{\n    fcn.0043a18b();\n    param_1[0xd] = vtable.CEnumArray::XEnumVOID.0;\n    param_1[7] = param_2;\n    param_1[8] = NULL;\n    param_1[10] = NULL;\n    param_1[0xb] = param_4;\n    param_1[9] = param_3;\n    param_1[0xc] = param_5;\n    *param_1 = vtable.CEnumArray.0;\n    return param_1;\n}\n",
        "token_count": 167
    },
    "0042ecd5": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ecd5(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint16_t **in_ECX;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = NULL;\n    }\n    else {\n        fcn.0042ec20(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00446193": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446193(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if ((arg_ch < arg_10h) || (arg_14h < arg_ch)) {\n        fcn.00446103(arg_8h, arg_10h, arg_14h, 0x46dd64, 0xf112);\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004075ec": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.004075ec(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlSite.0;\n    pcVar1 = extraout_ECX[0x22];\n    *(unaff_EBP + -4) = 2;\n    if (pcVar1 != NULL) {\n        fcn.00409571();\n        fcn.0043a720(pcVar1);\n    }\n    fcn.004084b7();\n    fcn.00408133(extraout_ECX + 0xf, extraout_ECX[0x18]);\n    fcn.00408133(0x472e30, extraout_ECX[0x19]);\n    fcn.00408133(0x472de0, extraout_ECX[0x21]);\n    piVar2 = extraout_ECX[0x14];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0x14))(piVar2);\n        (**(*extraout_ECX[0x14] + 8))(extraout_ECX[0x14]);\n        extraout_ECX[0x14] = NULL;\n    }\n    piVar2 = extraout_ECX[0x15];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2);\n        extraout_ECX[0x15] = NULL;\n    }\n    piVar2 = extraout_ECX[0x13];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0xc))(piVar2, 0);\n        (**(*extraout_ECX[0x13] + 0x18))(extraout_ECX[0x13], 1);\n        (**(*extraout_ECX[0x13] + 8))(extraout_ECX[0x13]);\n        extraout_ECX[0x13] = NULL;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX + 0x2a);\n    fcn.00408d3e(0xffffffff, 0);\n    if (((extraout_ECX[0x25] != NULL) && (extraout_ECX[0x24] != NULL)) &&\n       (piVar2 = *(extraout_ECX[0x24] + 0x88),  piVar2 != NULL)) {\n        (**(*piVar2 + 8))(extraout_ECX, 0);\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 0;\n    fcn.00464c5b();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043a1a5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 760
    },
    "00438442": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438442(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (**(*in_ECX + 0x68))(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = in_ECX[7];\n    }\n    else {\n        arg_8h = 2;\n        iVar1 = *(iVar1 + 0x1c);\n    }\n    (*_sym.imp.USER32.dll_SetScrollPos)(iVar1, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 146
    },
    "0043849a": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043849a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (**(*in_ECX + 0x68))(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = in_ECX[7];\n    }\n    else {\n        arg_8h = 2;\n        iVar1 = *(iVar1 + 0x1c);\n    }\n    (*_sym.imp.USER32.dll_SetScrollRange)(iVar1, arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 158
    },
    "004384cd": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004384cd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (**(*in_ECX + 0x68))(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = in_ECX[7];\n    }\n    else {\n        arg_8h = 2;\n        iVar1 = *(iVar1 + 0x1c);\n    }\n    (*_sym.imp.USER32.dll_GetScrollRange)(iVar1, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 146
    },
    "00439ba9": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439ba9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x34) == NULL) {\n        (*_sym.imp.USER32.dll_CheckRadioButton)(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        (**(**(in_ECX + 0x34) + 0x68))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0043ad3a": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ad3a(int32_t *param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack4;\n    \n    bVar1 = true;\n    iStack4 = 0;\n    do {\n        if (bVar1) {\n            do {\n                iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n                if (iVar2 != 0) break;\n                iVar2 = iStack4 + 1;\n                iVar3 = (**(*param_1 + 0x60))(iStack4);\n                if (iVar3 == 0) {\n                    bVar1 = false;\n                }\n                iStack4 = iVar2;\n            } while (bVar1);\n        }\n        do {\n            iVar2 = (**(*param_1 + 0x5c))();\n            if (iVar2 == 0) {\n                (**(*param_1 + 0x68))();\n                return;\n            }\n            iVar2 = (**(*param_1 + 100))(param_1 + 0xc);\n            if (iVar2 != 0) {\n                bVar1 = true;\n            }\n            iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n        } while (iVar2 != 0);\n    } while( true );\n}\n",
        "token_count": 336
    },
    "0043e5f3": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint fcn.0043e5f3(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0xffffffff;\n    piVar2 = fcn.0043aa46();\n    iVar3 = fcn.00456c34();\n    piVar1 = *(iVar3 + 4);\n    iVar3 = fcn.004582d7(param_1, param_2, param_3, param_4);\n    if ((iVar3 != 0) && ((piVar1 == NULL || (iVar3 = (**(*piVar1 + 0x84))(),  iVar3 != 0)))) {\n        iVar3 = (**(*piVar2 + 0x50))();\n        if (iVar3 == 0) {\n            if (piVar2[7] != NULL) {\n                (**(*piVar2[7] + 0x58))();\n            }\n            uVar4 = (**(*piVar2 + 0x68))();\n        }\n        else {\n            uVar4 = (**(*piVar2 + 0x54))();\n        }\n    }\n    fcn.00466b39();\n    return uVar4;\n}\n",
        "token_count": 294
    },
    "0044adac": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044adac(int32_t param_1)\n\n{\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iStack8 = param_1;\n    iStack4 = param_1;\n    fcn.0044af89();\n    (**(**(param_1 + 0x68) + 0xbc))(&iStack8, *(param_1 + 0x40) - *(param_1 + 0x38), 0x42);\n    fcn.00451272(*(param_1 + 0x68), *(param_1 + 0x48), *(param_1 + 0x4c), *(param_1 + 0x70) & 0x40 | 0x2004);\n    return;\n}\n",
        "token_count": 176
    },
    "00430e7e": {
        "rules": [
            "capture webcam image/8f9bddbfc62a47b78ef3c85708336261"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430e7e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_8h;\n    \n    fcn.00431037(&var_2ch, arg_ch, arg_10h);\n    var_8h = fcn.0043b95e(0x100);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x40b, 0, &var_2ch);\n    fcn.0043b9ad(0xffffffff);\n    return;\n}\n",
        "token_count": 147
    },
    "0043aadc": {
        "rules": [
            "resume thread"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043aadc(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0043c892();\n    if (piVar1 == NULL) {\n        fcn.0042f1c0();\n    }\n    piVar1[0x13] = 0;\n    iVar2 = fcn.0043ac43(arg_14h | 4, arg_10h, arg_18h);\n    if (iVar2 == 0) {\n        (**(*piVar1 + 0x78))();\n        piVar1 = NULL;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(piVar1[10], arg_ch);\n        if ((arg_14h & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(piVar1[10]);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 243
    },
    "0043c0a0": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043c0a0(int32_t *param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar1 = (**(*param_1 + 0x28))(0, 1);\n    uVar2 = (**(*param_1 + 0x28))(0, 2);\n    (**(*param_1 + 0x28))(uVar1, 0);\n    return uVar2;\n}\n",
        "token_count": 103
    },
    "0043c260": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043c260(uint hKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    uint lpType;\n    uint lpcbData;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    bVar5 = false;\n    var_8h = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n    if (iVar3 == 0) {\n        var_4h = 0;\n        iVar3 = (*pcVar1)(var_8h, hKey, &var_4h);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            hKey = 0;\n            iVar3 = (*pcVar1)(var_4h, \"InProcServer32\", &hKey);\n            if (iVar3 == 0) {\n                uVar4 = fcn.0043b95e(0x104);\n                lpcbData = 0x104;\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x483bd0, 0, &lpType, uVar4, &lpcbData);\n                fcn.0043b9ad(0xffffffff);\n                bVar5 = iVar3 == 0;\n                (*pcVar2)(hKey);\n            }\n            (*pcVar2)(var_4h);\n        }\n        (*pcVar2)(var_8h);\n    }\n    return bVar5;\n}\n",
        "token_count": 398
    },
    "00457b82": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00457b82(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x7c), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x90), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 382
    },
    "00457c16": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457c16(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00457b82();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 165
    },
    "004010d2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004010d2(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    char cVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    ushort *unaff_ESI;\n    \n    cVar1 = fcn.00401262(param_3, 1);\n    if (cVar1 != '\\0') {\n        puVar2 = *(param_1 + 4);\n        iVar3 = param_3;\n        if (param_3 != 0) {\n            do {\n                *puVar2 = *unaff_ESI;\n                puVar2 = puVar2 + 1;\n                unaff_ESI = unaff_ESI + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(param_1 + 8) = param_3;\n        *(*(param_1 + 4) + param_3 * 2) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 232
    },
    "00401311": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401311(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_1ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_1ch, 0, 0, 0, 0);\n        if (iVar2 == 0) {\n            return;\n        }\n        if (*(param_1 + 0xbc) != 0) break;\n        piVar3 = fcn.0043aa46();\n        iVar2 = (**(*piVar3 + 0x5c))();\n        if (iVar2 == 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00409751": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00409751(uint arg_8h)\n\n{\n    code **ppcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x14) = 0;\n    if (extraout_ECX[1] != 0) {\n        *(unaff_EBP + -0x10) = 0;\n        ppcVar1 = **(unaff_EBP + 8);\n        *(unaff_EBP + -4) = 0;\n        iVar4 = (**ppcVar1)(*(unaff_EBP + 8), 0x4725b0, unaff_EBP + -0x10);\n        *(unaff_EBP + -0x14) = iVar4;\n        if ((-1 < iVar4) && (uVar5 = 0,  extraout_ECX[1] != 0)) {\n            do {\n                (**(**(unaff_EBP + -0x10) + 0x18))(*(unaff_EBP + -0x10), *(*extraout_ECX + uVar5 * 8), 0);\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < extraout_ECX[1]);\n        }\n        extraout_ECX[1] = 0;\n        fcn.0043a720(*extraout_ECX);\n        piVar2 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *extraout_ECX = 0;\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    uVar3 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 537
    },
    "0040b9df": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040b9df(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = 0;\n    uVar3 = 0;\n    uVar1 = *(*(param_1 + 8) + 4);\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.0040ba07();\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 154
    },
    "0040bcb9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040bcb9(int32_t param_1, int32_t param_2, uint *param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_4 != NULL) {\n        *param_4 = 0;\n    }\n    iVar1 = *(param_1 + 0x8c);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (*(iVar1 + 8) == param_2) break;\n        iVar1 = fcn.0040bbf3();\n    }\n    uVar2 = fcn.0040bc83();\n    *param_3 = uVar2;\n    return 0;\n}\n",
        "token_count": 173
    },
    "0040c380": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040c380(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar4 = 0;\n    if (param_2 != 0) {\n        while ((iVar5 = param_2,  uVar2 = (*pcVar1)(*(iVar5 + 0x1c), 0xfffffff0),  (uVar2 & 0xc0000000) == 0x40000000 &&\n               (iVar5 != unaff_EBX))) {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar5 + 0x1c));\n            param_2 = fcn.00436a76(uVar3);\n            uVar2 = (*pcVar1)(*(param_2 + 0x1c), 0xffffffec);\n            if ((uVar2 & 0x10000) != 0) {\n                return iVar5;\n            }\n            iVar4 = iVar5;\n            if (param_2 == 0) {\n                return iVar5;\n            }\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 298
    },
    "0040c4d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c4d4(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint noname_5;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t noname_6;\n    \n    iVar3 = 0;\n    noname_6 = arg_ch;\n    iVar1 = fcn.0040c380(arg_8h);\n    while( true ) {\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0x1c);\n        }\n        noname_5 = (*_sym.imp.USER32.dll_GetNextDlgGroupItem)(*(arg_8h + 0x1c), iVar1, 0);\n        iVar1 = fcn.00436a76();\n        if (((iVar1 == 0) || (iVar3 = iVar3 + 1,  iVar1 == arg_ch)) || (0x3c < iVar3)) break;\n        iVar2 = fcn.0040c4b5(iVar1, arg_10h);\n        if (iVar2 != 0) {\n            return iVar1;\n        }\n    }\n    iVar3 = fcn.0040c380(arg_8h);\n    iVar1 = iVar3;\n    do {\n        iVar1 = fcn.0040c3d9(arg_8h, iVar1, 3, arg_8h, arg_ch, noname_5, noname_6, unaff_EDI, unaff_ESI);\n        iVar2 = fcn.0040c4b5(iVar1, arg_10h);\n        if (iVar2 != 0) {\n            return iVar1;\n        }\n    } while (iVar1 != iVar3);\n    return 0;\n}\n",
        "token_count": 414
    },
    "0040c57f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c57f(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    do {\n        arg_ch = fcn.0040c4d4(arg_8h, arg_ch, arg_10h);\n        if (arg_ch == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0040c559(arg_ch);\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetNextDlgTabItem)(*(arg_8h + 0x1c), *(arg_ch + 0x1c), 0);\n            arg_ch = fcn.00436a76(uVar2);\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        iVar1 = fcn.00439fde();\n        if (iVar1 != 0) {\n            return arg_ch;\n        }\n        if (arg_ch == iVar3) {\n            return 0;\n        }\n        if (iVar3 == 0) {\n            iVar3 = arg_ch;\n        }\n        var_4h = var_4h + 1;\n    } while (var_4h < 0x200);\n    return 0;\n}\n",
        "token_count": 327
    },
    "0040c5f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c5f4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if (param_1 != 0) {\n        piVar4 = NULL;\n        iVar3 = param_1;\n        do {\n            iVar1 = *(iVar3 + 0x34);\n            if ((iVar1 != 0) || (piVar4 = *(iVar3 + 0x38),  piVar4 != NULL)) break;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar3 + 0x1c));\n            iVar3 = fcn.00436a76(uVar2);\n        } while (iVar3 != 0);\n        if ((iVar3 != 0) && (iVar1 == 0)) {\n            (**(*piVar4 + 0xac))();\n            uVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar3 = fcn.00436a76(uVar2);\n            if (iVar3 != param_1) {\n                fcn.0043a020();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0040c651": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c651(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_retaddr;\n    \n    if ((param_1 != 0) &&\n       (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x1c)),  pcVar2 = _sym.imp.USER32.dll_GetParent,  iVar3 != 0\n       )) {\n        uVar4 = *(param_1 + 0x1c);\n        while( true ) {\n            uVar4 = (*pcVar2)(uVar4);\n            iVar3 = fcn.00436a76(uVar4);\n            if (iVar3 == 0) break;\n            piVar1 = *(iVar3 + 0x34);\n            if (piVar1 != NULL) {\n                if (piVar1[0x12] == 0) {\n                    return;\n                }\n                iVar3 = fcn.00436a76(*(piVar1[0x12] + 0x20));\n                if (iVar3 == 0) {\n                    return;\n                }\n                if (unaff_retaddr == iVar3) {\n                    return;\n                }\n                if ((unaff_retaddr != 0) &&\n                   (iVar3 = (*_sym.imp.USER32.dll_IsChild)(*(iVar3 + 0x1c), *(unaff_retaddr + 0x1c)),  iVar3 != 0)) {\n                    return;\n                }\n                (**(*piVar1 + 0x5c))(0);\n                return;\n            }\n            uVar4 = *(iVar3 + 0x1c);\n        }\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "0040c6c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040c6c4(int32_t param_1, uint param_2)\n\n{\n    int32_t noname_4;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_5;\n    \n    noname_4 = fcn.00439bdb();\n    if (noname_4 == 0) {\n        noname_5 = 1;\n        iVar1 = fcn.0040c3d9(param_1, 0, 1, param_2, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_1);\n        noname_1 = iVar1;\n        if (iVar1 != param_1) {\n            do {\n                iVar2 = fcn.00439ee3();\n                if (iVar2 == unaff_ESI) {\n                    return noname_1;\n                }\n                noname_1 = fcn.0040c3d9(param_1, noname_1, 1, param_1, noname_4, noname_5, param_2, unaff_EDI, unaff_ESI\n                                       );\n            } while ((noname_1 != 0) && (noname_1 != iVar1));\n        }\n        noname_4 = 0;\n    }\n    return noname_4;\n}\n",
        "token_count": 337
    },
    "0040c789": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c789(uint param_1, int32_t param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_4;\n    int32_t noname_5;\n    \n    if (param_2 != 0) {\n        noname_4 = *(param_2 + 0x1c);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(noname_4, 0xffffffec);\n        if ((uVar1 & 0x10000) == 0) {\n            iVar2 = fcn.0040c380();\n            noname_5 = param_2;\n            goto code_r0x0040c7be;\n        }\n    }\n    noname_5 = 3;\n    noname_4 = 0;\n    iVar2 = fcn.0040c3d9(param_1, 0, 3, unaff_EDI, unaff_ESI, unaff_retaddr, param_1, param_2, param_3);\ncode_r0x0040c7be:\n    noname_1 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.0040c71b(noname_1, 0);\n            noname_1 = fcn.0040c3d9(unaff_EDI, noname_1, 0, unaff_EDI, noname_4, noname_5, unaff_EDI, unaff_ESI, \n                                    unaff_retaddr);\n            if (noname_1 == 0) {\n                return;\n            }\n        } while (noname_1 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "00410694": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410694(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00456c34();\n    fcn.00457a83(0xb);\n    while (puVar1 = *(iVar2 + 0x103c),  puVar1 != NULL) {\n        fcn.00456f96();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    fcn.00457af3(0xb);\n    return;\n}\n",
        "token_count": 123
    },
    "0041cfbd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041cfbd(int16_t param_1)\n\n{\n    int16_t *piVar1;\n    \n    piVar1 = 0x4826d4;\n    do {\n        if (param_1 == *piVar1) {\n            return 0;\n        }\n        piVar1 = piVar1 + 1;\n    } while (piVar1 < 0x4826e8);\n    return 1;\n}\n",
        "token_count": 97
    },
    "00432df9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00432df9(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x00432e06;\n    param_3 = *(param_1 + 4);\n    while( true ) {\n        if (param_3 == NULL) {\n            return NULL;\n        }\n        if (param_3[2] == param_2) break;\ncode_r0x00432e06:\n        param_3 = *param_3;\n    }\n    return param_3;\n}\n",
        "token_count": 132
    },
    "00433197": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433197(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.0043a720(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00434489": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00434489(int32_t param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 170
    },
    "004344bb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004344bb(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 138
    },
    "00434560": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00434560(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        uVar4 = (param_2 >> 4) % *(param_1 + 8);\n        puVar2 = *(iVar1 + uVar4 * 4);\n        puVar5 = iVar1 + uVar4 * 4;\n        while (puVar3 = puVar2,  puVar3 != NULL) {\n            if (puVar3[1] == param_2) {\n                *puVar5 = *puVar3;\n                fcn.00434470(puVar3);\n                return 1;\n            }\n            puVar5 = puVar3;\n            puVar2 = *puVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 231
    },
    "00437684": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00437684(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(param_1 + 4));\n    iVar4 = 0;\n    if (0 < iVar1) {\n        do {\n            uVar2 = (*_sym.imp.USER32.dll_GetSubMenu)(*(param_1 + 4), iVar4);\n            iVar3 = fcn.0043d50e(uVar2);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(param_1 + 4), iVar4);\n                if (iVar3 == param_1) {\n                    iVar1 = fcn.0043d523(*(param_1 + 4));\n                    return iVar1;\n                }\n            }\n            else {\n                iVar3 = fcn.00437684(iVar3, param_3);\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "00438126": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00438126(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar4 = *(param_1 + 0x1c),  iVar4 != 0)) {\n        while( true ) {\n            uVar2 = (*pcVar1)(iVar4);\n            piVar3 = fcn.00436a76(uVar2);\n            if (piVar3 == NULL) break;\n            iVar4 = (**(*piVar3 + 0xb0))();\n            if (iVar4 != 0) {\n                return piVar3;\n            }\n            iVar4 = piVar3[7];\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 198
    },
    "004381a9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004381a9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x1c),  *(param_1 + 0x1c) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.00438164(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.00436a76(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "00438201": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00438201(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    if ((param_1 == 0) || (iVar5 = *(param_1 + 0x1c),  iVar5 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n    while ((uVar2 & 0x40000000) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n        if (iVar3 == 0) break;\n        uVar2 = (*pcVar1)(iVar3, 0xfffffff0);\n        iVar5 = iVar3;\n    }\n    uVar4 = fcn.00436a76(iVar5);\n    return uVar4;\n}\n",
        "token_count": 235
    },
    "00438988": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00438988(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.00436a9d(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x90))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 186
    },
    "00438ead": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00438ead(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.004369dd();\n    return;\n}\n",
        "token_count": 125
    },
    "0043a6f7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043a6f7(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0041081b(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x4802fc == NULL) break;\n        iVar1 = (**0x4802fc)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "0043c93d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043c93d(int32_t param_1, int32_t param_2)\n\n{\n    while( true ) {\n        if (param_1 == 0) {\n            return 0;\n        }\n        if (param_1 == param_2) break;\n        param_1 = *(param_1 + 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 88
    },
    "00441a45": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00441a45(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != -1) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00445934": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00445934(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x004459ad;\n    iVar3 = fcn.004459dc();\n    if ((iVar3 == 0) && (iVar3 = fcn.0040103c(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar4 = iVar3;\n        iVar5 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x1c); iVar4 = iVar3,  iVar5 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x004459ad:\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar4 = iVar3;\n            iVar5 = iVar3;\n            if ((uVar6 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar4,  iVar1 != 0) {\n        iVar4 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar5);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar4 == 0)) || (iVar3 == iVar5))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 481
    },
    "00447cb5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00447cb5(void)\n\n{\n    int32_t iVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDockBar.0;\n    iVar2 = 0;\n    *(unaff_EBP + -4) = 1;\n    if (0 < extraout_ECX[0x21]) {\n        do {\n            iVar1 = fcn.0044898b();\n            if ((iVar1 != 0) && (*(iVar1 + 0x70) == extraout_ECX)) {\n                *(iVar1 + 0x70) = 0;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < extraout_ECX[0x21]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00432e4f();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00448eb5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 317
    },
    "00447d6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00447d6c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    if (0 < *(param_1 + 0x84)) {\n        do {\n            iVar1 = fcn.0044898b();\n            if (iVar1 != 0) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0x84));\n    }\n    return iVar2;\n}\n",
        "token_count": 146
    },
    "0044891c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0044891c(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x84)) {\n        do {\n            if ((iVar1 != param_3) && (*(*(param_1 + 0x80) + iVar1 * 4) == param_2)) {\n                return iVar1;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0x84));\n    }\n    return -1;\n}\n",
        "token_count": 147
    },
    "0044894a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044894a(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x84)) {\n        do {\n            arg_8h = fcn.0044898b(iVar1);\n            if (arg_8h != 0) {\n                fcn.00451067();\n                fcn.004501e7(arg_8h, unaff_retaddr, 1);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0x84));\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0044b299": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044b299(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint lpMsg;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetCapture;\n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.USER32.dll_SetCapture)(*(*(param_1 + 0x68) + 0x1c));\n        fcn.00436a76(uVar3);\n        uVar3 = (*pcVar1)();\n        iVar2 = fcn.00436a76(uVar3);\n        if (iVar2 == *(param_1 + 0x68)) {\n            do {\n                uVar4 = 0;\n                uVar3 = 0;\n                iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.0046695d(uVar4, var_14h);\n                    break;\n                }\n                if (var_18h == 0x100) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0044a9b8(uVar3, 1, var_14h);\n                    }\n                    if (var_14h == 0x1b) break;\n                }\n                else if (var_18h == 0x101) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0044a9b8(uVar3, 0, var_14h);\n                    }\n                }\n                else if (var_18h == 0x200) {\n                    if (*(param_1 + 0x88) == 0) {\n                        fcn.0044ac44(var_8h, var_4h);\n                    }\n                    else {\n                        fcn.0044a93c(var_8h, var_4h);\n                    }\n                }\n                else {\n                    if (var_18h == 0x202) {\n                        if (*(param_1 + 0x88) == 0) {\n                            fcn.0044adac();\n                        }\n                        else {\n                            fcn.0044a9ec();\n                        }\n                        return 1;\n                    }\n                    if (var_18h == 0x204) break;\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n                }\n                uVar3 = (*pcVar1)();\n                iVar2 = fcn.00436a76(uVar3);\n            } while (iVar2 == *(param_1 + 0x68));\n        }\n        fcn.0044af89();\n    }\n    return 0;\n}\n",
        "token_count": 657
    },
    "0044f2c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0044f2c0(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.00438164();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 77
    },
    "0044f5b9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044f5b9(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.00439ddc();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.004382b6();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.00439fde();\n        if ((((~param_2 & 8) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x25) = *(param_1 + 0x25) | 2;\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 1, 0);\n            *(param_1 + 0x25) = *(param_1 + 0x25) & 0xfd;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.0044f2c0(*(iVar4 + 0x1c), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 464
    },
    "00456f96": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00456f96(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *param_1;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (iVar3 == param_2) {\n        *param_1 = *(param_1[1] + param_2);\n    }\n    else {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar1 = param_1[1];\n        do {\n            iVar2 = *(iVar1 + iVar3);\n            if (iVar2 == param_2) break;\n            iVar3 = iVar2;\n        } while (iVar2 != 0);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        *(iVar1 + iVar3) = *(iVar1 + param_2);\n    }\n    return 1;\n}\n",
        "token_count": 222
    },
    "004571b9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004571b9(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    for (iVar2 = *(in_ECX + 0x14); iVar2 != 0; iVar2 = *(iVar2 + 4)) {\n        if (arg_8h < *(iVar2 + 8)) {\n            puVar3 = *(*(iVar2 + 0xc) + arg_8h * 4);\n            if (puVar3 != NULL) {\n                (***puVar3)(1);\n            }\n            *(*(iVar2 + 0xc) + arg_8h * 4) = 0;\n        }\n    }\n    puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n    *puVar1 = *puVar1 & 0xfffffffe;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    return;\n}\n",
        "token_count": 266
    },
    "00461d8d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461d8d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_1[1]) {\n        do {\n            fcn.00411abc(*(*param_1 + iVar1 * 4));\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < param_1[1]);\n    }\n    fcn.0043a720(*param_1);\n    return;\n}\n",
        "token_count": 112
    },
    "00466aa3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00466aa3(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00456c34();\n    fcn.00457a83(0);\n    for (iVar1 = *(iVar1 + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 0x1c)) {\n        fcn.00466a82();\n    }\n    fcn.00457af3(0);\n    return;\n}\n",
        "token_count": 104
    },
    "0040110e": {
        "rules": [
            "resolve function by hash"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040110e(uchar *arg_8h, uint uID, uint hInstance)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint lpBuffer;\n    \n    lpBuffer = 0;\n    iVar2 = (*_sym.imp.USER32.dll_LoadStringW)(hInstance, uID, &lpBuffer, 0);\n    uVar1 = lpBuffer;\n    if (iVar2 == 0) {\n        *arg_8h = arg_8h._3_1_;\n        fcn.00401294(0);\n    }\n    else {\n        *0x483ba4 = 0x6a4abc5b;\n        *arg_8h = arg_8h._3_1_;\n        fcn.00401294(0);\n        fcn.004010d2(uVar1, iVar2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 201
    },
    "0040504c": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0040504c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (*0x485520 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((((iVar2 != 0) &&\n             (*0x485508 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetSystemMetrics\"),  *0x485508 != 0)) &&\n            (*0x48550c = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x48550c != 0)) &&\n           (((*0x485510 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x485510 != 0 &&\n             (*0x485514 = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x485514 != 0)) &&\n            ((*0x48551c = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x48551c != 0 &&\n             (*0x485518 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x485518 != 0)))))) {\n            *0x485520 = 1;\n            return true;\n        }\n        *0x485508 = 0;\n        *0x48550c = 0;\n        *0x485510 = 0;\n        *0x485514 = 0;\n        *0x485518 = 0;\n        *0x48551c = 0;\n        *0x485520 = 1;\n        bVar3 = false;\n    }\n    else {\n        bVar3 = *0x485518 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 411
    },
    "00439696": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.00439696(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t unaff_ESI;\n    uint unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"COMCTL32.DLL\");\n    uVar5 = uVar2;\n    if (uVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"InitCommonControlsEx\");\n        uVar5 = 0;\n        if (pcVar3 == NULL) {\n            if ((unaff_ESI & 0x3fc0) == unaff_ESI) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = 0x3fc0;\n            }\n        }\n        else {\n            iVar4 = (*pcVar3)(unaff_EDI);\n            if ((iVar4 != 0) && (uVar5 = unaff_ESI,  iVar1 == 0)) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = unaff_ESI | 0x3fc0;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(uVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 332
    },
    "0043c154": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043c154(uint arg_8h, uint arg_ch, uint lpLibFileName)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    puVar1 = *(unaff_EBP + 0x10);\n    uVar4 = *(unaff_EBP + 8);\n    *puVar1 = 0;\n    fcn.0043c1f1(unaff_EBP + -0x10, uVar4);\n    uVar4 = *0x480454;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + 0x10) = uVar4;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = fcn.0043c260(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(unaff_EBP + 0x10));\n        if (iVar2 != 0) {\n            pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"DllGetClassObject\");\n            if (pcVar3 == NULL) {\n                uVar4 = 0x800401f9;\n            }\n            else {\n                uVar4 = (*pcVar3)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n            }\n            goto code_r0x0043c1c8;\n        }\n    }\n    uVar4 = 0x80040154;\ncode_r0x0043c1c8:\n    *(unaff_EBP + -4) = 0;\n    fcn.0043b52e();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043b52e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 543
    },
    "004426b2": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004426b2(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"GetLayout\");\n    if (pcVar2 == NULL) {\n        uVar1 = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n    }\n    else {\n        uVar1 = (*pcVar2)(*(param_1 + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "004426e8": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004426e8(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    uVar3 = 0;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"SetLayout\");\n    if (pcVar2 == NULL) {\n        if (unaff_EDI != 0) {\n            uVar3 = 0xffffffff;\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n        }\n    }\n    else {\n        uVar3 = (*pcVar2)(*(param_1 + 4), unaff_EDI);\n    }\n    return uVar3;\n}\n",
        "token_count": 190
    },
    "00435d31": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.00435d31(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.00435d6a(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 76
    },
    "0043926f": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0043926f(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if (param_1 != 0) {\n        iVar2 = fcn.00456c34();\n        uVar1 = *(iVar2 + 0xc);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, param_1, 0xf0);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        }\n    }\n    uVar3 = fcn.004392bf(uVar3);\n    return uVar3;\n}\n",
        "token_count": 205
    },
    "00411cd8": {
        "rules": [
            "set thread local storage value"
        ],
        "decompiled_code": "\nuint fcn.00411cd8(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint *var_8h;\n    uint var_18h;\n    uint var_10h;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x471148;\n    pcStack16 = fcn.00416cfc;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x481860, var_8h);\n    if (iVar1 == 0) {\n        fcn.00411824(0x10);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *var_8h = uVar2;\n    if (*0x48145c != NULL) {\n        (**0x48145c)();\n    }\n    var_4h = 0;\n    uVar2 = (*var_8h[0x12])(var_8h[0x13]);\n    fcn.00411d74(uVar2);\n    *in_FS_OFFSET = var_10h;\n    return 0;\n}\n",
        "token_count": 298
    },
    "00456930": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00456930(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_THREAD_STATE.0;\n    piVar1 = extraout_ECX[0x33];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x58))();\n        if (extraout_ECX[0x33] != NULL) {\n            (**(*extraout_ECX[0x33] + 4))(1);\n        }\n    }\n    pcVar2 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (extraout_ECX[0xc] != NULL) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(extraout_ECX[0xc]);\n    }\n    if (extraout_ECX[0xb] != NULL) {\n        (*pcVar2)(extraout_ECX[0xb]);\n    }\n    if (extraout_ECX[3] != NULL) {\n        fcn.00411abc(extraout_ECX[3]);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 370
    },
    "0043746d": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043746d(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x38) == NULL) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x1c));\n        uVar2 = fcn.0043b9d5(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x1c), uVar2);\n        fcn.0043b9ad(0xffffffff);\n    }\n    else {\n        (**(**(param_1 + 0x38) + 0x88))(param_2);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00439e99": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00439e99(int32_t param_1, uint param_2, uint param_3)\n\n{\n    if (*(param_1 + 0x38) == NULL) {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x1c), param_2, param_3);\n    }\n    else {\n        (**(**(param_1 + 0x38) + 0x84))(param_2, param_3);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00457cc8": {
        "rules": [
            "query or enumerate registry value",
            "read .ini file"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00457cc8(uint arg_8h, uint lpAppName, uint lpKeyName, uint lpDefault)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpReturnedString;\n    uint var_18h;\n    uint var_14h;\n    uint hKey;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410d00();\n    fcn.00412040();\n    iVar2 = *(extraout_ECX + 0x7c);\n    *(unaff_EBP + -0x14) = 0;\n    if (iVar2 == 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            *(unaff_EBP + 0x14) = 0x4855d8;\n        }\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), unaff_EBP + -0x1018, 0x1000, \n                   *(extraout_ECX + 0x90));\n        iVar2 = unaff_EBP + -0x1018;\n    }\n    else {\n        iVar2 = fcn.00457c16(*(unaff_EBP + 0xc));\n        *(unaff_EBP + -0x10) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + 0xc) = *0x480454;\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n            *(unaff_EBP + -4) = 0;\n            iVar2 = (*pcVar1)(iVar2, *(unaff_EBP + 0x10), 0, unaff_EBP + -0x14, 0, unaff_EBP + -0x18);\n            if (iVar2 == 0) {\n                uVar3 = fcn.0043b95e(*(unaff_EBP + -0x18), unaff_EBP + -0x18);\n                iVar2 = (*pcVar1)(*(unaff_EBP + -0x10), *(unaff_EBP + 0x10), 0, unaff_EBP + -0x14, uVar3);\n                fcn.0043b9ad(0xffffffff);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x10));\n            if (iVar2 == 0) {\n                fcn.0043b2a3(unaff_EBP + 0xc);\n            }\n            else {\n                fcn.0043b59c(*(unaff_EBP + 0x14));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0043b52e();\n            goto code_r0x00457dc7;\n        }\n        iVar2 = *(unaff_EBP + 0x14);\n    }\n    fcn.0043b59c(iVar2);\ncode_r0x00457dc7:\n    uVar3 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 836
    },
    "004574c6": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004574c6(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *param_1;\n    if ((iVar1 != 0) && (*0x4858ec != NULL)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**0x4858ec);\n        if ((iVar2 != 0) && (iVar1 < *(iVar2 + 8))) {\n            return *(*(iVar2 + 0xc) + iVar1 * 4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 137
    }
}