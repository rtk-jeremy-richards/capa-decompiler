{
    "00406024": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406024(uint *param_1)\n\n{\n    *param_1 = 0x4015dc;\n    if (param_1[2] != 0) {\n        fcn.004072ff(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00404993": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404993(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    else if (0xffffffff / arg_8h == 0) {\n        fcn.004035e0(0);\n        fcn.0040639b(&var_ch, 0x417fd8);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00406336(arg_8h);\n    return;\n}\n",
        "token_count": 138
    },
    "00404d28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404d28(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00404847();\n    if ((iVar1 != 0) && (uVar2 = fcn.00404847(),  *(in_ECX + 0x3c) < uVar2)) {\n        uVar3 = fcn.00404847();\n        *(in_ECX + 0x3c) = uVar3;\n    }\n    if (((arg_14h & 1) == 0) || (iVar4 = fcn.00404841(),  iVar1 = *0x401588,  iVar4 == 0)) {\n        iVar1 = *0x401588;\n        if (((arg_14h & 2) != 0) && (iVar4 = fcn.00404847(),  iVar1 = *0x401588,  iVar4 != 0)) {\n            if (arg_10h == 2) {\n                iVar4 = fcn.0040483b();\n                arg_ch = arg_ch + (*(in_ECX + 0x3c) - iVar4);\n            }\n            else if (arg_10h == 1) {\n                iVar4 = fcn.00404847();\n                iVar5 = fcn.0040483b();\n                arg_ch = arg_ch + (iVar4 - iVar5);\n            }\n            else if (arg_10h != 0) {\n                arg_ch = *0x401588;\n            }\n            if ((-1 < arg_ch) && (iVar4 = fcn.0040483b(),  arg_ch <= *(in_ECX + 0x3c) - iVar4)) {\n                iVar1 = fcn.00404847();\n                iVar4 = fcn.0040483b();\n                fcn.00404ac3((arg_ch - iVar1) + iVar4);\n                iVar1 = arg_ch;\n            }\n        }\n        goto code_r0x00404ec0;\n    }\n    if (arg_10h == 2) {\n        iVar4 = fcn.0040483b();\n        arg_ch = arg_ch + (*(in_ECX + 0x3c) - iVar4);\n    }\n    else if (arg_10h == 1) {\n        if ((arg_14h & 2) == 0) {\n            iVar4 = fcn.00404841();\n            iVar5 = fcn.0040483b();\n            arg_ch = arg_ch + (iVar4 - iVar5);\n        }\n        else {\ncode_r0x00404dae:\n            arg_ch = *0x401588;\n        }\n    }\n    else if (arg_10h != 0) goto code_r0x00404dae;\n    if ((-1 < arg_ch) && (iVar4 = fcn.0040483b(),  arg_ch <= *(in_ECX + 0x3c) - iVar4)) {\n        iVar1 = fcn.00404841();\n        iVar4 = fcn.0040483b();\n        fcn.00404a93((arg_ch - iVar1) + iVar4);\n        iVar1 = arg_ch;\n        if (((arg_14h & 2) != 0) && (iVar4 = fcn.00404847(),  iVar4 != 0)) {\n            uVar3 = fcn.00404878();\n            uVar3 = fcn.00404841(uVar3);\n            uVar3 = fcn.00404bac(uVar3);\n            fcn.0040489f(uVar3);\n        }\n    }\ncode_r0x00404ec0:\n    fcn.00404ae3(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 874
    },
    "0040521d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040521d(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    int32_t in_ECX;\n    bool bVar10;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (((*(in_ECX + 0x40) & 8) != 0) && (iVar3 = fcn.00404847(),  iVar3 != 0)) {\n        uVar6 = *(in_ECX + 0x3c);\n        uVar4 = fcn.00404847();\n        if (uVar4 < uVar6) {\n            uVar5 = fcn.00404878();\n            uVar5 = fcn.00404bac(uVar6, uVar5);\n            fcn.0040489f(uVar5);\n        }\n    }\n    uVar6 = fcn.00404a68();\n    var_ch = uVar6;\n    cVar1 = fcn.00404a56(&var_ch, &arg_8h);\n    if (cVar1 != '\\0') {\n        uVar6 = fcn.00404b93(&arg_8h);\n        return uVar6;\n    }\n    iVar3 = fcn.00404847();\n    if (iVar3 != 0) {\n        uVar4 = fcn.00404878();\n        uVar7 = fcn.00404847();\n        if (uVar7 < uVar4) goto code_r0x004053ce;\n    }\n    if ((*(in_ECX + 0x40) & 2) != 0) {\n        return uVar6;\n    }\n    iVar3 = fcn.00404847();\n    if (iVar3 == 0) {\n        var_4h = 0;\n    }\n    else {\n        iVar3 = fcn.00404878();\n        iVar8 = fcn.0040483b();\n        var_4h = iVar3 - iVar8;\n    }\n    uVar6 = var_4h;\n    var_ch = 0x20;\n    if (0x1f < var_4h >> 1) {\n        var_ch = var_4h >> 1;\n    }\n    iVar3 = 0;\n    var_8h = fcn.0040483b();\n    uVar4 = var_ch;\n    if (var_ch != 0) {\n        do {\n            if (var_4h <= 0x7fffffff - uVar4) break;\n            uVar4 = uVar4 >> 1;\n        } while (uVar4 != 0);\n        if (uVar4 != 0) {\n            uVar6 = uVar4 + var_4h;\n            iVar3 = fcn.0040501f(uVar6);\n        }\n    }\n    bVar10 = var_4h == 0;\n    if (!bVar10) {\n        fcn.004050ad(iVar3, uVar6, var_8h, var_4h);\n        bVar10 = var_4h == 0;\n    }\n    if (bVar10) {\n        *(in_ECX + 0x3c) = iVar3;\n        fcn.00404883(iVar3, iVar3 + uVar6);\n    }\n    else {\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) + (iVar3 - var_8h);\n        var_ch = iVar3 - var_8h;\n        iVar8 = fcn.00404847(iVar3 + uVar6);\n        iVar8 = fcn.00404bac(iVar8 + var_ch);\n        fcn.0040489f(iVar8 + var_ch);\n        if ((*(in_ECX + 0x40) & 4) == 0) {\n            iVar8 = fcn.00404847();\n            fcn.00404841(iVar8 + 1);\n        }\n    }\n    fcn.00404858(iVar3);\n    if ((*(in_ECX + 0x40) & 1) != 0) {\n        fcn.0040482e(var_8h, var_4h);\n    }\n    *(in_ECX + 0x40) = *(in_ECX + 0x40) | 1;\ncode_r0x004053ce:\n    puVar9 = fcn.00404bb2();\n    uVar2 = fcn.00404a47(&arg_8h);\n    *puVar9 = uVar2;\n    return arg_8h;\n}\n",
        "token_count": 1072
    },
    "004053ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004053ed(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    uint in_stack_fffffff0;\n    \n    if ((param_2 != '\\0') && (7 < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            in_stack_fffffff0 = arg_10h;\n            fcn.004050d1(param_1 + 4, 8, arg_10h, param_3);\n        }\n        fcn.0040482e(arg_10h, *(param_1 + 0x18) + 1);\n    }\n    *(param_1 + 0x18) = 7;\n    fcn.00405085(in_stack_fffffff0);\n    return;\n}\n",
        "token_count": 199
    },
    "004064dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004064dd(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x406588;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.004065b4;\n        uStack36 = *0x42a8f8 ^ &fcn.004064dd::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004064dd::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00409de2();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.004064dd::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 720
    },
    "0040738d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040738d(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x42a8f8) {\n        return;\n    }\n    *0x445b38 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x445b3c = &arg_8h;\n    *0x445a78 = 0x10001;\n    *0x445a20 = 0xc0000409;\n    *0x445a24 = 1;\n    var_328h = *0x42a8f8;\n    var_324h = *0x42a8fc;\n    *0x445a2c = unaff_retaddr;\n    *0x445b04 = in_GS;\n    *0x445b08 = in_FS;\n    *0x445b0c = in_ES;\n    *0x445b10 = in_DS;\n    *0x445b14 = unaff_EDI;\n    *0x445b18 = unaff_ESI;\n    *0x445b1c = unaff_EBX;\n    *0x445b20 = in_EDX;\n    *0x445b24 = in_ECX;\n    *0x445b28 = in_EAX;\n    *0x445b2c = unaff_EBP;\n    *0x445b30 = unaff_retaddr;\n    *0x445b34 = in_CS;\n    *0x445b40 = in_SS;\n    *0x445a70 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040fc43(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x401f84);\n    if (*0x445a70 == 0) {\n        fcn.0040fc43(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 836
    },
    "00409020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409020(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409de2();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00409de2();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004092e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004092e8(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0040671b(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00409de2();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00409de2();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.004066f4(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00409080(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0040b6b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040b7a6: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040b7ab)\n// WARNING: Removing unreachable block (ram,0x0040b7d9)\n// WARNING: Removing unreachable block (ram,0x0040b7b1)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b6b3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a6b0(0x418660, 0x18);\n    fcn.0040aa18(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4454d0 != 1) {\n        *0x4454cc = 1;\n        *0x4454c8 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00409b96(*0x445fc8);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00409b96(*0x445fc4);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00409b8d();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00409b96(*piVar2);\n                        iVar3 = fcn.00409b8d();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00409b96(*0x445fc8);\n                        piVar1 = fcn.00409b96(*0x445fc4);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040b5ed(0x401200);\n        }\n        fcn.0040b5ed(0x401208);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040a93e(8);\n    }\n    return;\n}\n",
        "token_count": 813
    },
    "0040ea3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ea3b(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040a93e(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00410972": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410972(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42a8f8 ^ &stack0xfffffffc;\n    fcn.00408216(arg_10h);\n    var_14h = fcn.00413c6f(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004131e7(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004109cb:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00410a0b;\n        }\n        if (iVar1 != 2) {\ncode_r0x004109fd:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00410a0b;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004109fd;\n        goto code_r0x004109cb;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00410a0b:\n    fcn.0040738d(unaff_EBX);\n    return;\n}\n",
        "token_count": 503
    },
    "00410a1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410a1a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42a8f8 ^ &stack0xfffffffc;\n    fcn.00408216(arg_10h);\n    var_14h = fcn.00413c6f(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0041372b(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00410a73:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00410ab3;\n        }\n        if (iVar1 != 2) {\ncode_r0x00410aa5:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00410ab3;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00410aa5;\n        goto code_r0x00410a73;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00410ab3:\n    fcn.0040738d(unaff_EBX);\n    return;\n}\n",
        "token_count": 506
    },
    "00411cca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411cca(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00409b8d();\n    var_4h = 0;\n    if (*0x445ddc == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4030bc);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4030b0);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x445ddc = fcn.00409b1b(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x4030a0);\n        *0x445de0 = fcn.00409b1b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x40308c);\n        *0x445de4 = fcn.00409b1b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x403070);\n        *0x445dec = fcn.00409b1b(uVar3);\n        if (*0x445dec != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x403058);\n            *0x445de8 = fcn.00409b1b(uVar3);\n        }\n    }\n    if ((*0x445de8 != iVar1) && (*0x445dec != iVar1)) {\n        pcVar4 = fcn.00409b96(*0x445de8);\n        pcVar5 = fcn.00409b96(*0x445dec);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00411e0c;\n        }\n    }\n    if ((((*0x445de0 != iVar1) && (pcVar4 = fcn.00409b96(*0x445de0),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x445de4 != iVar1 && (pcVar4 = fcn.00409b96(*0x445de4),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00411e0c:\n    pcVar4 = fcn.00409b96(*0x445ddc);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 832
    },
    "004131e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004131e7(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004136e8;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0041331c;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00413323;\ncode_r0x0041331c:\n                        do {\n                            var_4h = 1;\ncode_r0x00413323:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00413331;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00413331:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42b6e4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42b6e4 < iVar12) {\n                if (iVar12 < *0x42b6e0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x42b6e0;\n                    uVar5 = 1;\n                }\n                goto code_r0x004136e8;\n            }\n            var_10h = *0x42b6e4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004134d4;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004134d4:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004136e8:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3670
    },
    "0041372b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041372b(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00413c2c;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x42b700 - 1;\n        iVar4 = *0x42b700 + (*0x42b700 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x42b700 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00413860;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00413867;\ncode_r0x00413860:\n                        do {\n                            var_4h = 1;\ncode_r0x00413867:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00413875;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00413875:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42b6fc - *0x42b700) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42b6fc < iVar12) {\n                if (iVar12 < *0x42b6f8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x42b70c;\n                    iVar4 = *0x42b704 + (*0x42b704 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42b704 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x42b704 + (*0x42b704 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42b704 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x42b70c + *0x42b6f8;\n                    uVar5 = 1;\n                }\n                goto code_r0x00413c2c;\n            }\n            var_10h = *0x42b6fc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x42b700 - 1;\n            iVar12 = *0x42b700 + (*0x42b700 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x42b700 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00413a18;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00413a18:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x42b704 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00413c2c:\n    var_20h = iVar12 << (0x1fU - *0x42b704 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x42b708 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x42b708 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3644
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004048c2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048c2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((*(param_1 + 0x40) & 1) != 0) {\n        iVar1 = fcn.00404847();\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040484d();\n        }\n        else {\n            iVar1 = fcn.00404878();\n        }\n        iVar2 = fcn.0040483b();\n        uVar3 = fcn.0040483b(iVar1 - iVar2);\n        fcn.0040482e(uVar3);\n    }\n    fcn.00404858(0, 0, 0);\n    fcn.00404883(0, 0);\n    *(param_1 + 0x40) = *(param_1 + 0x40) & 0xfffffffe;\n    *(param_1 + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 235
    },
    "0040491e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0040491e(uint8_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((param_1 & 1) == 0) {\n        uVar1 = 4;\n    }\n    if ((param_1 & 2) == 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((param_1 & 8) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((param_1 & 4) != 0) {\n        uVar1 = uVar1 | 0x10;\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "00404ed3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00404ed3(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00404bc2();\n    iVar2 = fcn.00404847();\n    if ((iVar2 != 0) && (uVar3 = fcn.00404847(),  *(in_ECX + 0x3c) < uVar3)) {\n        uVar4 = fcn.00404847();\n        *(in_ECX + 0x3c) = uVar4;\n    }\n    iVar2 = iVar1;\n    if (iVar1 != *0x401588) {\n        iVar2 = *0x401588;\n        if (((arg_24h & 1) == 0) || (iVar5 = fcn.00404841(),  iVar5 == 0)) {\n            if (((arg_24h & 2) != 0) &&\n               (((iVar5 = fcn.00404847(),  iVar5 != 0 && (-1 < iVar1)) &&\n                (iVar5 = fcn.0040483b(),  iVar1 <= *(in_ECX + 0x3c) - iVar5)))) {\n                iVar2 = fcn.00404847();\n                iVar5 = fcn.0040483b();\n                fcn.00404ac3((iVar1 - iVar2) + iVar5);\n                iVar2 = iVar1;\n            }\n        }\n        else if ((-1 < iVar1) && (iVar5 = fcn.0040483b(),  iVar1 <= *(in_ECX + 0x3c) - iVar5)) {\n            iVar2 = fcn.00404841();\n            iVar5 = fcn.0040483b();\n            fcn.00404a93((iVar1 - iVar2) + iVar5);\n            iVar2 = iVar1;\n            if (((arg_24h & 2) != 0) && (iVar5 = fcn.00404847(),  iVar5 != 0)) {\n                uVar4 = fcn.00404878();\n                uVar4 = fcn.00404841(uVar4);\n                uVar4 = fcn.00404bac(uVar4);\n                fcn.0040489f(uVar4);\n            }\n        }\n    }\n    fcn.00404ae3(iVar2);\n    return arg_8h;\n}\n",
        "token_count": 600
    },
    "004055ee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004055ee(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401574;\n    if ((arg_8h & 1) != 0) {\n        fcn.004060b9();\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00405d78": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d78(uint32_t arg_8h)\n\n{\n    fcn.00405d59();\n    if ((arg_8h & 1) != 0) {\n        fcn.004060b9();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00405dc1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405dc1(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x40159c;\n    fcn.00405d59();\n    if ((arg_8h & 1) != 0) {\n        fcn.004060b9();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00405e10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e10(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4015a8;\n    fcn.00405d59();\n    if ((arg_8h & 1) != 0) {\n        fcn.004060b9();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00406047": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406047(uint32_t arg_8h)\n\n{\n    fcn.00406024();\n    if ((arg_8h & 1) != 0) {\n        fcn.004060b9();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00406078": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406078(uint32_t arg_8h)\n\n{\n    fcn.00406068();\n    if ((arg_8h & 1) != 0) {\n        fcn.004060b9();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00408e8b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e8b(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401820;\n    fcn.00406024();\n    if ((arg_8h & 1) != 0) {\n        fcn.004060b9();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00411886": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411886(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a6b0(0x418780, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00407e47();\n        *puVar2 = 0;\n        puVar2 = fcn.00407e34();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x445eb4)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x445ec0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0041108c(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00407e34();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00407e47();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00411153(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00411958(0x418780);\n                goto code_r0x00411952;\n            }\n        }\n        puVar2 = fcn.00407e47();\n        *puVar2 = 0;\n        puVar2 = fcn.00407e34();\n        *puVar2 = 9;\n        fcn.00407dcc(0, 0, 0, 0, 0);\n    }\ncode_r0x00411952:\n    fcn.0040a6f5();\n    return;\n}\n",
        "token_count": 628
    },
    "00403737": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00403737(void)\n\n{\n    *0x42bb70 = 100;\n    *0x42bb6b = 0x6d;\n    *0x42bb71 = 0x6c;\n    *0x42bb6f = 0x2e;\n    *0x42bb72 = 0x6c;\n    *0x42bb6e = 0x32;\n    *0x42bb6a = 0x69;\n    *0x42bb68 = 0x6d;\n    *0x42bb69 = 0x73;\n    *0x42bb6d = 0x33;\n    *0x42bb73 = 0;\n    *0x42bb6c = 0x67;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x42bb68);\n    return;\n}\n",
        "token_count": 197
    },
    "00404057": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00404057(void)\n\n{\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0x42bb68;\n    *0x42bb6e = 0x33;\n    *0x42bb6f = 0x32;\n    *0x42bb73 = 0x6c;\n    *0x42bb72 = 0x6c;\n    *0x42bb6b = 0x6e;\n    *0x42bb6d = 0x6c;\n    *0x42bb68 = 0x6b;\n    *0x42bb6c = 0x65;\n    *0x42bb6a = 0x72;\n    *0x42bb70 = 0x2e;\n    *0x42bb71 = 100;\n    *0x42bb69 = 0x65;\n    *0x42bb74 = 0;\n    uStack16 = 0x4040c0;\n    *0x444db0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    uStack16 = 0x42bb68;\n    *0x42bb73 = 0x65;\n    *0x42bb69 = 0x69;\n    *0x42bb6c = 0x75;\n    *0x42bb6e = 0x6c;\n    *0x42bb6d = 0x61;\n    *0x42bb71 = 0x6f;\n    *0x42bb75 = 0x74;\n    *0x42bb68 = 0x56;\n    *0x42bb74 = 99;\n    *0x42bb6f = 0x50;\n    *0x42bb76 = 0;\n    *0x42bb6b = 0x74;\n    *0x42bb72 = 0x74;\n    *0x42bb6a = 0x72;\n    *0x42bb70 = 0x72;\n    *0x42bb64 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x444db0);\n    (**0x42bb64)(*0x444960, *0x444db4, 0x40, &stack0xfffffff0);\n    return;\n}\n",
        "token_count": 518
    },
    "00403e7f": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e7f(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t extraout_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    puVar4 = arg_8h;\n    iVar1 = *arg_ch;\n    arg_ch_00 = arg_ch[1];\n    uVar5 = arg_8h[1];\n    iVar2 = arg_ch[2];\n    iVar3 = arg_ch[3];\n    uVar6 = *arg_8h;\n    var_4h = -0x3910c8e0;\n    var_ch = 0x20;\n    do {\n        var_8h = uVar6 * 0x10 + iVar2;\n        arg_8h = (uVar6 >> 5) + iVar3;\n        *0x444964 = 0xffcf03fc;\n        fcn.004037d3(&var_8h, var_4h + uVar6);\n        *0x444964 = 0;\n        *0x44496c = 0xffffffff;\n        uVar5 = uVar5 - (arg_8h ^ var_8h);\n        arg_8h = uVar5 >> 5;\n        *0x444968 = 0xff6b3619;\n        fcn.00403e62(&arg_8h, arg_ch_00);\n        uVar6 = uVar6 - (uVar5 * 0x10 + iVar1 ^ arg_8h ^ extraout_EDX);\n        arg_ch = 0x9e3779b9;\n        var_4h = var_4h + 0x61c88647;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    *puVar4 = uVar6;\n    puVar4[1] = uVar5;\n    return;\n}\n",
        "token_count": 525
    },
    "00403f5d": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f5d(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint var_400h;\n    \n    for (arg_ch = arg_ch >> 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n        if (*0x444db4 == 0xb7d) {\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)(0, &var_400h, 0);\n        }\n        fcn.00403e7f(arg_8h, arg_10h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0040543b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040543b(int32_t param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x40) = param_4;\n    if ((param_3 != 0) && ((param_4 & 6) != 6)) {\n        arg_8h = fcn.0040501f(param_3);\n        fcn.004050ad(arg_8h, param_3, unaff_retaddr, param_3);\n        param_3 = param_3 + arg_8h;\n        *(param_1 + 0x3c) = param_3;\n        if ((*(param_1 + 0x40) & 4) == 0) {\n            fcn.00404858(arg_8h, arg_8h, param_3);\n        }\n        if ((*(param_1 + 0x40) & 2) == 0) {\n            iVar1 = param_3;\n            if ((*(param_1 + 0x40) & 0x10) == 0) {\n                iVar1 = arg_8h;\n            }\n            fcn.0040489f(arg_8h, iVar1, param_3);\n            iVar1 = fcn.00404841();\n            if (iVar1 == 0) {\n                fcn.00404858(arg_8h, 0, arg_8h);\n            }\n        }\n        *(param_1 + 0x40) = *(param_1 + 0x40) | 1;\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00406b5a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406b5a(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a6b0(0x418320, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.00407e34();\n        *puVar3 = 0x16;\n        fcn.00407dcc(0, 0, 0, 0, 0);\n        goto code_r0x00406c55;\n    }\n    fcn.0040a5d2(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.0040a305(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x42ad60;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x445ec0);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x42ad60;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x445ec0);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x00406c20;\n        }\n        puVar3 = fcn.00407e34();\n        *puVar3 = 0x16;\n        fcn.00407dcc(0, 0, 0, 0, 0);\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00406c20:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.0040bb2b(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00406c5e();\ncode_r0x00406c55:\n    fcn.0040a6f5();\n    return;\n}\n",
        "token_count": 837
    },
    "004037d3": {
        "rules": [
            "contain obfuscated stackstrings",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004037d3(uint32_t *param_1, uint32_t param_2)\n\n{\n    *param_1 = *param_1 ^ param_2;\n    return;\n}\n",
        "token_count": 44
    },
    "00403e62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e62(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    *arg_8h = *arg_8h + arg_ch;\n    return;\n}\n",
        "token_count": 47
    },
    "00404049": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404049(void)\n\n{\n    *0x444960 = *0x444960 + 0x389c;\n    return;\n}\n",
        "token_count": 34
    },
    "00404167": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpLastAccessTime\n// WARNING: Variable defined which should be unmapped: lpLastWriteTime\n// WARNING: Variable defined which should be unmapped: lpFilePart\n\nuint fcn.00404167(void)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    uint lpBuffer;\n    uint lpszVolumeName;\n    uint lpString1;\n    uint lpVersionInformation;\n    uint lpFindFileData;\n    uint uStackY136;\n    uint uStackY132;\n    uint uStackY128;\n    uint uStackY124;\n    uint uStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uint uStackY108;\n    uint uStackY104;\n    uint uStackY100;\n    uint *puStackY96;\n    uint *puStackY92;\n    uint *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint uStackY68;\n    uint pActCtx;\n    uint uStackY60;\n    uint *puStackY56;\n    uint uStackY52;\n    uint uStackY48;\n    uint *puStackY44;\n    uint *puStackY40;\n    uint *puStackY36;\n    uint *lpCreationTime;\n    uint *puStackY28;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    uint lpFilePart;\n    \n    lpFilePart = 0x404174;\n    fcn.004062f0();\n    iVar1 = 0;\n    do {\n        if (iVar1 == 0x13e6) {\n            *0x444db4 = *0x444db4 + 0x38d6;\n        }\n        if (*0x444db4 == 0xbd8) {\n            lpLastWriteTime = 0x4012a4;\n            (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x31a652);\n    lpLastWriteTime = 0x4041b2;\n    fcn.00404153();\n    arg_8h = 0;\n    if (*0x444db4 != 0) {\n        do {\n            fcn.00403fa9(arg_8h);\n            if (*0x444db4 == 0x29) {\n                (*_sym.imp.KERNEL32.dll_SetFileApisToOEM)();\n                lpLastAccessTime = 0x4041dc;\n                (*_sym.imp.KERNEL32.dll_InterlockedIncrement)();\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < *0x444db4);\n    }\n    iVar1 = 0;\n    while( true ) {\n        if (*0x444db4 == 0x481) {\n            lpLastWriteTime = 0;\n            lpLastAccessTime = 0x4012cc;\n            puStackY28 = 0x4012d8;\n            lpCreationTime = NULL;\n            puStackY36 = 0x404202;\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)();\n            puStackY36 = NULL;\n            puStackY40 = 0x404209;\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n            puStackY40 = NULL;\n            puStackY44 = NULL;\n            uStackY48 = 0x404211;\n            (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n        }\n        if (*0x444db4 == 0x721) break;\n        iVar1 = iVar1 + 1;\n        if (0x962be1 < iVar1) {\n            if (*0x444db4 == 0x19c) {\n                lpLastWriteTime = 0;\n                lpLastAccessTime = 0;\n                puStackY28 = 0x404236;\n                (*_sym.imp.KERNEL32.dll_CopyFileW)();\n                puStackY28 = NULL;\n                lpCreationTime = NULL;\n                puStackY36 = NULL;\n                puStackY40 = NULL;\n                puStackY44 = NULL;\n                uStackY48 = 0;\n                uStackY52 = 0x404242;\n                (*_sym.imp.KERNEL32.dll_UpdateResourceW)();\n                uStackY52 = 0;\n                puStackY56 = 0x404249;\n                (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n                puStackY56 = &fcn.00404167::pActCtx;\n                uStackY60 = 0x404253;\n                (*_sym.imp.KERNEL32.dll_CreateActCtxW)();\ncode_r0x0040429c:\n                uStackY60 = 0;\n                pActCtx = 0x4042a3;\n                (*_sym.imp.KERNEL32.dll_ExitThread)();\n            }\n            iVar1 = 0;\n            do {\n                if (iVar1 == 0xab9d) {\n                    lpLastWriteTime = 0x42bb68;\n                    *0x444db0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n                }\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < 0x2594b);\n            *0x42bb68 = 0;\n            iVar1 = 0;\n            do {\n                if (iVar1 == 0x148) {\n                    lpLastWriteTime = 0x4042db;\n                    fcn.00404057();\n                }\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < 0x427fa7);\n            lpLastWriteTime = 0x41a010;\n            lpLastAccessTime = *0x444960;\n            puStackY28 = 0x4042fa;\n            fcn.00403f5d(*0x444960, *0x444db4, 0x41a010);\n            iVar1 = 0;\n            do {\n                puStackY28 = NULL;\n                lpCreationTime = 0x404303;\n                (*_sym.imp.KERNEL32.dll_LocalFlags)();\n                if (iVar1 == 0x2f7e4) {\n                    puStackY28 = 0x404310;\n                    fcn.00404049();\n                }\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < 0x48122);\n            puStackY28 = 0x40431e;\n            fcn.00403737();\n            if (*0x444db4 == 0x58c) {\n                puStackY28 = NULL;\n                lpCreationTime = NULL;\n                puStackY36 = 0x404332;\n                (*_sym.imp.KERNEL32.dll_LocalShrink)();\n                puStackY36 = NULL;\n                puStackY40 = &fcn.00404167::lpszVolumeName;\n                puStackY44 = 0x404340;\n                (*_sym.imp.KERNEL32.dll_FindFirstVolumeW)();\n                puStackY44 = &fcn.00404167::lpFindFileData;\n                uStackY48 = 0;\n                uStackY52 = 0x40434e;\n                (*_sym.imp.KERNEL32.dll_FindNextFileA)();\n                uStackY52 = 0x404354;\n                (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n                uStackY52 = 0;\n                puStackY56 = NULL;\n                uStackY60 = 0;\n                pActCtx = 0;\n                uStackY68 = 0x401360;\n                uStackY72 = 0x4013c0;\n                uStackY76 = 0x404368;\n                (*_sym.imp.KERNEL32.dll_CopyFileExW)();\n                uStackY76 = 0;\n                uStackY80 = 0;\n                uStackY84 = 0;\n                puStackY88 = &fcn.00404167::lpVersionInformation;\n                puStackY92 = 0x404378;\n                (*_sym.imp.KERNEL32.dll_VerifyVersionInfoW)();\n                puStackY92 = &fcn.00404167::lpFilePart;\n                puStackY96 = &fcn.00404167::lpBuffer;\n                uStackY100 = 0;\n                uStackY104 = 0;\n                uStackY108 = 0;\n                uStackY112 = 0;\n                uStackY116 = 0x40438d;\n                (*_sym.imp.KERNEL32.dll_SearchPathW)();\n                uStackY116 = 0;\n                uStackY120 = 0;\n                uStackY124 = 0;\n                uStackY128 = 0x401424;\n                uStackY132 = 0x401448;\n                uStackY136 = 0x4043a0;\n                (*_sym.imp.KERNEL32.dll_MoveFileWithProgressW)();\n            }\n            puStackY28 = 0x4043a5;\n            fcn.00404042();\n            return 0;\n        }\n    }\n    lpLastWriteTime = 0x4012e8;\n    lpLastAccessTime = 0x404267;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)();\n    lpLastAccessTime = 0;\n    puStackY28 = 0x40426e;\n    (*_sym.imp.KERNEL32.dll_RemoveVectoredExceptionHandler)();\n    puStackY28 = &fcn.00404167::lpFilePart;\n    lpCreationTime = 0x404278;\n    (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n    lpCreationTime = &fcn.00404167::lpLastWriteTime;\n    puStackY36 = &fcn.00404167::lpLastAccessTime;\n    puStackY40 = &fcn.00404167::lpCreationTime;\n    puStackY44 = NULL;\n    uStackY48 = 0x40428b;\n    (*_sym.imp.KERNEL32.dll_SetFileTime)();\n    uStackY48 = 0x401308;\n    uStackY52 = 0x401328;\n    puStackY56 = NULL;\n    uStackY60 = 0x40429c;\n    (*_sym.imp.KERNEL32.dll_FindResourceA)();\n    goto code_r0x0040429c;\n}\n",
        "token_count": 2266
    },
    "004049f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004049f1(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.0040366a(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 58
    },
    "00404a0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404a0c(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.0040364e(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 59
    },
    "004050f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004050f5(uchar *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint arg_10h_00;\n    int32_t *in_ECX;\n    uchar *arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    arg_8h_00 = arg_8h;\n    iVar4 = arg_10h;\n    if (0 < arg_10h) {\n        do {\n            iVar3 = fcn.00404ab4();\n            if (iVar3 < 1) {\n                arg_10h = (**(*in_ECX + 0x14))();\n                arg_8h = fcn.00404a68();\n                cVar1 = fcn.00404a56(&arg_8h, &arg_10h);\n                if (cVar1 != '\\0') {\n                    return var_4h;\n                }\n                uVar2 = fcn.00404a47(&arg_10h);\n                *arg_8h_00 = uVar2;\n                arg_8h_00 = arg_8h_00 + 1;\n                var_4h = var_4h + 1;\n                iVar5 = -1;\n            }\n            else {\n                if (iVar4 < iVar3) {\n                    iVar3 = iVar4;\n                }\n                iVar5 = iVar3;\n                arg_10h_00 = fcn.00404841();\n                fcn.004050ad(arg_8h_00, arg_ch, arg_10h_00, iVar5);\n                var_4h = var_4h + iVar3;\n                arg_8h_00 = arg_8h_00 + iVar3;\n                iVar5 = -iVar3;\n                fcn.00404a93(iVar3);\n            }\n            iVar4 = iVar4 + iVar5;\n        } while (0 < iVar4);\n    }\n    return var_4h;\n}\n",
        "token_count": 481
    },
    "0040518d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040518d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t arg_10h;\n    int32_t arg_14h;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar4 = arg_ch;\n    var_8h = in_ECX;\n    if (0 < arg_ch) {\n        do {\n            iVar2 = fcn.00404ad4();\n            if (iVar2 < 1) {\n                iVar2 = *in_ECX;\n                uVar3 = fcn.00404a4e(arg_8h);\n                arg_ch = (**(iVar2 + 4))(uVar3);\n                var_8h = fcn.00404a68();\n                cVar1 = fcn.00404a56(&var_8h, &arg_ch);\n                if (cVar1 != '\\0') {\n                    return var_4h;\n                }\n                arg_8h = arg_8h + 1;\n                var_4h = var_4h + 1;\n                iVar2 = -1;\n            }\n            else {\n                iVar5 = iVar2;\n                if (iVar4 < iVar2) {\n                    iVar5 = iVar4;\n                }\n                arg_10h = arg_8h;\n                arg_14h = iVar5;\n                uVar3 = fcn.00404847();\n                fcn.004050ad(uVar3, iVar2, arg_10h, arg_14h);\n                arg_8h = arg_8h + iVar5;\n                var_4h = var_4h + iVar5;\n                iVar2 = -iVar5;\n                fcn.00404ac3(iVar5);\n            }\n            iVar4 = iVar4 + iVar2;\n        } while (0 < iVar4);\n    }\n    return var_4h;\n}\n",
        "token_count": 468
    },
    "004055c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004055c9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040718b(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 68
    },
    "00405746": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405746(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004055c9(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    },
    "004057a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057a1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00405746(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "00405ed2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405ed2(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040739c(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.00405fc7(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x401590;\n    fcn.00405ea7(arg_8h_00 + 0xc);\n    fcn.00407405();\n    return;\n}\n",
        "token_count": 196
    },
    "00406b47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406b47(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a4fb();\n    fcn.0040a681(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "00406ca1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406ca1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a6b0(0x418340, 0xc);\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar1 = fcn.00407e34();\n        *puVar1 = 0x16;\n        fcn.00407dcc(0, 0, 0, 0, 0);\n    }\n    else {\n        uVar2 = fcn.0040a4fb();\n        fcn.0040a613(0, uVar2);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0040a4fb(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        uVar2 = (**(unaff_EBP + 8))(uVar2);\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00406d18();\n    }\n    fcn.0040a6f5();\n    return;\n}\n",
        "token_count": 342
    },
    "00406d27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406d27(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00406ca1(fcn.0040c10f, arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 55
    },
    "00406d44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00406d44(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0040a6b0(0x418360, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00407e34();\n        *puVar1 = 0x16;\n        fcn.00407dcc(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.0040a4fb();\n        fcn.0040a613(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040a4fb();\n        arg_8h_00 = fcn.0040ba5b(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0040a4fb();\n        uVar4 = fcn.0040d172(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0040a4fb();\n        fcn.0040baf7(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00406de0();\n    }\n    fcn.0040a6f5();\n    return;\n}\n",
        "token_count": 471
    },
    "00406de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406de0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a4fb();\n    fcn.0040a681(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "0040b7df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b7df(uint arg_8h)\n\n{\n    fcn.0040b6b3(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "0040e23b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040e24f)\n// WARNING: Removing unreachable block (ram,0x0040e255)\n// WARNING: Removing unreachable block (ram,0x0040e257)\n\nvoid fcn.0040e23b(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "00404947": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404947(int32_t param_1)\n\n{\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x14) = param_1 + 0xc;\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x24) = param_1 + 0x1c;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    *(param_1 + 0x34) = param_1 + 0x2c;\n    fcn.00404883(0, 0);\n    fcn.00404858(0, 0, 0);\n    return;\n}\n",
        "token_count": 176
    },
    "00415cdf": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00415cdf(void)\n\n{\n    *0x42bb40 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x403184, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "004077a6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004077a6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a6b0(0x418408, 0xc);\n    fcn.0040aa18(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x445320;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x44531c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004077ea;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004072ff(arg_8h_00);\ncode_r0x004077ea:\n        fcn.004072ff(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040780d();\n    fcn.0040a6f5();\n    return;\n}\n",
        "token_count": 395
    },
    "00403fa9": {
        "rules": [
            "get common file path",
            "print debug messages",
            "create directory",
            "delete directory"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfEventsRead\n\nvoid __cdecl fcn.00403fa9(int32_t arg_8h)\n\n{\n    uint var_1818h;\n    uint var_1018h;\n    uint lpBuffer;\n    uint uStack84;\n    uint uStack80;\n    uint *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint uStack32;\n    uint *var_18h;\n    uint *puStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint lpNumberOfEventsRead;\n    \n    lpNumberOfEventsRead = 0x403fb6;\n    fcn.004062f0();\n    if (*0x444db4 == 0x37) {\n        uStack12 = 0x401240;\n        uStack16 = 0x403fcb;\n        (*_sym.imp.KERNEL32.dll_OutputDebugStringW)();\n        uStack16 = 0x401284;\n        uStack20 = 0x403fd6;\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        uStack20 = 0;\n        puStack24 = &fcn.00403fa9::lpBuffer;\n        var_18h = 0x403fe6;\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n        var_18h = &fcn.00403fa9::var_1018h;\n        uStack32 = 0;\n        puStack36 = 0x403ff4;\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)();\n        puStack36 = &fcn.00403fa9::lpNumberOfEventsRead;\n        uStack40 = 0;\n        puStack44 = &fcn.00403fa9::var_18h;\n        uStack48 = 0;\n        uStack52 = 0x404004;\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputA)();\n        uStack52 = 0;\n        uStack56 = 0;\n        uStack60 = 0;\n        uStack64 = 0x40400d;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryExW)();\n        uStack64 = 0;\n        uStack68 = 0x404014;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        uStack68 = 0;\n        uStack72 = 0;\n        puStack76 = &fcn.00403fa9::var_1818h;\n        uStack80 = 0;\n        uStack84 = 0x404024;\n        (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n    }\n    *(*0x444960 + arg_8h) = *(*0x4451c8 + 0x38d6 + arg_8h);\n    return;\n}\n",
        "token_count": 667
    },
    "00406c66": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406c66(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.00407e5a(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00406c96": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.00406c96(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.00407e5a(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 119
    }
}