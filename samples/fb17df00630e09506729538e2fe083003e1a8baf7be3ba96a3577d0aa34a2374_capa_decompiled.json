{
    "004010c0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010c0(int32_t arg_8h, uint wParam, uint32_t lParam)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t unaff_EDI;\n    \n    if ((arg_8h != *0x497518) && (*0x497518 != 0)) goto code_r0x004010ec;\n    if ((0x110 < unaff_EDI) || (unaff_EDI < 0x12)) {\n        if (unaff_EDI == 0x113) {\n            fcn.00401210(0x4a8710);\n            return 0;\n        }\n        if (unaff_EDI < 0x11) {\n            if (unaff_EDI == 0x10) {\n                *0x4974e6 = 1;\n                fcn.0040f320();\n                return 0;\n            }\n    // switch table (7 cases) at 0x4011ec\n            switch(unaff_EDI) {\n            case 1:\n                (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0x2ee, 0);\n                *0x4a95e8 = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"TaskbarCreated\");\n                if (*0x4a8710 == 0) {\n                    *0x4a8710 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    return 0;\n                }\n                break;\n            case 2:\n                (*_sym.imp.USER32.dll_KillTimer)(arg_8h, 1);\n                fcn.00401000();\n                (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n                return 0;\n            default:\n                goto code_r0x004010e0;\n            case 5:\n                (*_sym.imp.USER32.dll_MoveWindow)(*0x497514, 0, 0, lParam & 0xffff, lParam >> 0x10, 1);\n                break;\n            case 7:\n                (*_sym.imp.USER32.dll_SetFocus)(*0x497514);\n            }\n            return 0;\n        }\n        if (unaff_EDI < 0x313) {\n            if (unaff_EDI == 0x312) {\n                if (*0x4974ec == '\\0') {\n                    fcn.00436df0(&wParam);\n                }\n                goto code_r0x004010ec;\n            }\n            if (unaff_EDI == 0x11) {\n                *0x4974f0 = 4 - ((lParam & 0x80000000) != 0);\n                *0x4974e6 = 0;\n                fcn.0040f320();\n                fcn.00401b70();\n                goto code_r0x004010ec;\n            }\n            if (unaff_EDI == 0x111) {\n                cVar1 = fcn.0045f768(0x4a8710, wParam, lParam);\n                if (cVar1 == '\\x01') {\n                    return 0;\n                }\n                goto code_r0x004010ec;\n            }\n        }\n        else if (unaff_EDI == 0x401) {\n            fcn.004683fd(0x4a8710, arg_8h, lParam);\n            return 0;\n        }\n    }\ncode_r0x004010e0:\n    if ((unaff_EDI == *0x4a95e8) && (*0x4974ea == '\\x01')) {\n        fcn.00401000();\n        fcn.0040e430();\n    }\ncode_r0x004010ec:\n    uVar2 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h);\n    return uVar2;\n}\n",
        "token_count": 832
    },
    "00409480": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409480(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t arg_ch;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *in_ECX;\n    uint *puVar6;\n    int32_t extraout_EDX;\n    int32_t *unaff_ESI;\n    uint32_t uVar7;\n    int64_t iVar8;\n    int32_t *piVar9;\n    uchar *puVar10;\n    int32_t *piVar11;\n    uchar *in_stack_fffffeb0;\n    double in_stack_fffffeb8;\n    int32_t iStack308;\n    int32_t iStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    int32_t iStack280;\n    uint uStack264;\n    uint32_t uStack260;\n    uchar auStack256 [4];\n    int32_t iStack252;\n    uint uStack248;\n    int32_t iStack244;\n    uint uStack240;\n    uint uStack236;\n    uchar auStack228 [8];\n    uchar auStack220 [8];\n    int32_t iStack212;\n    uint uStack192;\n    uchar auStack188 [4];\n    uint uStack184;\n    uint uStack180;\n    uint uStack172;\n    uint uStack168;\n    uchar auStack152 [8];\n    uchar auStack144 [4];\n    uchar auStack140 [4];\n    int32_t aiStack136 [2];\n    uchar auStack128 [4];\n    int32_t aiStack124 [2];\n    uchar auStack116 [4];\n    uchar auStack112 [8];\n    uchar auStack104 [4];\n    uchar auStack100 [32];\n    uchar auStack68 [4];\n    uchar auStack64 [4];\n    uchar auStack60 [16];\n    uchar auStack44 [40];\n    \n    if (0xf3b < in_ECX[0x3b]) {\n        *0x4974e2 = 0;\n        fcn.0045e1ee(in_ECX, 0x9a, 0xffffffff);\n        return 1;\n    }\n    iVar3 = in_ECX[0x3b] + 1;\n    in_ECX[0x3b] = iVar3;\n    if (iVar3 == 1) {\n        fcn.00410ac0();\n    }\n    cVar2 = *(in_ECX + 0x3f);\n    *(in_ECX + 0x51) = 0;\n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    do {\n        _sym.imp.USER32.dll_PeekMessageW = pcVar1;\n        if ((cVar2 != '\\0') || (*(in_ECX + 0x51) != '\\0')) goto code_r0x00409626;\n        if ((*0x4974e3 == '\\0') && ((*0x4a8668 == '\\0' || (in_ECX[0x3e] != 0)))) {\n            iVar3 = (*pcVar1)(&stack0xffffff08, 0, 0);\n            while (iVar3 != 0) {\n                if (iStack244 == 0x12) {\n                    *(in_ECX + 0x3f) = 1;\n                    in_ECX[0x3e] = 1;\n                    break;\n                }\n                iVar3 = fcn.0040d460(&stack0xffffff08);\n                if ((iVar3 == 0) && (iVar3 = fcn.0040d480(&stack0xffffff04),  iVar3 == 0)) {\n                    (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xffffff00);\n                    (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xfffffefc);\n                }\n                iVar3 = (*pcVar1)(&stack0xffffff00, 0, 0, 0, 1);\n            }\n            if (*0x4974e6 == '\\x01') {\n                *0x4974ec = '\\0';\n                *0x4974e6 = '\\0';\n                in_ECX[0x3e] = 1;\n            }\n            if (in_ECX[0x3e] == 1) {\n                iStack308 = 0;\n                fcn.0040d6b0();\ncode_r0x00409626:\n                *(in_ECX + 0x51) = 0;\n                if (in_ECX[0x3b] == 1) {\n                    fcn.0040f320();\n                    if (*(in_ECX + 0x3f) != '\\x01') {\n                        fcn.00401b70();\n                        (*_sym.imp.USER32.dll_LockWindowUpdate)();\n                        (*_sym.imp.USER32.dll_DestroyWindow)();\n                        pcVar1 = _sym.imp.USER32.dll_GetMessageW;\n                        iVar3 = (*_sym.imp.USER32.dll_GetMessageW)(&stack0xffffffd4, 0, 0, 0);\n                        while (0 < iVar3) {\n                            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xffffffc4);\n                            (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xffffffc0);\n                            iVar3 = (*pcVar1)(&stack0xffffffbc, 0, 0, 0);\n                        }\n                    }\n                }\n                else {\n                    in_ECX[0x3b] = in_ECX[0x3b] + -1;\n                }\n                return 0;\n            }\n        }\n        if (*0x4a8624 != 0) {\n            iVar3 = **0x4a8628;\n            fcn.00432346();\n            uVar7 = 0;\n            if (in_ECX[0x6c] != 0) {\n                puVar6 = in_ECX[0x6b];\n                do {\n                    if ((**puVar6 != NULL) && (***puVar6 == iVar3)) break;\n                    uVar7 = uVar7 + 1;\n                    puVar6 = puVar6 + 1;\n                } while (uVar7 < in_ECX[0x6c]);\n            }\n            if (uVar7 == in_ECX[0x6c]) goto code_r0x00409537;\n            fcn.00464ac0(in_ECX, *(**(in_ECX[0x6b] + uVar7 * 4) + 8), &stack0xffffff00, &stack0xffffff8c, \n                         &stack0xffffff98, &stack0xffffff74);\n            iVar3 = iStack280 + 1;\n            iStack280 = iVar3;\n            fcn.0040e410(**(in_ECX[0x6b] + uVar7 * 4) + 0x18);\n            fcn.0047c1b0(in_ECX, iVar3, 1, 0);\n            goto code_r0x00409619;\n        }\ncode_r0x00409537:\n        if ((*0x4974ec == '\\x01') && (*0x4974e3 == '\\0')) {\n            (*_sym.imp.KERNEL32.dll_Sleep)();\n            goto code_r0x00409619;\n        }\n        if ((in_ECX[0x118] != 0) && (*0x4a954c == '\\0')) {\n            piVar9 = in_ECX[0x116];\n            *0x4a954c = 1;\n            while (cVar2 = fcn.00441fc1(&stack0xfffffeb4, 0),  cVar2 != '\\0') {\n                puVar10 = *piVar9;\n                if (puVar10[0x11] == '\\0') {\n                    iVar8 = fcn.0040c8c0();\n                    in_stack_fffffeb0 = puVar10;\n                    if ((-1 < iVar8) && ((0xffffffff < iVar8 || (*(puVar10 + 0x18) <= iVar8)))) {\n                        iVar3 = *piVar9;\n                        uVar5 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                        *(iVar3 + 0x14) = uVar5;\n                        in_stack_fffffeb8 = CONCAT44(&stack0xffffff90, &stack0xffffff8c);\n                        in_stack_fffffeb0 = &stack0xffffff24;\n                        fcn.00464ac0(in_ECX, **piVar9, in_stack_fffffeb0, &stack0xffffff9c, &stack0xffffff8c, \n                                     &stack0xffffff90);\n                        unaff_ESI = NULL;\n                        iStack244 = iStack244 + 1;\n                        *(*piVar9 + 0x10) = 1;\n                        fcn.0047c1b0(in_ECX, iStack244, 1, 0);\n                        *(*piVar9 + 0x10) = 0;\n                    }\n                }\n                piVar9 = unaff_ESI;\n                fcn.00440543(&stack0xfffffeac, &stack0xfffffeb0);\n                unaff_ESI = piVar9;\n            }\n            while (cVar2 = fcn.00441fc1(&stack0xfffffeac, 0),  cVar2 != '\\0') {\n                if (*(*unaff_ESI + 0x11) == '\\0') {\n                    fcn.00440543(&stack0xfffffea4, &stack0xfffffea8);\n                }\n                else {\n                    fcn.004427a8(in_ECX + 0x116, &stack0xfffffea4);\n                }\n            }\n            *0x4a954c = '\\0';\n            if (0 < SUB84(in_stack_fffffeb8, 0)) goto code_r0x00409619;\n        }\n        if (((*0x4a863c != '\\0') && (*(in_ECX + 0x119) != '\\x01')) && (*0x4a8668 != '\\x01')) {\n            fcn.0044ab95(&stack0xffffff08);\n            do {\n                do {\n                    cVar2 = fcn.0045135a(0x4a8630, &stack0xffffff04);\n                    if (cVar2 == '\\0') {\n                        fcn.00402260();\n                        goto code_r0x0040955e;\n                    }\n                    cVar2 = fcn.004362d6(&stack0xffffff00);\n                } while (cVar2 != '\\0');\n                piVar9 = &stack0xffffff84;\n                piVar11 = in_ECX;\n                cVar2 = fcn.00464ac0(in_ECX, uStack260, &stack0xffffff1c, &stack0xffffff68, &stack0xffffff74, piVar9);\n            } while (cVar2 == '\\0');\n            fcn.004091e0();\n            fcn.00401c30();\n            fcn.00401990();\n            fcn.00402260();\n            fcn.004091e0();\n            fcn.00401c30();\n            fcn.00401990();\n            fcn.00402260();\n            fcn.004091e0();\n            in_stack_fffffeb0 = NULL;\n            fcn.00401c30();\n            fcn.00401990();\n            fcn.00402260();\n            *(piVar11 + 0x119) = 1;\n            fcn.0047c1b0(piVar11, iStack252 + 1, 1, 0);\n            *(piVar11 + 0x119) = 0;\n            in_ECX = piVar9;\ncode_r0x0042e262:\n            fcn.004091e0();\n            fcn.00402260();\n            goto code_r0x00409619;\n        }\ncode_r0x0040955e:\n        puVar10 = 0x409564;\n        piVar9 = in_ECX;\n        cVar2 = fcn.00409450(in_ECX);\n        if (cVar2 == '\\x01') goto code_r0x00409619;\n        if ((*0x4a87b0 != '\\0') && (*(in_ECX + 0x465) != '\\x01')) {\n            fcn.0044ab95(&stack0xffffff04);\n            do {\n                do {\n                    puVar10 = &stack0xffffff04;\n                    piVar9 = 0x4a8710;\n                    cVar2 = fcn.0045363b(0x4a8710, puVar10);\n                    if (cVar2 == '\\0') {\n                        fcn.00402260();\n                        goto code_r0x00409579;\n                    }\n                    cVar2 = fcn.004362d6(&stack0xffffff00);\n                } while (cVar2 != '\\0');\n                piVar9 = &stack0xffffff78;\n                piVar11 = in_ECX;\n                cVar2 = fcn.00464ac0(in_ECX, uStack260, &stack0xffffff44, &stack0xffffff80, &stack0xffffff70, piVar9);\n            } while (cVar2 == '\\0');\n            uStack248 = 0;\n            uStack240 = 1;\n            uStack236 = 0;\n            fcn.004091e0();\n            uStack240 = 1;\n            uStack248 = uStack288;\n            fcn.00401c30();\n            fcn.00401990();\n            fcn.00402260();\n            *(piVar11 + 0x465) = 1;\n            fcn.0047c1b0(piVar11, iStack212 + 1, 1, 0);\n            *(piVar11 + 0x465) = 0;\n            in_ECX = piVar9;\n            goto code_r0x0042e262;\n        }\ncode_r0x00409579:\n        iVar3 = in_ECX[0x3e];\n        if (iVar3 == 7) {\n            uStack260 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(in_ECX[0x114], 10);\n            if (uStack260 != 0x102) {\n                (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)();\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(in_ECX[0x114]);\n                in_stack_fffffeb8 = uStack260;\n                fcn.0040d6b0();\n                *(in_ECX + 0x51) = 1;\n                in_ECX[0x3e] = 0;\n            }\n            goto code_r0x00409619;\n        }\n        if ((iVar3 == 8) || (iVar3 == 9)) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            if (in_ECX[0x112] != 0) {\n                iVar8 = fcn.0040c8c0();\n                if ((-1 < iVar8) && ((0xffffffff < iVar8 || (in_ECX[0x112] <= iVar8)))) {\n                    if (in_ECX[0x115] != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                        in_ECX[0x115] = 0;\n                    }\n                    in_stack_fffffeb8 = 0.0;\n                    fcn.0040d6b0();\ncode_r0x00409839:\n                    *(in_ECX + 0x51) = 1;\n                    in_ECX[0x3e] = 0;\n                    goto code_r0x00409619;\n                }\n            }\n            fcn.00443a5f(in_ECX[0x10e], &stack0xfffffecc, &stack0xfffffeb3);\n            cVar2 = in_stack_fffffeb0 >> 0x18;\n            if (in_ECX[0x3e] == 9) {\n                if (cVar2 == '\\0') {\n                    in_stack_fffffeb0 = 0x1000000;\ncode_r0x0042e436:\n                    uStack264 = 0xcccccccc;\n                    if (in_ECX[0x115] != 0) {\n                        (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)();\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(in_ECX[0x115]);\n                        in_ECX[0x115] = 0;\n                    }\n                    if (in_ECX[0x3e] == 8) {\n                        in_stack_fffffeb8 = iStack308;\n                        if (iStack308 < 0) {\n                            in_stack_fffffeb8 = in_stack_fffffeb8 + *0x48bd70;\n                        }\n                        fcn.00456f29(*(*in_ECX + 4) + in_ECX, &stack0xfffffeb8);\n                    }\n                    else {\n                        fcn.00403f80(uStack264, 0);\n                    }\n                    *(in_ECX + 0x51) = 1;\n                    in_ECX[0x3e] = 0;\n                    (*_sym.imp.KERNEL32.dll_Sleep)(in_ECX[0xbd]);\n                }\n                else {\n                    in_stack_fffffeb0 = NULL;\n                }\n            }\n            else if (cVar2 == '\\x01') goto code_r0x0042e436;\n            goto code_r0x00409619;\n        }\n        if ((((iVar3 != 2) && (iVar3 != 3)) && (iVar3 != 4)) && ((iVar3 != 5 && (iVar3 != 6)))) {\n            in_ECX[0x3d] = arg_8h;\n            iVar3 = arg_8h + 1;\n            if ((*0x4a90f8 < arg_8h) || ((arg_8h < 1 || (arg_ch = arg_8h * 0x10 + *0x4a912c,  arg_ch == 0)))) {\n                in_ECX[0x3e] = 1;\n                arg_8h = iVar3;\n            }\n            else {\n                iVar4 = *(**(arg_ch + 4) + 8);\n                if (iVar4 == 0) {\n                    arg_8h = iVar3;\n                    fcn.0040b240(in_ECX, arg_ch, &fcn.00409480::arg_8h);\n                }\n                else {\n                    arg_8h = iVar3;\n    // switch table (127 cases) at 0x4098a0\n                    switch(iVar4) {\n                    case 1:\n                        uStack180 = 0;\n                        uStack168 = 0;\n                        uStack172 = 1;\n                        iVar3 = fcn.00408f60(&stack0xffffff4c);\n                        if ((iVar3 == 0) && (iVar3 = *(*(arg_ch + 4) + unaff_ESI * 4),  *(iVar3 + 8) != 0x7f)) {\n                            fcn.0045e1ee(in_ECX, 0x72, *(iVar3 + 10));\n                        }\n                        fcn.004091e0();\n                        break;\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 0xb:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x34:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                    case 0x3a:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x3f:\n                    case 0x40:\n                    case 0x41:\n                    case 0x42:\n                    case 0x43:\n                    case 0x44:\n                    case 0x45:\n                    case 0x46:\n                    case 0x47:\n                    case 0x48:\n                    case 0x49:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4d:\n                    case 0x4e:\n                    case 0x4f:\n                    case 0x50:\n                    case 0x51:\n                    case 0x52:\n                    case 0x53:\n                    case 0x54:\n                    case 0x55:\n                    case 0x56:\n                    case 0x57:\n                    case 0x58:\n                    case 0x59:\n                    case 0x5a:\n                    case 0x5b:\n                    case 0x5c:\n                    case 0x5d:\n                    case 0x5e:\n                    case 0x5f:\n                    case 0x60:\n                    case 0x61:\n                    case 0x62:\n                    case 99:\n                    case 100:\n                    case 0x65:\n                    case 0x66:\n                    case 0x67:\n                    case 0x68:\n                    case 0x69:\n                    case 0x6a:\n                    case 0x6b:\n                    case 0x6c:\n                    case 0x6d:\n                    case 0x6e:\n                    case 0x6f:\n                    case 0x70:\n                    case 0x71:\n                    case 0x72:\n                    case 0x73:\n                    case 0x74:\n                    case 0x75:\n                    case 0x76:\n                    case 0x77:\n                    case 0x78:\n                    case 0x79:\n                    case 0x7a:\n                    case 0x7b:\n                    case 0x7c:\n                    case 0x7d:\n                    case 0x7e:\n                        fcn.0045e1ee(in_ECX, 5000, *(**(arg_ch + 4) + 10));\n                        break;\n                    case 0x33:\n                        fcn.00409260(in_ECX);\n                        break;\n                    case 0x35:\n                        cVar2 = fcn.004329dd(in_ECX + 0x122);\n                        if (cVar2 == '\\0') {\n                            fcn.0045e1ee(in_ECX, 0xa7, *(extraout_EDX + 10));\n                        }\n                        else {\n                            iVar3 = fcn.0047e52b(in_ECX, arg_ch, &stack0xfffffea4, in_ECX + 0x122);\n                            if (iVar3 != 0) {\n                                fcn.0045e1ee(in_ECX, 0xaa, *(*(*(arg_ch + 4) + piVar9 * 4) + 10));\n                            }\n                        }\n                        break;\n                    case 0x7f:\n                        break;\n                    default:\n                        uStack292 = 0;\n                        uStack284 = 1;\n                        iStack280 = 0;\n                        iVar3 = fcn.00409940(in_ECX, arg_ch, &stack0xfffffedc, &stack0xfffffedb);\n                        puVar6 = uStack296;\n                        if ((iVar3 == 0) && (iVar3 = *(*(arg_ch + 4) + puVar10 * 4),  *(iVar3 + 8) != 0x7f)) {\n                            fcn.0045e1ee(in_ECX, 0x72, *(iVar3 + 10));\n                            fcn.004091e0();\n                        }\n                        else {\n                            if (uStack296 != NULL) {\n                                *uStack296[3] = *uStack296[3] + -1;\n                                if (*uStack296[3] == 0) {\n                                    fcn.0041137c(*uStack296);\n                                    fcn.0041137c(puVar6[3]);\n                                }\n                                fcn.0041137c(puVar6);\n                                uStack296 = NULL;\n                            }\n                            iVar3 = iStack308;\n                            if (iStack300 == 8) {\n                                if (iStack308 != 0) {\n                                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iStack308);\n                                    fcn.0041137c();\n                                }\n                            }\n                            else if (iStack300 == 10) {\n                                if (iStack308 != 0) {\n                                    fcn.00443f54(iStack308);\n                                }\n                            }\n                            else if (iStack300 == 5) {\n                                fcn.0040e5e0();\n                            }\n                            else if (iStack300 == 0xb) {\n                                fcn.0041137c(*(iStack308 + 4));\n                                fcn.0041137c(iVar3);\n                            }\n                            else if ((iStack300 == 0xc) && (iStack308 != 0)) {\n                                fcn.0044b04b(iStack308);\n                            }\n                        }\n                    }\n                }\n            }\n            goto code_r0x00409619;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n        if (in_ECX[0xbc] != 0) {\n            iVar8 = fcn.0040c8c0();\n            if ((-1 < iVar8) && ((0xffffffff < iVar8 || (in_ECX[0xbc] <= iVar8)))) {\n                if (in_ECX[0x3e] != 2) {\n                    in_stack_fffffeb8 = 0.0;\n                    fcn.0040d6b0();\n                }\n                goto code_r0x00409839;\n            }\n        }\n        if (in_ECX[0x3e] < 3) goto code_r0x00409619;\n    // switch table (4 cases) at 0x42e7c0\n        switch(in_ECX[0x3e]) {\n        case 3:\n            iVar3 = fcn.0046ec64(in_ECX, 1);\n            goto code_r0x0042e534;\n        case 4:\n            iVar3 = fcn.0046ec64(in_ECX, 1);\n            if (iVar3 < 0) goto code_r0x0042e53e;\n            if (0 < iVar3) break;\n            goto code_r0x0042e579;\n        case 5:\n            iVar3 = fcn.0046f662(in_ECX);\ncode_r0x0042e534:\n            if (iVar3 < 0) {\ncode_r0x0042e53e:\n                fcn.00403f40(-iVar3, 0);\n                in_stack_fffffeb0 = NULL;\n                fcn.0040d6b0();\n            }\n            if (iVar3 != 0) {\n                if (0 < iVar3) {\ncode_r0x0042e579:\n                    if ((in_ECX[0x3e] == 5) || (in_ECX[0x3e] == 3)) {\n                        uVar5 = *in_ECX[0x76];\n                        uStack192 = 0;\n                        uStack184 = 1;\n                        uStack180 = 0;\n                        fcn.004091e0();\n                        uStack184 = 7;\n                        uStack192 = uVar5;\n                        fcn.004722dc(*(*in_ECX + 4) + in_ECX, &stack0xffffff40, 0);\n                        fcn.004091e0();\n                    }\n                }\n                *(in_ECX + 0x51) = 1;\n                in_ECX[0x3e] = 0;\n                fcn.0043374b(in_ECX[0xbd]);\n            }\n            break;\n        case 6:\n            iVar3 = fcn.0046f662(in_ECX);\n            if (iVar3 < 0) goto code_r0x0042e53e;\n            if (iVar3 < 1) goto code_r0x0042e579;\n        }\ncode_r0x00409619:\n        cVar2 = *(in_ECX + 0x3f);\n        pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    } while( true );\n}\n",
        "token_count": 6499
    },
    "0040aa20": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040aa20(ulong *arg_8h, int32_t *arg_ch, ulong *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    uint32_t *puVar4;\n    uint *puVar5;\n    ulong *puVar6;\n    ulong *puVar7;\n    uint *puVar8;\n    uint64_t *puVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    int32_t **ppiVar12;\n    int32_t *piVar13;\n    int32_t iVar14;\n    uint uVar15;\n    ulong *unaff_EBX;\n    uint32_t uVar16;\n    ulong *unaff_ESI;\n    int32_t **ppiVar17;\n    uchar *in_stack_ffffff38;\n    uchar *arg_ch_00;\n    uchar *in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    ulong *in_stack_ffffff5c;\n    char16_t *arg_10h_00;\n    ulong *puVar18;\n    ulong *puVar19;\n    uint64_t in_stack_ffffff74;\n    ulong *puStack132;\n    ulong *puStack128;\n    ulong *puStack124;\n    uint uStack120;\n    int32_t iStack116;\n    uint32_t uStack112;\n    int32_t iStack108;\n    uint32_t *puStack104;\n    ushort uStack100;\n    uint uStack96;\n    uchar auStack89 [13];\n    uint uStack76;\n    uint uStack68;\n    uint uStack64;\n    uchar auStack52 [16];\n    uint uStack36;\n    uchar auStack32 [28];\n    \n    if ((*0x4a9600 & 1) == 0) {\n        *0x4a9600 = *0x4a9600 | 1;\n        *0x4a95f0 = NULL;\n        *0x4a95f8 = 0x1;\n        *0x4a95fc = NULL;\n        fcn.004114aa(0x4263a1);\n    }\n    puVar18 = 0x8;\n    uStack100 = 1;\n    puStack132 = arg_10h;\n    puStack128 = NULL;\n    puStack124 = NULL;\n    uStack120 = CONCAT22(uStack120._2_2_, 1);\n    arg_10h_00 = 0x40aa66;\n    puStack104 = fcn.00411777(8);\n    if (puStack104 == NULL) {\n        puStack104 = NULL;\n    }\n    else {\n        *puStack104 = 0x14;\n    }\n    puStack104[1] = 0;\n    uStack96 = *((*(arg_8h + 4))[*arg_ch] + 10);\n    iStack108 = 1;\n    uStack112 = 0x17;\ncode_r0x0040aaa0:\n    do {\n        iVar10 = iStack116;\n        puVar7 = puStack128;\n        iVar14 = *arg_ch;\n        if (iVar14 == arg_14h) {\ncode_r0x0040aad8:\n            uVar16 = 0x14;\n            goto code_r0x0040aadd;\n        }\n        piVar13 = (*(arg_8h + 4))[iVar14];\n        if (*(piVar13 + 2) == 0x7f) goto code_r0x0040aad8;\n        uVar16 = *(piVar13 + 2);\n        if (uVar16 == 0x36) {\n            uStack112 = 0x16;\n            if (puStack128 == NULL) {\n                if (arg_10h != 0x4a95f0) {\n                    if (*(arg_10h + 0xc) != NULL) {\n                        fcn.00442ef7(*(arg_10h + 0xc));\n                        *(arg_10h + 0xc) = NULL;\n                    }\n                    piVar13 = *(arg_10h + 1);\n                    if ((piVar13 == 0x8) && (*arg_10h != NULL)) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                        fcn.0041137c();\n                    }\n                    else if (piVar13 == 0xa) {\n                        if (*arg_10h != NULL) {\n                            fcn.00443f54(*arg_10h);\n                        }\n                    }\n                    else if (piVar13 == 0x5) {\n                        fcn.0040e5e0();\n                    }\n                    else if (piVar13 == 0xb) {\n                        fcn.0041137c();\n                        fcn.0041137c();\n                    }\n                    else if ((piVar13 == 0xc) && (*arg_10h != NULL)) {\n                        fcn.0044b04b(*arg_10h);\n                    }\n                    *(arg_10h + 1) = 0x1;\n                    *arg_10h = NULL;\n                    *(arg_10h + 1) = *0x4a95f8;\n    // switch table (12 cases) at 0x42c2d3\n                    switch(*0x4a95f8) {\n                    case 0x2:\n                        *arg_10h = *0x4a95f0;\n                        *(arg_10h + 4) = *0x4a95f4;\n                        break;\n                    case 0x3:\n                        *arg_10h = CONCAT44(*0x4a95f4, *0x4a95f0);\n                        break;\n                    case 0x4:\n                        piVar11 = fcn.00411777(0x10);\n                        piVar13 = *0x4a95fc;\n                        if (piVar11 == NULL) {\n                            *(arg_10h + 0xc) = NULL;\n                        }\n                        else {\n                            *piVar11 = **0x4a95fc;\n                            piVar11[1] = piVar13[1];\n                            piVar11[2] = piVar13[2];\n                            piVar13 = piVar13[3];\n                            piVar11[3] = piVar13;\n                            *piVar13 = *piVar13 + 1;\n                            *(arg_10h + 0xc) = piVar11;\n                        }\n                        break;\n                    case 0x5:\n                        ppiVar12 = fcn.00411777(0x214);\n                        if (ppiVar12 == NULL) {\n                            ppiVar12 = NULL;\n                            puStack128 = puVar7;\n                        }\n                        else {\n                            puVar18 = *0x4a95f0;\n                            ppiVar17 = ppiVar12;\n                            for (iVar14 = 0x85; arg_10h = puStack132,  iVar14 != 0; iVar14 = iVar14 + -1) {\n                                *ppiVar17 = *puVar18;\n                                puVar18 = puVar18 + 4;\n                                ppiVar17 = ppiVar17 + 1;\n                            }\n                        }\n                        *arg_10h = ppiVar12;\n                        puVar7 = puStack128;\n                        if (ppiVar12[1] != NULL) {\n                            *ppiVar12[1] = *ppiVar12[1] + 1;\n                        }\n                        break;\n                    case 0x6:\n                        *arg_10h = *0x4a95f0;\n                        break;\n                    case 0x7:\n                        *arg_10h = *0x4a95f0;\n                        break;\n                    case 0x8:\n                        if (*0x4a95f0 != NULL) {\n                            piVar13 = fcn.00411777(0x10);\n                            *arg_10h = piVar13;\n                            (*_sym.imp.OLEAUT32.dll_VariantClear)();\n                            in_stack_ffffff5c = *arg_10h;\n                            in_stack_ffffff58 = 0x42befb;\n                            iVar14 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n                            if (iVar14 < 0) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                                fcn.0041137c();\n                                *arg_10h = NULL;\n                            }\n                        }\n                        break;\n                    case 0x9:\n                        *arg_10h = *0x4a95f0;\n                        break;\n                    case 0xa:\n                        iVar14 = fcn.00411777(0x18);\n                        if (iVar14 == 0) {\ncode_r0x0042bf54:\n                            *arg_10h = NULL;\n                        }\n                        else {\n                            in_stack_ffffff5c = 0x42bf4d;\n                            piVar13 = fcn.0044b52a(iVar14, *0x4a95f0);\n                            *arg_10h = piVar13;\n                        }\n                        break;\n                    case 0xb:\n                        ppiVar12 = fcn.00411777(8);\n                        *arg_10h = ppiVar12;\n                        *ppiVar12 = **0x4a95f0;\n                        if (**arg_10h == 0) {\n                            iVar14 = fcn.00411777(1);\n                            (*arg_10h)[1] = iVar14;\n                            *(*arg_10h)[1] = 0;\n                        }\n                        else {\n                            iVar14 = fcn.00411777(**arg_10h);\n                            (*arg_10h)[1] = iVar14;\n                            in_stack_ffffff5c = (*arg_10h)[1];\n                            in_stack_ffffff58 = 0x42bfa5;\n                            fcn.00411000(in_stack_ffffff5c, *(*0x4a95f0 + 4), **arg_10h);\n                        }\n                        break;\n                    case 0xc:\n                        iVar14 = fcn.00411777(0x14);\n                        if (iVar14 == 0) goto code_r0x0042bf54;\n                        in_stack_ffffff5c = 0x42bfe8;\n                        piVar13 = fcn.0046fa03(iVar14, *0x4a95f0);\n                        *arg_10h = piVar13;\n                        break;\n                    default:\n                        *arg_10h = *0x4a95f0;\n                        break;\n                    case 0xbad1abe1:\n                        break;\n                    }\n                }\n            }\n            else if (uStack120._1_1_ == '\\0') {\n                puVar18 = fcn.00411777(0x18);\n                if (puVar18 == NULL) {\n                    puVar18 = NULL;\n                }\n                else {\n                    in_stack_ffffff74 = in_stack_ffffff74 & 0xffffffff00000000;\n                    fcn.0040bc00();\n                    puVar7 = puStack128;\n                }\n                *(puVar18 + 2) = puStack124;\n                puStack124 = puVar18;\n            }\n            else {\n                fcn.00409120(0x4a95f0);\n                puStack124 = puStack124 & 0xffff00ff;\n                puVar7 = puStack132;\n            }\n            puStack128 = puVar7 + 1;\n            if (puStack128 == 0x1) {\n                in_stack_ffffff74 = in_stack_ffffff74 & 0xffffffff00000000 | ZEXT48(arg_10h);\n            }\n            else if (uStack120._1_1_ == '\\0') {\n                in_stack_ffffff74 = in_stack_ffffff74 & 0xffffffff00000000 | ZEXT48(puStack124);\n            }\n            else {\n                in_stack_ffffff74 = in_stack_ffffff74 & 0xffffffff00000000 | ZEXT48(*(puStack124 + 2));\n            }\n            puVar18 = in_stack_ffffff74;\n            puVar8 = *(*(arg_8h + 4))[*arg_ch];\n            ppiVar12 = puVar18 + 0xc;\n            if (*ppiVar12 != NULL) {\n                puVar18 = unaff_EBX;\n                fcn.00442ef7(*ppiVar12);\n                *(puVar18 + 0xc) = NULL;\n                unaff_EBX = puVar18;\n            }\n            piVar13 = *(puVar18 + 1);\n            if ((piVar13 == 0x8) && (*puVar18 != NULL)) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                fcn.0041137c();\n            }\n            else if (piVar13 == 0xa) {\n                if (*puVar18 != NULL) {\n                    fcn.00443f54(*puVar18);\n                }\n            }\n            else if (piVar13 == 0x5) {\n                fcn.0040e5e0();\n            }\n            else if (piVar13 == 0xb) {\n                fcn.0041137c();\n                fcn.0041137c();\n            }\n            else if ((piVar13 == 0xc) && (*puVar18 != NULL)) {\n                fcn.0044b04b(*puVar18);\n            }\n            puVar18 = 0x10;\n            *in_stack_ffffff74 = 0;\n            in_stack_ffffff74[2] = 4;\n            arg_10h_00 = 0x40ac46;\n            puVar5 = fcn.00411777(0x10);\n            if (puVar5 == NULL) {\n                puVar5 = NULL;\n            }\n            else {\n                *puVar5 = *puVar8;\n                puVar5[1] = puVar8[1];\n                puVar5[2] = puVar8[2];\n                piVar13 = puVar8[3];\n                puVar5[3] = piVar13;\n                *piVar13 = *piVar13 + 1;\n            }\n            *(in_stack_ffffff74 + 0xc) = puVar5;\n            *arg_ch = *arg_ch + 1;\n            iVar14 = iStack116;\n            if (*(iStack116 + 0xfd) != '\\0') {\n                puVar18 = fcn.0040d350();\n                arg_10h_00 = 0x42c0b1;\n                fcn.00457977(puVar18);\n                iVar14 = uStack120;\n            }\n            if (*(iVar14 + 0xfe) != '\\0') {\n                puVar18 = fcn.0040d350();\n                in_stack_ffffff5c = 0x42c0ce;\n                fcn.00472042(iStack116, puVar18);\n            }\n            goto code_r0x0040aaa0;\n        }\n        if ((0x36 < uVar16) && (uVar16 < 0x41)) goto code_r0x0040aad8;\n        if (uVar16 != 5) {\n            if (0x51 < uVar16) goto code_r0x0040aad8;\n    // switch table (82 cases) at 0x40b18c\n            switch(*(*(uVar16 + 0x40b1ec) * 4 + 0x40b18c)) {\n            case 0x40aad8:\n                goto code_r0x0040aad8;\n            case 0x40adf1:\n                uVar16 = 0xd;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x40ae9e:\n                if ((uStack112 == 0x16) || (uStack112 == 0x13)) {\n                    uVar16 = 0xb;\n                }\n                else {\n                    uVar16 = 0x11;\n                }\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x40aedd:\n                uVar16 = 0xe;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x40af6c:\n                uVar16 = 0x12;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x40af79:\n                uVar16 = 0x13;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x40af86:\n                uVar16 = 9;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x40afa9:\n                goto code_r0x0040afa9;\n            case 0x40b03c:\n                uStack112 = 0x16;\n                puVar18 = 0x40b052;\n                fcn.0040beb0();\n                iVar14 = iStack116;\n                puVar7 = puStack132;\n                if ((puStack128 != 0x1) && (puVar7 = puStack124,  uStack120._1_1_ != '\\0')) {\n                    puVar7 = *(puStack124 + 2);\n                }\n                arg_10h_00 = 0x40b071;\n                iVar10 = fcn.00408f60(puVar7);\n                if ((iVar10 != 0) || (*(iVar14 + 0xf8) == 1)) goto code_r0x0042c15f;\n                arg_10h = in_stack_ffffff74 >> 0x20;\n                goto code_r0x0040aaa0;\n            case 0x40b092:\n                iVar10 = *piVar13;\n                if ((3 < iVar10) && (iVar10 < 0x27)) goto code_r0x0040aad8;\n                if (iVar10 == 1) {\n                    uVar16 = 7;\n                    *arg_ch = iVar14 + 1;\n                    break;\n                }\n                if (0x27 < iVar10 - 2U) goto code_r0x0040aad8;\n    // switch table (40 cases) at 0x42c263\n                switch(*(*(iVar10 + 0x42c279) * 4 + 0x42c263)) {\n                case 0x40aad8:\n                    goto code_r0x0040aad8;\n                case 0x42b894:\n                    uVar16 = 8;\n                    *arg_ch = iVar14 + 1;\n                    goto code_r0x0040aadd;\n                case 0x42b8a1:\n                    uVar16 = 10;\n                    *arg_ch = iVar14 + 1;\n                    goto code_r0x0040aadd;\n                case 0x42b8ae:\n                    uStack112 = 0x16;\n                    fcn.0040beb0();\n                    auStack89._5_4_ = auStack89._5_4_ & 0xffffff00;\n                    puVar18 = auStack89._5_4_;\n                    break;\n                case 0x42b8d3:\n                    uStack112 = 0x16;\n                    fcn.0040beb0();\n                    uStack76 = CONCAT31(uStack76._1_3_, 1);\n                    puVar18 = uStack76;\n                    break;\n                case 0x42b910:\n                    uStack112 = 0x16;\n                    fcn.00401c30();\n                    in_stack_ffffff54 = &stack0xffffffe0;\n                    fcn.0044b55b(in_stack_ffffff54, in_stack_ffffff58, in_stack_ffffff5c, arg_10h_00, puVar18);\n                    fcn.0040beb0();\n                    arg_ch_00 = &stack0xffffffcc;\n                    uVar15 = fcn.0040d350();\n                    fcn.00452aff(uVar15, arg_ch_00);\n                    *arg_ch = *arg_ch + 1;\n                    arg_10h = arg_10h_00;\n                    fcn.00402260();\n                    arg_10h_00 = arg_10h;\n                    goto code_r0x0040aaa0;\n                }\n                arg_10h_00 = 0x42b8fc;\n                uVar15 = fcn.0040d350();\n                in_stack_ffffff5c = 0x42b902;\n                fcn.00452b3e(uVar15, puVar18);\n                *arg_ch = *arg_ch + 1;\n                arg_10h = in_stack_ffffff74;\n                goto code_r0x0040aaa0;\n            case 0x40b0b6:\n                uVar16 = 5;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x40b156:\n                uVar16 = 0;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x40b160:\n                uVar16 = 1;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x42b66e:\n                uStack112 = 0x16;\n                fcn.0040beb0();\n                uStack36 = (*(arg_8h + 4))[*arg_ch][1];\n                uVar15 = *(*(arg_8h + 4))[*arg_ch];\n                puVar8 = fcn.0040d350();\n                puVar18 = 0x42b6a9;\n                fcn.004091e0();\n                puVar8[2] = 2;\n                *puVar8 = uVar15;\n                puVar8[1] = uStack36;\n                *arg_ch = *arg_ch + 1;\n                arg_10h = puStack132;\n                goto code_r0x0040aaa0;\n            case 0x42b6c4:\n                uStack112 = 0x16;\n                fcn.0040beb0();\n                in_stack_ffffff74 = *(*(arg_8h + 4))[*arg_ch];\n                puVar9 = fcn.0040d350();\n                puVar18 = 0x42b6fc;\n                fcn.004091e0();\n                *puVar9 = in_stack_ffffff74;\n                *(puVar9 + 1) = 3;\n                *arg_ch = *arg_ch + 1;\n                arg_10h = puStack132;\n                goto code_r0x0040aaa0;\n            case 0x42b740:\n                fcn.0040beb0();\n                puVar18 = &stack0xffffffa7;\n                arg_10h_00 = fcn.0040d350();\n                iVar14 = iStack116;\n                in_stack_ffffff54 = 0x42b76c;\n                in_stack_ffffff5c = arg_8h;\n                arg_10h = unaff_ESI;\n                iVar10 = fcn.00409940(iStack116, arg_8h, arg_10h_00, puVar18);\n                if ((iVar10 != 0) || (*(iVar14 + 0xf8) == 1)) goto code_r0x0042c246;\n                puStack128 = 0x16;\n                unaff_ESI = arg_10h;\n                goto code_r0x0040aaa0;\n            case 0x42b79f:\n                if ((uStack112 == 0x16) || (uVar16 = 0x10,  uStack112 == 0x13)) {\n                    uVar16 = 0xc;\n                }\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x42b7c7:\n                fcn.0040beb0();\n                uVar15 = in_stack_ffffff74;\n                iVar14 = *arg_ch;\n                *arg_ch = iVar14 + 1;\n                puVar8 = *(*(arg_8h + 4))[iVar14];\n                in_stack_ffffff58 = *puVar8;\n                in_stack_ffffff5c = puVar8[1];\n                arg_10h_00 = puVar8[2];\n                arg_10h = puVar8[3];\n                *arg_10h = *arg_10h + 1;\n                in_stack_ffffff54 = fcn.0040d350();\n                iVar14 = iStack116;\n                iVar10 = fcn.004711f2(iStack116, in_stack_ffffff54, in_stack_ffffff58);\n                if (iVar10 != 0) {\n                    fcn.0045e1ee(iVar14, 0x86, *((*(arg_8h + 4))[*arg_ch + -1] + 10));\ncode_r0x0042c15f:\n                    in_stack_ffffff38 = &stack0xffffff50;\n                    goto code_r0x0042c24b;\n                }\n                in_stack_ffffff74 = CONCAT44(0x16, uVar15);\n                puVar18 = arg_10h;\n                goto code_r0x0040aaa0;\n            case 0x42b839:\n                uVar16 = 4;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x42b846:\n                uVar16 = 6;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x42b853:\n                uVar16 = 2;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x42b860:\n                uVar16 = 3;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x42b86d:\n                uVar16 = 0xf;\n                *arg_ch = iVar14 + 1;\n                break;\n            case 0x42b971:\n                if ((iVar14 == 0) || ((iVar1 = *((*(arg_8h + 4) + iVar14)[-1] + 2),  iVar1 != 0x33 && (iVar1 != 0x35))))\n                {\n                    puVar18 = iStack116 + 0x488;\n                    arg_10h_00 = 0x42b9cb;\n                    cVar3 = fcn.004329dd(puVar18);\n                    if (cVar3 == '\\0') {\n                        fcn.0045e1ee(iVar10, 0xa7, *((*(arg_8h + 4))[*arg_ch] + 10));\n                        goto code_r0x0042c24b;\n                    }\n                    uStack76 = NULL;\n                    uStack64 = 0;\n                    uStack68 = 1;\n                    fcn.0040bc00();\n                    iVar14 = fcn.0047ccdd(arg_8h, arg_ch, &stack0xffffffb4, in_stack_ffffff54);\n                    if (iVar14 != 0) {\n                        fcn.0045e1ee(iVar10, 0x6e, *((*(arg_8h + 4))[*arg_ch] + 10));\n                        goto code_r0x0042c241;\n                    }\n                    unaff_EBX = 0x16;\n                    fcn.0040beb0();\n                    arg_10h = in_stack_ffffff5c;\n                    fcn.004091e0();\n                    in_stack_ffffff5c = arg_10h;\n                }\n                else {\n                    puVar18 = 0x1;\n                    arg_10h_00 = L\"Variable must be of type \\'Object\\'.\";\n                    in_stack_ffffff5c = NULL;\n                    in_stack_ffffff58 = 0xa9;\n                    iVar14 = fcn.00451712(iStack116, 0xa9, 0, L\"Variable must be of type \\'Object\\'.\", 1);\n                    if (iVar14 != 0) {\n                        fcn.0045e1ee(iVar10, 0xa9, *((*(arg_8h + 4))[*arg_ch] + 10));\n                        goto code_r0x0042c24b;\n                    }\n                    *arg_ch = *arg_ch + 1;\n                }\n                goto code_r0x0040aaa0;\n            }\ncode_r0x0040aadd:\n            in_stack_ffffff74 = in_stack_ffffff74 & 0xffffffff00000000 | uVar16;\n            uStack112 = uVar16;\n            do {\n                puVar2 = puStack104;\n                puVar4 = puStack104;\n                if (uStack100._1_1_ != '\\0') {\n                    puVar4 = puStack104[1];\n                }\n    // switch table (7 cases) at 0x40b170\n                switch(*(*puVar4 * 0x15 + 0x4918f0 + uVar16)) {\n                case 0:\n                    goto code_r0x0040ad98;\n                case 1:\n                    arg_10h_00 = 0x40ae69;\n                    iVar14 = fcn.0040b890(&stack0xffffff7c);\n                    if (iVar14 != 0) goto code_r0x0042c1d4;\n                    break;\n                case 2:\n                    goto code_r0x0040af30;\n                case 3:\n                    goto code_r0x0040adbf;\n                case 4:\n                    fcn.0045e1ee(iStack116, 0x6b, uStack96);\n                    goto code_r0x0042c246;\n                case 5:\n                    fcn.0045e1ee(iStack116, 0x6c, uStack96);\n                    goto code_r0x0042c246;\n                case 6:\n                    goto code_r0x0042c1ea;\n                default:\n                    puVar18 = puStack124;\n                    if (puStack128 == 0x1) {\n                        while (puVar2 = puStack104,  puVar18 != NULL) {\n                            puVar18 = *(puVar18 + 2);\n                            fcn.004091e0();\n                            fcn.0041137c();\n                        }\n                        while (puVar2 != NULL) {\n                            puVar2 = puVar2[1];\n                            fcn.0041137c();\n                        }\n                        return 0;\n                    }\n                    goto code_r0x0042c1d4;\n                }\n            } while( true );\n        }\n        uStack112 = 0x16;\n        if (puStack128 == NULL) {\n            if (arg_10h != 0x4a95f0) {\n                puVar6 = *(arg_10h + 0xc);\n                if (puVar6 != NULL) {\n                    arg_10h_00 = 0x42ba38;\n                    fcn.00442ef7(puVar6);\n                    *(arg_10h + 0xc) = NULL;\n                    puVar18 = puVar6;\n                }\n                piVar13 = *(arg_10h + 1);\n                if ((piVar13 == 0x8) && (*arg_10h != NULL)) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                    puVar18 = *arg_10h;\n                    arg_10h_00 = 0x42ba5d;\n                    fcn.0041137c();\n                }\n                else if (piVar13 == 0xa) {\n                    if (*arg_10h != NULL) {\n                        arg_10h_00 = 0x42ba75;\n                        fcn.00443f54(*arg_10h);\n                    }\n                }\n                else if (piVar13 == 0x5) {\n                    puVar18 = 0x42ba81;\n                    fcn.0040e5e0();\n                }\n                else if (piVar13 == 0xb) {\n                    fcn.0041137c();\n                    puVar18 = *arg_10h;\n                    arg_10h_00 = 0x42ba9c;\n                    fcn.0041137c();\n                }\n                else if ((piVar13 == 0xc) && (*arg_10h != NULL)) {\n                    arg_10h_00 = 0x42bab4;\n                    fcn.0044b04b(*arg_10h);\n                }\n                *(arg_10h + 1) = 0x1;\n                *arg_10h = NULL;\n                *(arg_10h + 1) = *0x4a95f8;\n    // switch table (12 cases) at 0x42c2a3\n                switch(*0x4a95f8) {\n                case 0x2:\n                    *arg_10h = *0x4a95f0;\n                    *(arg_10h + 4) = *0x4a95f4;\n                    break;\n                case 0x3:\n                    *arg_10h = CONCAT44(*0x4a95f4, *0x4a95f0);\n                    break;\n                case 0x4:\n                    puVar18 = 0x10;\n                    arg_10h_00 = 0x42baf4;\n                    piVar11 = fcn.00411777(0x10);\n                    piVar13 = *0x4a95fc;\n                    if (piVar11 == NULL) {\n                        *(arg_10h + 0xc) = NULL;\n                    }\n                    else {\n                        *piVar11 = **0x4a95fc;\n                        piVar11[1] = piVar13[1];\n                        piVar11[2] = piVar13[2];\n                        piVar13 = piVar13[3];\n                        piVar11[3] = piVar13;\n                        *piVar13 = *piVar13 + 1;\n                        *(arg_10h + 0xc) = piVar11;\n                    }\n                    break;\n                case 0x5:\n                    puVar18 = 0x214;\n                    arg_10h_00 = 0x42bb52;\n                    ppiVar12 = fcn.00411777(0x214);\n                    if (ppiVar12 == NULL) {\n                        ppiVar12 = NULL;\n                        puStack128 = puVar7;\n                    }\n                    else {\n                        puVar7 = *0x4a95f0;\n                        ppiVar17 = ppiVar12;\n                        for (iVar14 = 0x85; arg_10h = puStack132,  iVar14 != 0; iVar14 = iVar14 + -1) {\n                            *ppiVar17 = *puVar7;\n                            puVar7 = puVar7 + 4;\n                            ppiVar17 = ppiVar17 + 1;\n                        }\n                    }\n                    *arg_10h = ppiVar12;\n                    puVar7 = puStack128;\n                    if (ppiVar12[1] != NULL) {\n                        *ppiVar12[1] = *ppiVar12[1] + 1;\n                    }\n                    break;\n                case 0x6:\n                    *arg_10h = *0x4a95f0;\n                    break;\n                case 0x7:\n                    *arg_10h = *0x4a95f0;\n                    break;\n                case 0x8:\n                    if (*0x4a95f0 != NULL) {\n                        puVar18 = fcn.00411777(0x10);\n                        *arg_10h = puVar18;\n                        (*_sym.imp.OLEAUT32.dll_VariantClear)();\n                        in_stack_ffffff5c = *arg_10h;\n                        in_stack_ffffff58 = 0x42bbc4;\n                        arg_10h_00 = *0x4a95f0;\n                        iVar14 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n                        if (iVar14 < 0) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                            puVar18 = *arg_10h;\n                            arg_10h_00 = 0x42bbdd;\n                            fcn.0041137c();\n                            *arg_10h = NULL;\n                        }\n                    }\n                    break;\n                case 0x9:\n                    *arg_10h = *0x4a95f0;\n                    break;\n                case 0xa:\n                    puVar18 = 0x18;\n                    arg_10h_00 = 0x42bbfe;\n                    iVar14 = fcn.00411777(0x18);\n                    if (iVar14 == 0) {\ncode_r0x0042bc1d:\n                        *arg_10h = NULL;\n                    }\n                    else {\n                        in_stack_ffffff5c = 0x42bc16;\n                        puVar18 = *0x4a95f0;\n                        piVar13 = fcn.0044b52a(iVar14, *0x4a95f0);\n                        *arg_10h = piVar13;\n                    }\n                    break;\n                case 0xb:\n                    ppiVar12 = fcn.00411777(8);\n                    *arg_10h = ppiVar12;\n                    *ppiVar12 = **0x4a95f0;\n                    if (**arg_10h == 0) {\n                        puVar18 = 0x1;\n                        arg_10h_00 = 0x42bc7d;\n                        iVar14 = fcn.00411777(1);\n                        (*arg_10h)[1] = iVar14;\n                        *(*arg_10h)[1] = 0;\n                    }\n                    else {\n                        iVar14 = fcn.00411777(**arg_10h);\n                        (*arg_10h)[1] = iVar14;\n                        puVar18 = **arg_10h;\n                        in_stack_ffffff5c = (*arg_10h)[1];\n                        arg_10h_00 = *(*0x4a95f0 + 4);\n                        in_stack_ffffff58 = 0x42bc6e;\n                        fcn.00411000(in_stack_ffffff5c, arg_10h_00, puVar18);\n                    }\n                    break;\n                case 0xc:\n                    puVar18 = 0x14;\n                    arg_10h_00 = 0x42bc99;\n                    iVar14 = fcn.00411777(0x14);\n                    if (iVar14 == 0) goto code_r0x0042bc1d;\n                    in_stack_ffffff5c = 0x42bcb1;\n                    puVar18 = *0x4a95f0;\n                    piVar13 = fcn.0046fa03(iVar14, *0x4a95f0);\n                    *arg_10h = piVar13;\n                    break;\n                default:\n                    *arg_10h = *0x4a95f0;\n                    break;\n                case 0xbad1abe1:\n                    break;\n                }\n            }\n        }\n        else if (uStack120._1_1_ == '\\0') {\n            puVar18 = 0x18;\n            arg_10h_00 = 0x40ae14;\n            puVar6 = fcn.00411777(0x18);\n            if (puVar6 == NULL) {\n                puVar6 = NULL;\n            }\n            else {\n                in_stack_ffffff74 = in_stack_ffffff74 & 0xffffffff00000000;\n                puVar18 = 0x40ae31;\n                fcn.0040bc00();\n                puVar7 = puStack128;\n            }\n            *(puVar6 + 2) = puStack124;\n            puStack124 = puVar6;\n        }\n        else {\n            puVar18 = 0x4a95f0;\n            arg_10h_00 = 0x40ae90;\n            fcn.00409120(0x4a95f0);\n            puStack124 = puStack124 & 0xffff00ff;\n            puVar7 = puStack132;\n        }\n        puStack128 = puVar7 + 1;\n        puVar7 = arg_10h;\n        if ((puStack128 != 0x1) && (puVar7 = puStack124,  uStack120._1_1_ != '\\0')) {\n            puVar7 = *(puStack124 + 2);\n        }\n        puVar6 = *(*(arg_8h + 4))[*arg_ch];\n        puVar19 = *(puVar7 + 0xc);\n        in_stack_ffffff74 = in_stack_ffffff74 & 0xffffffff00000000 | ZEXT48(puVar6);\n        if (puVar19 != NULL) {\n            arg_10h_00 = 0x42bcd1;\n            puVar6 = unaff_EBX;\n            fcn.00442ef7(puVar19);\n            *(puVar7 + 0xc) = 0;\n            puVar18 = puVar19;\n            unaff_EBX = puVar6;\n        }\n        iVar14 = *(puVar7 + 1);\n        if ((iVar14 == 8) && (*puVar7 != 0)) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n            puVar18 = *puVar7;\n            arg_10h_00 = 0x42bcfa;\n            fcn.0041137c();\n            puVar6 = in_stack_ffffff74;\n        }\n        else if (iVar14 == 10) {\n            puVar19 = *puVar7;\n            if (puVar19 != NULL) {\n                arg_10h_00 = 0x42bd16;\n                puVar6 = unaff_EBX;\n                fcn.00443f54(puVar19);\n                puVar18 = puVar19;\n                unaff_EBX = puVar6;\n            }\n        }\n        else if (iVar14 == 5) {\n            puVar18 = 0x42bd26;\n            fcn.0040e5e0();\n            puVar6 = in_stack_ffffff74;\n        }\n        else if (iVar14 == 0xb) {\n            fcn.0041137c();\n            puVar18 = *puVar7;\n            arg_10h_00 = 0x42bd45;\n            fcn.0041137c();\n            puVar6 = in_stack_ffffff74;\n        }\n        else if ((iVar14 == 0xc) && (puVar19 = *puVar7,  puVar19 != NULL)) {\n            arg_10h_00 = 0x42bd61;\n            puVar6 = unaff_EBX;\n            fcn.0044b04b(puVar19);\n            puVar18 = puVar19;\n            unaff_EBX = puVar6;\n        }\n        *(puVar7 + 1) = 1;\n        *puVar7 = puVar6;\n        *arg_ch = *arg_ch + 1;\n    } while( true );\ncode_r0x0040afa9:\n    uStack112 = 0x16;\n    fcn.0040beb0();\n    puVar18 = puStack132;\n    if ((puStack128 != 0x1) && (puVar18 = puStack124,  uStack120._1_1_ != '\\0')) {\n        puVar18 = *(puStack124 + 2);\n    }\n    in_stack_ffffff58 = 0x40afe0;\n    arg_10h_00 = arg_8h;\n    arg_10h = unaff_EBX;\n    iVar14 = fcn.0040c490(iStack116, arg_8h, puVar18);\n    unaff_EBX = arg_10h;\n    if (iVar14 != 0) {\ncode_r0x0042c24b:\n        fcn.0044b5b4(in_stack_ffffff38);\n        fcn.00401500();\n        return 1;\n    }\n    goto code_r0x0040aaa0;\ncode_r0x0040af30:\n    piVar13 = in_stack_ffffff74 >> 0x20;\n    piVar11 = piVar13;\n    if (uStack100._1_1_ != '\\0') {\n        piVar11 = piVar13[1];\n    }\n    if (*piVar11 == 0x12) goto code_r0x0040af93;\n    if (uStack100._1_1_ != '\\0') {\n        piVar13 = piVar13[1];\n    }\n    if (*piVar13 == 0x14) goto code_r0x0042c1ea;\n    iVar14 = fcn.0040b890(&stack0xffffff5c);\n    if (iVar14 != 0) goto code_r0x0042c1d4;\n    uStack100._1_1_ = in_stack_ffffff74 >> 0x28;\n    goto code_r0x0040af30;\ncode_r0x0040af93:\n    fcn.0040c110();\n    goto code_r0x0040adbf;\ncode_r0x0042c1ea:\n    fcn.0045e1ee(unaff_ESI, 0x6d, puStack128);\n    goto code_r0x0042c246;\ncode_r0x0042c1d4:\n    fcn.0045e1ee(unaff_ESI, 0x6e, puStack128);\n    goto code_r0x0042c246;\ncode_r0x0040ad98:\n    if (uStack100._1_1_ == '\\0') {\n        puVar18 = 0x8;\n        arg_10h_00 = 0x40ada7;\n        puStack104 = fcn.00411777(8);\n        if (puStack104 == NULL) {\n            puStack104 = NULL;\n        }\n        else {\n            *puStack104 = uVar16;\n        }\n        puStack104[1] = puVar2;\n    }\n    else {\n        *puStack104 = uVar16;\n        uStack100 = uStack100 & 0xff;\n    }\n    iStack108 = iStack108 + 1;\ncode_r0x0040adbf:\n    arg_10h = puStack132;\n    if (((uVar16 != 7) && (uVar16 != 8)) || (puStack128 == NULL)) goto code_r0x0040aaa0;\n    fcn.0040d350();\n    fcn.0040bc00();\n    cVar3 = fcn.0040d110();\n    if (cVar3 == '\\0') {\ncode_r0x0042c0da:\n        if (in_stack_ffffff74 != 7) goto code_r0x0040b11a;\n    }\n    else if (in_stack_ffffff74 != 8) {\n        if (cVar3 != '\\0') goto code_r0x0040b11a;\n        goto code_r0x0042c0da;\n    }\n    arg_10h_00 = arg_8h;\n    iVar14 = fcn.00441acd(arg_8h, arg_ch);\n    if (iVar14 != 0) {\n        fcn.0045e1ee(puStack124, 0x6e, puStack104);\ncode_r0x0042c241:\n        fcn.004091e0();\ncode_r0x0042c246:\n        in_stack_ffffff38 = &stack0xffffff50;\n        goto code_r0x0042c24b;\n    }\n    if (unaff_ESI == 0x8) {\n        uStack96 = CONCAT31(uStack96._1_3_, 1);\n        in_stack_ffffff5c = uStack96;\n    }\n    else {\n        auStack89._1_4_ = auStack89._1_4_ & 0xffffff00;\n        in_stack_ffffff5c = auStack89._1_4_;\n    }\n    in_stack_ffffff58 = 0x42c128;\n    uVar15 = fcn.0040d350();\n    fcn.00452b3e(uVar15, in_stack_ffffff5c);\n    in_stack_ffffff54 = 0x42c137;\n    fcn.0040c110();\ncode_r0x0040b11a:\n    puVar18 = 0x40b123;\n    fcn.004091e0();\n    arg_10h = puStack132;\n    goto code_r0x0040aaa0;\n}\n",
        "token_count": 10630
    },
    "00410cd0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00410cd0(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int64_t iVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *unaff_ESI;\n    uint var_1h;\n    \n    if (unaff_ESI[3] < 6) {\n        return;\n    }\n    iVar3 = unaff_ESI[3] * 4;\n    iVar6 = fcn.00411777(-(iVar3 >> 0x20 != 0) | iVar3);\n    unaff_ESI[2] = iVar6;\n    if (0 < unaff_ESI[3]) {\n        iVar6 = *unaff_ESI;\n        iVar7 = 0;\n        do {\n            *(unaff_ESI[2] + iVar7 * 4) = iVar6;\n            iVar6 = *(iVar6 + 0x20);\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < unaff_ESI[3]);\n    }\n    do {\n        if (unaff_ESI[3] == 1 || unaff_ESI[3] + -1 < 0) {\n            return;\n        }\n        bVar4 = false;\n        iVar6 = 0;\n        do {\n            iVar7 = unaff_ESI[2];\n            puVar1 = iVar7 + iVar6 * 4;\n            cVar5 = fcn.00442f15(*(iVar7 + 4 + iVar6 * 4), *(iVar7 + iVar6 * 4));\n            if (cVar5 != '\\0') {\n                uVar2 = *puVar1;\n                *puVar1 = puVar1[1];\n                bVar4 = true;\n                *(unaff_ESI[2] + 4 + iVar6 * 4) = uVar2;\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < unaff_ESI[3] + -1);\n    } while (bVar4);\n    return;\n}\n",
        "token_count": 477
    },
    "0042edc9": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042edc9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar1 = 0;\n    do {\n        if (arg_8h <= *(iVar1 * 4 + 0x4852a0)) break;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 6);\n    puVar3 = arg_ch + iVar1;\n    for (iVar2 = iVar1; 0 < iVar2; iVar2 = iVar2 + -1) {\n        *puVar3 = arg_8h & 0x3f | 0x80;\n        puVar3 = puVar3 + -1;\n        arg_8h = arg_8h >> 6;\n    }\n    *puVar3 = *(iVar1 * 4 + 0x4852bc) | arg_8h;\n    return iVar1 + 1;\n}\n",
        "token_count": 229
    },
    "00432acf": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432acf(uint *arg_8h)\n\n{\n    if (arg_8h[2] == 6) {\n        return *arg_8h;\n    }\n    return 0;\n}\n",
        "token_count": 49
    },
    "00443d4c": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443d4c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    \n    puVar1 = arg_ch;\n    arg_ch = 0xffffffff;\n    if (arg_8h == 0) {\n        *puVar1 = *0x4a8710;\n        return 1;\n    }\n    if ((arg_8h != 5) && (arg_8h != 6)) {\n        iVar3 = arg_8h;\n        if ((((arg_8h == 3) || (arg_8h == 4)) ||\n            (cVar2 = fcn.0043475c(0x4a8710, arg_8h, &arg_ch),  iVar3 = arg_ch,  cVar2 != '\\0')) &&\n           ((*(iVar3 * 4 + 0x4a88c4) != 0 && (*(*(iVar3 * 4 + 0x4a88c4) + 4) != '\\0')))) {\n            var_30h = 0x30;\n            fcn.004130e0(&var_2ch, 0, 0x2c);\n            var_2ch = 4;\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(**(iVar3 * 4 + 0x4a88c4), arg_8h, 0, &var_30h);\n            if (iVar3 != 0) {\n                *puVar1 = var_1ch;\n                return 1;\n            }\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 397
    },
    "00443e26": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443e26(int32_t arg_8h, uint *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar2 = arg_10h;\n    arg_10h = 0xffffffff;\n    if ((arg_8h == 5) || (arg_8h == 6)) {\n        return 0;\n    }\n    if (((arg_8h == 3) || (arg_8h == 4)) ||\n       (cVar3 = fcn.0043475c(0x4a8710, arg_8h, &arg_10h),  arg_8h = arg_10h,  cVar3 != '\\0')) {\n        piVar1 = *(arg_8h * 4 + 0x4a88c4);\n        *puVar2 = 0;\n        if (piVar1 != NULL) {\n            iVar4 = *piVar1;\n            var_30h = 0x30;\n            fcn.004130e0(&var_2ch, 0, 0x2c);\n            if (iVar4 != 0) {\n                var_ch = fcn.00411777(0x208);\n                *arg_ch = var_ch;\n                var_2ch = 0x11;\n                var_8h = 0x104;\n                iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar4, arg_8h, 0, &var_30h);\n                if ((iVar4 != 0) && ((var_28h & 0x800) == 0)) {\n                    if ((var_24h & 3) == 0) {\n                        *puVar2 = *puVar2 | 0x40;\n                    }\n                    else {\n                        *puVar2 = *puVar2 | 0x80;\n                    }\n                    if ((var_24h & 0x8080) != 0) {\n                        *puVar2 = *puVar2 | 0x100;\n                    }\n                    if ((var_24h & 8) == 0) {\n                        *puVar2 = *puVar2 | 4;\n                    }\n                    else {\n                        *puVar2 = *puVar2 | 1;\n                    }\n                    if ((var_24h & 0x1000) != 0) {\n                        *puVar2 = *puVar2 | 0x200;\n                    }\n                    return 1;\n                }\n                fcn.0041137c(*arg_ch);\n            }\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 648
    },
    "0044a18d": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044a18d(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint16_t extraout_var;\n    uint32_t uVar3;\n    uint32_t unaff_ESI;\n    int32_t var_4h;\n    \n    piVar1 = arg_8h;\n    if (arg_8h == NULL) {\n        fcn.004453db(0x80070057);\n    }\n    else {\n        iVar2 = *arg_8h;\n        arg_8h = NULL;\n        unaff_ESI = 0x1d;\n        iVar2 = (**(iVar2 + 0x38))(piVar1, arg_ch, &arg_8h);\n        if (iVar2 < 0) {\n            fcn.00431416(&arg_8h);\n            return 0x1d;\n        }\n    }\n    var_4h = 0;\n    iVar2 = (**(*arg_8h + 0xc))(arg_8h, &var_4h);\n    uVar3 = unaff_ESI;\n    if (-1 < iVar2) {\n        if (var_4h == 0) goto code_r0x0044a227;\n        iVar2 = *(var_4h + 0x28);\n        if ((iVar2 == 6) || (iVar2 == 0)) {\n            uVar3 = *(var_4h + 0x40);\n            if (uVar3 == unaff_ESI) {\n                uVar3 = fcn.0044a18d(arg_8h, *(var_4h + 0x3c));\n                uVar3 = uVar3 & 0xffff;\n            }\n            else if (iVar2 == 0) {\n                uVar3 = 3;\n            }\n            else if (iVar2 == 3) {\n                uVar3 = 0xd;\n            }\n            else if (iVar2 == 4) {\n                uVar3 = 9;\n            }\n        }\n    }\n    if (var_4h != 0) {\n        (**(*arg_8h + 0x4c))(arg_8h, var_4h);\n    }\ncode_r0x0044a227:\n    fcn.00431416(&arg_8h);\n    return uVar3 & 0xffff | extraout_var << 0x10;\n}\n",
        "token_count": 541
    },
    "0044cae7": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0044cae7(uint *arg_8h, uint *arg_ch, uint8_t **arg_10h, int32_t *arg_14h, uint *arg_18h, uint *arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t *arg_28h)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    bool bVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    char cVar6;\n    uchar uVar7;\n    int16_t iVar8;\n    uint32_t uVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uchar uVar13;\n    uint8_t *puVar14;\n    uint arg_1ch_00;\n    int32_t iVar15;\n    uint32_t *puVar16;\n    uint8_t uVar17;\n    uint32_t uVar18;\n    uint *puVar19;\n    ushort *puVar20;\n    char *pcVar21;\n    uint *puVar22;\n    uint *puVar23;\n    int32_t *piVar24;\n    uint *puVar25;\n    uint var_e0h;\n    uint var_d5h;\n    uint var_c0h;\n    uint *var_b8h;\n    uint *var_b4h;\n    int32_t var_b0h;\n    uint var_ach;\n    uint *var_a4h;\n    uint *var_a0h;\n    int32_t var_9ch;\n    uint *var_98h;\n    uint var_94h;\n    uint8_t var_90h;\n    uint var_84h;\n    uint var_80h;\n    uint *var_74h;\n    uint32_t var_70h;\n    uint *var_6ch;\n    uint32_t var_68h;\n    int32_t var_64h;\n    uint *var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    int32_t var_54h;\n    uint *var_50h;\n    uint8_t var_49h;\n    uint *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint32_t var_24h;\n    uint *var_20h;\n    ushort *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_2ch = *arg_8h;\n    var_24h = var_2ch >> 0xb & 1;\n    var_b4h = var_2ch >> 9 & 1;\n    var_b8h = var_b4h ^ 1;\n    var_a4h = *arg_ch;\n    var_60h = 0xfffffffe;\n    var_48h = 0xfffffffe;\n    var_44h = 0xfffffffe;\n    var_38h = 0xfffffffe;\n    var_4h = *arg_10h;\n    var_40h = NULL;\n    var_30h = NULL;\n    var_b0h = 0;\n    var_64h = 0;\n    var_74h = var_a4h;\n    var_54h = 0;\n    var_9ch = 0;\n    var_10h = NULL;\n    var_5ch = NULL;\n    var_58h = NULL;\n    var_68h = (var_2ch & 1U) << 8;\n    puVar19 = var_a4h;\ncode_r0x0044cb75:\n    puVar23 = var_a4h;\n    var_8h = *var_4h;\n    if (arg_28h == NULL) {\n        uVar9 = *(arg_24h + 0x10) + 0xf9c;\n        if (uVar9 <= *(arg_24h + 0x24) && *(arg_24h + 0x24) != uVar9) {\n            *arg_10h = var_4h;\n            *arg_14h = 0x34;\n            return 0;\n        }\n    }\n    else {\n        if (*(arg_24h + 0x10) + 0xf9c < puVar19) {\n            *arg_10h = var_4h;\n            *arg_14h = 0x34;\n            return 0;\n        }\n        puVar22 = puVar19;\n        if (puVar19 < var_74h) {\n            puVar22 = var_74h;\n        }\n        if (0x7fffffeb - *arg_28h < puVar22 - var_74h) goto code_r0x0044f8f9;\n        *arg_28h = (*arg_28h - var_74h) + puVar22;\n        puVar19 = var_a4h;\n        if ((var_10h == NULL) || (puVar19 = puVar22,  var_10h <= var_a4h)) {\n            var_74h = puVar19;\n        }\n        else {\n            fcn.00416790(var_a4h, var_10h, puVar22 - var_10h);\n            puVar19 = puVar22 + (puVar23 - var_10h);\n            var_10h = puVar23;\n            var_74h = puVar19;\n        }\n    }\n    puVar23 = var_4h;\n    if ((var_54h != 0) && (var_8h != NULL)) {\n        if ((var_8h != 0x5c) || (*(var_4h + 1) != 'E')) {\n            if (var_5ch != NULL) {\n                if (arg_28h == NULL) {\n                    puVar10 = var_4h + (-*(arg_24h + 0x18) - CONCAT11(*(var_5ch + 2), *(var_5ch + 3)));\n                    *(var_5ch + 1) = puVar10 >> 8;\n                    *(var_5ch + 5) = puVar10;\n                }\n                var_5ch = NULL;\n            }\n            if ((var_2ch & 0x4000) != 0) {\n                *puVar19 = 0x53;\n                *(puVar19 + 1) = 0xff;\n                var_5ch = puVar19;\n                *(puVar19 + 2) = var_4h - *(arg_24h + 0x18) >> 8;\n                cVar6 = *(arg_24h + 0x18);\n                *(puVar19 + 1) = 0;\n                *(puVar19 + 3) = var_4h - cVar6;\n                puVar19 = puVar19 + 6;\n            }\n            goto code_r0x0044ccb1;\n        }\n        var_54h = 0;\n        var_4h = var_4h + 2;\n        goto code_r0x0044cb75;\n    }\n    if ((((var_8h == 0x2a) || (var_8h == 0x2b)) || (var_8h == 0x3f)) ||\n       ((var_8h == 0x7b && (iVar11 = fcn.0042fe05(var_4h + 1),  iVar11 != 0)))) {\n        var_14h = 0x1;\n    }\n    else {\n        var_14h = NULL;\n        if ((var_5ch != NULL) && (iVar11 = var_b0h + -1,  bVar3 = var_b0h < 1,  var_b0h = iVar11,  bVar3)) {\n            if (arg_28h == NULL) {\n                puVar10 = puVar23 + (-*(arg_24h + 0x18) - CONCAT11(*(var_5ch + 2), *(var_5ch + 3)));\n                *(var_5ch + 1) = puVar10 >> 8;\n                *(var_5ch + 5) = puVar10;\n                puVar23 = var_4h;\n            }\n            var_5ch = NULL;\n        }\n    }\n    var_28h = var_2ch & 8;\n    if (var_28h != NULL) {\n        puVar22 = puVar19;\n        if ((*(var_8h + *(arg_24h + 0xc)) & 1) == 0) {\n            if (var_8h == 0x23) {\n                cVar6 = *(puVar23 + 1);\n                puVar23 = puVar23 + 1;\n                while (var_4h = puVar23,  cVar6 != '\\0') {\n                    if (*(arg_24h + 0x58) == 0) {\n                        if (((puVar23 <= *(arg_24h + 0x1c) - *(arg_24h + 0x5c)) && (cVar6 == *(arg_24h + 0x60))) &&\n                           ((*(arg_24h + 0x5c) == 1 || (*(puVar23 + 1) == *(arg_24h + 0x61))))) goto code_r0x0044ce58;\n                    }\n                    else if ((puVar23 < *(arg_24h + 0x1c)) &&\n                            (iVar11 = fcn.0042efe8(puVar23, *(arg_24h + 0x58), *(arg_24h + 0x1c), arg_24h + 0x5c, \n                                                   var_24h),  iVar11 != 0)) {\ncode_r0x0044ce58:\n                        var_4h = puVar23 + *(arg_24h + 0x5c) + -1;\n                        puVar23 = var_4h;\n                        if (*var_4h != '\\0') goto code_r0x0044f8d7;\n                        break;\n                    }\n                    var_4h = puVar23 + 1;\n                    if (var_24h != 0) {\n                        uVar17 = *var_4h;\n                        while ((uVar17 & 0xc0) == 0x80) {\n                            var_4h = var_4h + 1;\n                            uVar17 = *var_4h;\n                        }\n                    }\n                    puVar23 = var_4h;\n                    cVar6 = *var_4h;\n                }\n                var_8h = NULL;\n                puVar23 = var_4h;\n            }\n            goto code_r0x0044ce75;\n        }\n        goto code_r0x0044f8d7;\n    }\ncode_r0x0044ce75:\n    if (((var_2ch & 0x4000) != 0) && (var_14h == NULL)) {\n        *puVar19 = 0x53;\n        *(puVar19 + 1) = 0xff;\n        var_5ch = puVar19;\n        *(puVar19 + 2) = puVar23 - *(arg_24h + 0x18) >> 8;\n        cVar6 = *(arg_24h + 0x18);\n        *(puVar19 + 1) = 0;\n        *(puVar19 + 3) = puVar23 - cVar6;\n        puVar19 = puVar19 + 6;\n        puVar23 = var_4h;\n    }\n    if (0x7c < var_8h) goto code_r0x0044ccb1;\n    // switch table (125 cases) at 0x44fd17\n    puVar22 = puVar19;\n    switch(*(*(var_8h + 0x44fd4b) * 4 + 0x44fd17)) {\n    case 0x44cf27:\n        if (((var_2ch & 2) != 0) && (var_38h == 0xfffffffe)) {\n            var_38h = 0xffffffff;\n        }\n        *puVar19 = 0x1a;\n        var_4h = var_4h + 1;\n        var_10h = NULL;\n        puVar19 = puVar19 + 1;\n        goto code_r0x0044cb75;\n    case 0x44cf53:\n        *puVar19 = 0x1b;\n        var_4h = var_4h + 1;\n        var_10h = NULL;\n        puVar19 = puVar19 + 1;\n        goto code_r0x0044cb75;\n    case 0x44cf6c:\n        if (var_38h == 0xfffffffe) {\n            var_38h = 0xffffffff;\n        }\n        var_48h = var_38h;\n        *puVar19 = (var_2ch & 4U | 0x30) >> 2;\n        var_10h = puVar19;\n        var_60h = var_44h;\n        var_4h = var_4h + 1;\n        puVar19 = puVar19 + 1;\n        goto code_r0x0044cb75;\n    case 0x44cfa4:\n        if ((*(arg_24h + 0x44) & 0x2000000) != 0) {\n            *arg_14h = 0x40;\n            *arg_10h = puVar23;\n            return 0;\n        }\n        break;\n    case 0x44cfc8:\n        cVar6 = *(puVar23 + 1);\n        var_10h = puVar19;\n        if ((((cVar6 == ':') || (cVar6 == '.')) || (cVar6 == '=')) &&\n           (iVar11 = fcn.0042f2d5(puVar23, &var_98h),  iVar11 != 0)) {\n            cVar6 = *(puVar23 + 1);\n            *arg_10h = puVar23;\n            *arg_14h = ((cVar6 != ':') - 1 & 0xffffffee) + 0x1f;\n            return 0;\n        }\n        puVar22 = NULL;\n        var_48h = puVar22;\n        while( true ) {\n            while( true ) {\n                var_4h = puVar23 + 1;\n                var_8h = *var_4h;\n                if (var_8h != 0x5c) break;\n                puVar23 = puVar23 + 2;\n                if (*puVar23 != 'E') {\n                    iVar11 = fcn.00416af1(puVar23, 0x48bcf8, 3);\n                    if (iVar11 != 0) goto code_r0x0044d073;\n                    puVar22 = var_48h;\n                    puVar23 = var_4h + 3;\n                }\n            }\n            if ((puVar22 != NULL) || (var_8h != 0x5e)) break;\n            puVar22 = 0x1;\n            puVar23 = var_4h;\n            var_48h = puVar22;\n        }\n        if ((var_8h != 0x5d) || ((*(arg_24h + 0x44) & 0x2000000) == 0)) {\ncode_r0x0044d073:\n            var_20h = NULL;\n            var_ch = NULL;\n            var_14h = 0xffffffff;\n            fcn.004130e0(&var_94h, 0, 0x20);\n            puVar23 = puVar19 + 1;\n            var_1ch = NULL;\n            var_50h = puVar23;\n            if (var_8h == NULL) {\ncode_r0x0044f9fb:\n                *arg_14h = 6;\n                *arg_10h = var_4h;\n                return 0;\n            }\ncode_r0x0044d0a9:\n            if ((var_24h != 0) && (0x7f < var_8h)) {\n                uVar17 = *var_4h;\n                var_8h = uVar17;\n                if (0xbf < var_8h) {\n                    if ((uVar17 & 0x20) == 0) {\n                        var_8h = (var_8h & 0x1f) << 6 | *(var_4h + 1) & 0x3f;\n                        var_4h = var_4h + 1;\n                    }\n                    else if ((uVar17 & 0x10) == 0) {\n                        var_8h = *(var_4h + 2) & 0x3f | (*(var_4h + 1) & 0x3f | (var_8h & 0xf) << 6) << 6;\n                        var_4h = var_4h + 2;\n                    }\n                    else {\n                        uVar9 = *(var_4h + 1) & 0x3f;\n                        uVar18 = *(var_4h + 2) & 0x3f;\n                        if ((uVar17 & 8) == 0) {\n                            var_8h = *(var_4h + 3) & 0x3f | ((uVar9 | (var_8h & 7) << 6) << 6 | uVar18) << 6;\n                            var_4h = var_4h + 3;\n                        }\n                        else if ((uVar17 & 4) == 0) {\n                            var_8h = (*(var_4h + 3) & 0x3f | ((uVar9 | (var_8h & 3) << 6) << 6 | uVar18) << 6) << 6 |\n                                     *(var_4h + 1) & 0x3f;\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_8h = *(var_4h + 5) & 0x3f |\n                                     ((((uVar9 | (var_8h & 1) << 6) << 6 | uVar18) << 6 | *(var_4h + 3) & 0x3f) << 6 |\n                                     *(var_4h + 1) & 0x3f) << 6;\n                            var_4h = var_4h + 5;\n                        }\n                    }\n                }\n            }\n            puVar22 = var_4h;\n            if (arg_28h != NULL) {\n                *arg_28h = puVar23 + (*arg_28h - var_50h);\n                puVar23 = var_50h;\n            }\n            if (var_54h != 0) {\n                if ((var_8h == 0x5c) && (*(var_4h + 1) == 'E')) {\n                    var_54h = 0;\n                    puVar22 = var_4h + 1;\n                    goto code_r0x0044d5f2;\n                }\ncode_r0x0044d393:\n                cVar6 = *(puVar22 + 1);\n                while ((cVar6 == '\\\\' && (*(puVar22 + 2) == 'E'))) {\n                    var_4h = puVar22 + 2;\n                    cVar6 = *(puVar22 + 3);\n                    var_54h = 0;\n                    puVar22 = puVar22 + 2;\n                }\n                var_34h = puVar22;\n                if ((var_8h == 0xd) || (var_8h == 0xa)) {\n                    *(arg_24h + 0x48) = *(arg_24h + 0x48) | 0x20;\n                }\n                if ((var_54h == 0) && (*(puVar22 + 1) == '-')) {\n                    var_4h = puVar22 + 2;\n                    cVar6 = *var_4h;\n                    while (cVar6 == '\\\\') {\n                        if (*(var_4h + 1) != 'E') {\n                            if (*var_4h == '\\\\') goto code_r0x0044d8c7;\n                            break;\n                        }\n                        var_4h = var_4h + 2;\n                        cVar6 = *var_4h;\n                    }\n                    goto code_r0x0044d8f2;\n                }\n                goto code_r0x0044db7a;\n            }\n            if (var_8h == 0x5b) {\n                cVar6 = *(var_4h + 1);\n                if ((((cVar6 == ':') || (cVar6 == '.')) || (cVar6 == '=')) &&\n                   (iVar11 = fcn.0042f2d5(var_4h, &var_98h),  iVar11 != 0)) {\n                    var_28h = *(arg_24h + 8);\n                    if (*(puVar22 + 1) != ':') {\n                        *arg_10h = puVar22;\n                        *arg_14h = 0x1f;\n                        return 0;\n                    }\n                    var_4h = puVar22 + 2;\n                    cVar6 = *var_4h;\n                    if (cVar6 == '^') {\n                        var_4h = puVar22 + 3;\n                        var_20h = 0x1;\n                    }\n                    var_34h = cVar6 == '^';\n                    iVar11 = fcn.0042f284(var_4h, var_98h - var_4h);\n                    if (iVar11 < 0) {\n                        *arg_14h = 0x1e;\n                        *arg_10h = var_4h;\n                        return 0;\n                    }\n                    if (((var_2ch & 1) != 0) && (iVar11 < 3)) {\n                        iVar11 = 0;\n                    }\n                    fcn.00411000(&var_e0h, *(iVar11 * 0xc + 0x486070) + var_28h, 0x20);\n                    iVar15 = *(iVar11 * 0xc + 0x486074);\n                    iVar11 = *(iVar11 * 0xc + 0x486078);\n                    if (-1 < iVar15) {\n                        iVar12 = 0;\n                        if (iVar11 < 0) {\n                            do {\n                                *(&var_e0h + iVar12) = *(&var_e0h + iVar12) & ~*(var_28h + iVar12 + iVar15);\n                                iVar12 = iVar12 + 1;\n                            } while (iVar12 < 0x20);\n                        }\n                        else {\n                            do {\n                                *(&var_e0h + iVar12) = *(&var_e0h + iVar12) | *(var_28h + iVar12 + iVar15);\n                                iVar12 = iVar12 + 1;\n                            } while (iVar12 < 0x20);\n                        }\n                    }\n                    if (iVar11 < 0) {\n                        iVar11 = -iVar11;\n                    }\n                    if (iVar11 == 1) {\n                        var_e0h._1_1_ = var_e0h._1_1_ & 0xc3;\n                    }\n                    else if (iVar11 == 2) {\n                        var_d5h._0_1_ = var_d5h & 0x7f;\n                    }\n                    iVar11 = 0;\n                    if (var_34h == NULL) {\n                        do {\n                            *(&var_94h + iVar11) = *(&var_94h + iVar11) | *(&var_e0h + iVar11);\n                            iVar11 = iVar11 + 1;\n                        } while (iVar11 < 0x20);\n                        var_ch = 0xa;\n                        puVar22 = var_98h + 1;\n                    }\n                    else {\n                        do {\n                            *(&var_94h + iVar11) = *(&var_94h + iVar11) | ~*(&var_e0h + iVar11);\n                            iVar11 = iVar11 + 1;\n                        } while (iVar11 < 0x20);\n                        var_ch = 0xa;\n                        puVar22 = var_98h + 1;\n                    }\n                    goto code_r0x0044d5f2;\n                }\n                goto code_r0x0044d393;\n            }\n            if (var_8h != 0x5c) goto code_r0x0044d393;\n            var_8h = fcn.0042fe8e(&var_4h, arg_14h, *(arg_24h + 0x34), var_2ch, 1);\n            puVar25 = var_ch;\n            if (*arg_14h == 0) {\n                puVar22 = var_4h;\n                if (var_8h == 0xfffffffb) {\n                    var_8h = 0x8;\n                    goto code_r0x0044d393;\n                }\n                if (var_8h == 0xffffffe6) {\n                    if ((*(var_4h + 1) == '\\\\') && (*(var_4h + 2) == 'E')) {\n                        puVar22 = var_4h + 2;\n                    }\n                    else {\n                        var_54h = 1;\n                    }\n                    goto code_r0x0044d5f2;\n                }\n                if (var_8h == 0xffffffe7) goto code_r0x0044d5f2;\n                if (-1 < var_8h) goto code_r0x0044d393;\n                puVar14 = *(arg_24h + 8);\n                var_ch = var_ch + 2;\n    // switch table (16 cases) at 0x44fdcb\n                switch(-var_8h) {\n                case 6:\n                    var_20h = 0x1;\n                    iVar11 = 0;\n                    do {\n                        *(&var_94h + iVar11) = *(&var_94h + iVar11) | ~puVar14[iVar11 + 0x40];\n                        iVar11 = iVar11 + 1;\n                    } while (iVar11 < 0x20);\n                    break;\n                case 7:\n                    iVar11 = 0;\n                    do {\n                        *(&var_94h + iVar11) = *(&var_94h + iVar11) | puVar14[iVar11 + 0x40];\n                        iVar11 = iVar11 + 1;\n                    } while (iVar11 < 0x20);\n                    break;\n                case 8:\n                    iVar11 = 0;\n                    var_20h = 0x1;\n                    do {\n                        puVar1 = &var_94h + iVar11;\n                        *puVar1 = *puVar1 | ~puVar1[puVar14 - &var_94h];\n                        iVar11 = iVar11 + 1;\n                    } while (iVar11 < 0x20);\n                    var_94h._1_1_ = var_94h._1_1_ | 8;\n                    break;\n                case 9:\n                    var_94h._0_1_ = var_94h | *puVar14;\n                    var_94h._1_1_ = var_94h._1_1_ | puVar14[1] & 0xf7;\n                    iVar11 = 2;\n                    do {\n                        *(&var_94h + iVar11) = *(&var_94h + iVar11) | puVar14[iVar11];\n                        iVar11 = iVar11 + 1;\n                    } while (iVar11 < 0x20);\n                    break;\n                case 10:\n                    var_20h = 0x1;\n                    iVar11 = 0;\n                    do {\n                        *(&var_94h + iVar11) = *(&var_94h + iVar11) | ~puVar14[iVar11 + 0xa0];\n                        iVar11 = iVar11 + 1;\n                    } while (iVar11 < 0x20);\n                    break;\n                case 0xb:\n                    iVar11 = 0;\n                    do {\n                        *(&var_94h + iVar11) = *(&var_94h + iVar11) | puVar14[iVar11 + 0xa0];\n                        iVar11 = iVar11 + 1;\n                    } while (iVar11 < 0x20);\n                    break;\n                default:\n                    if ((var_2ch & 0x40) != 0) {\n                        *arg_10h = var_4h;\n                        *arg_14h = 7;\n                        return 0;\n                    }\n                    var_ch = puVar25;\n                    var_8h = *var_4h;\n                    goto code_r0x0044d393;\n                case 0x12:\n                    iVar11 = 0;\n                    do {\n                        uVar17 = 0xff;\n                        if (iVar11 == 1) {\n                            uVar17 = 0xfd;\n                        }\n                        else if ((iVar11 == 4) || (iVar11 == 0x14)) {\n                            uVar17 = 0xfe;\n                        }\n                        *(&var_94h + iVar11) = *(&var_94h + iVar11) | uVar17;\n                        iVar11 = iVar11 + 1;\n                    } while (iVar11 < 0x20);\n                    if (var_24h == 0) break;\n                    *puVar23 = 2;\n                    var_1ch = 0x1;\n                    iVar11 = fcn.0042edc9(0x100, puVar23 + 1);\n                    puVar10 = puVar23 + 1 + iVar11;\n                    iVar11 = fcn.0042edc9(0x167f, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    *puVar10 = 2;\n                    puVar10 = puVar10 + 1;\n                    iVar11 = fcn.0042edc9(0x1681, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    iVar11 = fcn.0042edc9(0x180d, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    *puVar10 = 2;\n                    puVar10 = puVar10 + 1;\n                    iVar11 = fcn.0042edc9(0x180f, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    iVar11 = fcn.0042edc9(0x1fff, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    *puVar10 = 2;\n                    puVar10 = puVar10 + 1;\n                    iVar11 = fcn.0042edc9(0x200b, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    iVar11 = fcn.0042edc9(0x202e, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    *puVar10 = 2;\n                    puVar10 = puVar10 + 1;\n                    iVar11 = fcn.0042edc9(0x2030, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    iVar11 = fcn.0042edc9(0x205e, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    *puVar10 = 2;\n                    puVar10 = puVar10 + 1;\n                    iVar11 = fcn.0042edc9(0x2060, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    iVar11 = fcn.0042edc9(0x2fff, puVar10);\n                    puVar10 = puVar10 + iVar11;\n                    *puVar10 = 2;\n                    iVar11 = fcn.0042edc9(0x3001, puVar10 + 1);\n                    puVar10 = puVar10 + 1 + iVar11;\n                    iVar11 = fcn.0042edc9(0x7fffffff, puVar10);\n                    goto code_r0x0044d5ed;\n                case 0x13:\n                    var_94h._1_1_ = var_94h._1_1_ | 2;\n                    var_90h = var_90h | 1;\n                    var_80h._0_1_ = var_80h | 1;\n                    if (var_24h != 0) {\n                        *puVar23 = 1;\n                        var_1ch = 0x1;\n                        iVar11 = fcn.0042edc9(0x1680, puVar23 + 1);\n                        puVar10 = puVar23 + 1 + iVar11;\n                        *puVar10 = 1;\n                        puVar10 = puVar10 + 1;\n                        iVar11 = fcn.0042edc9(0x180e, puVar10);\n                        puVar10 = puVar10 + iVar11;\n                        *puVar10 = 2;\n                        puVar10 = puVar10 + 1;\n                        iVar11 = fcn.0042edc9(0x2000, puVar10);\n                        puVar10 = puVar10 + iVar11;\n                        iVar11 = fcn.0042edc9(0x200a, puVar10);\n                        puVar10 = puVar10 + iVar11;\n                        *puVar10 = 1;\n                        puVar10 = puVar10 + 1;\n                        iVar11 = fcn.0042edc9(0x202f, puVar10);\n                        puVar10 = puVar10 + iVar11;\n                        *puVar10 = 1;\n                        puVar10 = puVar10 + 1;\n                        iVar11 = fcn.0042edc9(0x205f, puVar10);\n                        puVar10[iVar11] = 1;\n                        puVar10 = puVar10 + iVar11 + 1;\n                        iVar11 = fcn.0042edc9(0x3000, puVar10);\n                        goto code_r0x0044d5ed;\n                    }\n                    break;\n                case 0x14:\n                    iVar11 = 0;\n                    do {\n                        uVar17 = 0xff;\n                        if (iVar11 == 1) {\n                            uVar17 = 0xc3;\n                        }\n                        else if (iVar11 == 0x10) {\n                            uVar17 = 0xdf;\n                        }\n                        *(&var_94h + iVar11) = *(&var_94h + iVar11) | uVar17;\n                        iVar11 = iVar11 + 1;\n                    } while (iVar11 < 0x20);\n                    if (var_24h != 0) {\n                        *puVar23 = 2;\n                        var_1ch = 0x1;\n                        iVar11 = fcn.0042edc9(0x100, puVar23 + 1);\n                        puVar10 = puVar23 + 1 + iVar11;\n                        iVar11 = fcn.0042edc9(0x2027, puVar10);\n                        puVar10 = puVar10 + iVar11;\n                        *puVar10 = 2;\n                        iVar11 = fcn.0042edc9(0x2029, puVar10 + 1);\n                        puVar10 = puVar10 + 1 + iVar11;\n                        iVar11 = fcn.0042edc9(0x7fffffff, puVar10);\n                        goto code_r0x0044d5ed;\n                    }\n                    break;\n                case 0x15:\n                    var_94h._1_1_ = var_94h._1_1_ | 0x3c;\n                    var_84h._0_1_ = var_84h | 0x20;\n                    if (var_24h != 0) {\n                        *puVar23 = 2;\n                        var_1ch = 0x1;\n                        iVar11 = fcn.0042edc9(0x2028, puVar23 + 1);\n                        puVar10 = puVar23 + 1 + iVar11;\n                        iVar11 = fcn.0042edc9(0x2029, puVar10);\n                        goto code_r0x0044d5ed;\n                    }\n                }\n                goto code_r0x0044d5f2;\n            }\n            goto code_r0x0044e8fd;\n        }\n        *puVar19 = (-(puVar22 != NULL) & 0x9aU) + 0x73;\n        if (var_38h == 0xfffffffe) {\n            var_38h = 0xffffffff;\n        }\n        var_4h = puVar23 + 2;\n        var_48h = var_38h;\n        puVar19 = puVar19 + 1;\n        goto code_r0x0044cb75;\n    case 0x44dd1d:\n        if (var_14h != NULL) {\n            var_4h = fcn.0042fd6c(puVar23 + 1, &var_40h, &var_30h, arg_14h);\n            puVar23 = var_4h;\n            if (*arg_14h != 0) goto code_r0x0044e8fd;\n            goto code_r0x0044dd77;\n        }\n        break;\n    case 0x44dd50:\n        var_30h = 0xffffffff;\n        goto code_r0x0044dd70;\n    case 0x44dd59:\n        var_40h = 0x1;\n        var_30h = 0xffffffff;\n        goto code_r0x0044dd77;\n    case 0x44dd69:\n        var_30h = 0x1;\ncode_r0x0044dd70:\n        var_40h = NULL;\ncode_r0x0044dd77:\n        puVar22 = var_10h;\n        if (var_10h == NULL) {\n            *arg_10h = puVar23;\n            *arg_14h = 9;\n            return 0;\n        }\n        if (var_40h == NULL) {\n            var_38h = var_48h;\n            var_44h = var_60h;\n        }\n        var_28h = NULL;\n        var_70h = -(var_40h != var_30h) & 0x200;\n        var_20h = NULL;\n        var_3ch = var_10h;\n        if (*(puVar23 + 1) == '+') {\n            puVar23 = puVar23 + 1;\n            var_20h = 0x1;\n            var_18h = NULL;\n            var_4h = puVar23;\n        }\n        else {\n            var_18h = var_b4h;\n            if (*(puVar23 + 1) == '?') {\n                puVar23 = puVar23 + 1;\n                var_18h = var_b8h;\n                var_4h = puVar23;\n            }\n        }\n        uVar17 = *var_10h;\n        var_49h = uVar17;\n        if ((uVar17 == 0x1c) || (uVar17 == 0x1d)) {\n            if ((var_24h == 0) || (puVar14 = puVar19 + -1,  (*(puVar19 + -1) & 0x80) == 0)) {\n                var_8h = *(puVar19 + -1);\n                if (1 < var_40h) {\n                    var_44h = *(arg_24h + 0x4c) | var_8h | var_68h;\n                }\n            }\n            else {\n                uVar17 = *puVar14;\n                while ((uVar17 & 0xc0) == 0x80) {\n                    puVar1 = puVar14 + -1;\n                    puVar14 = puVar14 + -1;\n                    uVar17 = *puVar1;\n                }\n                var_8h = puVar19 - puVar14;\n                fcn.00411000(&var_c0h, puVar14, var_8h);\n                var_8h = var_8h | 0x80;\n                puVar23 = var_4h;\n            }\n            if ((var_20h == NULL) && (var_30h < 0)) {\n                iVar11 = fcn.0043efe4(var_10h, var_24h, puVar23 + 1, var_2ch, arg_24h);\n                puVar23 = var_4h;\njoined_r0x0044e3f2:\n                var_4h = puVar23;\n                if (iVar11 != 0) {\n                    var_20h = 0x1;\n                    var_18h = NULL;\n                }\n            }\ncode_r0x0044e405:\n            if ((*var_10h == '\\x10') || (*var_10h == '\\x0f')) {\n                var_14h = *(var_10h + 1);\n                var_ch = *(var_10h + 2);\n            }\n            else {\n                var_ch = 0xffffffff;\n                var_14h = 0xffffffff;\n            }\n            puVar22 = var_10h;\n            if (var_30h != NULL) {\n                var_18h = var_18h + var_28h;\n                cVar6 = var_18h;\n                if (var_40h == NULL) {\n                    if (var_30h == 0xffffffff) {\n                        *var_10h = cVar6 + '\\x1f';\n                        puVar19 = var_10h + 1;\n                    }\n                    else if (var_30h == 0x1) {\n                        *var_10h = cVar6 + '#';\n                        puVar19 = var_10h + 1;\n                    }\n                    else {\n                        *var_10h = cVar6 + '%';\n                        *(var_10h + 1) = var_30h >> 8;\n                        puVar19 = var_10h;\ncode_r0x0044e5ac:\n                        *(puVar19 + 2) = var_30h;\n                        puVar19 = puVar19 + 3;\n                    }\n                }\n                else if (var_40h == 0x1) {\n                    if (var_30h == 0xffffffff) {\n                        *var_10h = cVar6 + '!';\n                        puVar19 = var_10h + 1;\n                    }\n                    else {\n                        puVar22 = puVar19;\n                        if (var_30h == 0x1) goto code_r0x0044e717;\n                        *puVar19 = cVar6 + '%';\n                        *(puVar19 + 1) = var_30h + -1 >> 8;\n                        *(puVar19 + 2) = var_30h + -1;\n                        puVar19 = puVar19 + 3;\n                    }\n                }\n                else {\n                    *var_10h = var_28h + '\\'';\n                    *(var_10h + 1) = var_40h >> 8;\n                    *(var_10h + 2) = var_40h;\n                    puVar19 = var_10h + 3;\n                    if (var_30h < 0) {\n                        if ((var_24h == 0) || (var_8h < 0x80)) {\n                            *puVar19 = var_8h._0_1_;\n                            puVar19 = var_10h + 1;\n                            if (-1 < var_14h) {\n                                *puVar19 = var_14h;\n                                *(var_10h + 5) = var_ch;\n                                puVar19 = var_10h + 6;\n                            }\n                            *puVar19 = cVar6 + '\\x1f';\n                            puVar19 = puVar19 + 1;\n                        }\n                        else {\n                            uVar9 = var_8h & 7;\n                            fcn.00411000(puVar19, &var_c0h, uVar9);\n                            pcVar21 = puVar19 + uVar9;\n                            *pcVar21 = var_18h + '\\x1f';\n                            puVar19 = pcVar21 + 1;\n                        }\n                    }\n                    else if (var_30h != var_40h) {\n                        if ((var_24h == 0) || (var_8h < 0x80)) {\n                            *puVar19 = var_8h._0_1_;\n                            puVar19 = var_10h + 1;\n                        }\n                        else {\n                            uVar9 = var_8h & 7;\n                            fcn.00411000(puVar19, &var_c0h, uVar9);\n                            puVar19 = puVar19 + uVar9;\n                        }\n                        if (-1 < var_14h) {\n                            *puVar19 = var_14h._0_1_;\n                            *(puVar19 + 1) = var_ch;\n                            puVar19 = puVar19 + 2;\n                        }\n                        var_30h = var_30h - var_40h;\n                        if (var_30h != 0x1) {\n                            *puVar19 = var_18h + '%';\n                            *(puVar19 + 1) = var_30h >> 8;\n                            goto code_r0x0044e5ac;\n                        }\n                        *puVar19 = var_18h + '#';\n                        puVar19 = puVar19 + 1;\n                    }\n                }\n                if ((var_24h == 0) || (var_8h < 0x80)) {\n                    *puVar19 = var_8h._0_1_;\ncode_r0x0044e5e1:\n                    puVar19 = puVar19 + 1;\n                    puVar23 = var_4h;\n                }\n                else {\n                    uVar9 = var_8h & 7;\n                    fcn.00411000(puVar19, &var_c0h, uVar9);\n                    puVar19 = puVar19 + uVar9;\n                    puVar23 = var_4h;\n                }\n                goto code_r0x0044e5e8;\n            }\n        }\n        else {\n            if (uVar17 == 0x1e) {\n                uVar17 = *(var_10h + 1);\n                var_28h = 0xd;\njoined_r0x0044de15:\n                var_8h = uVar17;\n                if ((var_20h == NULL) && (var_30h < 0)) {\n                    iVar11 = fcn.0043efe4(var_10h, var_24h, puVar23 + 1, var_2ch, arg_24h);\n                    puVar23 = var_4h;\n                    goto joined_r0x0044e3f2;\n                }\n                goto code_r0x0044e405;\n            }\n            if (uVar17 < 0x17) {\n                var_28h = 0x1a;\n                goto joined_r0x0044de15;\n            }\n            if ((((uVar17 == 0x4e) || (uVar17 == 0x4f)) || (uVar17 == 0x50)) || (uVar17 == 0x51)) {\n                if (var_30h != NULL) {\n                    cVar6 = var_18h;\n                    if (var_40h == NULL) {\n                        if (var_30h == 0xffffffff) {\n                            *puVar19 = cVar6 + 'F';\n                        }\n                        else {\n                            if (var_30h != 0x1) goto code_r0x0044e33b;\n                            *puVar19 = cVar6 + 'J';\n                        }\n                    }\n                    else {\n                        if ((var_40h != 0x1) || (var_30h != 0xffffffff)) {\ncode_r0x0044e33b:\n                            *puVar19 = cVar6 + 'L';\n                            *(puVar19 + 1) = var_40h >> 8;\n                            *(puVar19 + 2) = var_40h;\n                            if (var_30h == 0xffffffff) {\n                                var_30h = NULL;\n                            }\n                            *(puVar19 + 3) = var_30h >> 8;\n                            *(puVar19 + 1) = var_30h;\n                            puVar19 = puVar19 + 5;\n                            puVar23 = var_4h;\n                            goto code_r0x0044e5e8;\n                        }\n                        *puVar19 = cVar6 + 'H';\n                    }\n                    goto code_r0x0044e5e1;\n                }\n                var_10h = var_30h;\n                *(arg_24h + 0x4c) = *(arg_24h + 0x4c) | var_70h;\n                var_4h = puVar23 + 1;\n                puVar19 = puVar22;\n                goto code_r0x0044cb75;\n            }\n            if (((uVar17 != 0x5e) && (uVar17 != 0x5f)) && ((uVar17 != 0x5d && (uVar17 != 0x60)))) {\n                puVar22 = puVar19;\n                if (uVar17 != 0x73) {\n                    *arg_10h = puVar23;\n                    *arg_14h = 0xb;\n                    return 0;\n                }\n                goto code_r0x0044e717;\n            }\n            var_ch = puVar19 - var_10h;\n            var_14h = NULL;\n            var_1ch = NULL;\n            if ((uVar17 == 0x60) && (*(var_10h + 3) == 'h')) {\n                *arg_14h = 0x37;\n                *arg_10h = puVar23;\n                return 0;\n            }\n            if (var_30h == 0xffffffff) {\n                do {\n                    var_34h = puVar22 + CONCAT11(*(puVar22 + 1), *(puVar22 + 2));\n                    puVar22 = var_34h;\n                } while (*var_34h != 'U');\n                var_14h = puVar19 - var_34h;\n            }\n            if (var_40h == NULL) {\n                *puVar19 = 0;\n                if (var_30h < 2) {\n                    fcn.0043fbac(var_10h, 1, var_24h, arg_24h, var_58h);\n                    puVar22 = var_10h + 1;\n                    fcn.00416790(puVar22, var_10h, var_ch);\n                    puVar19 = puVar19 + 1;\n                    puVar23 = var_4h;\n                    if (var_30h == NULL) {\n                        *var_10h = 0x76;\n                        puVar22 = puVar19;\n                        goto code_r0x0044e717;\n                    }\n                    var_30h = var_30h + -1;\n                    *var_10h = var_18h + 'i';\n                    var_10h = puVar22;\n                }\n                else {\n                    fcn.0043fbac(var_10h, 4, var_24h, arg_24h, var_58h);\n                    fcn.00416790(var_10h + 1, var_10h, var_ch);\n                    *var_10h = var_18h + 'i';\n                    *(var_10h + 1) = 0x5e;\n                    *(var_10h + 2) = 0;\n                    var_1ch = var_10h + 2;\n                    var_10h = var_10h + 1;\n                    puVar19 = puVar19 + 1;\n                    var_30h = var_30h + -1;\n                    puVar23 = var_4h;\n                }\n            }\n            else {\n                if (1 < var_40h) {\n                    if (arg_28h == NULL) {\n                        if ((var_9ch != 0) && (var_44h < 0)) {\n                            var_44h = var_38h;\n                        }\n                        if (1 < var_40h) {\n                            var_34h = var_40h + -1;\n                            do {\n                                puVar23 = var_58h;\n                                var_28h = *(arg_24h + 0x24);\n                                fcn.00411000(puVar19, var_10h, var_ch);\n                                for (; puVar23 < var_28h; puVar23 = puVar23 + 2) {\n                                    **(arg_24h + 0x24) = CONCAT11(*puVar23, *(puVar23 + 1)) + var_ch >> 8;\n                                    *(*(arg_24h + 0x24) + 1) = *(puVar23 + 1) + var_ch;\n                                    *(arg_24h + 0x24) = *(arg_24h + 0x24) + 2;\n                                }\n                                var_58h = var_28h;\n                                puVar19 = puVar19 + var_ch;\n                                var_34h = var_34h + -1;\n                                puVar23 = var_4h;\n                            } while (var_34h != NULL);\n                        }\n                    }\n                    else {\n                        var_34h = (var_40h + -1) * var_64h;\n                        iVar4 = (var_40h + -1) * var_64h;\n                        if ((iVar4 >> 0x20 != 0 && -1 < iVar4) ||\n                           (((-1 < iVar4 && (0x7fffffff < iVar4)) ||\n                            (var_50h = 0x7fffffeb - *arg_28h,  var_50h < var_34h)))) {\n                            *arg_10h = puVar23;\n                            *arg_14h = 0x14;\n                            return 0;\n                        }\n                        *arg_28h = *arg_28h + var_34h;\n                    }\n                }\n                if (0 < var_30h) {\n                    var_30h = var_30h - var_40h;\n                }\n            }\n            if (var_30h < 0) {\n                pcVar21 = puVar19 - var_14h;\n                var_50h = pcVar21 + -CONCAT11(pcVar21[1], pcVar21[2]);\n                *pcVar21 = var_18h + 'V';\n                puVar23 = var_4h;\n                if ((arg_28h == NULL) && (puVar22 = var_50h,  *var_50h != ']')) {\n                    do {\n                        var_28h = puVar22;\n                        iVar11 = fcn.0043fc4f(var_28h, pcVar21, var_24h, arg_24h);\n                        puVar23 = var_4h;\n                        if (iVar11 != 0) {\n                            *var_50h = *var_50h + '\\x03';\n                            break;\n                        }\n                        var_28h = var_28h + CONCAT11(*(var_28h + 1), *(var_28h + 2));\n                        puVar22 = var_28h;\n                    } while (*var_28h == 'T');\n                }\n            }\n            else {\n                if ((arg_28h == NULL) || (var_30h < 1)) {\n                    var_14h = var_30h + -1;\n                    if (-1 < var_14h) {\n                        var_49h = var_18h + 0x69;\n                        do {\n                            puVar23 = *(arg_24h + 0x24);\n                            *puVar19 = var_49h;\n                            puVar22 = puVar19 + 1;\n                            if (var_14h != NULL) {\n                                *puVar22 = 0x5e;\n                                puVar20 = puVar19 + 2;\n                                if (var_1ch == NULL) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = puVar20 - var_1ch;\n                                }\n                                *puVar20 = iVar8 >> 8;\n                                *(puVar19 + 3) = iVar8;\n                                puVar22 = puVar19 + 1;\n                                var_1ch = puVar20;\n                            }\n                            var_34h = puVar23;\n                            fcn.00411000(puVar22, var_10h, var_ch);\n                            if (var_58h < puVar23) {\n                                do {\n                                    **(arg_24h + 0x24) =\n                                         var_ch + (-(var_14h != NULL) & 3) + 1 + CONCAT11(*var_58h, *(var_58h + 1)) >> 8\n                                    ;\n                                    *(*(arg_24h + 0x24) + 1) = *(var_58h + 1) + (-(var_14h != NULL) & 3U) + 1 + var_ch;\n                                    *(arg_24h + 0x24) = *(arg_24h + 0x24) + 2;\n                                    var_58h = var_58h + 2;\n                                    puVar23 = var_34h;\n                                } while (var_58h < var_34h);\n                            }\n                            puVar19 = puVar22 + var_ch;\n                            var_14h = var_14h + -1;\n                            var_58h = puVar23;\n                            puVar23 = var_4h;\n                        } while (-1 < var_14h);\n                    }\n                }\n                else {\n                    var_34h = (var_64h + 7) * var_30h + -6;\n                    iVar4 = (var_64h + 7) * var_30h;\n                    if ((iVar4 >> 0x20 != 0 && -1 < iVar4) ||\n                       (((-1 < iVar4 && (0x7fffffff < iVar4)) || (var_50h = 0x7fffffeb - *arg_28h,  var_50h < var_34h)))\n                       ) {\ncode_r0x0044f962:\n                        *arg_10h = puVar23;\n                        *arg_14h = 0x14;\n                        return 0;\n                    }\n                    *arg_28h = *arg_28h + var_34h;\n                }\n                while (var_1ch != NULL) {\n                    puVar10 = puVar19 + (1 - var_1ch);\n                    uVar9 = CONCAT11(*(puVar19 + (1 - puVar10)), *(puVar19 + (2 - puVar10)));\n                    if (uVar9 == 0) {\n                        var_1ch = NULL;\n                    }\n                    else {\n                        var_1ch = var_1ch - uVar9;\n                    }\n                    *puVar19 = 0x55;\n                    uVar7 = puVar10 >> 8;\n                    *(puVar19 + 1) = uVar7;\n                    *(puVar19 + 2) = puVar10;\n                    *(puVar19 + (1 - puVar10)) = uVar7;\n                    *(puVar19 + (2 - puVar10)) = puVar10;\n                    puVar19 = puVar19 + 3;\n                    puVar23 = var_4h;\n                }\n            }\ncode_r0x0044e5e8:\n            puVar22 = puVar19;\n            if (var_20h != NULL) {\n                uVar17 = *var_3ch;\n                if (uVar17 == 0x41) {\n                    if ((*(var_3ch + 3) == '\\x10') || (*(var_3ch + 3) == '\\x0f')) {\n                        var_3ch = var_3ch + 6;\n                    }\n                    else {\n                        var_3ch = var_3ch + 1;\n                    }\ncode_r0x0044e649:\n                }\n                else if ((uVar17 == 0x27) || (uVar17 == 0x34)) {\n                    var_3ch = var_3ch + *(uVar17 + 0x485228);\n                    if ((var_24h != 0) && (0xbf < *(var_3ch + -1))) {\n                        var_3ch = var_3ch + *((*(var_3ch + -1) & 0x3f) + 0x485318);\n                        goto code_r0x0044e649;\n                    }\n                }\n                var_34h = puVar19 - var_3ch;\n                if (0 < var_34h) {\n                    if (*var_3ch - 0x1f < 0x21) {\n    // switch table (33 cases) at 0x44fe0b\n                        puVar23 = var_4h;\n                        switch(*(*(*var_3ch + 0x44fe20) * 4 + 0x44fe0b)) {\n                        case 0x44e674:\n                            *var_3ch = 0x28;\n                            break;\n                        case 0x44e67c:\n                            *var_3ch = 0x29;\n                            break;\n                        case 0x44e684:\n                            *var_3ch = 0x2a;\n                            break;\n                        case 0x44e68c:\n                            *var_3ch = 0x2b;\n                            break;\n                        case 0x44e694:\n                            *var_3ch = 0x42;\n                            break;\n                        case 0x44e69c:\n                            *var_3ch = 0x43;\n                            break;\n                        case 0x44e6a1:\n                            *var_3ch = 0x44;\n                            break;\n                        case 0x44e6a6:\n                            *var_3ch = 0x45;\n                            break;\n                        case 0x44e6ab:\n                            *var_3ch = 0x35;\n                            break;\n                        case 0x44e6b0:\n                            *var_3ch = 0x36;\n                            break;\n                        case 0x44e6b5:\n                            *var_3ch = 0x37;\n                            break;\n                        case 0x44e6ba:\n                            *var_3ch = 0x38;\n                            break;\n                        case 0x44e6bf:\n                            goto code_r0x0044e6bf;\n                        }\n                    }\n                    else {\ncode_r0x0044e6bf:\n                        *puVar19 = 0;\n                        fcn.0043fbac(var_3ch, 3, var_24h, arg_24h, var_58h);\n                        fcn.00416790(var_3ch + 3, var_3ch, var_34h);\n                        *var_3ch = 0x5d;\n                        *(puVar19 + 3) = 0x55;\n                        uVar7 = var_34h + 3 >> 8;\n                        *(puVar19 + 1) = uVar7;\n                        uVar13 = SUB41(var_34h + 3, 0);\n                        *(puVar19 + 5) = uVar13;\n                        *(var_3ch + 1) = uVar7;\n                        *(var_3ch + 2) = uVar13;\n                        puVar22 = puVar19 + 6;\n                        puVar23 = var_4h;\n                    }\n                }\n            }\n        }\ncode_r0x0044e717:\n        *(arg_24h + 0x4c) = *(arg_24h + 0x4c) | var_70h;\n        var_4h = puVar23 + 1;\n        var_10h = NULL;\n        puVar19 = puVar22;\n        goto code_r0x0044cb75;\n    case 0x44e72f:\n        var_4h = puVar23 + 1;\n        var_14h = NULL;\n        var_34h = NULL;\n        var_50h = var_2ch;\n        var_ch = 0x5f;\n        var_58h = *(arg_24h + 0x24);\n        if (*var_4h == '*') {\n            var_1ch = puVar23 + 2;\n            iVar11 = *(arg_24h + 0xc);\n            if (((*(*(puVar23 + 2) + iVar11) & 2) != 0) || (*var_1ch == ':')) {\n                var_14h = NULL;\n                var_28h = 0x4852ec;\n                var_18h = NULL;\n                var_10h = NULL;\n                do {\n                    puVar23 = var_4h;\n                    var_4h = puVar23 + 1;\n                } while ((*(*var_4h + iVar11) & 2) != 0);\n                var_20h = var_4h - var_1ch;\n                if (*var_4h == ':') {\n                    var_18h = puVar23 + 2;\n                    for (var_4h = var_18h; ((*(*var_4h + iVar11) & 6) != 0 || (*var_4h == 0x5f)); var_4h = var_4h + 1) {\n                    }\n                    var_14h = var_4h - var_18h;\n                }\n                if (*var_4h != ')') {\n                    *arg_14h = 0x3c;\n                    *arg_10h = var_4h;\n                    return 0;\n                }\n                var_ch = NULL;\n                piVar24 = 0x485f98;\n                while ((var_20h != *piVar24 || (iVar11 = fcn.00416af1(var_1ch, var_28h, var_20h),  iVar11 != 0))) {\n                    iVar11 = *piVar24;\n                    var_ch = var_ch + 1;\n                    piVar24 = piVar24 + 3;\n                    var_28h = var_28h + iVar11 + 1;\n                    if (0x486003 < piVar24) goto code_r0x0044e8f1;\n                }\n                iVar11 = var_ch * 0xc;\n                if (*(iVar11 + 0x485f9c) == 0x74) {\n                    puVar23 = *(arg_24h + 0x20);\n                    *(arg_24h + 0x50) = 1;\n                    for (; puVar23 != NULL; puVar23 = *puVar23) {\n                        *puVar19 = 0x75;\n                        *(puVar19 + 1) = *(puVar23 + 5);\n                        *(puVar19 + 2) = *(puVar23 + 1);\n                        puVar19 = puVar19 + 3;\n                    }\n                }\n                if (var_14h == NULL) {\n                    if (*(iVar11 + 0x485f9c) < 0) {\n                        *arg_10h = var_4h;\n                        *arg_14h = 0x42;\n                        return 0;\n                    }\n                    cVar6 = *(iVar11 + 0x485f9c);\n                    *puVar19 = cVar6;\n                    puVar22 = puVar19 + 1;\n                    if (cVar6 == 'p') {\n                        *puVar22 = puVar22 + (-1 - *(arg_20h + 4)) >> 8;\n                        *(puVar19 + 2) = (puVar22 - *(arg_20h + 4)) + -1;\n                        puVar22 = puVar19 + 3;\n                    }\n                }\n                else {\n                    if (*(iVar11 + 0x485fa0) < 0) {\n                        *arg_10h = var_4h;\n                        *arg_14h = 0x3b;\n                        return 0;\n                    }\n                    cVar6 = *(iVar11 + 0x485fa0);\n                    *puVar19 = cVar6;\n                    puVar10 = puVar19 + 1;\n                    if (cVar6 == 'q') {\n                        *puVar10 = puVar10 + (-1 - *(arg_20h + 4)) >> 8;\n                        *(puVar19 + 2) = (puVar10 - *(arg_20h + 4)) + -1;\n                        puVar10 = puVar19 + 3;\n                    }\n                    *puVar10 = var_14h;\n                    puVar10 = puVar10 + 1;\n                    fcn.00411000(puVar10, var_18h, var_14h);\n                    puVar10[var_14h] = 0;\n                    puVar22 = puVar10 + var_14h + 1;\n                }\n                puVar23 = var_4h;\n                if (8 < var_ch) {\ncode_r0x0044e8f1:\n                    *arg_14h = 0x3c;\n                    goto code_r0x0044e8fd;\n                }\n                goto code_r0x0044f8d7;\n            }\n        }\n        if (*var_4h != '?') {\n            if ((var_2ch & 0x1000) != 0) {\n                var_ch = 0x5e;\n                goto code_r0x0044ecd0;\n            }\ncode_r0x0044efa0:\n            *(arg_24h + 0x34) = *(arg_24h + 0x34) + 1;\n            *(puVar19 + 3) = *(arg_24h + 0x34) >> 8;\n            *(puVar19 + 1) = *(arg_24h + 0x34);\n            var_14h = 0x2;\n            goto code_r0x0044ecd0;\n        }\n        puVar25 = puVar23 + 2;\n        cVar6 = *puVar25;\n        var_4h = puVar25;\n    // switch table (92 cases) at 0x44fe63\n        switch(cVar6) {\n        case '!':\n            var_4h = puVar23 + 3;\n            if (*var_4h != ')') {\n                var_ch = 0x59;\n                goto code_r0x0044ecc6;\n            }\n            *puVar19 = 0x73;\n            puVar19 = puVar19 + 1;\n            var_4h = puVar23 + 1;\n            var_10h = NULL;\n            goto code_r0x0044cb75;\n        default:\n            goto code_r0x0044f1dd;\n        case '#':\n            puVar14 = puVar23 + 3;\n            uVar17 = *puVar14;\n            if (uVar17 != 0) {\n                while (uVar17 != 0x29) {\n                    puVar14 = puVar14 + 1;\n                    uVar17 = *puVar14;\n                    if (uVar17 == 0) goto code_r0x0044e955;\n                }\n                if (*puVar14 != 0) {\n                    var_4h = puVar14 + 1;\n                    goto code_r0x0044cb75;\n                }\n            }\ncode_r0x0044e955:\n            *arg_10h = puVar14;\n            *arg_14h = 0x12;\n            return 0;\n        case '&':\n            puVar23 = 0x29;\n            var_14h = 0x1;\n            goto code_r0x0044f565;\n        case '\\'':\ncode_r0x0044eca0:\n            if (cVar6 == '<') {\ncode_r0x0044eca8:\n                var_18h = 0x3e;\n            }\n            else {\n                var_18h = 0x27;\n            }\n            var_20h = puVar25 + 1;\n            uVar17 = *(*var_20h + *(arg_24h + 0xc));\n            var_4h = var_20h;\n            while ((uVar17 & 0x10) != 0) {\n                var_4h = var_4h + 1;\n                uVar17 = *(*var_4h + *(arg_24h + 0xc));\n            }\n            var_1ch = var_4h - var_20h;\n            if (arg_28h == NULL) {\n                puVar10 = *(arg_24h + 0x28);\n                var_28h = NULL;\n                var_10h = NULL;\n                var_14h = puVar10;\n                if (*(arg_24h + 0x2c) < 1) {\ncode_r0x0044ef23:\n                    puVar10 = *(arg_24h + 0x28);\n                    var_10h = NULL;\n                    if (0 < *(arg_24h + 0x2c)) {\n                        do {\n                            if (puVar10 == var_14h) {\n                                var_10h = var_10h + -1;\n                            }\n                            else if (CONCAT11(*puVar10, puVar10[1]) == *(arg_24h + 0x34) + 1U) {\n                                *arg_14h = 0x41;\n                                *arg_10h = var_4h;\n                                return 0;\n                            }\n                            puVar10 = puVar10 + *(arg_24h + 0x30);\n                            var_10h = var_10h + 1;\n                        } while (var_10h < *(arg_24h + 0x2c));\n                    }\n                }\n                else {\n                    do {\n                        var_14h = puVar10;\n                        iVar11 = fcn.00411b83(var_20h, puVar10 + 2, var_1ch);\n                        if (iVar11 == 0) {\n                            if ((puVar10 + 2)[var_1ch] != '\\0') {\ncode_r0x0044ef01:\n                                fcn.00416790(puVar10 + *(arg_24h + 0x30), puVar10, \n                                             (*(arg_24h + 0x2c) - var_10h) * *(arg_24h + 0x30));\n                                break;\n                            }\n                            if ((CONCAT11(*puVar10, puVar10[1]) != *(arg_24h + 0x34) + 1U) && ((var_2ch & 0x80000) == 0)\n                               ) {\n                                *arg_10h = var_4h;\n                                *arg_14h = 0x2b;\n                                return 0;\n                            }\n                            var_28h = 0x1;\n                        }\n                        else if (iVar11 < 0) goto code_r0x0044ef01;\n                        puVar10 = puVar10 + *(arg_24h + 0x30);\n                        var_10h = var_10h + 1;\n                        var_14h = puVar10;\n                    } while (var_10h < *(arg_24h + 0x2c));\n                    if (var_28h == NULL) goto code_r0x0044ef23;\n                }\n                puVar10 = var_14h;\n                *var_14h = *(arg_24h + 0x34) + 1 >> 8;\n                *(var_14h + 1) = *(arg_24h + 0x34) + '\\x01';\n                fcn.00411000(var_14h + 2, var_20h, var_1ch);\n                (puVar10 + 2)[var_1ch] = 0;\n            }\n            else {\n                if (*var_4h != var_18h) {\n                    *arg_10h = var_4h;\n                    *arg_14h = 0x2a;\n                    return 0;\n                }\n                if (9999 < *(arg_24h + 0x2c)) {\n                    *arg_14h = 0x31;\n                    *arg_10h = var_4h;\n                    return 0;\n                }\n                if ((*(arg_24h + 0x30) < var_1ch + 3) && (*(arg_24h + 0x30) = var_1ch + 3,  0x20 < var_1ch))\n                goto code_r0x0044ee63;\n            }\n            *(arg_24h + 0x2c) = *(arg_24h + 0x2c) + 1;\n            var_4h = var_4h + 1;\n            goto code_r0x0044efa0;\n        case '(':\n            var_ch = 0x60;\n            if ((*(puVar23 + 3) != '?') ||\n               (((cVar6 = *(puVar23 + 1),  cVar6 != '=' && (cVar6 != '!')) && (cVar6 != '<')))) {\n                *(puVar19 + 3) = 100;\n                cVar6 = *(puVar23 + 3);\n                var_14h = 0x3;\n                var_10h = 0xffffffff;\n                if ((cVar6 == 'R') && (*(puVar23 + 1) == '&')) {\n                    *(puVar19 + 3) = 0x66;\n                    var_18h = 0xffffffff;\n                    puVar25 = puVar23 + 1;\n                }\n                else if (cVar6 == '<') {\n                    puVar25 = puVar23 + 3;\n                    var_18h = 0x3e;\n                }\n                else if (cVar6 == '\\'') {\n                    puVar25 = puVar23 + 3;\n                    var_18h = 0x27;\n                }\n                else {\n                    var_18h = NULL;\n                    if ((cVar6 == '-') || (cVar6 == '+')) {\n                        puVar25 = puVar23 + 3;\n                        var_10h = *puVar25;\n                    }\n                }\n                iVar11 = *(arg_24h + 0xc);\n                var_20h = puVar25 + 1;\n                if ((*(*(puVar25 + 1) + iVar11) & 0x10) == 0) {\n                    *arg_10h = var_20h;\n                    *arg_14h = 0x1c;\n                    return 0;\n                }\n                uVar9 = *var_20h;\n                var_8h = NULL;\n                uVar17 = *(iVar11 + uVar9);\n                var_4h = var_20h;\n                while ((uVar17 & 0x10) != 0) {\n                    if (-1 < var_8h) {\n                        if ((*(uVar9 + 0x486b28) & 4) == 0) {\n                            var_8h = 0xffffffff;\n                        }\n                        else {\n                            var_8h = (uVar9 - 0x30) + var_8h * 10;\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                    uVar9 = *var_4h;\n                    uVar17 = *(uVar9 + iVar11);\n                }\n                var_1ch = var_4h - var_20h;\n                if (((0 < var_18h) && (uVar17 = *var_4h,  var_4h = var_4h + 1,  uVar17 != var_18h)) ||\n                   (cVar6 = *var_4h,  var_4h = var_4h + 1,  cVar6 != ')')) {\n                    *arg_14h = 0x1a;\n                    *arg_10h = var_4h + -1;\n                    return 0;\n                }\n                if (arg_28h == NULL) {\n                    if (var_10h < 1) {\n                        puVar10 = *(arg_24h + 0x28);\n                        var_10h = NULL;\n                        if (0 < *(arg_24h + 0x2c)) {\n                            do {\n                                iVar11 = fcn.00416af1(var_20h, puVar10 + 2, var_1ch);\n                                if (iVar11 == 0) break;\n                                puVar10 = puVar10 + *(arg_24h + 0x30);\n                                var_10h = var_10h + 1;\n                            } while (var_10h < *(arg_24h + 0x2c));\n                        }\n                        puVar20 = var_1ch;\n                        if (var_10h < *(arg_24h + 0x2c)) {\n                            uVar7 = *puVar10;\n                            uVar13 = puVar10[1];\n                            *(puVar19 + 3) = *(puVar19 + 3) + '\\x01';\n                            *(puVar19 + 1) = uVar7;\n                            *(puVar19 + 5) = uVar13;\n                        }\n                        else {\n                            iVar11 = fcn.0043ff8f(arg_24h, var_20h, var_1ch, var_28h != NULL, var_24h);\n                            if (iVar11 < 1) {\n                                if (var_18h != NULL) goto code_r0x0044faff;\n                                if (*var_20h != 'R') {\n                                    if ((puVar20 == 0x6) && (iVar11 = fcn.00416af1(var_20h, \"DEFINE\", 6),  iVar11 == 0))\n                                    {\n                                        *(puVar19 + 3) = 0x68;\n                                        var_14h = 0x1;\n                                    }\n                                    else {\n                                        if ((var_8h < 1) || (*(arg_24h + 0x38) < var_8h)) {\n                                            *arg_14h = (-(var_8h != NULL) & 0xffffffec) + 0x23;\n                                            *arg_10h = var_4h;\n                                            return 0;\n                                        }\n                                        *(puVar19 + 1) = var_8h >> 8;\n                                        *(puVar19 + 5) = var_8h;\n                                    }\n                                    break;\n                                }\n                                iVar15 = 0;\n                                iVar11 = 1;\n                                if (puVar20 < 2) {\ncode_r0x0044ebdb:\n                                    iVar15 = 0xffff;\n                                }\n                                else {\n                                    do {\n                                        puVar14 = iVar11 + var_20h;\n                                        if ((*(*puVar14 + 0x486b28) & 4) == 0) {\n                                            *arg_10h = var_4h;\n                                            *arg_14h = 0xf;\n                                            return 0;\n                                        }\n                                        iVar11 = iVar11 + 1;\n                                        iVar15 = (*puVar14 - 0x30) + iVar15 * 10;\n                                    } while (iVar11 < puVar20);\n                                    if (iVar15 == 0) goto code_r0x0044ebdb;\n                                }\n                                *(puVar19 + 1) = iVar15 >> 8;\n                                *(puVar19 + 3) = 0x66;\n                                *(puVar19 + 5) = iVar15;\n                            }\n                            else {\n                                *(puVar19 + 3) = *(puVar19 + 3) + '\\x01';\n                                *(puVar19 + 1) = iVar11 >> 8;\n                                *(puVar19 + 5) = iVar11;\n                            }\n                        }\n                    }\n                    else {\n                        if (var_8h < 1) goto code_r0x0044fad1;\n                        if (var_10h == 0x2d) {\n                            puVar10 = (*(arg_24h + 0x34) - var_8h) + 1;\n                        }\n                        else {\n                            puVar10 = var_8h + *(arg_24h + 0x34);\n                        }\n                        if ((puVar10 < 1) || (*(arg_24h + 0x38) < puVar10)) {\n                            *arg_10h = var_4h;\n                            *arg_14h = 0xf;\n                            return 0;\n                        }\n                        *(puVar19 + 1) = puVar10 >> 8;\n                        *(puVar19 + 5) = puVar10;\n                    }\n                }\n            }\n            break;\n        case '+':\n        case '-':\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            goto code_r0x0044efd9;\n        case ':':\n            goto code_r0x0044e983;\n        case '<':\n            uVar17 = *(puVar23 + 3);\n            if (uVar17 == 0x21) {\n                var_ch = 0x5b;\n            }\n            else {\n                if (uVar17 != 0x3d) {\n                    if ((*(uVar17 + *(arg_24h + 0xc)) & 0x10) == 0) {\n                        *arg_10h = puVar23 + 3;\n                        *arg_14h = 0x18;\n                        return 0;\n                    }\n                    goto code_r0x0044eca0;\n                }\n                var_ch = 0x5a;\n            }\n            var_4h = puVar23 + 1;\n            goto code_r0x0044ecc6;\n        case '=':\n            var_ch = 0x58;\n            var_4h = puVar23 + 3;\ncode_r0x0044ecc6:\n            var_10h = NULL;\n            puVar22 = var_10h;\n            break;\n        case '>':\n            var_ch = 0x5d;\n            var_4h = puVar23 + 3;\n            break;\n        case 'C':\n            *puVar19 = 0x53;\n            puVar14 = puVar23 + 3;\n            uVar9 = *puVar14;\n            iVar11 = 0;\n            uVar17 = *(uVar9 + 0x486b28);\n            var_5ch = puVar19;\n            var_b0h = 1;\n            while ((uVar17 & 4) != 0) {\n                puVar14 = puVar14 + 1;\n                iVar11 = (uVar9 - 0x30) + iVar11 * 10;\n                uVar9 = *puVar14;\n                uVar17 = *(uVar9 + 0x486b28);\n            }\n            if (*puVar14 != 0x29) {\n                *arg_10h = puVar14;\n                *arg_14h = 0x27;\n                return 0;\n            }\n            if (0xff < iVar11) {\n                *arg_14h = 0x26;\n                *arg_10h = puVar14;\n                return 0;\n            }\n            *(puVar19 + 1) = iVar11;\n            *(puVar19 + 2) = puVar14 + (1 - *(arg_24h + 0x18)) >> 8;\n            var_4h._0_1_ = puVar14;\n            *(puVar19 + 3) = (var_4h - *(arg_24h + 0x18)) + '\\x01';\n            *(puVar19 + 1) = 0;\n            var_4h = puVar14 + 1;\n            var_10h = NULL;\n            puVar19 = puVar19 + 6;\n            goto code_r0x0044cb75;\n        case 'P':\n            puVar25 = puVar23 + 3;\n            cVar6 = *puVar25;\n            if (cVar6 == '=') {\n                var_14h = NULL;\n                puVar23 = 0x29;\n            }\n            else {\n                if (cVar6 != '>') {\n                    if (cVar6 != '<') {\n                        *arg_10h = puVar25;\n                        *arg_14h = 0x29;\n                        return 0;\n                    }\n                    goto code_r0x0044eca8;\n                }\n                var_14h = 0x1;\n                puVar23 = 0x29;\n            }\ncode_r0x0044f565:\n            var_20h = puVar25 + 1;\n            uVar17 = *(*var_20h + *(arg_24h + 0xc));\n            var_4h = var_20h;\n            while ((uVar17 & 0x10) != 0) {\n                var_4h = var_4h + 1;\n                uVar17 = *(*var_4h + *(arg_24h + 0xc));\n            }\n            var_1ch = var_4h - var_20h;\n            if (arg_28h == NULL) {\n                puVar10 = *(arg_24h + 0x28);\n                var_10h = NULL;\n                if (0 < *(arg_24h + 0x2c)) {\n                    do {\n                        iVar11 = fcn.00416af1(var_20h, puVar10 + 2, var_1ch);\n                        if ((iVar11 == 0) && ((puVar10 + 2)[var_1ch] == '\\0')) break;\n                        puVar10 = puVar10 + *(arg_24h + 0x30);\n                        var_10h = var_10h + 1;\n                    } while (var_10h < *(arg_24h + 0x2c));\n                }\n                if (var_10h < *(arg_24h + 0x2c)) {\n                    var_8h = CONCAT11(*puVar10, puVar10[1]);\n                }\n                else {\n                    var_8h = fcn.0043ff8f(arg_24h, var_20h, var_1ch, var_28h != NULL, var_24h);\n                    if (var_8h < 1) {\n                        *arg_10h = var_4h;\n                        *arg_14h = 0xf;\n                        return 0;\n                    }\n                }\n            }\n            else {\n                if (var_1ch == NULL) {\n                    *arg_10h = var_4h;\n                    *arg_14h = 0x3e;\n                    return 0;\n                }\n                if (*var_4h != puVar23) {\n                    *arg_14h = 0x2a;\n                    *arg_10h = var_4h;\n                    return 0;\n                }\n                if (0x20 < var_1ch) {\ncode_r0x0044ee63:\n                    *arg_10h = var_4h;\n                    *arg_14h = 0x30;\n                    return 0;\n                }\n                var_70h = *(arg_24h + 0x1c);\n                *(arg_24h + 0x1c) = var_4h;\n                var_8h = fcn.0043ff8f(arg_24h, var_20h, var_1ch, var_28h != NULL, var_24h);\n                *(arg_24h + 0x1c) = var_70h;\n                if (var_8h < 0) {\n                    var_8h = NULL;\n                }\n            }\n            if (var_14h != NULL) {\ncode_r0x0044f683:\n                var_ch = *(arg_24h + 0x14);\n                var_10h = puVar19;\n                if (arg_28h == NULL) {\n                    *puVar19 = 0;\n                    if (var_8h != NULL) {\n                        var_ch = fcn.0042f43d(*(arg_24h + 0x14), var_24h, var_8h);\n                    }\n                    if (var_ch == NULL) {\n                        iVar11 = fcn.0043ff8f(arg_24h, 0, var_8h, var_28h != NULL, var_24h);\n                        if (iVar11 < 0) {\ncode_r0x0044faff:\n                            *arg_14h = 0xf;\n                            *arg_10h = var_4h;\n                            return 0;\n                        }\n                        var_ch = *(arg_24h + 0x14) + var_8h;\n                        **(arg_24h + 0x24) = puVar19 + (4 - *(arg_24h + 0x14)) >> 8;\n                        *(*(arg_24h + 0x24) + 1) = (puVar19 - *(arg_24h + 0x14)) + '\\x04';\n                        *(arg_24h + 0x24) = *(arg_24h + 0x24) + 2;\n                    }\n                    else if ((CONCAT11(*(var_ch + 1), *(var_ch + 2)) == 0) &&\n                            (iVar11 = fcn.00446d5f(var_ch, puVar19, arg_20h, var_24h, arg_24h),  iVar11 != 0)) {\n                        *arg_10h = var_4h;\n                        *arg_14h = 0x28;\n                        return 0;\n                    }\n                }\n                *puVar19 = 0x5206005d;\n                *(puVar19 + 1) = var_ch - *(arg_24h + 0x14) >> 8;\n                *(puVar19 + 5) = var_ch - *(arg_24h + 0x14);\n                *(puVar19 + 6) = 0x55;\n                *(puVar19 + 2) = 6;\n                var_64h = 9;\n                puVar22 = puVar19 + 9;\n                puVar23 = var_4h;\n                if (var_38h != 0xfffffffe) goto code_r0x0044f8d7;\n                var_4h = var_4h + 1;\n                var_38h = 0xffffffff;\n                puVar19 = puVar19 + 9;\n                goto code_r0x0044cb75;\n            }\ncode_r0x0044f797:\n            if (var_38h == 0xfffffffe) {\n                var_38h = 0xffffffff;\n            }\n            *puVar19 = 0x51;\n            *(puVar19 + 1) = var_8h >> 8;\n            var_10h = puVar19;\n            *(puVar19 + 2) = var_8h;\n            puVar22 = puVar19 + 3;\n            uVar9 = 1;\n            if (var_8h < 0x20) {\n                uVar9 = 1 << (var_8h & 0x1f);\n            }\n            *(arg_24h + 0x40) = *(arg_24h + 0x40) | uVar9;\n            if (*(arg_24h + 0x3c) < var_8h) {\n                *(arg_24h + 0x3c) = var_8h;\n            }\n            piVar24 = *(arg_24h + 0x20);\n            puVar23 = var_4h;\n            if (piVar24 != NULL) {\n                do {\n                    puVar19 = puVar22;\n                    if (*(piVar24 + 1) == var_8h) {\n                        *(piVar24 + 6) = 1;\n                        var_4h = var_4h + 1;\n                        goto code_r0x0044cb75;\n                    }\n                    piVar24 = *piVar24;\n                } while (piVar24 != NULL);\n                var_4h = var_4h + 1;\n                goto code_r0x0044cb75;\n            }\n            goto code_r0x0044f8d7;\n        case 'R':\n            puVar25 = puVar23 + 3;\ncode_r0x0044efd9:\n            var_18h = 0x29;\n            puVar2 = puVar25;\n            goto code_r0x0044f18e;\n        case '|':\n            var_34h = 0x1;\ncode_r0x0044e983:\n            var_ch = 0x5e;\n            var_4h = puVar25 + 1;\n        }\ncode_r0x0044ecd0:\n        var_10h = puVar22;\n        *puVar19 = var_ch;\n        var_70h = *(arg_24h + 0x4c);\n        var_64h = 0;\n        if ((var_ch == 0x5a) || (var_ch == 0x5b)) {\n            arg_1ch_00 = 1;\n        }\n        else {\n            arg_1ch_00 = 0;\n        }\n        var_3ch = puVar19;\n        iVar11 = fcn.004543b1(var_50h, var_2ch & 7, &var_3ch, &var_4h, arg_14h, arg_1ch_00, var_34h, var_14h, &var_a0h, \n                              &var_6ch, arg_20h, arg_24h, -(arg_28h != NULL) & &var_64h);\n        if (iVar11 == 0) {\ncode_r0x0044e8fd:\n            *arg_10h = var_4h;\n            return 0;\n        }\n        puVar25 = var_ch;\n        if ((var_ch == 0x60) && (arg_28h == NULL)) {\n            var_14h = NULL;\n            puVar23 = puVar19;\n            do {\n                var_14h = var_14h + 1;\n                puVar23 = puVar23 + CONCAT11(*(puVar23 + 1), *(puVar23 + 2));\n            } while (*puVar23 != 'U');\n            if (*(puVar19 + 3) == 'h') {\n                if (1 < var_14h) {\n                    *arg_14h = 0x36;\n                    *arg_10h = var_4h;\n                    return 0;\n                }\n                puVar25 = 0x68;\n            }\n            else {\n                if (2 < var_14h) {\n                    *arg_10h = var_4h;\n                    *arg_14h = 0x1b;\n                    return 0;\n                }\n                if (var_14h == 0x1) {\n                    var_6ch = 0xffffffff;\n                    var_a0h = 0xffffffff;\n                }\n            }\n        }\n        if (*var_4h != ')') {\n            *arg_10h = var_4h;\n            *arg_14h = 0xe;\n            return 0;\n        }\n        if (arg_28h != NULL) {\n            if (0x7fffffeb - *arg_28h < var_64h + -6) {\ncode_r0x0044f8f9:\n                *arg_14h = 0x14;\n                *arg_10h = var_4h;\n                return 0;\n            }\n            *arg_28h = *arg_28h + -6 + var_64h;\n            *puVar19 = 0x5e;\n            *(puVar19 + 2) = 0x5503;\n            *(puVar19 + 1) = 0x300;\n            var_4h = var_4h + 1;\n            puVar19 = puVar19 + 6;\n            goto code_r0x0044cb75;\n        }\n        puVar22 = var_3ch;\n        puVar23 = var_4h;\n        if (puVar25 != 0x68) {\n            var_60h = var_44h;\n            var_48h = var_38h;\n            var_9ch = 0;\n            puVar19 = var_3ch;\n            if (puVar25 < 0x5d) {\n                if ((puVar25 != 0x58) || (var_6ch < 0)) goto code_r0x0044f8d7;\n                var_4h = var_4h + 1;\n                var_44h = var_6ch;\n            }\n            else {\n                if (var_38h == 0xfffffffe) {\n                    if (var_a0h < 0) {\n                        var_38h = 0xffffffff;\n                        var_48h = 0xffffffff;\n                    }\n                    else {\n                        var_38h = var_a0h;\n                        var_9ch = 1;\n                        var_48h = 0xffffffff;\n                    }\ncode_r0x0044f451:\n                    if (var_6ch < 0) goto code_r0x0044f8d7;\n                }\n                else {\n                    if (var_a0h < 0) goto code_r0x0044f451;\n                    if (var_6ch < 0) {\n                        var_6ch = var_a0h | var_70h;\n                        goto code_r0x0044f451;\n                    }\n                }\n                var_44h = var_6ch;\n                var_4h = var_4h + 1;\n            }\n            goto code_r0x0044cb75;\n        }\n        goto code_r0x0044f8d7;\n    case 0x44f000:\n        var_98h = puVar23;\n        iVar11 = fcn.0042fe8e(&var_4h, arg_14h, *(arg_24h + 0x34), var_2ch, 0);\n        if (*arg_14h != 0) goto code_r0x0044e8fd;\n        if (-1 < iVar11) {\n            if ((var_24h == 0) || (iVar11 < 0x80)) {\n                var_ch = 0x1;\n                var_ach._0_1_ = iVar11;\n            }\n            else {\n                var_ch = fcn.0042edc9(iVar11, &var_ach);\n            }\n            goto code_r0x0044ccf5;\n        }\n        iVar15 = -iVar11;\n        if (iVar11 == -0x1a) {\n            if ((*(var_4h + 1) == '\\\\') && (*(var_4h + 2) == 'E')) {\n                var_4h = var_4h + 3;\n            }\n            else {\n                var_4h = var_4h + 1;\n                var_54h = 1;\n            }\n            goto code_r0x0044cb75;\n        }\n        puVar23 = var_4h;\n        if (iVar11 == -0x19) goto code_r0x0044f8d7;\n        if (((var_38h == 0xfffffffe) && (iVar11 != -5 && 4 < iVar15)) && (iVar15 < 0x17)) {\n            var_38h = 0xffffffff;\n        }\n        var_48h = var_38h;\n        var_60h = var_44h;\n        if (iVar11 != -0x1b) {\n            if ((iVar11 == -0x1c) && (((cVar6 = *(var_4h + 1),  cVar6 == '<' || (cVar6 == '\\'')) || (cVar6 == '{')))) {\n                puVar25 = var_4h + 1;\n                var_14h = NULL;\n                if (*puVar25 == '<') {\n                    puVar23 = 0x3e;\n                }\n                else {\n                    puVar23 = ((*puVar25 != '\\'') - 1 & 0xffffffaa) + 0x7d;\n                }\n                goto code_r0x0044f565;\n            }\n            if (0x22 < iVar15) {\n                var_8h = -iVar11 - 0x23;\n                goto code_r0x0044f797;\n            }\n            if (((iVar11 == -0x16) || (iVar11 == -0xf)) || (iVar11 == -0x10)) {\n                *arg_10h = var_4h;\n                *arg_14h = 0x2d;\n                return 0;\n            }\n            if ((iVar11 == -5 || iVar15 < 5) || (var_10h = puVar19,  0x16 < iVar15)) {\n                var_10h = NULL;\n            }\n            *puVar19 = -iVar11;\n            var_4h = var_4h + 1;\n            puVar19 = puVar19 + 1;\n            goto code_r0x0044cb75;\n        }\n        puVar25 = var_4h + 1;\n        var_58h = *(arg_24h + 0x24);\n        var_14h = NULL;\n        var_34h = NULL;\n        puVar2 = var_4h + 2;\n        var_18h = ((*puVar25 != '<') - 1 & 0x17) + 0x27;\n        if ((*(var_4h + 2) != '+') && (*(var_4h + 2) != '-')) {\n            uVar17 = *puVar2;\n            var_1ch = 0x1;\n            var_ch = puVar2;\n            puVar5 = var_18h;\n            while ((puVar23 = var_18h,  uVar17 != 0 && (puVar23 = puVar5,  uVar17 != puVar5))) {\n                uVar17 = *(uVar17 + *(arg_24h + 0xc));\n                if ((uVar17 & 4) == 0) {\n                    var_1ch = NULL;\n                }\n                puVar23 = var_18h;\n                if ((uVar17 & 0x10) == 0) break;\n                var_ch = var_ch + 1;\n                puVar5 = var_18h;\n                uVar17 = *var_ch;\n            }\n            if (*var_ch == puVar23) {\n                if (var_1ch == NULL) {\n                    var_14h = 0x1;\n                    goto code_r0x0044f565;\n                }\n                goto code_r0x0044f18e;\n            }\n            *arg_14h = 0x39;\n            var_4h = var_4h + 2;\n            goto code_r0x0044cb75;\n        }\n        var_ch = var_4h + 3;\n        uVar17 = *(*var_ch + 0x486b28);\n        while ((uVar17 & 4) != 0) {\n            var_ch = var_ch + 1;\n            uVar17 = *(*var_ch + 0x486b28);\n        }\n        if (*var_ch != var_18h) {\n            *arg_14h = 0x39;\n            var_4h = var_4h + 2;\n            goto code_r0x0044cb75;\n        }\ncode_r0x0044f18e:\n        var_4h = puVar2;\n        var_14h = NULL;\n        var_34h = NULL;\n        cVar6 = *var_4h;\n        if (cVar6 == '+') {\n            var_4h = var_4h + 1;\n            if ((*(*var_4h + 0x486b28) & 4) == 0) {\n                *arg_10h = var_4h;\n                *arg_14h = 0x3f;\n                return 0;\n            }\n        }\n        else if (cVar6 == '-') {\n            if ((*(*(var_4h + 1) + 0x486b28) & 4) == 0) {\ncode_r0x0044f1dd:\n                var_14h = NULL;\n                var_34h = NULL;\n                var_ch = NULL;\n                var_28h = NULL;\n                puVar16 = &var_28h;\n                puVar25 = var_4h;\n                while ((cVar6 != ')' && (cVar6 != ':'))) {\n                    var_4h = puVar25 + 1;\n    // switch table (76 cases) at 0x44fefb\n                    switch(cVar6) {\n                    case '-':\n                        puVar16 = &var_ch;\n                        break;\n                    default:\n                        *arg_10h = puVar25;\n                        *arg_14h = 0xc;\n                        return 0;\n                    case 'J':\n                        *puVar16 = *puVar16 | 0x80000;\n                        *(arg_24h + 0x48) = *(arg_24h + 0x48) | 0x10;\n                        break;\n                    case 'U':\n                        *puVar16 = *puVar16 | 0x200;\n                        break;\n                    case 'X':\n                        *puVar16 = *puVar16 | 0x40;\n                        break;\n                    case 'i':\n                        *puVar16 = *puVar16 | 1;\n                        break;\n                    case 'm':\n                        *puVar16 = *puVar16 | 2;\n                        break;\n                    case 's':\n                        *puVar16 = *puVar16 | 4;\n                        break;\n                    case 'x':\n                        *puVar16 = *puVar16 | 8;\n                    }\n                    cVar6 = *(puVar25 + 1);\n                    puVar25 = var_4h;\n                }\n                var_50h = ~var_ch & (var_28h | var_2ch);\n                if (*puVar25 != ')') goto code_r0x0044e983;\n                if ((puVar19 == *(arg_24h + 0x14) + 3) && ((arg_28h == NULL || (*arg_28h == 6)))) {\n                    *(arg_24h + 0x44) = var_50h;\n                    *arg_8h = var_50h;\n                    var_4h = puVar25 + 1;\n                    var_2ch = var_50h;\n                    var_10h = NULL;\n                }\n                else {\n                    if (((var_50h ^ var_2ch) & 7) != 0) {\n                        *puVar19 = 0x19;\n                        *(puVar19 + 1) = var_50h & 7;\n                        puVar19 = puVar19 + 2;\n                    }\n                    var_b4h = var_50h >> 9 & 1;\n                    var_b8h = var_b4h ^ 1;\n                    var_68h = (var_50h & 1U) << 8;\n                    *arg_8h = var_50h;\n                    var_4h = puVar25 + 1;\n                    var_2ch = var_50h;\n                    var_10h = NULL;\n                }\n                goto code_r0x0044cb75;\n            }\n            var_4h = var_4h + 1;\n        }\n        uVar9 = *var_4h;\n        var_8h = NULL;\n        uVar17 = *(uVar9 + 0x486b28);\n        while ((uVar17 & 4) != 0) {\n            var_4h = var_4h + 1;\n            var_8h = (uVar9 - 0x30) + var_8h * 10;\n            uVar9 = *var_4h;\n            uVar17 = *(uVar9 + 0x486b28);\n        }\n        if (*var_4h != var_18h) {\n            *arg_10h = var_4h;\n            *arg_14h = 0x1d;\n            return 0;\n        }\n        if (cVar6 == '-') {\n            if (var_8h == NULL) {\n                *arg_10h = var_4h;\n                *arg_14h = 0x3a;\n                return 0;\n            }\n            var_8h = (*(arg_24h + 0x34) - var_8h) + 1;\n            if (var_8h < 1) {\n                *arg_14h = 0xf;\n                *arg_10h = var_4h;\n                return 0;\n            }\n        }\n        else if (cVar6 == '+') {\n            if (var_8h == NULL) {\ncode_r0x0044fad1:\n                *arg_10h = var_4h;\n                *arg_14h = 0x3a;\n                return 0;\n            }\n            var_8h = var_8h + *(arg_24h + 0x34);\n        }\n        goto code_r0x0044f683;\n    case 0x44f927:\n        *arg_18h = var_38h;\n        *arg_ch = puVar19;\n        *arg_1ch = var_44h;\n        *arg_10h = puVar23;\n        if (arg_28h == NULL) {\n            return 1;\n        }\n        if (puVar19 - var_74h <= 0x7fffffeb - *arg_28h) {\n            *arg_28h = (*arg_28h - var_74h) + puVar19;\n            return 1;\n        }\n        goto code_r0x0044f962;\n    }\ncode_r0x0044ccb1:\n    var_ch = 0x1;\n    var_ach._0_1_ = var_8h;\n    if ((var_24h != 0) && (0xbf < var_8h)) {\n        uVar17 = *(puVar23 + 1);\n        var_ch = 0x1;\n        while ((uVar17 & 0xc0) == 0x80) {\n            puVar22 = puVar23 + 1;\n            uVar17 = *(puVar23 + 2);\n            var_4h = puVar22;\n            *(&var_ach + var_ch) = *puVar22;\n            var_ch = var_ch + 1;\n            puVar23 = puVar22;\n        }\n    }\n    goto code_r0x0044ccf5;\n    while( true ) {\n        var_4h = var_4h + 2;\n        if ((*var_4h != '\\\\') || (*(puVar22 + 3) != 'E')) {\n            var_54h = 1;\n            break;\n        }\n        var_4h = puVar22 + 1;\n        if (*var_4h != '\\\\') break;\ncode_r0x0044d8c7:\n        puVar22 = var_4h;\n        if (*(var_4h + 1) != 'Q') break;\n    }\ncode_r0x0044d8f2:\n    uVar17 = *var_4h;\n    if ((uVar17 == 0) || ((var_54h == 0 && (uVar17 == 0x5d)))) {\ncode_r0x0044db74:\n        var_4h = var_34h;\n        puVar22 = var_34h;\ncode_r0x0044db7a:\n        if ((var_24h == 0) || ((var_8h < 0x100 && (((var_2ch & 1) == 0 || (var_8h < 0x80)))))) {\n            puVar14 = &var_94h + (var_8h + (var_8h >> 0x1f & 7U) >> 3);\n            *puVar14 = *puVar14 | '\\x01' << (var_8h & 7);\n            if ((var_2ch & 1) != 0) {\n                uVar17 = *(*(arg_24h + 4) + var_8h);\n                var_8h = uVar17;\n                puVar14 = &var_94h + (uVar17 >> 3);\n                *puVar14 = *puVar14 | '\\x01' << (uVar17 & 7);\n            }\n            var_ch = var_ch + 1;\n            var_14h = var_8h;\n        }\n        else {\n            *puVar23 = 1;\n            puVar10 = puVar23 + 1;\n            var_1ch = 0x1;\n            iVar11 = fcn.0042edc9(var_8h, puVar10);\ncode_r0x0044d5ed:\n            puVar23 = puVar10 + iVar11;\n            puVar22 = var_4h;\n        }\n    }\n    else {\n        if (var_24h == 0) {\n            var_18h = uVar17;\ncode_r0x0044da0f:\n        }\n        else {\n            var_18h = uVar17;\n            if (0xbf < var_18h) {\n                uVar9 = *(var_4h + 1) & 0x3f;\n                if ((uVar17 & 0x20) == 0) {\n                    var_18h = uVar9 | (var_18h & 0x1f) << 6;\n                    var_4h = var_4h + 1;\n                }\n                else if ((uVar17 & 0x10) == 0) {\n                    var_18h = (uVar9 | (var_18h & 0xf) << 6) << 6 | *(var_4h + 2) & 0x3f;\n                    var_4h = var_4h + 2;\n                }\n                else if ((uVar17 & 8) == 0) {\n                    var_18h = ((uVar9 | (var_18h & 7) << 6) << 6 | *(var_4h + 2) & 0x3f) << 6 | *(var_4h + 3) & 0x3f;\n                    var_4h = var_4h + 3;\n                }\n                else if ((uVar17 & 4) == 0) {\n                    var_18h = (((uVar9 | (var_18h & 3) << 6) << 6 | *(var_4h + 2) & 0x3f) << 6 | *(var_4h + 3) & 0x3f)\n                              << 6 | *(var_4h + 1) & 0x3f;\n                    var_4h = var_4h + 1;\n                }\n                else {\n                    var_18h = ((((uVar9 | (var_18h & 1) << 6) << 6 | *(var_4h + 2) & 0x3f) << 6 | *(var_4h + 3) & 0x3f)\n                               << 6 | *(var_4h + 1) & 0x3f) << 6 | *(var_4h + 5) & 0x3f;\n                    var_4h = var_4h + 5;\n                }\n                goto code_r0x0044da0f;\n            }\n        }\n        if ((var_54h == 0) && (var_18h == 0x5c)) {\n            var_18h = fcn.0042fe8e(&var_4h, arg_14h, *(arg_24h + 0x34), var_2ch, 1);\n            if (*arg_14h != 0) goto code_r0x0044e8fd;\n            if (var_18h < 0) {\n                if (var_18h != 0xfffffffb) goto code_r0x0044db74;\n                var_18h = 0x8;\n            }\n        }\n        if (var_18h < var_8h) {\n            *arg_10h = var_4h;\n            *arg_14h = 8;\n            return 0;\n        }\n        puVar22 = var_4h;\n        if (var_18h == var_8h) goto code_r0x0044db7a;\n        if ((var_18h == 0xd) || (var_18h == 0xa)) {\n            *(arg_24h + 0x48) = *(arg_24h + 0x48) | 0x20;\n        }\n        if ((var_24h == 0) || ((var_18h < 0x100 && (((var_2ch & 1) == 0 || (var_18h < 0x80)))))) {\ncode_r0x0044dae3:\n            var_ch = var_ch + var_18h + (1 - var_8h);\n            var_14h = var_18h;\n            puVar22 = var_4h;\n            if ((arg_28h == NULL) && (var_8h <= var_18h)) {\n                var_34h = var_2ch & 1;\n                do {\n                    puVar14 = &var_94h + (var_8h + (var_8h >> 0x1f & 7U) >> 3);\n                    *puVar14 = *puVar14 | '\\x01' << (var_8h & 7);\n                    if (var_34h != NULL) {\n                        uVar17 = *(*(arg_24h + 4) + var_8h);\n                        puVar14 = &var_94h + (uVar17 >> 3);\n                        *puVar14 = *puVar14 | '\\x01' << (uVar17 & 7);\n                    }\n                    var_8h = var_8h + 1;\n                } while (var_8h <= var_18h);\n            }\n        }\n        else {\n            *puVar23 = 2;\n            var_1ch = 0x1;\n            iVar11 = fcn.0042edc9(var_8h, puVar23 + 1);\n            puVar10 = puVar23 + 1 + iVar11;\n            iVar11 = fcn.0042edc9(var_18h, puVar10);\n            puVar23 = puVar10 + iVar11;\n            puVar22 = var_4h;\n            if (((var_2ch & 1) != 0) && (var_8h < 0x80)) {\n                var_18h = 0x7f;\n                goto code_r0x0044dae3;\n            }\n        }\n    }\ncode_r0x0044d5f2:\n    puVar25 = var_48h;\n    var_4h = puVar22 + 1;\n    var_8h = *var_4h;\n    if (var_8h == NULL) goto code_r0x0044f9fb;\n    if ((var_8h != 0x5d) || (var_54h != 0)) goto code_r0x0044d0a9;\n    if (((var_ch != 0x1) || (var_1ch != NULL)) || (((var_24h != 0 && (var_48h != NULL)) && (0x7f < var_14h)))) {\n        if (var_38h == 0xfffffffe) {\n            var_38h = 0xffffffff;\n        }\n        var_48h = var_38h;\n        var_60h = var_44h;\n        if ((var_1ch != NULL) && ((var_20h == NULL || ((var_2ch & 0x20000000) != 0)))) {\n            *puVar23 = 0;\n            *puVar19 = 0x50;\n            *(puVar19 + 3) = puVar25 != NULL;\n            if (var_ch < 1) {\n                puVar19 = puVar23 + 1;\n            }\n            else {\n                *(puVar19 + 3) = puVar25 != NULL | 2;\n                puVar22 = puVar19 + 1;\n                fcn.00416790(puVar19 + 9, puVar22, puVar23 + (1 - puVar22));\n                fcn.00411000(puVar22, &var_94h, 0x20);\n                puVar19 = puVar23 + 0x21;\n            }\n            *(var_10h + 1) = puVar19 - var_10h >> 8;\n            *(var_10h + 2) = puVar19 - var_10h;\n            var_4h = var_4h + 1;\n            goto code_r0x0044cb75;\n        }\n        puVar14 = puVar19 + 1;\n        *puVar19 = (puVar25 != var_20h) + 'N';\n        if (puVar25 == NULL) {\n            fcn.00411000(puVar14, &var_94h, 0x20);\n        }\n        else if (arg_28h == NULL) {\n            iVar11 = &var_94h - puVar14;\n            iVar15 = 0x20;\n            do {\n                *puVar14 = ~puVar14[iVar11];\n                puVar14 = puVar14 + 1;\n                iVar15 = iVar15 + -1;\n            } while (iVar15 != 0);\n            var_4h = puVar22 + 2;\n            puVar19 = puVar19 + 0x21;\n            goto code_r0x0044cb75;\n        }\n        var_4h = var_4h + 1;\n        puVar19 = puVar19 + 0x21;\n        goto code_r0x0044cb75;\n    }\n    var_60h = var_44h;\n    if (var_48h != NULL) {\n        if (var_38h == 0xfffffffe) {\n            var_38h = 0xffffffff;\n        }\n        *puVar19 = 0x1e;\n        *(puVar19 + 1) = var_14h;\n        var_4h = puVar22 + 2;\n        var_48h = var_38h;\n        puVar19 = puVar19 + 2;\n        goto code_r0x0044cb75;\n    }\n    if ((var_24h == 0) || (var_14h < 0x80)) {\n        var_ch = 0x1;\n        var_ach._0_1_ = var_14h;\n    }\n    else {\n        var_ch = fcn.0042edc9(var_14h, &var_ach);\n    }\ncode_r0x0044ccf5:\n    puVar25 = var_ch;\n    var_10h = puVar19;\n    *puVar19 = var_2ch & 1 | 0x1c;\n    puVar22 = puVar19 + 1;\n    if (0 < var_ch) {\n        fcn.00411000(puVar22, &var_ach, var_ch);\n        puVar22 = puVar22 + puVar25;\n    }\n    if ((var_ach == 0xd) || (var_ach == 10)) {\n        *(arg_24h + 0x48) = *(arg_24h + 0x48) | 0x20;\n    }\n    puVar23 = var_4h;\n    if (var_38h == 0xfffffffe) {\n        var_48h = 0xffffffff;\n        var_60h = var_44h;\n        puVar19 = puVar22;\n        if ((puVar25 != 0x1) && (var_68h != 0)) {\n            var_4h = var_4h + 1;\n            var_38h = 0xffffffff;\n            var_44h = 0xffffffff;\n            goto code_r0x0044cb75;\n        }\n        var_38h = var_ach | var_68h;\n        if (puVar25 != 0x1) {\n            var_4h = var_4h + 1;\n            var_44h = *(puVar22 + -1) | *(arg_24h + 0x4c);\n            goto code_r0x0044cb75;\n        }\n    }\n    else {\n        var_48h = var_38h;\n        var_60h = var_44h;\n        if ((puVar25 == 0x1) || (var_68h == 0)) {\n            var_44h = *(puVar22 + -1) | *(arg_24h + 0x4c) | var_68h;\n        }\n    }\ncode_r0x0044f8d7:\n    var_4h = puVar23 + 1;\n    puVar19 = puVar22;\n    goto code_r0x0044cb75;\n}\n",
        "token_count": 28848
    },
    "00456027": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00456027(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    code *pcVar7;\n    uint var_8ch;\n    uint var_88h;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    uVar5 = *(arg_8h + 8);\n    var_14h = 0;\n    var_18h = 0;\n    var_2h._0_1_ = 0;\n    uVar2 = 0;\n    var_2h._1_1_ = 0;\n    if (3 < uVar5) {\n        var_10h = *(*(arg_8h + 4) + 0xc);\n        cVar1 = fcn.0044aa8e(var_10h);\n        if (cVar1 == '\\0') {\n            var_14h = fcn.00452e81(var_10h);\n        }\n    }\n    if (4 < uVar5) {\n        var_10h = *(*(arg_8h + 4) + 0x10);\n        cVar1 = fcn.0044aa8e(var_10h);\n        if (cVar1 == '\\0') {\n            var_18h = fcn.0040c8f0();\n        }\n    }\n    if (5 < uVar5) {\n        var_10h = *(*(arg_8h + 4) + 0x14);\n        cVar1 = fcn.0044aa8e(var_10h);\n        if (cVar1 == '\\0') {\n            var_2h._0_1_ = fcn.0040c8f0();\n            var_2h._0_1_ = var_2h & 1;\n            uVar2 = fcn.0040c8f0();\n            uVar2 = uVar2 >> 1 & 1;\n            uVar3 = fcn.0040c8f0();\n            var_2h._1_1_ = uVar3 >> 2 & 1;\n        }\n    }\n    var_54h = 0x2c;\n    var_50h = 0x1a0;\n    if (uVar2 != 0) {\n        var_50h = 0x1a2;\n    }\n    var_4ch = 0;\n    var_34h = 0;\n    var_48h = 0;\n    var_30h = fcn.00452e81(**(arg_8h + 4));\n    var_38h = 0;\n    var_3ch = 0;\n    var_40h = 0;\n    var_44h = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_ch);\n    var_ch = var_ch + 0x10;\n    var_8h = var_8h + 0x10;\n    uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_28h);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar4);\n    if ((1 < uVar5) && (cVar1 = fcn.0044aa8e(*(*(arg_8h + 4) + 4)),  cVar1 == '\\0')) {\n        var_ch = fcn.0040c8f0();\n    }\n    if ((2 < uVar5) && (cVar1 = fcn.0044aa8e(*(*(arg_8h + 4) + 8)),  cVar1 == '\\0')) {\n        var_8h = fcn.0040c8f0();\n    }\n    uVar2 = var_2h;\n    if (var_2h == 0) {\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(in_ECX + 0xe8), 0xfffffff0);\n        if ((uVar5 & 0x40) == 0) goto code_r0x004561cb;\n    }\n    else {\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(in_ECX + 0xe8));\n        if ((uVar5 & 0x40) != 0) goto code_r0x004561cb;\n    }\n    (*_sym.imp.USER32.dll_DestroyWindow)(*(in_ECX + 0xe8));\n    *(in_ECX + 0xe8) = 0;\ncode_r0x004561cb:\n    if (*(in_ECX + 0xe8) == 0) {\n        uVar4 = 3;\n        if (uVar2 != 0) {\n            uVar4 = 0x43;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (8, L\"tooltips_class32\", 0, uVar4, 0x80000000, 0x80000000, 0x80000000, 0x80000000, 0, 0, 0, 0)\n        ;\n        pcVar7 = _sym.imp.USER32.dll_SendMessageW;\n        *(in_ECX + 0xe8) = uVar4;\n        (*pcVar7)(uVar4, 0x432, 0, &var_54h);\n        (*pcVar7)(*(in_ECX + 0xe8), 0x418, 0, var_20h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 0xe8), 0x439, 0, &var_54h);\n        pcVar7 = _sym.imp.USER32.dll_SendMessageW;\n    }\n    iVar6 = (*pcVar7)(*(in_ECX + 0xe8), 0x421, var_18h, var_14h);\n    if (iVar6 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        (*pcVar7)(*(in_ECX + 0xe8), 0x41d, 0, 0);\n    }\n    iVar6 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0xe8));\n    if (iVar6 == 0) {\n        (*pcVar7)(*(in_ECX + 0xe8), 0x412, 0, 0xd8f0d8f0);\n        (*pcVar7)(*(in_ECX + 0xe8), 0x411, 1, &var_54h);\n    }\n    if (var_2h._1_1_ != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0xe8), &var_64h);\n        uVar4 = (*_sym.imp.USER32.dll_MonitorFromPoint)(var_ch, var_8h, 2);\n        var_8ch = 0x28;\n        iVar6 = (*_sym.imp.USER32.dll_GetMonitorInfoW)(uVar4, &var_8ch);\n        if (iVar6 != 0) {\n            (*_sym.imp.USER32.dll_CopyRect)(&var_28h, &var_88h);\n        }\n        if ((var_ch < var_28h) || (var_28h = var_20h - ((var_5ch - var_64h) + 1),  var_28h < var_ch)) {\n            var_ch = var_28h;\n        }\n        pcVar7 = _sym.imp.USER32.dll_SendMessageW;\n        if ((var_8h < var_24h) || (var_24h = var_1ch - ((var_58h - var_60h) + 1),  var_24h < var_8h)) {\n            var_8h = var_24h;\n        }\n    }\n    (*pcVar7)(*(in_ECX + 0xe8), 0x412, 0, var_8h << 0x10 | var_ch & 0xffff);\n    return 0;\n}\n",
        "token_count": 2048
    },
    "00457ad5": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457ad5(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint *arg_8h_00;\n    uint uVar8;\n    uint uVar9;\n    uint var_2a0h;\n    uint var_94h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t *var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    fcn.0040e8e0();\n    piVar5 = arg_8h;\n    cVar2 = fcn.004329dd(*arg_8h[1]);\n    if (cVar2 == '\\0') {\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    iVar7 = 1;\n    if ((piVar5[2] < 2) || ((iVar7 = fcn.0040c8f0(),  0 < iVar7 && (iVar7 < 8)))) {\n        piVar5 = *(**piVar5[1] + 8);\n        if (iVar7 == 5) {\n            var_24h = 0;\n            var_1ch = 0;\n            cVar2 = fcn.004313e8(&var_24h);\n            if (cVar2 == '\\0') {\n                fcn.00403f40(1, 0);\n                fcn.00431858(&var_24h);\n                return 0;\n            }\n            uVar9 = **piVar5;\n            puVar6 = &arg_8h;\n            uVar8 = 6;\n            arg_8h_00 = &var_24h;\n            pcVar3 = fcn.00441b7d(arg_8h_00);\n            (*pcVar3)(arg_8h_00, uVar8, uVar9, puVar6);\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(arg_8h, &var_2a0h, 0x104);\n            fcn.0040e8e0();\n            fcn.00431858(&var_24h);\n            return 0;\n        }\n        if (iVar7 != 7) {\n            var_4h = NULL;\n            iVar4 = (***piVar5)(piVar5, 0x4819c0, &var_3ch);\n            if (iVar4 < 0) {\n                piVar5 = (**(*piVar5 + 0x10))(piVar5, 0, 0x800, &var_4h);\n            }\n            else {\n                arg_8h = (**(*var_3ch + 0xc))(var_3ch, &var_4h);\n                (**(*var_3ch + 8))(var_3ch);\n                piVar5 = arg_8h;\n            }\n            puVar6 = NULL;\n            if ((piVar5 < 0) || (var_4h == NULL)) {\n                fcn.00403f40(1, 0);\n                return 0;\n            }\n            if (iVar7 == 1) {\n                (**(*var_4h + 0x30))(var_4h, 0xffffffff, &arg_8h, 0, 0, 0);\n                fcn.0040e8e0();\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h);\n                (**(*var_4h + 8))(var_4h);\n                return 0;\n            }\n            if (iVar7 == 2) {\n                (**(*var_4h + 0x30))(var_4h, 0xffffffff, 0, &arg_8h, 0, 0);\n                fcn.0040e8e0();\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h);\n                (**(*var_4h + 8))(var_4h);\n                return 0;\n            }\n            (**(*var_4h + 0x48))(var_4h, &arg_8h, &var_38h);\n            if (iVar7 == 4) {\n                (**(*arg_8h + 0x1c))(arg_8h, &var_10h);\n                iVar7 = (*_sym.imp.OLEAUT32.dll_LHashValOfNameSys)\n                                  (var_10h, *(var_10h + 6), *(var_10h + 0x1a), var_10h[4], &var_ch);\n                (**(*arg_8h + 0x30))(arg_8h, var_10h);\n                if (iVar7 == 0) {\n                    fcn.0040e8e0();\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_ch);\n                }\n            }\n            else {\n                (**(*arg_8h + 0x14))(arg_8h, var_38h, &var_18h);\n                if (var_18h != 5) {\n                    var_2ch = (**(*arg_8h + 0xc))(arg_8h);\n                    var_30h = 0;\n                    if (var_2ch != NULL) {\n                        do {\n                            if (var_30h != 0) break;\n                            var_18h = 0;\n                            (**(*arg_8h + 0x14))(arg_8h, puVar6, &var_18h);\n                            if (var_18h == 5) {\n                                (**(*arg_8h + 0x10))(arg_8h, puVar6, &var_14h);\n                                (**(*var_14h + 0xc))(var_14h, &var_44h);\n                                uVar1 = *(var_44h + 0x30);\n                                (**(*var_14h + 0x4c))(var_14h, var_44h);\n                                var_34h = -1;\n                                var_ch = 0;\n                                if (uVar1 != 0) {\n                                    do {\n                                        iVar4 = (**(*var_14h + 0x20))(var_14h, var_ch, &var_40h);\n                                        if (iVar4 == 0) {\n                                            (**(*var_4h + 0x38))(var_4h, var_40h, &var_10h);\n                                            (**(*var_10h + 0x48))(var_10h, 0, &var_34h);\n                                            if (var_34h == var_38h) {\n                                                var_30h = 1;\n                                                (**(*var_10h + 8))(var_10h);\n                                                (**(*var_4h + 8))(var_4h);\n                                                var_4h = var_14h;\n                                                goto code_r0x00457ee0;\n                                            }\n                                            (**(*var_10h + 8))();\n                                        }\n                                        var_ch = var_ch + 1;\n                                    } while (var_ch < uVar1);\n                                }\n                                (**(*var_14h + 8))(var_14h);\n                            }\ncode_r0x00457ee0:\n                            puVar6 = puVar6 + 1;\n                        } while (puVar6 < var_2ch);\n                    }\n                }\n                if (((iVar7 == 3) || (iVar7 == 6)) && (var_18h == 5)) {\n                    (**(*var_4h + 0xc))(var_4h, &var_2ch);\n                    var_28h = *var_2ch;\n                    var_24h = var_2ch[1];\n                    var_20h = var_2ch[2];\n                    var_1ch = var_2ch[3];\n                    (**(*var_4h + 0x4c))(var_4h, var_2ch);\n                    iVar4 = (*_sym.imp.ole32.dll_StringFromGUID2)(&var_28h, &var_94h, 0x28);\n                    if (iVar4 != 0) {\n                        if (iVar7 == 6) {\n                            fcn.0040e8e0();\n                            goto code_r0x00457fd0;\n                        }\n                        if (iVar7 != 3) goto code_r0x00457fd0;\n                        iVar7 = (*_sym.imp.ole32.dll_ProgIDFromCLSID)(&var_28h, &var_8h);\n                        if ((iVar7 == 0) && (var_8h != NULL)) {\n                            fcn.0040e8e0();\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)(var_8h);\n                            goto code_r0x00457fd0;\n                        }\n                    }\n                    fcn.00403f40(1, 0);\n                }\n            }\ncode_r0x00457fd0:\n            (**(*arg_8h + 8))(arg_8h);\n            (**(*var_4h + 8))(var_4h);\n            return 0;\n        }\n        iVar7 = (**(*piVar5 + 0x10))(piVar5, 0, 0x800, &arg_8h);\n        if ((iVar7 == 0) && (arg_8h != NULL)) {\n            (**(*arg_8h + 0xc))(arg_8h, &var_8h);\n            var_28h = *var_8h;\n            var_24h = var_8h[1];\n            var_20h = var_8h[2];\n            var_1ch = var_8h[3];\n            (**(*arg_8h + 0x4c))(arg_8h, var_8h);\n            (*_sym.imp.ole32.dll_StringFromGUID2)(&var_28h, &var_94h, 0x28);\n            fcn.0040e8e0();\n            (**(*arg_8h + 8))(arg_8h);\n            return 0;\n        }\n    }\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 2392
    },
    "00458b3a": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458b3a(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint lpFaceName;\n    uint var_28h;\n    uint var_18h;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar9 = arg_8h;\n    var_4h = -1;\n    arg_8h = -1;\n    uVar10 = 0x88c00000;\n    var_18h = 8;\n    fcn.0040bf10();\n    if (*0x497510 != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x497510);\n        *0x497510 = 0;\n    }\n    if (arg_10h == 1) {\n        fcn.00402260();\n        return 0;\n    }\n    if (2 < arg_ch) {\n        uVar3 = fcn.00452e60(*(*(iVar9 + 4) + 8));\n        fcn.0040e410(uVar3);\n    }\n    if (3 < arg_ch) {\n        var_4h = fcn.0040c8f0();\n    }\n    if (4 < arg_ch) {\n        arg_8h = fcn.0040c8f0();\n    }\n    if (5 < arg_ch) {\n        uVar4 = fcn.0040c8f0();\n        if ((uVar4 & 1) != 0) {\n            uVar10 = 0x88000000;\n        }\n        uVar4 = fcn.0040c8f0();\n        if ((uVar4 & 2) != 0) {\n            var_18h = 0;\n        }\n        uVar4 = fcn.0040c8f0();\n        if ((uVar4 & 0x10) != 0) {\n            uVar10 = uVar10 ^ 0x8000000;\n        }\n    }\n    (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n    if (var_4h == -1) {\n        var_4h = (var_ch + -300) / 2;\n    }\n    if (arg_8h == -1) {\n        arg_8h = (var_8h + -100) / 2;\n    }\n    (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, 300, 100);\n    uVar7 = var_18h;\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, uVar10, 0, var_18h);\n    var_8h = var_8h - var_10h;\n    uVar3 = **(iVar9 + 4);\n    uVar17 = 0;\n    uVar16 = 0;\n    uVar15 = 0;\n    iVar8 = var_ch - lpRect;\n    iVar14 = var_4h;\n    uVar6 = *0x497518;\n    uVar5 = fcn.00452e81(uVar3);\n    pcVar2 = _sym.imp.USER32.dll_CreateWindowExW;\n    *0x497510 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (uVar7, L\"AutoIt v3\", uVar5, uVar3, uVar10, iVar14, arg_8h, iVar8, var_8h, uVar6, uVar15, \n                           uVar16, uVar17);\n    (*_sym.imp.USER32.dll_GetClientRect)(*0x497510, &lpRect);\n    uVar3 = *(*(iVar9 + 4) + 4);\n    uVar13 = 0;\n    uVar12 = 0;\n    uVar11 = 0;\n    uVar17 = 0x18;\n    uVar16 = 0x500;\n    uVar15 = 4;\n    iVar9 = (var_ch - lpRect) + -0x119;\n    uVar5 = 0x50000000;\n    uVar7 = *0x497510;\n    uVar6 = fcn.00452e81(uVar3);\n    *0x497508 = (*pcVar2)(0, L\"static\", uVar6, uVar3, uVar5, iVar9, uVar15, uVar16, uVar17, uVar7, uVar11, uVar12, \n                          uVar13);\n    uVar3 = (*_sym.imp.GDI32.dll_CreateDCW)(L\"DISPLAY\", 0, 0, 0);\n    uVar7 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar3, uVar7);\n    (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar3, 0x40, &lpFaceName);\n    iVar9 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar3);\n    uVar3 = (*_sym.imp.GDI32.dll_CreateFontW)((iVar9 * -10) / 0x48, 0, 0, 0, 600, 0, 0, 0, 1, 4, 0, 2, 0, &lpFaceName);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*0x497508, 0x30, uVar3, 1);\n    *0x49750c = (*pcVar2)(0x200, L\"msctls_progress32\", 0, 0x50000001, ((var_ch - lpRect) + -0x104) / 2, 0x1e, 0x104, \n                          0x14, *0x497510, 0, 0, 0);\n    (*pcVar1)(*0x49750c, 0x401, 0, 0x640000);\n    (*pcVar1)(*0x49750c, 0x404, 1, 0);\n    *0x497504 = (*pcVar2)(0, L\"static\", var_28h, 0x50000000, (var_ch - lpRect) + -0x118, 0x37, 0x500, 0x32, *0x497510, 0\n                          , 0, 0);\n    uVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11, 1);\n    (*pcVar1)(*0x497504, 0x30, uVar3);\n    (*_sym.imp.USER32.dll_ShowWindow)(*0x497510, 4);\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1679
    },
    "00458f66": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00458f66(int32_t arg_8h, int32_t *hgdiobj, int32_t hWnd)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint *puVar10;\n    uint uVar11;\n    uint uVar12;\n    int32_t iVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint lpFaceName;\n    uint32_t lpNumberOfBytesRead;\n    uint var_28h;\n    int32_t nHeight;\n    int32_t lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t *ppstm;\n    \n    pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n    ppstm = 0x1f4;\n    nHeight = 400;\n    var_10h = -1;\n    var_ch = -1;\n    lpNumberOfBytesRead = 0;\n    var_8h = 0x50000001;\n    uVar8 = 0x88c00000;\n    uVar9 = 8;\n    if (*0x4974fc != 0) {\n        if (*0x497500 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(*0x497500);\n            *0x497500 = 0;\n        }\n        if (*0x4974f8 != 0) {\n            (*pcVar1)(*0x4974f8);\n            *0x4974f8 = 0;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x4974fc);\n        *0x4974fc = 0;\n    }\n    if (hWnd != 2) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&lpRect);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar2);\n        iVar5 = arg_8h;\n        if ((2 < hgdiobj) && (iVar3 = fcn.0040c8f0(),  iVar3 != -1)) {\n            ppstm = fcn.0040c8f0();\n        }\n        if ((3 < hgdiobj) && (iVar3 = fcn.0040c8f0(),  iVar3 != -1)) {\n            nHeight = fcn.0040c8f0();\n        }\n        if (4 < hgdiobj) {\n            var_10h = fcn.0040c8f0();\n        }\n        if (5 < hgdiobj) {\n            var_ch = fcn.0040c8f0();\n        }\n        uVar2 = uVar9;\n        if ((6 < hgdiobj) && (iVar3 = fcn.0040c8f0(),  uVar2 = 8,  iVar3 != -1)) {\n            lpNumberOfBytesRead = fcn.0040c8f0();\n            if (hWnd == 1) {\n                if ((lpNumberOfBytesRead & 8) != 0) {\n                    var_8h = 0x50000002;\n                }\n                if ((lpNumberOfBytesRead & 4) != 0) {\n                    var_8h = (var_8h & 2U | 0xa0000001) >> 1;\n                }\n            }\n            if ((lpNumberOfBytesRead & 2) != 0) {\n                uVar9 = 0;\n            }\n            if ((lpNumberOfBytesRead & 1) != 0) {\n                uVar8 = 0x88800000;\n            }\n            uVar2 = uVar9;\n            if ((lpNumberOfBytesRead & 0x10) != 0) {\n                uVar8 = uVar8 ^ 0x8000000;\n            }\n        }\n        if (var_10h == -1) {\n            var_10h = (var_18h - ppstm) / 2;\n        }\n        if (var_ch == -1) {\n            var_ch = (var_14h - nHeight) / 2;\n        }\n        (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, ppstm, nHeight);\n        (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, uVar8, 0, uVar2);\n        iVar7 = var_14h - var_1ch;\n        uVar9 = **(iVar5 + 4);\n        uVar16 = 0;\n        uVar15 = 0;\n        uVar14 = 0;\n        iVar6 = var_18h - lpRect;\n        iVar3 = var_10h;\n        iVar13 = var_ch;\n        uVar11 = *0x497518;\n        uVar4 = fcn.00452e81(uVar9);\n        *0x4974fc = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (uVar2, L\"AutoIt v3\", uVar4, uVar9, uVar8, iVar3, iVar13, iVar6, iVar7, uVar11, uVar14, \n                               uVar15, uVar16);\n        (*_sym.imp.USER32.dll_GetClientRect)(*0x4974fc, &lpRect);\n        if (hWnd != 0) {\n            uVar9 = *(*(iVar5 + 4) + 4);\n            iVar7 = (var_14h - var_1ch) + -0x16;\n            iVar6 = (var_18h - lpRect) + -0x16;\n            uVar4 = 0xb;\n            uVar11 = 0xb;\n            ppstm = 0xc;\n            nHeight = 400;\n            uVar8 = var_8h;\n            iVar5 = iVar6;\n            iVar3 = iVar7;\n            iVar13 = *0x4974fc;\n            uVar2 = fcn.00452e81(uVar9);\n            hWnd = (*_sym.imp.USER32.dll_CreateWindowExW)\n                             (0, L\"static\", uVar2, uVar9, uVar8, uVar11, uVar4, iVar5, iVar3, iVar13);\n            uVar9 = (*_sym.imp.GDI32.dll_CreateDCW)(L\"DISPLAY\", 0, 0, 0);\n            uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar9, uVar2);\n            (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar9, 0x40, &lpFaceName);\n            var_8h = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar9, 0x5a);\n            (*_sym.imp.GDI32.dll_DeleteDC)(uVar9);\n            uVar8 = hgdiobj;\n            if (7 < hgdiobj) {\n                uVar9 = fcn.00452e81(*(*(arg_8h + 4) + 0x1c));\n                iVar5 = fcn.00411361(uVar9);\n                if (iVar5 != 0) {\n                    uVar9 = fcn.00452e81(*(*(arg_8h + 4) + 0x1c));\n                    fcn.00411707(&lpFaceName, uVar9);\n                }\n            }\n            if ((8 < uVar8) && (iVar5 = fcn.0040c8f0(),  5 < iVar5)) {\n                ppstm = fcn.0040c8f0();\n            }\n            iVar5 = nHeight;\n            if (((9 < uVar8) && (iVar3 = fcn.0040c8f0(),  iVar5 = nHeight,  -1 < iVar3)) &&\n               (iVar3 = fcn.0040c8f0(),  iVar5 = nHeight,  iVar3 < 0x3e9)) {\n                iVar5 = fcn.0040c8f0();\n            }\n            iVar3 = var_8h * ppstm * -0x38e38e39 >> 0x20;\n            *0x497500 = (*_sym.imp.GDI32.dll_CreateFontW)\n                                  ((iVar3 >> 4) - (iVar3 >> 0x1f), 0, 0, 0, iVar5, 0, 0, 0, 1, 4, 0, 2, 0, &lpFaceName);\n            uVar9 = hWnd;\n            (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x30, *0x497500, 1);\n            if ((lpNumberOfBytesRead & 0x20) != 0) {\n                uVar2 = (*_sym.imp.USER32.dll_GetDC)(uVar9);\n                hgdiobj = (*_sym.imp.GDI32.dll_SelectObject)(uVar2, *0x497500);\n                uVar9 = *(*(arg_8h + 4) + 4);\n                puVar10 = &var_28h;\n                uVar11 = fcn.00452e81(uVar9);\n                fcn.004435e4(uVar2, uVar11, uVar9);\n                (*_sym.imp.GDI32.dll_SelectObject)(uVar2, hgdiobj, puVar10);\n                uVar9 = hWnd;\n                (*_sym.imp.USER32.dll_ReleaseDC)(hWnd, uVar2);\n                (*_sym.imp.USER32.dll_MoveWindow)(uVar9, 0xb, (iVar7 - nHeight) / 2 + 0xb, iVar6, nHeight, 1);\n            }\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x4974fc, 4);\n            return 0;\n        }\n        hgdiobj = NULL;\n        hWnd = (*_sym.imp.USER32.dll_CreateWindowExW)\n                         (0, L\"static\", 0, 0x5000000e, 0, 0, var_18h - lpRect, var_14h - var_1ch, *0x4974fc, 0, 0, 0);\n        uVar12 = 0;\n        uVar16 = 0;\n        uVar15 = 3;\n        uVar14 = 0;\n        uVar4 = 0;\n        uVar9 = *(*(iVar5 + 4) + 4);\n        uVar11 = 0x80000000;\n        uVar2 = fcn.00452e81(uVar9);\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar2, uVar9, uVar11, uVar4, uVar14, uVar15, uVar16, uVar12);\n        if (iVar5 != -1) {\n            uVar9 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar5, 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar9);\n            uVar11 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar2);\n            (*_sym.imp.KERNEL32.dll_ReadFile)(iVar5, uVar11, uVar9, &lpNumberOfBytesRead, 0);\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n            (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(uVar2, 1, &ppstm);\n            (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(ppstm, 0, 0, 0x4819f0, &hgdiobj);\n            (**(*ppstm + 8))(ppstm);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n            if (hgdiobj != NULL) {\n                (**(*hgdiobj + 0xc))(hgdiobj, &arg_8h);\n                arg_8h = (*_sym.imp.USER32.dll_CopyImage)(arg_8h, 0, 0, 0, 0x2000);\n                (**(*hgdiobj + 8))(hgdiobj);\n                uVar9 = hWnd;\n                (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x172, 0, arg_8h);\n                *0x4974f8 = arg_8h;\n                (*_sym.imp.USER32.dll_SetWindowPos)(uVar9, 0, 0, 0, var_18h - lpRect, var_14h - var_1ch, 0x20);\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x4974fc, 4);\n                return 0;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2903
    },
    "00459683": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459683(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t arg_14h;\n    uint unaff_EDI;\n    \n    uVar3 = **(arg_8h + 4);\n    arg_14h = -1;\n    uVar1 = fcn.00452e81(uVar3);\n    iVar2 = fcn.0044b613(uVar1);\n    if (iVar2 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    uVar1 = fcn.0040c8f0();\n    arg_10h = fcn.0040c8f0();\n    fcn.0040c8f0();\n    fcn.0040c8f0();\n    if (5 < *(arg_8h + 8)) {\n        arg_14h = fcn.0040c8f0();\n    }\n    fcn.00441ce9(in_ECX, uVar1, arg_10h, arg_14h, 1);\n    if ((arg_14h < 2) && (arg_14h != -1)) {\n        arg_14h = 2;\n    }\n    uVar1 = fcn.00452e81(**(arg_8h + 4));\n    fcn.0044b753(uVar1);\n    fcn.0043374b(*(in_ECX + 0x114));\n    fcn.00441ce9(in_ECX, unaff_EDI, uVar3, arg_14h, 1);\n    fcn.0043374b(*(in_ECX + 0x114));\n    uVar3 = fcn.00452e81(**(arg_8h + 4));\n    fcn.0044b6ef(uVar3);\n    fcn.0043374b(*(in_ECX + 0x10c));\n    return 0;\n}\n",
        "token_count": 481
    },
    "00459a3d": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00459a3d(int32_t arg_8h, double *arg_ch)\n\n{\n    double *pdVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    float10 fVar5;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    double dStack16;\n    int32_t var_4h;\n    \n    pdVar1 = arg_ch;\n    fcn.004091e0();\n    iVar4 = arg_8h;\n    *(pdVar1 + 1) = 1;\n    *pdVar1 = 0;\n    var_4h = 0;\n    if (6 < *(arg_8h + 8)) {\n        var_4h = fcn.0040c8f0();\n    }\n    arg_ch = 0x1;\n    if (4 < *(iVar4 + 8)) {\n        iVar2 = fcn.0040c8f0();\n        if (1 < iVar2) {\n            arg_ch = fcn.0040c8f0();\n        }\n    }\n    if (5 < *(iVar4 + 8)) {\n        uVar3 = fcn.0044b01e(*(*(iVar4 + 4) + 0x14));\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar3);\n        if (iVar2 != 0) {\n            arg_8h = fcn.0044b01e(*(*(iVar4 + 4) + 0x14));\n            goto code_r0x00459ad6;\n        }\n    }\n    arg_8h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00459ad6:\n    var_1ch = fcn.0040c8f0();\n    var_18h = fcn.0040c8f0();\n    iVar4 = fcn.0040c8f0();\n    var_14h = iVar4;\n    var_10h = fcn.0040c8f0();\n    iVar4 = fcn.0041365d(iVar4 - var_1ch);\n    iVar2 = fcn.004318ef(var_8h, arg_8h, &var_1ch, &arg_8h);\n    if (iVar2 != 0) {\n        if (var_4h == 1) {\n            fVar5 = fcn.00431a91(iVar2, arg_8h, iVar4 + 1, arg_ch);\n        }\n        else {\n            fVar5 = fcn.00431b38(iVar2, arg_8h, iVar4 + 1, arg_ch);\n        }\n        dStack16 = fVar5;\n        fcn.004091e0();\n        *pdVar1 = dStack16;\n        *(pdVar1 + 1) = 3;\n        fcn.0041137c(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 688
    },
    "0045b5cd": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b5cd(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar2;\n    uint arg_10h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = 0xffffffff;\n    uVar2 = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_ch = 0xffffffff;\n    var_8h = 0xffffffff;\n    var_4h = 0xffffffff;\n    iVar1 = fcn.0040c8f0();\n    if (0 < iVar1) {\n        if (7 < *(arg_8h + 8)) {\n            var_4h = fcn.0040c8f0();\n        }\n        if (6 < *(arg_8h + 8)) {\n            var_8h = fcn.0040c8f0();\n        }\n        if (5 < *(arg_8h + 8)) {\n            var_ch = fcn.0040c8f0();\n        }\n        if (4 < *(arg_8h + 8)) {\n            var_10h = fcn.0040c8f0();\n        }\n        if (3 < *(arg_8h + 8)) {\n            uVar2 = fcn.0040c8f0();\n        }\n        if (2 < *(arg_8h + 8)) {\n            arg_10h = fcn.0040c8f0();\n        }\n        arg_ch_00 = fcn.0040c8f0();\n        arg_8h_00 = fcn.0040c8f0();\n        uVar2 = fcn.00447ab5(arg_8h_00, arg_ch_00, arg_10h, uVar2, var_10h, var_ch, var_8h, var_4h);\n        fcn.004091e0();\n        *arg_ch = uVar2;\n        arg_ch[2] = 1;\n        return 0;\n    }\n    fcn.004091e0();\n    *arg_ch = 0;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 517
    },
    "0045f1d1": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f1d1(int16_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iStack80;\n    int16_t *piStack76;\n    int16_t *piStack72;\n    int16_t *piStack68;\n    uint uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    int16_t *piStack24;\n    uint uStack20;\n    \n    fcn.00410330();\n    fcn.0040f670();\n    piStack76 = 0xffffffff;\n    if ((arg_8h == 0x5) || (arg_8h == 0x6)) goto code_r0x0045f40e;\n    if ((arg_8h == 0x3) || (arg_8h == 0x4)) {\n        piStack76 = arg_8h;\n        if (arg_8h == 0x3) {\n            if (*piStack72 == 0) {\n                fcn.0040e410(0x4a872c);\n            }\n            else {\ncode_r0x0045f35f:\n                fcn.00402170();\n            }\n        }\n        else if (arg_8h == 0x4) {\n            if (*piStack72 != 0) goto code_r0x0045f35f;\n            fcn.0040e410(0x4a873c);\n        }\n        arg_10h = 0xffffffff;\n        if ((*(arg_8h * 4 + 0x4a88c4) == 0) || (*piStack76 == 0)) goto code_r0x0045f40e;\n    }\n    else {\n        cVar3 = fcn.0043475c(0x4a8710, arg_8h, &piStack76);\n        if (cVar3 == '\\0') goto code_r0x0045f40e;\n    }\n    puVar1 = *(iStack80 * 4 + 0x4a88c4);\n    fcn.00411777(0x208);\n    fcn.0040f670();\n    uStack60 = 0x30;\n    fcn.004130e0(&uStack56, 0, 0x2c);\n    uStack56 = 0x11;\n    piStack24 = piStack68;\n    uStack20 = 0x104;\n    iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*puVar1, iStack80, 0, &uStack60);\n    if ((iVar4 != 0) && ((uStack52 & 0x800) == 0)) {\n        uVar2 = uStack48 & 0x1000;\n        if (arg_10h < 0) {\n            if (*piStack76 == 0) goto code_r0x0045f405;\n            uStack56 = 0x10;\n            piStack24 = piStack76;\n            uStack20 = fcn.00411361(piStack76);\n            arg_10h = 0;\n        }\n        else {\n            uVar5 = uStack48;\n            if ((arg_10h & 0x40) != 0) {\n                uVar5 = uStack48 & 0xfffffffc;\n            }\n            if (arg_10h < '\\0') {\n                uVar5 = uVar5 | 3;\n            }\n            if ((arg_10h & 1) != 0) {\n                uVar5 = uVar5 | 8;\n            }\n            if ((arg_10h & 4) != 0) {\n                uVar5 = uVar5 & 0xfffffff7;\n            }\n            if ((arg_10h & 0x100) != 0) {\n                uVar5 = uVar5 | 0x80;\n            }\n            if (((uStack48 & 8) != 0) && ((arg_10h & 4) == 0)) {\n                uVar5 = uVar5 | 8;\n            }\n            uStack56 = 1;\n            uStack48 = uVar5;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*puVar1, iStack80, 0, &uStack60);\n        if (iVar4 != 0) {\n            if (arg_10h < 1) {\ncode_r0x0045f432:\n                fcn.0040f690();\n                fcn.0040f690();\n                return 1;\n            }\n            if ((arg_10h & 0x200) == 0) {\n                if (uVar2 == 0) goto code_r0x0045f432;\n                uVar6 = *puVar1;\n                iStack80 = -1;\n            }\n            else {\n                uVar6 = *puVar1;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_SetMenuDefaultItem)(uVar6, iStack80, 0);\n            if (iVar4 != 0) goto code_r0x0045f432;\n        }\n    }\ncode_r0x0045f405:\n    fcn.0040f690();\ncode_r0x0045f40e:\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 1227
    },
    "0046243e": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0046243e(int32_t nIDButton, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *arg_ch_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffa0;\n    uint *in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    int32_t in_stack_ffffffac;\n    uint *in_stack_ffffffb0;\n    uint *arg_ch_01;\n    int32_t var_ch;\n    uint *var_8h;\n    uint var_2h;\n    \n    uVar4 = fcn.004417f1(0x4a8630, nIDButton, &var_8h, &var_ch);\n    iVar5 = var_ch;\n    if (uVar4 == '\\0') {\n        return uVar4;\n    }\n    arg_ch_01 = **(*0x4a8690 + var_8h * 4);\n    arg_ch_00 = **(*0x4a86a4 + var_ch * 4);\n    var_2h._0_1_ = *(arg_ch_00 + 0x22);\n    uVar4 = *0x4a86a4 & 0xffffff00;\n    if (arg_ch == 6) {\n        if (var_2h == 0x18) goto code_r0x004624bf;\n    }\n    else if (arg_ch == 4) {\n        if (var_2h == 1) goto code_r0x004624bf;\n    }\n    else if (arg_ch == 3) {\n        if (var_2h == 0) {\ncode_r0x004624bf:\n            uVar4 = arg_ch_01[0x74];\n            arg_ch_01[7] = var_ch;\n            if (uVar4 != 0) {\n                uVar4 = fcn.00435804(uVar4, arg_ch_00);\n            }\n        }\n    }\n    else if ((arg_ch == 0x100) && ((var_2h == 2 || (var_2h == 3)))) goto code_r0x004624bf;\n    if (*(arg_ch_01 + 0xe) == '\\0') {\ncode_r0x004624f9:\n        return uVar4 & 0xffffff00;\n    }\n    piVar2 = *(*0x4a86a4 + iVar5 * 4);\n    uVar1 = *(*piVar2 + 0x8b);\n    uVar4 = piVar2 & 0xffffff00;\n    if ((uVar1 != 0xff) && (uVar1 != arg_ch_01[0x65])) goto code_r0x004624f9;\n    fcn.00455e06(0x4a8630, arg_ch_01, 0);\n    var_8h = arg_ch_01[0x5f];\n    iVar5 = arg_ch_01[0x5e];\n    var_2h._1_1_ = 0;\n    if (0x1c < var_2h) goto code_r0x0046269f;\n    // switch table (29 cases) at 0x4626d2\n    switch(*(*(var_2h + 0x4626f6) * 4 + 0x4626d2)) {\n    case 0x46253f:\n        if (arg_ch != 1) goto code_r0x0046269f;\n        goto code_r0x00462691;\n    case 0x462558:\n        if (arg_ch != 1) goto code_r0x0046269f;\n        break;\n    case 0x462567:\n        if (arg_ch != 0) {\n            if (arg_ch == 0x300) {\n                iVar3 = arg_ch_01[0x72];\n                if ((0 < iVar3) && (iVar3 != nIDButton)) {\n                    arg_ch_01[0x72] = 0;\n                    fcn.00451447(iVar3, arg_ch_01, *arg_ch_00, iVar5, var_8h);\n                }\n                arg_ch_01[0x72] = nIDButton;\n            }\n            else if (arg_ch == 0x200) {\n                if (*(arg_ch_00 + 0x22) == '\\x02') {\n                    (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch_00, 0xb0, arg_ch_01 + 0x70, arg_ch_01 + 0x71);\n                }\n                iVar3 = arg_ch_01[0x72];\n                if ((0 < iVar3) && (iVar3 == nIDButton)) {\n                    arg_ch_01[0x72] = 0;\n                    fcn.00451447(iVar3, arg_ch_01, *arg_ch_00, iVar5, var_8h);\n                }\n            }\n            goto code_r0x0046269f;\n        }\n        goto code_r0x00462691;\n    case 0x462625:\n        iVar5 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(*arg_ch_01, nIDButton);\n        in_stack_ffffffa0 = nIDButton;\n        nIDButton = in_stack_ffffffac;\n        arg_ch_01 = in_stack_ffffffb0;\n        if (iVar5 != 1) goto code_r0x0046269f;\n        goto code_r0x00462691;\n    case 0x462646:\n        uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_ch_00, 0xffffffec);\n        if ((uVar4 & 0x100000) != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch_01, 0xa1, 2, 0);\n        }\n    case 0x46266d:\n        if (arg_ch != 0) goto code_r0x0046269f;\n        break;\n    case 0x462675:\n        fcn.00440709(0x4a8630, arg_ch_01, arg_ch);\n        break;\n    case 0x46269f:\n        goto code_r0x0046269f;\n    }\n    in_stack_ffffffa8 = *arg_ch_00;\n    in_stack_ffffffa0 = nIDButton;\n    in_stack_ffffffa4 = arg_ch_01;\n    nIDButton = iVar5;\n    arg_ch_01 = var_8h;\ncode_r0x00462691:\n    fcn.00451447(in_stack_ffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, nIDButton, arg_ch_01);\n    var_2h._1_1_ = 1;\ncode_r0x0046269f:\n    uVar4 = *(**(*0x4a86a4 + var_ch * 4) + 0x4c);\n    if (uVar4 != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x41c, 0, 0);\n    }\n    return uVar4 & 0xffffff00 | var_2h._1_1_;\n}\n",
        "token_count": 1650
    },
    "0046433f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046433f(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, double *arg_18h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_EBX;\n    uchar *arg_8h_00;\n    uint unaff_ESI;\n    uint32_t uVar8;\n    uint arg_ch_00;\n    char cVar9;\n    uint32_t arg_10h_00;\n    uint32_t uVar10;\n    double dVar11;\n    uchar *arg_8h_01;\n    uint32_t uVar12;\n    uchar *arg_8h_02;\n    uint32_t uStack164;\n    uint uStack160;\n    uint32_t uStack156;\n    uchar *puStack152;\n    uint uStack148;\n    uchar auStack144 [4];\n    uchar auStack140 [4];\n    uchar auStack136 [8];\n    uchar auStack128 [20];\n    uchar auStack108 [28];\n    uint uStack80;\n    uint32_t uStack64;\n    int32_t iStack52;\n    int32_t iStack40;\n    uint uStack36;\n    ushort uStack32;\n    \n    uVar8 = 0;\n    fcn.004130e0();\n    arg_8h_00 = NULL;\n    uStack80 = 0x44;\n    uStack36 = 1;\n    uStack32 = 1;\n    uStack148 = 0;\n    puStack152 = NULL;\n    uStack156 = 0;\n    uStack160 = 0;\n    if (arg_10h == '\\0') {\n        if (3 < *(arg_14h + 8)) {\n            uVar8 = fcn.0040c8f0();\n            uVar8 = uVar8 & 0xffff0000;\n            uStack156 = fcn.0040c8f0();\n            uStack156 = uStack156 & 0xffff;\n        }\n        if (2 < *(arg_14h + 8)) goto code_r0x00464423;\n    }\n    else {\n        puStack152 = fcn.0040c8f0();\n        if (7 < *(arg_14h + 8)) {\n            uVar8 = fcn.0040c8f0();\n            uVar8 = uVar8 & 0xffff0000;\n            uStack156 = fcn.0040c8f0();\n            uStack156 = uStack156 & 0xffff;\n        }\n        if (6 < *(arg_14h + 8)) {\ncode_r0x00464423:\n            uStack32 = fcn.0040c8f0();\n        }\n    }\n    if ((uVar8 & 0x10000) != 0) {\n        uStack160 = 0x10;\n    }\n    uVar8 = **(arg_14h + 4);\n    fcn.00452e81(uVar8);\n    arg_8h_02 = 0x464452;\n    uVar4 = fcn.00410330();\n    if (arg_10h == '\\0') {\n        if (*(arg_14h + 8) < 2) {\ncode_r0x004645d4:\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n            iVar1 = (iVar5 + 1) * 2;\n            iVar5 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n            (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n        }\n        else {\n            arg_8h_02 = *(*(arg_14h + 4) + 4);\n            fcn.00452e81(arg_8h_02);\n            iVar5 = fcn.00410330();\n            if ((iVar5 == 0) || (iVar6 = fcn.00411361(iVar5),  iVar6 == 0)) goto code_r0x004645d4;\n        }\n    }\n    else {\n        arg_8h_02 = *(*(arg_14h + 4) + 4);\n        uStack148 = uVar4;\n        fcn.00452e81(arg_8h_02);\n        uStack156 = fcn.00410330();\n        fcn.00452e81(*(*(arg_14h + 4) + 8));\n        fcn.00410330();\n        fcn.00452e81(*(*(arg_14h + 4) + 0x10));\n        unaff_ESI = fcn.00410330();\n        if (*(arg_14h + 8) < 6) {\ncode_r0x004644d0:\n            iVar6 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n            iVar1 = (iVar6 + 1) * 2;\n            iVar5 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(iVar5, iVar6);\n        }\n        else {\n            fcn.00452e81(*(*(arg_14h + 4) + 0x14));\n            iVar5 = fcn.00410330();\n            if ((iVar5 == 0) || (iVar6 = fcn.00411361(iVar5),  iVar6 == 0)) goto code_r0x004644d0;\n        }\n        fcn.0040e8e0();\n        fcn.0040e8e0();\n        fcn.0040e8e0();\n        arg_8h_00 = puStack152;\n    }\n    puVar7 = &stack0xffffff80;\n    arg_8h_01 = 0x464544;\n    arg_10h_00 = uStack164;\n    fcn.00432c6b(puVar7, uStack164);\n    if (uStack164 != 0) {\n        arg_8h_01 = &stack0xffffff78;\n        uVar8 = uVar8 & 0xff000000 | CONCAT12(1, uVar8);\n        iStack40 = fcn.00443351(arg_8h_01);\n        if (iStack40 == -1) {\n            arg_8h_02 = arg_8h_02 & 0xff00ffff;\n        }\n        iStack40 = fcn.0044331b(&stack0xffffff74);\n        if (iStack40 == -1) {\n            arg_10h_00 = arg_10h_00 & 0xff00ffff;\n        }\n        iStack52 = fcn.00443303(&stack0xffffff70);\n        if (iStack52 != -1) {\n            if (puVar7 >> 0x10 != '\\0') {\n                uStack64 = uStack64 | 0x100;\n            }\n            goto code_r0x0046461d;\n        }\n    }\n    puVar7 = NULL;\ncode_r0x0046461d:\n    if (arg_10h == '\\0') {\n        uVar10 = 0;\n        cVar9 = '\\0';\n        iVar6 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                          (0, arg_8h_02, 0, 0, puVar7 >> 0x10 & 0xff, uVar8, 0, iVar5, &stack0xffffff94, \n                           &stack0xffffff5c);\n        cVar3 = iVar6 != 0;\n    }\n    else {\n        uVar12 = arg_10h_00;\n        cVar3 = fcn.004461d5(arg_8h_00, unaff_EBX, arg_10h_00, unaff_ESI, arg_8h_02, uVar8, iVar5, &stack0xffffff94, \n                             &stack0xffffff5c);\n        cVar9 = arg_10h_00 >> 0x10;\n        iVar6 = fcn.00411361(arg_8h_00);\n        puVar7 = arg_8h_00;\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        iVar6 = fcn.00411361(unaff_EBX);\n        puVar7 = unaff_EBX;\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        iVar6 = fcn.00411361(arg_8h_02);\n        puVar7 = arg_8h_02;\n        for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        fcn.0041137c(arg_8h_00);\n        fcn.0041137c(unaff_EBX);\n        fcn.0041137c(arg_8h_02);\n        uVar10 = uVar8;\n        arg_10h_00 = uVar12;\n    }\n    fcn.0041137c(uVar10);\n    fcn.0041137c(iVar5);\n    pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (cVar3 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_10h_00);\n        if (cVar9 != '\\0') {\n            fcn.00443281(&stack0xffffff44);\n            fcn.0044b448(&stack0xffffff40);\n            fcn.0044a08c(arg_8h + 0x468, &stack0xffffff3c);\n        }\n        if (arg_ch == '\\0') {\n            dVar11 = arg_10h_00;\n            if (arg_10h_00 < 0) {\n                dVar11 = dVar11 + *0x48bd70;\n            }\n            fcn.004091e0();\n            *arg_18h = dVar11;\n            *(arg_18h + 1) = 3;\n            (*pcVar2)(arg_8h_01);\n            fcn.0044b4fe(&stack0xffffff40);\n            return 0;\n        }\n        *(arg_8h + 0x450) = arg_8h_01;\n        fcn.0044b4fe(&stack0xffffff44);\n        return 0;\n    }\n    fcn.00403f40(1, 0);\n    arg_ch_00 = 0;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    fcn.00403f80(uVar4, arg_ch_00);\n    fcn.004091e0();\n    *(arg_18h + 1) = 1;\n    *arg_18h = 0;\n    fcn.0044b4fe(&stack0xffffff38);\n    return 0;\n}\n",
        "token_count": 2484
    },
    "00466cf7": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466cf7(uint noname_0, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    ushort *puVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint32_t unaff_EDI;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint in_stack_00000034;\n    int16_t *in_stack_00000038;\n    uint in_stack_00000040;\n    uchar *in_stack_00000050;\n    uint in_stack_00000054;\n    uchar *in_stack_00000060;\n    uchar *in_stack_00000064;\n    uint32_t in_stack_00000068;\n    uchar *in_stack_ffffffc8;\n    int16_t *piStack8;\n    \n    fcn.00422880();\n    fcn.004130e0();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    arg_ch = 0;\n    fcn.0040e8e0();\n    iVar8 = arg_ch;\n    uVar7 = **(arg_ch + 4);\n    uVar2 = fcn.00452e81(uVar7);\n    fcn.0041315a(&stack0x000002a8, uVar2, uVar7);\n    uVar7 = *(*(iVar8 + 4) + 4);\n    uVar2 = fcn.00452e81(uVar7);\n    fcn.0041315a(&stack0x00000094, uVar2, uVar7);\n    fcn.00452e81(*(*(iVar8 + 4) + 8));\n    iVar3 = fcn.00410330();\n    iVar4 = fcn.00452e26(*(*(iVar8 + 4) + 8));\n    *(iVar3 + iVar4 * 2) = 0;\n    iVar3 = fcn.00414068(iVar3, 0x484044);\n    while (iVar3 != 0) {\n        fcn.00402170();\n        piStack8 = fcn.00431ff2(&stack0x00000004, 0x489b90);\n        piVar5 = fcn.00431ff2(&stack0xfffffffc, 0x489b94);\n        if (((piStack8 == 0xffffffff) || (piVar5 == 0xffffffff)) || (piVar5 < piStack8)) {\n            in_stack_ffffffc8 = NULL;\n            uVar7 = 2;\n            goto code_r0x00467112;\n        }\n        in_stack_ffffffc8 = &stack0xfffffff4;\n        fcn.0040bff0(in_stack_ffffffc8);\n        fcn.0040d510();\n        fcn.00460e76(&arg_14h, &stack0xfffffff0, unaff_EDI + 1, piVar5 + (-1 - unaff_EDI));\n        fcn.0040bff0(*0x10);\n        fcn.0040d510();\n        iVar3 = fcn.00414068(0, 0x484044);\n    }\n    fcn.0040d510();\n    uVar9 = 1;\n    if (1 < unaff_EDI) {\n        do {\n            piVar5 = fcn.00402150();\n            if (*piVar5 == 0x7c) {\n                puVar6 = fcn.00402150();\n                *puVar6 = 0;\n            }\n            uVar9 = uVar9 + 1;\n            iVar8 = arg_ch;\n        } while (uVar9 < unaff_EDI);\n    }\n    fcn.0041137c();\n    uVar9 = arg_14h;\n    if (5 < arg_14h) {\n        fcn.0044b01e(*(*(iVar8 + 4) + 0x14));\n    }\n    if (4 < uVar9) {\n        uVar7 = fcn.00452e81(*(*(iVar8 + 4) + 0x10));\n        fcn.00411707(&stack0x00010298, uVar7);\n    }\n    fcn.004130e0();\n    in_stack_00000040 = 0x7fff;\n    in_stack_00000064 = &stack0x0000029c;\n    in_stack_00000050 = &stack0x0001029c;\n    in_stack_00000060 = &stack0x0000008c;\n    uVar10 = 0;\n    in_stack_00000034 = 0x58;\n    in_stack_00000054 = 0xffff;\n    in_stack_00000038 = piStack8;\n    if (((uVar9 < 4) || (iVar8 = fcn.0040c8f0(),  0x1f < iVar8)) || (iVar8 = fcn.0040c8f0(),  iVar8 < 0)) {\n        in_stack_00000068 = 0x80004;\n    }\n    else {\n        uVar10 = 0x80004;\n        uVar9 = fcn.0040c8f0();\n        if ((uVar9 & 0x10) != 0) {\n            uVar10 = 0x80006;\n        }\n        uVar9 = fcn.0040c8f0();\n        if ((uVar9 & 8) != 0) {\n            uVar10 = uVar10 | 0x2000;\n        }\n        uVar9 = fcn.0040c8f0();\n        if ((uVar9 & 4) != 0) {\n            uVar10 = uVar10 | 0x200;\n        }\n        uVar9 = fcn.0040c8f0();\n        if ((uVar9 & 2) != 0) {\n            uVar10 = uVar10 | 0x800;\n        }\n        uVar9 = fcn.0040c8f0();\n        in_stack_00000068 = uVar10;\n        if ((uVar9 & 1) != 0) {\n            uVar10 = uVar10 | 0x1000;\n            in_stack_00000068 = uVar10;\n        }\n    }\n    if (arg_18h == '\\0') {\n        iVar8 = (*_sym.imp.COMDLG32.dll_GetSaveFileNameW)();\n        if (iVar8 == 0) goto code_r0x0046710e;\n    }\n    else {\n        iVar8 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)();\n        if (iVar8 == 0) {\ncode_r0x0046710e:\n            uVar7 = 1;\ncode_r0x00467112:\n            fcn.00403f40(uVar7, in_stack_ffffffc8);\n            goto code_r0x00467121;\n        }\n        if ((uVar10 & 0x200) != 0) {\n            iVar8 = fcn.00411361(in_stack_00000038);\n            fcn.00402170();\n            in_stack_00000038 = in_stack_00000038 + iVar8 + 1;\n            iVar1 = *in_stack_00000038;\n            while (iVar1 != 0) {\n                iVar8 = fcn.00411361(in_stack_00000038);\n                fcn.0040d510();\n                fcn.0040d510();\n                in_stack_00000038 = in_stack_00000038 + iVar8 + 1;\n                iVar1 = *in_stack_00000038;\n            }\n            fcn.0040e8e0();\n            goto code_r0x00467121;\n        }\n    }\n    fcn.0040e8e0();\ncode_r0x00467121:\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1823
    },
    "004683fd": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: lpPoint\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Removing unreachable block (ram,0x004684b3)\n// WARNING: Removing unreachable block (ram,0x004684ce)\n\nvoid __cdecl fcn.004683fd(int32_t *arg_8h, uint hWnd, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint *arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint arg_ch;\n    uint var_40h;\n    uint *var_3ch;\n    uint var_34h;\n    uint lpPoint;\n    uint *var_ch;\n    int32_t var_8h;\n    \n    arg_8h_00 = arg_8h;\n    var_40h = 0x30;\n    fcn.004130e0(&fcn.004683fd::var_3ch, 0, 0x2c);\n    var_8h = arg_8h[0x274];\n    uVar4 = 0;\n    if (6 < arg_10h - 0x200U) goto code_r0x00468501;\n    // switch table (7 cases) at 0x468671\n    switch(*((arg_10h - 0x200U) * 4 + 0x468671)) {\n    case 0x468443:\n        uVar4 = 1;\n        arg_ch = 0xfffffff9;\n        break;\n    case 0x46844f:\n        uVar4 = 2;\n        arg_ch = 0xfffffff8;\n        break;\n    case 0x46845b:\n        uVar4 = 4;\n        if (*(arg_8h + 10) != '\\0') {\n            iVar3 = 7;\n            var_3ch = 0x1;\n            if (6 < var_8h) {\n                arg_8h = arg_8h + 0x74;\n                do {\n                    if (*arg_8h != NULL) {\n                        (*_sym.imp.USER32.dll_GetMenuItemInfoW)(**arg_8h, iVar3, 0, &fcn.004683fd::var_40h);\n                    }\n                    arg_8h = arg_8h + 1;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 <= arg_8h_00[0x274]);\n                arg_ch = 0xfffffff3;\n                break;\n            }\n        }\n        arg_ch = 0xfffffff3;\n        break;\n    case 0x4684d9:\n        uVar4 = 8;\n        arg_ch = 0xfffffff7;\n        break;\n    case 0x4684e2:\n        uVar4 = 0x10;\n        arg_ch = 0xfffffff6;\n        break;\n    case 0x4684eb:\n        uVar4 = 0x20;\n        arg_ch = 0xfffffff2;\n        break;\n    case 0x4684f4:\n        uVar4 = 0x40;\n        arg_ch = 0xfffffff5;\n    }\n    fcn.0045358b(arg_8h_00, arg_ch);\ncode_r0x00468501:\n    pcVar2 = _sym.imp.USER32.dll_GetMenuItemCount;\n    pcVar1 = _sym.imp.USER32.dll_DeleteMenu;\n    if (((arg_8h_00[3] & uVar4) != 0) && (*0x4974eb != '\\0')) {\n        if (*(arg_8h_00 + 1) == '\\0') {\n            (*_sym.imp.USER32.dll_DeleteMenu)(*arg_8h_00, 5, 0);\n            (*pcVar1)(*arg_8h_00, 4, 0);\n            (*pcVar1)(*arg_8h_00, 6, 0);\n            (*pcVar1)(*arg_8h_00, 3, 0);\n            *(arg_8h_00 + 2) = 0;\n        }\n        else if (*(arg_8h_00 + 2) == '\\0') {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*arg_8h_00);\n            if (0 < iVar3) {\n                lpPoint = 0;\n                var_ch = arg_8h_00;\n                arg_8h_00[0x274] = 4;\n                fcn.0045f5bd(arg_8h_00, 0, 0x483f68, 0xffffffff, 0xffffffff, 0);\n            }\n            lpPoint = 0;\n            arg_8h_00[0x274] = 3;\n            fcn.0045f5bd(arg_8h_00, 0, arg_8h_00[0x1f], 0xffffffff, 0xffffffff, 0);\n            var_3ch = arg_8h_00;\n            arg_8h_00[0x274] = 5;\n            var_40h = 0x468590;\n            fcn.0045f5bd(arg_8h_00, 0, 0x483f68, 0xffffffff, 0xffffffff, 0);\n            var_40h = 0;\n            arg_8h_00[0x274] = 2;\n            fcn.0045f5bd(arg_8h_00, 0, arg_8h_00[0x1b], 0xffffffff, 0xffffffff, 0);\n            arg_8h_00[0x274] = var_8h;\n            *(arg_8h_00 + 2) = 1;\n        }\n        iVar3 = (*pcVar2)(*arg_8h_00);\n        if (0 < iVar3) {\n            if (*(arg_8h_00 + 1) == '\\0') {\n                *(arg_8h_00 + 6) = 0;\n            }\n            else if (*(arg_8h_00 + 6) != '\\0') {\n                *0x4974ec = 1;\n                var_3ch = 0x1;\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*arg_8h_00, 4, 0, &fcn.004683fd::var_40h);\n            }\n            (*_sym.imp.USER32.dll_GetCursorPos)(&fcn.004683fd::lpPoint);\n            (*_sym.imp.USER32.dll_SetForegroundWindow)(hWnd);\n            (*_sym.imp.USER32.dll_TrackPopupMenuEx)(*arg_8h_00, 0, lpPoint, var_ch, hWnd, 0);\n            (*_sym.imp.USER32.dll_PostMessageW)(hWnd, 0, 0, 0);\n            fcn.00401a60();\n        }\n    }\n    return;\n}\n",
        "token_count": 1601
    },
    "0046b780": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b780(int32_t arg_8h, double *arg_ch)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint32_t uVar13;\n    uint32_t uStack188;\n    int32_t iVar14;\n    double dVar15;\n    uchar *arg_8h_00;\n    uchar *arg_ch_00;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint uStack88;\n    int32_t *piStack76;\n    uchar auStack60 [16];\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040e8e0();\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.00401c30();\n    fcn.0046338d(&stack0xffffffd4, &stack0xffffffc4, &stack0xffffffe4, in_stack_ffffff84, in_stack_ffffff88);\n    *piStack76 = *piStack76 + 1;\n    arg_ch_00 = &stack0xffffff9c;\n    puVar11 = &stack0xffffff94;\n    cVar3 = fcn.004631a8(puVar11, arg_ch_00, uStack88);\n    if (cVar3 == '\\0') {\n        fcn.00403f40(2, 0);\n    }\n    else {\n        arg_8h_00 = &stack0xffffffa0;\n        cVar3 = fcn.004362d6(arg_8h_00);\n        if ((cVar3 == '\\0') && (iVar4 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(),  iVar4 != 0)) {\n            fcn.00403f80(iVar4, 0);\n            fcn.00403f40(3, 0);\n        }\n        else {\n            uStack188 = 0x46b8b5;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n            if (iVar4 == 0) {\n                puVar12 = &stack0xffffff68;\n                iVar14 = 0;\n                uStack188 = 0x46b90d;\n                uStack188 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n                pcVar2 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n                uVar13 = 0;\n                if (iVar4 == 0) {\n                    fcn.00403f80(puVar11, 0);\n    // switch table (7 cases) at 0x46bc18\n                    switch(puVar12) {\n                    case 0x1:\n                    case 0x2:\n                        iVar1 = ((uStack188 >> 1) + 1) * 2;\n                        uVar5 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n                        uVar7 = *(*(arg_8h + 4) + 4);\n                        puVar11 = &stack0xffffff44;\n                        uVar8 = 0;\n                        uVar10 = 0;\n                        uVar9 = fcn.00452e81(uVar7);\n                        iVar4 = (*pcVar2)(uStack188, uVar9, uVar7, uVar10, uVar8, uVar5, puVar11);\n                        if (iVar4 == 0) {\n                            *(iVar14 + (uVar13 & 0xfffffffe)) = 0;\n                            fcn.0040e8e0();\n                            fcn.0041137c(iVar14);\n                        }\n                        else {\n                            fcn.00403f80(iVar4, 0);\n                            fcn.00403f40(0xfffffffe, 0);\n                            fcn.0041137c(uVar13);\n                        }\n                        break;\n                    case 0x3:\n                        uVar5 = fcn.00452ba7(arg_ch, uStack188);\n                        uVar7 = *(*(arg_8h + 4) + 4);\n                        puVar11 = &stack0xffffff3c;\n                        uVar8 = 0;\n                        uVar10 = 0;\n                        uVar9 = fcn.00452e81(uVar7);\n                        iVar4 = (*pcVar2)(uVar13, uVar9, uVar7, uVar10, uVar8, uVar5, puVar11);\n                        if (iVar4 != 0) {\n                            fcn.00403f80(iVar4, 0);\n                            fcn.00403f40(0xfffffffe, 0);\n                            fcn.004091e0();\n                            *(arg_ch + 1) = 1;\n                            *arg_ch = 0;\n                        }\n                        break;\n                    case 0x4:\n                        uStack188 = 4;\n                        uVar7 = *(*(arg_8h + 4) + 4);\n                        puVar11 = &stack0xffffff44;\n                        puVar12 = &stack0xffffff64;\n                        uVar10 = 0;\n                        uVar9 = 0;\n                        uVar5 = fcn.00452e81(uVar7);\n                        (*pcVar2)(uStack188, uVar5, uVar7, uVar9, uVar10, puVar12, puVar11);\n                        dVar15 = arg_8h_00;\n                        if (arg_8h_00 < 0) {\n                            dVar15 = dVar15 + *0x48bd70;\n                        }\n                        fcn.004091e0();\n                        *arg_ch = dVar15;\n                        *(arg_ch + 1) = 3;\n                        break;\n                    default:\n                        fcn.00403f40(0xfffffffe, 0);\n                        break;\n                    case 0x7:\n                        iVar1 = ((uStack188 >> 1) + 2) * 2;\n                        iVar14 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n                        uVar7 = *(*(arg_8h + 4) + 4);\n                        puVar11 = &stack0xffffff44;\n                        uVar10 = 0;\n                        uVar9 = 0;\n                        iVar4 = iVar14;\n                        uVar5 = fcn.00452e81(uVar7);\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                          (uStack188, uVar5, uVar7, uVar9, uVar10, iVar4, puVar11);\n                        if (iVar4 == 0) {\n                            uVar6 = uVar13 >> 1;\n                            *(iVar14 + (uVar13 & 0xfffffffe)) = 0;\n                            if (1 < uVar6) {\n                                if (*(iVar14 + -2 + (uVar13 & 0xfffffffe)) == 0) {\n                                    uVar6 = uVar6 - 1;\n                                }\n                                uVar13 = 0;\n                                if (uVar6 != 0) {\n                                    do {\n                                        if (*(iVar14 + uVar13 * 2) == 0) {\n                                            *(iVar14 + uVar13 * 2) = 10;\n                                        }\n                                        uVar13 = uVar13 + 1;\n                                    } while (uVar13 < uVar6);\n                                }\n                                if (*(iVar14 + -2 + uVar13 * 2) == 10) {\n                                    *(iVar14 + -2 + uVar13 * 2) = 0;\n                                }\n                            }\n                            fcn.0040e8e0();\n                            fcn.0041137c(iVar14);\n                        }\n                        else {\n                            fcn.00403f80(iVar4, 0);\n                            fcn.00403f40(0xfffffffe, 0);\n                            fcn.0041137c(iVar14);\n                        }\n                    }\n                    pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack88);\n                }\n                else {\n                    fcn.00403f80(iVar4, 0);\n                    fcn.00403f40(0xffffffff, 0);\n                    pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack88);\n                }\n                if (arg_ch_00 != NULL) {\n                    uStack188 = 0x46bbf2;\n                    (*pcVar2)();\n                }\n            }\n            else {\n                fcn.00403f80(iVar4, 0);\n                if (in_ECX != 0) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                }\n                fcn.00403f40(1, 0);\n            }\n        }\n    }\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 2102
    },
    "0046d0fd": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d0fd(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint uVar7;\n    uint in_stack_ffffff50;\n    uint in_stack_ffffff58;\n    int32_t in_stack_ffffff5c;\n    int32_t in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    int32_t in_stack_ffffff6c;\n    uint uStack116;\n    uint32_t uStack108;\n    uint32_t uStack104;\n    uint16_t uStack100;\n    ushort uStack96;\n    double dStack92;\n    \n    uVar2 = *(arg_8h + 8);\n    uStack108 = uVar2;\n    fcn.004606d2(&stack0xffffff98);\n    uVar2 = uVar2 - 2;\n    uStack116 = 0;\n    if (8 < uVar2) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(5, 0);\n        fcn.00441cc5(&stack0xffffff8c);\n        return 0;\n    }\n    // switch table (9 cases) at 0x46d4e9\n    switch(*(uVar2 * 4 + 0x46d4e9)) {\n    case 0x46d13e:\n        fcn.0044b01e(*(*(arg_8h + 4) + 0x24));\n        break;\n    case 0x46d184:\n        goto code_r0x0046d184;\n    case 0x46d1a9:\n        goto code_r0x0046d1a9;\n    case 0x46d1cb:\ncode_r0x0046d1cb:\n        iVar4 = fcn.0040c8f0();\n        if ((iVar4 < 0) || (cVar3 = fcn.0044aa8e(*(*(arg_8h + 4) + 0x14)),  cVar3 != '\\0')) {\n            uStack108 = uStack108 | 0x20;\n        }\n        else {\n            fcn.0040c8f0();\n        }\n    case 0x46d1fc:\n        iVar4 = fcn.0040c8f0();\n        if ((iVar4 < 0) || (cVar3 = fcn.0044aa8e(*(*(arg_8h + 4) + 0x10)),  cVar3 != '\\0')) {\n            uStack108 = uStack108 | 0x10;\n        }\n        else {\n            fcn.0040c8f0();\n        }\n    case 0x46d22d:\n        in_stack_ffffff5c = *(*(arg_8h + 4) + 0xc);\n        iVar4 = 0x46d239;\n        in_stack_ffffff60 = in_stack_ffffff5c;\n        cVar3 = fcn.0044aa8e(in_stack_ffffff5c);\n        if (cVar3 == '\\0') {\n            puVar5 = fcn.00452e81(in_stack_ffffff5c);\n            uVar1 = *puVar5;\n            if (uVar1 != 0) {\n                iVar4 = fcn.00434fb4(uVar1);\n                if (iVar4 == 0) {\n                    uStack100 = uVar1;\n                }\n                iVar4 = 1;\n                do {\n                    in_stack_ffffff5c = *(*(arg_8h + 4) + 0xc);\n                    in_stack_ffffff6c = iVar4;\n                    iVar6 = fcn.00452e81(in_stack_ffffff5c);\n    // switch table (62 cases) at 0x46d50d\n                    switch(*(iVar6 + iVar4 * 2)) {\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                        in_stack_ffffff50 = 0x46d2d7;\n                        fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n                        while( true ) {\n                            iVar4 = fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n                            iVar4 = fcn.00413983(*(iVar4 + 2 + in_stack_ffffff60 * 2));\n                            if (iVar4 == 0) break;\n                            in_stack_ffffff60 = in_stack_ffffff60 + 1;\n                            fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n                        }\n                        iVar4 = in_stack_ffffff60 + 1;\n                        break;\n                    case 0x3a:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x3f:\n                    case 0x40:\n                    case 0x41:\n                    case 0x42:\n                    case 0x43:\n                    case 0x44:\n                    case 0x45:\n                    case 0x46:\n                    case 0x47:\n                    case 0x48:\n                    case 0x49:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4e:\n                    case 0x4f:\n                    case 0x50:\n                    case 0x51:\n                    case 0x52:\n                    case 0x53:\n                    case 0x54:\n                    case 0x55:\n                    case 0x56:\n                    case 0x57:\n                    case 0x58:\n                    case 0x59:\n                    case 0x5a:\n                    case 0x5b:\n                    case 0x5c:\n                    case 0x5d:\n                    case 0x5e:\n                    case 0x5f:\n                    case 0x60:\n                    case 0x61:\n                    case 0x62:\n                    case 99:\n                    case 100:\n                    case 0x65:\n                    case 0x66:\n                    case 0x67:\n                    case 0x68:\n                    case 0x69:\n                    case 0x6a:\n                    case 0x6b:\n                    case 0x6c:\n                        fcn.00403f40(3, 0);\n                        fcn.0040e8e0();\n                        fcn.00441cc5(&stack0xffffff70);\n                        return 0;\n                    case 0x4d:\n                    case 0x6d:\n                        iVar4 = iVar4 + 1;\n                        break;\n                    default:\n                        goto code_r0x0046d244;\n                    }\n                } while( true );\n            }\n        }\n        else {\n            uStack96 = 0;\n            in_stack_ffffff5c = iVar4;\n        }\n    case 0x46d244:\ncode_r0x0046d244:\n        uVar7 = *(*(arg_8h + 4) + 8);\n        in_stack_ffffff58 = uVar7;\n        cVar3 = fcn.0044aa8e(uVar7);\n        if (cVar3 == '\\0') {\n            in_stack_ffffff50 = fcn.00452e60(uVar7);\n            fcn.0040e410(in_stack_ffffff50);\n        }\n        else {\n            in_ECX = in_stack_ffffff6c;\n            fcn.00402170();\n        }\ncode_r0x0046d371:\n        uVar7 = *(*(arg_8h + 4) + 4);\n        cVar3 = fcn.0044aa8e(uVar7);\n        if (cVar3 == '\\0') {\n            uVar7 = fcn.00452e60(uVar7);\n            fcn.0040e410(uVar7);\n        }\n        else {\n            in_ECX = in_stack_ffffff60;\n            fcn.00402170();\n            in_stack_ffffff60 = in_ECX;\n        }\n        uVar7 = **(arg_8h + 4);\n        cVar3 = fcn.0044aa8e(uVar7);\n        if (cVar3 == '\\0') {\n            iVar4 = fcn.00452e60(uVar7);\n        }\n        else {\n            iVar4 = in_ECX + 0xb8;\n        }\n        fcn.0040e410(iVar4);\n        iVar4 = fcn.00433556(in_stack_ffffff60, in_stack_ffffff64, in_stack_ffffff58, in_stack_ffffff5c);\n        if (iVar4 != 0) {\n            iVar4 = fcn.00468b0a(&stack0xffffff58, in_stack_ffffff50);\n            if (iVar4 != 1) {\n                if (iVar4 == 2) {\n                    uVar7 = 1;\n                }\n                else if (iVar4 == 3) {\n                    uVar7 = 2;\n                }\n                else {\n                    uVar7 = 3;\n                }\n                fcn.00403f40(uVar7, 0);\n                fcn.0040e8e0();\n                fcn.00441cc5(&stack0xffffff48);\n                return 0;\n            }\n            fcn.0040e8e0();\n            fcn.00441cc5(&stack0xffffff50);\n            return 0;\n        }\n        fcn.00403f40(4, 0);\n        fcn.0040e8e0();\n        fcn.00441cc5(&stack0xffffff50);\n        return 0;\n    case 0x46d371:\n        goto code_r0x0046d371;\n    }\n    in_stack_ffffff6c = *(*(arg_8h + 4) + 0x20);\n    cVar3 = fcn.0044aa8e(in_stack_ffffff6c);\n    if (cVar3 == '\\0') {\n        iVar4 = fcn.0040c8f0();\n        dStack92 = iVar4;\n        if (dStack92 <= 0.0) goto code_r0x0046d17a;\n    }\n    else {\ncode_r0x0046d17a:\n        dStack92 = *0x48bdc8;\n    }\ncode_r0x0046d184:\n    cVar3 = fcn.0044aa8e(*(*(arg_8h + 4) + 0x1c));\n    if (cVar3 == '\\0') {\n        uStack108 = fcn.0040c8f0();\n    }\n    else {\n        uStack104 = uStack104 | 0x80;\n    }\ncode_r0x0046d1a9:\n    in_stack_ffffff64 = *(*(arg_8h + 4) + 0x18);\n    cVar3 = fcn.0044aa8e(in_stack_ffffff64);\n    if (cVar3 == '\\0') {\n        uStack116 = fcn.0040c8f0();\n    }\n    else {\n        uStack108 = uStack108 | 0x40;\n    }\n    goto code_r0x0046d1cb;\n}\n",
        "token_count": 2586
    },
    "0046dd30": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046dd30(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    char cVar11;\n    uchar *arg_18h;\n    uint32_t uVar10;\n    int32_t *arg_1ch;\n    uint uVar12;\n    int32_t *arg_8h_00;\n    uint uStack136;\n    int32_t *piStack132;\n    int32_t *piStack128;\n    uint32_t uStack124;\n    uchar *puStack120;\n    int32_t *piStack116;\n    uint uStack44;\n    int32_t iStack40;\n    uint uStack36;\n    int32_t *piStack32;\n    \n    uVar9 = *(arg_8h + 8);\n    puVar2 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n    uStack44 = *puVar2;\n    iVar4 = puVar2[1];\n    uStack36 = puVar2[2];\n    piStack32 = puVar2[3];\n    *piStack32 = *piStack32 + 1;\n    piStack116 = 0x46dd94;\n    iStack40 = iVar4;\n    iVar3 = fcn.004423f2(&stack0xffffffd4, L\".lnk\", 2, 1, 0xffffffff, 0xffffffff, 0xffffffff);\n    if (iVar3 == iVar4) {\n        piStack116 = 0x46dda6;\n        fcn.0040d510();\n    }\n    piStack116 = NULL;\n    puStack120 = 0x46ddae;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    puStack120 = &stack0xffffffa0;\n    uStack124 = 0x4818a0;\n    piStack128 = 0x1;\n    piStack132 = NULL;\n    uStack136 = 0x481a00;\n    iVar4 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n    if (-1 < iVar4) {\n        arg_8h_00 = **(arg_8h + 4);\n        iVar4 = *piStack116;\n        piVar5 = fcn.00452e81(arg_8h_00);\n        (**(iVar4 + 0x50))(puStack120);\n        if (2 < uVar9) {\n            iVar4 = *piStack128;\n            uVar6 = fcn.00452e81(*(*(arg_8h + 4) + 8));\n            (**(iVar4 + 0x24))(piStack132, uVar6);\n        }\n        if (3 < uVar9) {\n            iVar4 = *piStack128;\n            uVar6 = fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n            (**(iVar4 + 0x2c))(piStack132, uVar6);\n        }\n        if (4 < uVar9) {\n            iVar4 = *piStack128;\n            uVar6 = fcn.00452e81(*(*(arg_8h + 4) + 0x10));\n            (**(iVar4 + 0x1c))(piStack132, uVar6);\n        }\n        if (5 < uVar9) {\n            uVar6 = *(*(arg_8h + 4) + 0x14);\n            iVar4 = *piStack128;\n            uVar12 = 0;\n            uVar7 = fcn.00452e81(uVar6);\n            (**(iVar4 + 0x44))(piStack132, uVar7, uVar6, uVar12);\n        }\n        if (6 < uVar9) {\n            uVar6 = *(*(arg_8h + 4) + 0x18);\n            cVar1 = fcn.0040d110();\n            if (cVar1 != '\\0') {\n                fcn.00452e81(uVar6);\n                fcn.00401c30();\n                arg_1ch = &stack0xffffff78;\n                arg_18h = &stack0xffffff79;\n                cVar1 = fcn.0046868d(&stack0xffffffa0, &stack0xffffff8c, &stack0xffffff7b, &stack0xffffff7a, arg_18h, \n                                     arg_1ch);\n                uVar10 = arg_18h & 0xffffff00 | cVar1 == '\\x01';\n                fcn.00402260();\n                uVar9 = uStack124;\n                if (uVar10 != '\\0') {\n                    cVar1 = uVar10 >> 8;\n                    piVar8 = 0x4;\n                    if (cVar1 == '\\0') {\n                        piVar8 = piVar5;\n                    }\n                    cVar11 = uVar10 >> 0x10;\n                    if (cVar11 != '\\0') {\n                        piVar8 = piVar8 | 2;\n                    }\n                    if (uVar10 >> 0x18 != '\\0') {\n                        piVar8 = piVar8 | 1;\n                    }\n                    if ((cVar11 == '\\0') && (cVar1 == '\\0')) {\n                        piVar8 = piVar8 | 6;\n                    }\n                    (**(*arg_1ch + 0x34))(arg_1ch, piVar8 << 8 | arg_8h_00);\n                    uVar9 = uStack124;\n                }\n            }\n        }\n        if (7 < uVar9) {\n            uVar6 = *(*(arg_8h + 4) + 0x14);\n            uVar7 = fcn.0040c8f0();\n            uVar12 = fcn.00452e81(uVar6);\n            (*piStack116[0x11])(piStack132, uVar12, uVar6, uVar7);\n        }\n        if (8 < uVar9) {\n            iVar4 = *piStack128;\n            uVar6 = fcn.0040c8f0();\n            (**(iVar4 + 0x3c))(piStack128, uVar6);\n        }\n        iVar4 = (***piStack128)(piStack128, 0x481960, &stack0xffffff88);\n        if (iVar4 < 0) {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n        }\n        else {\n            iVar4 = (**(*piStack132 + 0x18))(piStack132, puStack120, 1);\n            if (iVar4 < 0) {\n                fcn.004091e0();\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n            }\n            (**(*piVar5 + 8))(piVar5);\n        }\n        (**(*arg_8h_00 + 8))(arg_8h_00);\n        fcn.00402260();\n        return 0;\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1659
    },
    "004711f2": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004719bb)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004711f2(uint32_t arg_8h, double *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    double *pdVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint16_t *arg_8h_00;\n    code *pcVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    int16_t var_530h;\n    uint var_52eh;\n    uint var_31ch;\n    uint var_308h;\n    uint var_300h;\n    uint var_2f0h;\n    uint var_2e8h;\n    uint var_2e0h;\n    uint var_2d8h;\n    uint var_2c8h;\n    uint var_2c0h;\n    uint var_2b8h;\n    uint var_2a8h;\n    uint var_2a0h;\n    uint var_290h;\n    uint var_280h;\n    uint16_t var_270h;\n    uint var_26eh;\n    uint var_60h;\n    uint var_40h;\n    uint uStack64;\n    uint uStack60;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    double dStack12;\n    \n    pdVar3 = arg_ch;\n    uVar8 = arg_8h;\n    var_270h = 0;\n    fcn.004130e0(&var_26eh, 0, 0x208);\n    var_530h = 0;\n    fcn.004130e0(&var_52eh, 0, 0x208);\n    iVar9 = 0;\n    dStack12 = CONCAT44(arg_10h, uStack12);\n    do {\n        iVar4 = fcn.004132dc(*(iVar9 * 4 + 0x491770), var_4h);\n        if (iVar4 == 0) break;\n        iVar9 = iVar9 + 1;\n    } while (iVar9 < 0x60);\n    // switch table (96 cases) at 0x471ec2\n    switch(iVar9) {\n    case 0:\n        iVar9 = fcn.00403f70();\n        uVar7 = *(iVar9 + 0x14);\n        fcn.004091e0();\n        *pdVar3 = uVar7;\n        goto code_r0x00471ea7;\n    case 1:\n        iVar9 = fcn.00403f70();\n        fcn.00409120(iVar9 + 0x20);\n        fcn.00402260();\n        return 0;\n    case 2:\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)(&var_10h);\n        puVar5 = var_4h._2_2_;\n        uVar7 = 0x48b1ec;\n        arg_8h_00 = &var_270h;\n        goto code_r0x004713d0;\n    case 3:\n        puVar5 = &var_280h;\n        puVar11 = &var_2a8h;\n        uVar7 = fcn.00441b3c(puVar11);\n        fcn.00451678(uVar7, puVar11, puVar5);\n        fcn.0040e870();\n        fcn.00402260();\n        fcn.00402260();\n        return 0;\n    case 4:\n        puVar5 = &var_300h;\n        puVar11 = &var_2f0h;\n        uVar7 = fcn.00441b3c(puVar11);\n        fcn.00451678(uVar7, puVar11, puVar5);\n        fcn.0040e870();\n        fcn.00402260();\n        fcn.00402260();\n        return 0;\n    case 5:\n        puVar5 = &var_2d8h;\n        puVar11 = &var_2c0h;\n        uVar7 = fcn.00441b3c(puVar11);\n        fcn.00451678(uVar7, puVar11, puVar5);\n        fcn.0040e870();\n        fcn.00402260();\n        fcn.00402260();\n        return 0;\n    case 6:\n        puVar5 = &var_290h;\n        puVar11 = &var_2c8h;\n        uVar7 = fcn.00441b3c(puVar11);\n        fcn.00451678(uVar7, puVar11, puVar5);\n        fcn.0040e870();\n        fcn.00402260();\n        fcn.00402260();\n        return 0;\n    case 7:\n        puVar5 = &var_2a0h;\n        puVar11 = &var_308h;\n        uVar7 = fcn.00441b3c(puVar11);\n        fcn.00451678(uVar7, puVar11, puVar5);\n        fcn.0040e870();\n        fcn.00402260();\n        fcn.00402260();\n        return 0;\n    case 8:\n        puVar5 = &var_2b8h;\n        puVar11 = &var_2e8h;\n        uVar7 = fcn.00441b3c(puVar11);\n        fcn.00451678(uVar7, puVar11, puVar5);\n        fcn.0040e870();\n        fcn.00402260();\n        fcn.00402260();\n        return 0;\n    case 9:\n        puVar5 = &var_2e0h;\n        uVar7 = fcn.00441b3c(puVar5);\n        arg_8h_00 = fcn.004516e9(uVar7);\ncode_r0x004713d0:\n        fcn.0041343b(arg_8h_00, uVar7, puVar5);\n        break;\n    case 10:\n        puVar5 = &var_40h;\n        puVar11 = &var_18h;\n        uVar7 = fcn.00441b3c(puVar11);\n        fcn.00451678(uVar7, puVar11, puVar5);\n        fcn.0040e870();\n        fcn.00402260();\n        fcn.00402260();\n        return 0;\n    case 0xb:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x26, 0, 0, &var_270h);\n        break;\n    case 0xc:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x2b, 0, 0, &var_270h);\n        break;\n    case 0xd:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 5, 0, 0, &var_270h);\n        break;\n    case 0xe:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x23, 0, 0, &var_270h);\n        break;\n    case 0xf:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x19, 0, 0, &var_270h);\n        break;\n    case 0x10:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x2e, 0, 0, &var_270h);\n        break;\n    case 0x11:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1f, 0, 0, &var_270h);\n        break;\n    case 0x12:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x17, 0, 0, &var_270h);\n        break;\n    case 0x13:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x16, 0, 0, &var_270h);\n        break;\n    case 0x14:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x18, 0, 0, &var_270h);\n        break;\n    case 0x15:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1a, 0, 0, &var_270h);\n        break;\n    case 0x16:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x10, 0, 0, &var_270h);\n        break;\n    case 0x17:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 6, 0, 0, &var_270h);\n        break;\n    case 0x18:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 2, 0, 0, &var_270h);\n        break;\n    case 0x19:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0xb, 0, 0, &var_270h);\n        break;\n    case 0x1a:\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 7, 0, 0, &var_270h);\n        break;\n    case 0x1b:\n        arg_8h = 0x104;\n        (*_sym.imp.KERNEL32.dll_GetComputerNameW)(&var_270h, &arg_8h);\n        break;\n    case 0x1c:\n        iVar9 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&var_270h, 0x104);\n        if (iVar9 != 0) break;\n        goto code_r0x00471eae;\n    case 0x1d:\n        if (*(*0x4a9604 + 0x2a) == '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&var_270h, 0x104);\n        }\n        else {\n            var_ch = 0;\n            dStack12 = dStack12 & 0xffffffff;\n            pcVar6 = fcn.00431336(&var_ch);\n            (*pcVar6)();\n            fcn.00431858(&var_ch);\n        }\n        break;\n    case 0x1e:\n    case 0x5d:\n        goto code_r0x00471e9c;\n    case 0x1f:\n        fcn.004091e0();\n        *pdVar3 = 6;\n        goto code_r0x00471ea7;\n    case 0x20:\n    case 0x26:\n        fcn.004091e0();\n        *pdVar3 = 3;\n        goto code_r0x00471ea7;\n    case 0x21:\n        fcn.004091e0();\n        *pdVar3 = 9;\n        goto code_r0x00471ea7;\n    case 0x22:\n        fcn.004091e0();\n        *pdVar3 = 5;\n        goto code_r0x00471ea7;\n    case 0x23:\n        fcn.004091e0();\n        *pdVar3 = 10;\n        goto code_r0x00471ea7;\n    case 0x24:\n        fcn.004091e0();\n        *pdVar3 = 0x40;\n        goto code_r0x00471ea7;\n    case 0x25:\n        fcn.004091e0();\n        *pdVar3 = 0x41;\n        goto code_r0x00471ea7;\n    case 0x27:\n        fcn.004091e0();\n        *pdVar3 = 2;\n        goto code_r0x00471ea7;\n    case 0x28:\n        fcn.004091e0();\n        *pdVar3 = 7;\n        goto code_r0x00471ea7;\n    case 0x29:\n        fcn.004091e0();\n        *pdVar3 = 8;\n        goto code_r0x00471ea7;\n    case 0x2a:\n        fcn.004091e0();\n        *pdVar3 = 4;\n        goto code_r0x00471ea7;\n    case 0x2b:\n    case 0x5c:\n    case 0x5e:\ncode_r0x00471d69:\n        fcn.004091e0();\n        *pdVar3 = 1;\n        goto code_r0x00471ea7;\n    case 0x2c:\n        fcn.004091e0();\n        *pdVar3 = 0x42;\n        goto code_r0x00471ea7;\n    case 0x2d:\n        fcn.004091e0();\n        *pdVar3 = 0x43;\n        goto code_r0x00471ea7;\n    case 0x2e:\n        cVar2 = *0x4974ea;\n        goto code_r0x004718bd;\n    case 0x2f:\n        cVar2 = *0x4a8719;\ncode_r0x004718bd:\n        if (cVar2 != '\\x01') goto code_r0x00471e9c;\n        fcn.004091e0();\n        *pdVar3 = 1;\n        goto code_r0x00471ea7;\n    case 0x30:\n        break;\n    case 0x31:\n        break;\n    case 0x32:\n        break;\n    case 0x33:\n        uVar7 = fcn.00434e8d(*(uVar8 + 0xf4));\n        fcn.004091e0();\n        *pdVar3 = uVar7;\n        goto code_r0x00471ea7;\n    case 0x34:\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &var_270h);\n        break;\n    case 0x35:\n        break;\n    case 0x36:\n        break;\n    case 0x37:\n        uVar7 = *(*0x4a9604 + 8);\n        fcn.004091e0();\n        *pdVar3 = uVar7;\n        goto code_r0x00471ea7;\n    case 0x38:\n        fcn.0040e870();\n        fcn.00402260();\n        return 0;\n    case 0x39:\n        fcn.0040f3e0(reloc.WSOCK32.dll_bind, L\"InstallLanguage\", 0x104);\n        break;\n    case 0x3a:\n    case 0x3b:\n        break;\n    case 0x3c:\n        puVar5 = cpuid(0x80000001);\n        var_40h = *puVar5;\n        uStack64 = puVar5[1];\n        var_34h = puVar5[2];\n        uStack60 = puVar5[3];\n        break;\n    case 0x3d:\n        (*_sym.imp.USER32.dll_GetKeyboardLayoutNameW)(&var_31ch);\n        break;\n    case 0x3e:\n        fcn.00411707(&var_530h, L\"3, 3, 7, 15\");\n        iVar4 = 0;\n        iVar10 = 0;\n        iVar9 = fcn.00411361(&var_530h);\n        if (0 < iVar9) {\n            do {\n                iVar1 = (&var_530h)[iVar10];\n                if (iVar1 != 0x20) {\n                    if (iVar1 == 0x2c) {\n                        (&var_530h)[iVar4] = 0x2e;\n                    }\n                    else {\n                        (&var_530h)[iVar4] = iVar1;\n                    }\n                    iVar4 = iVar4 + 1;\n                }\n                iVar10 = iVar10 + 1;\n                iVar9 = fcn.00411361(&var_530h);\n            } while (iVar10 < iVar9);\n        }\n        (&var_530h)[iVar4] = 0;\n        break;\n    case 0x3f:\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &var_270h, 0x104);\n        break;\n    case 0x40:\n        fcn.00433a3c(1, &var_60h);\n        break;\n    case 0x41:\n        fcn.00433a3c(2, &var_60h);\n        break;\n    case 0x42:\n        fcn.00433a3c(3, &var_60h);\n        break;\n    case 0x43:\n        fcn.00433a3c(4, &var_60h);\n        break;\n    case 0x44:\n        fcn.0040e8e0();\n        fcn.00402260();\n        return 0;\n    case 0x45:\n        fcn.0040e8e0();\n        fcn.00402260();\n        return 0;\n    case 0x46:\n        fcn.0040e8e0();\n        fcn.00402260();\n        return 0;\n    case 0x47:\n        uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_30h);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar7);\n        fcn.004091e0();\n        *pdVar3 = var_28h;\n        goto code_r0x00471ea7;\n    case 0x48:\n        uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_30h);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar7);\n        fcn.004091e0();\n        *pdVar3 = var_24h;\n        goto code_r0x00471ea7;\n    case 0x49:\n        uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        arg_ch = (*_sym.imp.USER32.dll_GetDC)(uVar7);\n        uVar8 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(arg_ch, 0xc);\n        dStack12 = dStack12 & 0xffffffff | uVar8 << 0x20;\n        fcn.004091e0();\n        *(pdVar3 + 1) = 1;\n        *pdVar3 = var_4h;\n        (*_sym.imp.USER32.dll_ReleaseDC)(uVar7, arg_ch);\n        fcn.00402260();\n        return 0;\n    case 0x4a:\n        uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        arg_ch = (*_sym.imp.USER32.dll_GetDC)(uVar7);\n        uVar8 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(arg_ch, 0x74);\n        dStack12 = dStack12 & 0xffffffff | uVar8 << 0x20;\n        fcn.004091e0();\n        *(pdVar3 + 1) = 1;\n        *pdVar3 = var_4h;\n        (*_sym.imp.USER32.dll_ReleaseDC)(uVar7, arg_ch);\n        fcn.00402260();\n        return 0;\n    case 0x4b:\n        if ((*0x4a7f54 == 3) || (*0x4a7f54 == 4)) goto code_r0x00471d69;\n        goto code_r0x00471e9c;\n    case 0x4c:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(L\"COMSPEC\", &var_270h, 0x104);\n        break;\n    case 0x4d:\n        fcn.0040e8e0();\n        fcn.00402260();\n        return 0;\n    case 0x4e:\n        arg_8h = 0x104;\n        (*_sym.imp.ADVAPI32.dll_GetUserNameW)(&var_270h, &arg_8h);\n        break;\n    case 0x4f:\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &var_270h);\n        fcn.00410460();\n        break;\n    case 0x50:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(L\"USERPROFILE\", &var_270h, 0x104);\n        break;\n    case 0x51:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(L\"HOMEDRIVE\", &var_270h, 0x104);\n        break;\n    case 0x52:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(L\"HOMEPATH\", &var_270h, 0x104);\n        break;\n    case 0x53:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(L\"HOMESHARE\", &var_270h, 0x104);\n        break;\n    case 0x54:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(L\"LOGONSERVER\", &var_270h, 0x104);\n        break;\n    case 0x55:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(L\"USERDOMAIN\", &var_270h, 0x104);\n        break;\n    case 0x56:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(L\"USERDNSDOMAIN\", &var_270h, 0x104);\n        break;\n    case 0x57:\n    case 0x58:\n        goto code_r0x00471eae;\n    case 0x59:\n        uVar7 = *(uVar8 + 0x148);\n        fcn.004091e0();\n        *pdVar3 = uVar7;\ncode_r0x00471ea7:\n        *(pdVar3 + 1) = 1;\ncode_r0x00471eae:\n        fcn.00402260();\n        return 0;\n    case 0x5a:\n        break;\n    case 0x5b:\n        arg_ch = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        dStack12 = arg_ch;\n        if (arg_ch < 0) {\n            dStack12 = dStack12 + *0x48bd70;\n        }\n        fcn.004091e0();\n        *pdVar3 = dStack12;\n        *(pdVar3 + 1) = 3;\n        fcn.00402260();\n        return 0;\n    case 0x5f:\n        fcn.0040f3e0(0x80000001, L\"SchemeLangID\", 0x104);\n        arg_8h = var_270h;\n        fcn.0043343c(arg_8h, &var_270h, 4);\n        break;\n    default:\n        fcn.00401c30();\n        arg_ch = NULL;\n        fcn.0040bff0(&arg_10h);\n        fcn.0040c560(&var_4h, &arg_ch);\n        if (var_4h != 0) {\n            fcn.00409120(var_4h);\n            fcn.00402260();\n            fcn.00402260();\n            return 0;\n        }\n        fcn.00402260();\n        fcn.00402260();\n        return 1;\n    }\n    fcn.0040e8e0();\n    fcn.00402260();\n    return 0;\ncode_r0x00471e9c:\n    fcn.004091e0();\n    *pdVar3 = 0;\n    goto code_r0x00471ea7;\n}\n",
        "token_count": 5413
    },
    "00472b63": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00472b63(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint arg_18h;\n    uint arg_8h_01;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_18h = 0xffffffff;\n    uVar1 = *(arg_8h + 8);\n    var_8h = 0xffffffff;\n    var_4h = 0xffffffff;\n    var_ch = 0xffffffff;\n    var_14h = 0xffffffff;\n    var_10h = 0xffffffff;\n    if (7 < uVar1) {\n        fcn.0044b01e(*(*(arg_8h + 4) + 0x1c));\n    }\n    if (6 < uVar1) {\n        var_4h = fcn.0040c8f0();\n    }\n    if (5 < uVar1) {\n        var_8h = fcn.0040c8f0();\n    }\n    if (4 < uVar1) {\n        var_10h = fcn.0040c8f0();\n    }\n    if (3 < uVar1) {\n        var_14h = fcn.0040c8f0();\n    }\n    if (2 < uVar1) {\n        var_ch = fcn.0040c8f0();\n    }\n    if (1 < uVar1) {\n        arg_18h = fcn.0040c8f0();\n    }\n    arg_8h_01 = **(arg_8h + 4);\n    arg_8h_00 = fcn.00452e81(arg_8h_01);\n    iVar2 = fcn.00470ce0(arg_8h_00, arg_8h_01, var_14h, var_10h, arg_18h, var_ch, var_8h, var_4h);\n    if (iVar2 == 0) {\n        fcn.00403f40(1, 0);\n        fcn.004091e0();\n        *arg_ch = 0;\n        arg_ch[2] = 7;\n        return 0;\n    }\n    fcn.004091e0();\n    *arg_ch = iVar2;\n    arg_ch[2] = 7;\n    return 0;\n}\n",
        "token_count": 568
    },
    "0047633a": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0047633a(int32_t arg_8h, uint *arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint arg_ch_00;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    var_50h = fcn.0040c8f0();\n    var_4ch = fcn.0040c8f0();\n    iVar3 = fcn.0040c8f0();\n    var_48h = iVar3;\n    iVar4 = fcn.0040c8f0();\n    var_44h = iVar4;\n    if (7 < *(arg_8h + 8)) {\n        uVar5 = fcn.0044b01e(*(*(arg_8h + 4) + 0x1c));\n        iVar6 = (*_sym.imp.USER32.dll_IsWindow)(uVar5);\n        if (iVar6 != 0) {\n            var_8h = fcn.0044b01e(*(*(arg_8h + 4) + 0x1c));\n            goto code_r0x004763b5;\n        }\n    }\n    var_8h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x004763b5:\n    fcn.004318a3(*(var_18h + 0x104), &var_40h, var_8h);\n    if ((*(arg_8h + 8) < 7) || (iVar6 = fcn.0040c8f0(),  iVar6 < 2)) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = fcn.0040c8f0();\n    }\n    if (*(arg_8h + 8) < 6) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.0040c8f0();\n    }\n    arg_ch_00 = fcn.0040c8f0();\n    fcn.00441e53(&var_38h, arg_ch_00, uVar5);\n    var_1h._0_1_ = iVar3 < var_50h;\n    var_2h = iVar4 < var_4ch;\n    iVar4 = fcn.0041365d(iVar4 - var_4ch);\n    iVar4 = iVar4 + 1;\n    var_2ch = iVar4;\n    iVar6 = fcn.0041365d(iVar3 - var_50h);\n    bVar1 = false;\n    iVar3 = fcn.004318ef(var_18h, var_8h, &var_50h, &var_30h);\n    var_1ch = iVar3;\n    if (iVar3 != 0) {\n        var_30h = -var_ch;\n        var_10h = 0;\n        var_14h = var_44h;\n        do {\n            if (iVar4 <= var_10h) break;\n            var_20h = iVar6 * 4 + 4;\n            var_8h = var_20h * var_10h;\n            var_20h = var_8h + var_20h;\n            iVar8 = var_8h;\n            var_28h = var_8h;\n            for (; (!bVar1 && (var_8h < var_20h)); var_8h = var_8h + var_ch * 4) {\n                cVar2 = fcn.00441e09(&var_38h, var_8h + iVar3);\n                if (cVar2 != '\\0') {\n                    bVar1 = true;\n                    fcn.0040ea00(1);\n                    var_24h = (var_8h - iVar8) + (var_8h - iVar8 >> 0x1f & 3U) >> 2;\n                    if (var_1h == '\\0') {\n                        var_24h = var_50h + var_24h;\n                    }\n                    else {\n                        var_24h = var_48h - var_24h;\n                    }\n                    var_24h = var_24h - var_40h;\n                    piVar7 = fcn.0040d1a0(0, 1);\n                    fcn.004091e0();\n                    piVar7[2] = 1;\n                    *piVar7 = var_24h;\n                    var_24h = var_14h;\n                    if (var_2h == '\\0') {\n                        var_24h = var_4ch + var_10h;\n                    }\n                    var_24h = var_24h - var_3ch;\n                    piVar7 = fcn.0040d1a0(0, 1);\n                    fcn.004091e0();\n                    piVar7[2] = 1;\n                    *piVar7 = var_24h;\n                    iVar4 = var_2ch;\n                    iVar8 = var_28h;\n                }\n                iVar3 = var_1ch;\n            }\n            var_10h = var_10h + var_ch;\n            var_14h = var_14h + var_30h;\n        } while (!bVar1);\n        fcn.0041137c(iVar3);\n        if (bVar1) {\n            return 0;\n        }\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 1455
    },
    "00479bdb": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479bdb(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t nWidth;\n    int32_t iVar4;\n    int32_t arg_10h;\n    uint32_t in_ECX;\n    int32_t unaff_ESI;\n    uchar *X;\n    int32_t Y;\n    uint in_stack_ffffff98;\n    uint arg_8h_00;\n    uchar *arg_8h_01;\n    uint uVar5;\n    uchar *lpRect;\n    uint32_t uVar6;\n    int32_t iStack44;\n    uchar auStack40 [8];\n    uint32_t uStack32;\n    \n    uVar1 = *(arg_8h + 8);\n    uStack32 = uVar1;\n    fcn.0047106a(in_ECX, arg_8h);\n    uVar6 = in_ECX;\n    iVar3 = fcn.0046ec64(in_ECX, 1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00403f40(-iVar3, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    lpRect = &stack0xffffffd8;\n    uVar5 = 0x479c4c;\n    fcn.0044c99f(*(in_ECX + 0x1d8), lpRect, 0);\n    if (4 < uVar1) {\n        uVar5 = *(*(arg_8h + 4) + 0x10);\n        cVar2 = fcn.0044aa8e(uVar5);\n        if (cVar2 == '\\0') {\n            fcn.0040c8f0();\n        }\n    }\n    if ((uVar1 < 6) || (cVar2 = fcn.0044aa8e(*(*(arg_8h + 4) + 0x14)),  cVar2 != '\\0')) {\n        unaff_ESI = iStack44 - unaff_ESI;\n    }\n    else {\n        unaff_ESI = fcn.0040c8f0();\n    }\n    iVar3 = *(*(arg_8h + 4) + 8);\n    nWidth = iVar3;\n    cVar2 = fcn.0044aa8e(iVar3);\n    iVar4 = nWidth;\n    if (cVar2 == '\\0') {\n        nWidth = fcn.0040c8f0();\n    }\n    arg_8h_01 = *(*(arg_8h + 4) + 0xc);\n    X = arg_8h_01;\n    cVar2 = fcn.0044aa8e(arg_8h_01);\n    Y = iVar4;\n    if (cVar2 == '\\0') {\n        iVar4 = fcn.0040c8f0();\n    }\n    if (uVar6 < 7) {\ncode_r0x00479d0f:\n        X = lpRect;\n        Y = iVar4;\n        uVar5 = *(in_ECX + 0x1d8);\n    }\n    else {\n        arg_8h_00 = 0x479d08;\n        arg_10h = fcn.0040c8f0();\n        if (arg_10h == -1) goto code_r0x00479d0f;\n        if ((arg_10h < 1) || (100 < arg_10h)) {\n            arg_10h = 10;\n        }\n        if ((lpRect != X) || (iVar4 != Y)) {\n            while (cVar2 = fcn.00433818(arg_8h_00, in_stack_ffffff98, arg_10h, 1, &stack0xffffffa8, &stack0xffffffa4), \n                  cVar2 != '\\0') {\n                fcn.004361c3(*(in_ECX + 0x1d8), uVar5, iVar3, arg_8h_01, unaff_ESI);\n                fcn.0043374b(0x32);\n            }\n            goto code_r0x00479d2b;\n        }\n        uVar5 = *(in_ECX + 0x1d8);\n    }\n    fcn.004361c3(uVar5, X, Y, nWidth, unaff_ESI);\ncode_r0x00479d2b:\n    uVar5 = **(in_ECX + 0x1d8);\n    fcn.004091e0();\n    *arg_ch = uVar5;\n    arg_ch[2] = 7;\n    return 0;\n}\n",
        "token_count": 1067
    },
    "0047a029": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0047a029(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int32_t *extraout_EDX;\n    code *pcVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int16_t *piVar9;\n    int32_t *arg_8h_00;\n    uint *puVar10;\n    int32_t var_e8h;\n    uint32_t var_e4h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_58h;\n    uint var_38h;\n    int32_t *var_28h;\n    uint var_24h;\n    uint var_20h;\n    int16_t *var_1ch;\n    uint *var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int16_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar7 = 0;\n    uVar8 = *(arg_1ch + 8);\n    var_1ch = NULL;\n    var_18h = NULL;\n    var_14h = 0;\n    var_10h = 0;\n    var_20h = 0xfffffffd;\n    var_8h = 0;\n    var_4h = 0;\n    bVar2 = false;\n    if (((arg_14h == 0) || (arg_10h == 0)) || (arg_18h == 0)) {\n        iVar4 = fcn.00451712(arg_8h, 1, 0, L\"NULL Pointer assignment\", 1);\n        return iVar4;\n    }\n    cVar3 = fcn.004329dd(arg_14h);\n    if (cVar3 == '\\0') {\n        iVar4 = fcn.00451712(arg_8h, 2, 0, L\"Not an Object type\", 1);\n        return iVar4;\n    }\n    arg_8h_00 = *(*extraout_EDX + 8);\n    var_28h = arg_8h_00;\n    if (arg_8h_00 == NULL) {\n        iVar4 = fcn.00451712(arg_8h, 4, 0, L\"NULL Pointer assignment\", 1);\n        return iVar4;\n    }\n    iVar4 = fcn.00441bcd(arg_8h_00, arg_18h, &var_8h);\n    if (iVar4 < 0) {\n        iVar4 = fcn.00451712(arg_8h, iVar4, 0, 0, 1);\n        return iVar4;\n    }\n    iVar4 = fcn.004518e4(arg_8h_00, var_8h, &var_e8h);\n    if (-1 < iVar4) {\n        if (((var_e4h & 1) != 0) && (var_dch == 0)) {\n            bVar2 = true;\n        }\n        if (((arg_ch & 0xc) != 0) && ((var_e4h & 0xc) != 0)) {\n            arg_ch = var_e4h & 0xffff;\n        }\n    }\n    iVar1 = (uVar8 + 1) * 0x10;\n    piVar5 = fcn.00410ff3(-(iVar1 >> 0x20 != 0) | iVar1);\n    if (uVar8 != 0) {\n        var_ch = piVar5 + uVar8 * 8 + -8;\n        do {\n            iVar4 = fcn.0047866a(*(*(arg_1ch + 4) + uVar7 * 4), var_ch);\n            if (iVar4 != 0) {\n                var_4h = fcn.00451712(arg_8h, 5, 0, L\"Conversion of parameters failed\", 1);\n                break;\n            }\n            var_ch = var_ch + -8;\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < uVar8);\n    }\n    if ((var_e8h != 0) && (uVar8 != 0)) {\n        piVar9 = piVar5 + uVar8 * 8 + -8;\n        uVar7 = 0;\n        do {\n            if (*(&var_d8h + uVar7 * 4 + 2) == 2) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar9);\n                *piVar9 = *(&var_d8h + uVar7);\n                if (*(*(*(arg_1ch + 4) + uVar7 * 4) + 8) != 6) {\n                    *(piVar9 + 4) = piVar9;\n                }\n            }\n            uVar7 = uVar7 + 1;\n            piVar9 = piVar9 + -8;\n            arg_8h_00 = var_28h;\n        } while (uVar7 < uVar8);\n    }\n    piVar9 = piVar5;\n    pcVar6 = _sym.imp.OLEAUT32.dll_VariantCopy;\n    if (var_4h == 0) {\n        if ((arg_ch & 0xc) != 0) {\n            var_18h = &var_20h;\n            var_10h = 1;\n        }\n        var_1ch = piVar5;\n        var_14h = uVar8;\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&var_38h);\n        fcn.004130e0(&var_58h, 0, 0x20);\n        if (bVar2) {\n            pcVar6 = *(*arg_8h_00 + 0x18);\n            puVar10 = NULL;\n        }\n        else {\n            puVar10 = &var_38h;\n            pcVar6 = *(*arg_8h_00 + 0x18);\n        }\n        iVar4 = (*pcVar6)(arg_8h_00, var_8h, 0x481a10, 0x800, arg_ch, &var_1ch, puVar10, &var_58h, &var_24h);\n        if (iVar4 < 0) {\n            if (iVar4 == -0x7ffdfff7) {\n                var_4h = fcn.00451712(arg_8h, 0x80020009, &var_58h, 0, 1);\n                pcVar6 = _sym.imp.OLEAUT32.dll_VariantCopy;\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_38h);\n            }\n            else {\n                var_4h = fcn.00451712(arg_8h, iVar4, 0, 0, 1);\n                pcVar6 = _sym.imp.OLEAUT32.dll_VariantCopy;\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_38h);\n            }\n        }\n        else {\n            fcn.0046795f(&var_38h);\n            uVar7 = 0;\n            if (uVar8 != 0) {\n                do {\n                    if (var_e8h == 0) {\n                        iVar4 = *(*(arg_1ch + 4) + uVar7 * 4);\n                        if (*(iVar4 + 8) == 6) goto code_r0x0047a31c;\n                    }\n                    else {\n                        iVar4 = *(*(arg_1ch + 4) + uVar7 * 4);\n                        if ((*(iVar4 + 8) == 6) && ((*(&var_d8h + uVar7 * 4 + 2) & 2) != 0)) {\ncode_r0x0047a31c:\n                            fcn.00432acf(iVar4);\n                            fcn.0046795f(iVar4);\n                        }\n                    }\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < uVar8);\n            }\n            pcVar6 = _sym.imp.OLEAUT32.dll_VariantCopy;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_38h);\n        }\n    }\n    for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n        if (*piVar9 == 0xc) {\n            (*pcVar6)(*(piVar9 + 4));\n        }\n        (*pcVar6)(piVar9);\n        piVar9 = piVar9 + 8;\n    }\n    fcn.004136cc(piVar5);\n    return var_4h;\n}\n",
        "token_count": 1991
    },
    "0047b214": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b214(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    var_4h = in_ECX;\n    cVar2 = fcn.00479806(in_ECX, arg_8h);\n    if ((cVar2 != '\\0') && (cVar2 = fcn.0044c99f(*(in_ECX + 0x2fc), &var_14h, 1),  cVar2 != '\\0')) {\n        if (uVar1 < 6) {\n            var_ch = var_ch - var_14h;\n        }\n        else {\n            var_ch = fcn.0040c8f0();\n        }\n        if (uVar1 < 7) {\n            var_8h = var_8h - var_10h;\n        }\n        else {\n            var_8h = fcn.0040c8f0();\n        }\n        cVar2 = fcn.0044aa8e(*(*(arg_8h + 4) + 0xc));\n        if (cVar2 == '\\0') {\n            arg_ch = fcn.0040c8f0();\n        }\n        else {\n            arg_ch = var_14h;\n        }\n        cVar2 = fcn.0044aa8e(*(*(arg_8h + 4) + 0x10));\n        if (cVar2 == '\\0') {\n            var_10h = fcn.0040c8f0();\n        }\n        fcn.004361c3(*(var_4h + 0x2fc), arg_ch, var_10h, var_ch, var_8h);\n        return 0;\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 485
    },
    "0047b53a": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b53a(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint arg_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    cVar3 = fcn.00479806(in_ECX, arg_8h);\n    if (cVar3 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    uVar1 = *(arg_8h + 8);\n    arg_10h = 1;\n    var_4h = 0xffffffff;\n    arg_8h = 0xffffffff;\n    if (6 < uVar1) {\n        arg_8h = fcn.0040c8f0();\n    }\n    if (5 < uVar1) {\n        var_4h = fcn.0040c8f0();\n    }\n    if (4 < uVar1) {\n        arg_10h = fcn.0040c8f0();\n    }\n    iVar4 = 1;\n    if (3 < uVar1) {\n        uVar5 = fcn.00452e81(*(*(iVar2 + 4) + 0xc));\n        iVar4 = fcn.0044b613(uVar5);\n    }\n    if (iVar4 == 1) {\n        uVar5 = 0;\n    }\n    else if (iVar4 == 2) {\n        uVar5 = 2;\n    }\n    else {\n        if (iVar4 != 3) {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            return 0;\n        }\n        uVar5 = 1;\n    }\n    fcn.0043677c(*(in_ECX + 0x2fc), uVar5, arg_10h, var_4h, arg_8h);\n    fcn.0043374b(*(in_ECX + 0x10c));\n    return 0;\n}\n",
        "token_count": 511
    },
    "0047c7a1": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c7a1(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_10h;\n    arg_8h_00 = arg_8h;\n    arg_10h = *(*(*(arg_ch + 4) + *arg_10h * 4) + 10);\n    fcn.0040d610();\n    iVar2 = arg_ch;\n    fcn.004581ef(**(*(arg_ch + 4) + *piVar1 * 4), &var_24h);\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_14h = 0x4870e0;\n    iVar2 = fcn.00409030(arg_8h_00, iVar2, &arg_ch);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00453d62(arg_8h_00 + 0x15c, var_24h, arg_ch, &var_14h, arg_14h, &arg_8h, &var_4h);\n        if (iVar2 == 6) {\n            arg_ch_00 = 0x85;\n        }\n        else {\n            if (iVar2 == 5) goto code_r0x0047c839;\n            if (iVar2 != 7) {\n                fcn.00403f40(arg_8h, 0);\n                fcn.00403f80(var_4h, 0);\n                fcn.00410e00();\n                fcn.00401350();\n                return 0;\n            }\n            arg_ch_00 = 0x70;\n        }\n        fcn.0045e1ee(arg_8h_00, arg_ch_00, arg_10h);\n    }\ncode_r0x0047c839:\n    fcn.00410e00();\n    fcn.00401350();\n    return 1;\n}\n",
        "token_count": 527
    },
    "0047de0b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047de0b(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    ulong uVar6;\n    uint arg_ch_00;\n    uint var_7ch;\n    int32_t var_78h;\n    int32_t var_74h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_6h;\n    \n    var_14h = 1;\n    var_6h._0_1_ = '\\0';\n    var_6h._1_1_ = '\\0';\n    bVar2 = false;\n    var_18h = 1;\n    fcn.0040df00();\n    var_2ch = 0;\n    var_24h = 1;\n    var_20h = 0;\n    var_3ch = 0;\n    var_34h = 1;\n    var_30h = 0;\n    var_4ch = 0;\n    var_44h = 1;\n    var_40h = 0;\n    iVar4 = *(*(arg_ch + 4) + var_14h * 4);\n    var_7ch = 5;\n    if (*(iVar4 + 8) == 0x7f) {\n        fcn.0045e1ee(arg_8h, 0x6e, *(iVar4 + 10));\ncode_r0x0047de7a:\n        fcn.004091e0();\n        fcn.004091e0();\n        fcn.004091e0();\n        fcn.004520e5(&var_7ch);\n        return;\n    }\n    var_78h = *arg_10h + -1;\n    iVar4 = fcn.0040aa20(arg_ch, &var_14h, &var_2ch, 0xffffffff);\n    if (iVar4 != 0) {\ncode_r0x0047e081:\n        fcn.004091e0();\n        fcn.004091e0();\n        fcn.004091e0();\n        fcn.004520e5(&var_7ch);\n        return;\n    }\n    var_10h = 0;\ncode_r0x0047decb:\n    do {\n        do {\n            *arg_10h = *arg_10h + 1;\n            uVar6 = fcn.0040f5a0();\n            iVar4 = uVar6;\n            if (iVar4 == 0) {\ncode_r0x0047e0b2:\n                iVar4 = -1;\n                *(arg_8h + 0xf4) = var_78h;\n                arg_ch_00 = 0xa0;\n                goto code_r0x0047e0c2;\n            }\n            *(arg_8h + 0xf4) = extraout_ECX + -1;\n            var_ch = 0;\n        } while (*(**(iVar4 + 4) + 2) != 0);\n    // switch table (5 cases) at 0x47e0f3\n        switch(***(iVar4 + 4)) {\n        case 0x14:\n        case 0x17:\n            var_10h = var_10h + 1;\n            break;\n        case 0x15:\n            if ((var_10h == 0) && (var_6h._1_1_ == '\\0')) {\n                var_ch = 1;\n                piVar1 = *(*(iVar4 + 4) + 4);\n                var_6h._0_1_ = '\\x01';\n                if ((*(piVar1 + 2) == 0) && (*piVar1 == 6)) {\n                    var_ch = 2;\n                    iVar4 = *(*(iVar4 + 4) + 8);\n                    bVar2 = true;\n                    if (*(iVar4 + 8) != 0x7f) {\n                        fcn.0045e1ee(arg_8h, 0x72, *(iVar4 + 10));\n                        goto code_r0x0047e081;\n                    }\n                }\n                else if (!bVar2) {\n                    do {\n                        iVar5 = fcn.0040aa20(iVar4, &var_ch, &var_3ch, 0xffffffff);\n                        if (iVar5 != 0) goto code_r0x0047de7a;\n                        piVar1 = *(*(iVar4 + 4) + var_ch * 4);\n                        if ((*(piVar1 + 2) == 0) && (*piVar1 == 0xf)) {\n                            var_ch = var_ch + 1;\n                            iVar5 = fcn.0040aa20(iVar4, &var_ch, &var_4ch, 0xffffffff);\n                            if (iVar5 != 0) goto code_r0x0047e0c8;\n                            cVar3 = fcn.0046754b(&var_2ch, &var_3ch);\n                            if (cVar3 != '\\0') {\n                                cVar3 = fcn.00467564(&var_2ch, &var_4ch);\n                                goto joined_r0x0047e010;\n                            }\n                        }\n                        else {\n                            cVar3 = fcn.0040cda0();\njoined_r0x0047e010:\n                            if (cVar3 != '\\0') {\n                                var_18h = *arg_10h;\n                                bVar2 = true;\n                                var_6h._1_1_ = '\\x01';\n                                goto code_r0x0047decb;\n                            }\n                        }\n                        iVar5 = *(*(iVar4 + 4) + var_ch * 4);\n                        if (*(iVar5 + 8) != 0x40) goto code_r0x0047e02b;\n                        var_ch = var_ch + 1;\n                    } while( true );\n                }\n                var_18h = *arg_10h;\n                var_6h._1_1_ = '\\x01';\n            }\n            break;\n        case 0x18:\n            if (var_10h == 0) {\n                iVar4 = *(uVar6 >> 0x20) + -1;\n                var_74h = iVar4;\n                if (var_6h == '\\0') goto code_r0x0047e0b2;\n                fcn.0040d150();\n                if (var_6h._1_1_ == '\\0') {\n                    *arg_10h = iVar4;\n                }\n                else {\n                    *arg_10h = var_18h;\n                }\n                goto code_r0x0047e081;\n            }\n        case 0x16:\n            var_10h = var_10h + -1;\n        }\n    } while( true );\ncode_r0x0047e02b:\n    if (*(iVar5 + 8) != 0x7f) {\n        iVar4 = *(*(*(arg_ch + 4) + var_14h * 4) + 10);\n        arg_ch_00 = 0x72;\ncode_r0x0047e0c2:\n        fcn.0045e1ee(arg_8h, arg_ch_00, iVar4);\ncode_r0x0047e0c8:\n        fcn.004091e0();\n        fcn.004091e0();\n        fcn.004091e0();\n        fcn.004520e5(&var_7ch);\n        return;\n    }\n    goto code_r0x0047decb;\n}\n",
        "token_count": 1797
    },
    "0047e107": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047e107(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    ulong uVar6;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_3h;\n    \n    piVar3 = arg_ch;\n    var_3h._0_1_ = '\\0';\n    var_3h._1_1_ = '\\0';\n    var_3h._2_1_ = '\\0';\n    arg_ch = arg_ch & 0xffffff;\n    var_10h = 1;\n    fcn.0040df00();\n    iVar1 = *piVar3;\n    var_40h = 4;\n    var_ch = 0;\n    var_3ch = iVar1 + -1;\n    do {\n        do {\n            *piVar3 = *piVar3 + 1;\n            uVar6 = fcn.0040f5a0();\n            iVar5 = uVar6 >> 0x20;\n            iVar4 = uVar6;\n            if (iVar4 == 0) {\n                if (var_3h._2_1_ != '\\0') {\ncode_r0x0047e251:\n                    if (var_3h != '\\0') {\n                        fcn.0040d150();\n                        if (var_3h._1_1_ != '\\0') {\n                            *piVar3 = var_10h;\n                            fcn.004520e5(&var_40h);\n                            return;\n                        }\n                        *piVar3 = var_38h;\n                        fcn.004520e5(&var_40h);\n                        return;\n                    }\n                }\n                *(arg_8h + 0xf4) = iVar1 + -1;\n                fcn.0045e1ee(arg_8h, 0xa0, 0xffffffff);\ncode_r0x0047e2b2:\n                fcn.004520e5(&var_40h);\n                return;\n            }\n            if (var_3h._2_1_ != '\\0') goto code_r0x0047e251;\n            *(arg_8h + 0xf4) = extraout_ECX + -1;\n            var_8h = 0;\n        } while (*(**(iVar4 + 4) + 2) != 0);\n    // switch table (5 cases) at 0x47e2c7\n        switch(***(iVar4 + 4)) {\n        case 0x14:\n        case 0x17:\n            var_ch = iVar5 + 1;\n            break;\n        case 0x15:\n            if ((iVar5 == 0) && (var_3h._1_1_ == '\\0')) {\n                var_8h = 1;\n                piVar2 = *(*(iVar4 + 4) + 4);\n                var_3h._0_1_ = '\\x01';\n                if ((*(piVar2 + 2) == 0) && (*piVar2 == 6)) {\n                    arg_ch = CONCAT13(1, arg_ch._0_3_);\n                    var_8h = 2;\n                }\n                else {\n                    iVar5 = fcn.0040cf10(arg_8h, &arg_ch + 3);\n                    if (iVar5 != 0) goto code_r0x0047e2b2;\n                }\n                if (*(*(*(iVar4 + 4) + var_8h * 4) + 8) != 0x7f) {\n                    fcn.0045e1ee(arg_8h, 0x72, *(*(*(iVar4 + 4) + var_8h * 4) + 10));\n                    fcn.004520e5(&var_40h);\n                    return;\n                }\n                if (arg_ch._3_1_ != '\\0') {\n                    var_10h = *piVar3;\n                    var_3h._1_1_ = '\\x01';\n                }\n            }\n            break;\n        case 0x16:\n            if (iVar5 == 0) {\n                var_38h = *piVar3 + -1;\n                var_3h._2_1_ = '\\x01';\n                break;\n            }\n        case 0x18:\n            var_ch = iVar5 + -1;\n        }\n    } while( true );\n}\n",
        "token_count": 1067
    },
    "00401210": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3a8h\n\nvoid __cdecl fcn.00401210(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint lpData;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_398h;\n    \n    if (in_EAX == 1) {\n        fcn.004130e0(&var_3a8h, 0, 0x3a4);\n        fcn.00401a60();\n        if (*0x4974ea != '\\0') {\n            var_3a0h = 2;\n            if (*0x4974ec == '\\0') {\n                if (*(arg_8h + 9) == '\\0') {\n                    if (*(arg_8h + 0x194) == '\\x01') {\n                        var_398h = *(arg_8h + 0x19c);\n                        *(arg_8h + 0x194) = 0;\n                        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)();\n                    }\n                }\n                else if (*(arg_8h + 0x195) == '\\0') {\n                    var_398h = *(arg_8h + 0x1b0);\n                    *(arg_8h + 0x195) = 1;\n                    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)();\n                }\n                else {\n                    var_398h = *(arg_8h + 0x19c);\n                    *(arg_8h + 0x195) = 0;\n                    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)();\n                }\n            }\n            else if (*(arg_8h + 0x194) == '\\x01') {\n                var_398h = *(arg_8h + 0x19c);\n                *(arg_8h + 0x194) = 0;\n                (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)();\n            }\n            else {\n                var_398h = *(arg_8h + 0x1a8);\n                *(arg_8h + 0x194) = 1;\n                (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)();\n            }\n        }\n        (*_sym.imp.USER32.dll_KillTimer)();\n        (*_sym.imp.USER32.dll_SetTimer)();\n    }\n    return;\n}\n",
        "token_count": 545
    },
    "004012b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004012b0(void)\n\n{\n    uint *puVar1;\n    int32_t *unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (*(unaff_ESI + 9) != '\\0') {\n        *unaff_ESI[1] = *unaff_EDI;\n        *unaff_ESI = *unaff_ESI + 1;\n        *(unaff_ESI + 9) = 0;\n        return;\n    }\n    puVar1 = fcn.00411777(8);\n    if (puVar1 != NULL) {\n        *puVar1 = *unaff_EDI;\n        puVar1[1] = unaff_ESI[1];\n        *unaff_ESI = *unaff_ESI + 1;\n        unaff_ESI[1] = puVar1;\n        return;\n    }\n    *0x4 = unaff_ESI[1];\n    *unaff_ESI = *unaff_ESI + 1;\n    unaff_ESI[1] = 0;\n    return;\n}\n",
        "token_count": 235
    },
    "00402260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402260(uint *param_1)\n\n{\n    *param_1[3] = *param_1[3] + -1;\n    if (*param_1[3] == 0) {\n        fcn.0041137c(*param_1);\n        fcn.0041137c(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00401350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401350(void)\n\n{\n    uint *unaff_ESI;\n    \n    *unaff_ESI[3] = *unaff_ESI[3] + -1;\n    if (*unaff_ESI[3] == 0) {\n        fcn.0041137c(*unaff_ESI);\n        fcn.0041137c(unaff_ESI[3]);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00401510": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401704)\n// WARNING: Removing unreachable block (ram,0x00427fa9)\n// WARNING: Removing unreachable block (ram,0x0040170e)\n// WARNING: Removing unreachable block (ram,0x00401711)\n// WARNING: Removing unreachable block (ram,0x00401775)\n// WARNING: Removing unreachable block (ram,0x00427f98)\n// WARNING: Removing unreachable block (ram,0x00401782)\n\nuint fcn.00401510(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    uint *puVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint unaff_EDI;\n    bool bVar11;\n    int32_t iVar12;\n    uint uVar13;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 1;\n    var_ch = 0;\n    var_20h = 0;\n    var_28h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_1ch = 0;\n    var_4h = 0;\ncode_r0x00401580:\n    while( true ) {\n        iVar12 = var_8h;\n        if ((*0x4a90f8 < iVar12) || (iVar12 < 1)) {\n            iVar10 = 0;\n        }\n        else {\n            iVar10 = iVar12 * 0x10 + *0x4a912c;\n        }\n        if (iVar10 == 0) break;\n        var_8h = iVar12 + 1;\n        ppiVar2 = *(iVar10 + 4);\n        var_24h = 0;\n        iVar9 = 0;\n        if (*(*ppiVar2 + 2) != 0x7f) {\n            ppiVar6 = ppiVar2;\n            iVar9 = 0;\n            do {\n                iVar8 = iVar9;\n                ppiVar1 = ppiVar6 + 1;\n                ppiVar6 = ppiVar6 + 1;\n                iVar9 = iVar8 + 1;\n            } while (*(*ppiVar1 + 2) != 0x7f);\n            if (iVar9 != 0) {\n                iVar9 = iVar8;\n            }\n        }\n        *0x4a826c = iVar12;\n        if (*(*ppiVar2 + 2) == 0) {\n            piVar7 = *ppiVar2;\n            iVar12 = *piVar7;\n            if (iVar12 == 4) {\n                iVar5 = 0;\n                while ((iVar5 != 0 || (*piVar7 != 5))) {\n                    piVar7 = ppiVar2[var_24h + 1];\n                    var_24h = var_24h + 1;\n                    iVar5 = *(piVar7 + 2);\n                    if (iVar5 == 0x7f) {\n                        iVar10 = -1;\n                        uVar13 = 0xa1;\n                        goto code_r0x0042801d;\n                    }\n                }\n                if ((*(ppiVar2[iVar9] + 2) == 0) && (*ppiVar2[iVar9] == 5)) {\n                    var_ch = var_ch + 1;\n                    var_4h = var_4h + 1;\n                    fcn.004012b0();\n                }\n                puVar3 = *(*(iVar10 + 4) + (var_24h + 1) * 4);\n                if (*(puVar3 + 2) == 0) {\n    // switch table (17 cases) at 0x4280a8\n                    switch(*puVar3) {\n                    case 0x12:\n                    case 0x13:\n                        goto code_r0x00427fce;\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                        iVar10 = *(*(*(iVar10 + 4) + (var_24h + 1) * 4) + 10);\n                        uVar13 = 0x9f;\n                        goto code_r0x0042801d;\n                    }\n                }\n            }\n            else if (iVar12 == 0xd) {\n                var_14h = var_14h + 1;\n                var_4h = var_4h + 1;\n                fcn.004012b0();\n            }\n            else {\n                if (iVar12 != 0xe) goto code_r0x0040161b;\n                piVar7 = ppiVar2[1];\n                if (*(piVar7 + 2) != 0x7f) goto code_r0x00427ffe;\n                var_14h = var_14h + -1;\n                if ((var_14h < 0) || (bVar11 = var_4h + -1 != var_4h,  var_4h = var_4h + -1,  bVar11)) {\n                    iVar10 = -1;\n                    uVar13 = 0x95;\n                    goto code_r0x0042801d;\n                }\n            }\n        }\n    }\n    iVar12 = 0;\n    iVar10 = fcn.0040eb70(0, var_10h, var_ch);\n    if (iVar10 == 0) {\n        if (var_28h == 0) {\n            fcn.00401500();\n            fcn.00401500();\n            fcn.00401500();\n            fcn.00401500();\n            fcn.00401500();\n            fcn.00401500();\n            return 0;\n        }\n        goto code_r0x00428061;\n    }\n    goto code_r0x00428027;\ncode_r0x0040161b:\n    // switch table (29 cases) at 0x40190c\n    switch(iVar12) {\n    case 5:\n        goto code_r0x00428016;\n    case 6:\n        piVar7 = ppiVar2[1];\n        if (*(piVar7 + 2) != 0x7f) goto code_r0x0042800a;\n    case 7:\n        if (var_ch == 0) {\n            iVar10 = -1;\n            uVar13 = 0x74;\n            goto code_r0x0042801d;\n        }\n    case 8:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n        goto code_r0x00401580;\n    case 9:\n        var_18h = var_18h + 1;\n        var_4h = var_4h + 1;\n        fcn.004012b0();\n        goto code_r0x00401580;\n    case 10:\n        piVar7 = ppiVar2[1];\n        if (*(piVar7 + 2) == 0x7f) {\n            var_18h = var_18h + -1;\n            iVar12 = var_4h + -1;\n            cVar4 = fcn.00410d90();\n            if (cVar4 == '\\0') {\n                piVar7 = fcn.00410d80();\n                var_4h = *piVar7;\n                fcn.0040c110();\n            }\n            if ((var_18h < 0) || (bVar11 = iVar12 != var_4h,  var_4h = iVar12,  bVar11)) {\n                iVar10 = -1;\n                uVar13 = 0x78;\n                goto code_r0x0042801d;\n            }\n            goto code_r0x00401580;\n        }\n        goto code_r0x00427ffe;\n    case 0xb:\n        if (*(ppiVar2[1] + 2) == 0x7f) {\n            var_10h = var_10h + 1;\n            var_4h = var_4h + 1;\n            fcn.004012b0();\n            goto code_r0x00401580;\n        }\n        break;\n    case 0xc:\n        var_10h = var_10h + -1;\n        iVar12 = var_4h + -1;\n        cVar4 = fcn.00410d90();\n        if (cVar4 == '\\0') {\n            piVar7 = fcn.00410d80();\n            var_4h = *piVar7;\n            fcn.0040c110();\n        }\n        if ((var_10h < 0) || (bVar11 = iVar12 != var_4h,  var_4h = iVar12,  bVar11)) {\n            iVar10 = -1;\n            uVar13 = 0x93;\n            goto code_r0x0042801d;\n        }\n        goto code_r0x00401580;\n    case 0x12:\n    case 0x13:\ncode_r0x00427fce:\n        if (((var_10h == 0) && (var_18h == 0)) && (var_14h == 0)) {\n            iVar10 = -1;\n            uVar13 = 0x96;\n            goto code_r0x0042801d;\n        }\n        goto code_r0x00401580;\n    case 0x14:\n        piVar7 = ppiVar2[1];\n        if (*(piVar7 + 2) == 0x7f) {\n            var_20h = var_20h + 1;\n            var_4h = var_4h + 1;\n            fcn.004012b0();\n            goto code_r0x00401580;\n        }\n        goto code_r0x0042800a;\n    case 0x15:\n        cVar4 = fcn.00410d90();\n        if (((cVar4 != '\\0') || (piVar7 = fcn.00410d80(),  var_4h + -1 != *piVar7)) &&\n           ((cVar4 = fcn.00410d90(),  cVar4 != '\\0' || (piVar7 = fcn.00410d80(),  var_4h + -1 != *piVar7)))) {\n            iVar10 = -1;\n            uVar13 = 0x98;\n            goto code_r0x0042801d;\n        }\n        goto code_r0x00401580;\n    case 0x16:\n        if (*(ppiVar2[1] + 2) == 0x7f) {\n            var_20h = var_20h + -1;\n            iVar12 = var_4h + -1;\n            cVar4 = fcn.00410d90();\n            if (cVar4 == '\\0') {\n                piVar7 = fcn.00410d80();\n                var_4h = *piVar7;\n                fcn.0040c110();\n            }\n            if ((-1 < var_20h) && (bVar11 = iVar12 == var_4h,  var_4h = iVar12,  bVar11)) goto code_r0x00401580;\n            uVar13 = 0x99;\ncode_r0x00427ed9:\n            fcn.0045e1ee(0x4a8178, uVar13, 0xffffffff);\n            fcn.00401500();\n            fcn.00401500();\n            fcn.00401500();\n            fcn.00401500();\n            fcn.00401500();\n            fcn.00401500();\n            return 1;\n        }\n        break;\n    case 0x17:\n        var_1ch = var_1ch + 1;\n        var_4h = var_4h + 1;\n        fcn.004012b0();\n        goto code_r0x00401580;\n    case 0x18:\n        piVar7 = ppiVar2[1];\n        if (*(piVar7 + 2) == 0x7f) {\n            var_1ch = var_1ch + -1;\n            iVar12 = var_4h + -1;\n            cVar4 = fcn.00410d90();\n            if (cVar4 == '\\0') {\n                piVar7 = fcn.00410d80();\n                var_4h = *piVar7;\n                fcn.0040c110();\n            }\n            if ((-1 < var_1ch) && (bVar11 = iVar12 == var_4h,  var_4h = iVar12,  bVar11)) goto code_r0x00401580;\n            uVar13 = 0xb3;\n            goto code_r0x00427ed9;\n        }\ncode_r0x0042800a:\n        iVar10 = *(piVar7 + 10);\n        uVar13 = 0x72;\n        goto code_r0x0042801d;\n    case 0x20:\n        var_28h = var_28h + 1;\n        if (1 < var_28h) {\ncode_r0x00428061:\n            iVar10 = -1;\n            uVar13 = 0x83;\n            goto code_r0x0042801d;\n        }\ncode_r0x0040164c:\n        iVar12 = var_4h;\n        iVar10 = fcn.0040eb70(unaff_EDI, var_10h, var_ch);\n        if (iVar10 != 0) goto code_r0x00428027;\n        goto code_r0x00401580;\n    case 0x21:\n        piVar7 = ppiVar2[1];\n        if (*(piVar7 + 2) == 0x7f) {\n            var_28h = var_28h + -1;\n            if (var_28h != 0) goto code_r0x00428061;\n            goto code_r0x0040164c;\n        }\n        goto code_r0x00427ffe;\n    default:\n        if (*(ppiVar2[1] + 2) == 0x7f) {\n            var_ch = var_ch + -1;\n            if ((var_ch < 0) || (bVar11 = var_4h + -1 != var_4h,  var_4h = var_4h + -1,  bVar11)) {\n                iVar10 = -1;\n                uVar13 = 0x75;\n                goto code_r0x0042801d;\n            }\n            goto code_r0x00401580;\n        }\n    }\n    piVar7 = *(*(iVar10 + 4) + 4);\ncode_r0x00427ffe:\n    iVar10 = *(piVar7 + 10);\n    uVar13 = 0x72;\n    goto code_r0x0042801d;\ncode_r0x00428016:\n    iVar10 = -1;\n    uVar13 = 0x81;\ncode_r0x0042801d:\n    iVar12 = 0x4a8178;\n    fcn.0045e1ee(0x4a8178, uVar13, iVar10);\ncode_r0x00428027:\n    fcn.00401500(iVar12);\n    fcn.00401500();\n    fcn.00401500();\n    fcn.00401500();\n    fcn.00401500();\n    fcn.00401500();\n    return 1;\n}\n",
        "token_count": 3760
    },
    "004019e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004019e0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_EDI + 8) == 0) {\n        *(unaff_EDI + 8) = 0;\n        return;\n    }\n    uVar2 = 0;\n    do {\n        iVar1 = *(*(unaff_EDI + 4) + uVar2 * 4);\n        if (iVar1 != 0) {\n            fcn.00402260();\n            fcn.0041137c(iVar1);\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < *(unaff_EDI + 8));\n    *(unaff_EDI + 8) = 0;\n    return;\n}\n",
        "token_count": 184
    },
    "00401a60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401a60(void)\n\n{\n    uint arg_8h;\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uStack1220;\n    uchar auStack1204 [4];\n    ushort auStack1200 [125];\n    ushort uStack950;\n    uint uStack948;\n    uint uStack944;\n    uint uStack940;\n    uint uStack936;\n    uchar auStack924 [920];\n    \n    if (*0x4974ea == '\\0') {\n        return;\n    }\n    fcn.004013c0();\n    if (*0x4974ec == '\\x01') {\n        (*_sym.imp.USER32.dll_LoadStringW)(*0x497520, 0x65, auStack1200, 0x7f);\n    }\n    else {\n        auStack1200[0] = 0;\n    }\n    fcn.00402170();\n    if (*0x4974e9 == '\\0') {\n        if (*(in_EAX + 0x60) != 0) {\n            fcn.0040e410(in_EAX + 0x5c);\n            goto code_r0x00401ad3;\n        }\n    }\n    else {\n        fcn.0040d510();\n        arg_8h = *0x4a826c;\n        iVar1 = fcn.00434ec1(*0x4a826c);\n        if (iVar1 == 0) goto code_r0x00401ad3;\n        fcn.0040d510();\n        fcn.00434ec1(arg_8h);\n    }\n    fcn.0040d510();\ncode_r0x00401ad3:\n    fcn.004130e0(&uStack944, 0, 0x3a4);\n    uStack948 = 0x3a8;\n    uStack944 = *0x497518;\n    uStack940 = 1;\n    uStack936 = 4;\n    fcn.0041315a(auStack1204, uStack1220, 0x7f);\n    uStack950 = 0;\n    fcn.00411707(auStack924, auStack1204);\n    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &uStack948);\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 516
    },
    "00401ca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401ca0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = param_1 + -0x49c;\n    *(*(*(param_1 + -0x49c) + 4) + -0x49c + param_1) = 0x489b54;\n    *(*(*piVar1 + 4) + -0x4a0 + param_1) = *(*piVar1 + 4) + -0x49c;\n    if (*(param_1 + -0x3b4) != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + -0x3b4));\n    }\n    (*_sym.imp.WINMM.dll_mciSendStringW)(L\"close all\", 0, 0, 0);\n    if (*(param_1 + -0x2ec) != 0) {\n        uVar5 = 0;\n        do {\n            piVar3 = *(*(param_1 + -0x2f0) + uVar5 * 4);\n            if (*piVar3 != 0) {\n                (*_sym.imp.USER32.dll_UnregisterHotKey)(*0x497518, **piVar3);\n                iVar4 = **(*(param_1 + -0x2f0) + uVar5 * 4);\n                if (iVar4 != 0) {\n                    fcn.00442900(iVar4);\n                }\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(param_1 + -0x2ec));\n    }\n    if (*(param_1 + -0x31c) != 0) {\n        uVar5 = 0;\n        do {\n            ppiVar2 = *(*(param_1 + -800) + uVar5 * 4);\n            if (*ppiVar2 != NULL) {\n                piVar3 = *ppiVar2;\n                if (*piVar3 == 0) {\n                    iVar4 = piVar3[1];\n                    fcn.0040dcc0();\n                    *(iVar4 + 0x2c) = 0;\n                    *(iVar4 + 0x30) = 0;\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(piVar3[2]);\n                    fcn.0041137c(*(**(*(param_1 + -800) + uVar5 * 4) + 0xc));\n                }\n                fcn.0041137c(**(*(param_1 + -800) + uVar5 * 4));\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(param_1 + -0x31c));\n    }\n    if (*(param_1 + -0x30c) != 0) {\n        uVar5 = 0;\n        do {\n            piVar3 = *(*(param_1 + -0x310) + uVar5 * 4);\n            if (*piVar3 != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar3);\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(param_1 + -0x30c));\n    }\n    if (*(param_1 + -0x2fc) != 0) {\n        uVar5 = 0;\n        do {\n            piVar3 = *(*(param_1 + -0x300) + uVar5 * 4);\n            if (*piVar3 != 0) {\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(*(*piVar3 + 0x10), 0, 0x8000);\n                iVar4 = **(*(param_1 + -0x300) + uVar5 * 4);\n                if (iVar4 != 0) {\n                    fcn.0044ac43(iVar4);\n                }\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(param_1 + -0x2fc));\n    }\n    fcn.004091e0();\n    *(param_1 + -0x2dc) = 1;\n    *(param_1 + -0x2e4) = 0;\n    fcn.004091e0();\n    *(param_1 + -0xc) = 1;\n    *(param_1 + -0x14) = 0;\n    iVar4 = *(*(*piVar1 + 4) + param_1 + -0x498);\n    while (iVar4 != 0) {\n        fcn.0040d6b0();\n        fcn.0040de00();\n        iVar4 = *(param_1 + *(*piVar1 + 4) + -0x498);\n    }\n    fcn.0040e920();\n    if (*(param_1 + -0x28) != 0) {\n        fcn.00432cb4(*(param_1 + -0x28));\n    }\n    fcn.004091e0();\n    fcn.00410b20();\n    fcn.00410b40();\n    fcn.00402260();\n    fcn.00401400();\n    *(param_1 + -0x1bc) = 0x489b68;\n    fcn.00410c00();\n    fcn.0041137c(*(param_1 + -0x1b8));\n    fcn.004012f0();\n    fcn.00402260();\n    fcn.004091e0();\n    *(param_1 + -0x2f4) = 0x489b68;\n    fcn.00410c00();\n    fcn.0041137c(*(param_1 + -0x2f0));\n    *(param_1 + -0x304) = 0x489b68;\n    fcn.00410c00();\n    fcn.0041137c(*(param_1 + -0x300));\n    *(param_1 + -0x314) = 0x489b68;\n    fcn.00410c00();\n    fcn.0041137c(*(param_1 + -0x310));\n    *(param_1 + -0x324) = 0x489b68;\n    fcn.00410c00();\n    fcn.0041137c(*(param_1 + -800));\n    fcn.00410c20();\n    fcn.00410bd0();\n    fcn.00402260();\n    fcn.00410ba0();\n    fcn.00410b40();\n    fcn.00410b40();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.0040e140();\n    return;\n}\n",
        "token_count": 1553
    },
    "00401f10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f10(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint arg_ch;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.0040e8b0();\n    var_ch = 0;\n    fcn.00402570(arg_8h);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x4a7f6c, 0x104);\n    cVar1 = fcn.004102d0();\n    *0x4a7f50 = 0x4a7f6c;\n    fcn.00410ae0();\n    fcn.00401c30();\n    fcn.00401990();\n    fcn.00402260();\n    fcn.004091e0();\n    fcn.00401c30();\n    fcn.00401990();\n    fcn.00402260();\n    fcn.00401c30();\n    fcn.0040c560(&var_8h, &var_ch);\n    fcn.00402260();\n    fcn.0040bf10();\n    fcn.00401a20();\n    arg_ch = var_1ch;\n    iVar2 = fcn.0041164b(L\"/ErrorStdOut\", var_1ch);\n    if (iVar2 == 0) {\n        *0x4974e8 = 1;\n        var_34h = var_34h + -1;\n        fcn.00401a20();\n        arg_ch = var_1ch;\n    }\n    iVar2 = fcn.0041164b(L\"/AutoIt3OutputDebug\", arg_ch);\n    if (iVar2 == 0) {\n        *0x4974e7 = 1;\n        var_34h = var_34h + -1;\n        fcn.00401a20();\n        arg_ch = var_1ch;\n    }\n    iVar2 = fcn.0041164b(L\"/AutoIt3ExecuteLine\", arg_ch);\n    if (iVar2 == 0) {\n        *0x4a7f54 = cVar1 == '\\0';\n        *0x4a7f58 = 1;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x4a7f6c, 0x104);\n        fcn.00401a20();\n        fcn.0040e410(&var_1ch);\n        var_34h = var_34h + -2;\n        fcn.00401a20();\n        arg_ch = var_1ch;\n    }\n    iVar2 = fcn.0041164b(L\"/AutoIt3ExecuteScript\", arg_ch);\n    if (iVar2 == 0) {\n        if (cVar1 == '\\0') {\n            *0x4a7f54 = 3;\n        }\n        else {\n            *0x4a7f54 = 0;\n        }\n        fcn.00401a20();\n        fcn.00411707(0x4a7f6c, var_1ch);\n        var_34h = var_34h + -2;\n        fcn.00401a20();\n        arg_ch = var_1ch;\n    }\n    if (*0x4a7f6c == 0) {\n        fcn.00411707(0x4a7f6c, arg_ch);\n        var_34h = var_34h + -1;\n        fcn.00401a20();\n    }\n    if (var_34h < 0) {\n        var_34h = 0;\n    }\n    fcn.0040ea00(1);\n    piVar3 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    piVar3[2] = 1;\n    *piVar3 = var_34h;\n    if (0 < var_34h) {\n        iVar2 = 0;\n        do {\n            iVar2 = iVar2 + 1;\n            fcn.0040d1a0(0, 1);\n            fcn.0040e870();\n            fcn.00401a20();\n        } while (iVar2 < var_34h);\n    }\n    fcn.00402260();\n    fcn.004091e0();\n    fcn.004019e0();\n    fcn.004019e0();\n    fcn.0041137c(var_38h);\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 1072
    },
    "004022e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004022e0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    ulong *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    \n    if (arg_8h != arg_ch) {\n        if (*(arg_8h + 8) != 0) {\n            uVar9 = 0;\n            do {\n                iVar2 = *(*(arg_8h + 4) + uVar9 * 4);\n                if (iVar2 != 0) {\n                    fcn.0044c431(iVar2);\n                }\n                uVar9 = uVar9 + 1;\n            } while (uVar9 < *(arg_8h + 8));\n        }\n        *(arg_8h + 8) = 0;\n        uVar9 = *(arg_ch + 8);\n        if (*(arg_8h + 0xc) < uVar9) {\n            if (uVar9 < 4) {\n                uVar9 = 4;\n            }\n            *(arg_8h + 0xc) = uVar9;\n            uVar6 = fcn.00411777(-(uVar9 * 4 >> 0x20 != 0) | uVar9 * 4);\n            fcn.0041137c(*(arg_8h + 4));\n            *(arg_8h + 4) = uVar6;\n        }\n        iVar2 = *(arg_ch + 8);\n        *(arg_8h + 8) = iVar2;\n        if (iVar2 != 0) {\n            uVar9 = 0;\n            do {\n                puVar7 = fcn.00411777(0xc);\n                if (puVar7 == NULL) {\n                    puVar7 = NULL;\n                }\n                else {\n                    puVar3 = *(*(arg_ch + 4) + uVar9 * 4);\n                    iVar1 = *(puVar3 + 1);\n                    *(puVar7 + 1) = iVar1;\n                    *(puVar7 + 10) = *(puVar3 + 10);\n                    if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n                        puVar8 = fcn.00411777(0x10);\n                        if (puVar8 == NULL) {\n                            *puVar7 = 0;\n                        }\n                        else {\n                            puVar4 = *puVar3;\n                            *puVar8 = *puVar4;\n                            puVar8[1] = puVar4[1];\n                            puVar8[2] = puVar4[2];\n                            piVar5 = puVar4[3];\n                            puVar8[3] = piVar5;\n                            *piVar5 = *piVar5 + 1;\n                            *puVar7 = puVar8;\n                        }\n                    }\n                    else if (iVar1 == 0x10) {\n                        *puVar7 = *puVar3;\n                        *(puVar7 + 4) = *(puVar3 + 4);\n                    }\n                    else if (iVar1 == 0x20) {\n                        *puVar7 = *puVar3;\n                    }\n                    else {\n                        *puVar7 = *puVar3;\n                    }\n                }\n                *(*(arg_8h + 4) + uVar9 * 4) = puVar7;\n                uVar9 = uVar9 + 1;\n            } while (uVar9 < *(arg_8h + 8));\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 822
    },
    "00402570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402570(uint arg_8h)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    int32_t *piVar3;\n    int16_t *piVar4;\n    uint *extraout_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_ESI;\n    int16_t aiStack8248 [4102];\n    uint var_28h;\n    uint *var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uchar auStack12 [3];\n    uint var_5h;\n    \n    stack0xfffffff8 = 0x40257d;\n    fcn.00422880();\n    var_18h = extraout_ECX + 5;\n    var_10h = 0x40258d;\n    _auStack12 = unaff_ESI;\n    fcn.004019e0();\n    *extraout_ECX = 0;\n    var_10h = 0x4025a3;\n    fcn.00402170();\n    uVar6 = 0;\n    var_ch = 0;\n    bVar2 = false;\n    var_14h = 0;\n    _auStack12 = _auStack12 & 0xffffff;\n    while( true ) {\n        var_10h = 0x4025b8;\n        piVar4 = fcn.00402150();\n        if ((*piVar4 != 0x20) && (*piVar4 != 9)) break;\n        uVar6 = uVar6 + 1;\n    }\ncode_r0x004025d0:\n    while( true ) {\n        piVar3 = var_10h;\n        var_10h = 0x4025da;\n        fcn.004029a0();\n        if (uVar6 < piVar3[1]) {\n            piVar4 = *piVar3 + uVar6 * 2;\n        }\n        else {\n            piVar4 = *piVar3 + piVar3[1] * 2;\n        }\n        iVar1 = *piVar4;\n        if ((iVar1 == 0) || (uVar7 = uVar6 + 1,  0xfff < var_ch)) break;\n        if ((iVar1 == 0x20) || (iVar1 == 9)) {\n            if (bVar2) {\ncode_r0x00402615:\n                *(&stack0xffffdfc8 + var_ch * 2) = iVar1;\n                var_ch = var_ch + 1;\n                uVar6 = uVar7;\n            }\n            else {\n                *(&stack0xffffdfc8 + var_ch * 2) = 0;\n                var_10h = 0x402641;\n                fcn.00401c30();\n                var_10h = 0x40264b;\n                fcn.0040da60();\n                var_10h = 0x402652;\n                fcn.00402260();\n                var_ch = 0;\n                _auStack12 = _auStack12 & 0xffffff;\n                uVar6 = uVar7;\n                while( true ) {\n                    var_10h = 0x40266a;\n                    piVar4 = fcn.00402150();\n                    if ((*piVar4 != 0x20) && (*piVar4 != 9)) break;\n                    uVar6 = uVar6 + 1;\n                }\n            }\n        }\n        else {\n            if (iVar1 != 0x22) goto code_r0x00402615;\n            var_10h = 0x40268b;\n            piVar4 = fcn.00402150();\n            if (*piVar4 == 0x22) goto code_r0x00427545;\n            if (!bVar2) {\n                bVar2 = true;\n                uVar6 = uVar7;\n                goto code_r0x0040269f;\n            }\n            bVar2 = false;\n            uVar6 = uVar7;\n        }\n    }\n    iVar5 = var_ch;\n    if ((var_ch == 0) && (var_5h == '\\0')) {\n        if (!bVar2) {\n            return;\n        }\n    }\n    else if (!bVar2) goto code_r0x004026cf;\n    while (iVar5 = iVar5 + -1,  var_14h <= iVar5) {\n        *(&stack0xffffdfca + iVar5 * 2) = *(&stack0xffffdfc8 + iVar5 * 2);\n    }\n    iVar5 = var_ch + 1;\n    *(&stack0xffffdfc8 + var_14h * 2) = 0x22;\ncode_r0x004026cf:\n    *(&stack0xffffdfc8 + iVar5 * 2) = 0;\n    var_10h = 0x4026e7;\n    fcn.00401c30();\n    var_10h = 0x4026f1;\n    fcn.0040da60();\n    var_10h = 0x4026f8;\n    fcn.00402260();\n    return;\ncode_r0x00427545:\n    if (bVar2) {\n        *(&stack0xffffdfc8 + var_ch * 2) = 0x22;\n        var_ch = var_ch + 1;\n    }\n    else {\n        _auStack12 = CONCAT13(1, auStack12);\n    }\n    uVar6 = uVar6 + 2;\n    if (bVar2) {\ncode_r0x0040269f:\n        var_14h = var_ch;\n    }\n    goto code_r0x004025d0;\n}\n",
        "token_count": 1320
    },
    "004029c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004029c0(void)\n\n{\n    uint *puVar1;\n    ulong *unaff_ESI;\n    int16_t unaff_DI;\n    \n    if ((0x2f < *(unaff_ESI + 1)) && (*(unaff_ESI + 1) < 0x40)) {\n        puVar1 = *unaff_ESI;\n        if (puVar1 != NULL) {\n            *puVar1[3] = *puVar1[3] + -1;\n            if (*puVar1[3] == 0) {\n                fcn.0041137c(*puVar1);\n                fcn.0041137c(puVar1[3]);\n            }\n            fcn.0041137c(puVar1);\n        }\n        *unaff_ESI = 0;\n    }\n    *(unaff_ESI + 1) = unaff_DI;\n    if ((0x3f < unaff_DI) || (unaff_DI < 0x30)) {\n        if (unaff_DI == 0x10) {\n            *(unaff_ESI + 4) = 0;\n        }\n        else if (unaff_DI == 0x20) {\n            *unaff_ESI = 0;\n            return;\n        }\n    }\n    *unaff_ESI = 0;\n    return;\n}\n",
        "token_count": 295
    },
    "00402b30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402b30(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint16_t uVar7;\n    uint32_t uVar8;\n    uint *lpsz;\n    int32_t cchLength;\n    uint32_t var_1ch;\n    int32_t *var_18h;\n    uint *var_14h;\n    uint var_ch;\n    uint *var_8h;\n    \n    var_ch._0_2_ = -1;\n    puVar5 = NULL;\n    var_1ch = 0x65;\n    cchLength = 0;\n    lpsz = fcn.00411777(0xca);\n    *lpsz = 0;\n    var_18h = fcn.00411777(4);\n    if (var_18h == NULL) {\n        var_18h = NULL;\n    }\n    else {\n        *var_18h = 1;\n    }\n    if (*(arg_10h + 8) != 0) {\n        uVar8 = 0;\n        do {\n            puVar6 = *(*(arg_10h + 4) + uVar8 * 4);\n            if (puVar6 != NULL) {\n                if (((*(puVar6 + 2) < 0x40) && (0x2f < *(puVar6 + 2))) && (puVar1 = *puVar6,  puVar1 != NULL)) {\n                    *puVar1[3] = *puVar1[3] + -1;\n                    var_8h = puVar1;\n                    if (*puVar1[3] == 0) {\n                        fcn.0041137c(*puVar1);\n                        fcn.0041137c(var_8h[3]);\n                    }\n                    fcn.0041137c(var_8h);\n                }\n                fcn.0041137c(puVar6);\n            }\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < *(arg_10h + 8));\n    }\n    *(arg_10h + 8) = 0;\n    if (*arg_ch != 0) {\n        do {\n            for (; (arg_ch[puVar5] == 0x20 || (arg_ch[puVar5] == 9)); puVar5 = puVar5 + 1) {\n            }\n            uVar7 = arg_ch[puVar5];\n            if (uVar7 == 0) break;\n            var_ch._2_2_ = SUB42(puVar5, 0);\n            var_8h = puVar5;\n            if (((0x2f < uVar7) && (uVar7 < 0x3a)) || (uVar7 == 0x2e)) {\n                cVar3 = fcn.00403460(&var_14h, &lpsz);\n                puVar6 = var_8h;\n                if (cVar3 != '\\x01') {\n                    if (uVar7 != 0x2e) goto code_r0x00402c1e;\n                    fcn.00403600();\n                    while( true ) {\n                        puVar5 = puVar6 + 1;\n                        uVar7 = arg_ch[puVar5];\n                        if (((uVar7 < 0x41) || (0x5a < uVar7)) &&\n                           (((uVar7 < 0x61 || (0x7a < uVar7)) && (((uVar7 < 0x30 || (0x39 < uVar7)) && (uVar7 != 0x5f)))\n                            ))) break;\n                        fcn.004032d0(uVar7);\n                        puVar6 = puVar5;\n                    }\n                    if (cchLength == 0) {\n                        fcn.0046028a(arg_8h, 0x138b, puVar6);\n                        fcn.00402260();\n                        fcn.0044b0f0(&var_14h);\n                        return 1;\n                    }\ncode_r0x004030ba:\n                    fcn.004029c0();\n                    fcn.00402290();\n                    goto code_r0x00402d82;\n                }\n                fcn.00402a30();\n                puVar5 = var_8h;\n                goto code_r0x00402d8d;\n            }\ncode_r0x00402c1e:\n            puVar6 = var_8h;\n            if (((0x40 < uVar7) && (uVar7 < 0x5b)) || (((0x60 < uVar7 && (uVar7 < 0x7b)) || (uVar7 == 0x5f)))) {\n                fcn.00403310(arg_ch, &var_14h, &lpsz);\n                if (var_14h == 0xffffffff) {\n                    fcn.0046028a(arg_8h, 0x138c, var_8h);\n                    fcn.00402260();\n                    fcn.0044b0f0(&var_14h);\n                    return 1;\n                }\n                fcn.00402a30();\n                puVar5 = var_8h;\n                goto code_r0x00402d8d;\n            }\n            if (uVar7 == 0x24) {\n                puVar5 = var_8h + 1;\n                fcn.00403600();\n                uVar7 = arg_ch[puVar5];\n                while ((((uVar7 < 0x5b && (0x40 < uVar7)) || ((0x60 < uVar7 && (uVar7 < 0x7b)))) ||\n                       (((0x2f < uVar7 && (uVar7 < 0x3a)) || (uVar7 == 0x5f))))) {\n                    if (*var_18h < 2) {\n                        fcn.004031b0();\n                        iVar4 = cchLength;\n                    }\n                    else {\n                        *var_18h = *var_18h + -1;\n                        fcn.004013a0();\n                        iVar4 = cchLength;\n                        var_1ch = fcn.00446220(cchLength + 2);\n                        var_8h = fcn.00411777(-(var_1ch * 2 >> 0x20 != 0) | var_1ch * 2);\n                        fcn.00411000(var_8h, lpsz, iVar4 * 2 + 2);\n                        lpsz = var_8h;\n                    }\n                    *(lpsz + iVar4 * 2) = uVar7;\n                    cchLength = iVar4 + 1;\n                    puVar5 = puVar5 + 1;\n                    *(lpsz + cchLength * 2) = 0;\n                    uVar7 = arg_ch[puVar5];\n                }\n                if (cchLength == 0) {\n                    fcn.0046028a(arg_8h, 0x138b, puVar5 + -1);\n                    goto code_r0x00428605;\n                }\n                fcn.004029a0();\n                iVar4 = cchLength;\n                puVar6 = lpsz;\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                if (((0x2f < var_ch) && (var_ch < 0x40)) && (var_14h != NULL)) {\n                    fcn.00442ef7(var_14h);\n                }\n                var_ch._0_2_ = 0x33;\n                var_14h = fcn.00411777(0x10);\n                if (var_14h == NULL) {\n                    var_14h = NULL;\n                }\n                else {\n                    *var_14h = puVar6;\n                    var_14h[1] = iVar4;\n                    var_14h[2] = var_1ch;\n                    var_14h[3] = var_18h;\n                    *var_18h = *var_18h + 1;\n                }\n                goto code_r0x00402d82;\n            }\n            if (uVar7 == 0x3d) {\n                puVar5 = var_8h + 1;\n                if (arg_ch[puVar5] == 0x3d) {\n                    fcn.004029c0();\n                    puVar5 = puVar6 + 2;\n                }\n                else {\n                    fcn.004029c0();\n                }\n                goto code_r0x00402d82;\n            }\n            if (uVar7 == 0x28) {\n                fcn.004029c0();\n                fcn.00402a30();\n                puVar5 = puVar6 + 1;\n                goto code_r0x00402d8d;\n            }\n            if (uVar7 == 0x29) {\n                fcn.004029c0();\n                fcn.00402a30();\n                puVar5 = puVar6 + 1;\n                goto code_r0x00402d8d;\n            }\n    // switch table (69 cases) at 0x40312c\n            switch(uVar7) {\n            case 0x1a:\n                if (((var_8h != NULL) || (arg_ch[1] != 0)) || (arg_8h < *0x4a90f8)) goto code_r0x004285ca;\n                puVar5 = 0x1;\n                goto code_r0x00402d8d;\n            case 0x1b:\n            case 0x1c:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x25:\n            case 0x28:\n            case 0x29:\n            case 0x2e:\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3d:\n            case 0x3f:\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n            case 0x52:\n            case 0x53:\n            case 0x54:\n            case 0x55:\n            case 0x56:\n            case 0x57:\n            case 0x58:\n            case 0x59:\n            case 0x5a:\n            case 0x5c:\ncode_r0x004285ca:\n                fcn.0046028a(arg_8h, 5000, var_8h);\n                fcn.004029c0();\n                fcn.00402a30();\ncode_r0x00428605:\n                fcn.00402260();\n                fcn.0044b0f0(&var_14h);\n                return 1;\n            case 0x26:\n                fcn.004029c0();\n                puVar5 = puVar6 + 1;\n                if (arg_ch[puVar5] == 0x3d) {\n                    puVar5 = puVar6 + 2;\n                    fcn.004029c0();\n                }\n                break;\n            default:\n                iVar4 = fcn.00403230(arg_8h, arg_ch);\n                if (iVar4 != 0) {\n                    fcn.004029c0();\n                    fcn.00402a30();\ncode_r0x004285af:\n                    fcn.00402260();\n                    fcn.0044b0f0(&var_14h);\n                    return 1;\n                }\n                fcn.004029c0();\n                fcn.00402290();\n                fcn.00402a30();\n                puVar5 = var_8h;\n                goto code_r0x00402d8d;\n            case 0x2a:\n                fcn.004029c0();\n                puVar5 = puVar6 + 1;\n                if (arg_ch[puVar5] == 0x3d) {\n                    puVar5 = puVar6 + 2;\n                    fcn.004029c0();\n                }\n                break;\n            case 0x2b:\n                fcn.004029c0();\n                puVar5 = puVar6 + 1;\n                if (arg_ch[puVar5] == 0x3d) {\n                    puVar5 = puVar6 + 2;\n                    fcn.004029c0();\n                }\n                break;\n            case 0x2c:\n                fcn.004029c0();\n                fcn.00402a30();\n                puVar5 = puVar6 + 1;\n                goto code_r0x00402d8d;\n            case 0x2d:\n                fcn.004029c0();\n                puVar5 = puVar6 + 1;\n                if (arg_ch[puVar5] == 0x3d) {\n                    puVar5 = puVar6 + 2;\n                    fcn.004029c0();\n                }\n                break;\n            case 0x2f:\n                fcn.004029c0();\n                puVar5 = puVar6 + 1;\n                if (arg_ch[puVar5] == 0x3d) {\n                    puVar5 = puVar6 + 2;\n                    fcn.004029c0();\n                }\n                break;\n            case 0x3c:\n                puVar5 = var_8h + 1;\n                if (arg_ch[var_8h + 1] == 0x3d) {\n                    fcn.004029c0();\n                    puVar5 = puVar6 + 2;\n                }\n                else if (arg_ch[var_8h + 1] == 0x3e) {\n                    fcn.004029c0();\n                    puVar5 = puVar6 + 2;\n                }\n                else {\n                    fcn.004029c0();\n                }\n                break;\n            case 0x3e:\n                puVar5 = var_8h + 1;\n                if (arg_ch[puVar5] == 0x3d) {\n                    fcn.004029c0();\n                    puVar5 = puVar6 + 2;\n                }\n                else {\n                    fcn.004029c0();\n                }\n                break;\n            case 0x40:\n                fcn.00403600();\n                while( true ) {\n                    puVar5 = puVar6 + 1;\n                    uVar7 = arg_ch[puVar5];\n                    if ((((0x5a < uVar7) || (uVar7 < 0x41)) && ((uVar7 < 0x61 || (0x7a < uVar7)))) &&\n                       (((uVar7 < 0x30 || (0x39 < uVar7)) && (uVar7 != 0x5f)))) break;\n                    fcn.004032d0(uVar7);\n                    puVar6 = puVar5;\n                }\n                if (cchLength == 0) {\n                    fcn.0046028a(arg_8h, 0x138b, puVar6);\n                    goto code_r0x004285af;\n                }\n                fcn.004029a0();\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                goto code_r0x004030ba;\n            case 0x5b:\n                fcn.004029c0();\n                fcn.00402a30();\n                puVar5 = puVar6 + 1;\n                goto code_r0x00402d8d;\n            case 0x5d:\n                fcn.004029c0();\n                fcn.00402a30();\n                puVar5 = puVar6 + 1;\n                goto code_r0x00402d8d;\n            case 0x5e:\n                fcn.004029c0();\n                fcn.00402a30();\n                puVar5 = puVar6 + 1;\n                goto code_r0x00402d8d;\n            }\ncode_r0x00402d82:\n            fcn.00402a30();\ncode_r0x00402d8d:\n        } while (arg_ch[puVar5] != 0);\n        puVar6 = var_14h;\n        if (((0x2f < var_ch) && (var_ch < 0x40)) && (var_14h != NULL)) {\n            *var_14h[3] = *var_14h[3] + -1;\n            if (*var_14h[3] == 0) {\n                fcn.0041137c(*var_14h);\n                fcn.0041137c(puVar6[3]);\n            }\n            fcn.0041137c(puVar6);\n        }\n    }\n    var_ch._0_2_ = 0x7f;\n    var_14h = NULL;\n    var_ch._2_2_ = SUB42(puVar5, 0);\n    fcn.00402a30();\n    piVar2 = var_18h;\n    *var_18h = *var_18h + -1;\n    if (*var_18h == 0) {\n        fcn.0041137c(lpsz);\n        fcn.0041137c(piVar2);\n    }\n    return 0;\n}\n",
        "token_count": 4075
    },
    "00403230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403230(uint arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t arg_10h;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *in_EAX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *unaff_EDI;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403600();\n    arg_10h = *unaff_EDI;\n    iVar2 = *(arg_ch + 2 + arg_10h * 2);\n    *unaff_EDI = arg_10h + 1;\n    if (iVar2 != 0) {\n        uVar3 = *(arg_ch + arg_10h * 2);\n        do {\n            puVar1 = arg_ch + *unaff_EDI * 2;\n            uVar4 = *puVar1;\n            if (uVar4 == uVar3) {\n                if (puVar1[1] != uVar3) {\n                    *unaff_EDI = *unaff_EDI + 1;\n                    return 0;\n                }\n                fcn.004032d0(uVar4);\n                *unaff_EDI = *unaff_EDI + 2;\n            }\n            else {\n                piVar5 = in_EAX[3];\n                if (*piVar5 < 2) {\n                    fcn.004031b0();\n                }\n                else {\n                    *piVar5 = *piVar5 + -1;\n                    fcn.004013a0();\n                    uVar7 = fcn.00446220(in_EAX[1] + 2);\n                    in_EAX[2] = uVar7;\n                    iVar8 = fcn.00411777(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                    fcn.00411000(iVar8, *in_EAX, in_EAX[1] * 2 + 2);\n                    *in_EAX = iVar8;\n                }\n                *(*in_EAX + in_EAX[1] * 2) = uVar4;\n                in_EAX[1] = in_EAX[1] + 1;\n                iVar8 = in_EAX[1];\n                iVar6 = *in_EAX;\n                *unaff_EDI = *unaff_EDI + 1;\n                *(iVar6 + iVar8 * 2) = 0;\n            }\n        } while (*(arg_ch + *unaff_EDI * 2) != 0);\n    }\n    fcn.0046028a(arg_8h, 0x138a, arg_10h);\n    return 1;\n}\n",
        "token_count": 637
    },
    "00403460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403460(double *arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    float10 extraout_ST0;\n    ulong uVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    fcn.00403600();\n    iVar3 = *in_EAX;\n    if ((*(in_ECX + iVar3 * 2) == 0x30) && ((iVar2 = *(in_ECX + 2 + iVar3 * 2),  iVar2 == 0x78 || (iVar2 == 0x58)))) {\n        *in_EAX = iVar3 + 2;\n        while( true ) {\n            uVar6 = *(in_ECX + *in_EAX * 2);\n            if ((((uVar6 < 0x30) || (0x39 < uVar6)) && ((uVar6 < 0x61 || (0x66 < uVar6)))) &&\n               ((uVar6 < 0x41 || (0x46 < uVar6)))) break;\n            *in_EAX = *in_EAX + 1;\n            fcn.004032d0(uVar6);\n        }\n        fcn.004029c0();\n        cVar4 = fcn.00433276(*arg_ch, &var_ch, 8);\n        if (cVar4 != '\\0') {\n            *arg_8h = var_ch;\n            return 1;\n        }\n        return 0;\n    }\n    var_1h._0_1_ = '\\0';\n    var_8h = 0x17;\n    do {\n        uVar1 = *(in_ECX + *in_EAX * 2);\n        if (uVar1 < 0x2b) {\ncode_r0x004034e5:\n            if ((((0x40 < (uVar1 & 0xffdf)) && ((uVar1 & 0xffdf) < 0x5b)) || (uVar1 == 0x5f)) &&\n               ((var_8h & 0xfffffffd) != 0)) {\n                var_8h = var_8h | 0x10;\n                *in_EAX = iVar3;\n            }\n            goto code_r0x004034c6;\n        }\n    // switch table (59 cases) at 0x4035a8\n        switch(uVar1) {\n        case 0x2b:\n        case 0x2d:\n            if ((var_8h & 8) != 0) {\n                var_8h = 0x31;\n            }\n            break;\n        case 0x2c:\n        case 0x2f:\n        case 0x3a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x3f:\n        case 0x40:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n        case 0x5e:\n        case 0x5f:\n        case 0x60:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n            goto code_r0x004034e5;\n        case 0x2e:\n            if ((var_8h & 2) != 0) {\n                var_8h = 0x25;\n                var_8h._0_1_ = 0x25;\n            }\n            uVar6 = var_8h;\n            var_1h._0_1_ = '\\x01';\n            goto code_r0x004034c9;\n        default:\n            var_8h = var_8h & 0xffffffef | 0x20;\n            break;\n        case 0x45:\n        case 0x65:\n            if ((var_8h & 0x14) == 4) {\n                var_8h = 0x39;\n            }\n            var_1h._0_1_ = '\\x01';\n        }\ncode_r0x004034c6:\n        uVar6 = var_8h & 0xff;\ncode_r0x004034c9:\n        if ((uVar6 & 0x20) == 0) {\n            if ((uVar6 & 0x10) != 0) {\n                return 0;\n            }\n            if (var_1h == '\\0') {\n                uVar7 = fcn.0041333b(*arg_ch);\n                var_8h = uVar7 >> 0x20;\n                if (var_8h + (0x7fffffff < uVar7) == 0) {\n                    if ((*(arg_8h + 1) < 0x40) && (0x2f < *(arg_8h + 1))) {\n                        if (*arg_8h != 0) {\n                            fcn.00442ef7(*arg_8h);\n                        }\n                        *arg_8h = 0;\n                    }\n                    *(arg_8h + 1) = 5;\n                    *arg_8h = 0;\n                    uVar5 = fcn.00413330(*arg_ch);\n                    *arg_8h = uVar5;\n                    return 1;\n                }\n                fcn.004029c0();\n                *arg_8h = uVar7;\n                *(arg_8h + 4) = var_8h;\n                return 1;\n            }\n            fcn.004029c0();\n            fcn.00413d9d(*arg_ch);\n            *arg_8h = extraout_ST0;\n            return 1;\n        }\n        uVar1 = *(in_ECX + *in_EAX * 2);\n        *in_EAX = *in_EAX + 1;\n        fcn.004032d0(uVar1);\n        var_8h = var_8h & 0xffffffdf;\n    } while( true );\n}\n",
        "token_count": 1595
    },
    "00403670": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403670(uint arg_8h, uint arg_ch, int32_t noname_2, uint32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack0000001c;\n    uint32_t in_stack_00000020;\n    uint uStack00000024;\n    uint arg_8h_00;\n    uchar *puVar10;\n    uchar *puVar11;\n    char cVar12;\n    int32_t arg_10h;\n    int32_t *piVar13;\n    \n    fcn.00422880();\n    arg_8h_00 = arg_ch;\n    *0x4a9538 = *0x4a9538 + 1;\n    if (*0x4a9538 < 0x30) {\n        cVar12 = '\\x01';\n        fcn.0040dd00();\n        fcn.00401c30();\n        cVar3 = fcn.0040e1b0(&arg_8h);\n        fcn.00402260();\n        if (cVar3 == '\\0') {\n            fcn.00453a89(arg_8h, arg_14h, arg_1ch, L\"Error opening the file\", arg_18h);\n            uVar7 = fcn.00443d25(&stack0xfffffffc);\n            *0x4a9538 = *0x4a9538 + -1;\n            uVar7 = uVar7 & 0xffffff00;\n        }\n        else {\n            arg_10h = 0x104;\n            (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n            puVar11 = &stack0x0000004c;\n            puVar10 = &stack0x00000050;\n            (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n            fcn.00413bbe(&stack0x00000040, &stack0x00000034, &stack0x00000460, &stack0x00002a80, &stack0x00002878);\n            fcn.00411707(&stack0x00000250, &stack0x00000034);\n            fcn.004116d6(&stack0x00000250, &stack0x00000460);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n            while (cVar12 == '\\x01') {\n                fcn.00403600();\n                if ((in_stack_00000020 & 3) == 0) {\n                    if ((in_stack_00000020 & 4) == 0) {\n                        piVar13 = NULL;\n                        puVar4 = fcn.00411777(0x10);\n                        *puVar4 = 0;\n                        puVar5 = fcn.00411777(4);\n                        if (puVar5 != NULL) {\n                            *puVar5 = 1;\n                        }\n                        cVar3 = fcn.00403a50();\n                        if (cVar3 == '\\0') {\n                            fcn.00401350();\n                            cVar3 = '\\0';\n                        }\n                        else {\n                            fcn.00403da0(&stack0xffffffe4, &stack0x0000000c);\n                            *piVar13 = *piVar13 + -1;\n                            if (*piVar13 == 0) {\n                                fcn.0041137c();\n                                fcn.0041137c();\n                            }\n                            cVar3 = '\\x01';\n                        }\n                    }\n                    else {\n                        cVar3 = fcn.00468250(&stack0xfffffff4, &stack0x0000000c);\n                    }\n                }\n                else {\n                    cVar3 = fcn.0045f0fc(&stack0xfffffff4, &stack0x0000000c);\n                }\n                if (cVar3 == '\\0') break;\n                if (0xffe < arg_14h) {\n                    iVar9 = arg_14h - 0xffe;\n                    fcn.004029a0();\n                    fcn.00411000(noname_2 + 0x1ffc, noname_2 + 0x1ffc + iVar9 * 2, (arg_14h - iVar9) * 2 + -0x1ffa);\n                    arg_14h = arg_14h - iVar9;\n                }\n                fcn.00411707(&stack0x00000874, noname_2);\n                arg_10h = arg_10h + 1;\n                iVar8 = 0;\n                iVar9 = 0;\n                while( true ) {\n                    uVar2 = *(&stack0x00000874 + iVar8 * 2);\n                    iVar6 = fcn.004133ee(uVar2);\n                    if ((iVar6 == 0) || (iVar6 = fcn.004133c5(uVar2),  iVar6 == 0)) break;\n                    iVar8 = iVar8 + 1;\n                }\n                iVar1 = *(&stack0x00000874 + iVar8 * 2);\n                while (iVar1 != 0) {\n                    *(&stack0x00000874 + iVar9 * 2) = *(&stack0x00000874 + iVar8 * 2);\n                    iVar8 = iVar8 + 1;\n                    iVar9 = iVar9 + 1;\n                    iVar1 = *(&stack0x00000874 + iVar8 * 2);\n                }\n                *(&stack0x00000874 + iVar9 * 2) = 0;\n                cVar3 = fcn.00403c50();\n                if (cVar3 == '\\0') {\n                    fcn.00453a89(arg_8h, arg_14h, arg_10h, L\"Unterminated string\", &stack0x00000874);\n                    break;\n                }\n                iVar9 = fcn.00411361(&stack0x00000874);\n                if (iVar9 != 0) {\n                    while (iVar9 = iVar9 + -1,  -1 < iVar9) {\n                        uVar2 = *(&stack0x00000874 + iVar9 * 2);\n                        iVar8 = fcn.004133ee(uVar2);\n                        if ((iVar8 == 0) || (iVar8 = fcn.004133c5(uVar2),  iVar8 == 0)) break;\n                    }\n                    *(&stack0x00000876 + iVar9 * 2) = 0;\n                }\n                uVar7 = puVar11 & 0xffffff00;\n                iVar9 = fcn.00411361(&stack0x00000874);\n                if (((2 < iVar9) && (iVar8 = fcn.004133c5(*(&stack0x00000870 + iVar9 * 2) & 0x7f),  iVar8 != 0)) &&\n                   (*(&stack0x00000872 + iVar9 * 2) == 0x5f)) {\n                    *(&stack0x00000872 + iVar9 * 2) = 0;\n                    uVar7 = CONCAT31(uVar7 >> 8, 1);\n                }\n                if (uVar7 >> 0x10 == '\\x01') {\n                    fcn.00434f46(arg_8h, &stack0x00000874);\n                }\n                else {\n                    iVar9 = fcn.00403cd0(&stack0x00000874, &stack0x0000003c, &stack0xffffffe0, &stack0xfffffff4);\n                    if ((iVar9 == 3) || ((iVar9 != 0 && (iVar9 == 2)))) {\n                        fcn.00403d00(arg_8h_00, noname_2);\n                    }\n                }\n                if (uVar7 == '\\x01') {\n                    puVar11 = uVar7 & 0xff000000 | CONCAT12(1, uVar7);\n                }\n                else {\n                    puVar11 = uVar7 & 0xff00ffff;\n                }\n                if (puVar11 >> 8 != '\\x01') break;\n                cVar12 = puVar11 >> 0x18;\n            }\n            fcn.0040dcc0();\n            in_stack_00000020 = 0;\n            uStack00000024 = 0;\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n            fcn.0040dcc0();\n            uStack0000001c = 0;\n            in_stack_00000020 = 0;\n            fcn.00402260();\n            fcn.0040dcc0();\n            uVar7 = fcn.0041137c();\n            uVar7 = uVar7 & 0xffffff00 | puVar10 >> 8 & 0xff;\n            *0x4a9538 = *0x4a9538 + -1;\n        }\n    }\n    else {\n        uVar7 = fcn.00453a89(arg_8h, arg_14h, arg_1ch, \n                             L\"#include depth exceeded.  Make sure there are no recursive includes\", arg_18h);\n        *0x4a9538 = *0x4a9538 + -1;\n        uVar7 = uVar7 & 0xffffff00;\n    }\n    return uVar7;\n}\n",
        "token_count": 2096
    },
    "00403a50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00403a50(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    double dVar4;\n    char cVar5;\n    uint *in_EAX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t *unaff_EDI;\n    uint16_t in_FPUControlWord;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t lpNumberOfBytesRead;\n    uint32_t var_8h;\n    uint var_2h;\n    \n    piVar2 = unaff_EDI[3];\n    if (1 < *piVar2) {\n        *piVar2 = *piVar2 + -1;\n        fcn.0043500b(unaff_EDI);\n        unaff_EDI[2] = 0x10;\n        uVar7 = fcn.00411777(0x10);\n        *unaff_EDI = uVar7;\n    }\n    unaff_EDI[1] = 0;\n    **unaff_EDI = 0;\n    var_2h._0_1_ = '\\0';\n    do {\n        if (in_EAX[2] == 0) {\n            in_EAX[2] = 0;\n            in_EAX[3] = 0;\n            fcn.00443b3f(in_EAX);\n        }\n        uVar7 = 0;\n        do {\n            if (in_EAX[3] == in_EAX[2]) {\n                iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_EAX, in_EAX[1], 0x10000, &lpNumberOfBytesRead, 0);\n                if ((iVar6 == 0) || (lpNumberOfBytesRead == 0)) break;\n                in_EAX[2] = lpNumberOfBytesRead;\n                in_EAX[3] = 0;\n            }\n            iVar6 = in_EAX[3];\n            *(&var_2h + uVar7 + 1) = *(iVar6 + in_EAX[1]);\n            uVar7 = uVar7 + 1;\n            in_EAX[3] = iVar6 + 1;\n        } while (uVar7 == 0);\n        cVar5 = var_2h._1_1_;\n        puVar1 = in_EAX + 4;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + uVar7;\n        in_EAX[5] = in_EAX[5] + CARRY4(uVar3, uVar7);\n        if (uVar7 == 0) {\n            if (var_2h != '\\0') {\n                return 1;\n            }\n            return 0;\n        }\n        if (var_2h._1_1_ == '\\r') {\n            iVar6 = fcn.00403bc0(&var_2h + 1);\n            if (iVar6 == 0) {\n                return 1;\n            }\n            if (var_2h._1_1_ == '\\n') {\n                return 1;\n            }\n            fcn.0040e300(0xffffffff, 0xffffffff, 1);\n            return 1;\n        }\n        if (var_2h._1_1_ == '\\n') {\n            return 1;\n        }\n        piVar2 = unaff_EDI[3];\n        var_2h._0_1_ = '\\x01';\n        if (*piVar2 < 2) {\n            uVar7 = unaff_EDI[1] + 2;\n            if (unaff_EDI[2] < uVar7) {\n                if (uVar7 < 0x41c2) {\n                    unaff_EDI[2] = uVar7 * 2;\n                }\n                else if (uVar7 < 0x2000000) {\n                    dVar4 = uVar7;\n                    if (uVar7 < 0) {\n                        dVar4 = dVar4 + *0x48bd70;\n                    }\n                    var_8h = var_8h & 0xffff | in_FPUControlWord << 0x10;\n                    var_14h = ROUND(dVar4 * *0x48bda8);\n                    unaff_EDI[2] = var_14h;\n                }\n                else if (uVar7 < 0x8000000) {\n                    dVar4 = uVar7;\n                    if (uVar7 < 0) {\n                        dVar4 = dVar4 + *0x48bd70;\n                    }\n                    var_8h = var_8h & 0xffff | in_FPUControlWord << 0x10;\n                    var_14h = ROUND(dVar4 * *0x48bdb8);\n                    unaff_EDI[2] = var_14h;\n                }\n                else {\n                    dVar4 = uVar7;\n                    if (uVar7 < 0) {\n                        dVar4 = dVar4 + *0x48bd70;\n                    }\n                    var_8h = var_8h & 0xffff | in_FPUControlWord << 0x10;\n                    var_14h = ROUND(dVar4 * *0x48bdb0);\n                    unaff_EDI[2] = var_14h;\n                }\n                if (unaff_EDI[2] == 0) {\n                    uVar7 = 0x10;\n                }\n                else {\n                    uVar7 = unaff_EDI[2] + 0xf & 0xfffffff0;\n                }\n                unaff_EDI[2] = uVar7;\n                uVar7 = fcn.00411777(uVar7);\n                if (*unaff_EDI != 0) {\n                    fcn.00411000(uVar7, *unaff_EDI, unaff_EDI[1] + 1);\n                    fcn.0041137c(*unaff_EDI);\n                }\n                goto code_r0x00403b68;\n            }\n        }\n        else {\n            *piVar2 = *piVar2 + -1;\n            fcn.0043500b(unaff_EDI);\n            uVar7 = fcn.00444b08(unaff_EDI[1] + 2);\n            unaff_EDI[2] = uVar7;\n            var_8h = fcn.00411777(uVar7);\n            fcn.00411000(var_8h, *unaff_EDI, unaff_EDI[1] + 1);\n            uVar7 = var_8h;\ncode_r0x00403b68:\n            *unaff_EDI = uVar7;\n        }\n        *(unaff_EDI[1] + *unaff_EDI) = cVar5;\n        unaff_EDI[1] = unaff_EDI[1] + 1;\n        *(unaff_EDI[1] + *unaff_EDI) = 0;\n    } while( true );\n}\n",
        "token_count": 1571
    },
    "00403bc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403bc0(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t unaff_EBX;\n    uint *unaff_ESI;\n    uint32_t uVar4;\n    ulong uVar5;\n    int32_t lpNumberOfBytesRead;\n    \n    lpNumberOfBytesRead = in_ECX;\n    if (unaff_ESI[2] == 0) {\n        unaff_ESI[2] = 0;\n        unaff_ESI[3] = 0;\n        uVar5 = fcn.0040e3c0(unaff_ESI);\n        unaff_ESI[4] = uVar5;\n        unaff_ESI[5] = uVar5 >> 0x20;\n    }\n    uVar4 = 0;\n    if (unaff_EBX != 0) {\n        do {\n            if (unaff_ESI[3] == unaff_ESI[2]) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*unaff_ESI, unaff_ESI[1], 0x10000, &lpNumberOfBytesRead, 0);\n                if ((iVar3 == 0) || (lpNumberOfBytesRead == 0)) break;\n                unaff_ESI[2] = lpNumberOfBytesRead;\n                unaff_ESI[3] = 0;\n            }\n            *(uVar4 + arg_8h) = *(unaff_ESI[1] + unaff_ESI[3]);\n            unaff_ESI[3] = unaff_ESI[3] + 1;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < unaff_EBX);\n    }\n    puVar1 = unaff_ESI + 4;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    unaff_ESI[5] = unaff_ESI[5] + CARRY4(uVar2, uVar4);\n    return uVar4;\n}\n",
        "token_count": 477
    },
    "00403c50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00403c50(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (in_EAX == NULL) {\n        return 0;\n    }\n    iVar3 = 0;\n    if ((*in_EAX == 0x23) && (iVar2 = fcn.004135bf(in_EAX, L\"#include\", 8),  iVar2 != 0)) {\n        iVar3 = 3;\n        in_EAX = in_EAX + 1;\n    }\n    uVar1 = *in_EAX;\n    do {\n        if (uVar1 == 0) {\n            if ((iVar3 != 0) && (iVar3 != 3)) {\n                return 0;\n            }\n            return 1;\n        }\n        uVar1 = *in_EAX;\n        if (uVar1 < 0x3c) {\n            if (uVar1 == 0x22) {\n                if (iVar3 == 2) {\n                    iVar3 = 0;\n                }\n                else if (iVar3 == 0) {\n                    iVar3 = 2;\n                }\n            }\n            else if (uVar1 == 0x27) {\n                if (iVar3 == 1) {\n                    iVar3 = 0;\n                }\n                else if (iVar3 == 0) {\n                    iVar3 = 1;\n                }\n            }\n            else if ((uVar1 == 0x3b) && ((iVar3 == 0 || (iVar3 == 3)))) {\n                *in_EAX = 0;\n                return 1;\n            }\n        }\n        in_EAX = in_EAX + 1;\n        uVar1 = *in_EAX;\n    } while( true );\n}\n",
        "token_count": 397
    },
    "00403cd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403cd0(int16_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t *arg_ch_00;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint noname_2;\n    uchar *arg_8h_00;\n    uint32_t uVar4;\n    uchar auStackY8196 [8140];\n    uint uStackY56;\n    \n    arg_ch_00 = arg_8h;\n    fcn.00422880();\n    if (*arg_8h != 0x23) {\n        return 3;\n    }\n    iVar2 = fcn.004135bf(arg_8h, L\"#notrayicon\", 0xb);\n    if (iVar2 == 0) {\n        *arg_8h_00 = 1;\n    }\n    else {\n        iVar2 = fcn.004135bf(arg_8h, L\"#requireadmin\", 0xd);\n        if (iVar2 == 0) {\n            arg_8h_00[1] = 1;\n            return true;\n        }\n        iVar2 = fcn.004135bf(arg_8h, L\"#NoAutoIt3Execute\", 0xd);\n        if (iVar2 == 0) {\n            arg_8h_00[2] = 1;\n            return true;\n        }\n        iVar2 = fcn.004135bf(arg_8h, L\"#OnAutoItStartRegister\", 0x16);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00410330();\n            fcn.004448a5(iVar2);\n            fcn.00444901(iVar2);\n            iVar3 = fcn.00411361(iVar2);\n            if (*(iVar2 + -2 + iVar3 * 2) == 0x22) {\n                *(iVar2 + -2 + iVar3 * 2) = 0;\n                fcn.004448a5(iVar2 + 2);\n                fcn.00444901(iVar2 + 2);\n            }\n            (**(**(arg_8h_00 + 4) + 8))();\n            fcn.0041137c();\n            return true;\n        }\n        iVar2 = fcn.004135bf(arg_8h, L\"#include-once\", 0xd);\n        if (iVar2 == 0) {\n            if (*(arg_8h_00 + 0x20) != 0) {\n                uVar4 = 0;\n                do {\n                    iVar2 = fcn.0041164b(**(*(arg_8h_00 + 0x1c) + uVar4 * 4), arg_ch);\n                    if (iVar2 == 0) {\n                        return ((**(*(arg_8h_00 + 0x2c) + uVar4 * 4) < 2) - 1U & 3) + 1;\n                    }\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < *(arg_8h_00 + 0x20));\n                return true;\n            }\n        }\n        else {\n            iVar2 = fcn.004135bf(arg_8h, L\"#include\", 8);\n            if (iVar2 == 0) {\n                cVar1 = fcn.00444942(arg_8h_00, arg_8h + 8, &stack0xffffdffc);\n                iVar2 = *arg_10h;\n                if (cVar1 == '\\x01') {\n                    noname_2 = fcn.00410360();\n                    uStackY56 = 0x428b87;\n                    cVar1 = fcn.00403670(arg_8h_00, &stack0xffffdffc, noname_2, arg_ch, arg_8h, iVar2);\n                    return cVar1 != '\\0';\n                }\n                fcn.00453a89(arg_8h_00, arg_ch, iVar2, L\"Cannot parse #include\", arg_8h);\n                return false;\n            }\n            iVar2 = fcn.004135bf(arg_8h, L\"#comments-start\", 0xf);\n            if ((iVar2 == 0) || (iVar2 = fcn.004135bf(arg_8h, 0x484a48, 3),  iVar2 == 0)) {\n                arg_8h = 0x1;\n                while (cVar1 = fcn.0046f60f(arg_14h, arg_ch_00),  cVar1 != '\\0') {\n                    *arg_10h = *arg_10h + 1;\n                    fcn.00444901(arg_ch_00);\n                    fcn.004448a5(arg_ch_00);\n                    iVar2 = fcn.004135bf(arg_ch_00, L\"#comments-start\", 0xf);\n                    if ((iVar2 == 0) || (iVar2 = fcn.004135bf(arg_ch_00, 0x484a48, 3),  iVar2 == 0)) {\n                        arg_8h = arg_8h + 1;\n                    }\n                    else {\n                        iVar2 = fcn.004135bf(arg_ch_00, L\"#comments-end\", 0xd);\n                        if (((iVar2 == 0) || (iVar2 = fcn.004135bf(arg_ch_00, 0x484aac, 3),  iVar2 == 0)) &&\n                           (arg_8h = arg_8h + -1,  arg_8h < 1)) {\n                            return true;\n                        }\n                    }\n                }\n                if (0 < arg_8h) {\n                    fcn.00453a89(arg_8h_00, arg_ch, *arg_10h, L\"Unterminated group of comments\", arg_ch_00);\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n",
        "token_count": 1319
    },
    "00403d00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d00(uint arg_8h, uint arg_ch)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 8) == 0) {\n        uVar2 = fcn.00411777(0x10);\n        *(unaff_ESI + 8) = uVar2;\n        *(unaff_ESI + 0xc) = uVar2;\n    }\n    else if (***(unaff_ESI + 0xc) == 0) {\n        fcn.0041137c(**(unaff_ESI + 0xc));\n        *(unaff_ESI + 0x10) = *(unaff_ESI + 0x10) + -1;\n    }\n    else {\n        uVar2 = fcn.00411777(0x10);\n        *(*(unaff_ESI + 0xc) + 0xc) = uVar2;\n        *(unaff_ESI + 0xc) = uVar2;\n    }\n    *(*(unaff_ESI + 0xc) + 0xc) = 0;\n    iVar3 = fcn.00411361(unaff_EBX);\n    iVar1 = (iVar3 + 1) * 2;\n    uVar2 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n    fcn.00411707(uVar2, unaff_EBX);\n    **(unaff_ESI + 0xc) = uVar2;\n    *(*(unaff_ESI + 0xc) + 4) = arg_8h;\n    *(*(unaff_ESI + 0xc) + 8) = arg_ch;\n    *(unaff_ESI + 0x10) = *(unaff_ESI + 0x10) + 1;\n    return;\n}\n",
        "token_count": 436
    },
    "00403f70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00403f70(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 9) == '\\0') {\n        return *(in_EAX + 4);\n    }\n    return *(*(in_EAX + 4) + 0x38);\n}\n",
        "token_count": 68
    },
    "00404050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404050(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    \n    if (arg_8h == 0) {\n        *(unaff_ESI + 0x1c) = 0;\n        *(unaff_ESI + 0x18) = 0;\n        return unaff_ESI;\n    }\n    fcn.00404150(unaff_ESI, &arg_8h);\n    iVar2 = arg_8h;\n    iVar3 = fcn.0040bf60();\n    if (-1 < iVar3) {\n        if (0 < iVar3) {\n            uVar1 = *(iVar2 + 0x1c);\n            *(unaff_ESI + 0x18) = iVar2;\n            *(unaff_ESI + 0x1c) = uVar1;\n            *(iVar2 + 0x1c) = 0;\n            return unaff_ESI;\n        }\n        return iVar2;\n    }\n    uVar1 = *(iVar2 + 0x18);\n    *(unaff_ESI + 0x1c) = iVar2;\n    *(unaff_ESI + 0x18) = uVar1;\n    *(iVar2 + 0x18) = 0;\n    return unaff_ESI;\n}\n",
        "token_count": 312
    },
    "00404150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00404150(uint16_t **arg_8h, uint16_t **arg_ch)\n\n{\n    uint16_t **ppuVar1;\n    uint16_t **ppuVar2;\n    uint32_t uVar3;\n    uint32_t in_EAX;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint var_18h;\n    uint16_t *var_14h;\n    uint16_t *var_10h;\n    uint16_t *var_ch;\n    uint16_t *var_8h;\n    uint var_1h;\n    \n    if (*arg_ch == NULL) {\n        return in_EAX & 0xffffff00;\n    }\n    var_1h._0_1_ = 0;\n    if ((*0x4a95e4 & 1) == 0) {\n        *0x4a95e4 = *0x4a95e4 | 1;\n        fcn.0040bf10();\n        fcn.004114aa(0x426392);\n    }\n    *0x4a95e0 = 0;\n    *0x4a95dc = 0;\n    var_10h = 0x4a95c4;\n    var_ch = 0x4a95c4;\n    do {\n        while( true ) {\n            puVar8 = arg_8h[1];\n            ppuVar1 = *arg_ch;\n            var_14h = ppuVar1[1];\n            if (puVar8 != NULL) break;\n            if (var_14h == NULL) {\ncode_r0x00427376:\n                if (puVar8 == NULL) goto code_r0x004041ac;\n                goto code_r0x004041f6;\n            }\ncode_r0x00404247:\n            ppuVar2 = ppuVar1[6];\n            if (ppuVar2 == NULL) goto code_r0x00404287;\n            puVar6 = ppuVar2[1];\n            if (puVar6 < puVar8) {\n                puVar8 = puVar6;\n            }\n            if (puVar8 != NULL) {\n                puVar5 = *ppuVar2;\n                puVar7 = *arg_8h;\n                var_14h = puVar8;\n                do {\n                    if (*puVar7 != *puVar5) {\n                        if (*puVar5 <= *puVar7) goto code_r0x004042d8;\n                        goto code_r0x004042c0;\n                    }\n                    puVar7 = puVar7 + 1;\n                    puVar5 = puVar5 + 1;\n                    var_14h = var_14h + -1;\n                } while (var_14h != NULL);\n            }\n            if (puVar8 < puVar6) {\ncode_r0x004042c0:\n                puVar8 = ppuVar1[6];\n                *(*arg_ch + 0xc) = *(puVar8 + 0xe);\n                *(puVar8 + 0xe) = *arg_ch;\n                *arg_ch = puVar8;\n                if (*(puVar8 + 0xc) == 0) goto code_r0x00404287;\n            }\ncode_r0x004042d8:\n            *(var_10h + 0xc) = *arg_ch;\n            var_10h = *arg_ch;\n            *arg_ch = *(var_10h + 0xc);\n        }\n        if (var_14h == NULL) goto code_r0x00427376;\ncode_r0x004041ac:\n        if (puVar8 < var_14h) {\n            if (var_14h == NULL) {\ncode_r0x00427383:\n                iVar4 = 0;\n            }\n            else {\n                puVar6 = *ppuVar1;\n                for (var_8h = *arg_8h; *var_8h == *puVar6; var_8h = var_8h + 1) {\n                    var_14h = var_14h + -1;\n                    if (var_14h == NULL) goto code_r0x00427383;\n                    puVar6 = puVar6 + 1;\n                }\n                iVar4 = (-(*var_8h < *puVar6) & 0xfffffffe) + 1;\n            }\n        }\n        else {\n            if (puVar8 != NULL) {\n                puVar6 = *ppuVar1;\n                puVar5 = *arg_8h;\n                puVar7 = puVar8;\n                do {\n                    if (*puVar5 != *puVar6) {\n                        iVar4 = (-(*puVar5 < *puVar6) & 0xfffffffe) + 1;\n                        goto code_r0x004041ec;\n                    }\n                    puVar5 = puVar5 + 1;\n                    puVar6 = puVar6 + 1;\n                    puVar7 = puVar7 + -1;\n                } while (puVar7 != NULL);\n            }\n            iVar4 = 0;\n        }\ncode_r0x004041ec:\n        if (iVar4 < 0) goto code_r0x00404247;\n        if (iVar4 < 1) {\n            var_1h._0_1_ = 1;\ncode_r0x00404287:\n            *(var_ch + 0xe) = *(*arg_ch + 0xc);\n            *(var_10h + 0xc) = *(*arg_ch + 0xe);\n            uVar3 = *0x4a95e0;\n            *(*arg_ch + 0xc) = *0x4a95e0;\n            *(*arg_ch + 0xe) = *0x4a95dc;\n            return uVar3 & 0xffffff00 | var_1h;\n        }\ncode_r0x004041f6:\n        ppuVar2 = ppuVar1[7];\n        if (ppuVar2 == NULL) goto code_r0x00404287;\n        puVar6 = puVar8;\n        if (ppuVar2[1] <= puVar8) {\n            puVar6 = ppuVar2[1];\n        }\n        if (puVar6 != NULL) {\n            puVar5 = *arg_8h;\n            puVar7 = *ppuVar2;\n            var_14h = puVar6;\n            do {\n                if (*puVar7 != *puVar5) {\n                    if (*puVar5 <= *puVar7) goto code_r0x0040430d;\n                    goto code_r0x004042f1;\n                }\n                puVar7 = puVar7 + 1;\n                puVar5 = puVar5 + 1;\n                var_14h = var_14h + -1;\n            } while (var_14h != NULL);\n        }\n        if (puVar6 < puVar8) {\ncode_r0x004042f1:\n            puVar8 = ppuVar1[7];\n            *(*arg_ch + 0xe) = *(puVar8 + 0xc);\n            *(puVar8 + 0xc) = *arg_ch;\n            *arg_ch = puVar8;\n            if (*(puVar8 + 0xe) == 0) goto code_r0x00404287;\n        }\ncode_r0x0040430d:\n        *(var_ch + 0xe) = *arg_ch;\n        var_ch = *arg_ch;\n        *arg_ch = *(var_ch + 0xe);\n    } while( true );\n}\n",
        "token_count": 1713
    },
    "00409120": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409120(ulong *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong *unaff_EBX;\n    uint *puVar5;\n    uint *puVar6;\n    \n    if (unaff_EBX == arg_8h) {\n        return;\n    }\n    fcn.004091e0();\n    iVar3 = *(arg_8h + 1);\n    *(unaff_EBX + 1) = iVar3;\n    if (iVar3 == 1) {\n        *unaff_EBX = *arg_8h;\n        return;\n    }\n    if (0xb < iVar3 - 1U) {\n        return;\n    }\n    // switch table (12 cases) at 0x4091a8\n    switch(*((iVar3 - 1U) * 4 + 0x4091a8)) {\n    case 0x409158:\n        *unaff_EBX = *arg_8h;\n        return;\n    case 0x409164:\n        puVar2 = fcn.00411777(0x10);\n        if (puVar2 != NULL) {\n            puVar5 = *(arg_8h + 0xc);\n            *puVar2 = *puVar5;\n            puVar2[1] = puVar5[1];\n            puVar2[2] = puVar5[2];\n            piVar1 = puVar5[3];\n            puVar2[3] = piVar1;\n            *piVar1 = *piVar1 + 1;\n            *(unaff_EBX + 0xc) = puVar2;\n            return;\n        }\n        *(unaff_EBX + 0xc) = 0;\n        return;\n    case 0x428ce9:\n        *unaff_EBX = *arg_8h;\n        *(unaff_EBX + 4) = *(arg_8h + 4);\n        break;\n    case 0x428cf8:\n        *unaff_EBX = *arg_8h;\n        break;\n    case 0x428d01:\n        *unaff_EBX = *arg_8h;\n        break;\n    case 0x428d0a:\n        puVar2 = fcn.00411777(0x214);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            puVar5 = *arg_8h;\n            puVar6 = puVar2;\n            for (iVar3 = 0x85; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n        }\n        *unaff_EBX = puVar2;\n        if (puVar2[1] != 0) {\n            *puVar2[1] = *puVar2[1] + 1;\n        }\n        break;\n    case 0x428d40:\n        if (*arg_8h != 0) {\n            uVar4 = fcn.00411777(0x10);\n            *unaff_EBX = uVar4;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar4);\n            iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*unaff_EBX, *arg_8h);\n            if (iVar3 < 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*unaff_EBX);\n                fcn.0041137c(*unaff_EBX);\n                *unaff_EBX = 0;\n            }\n        }\n        break;\n    case 0x428d8f:\n        *unaff_EBX = *arg_8h;\n        break;\n    case 0x428d98:\n        iVar3 = fcn.00411777(0x18);\n        if (iVar3 != 0) {\n            uVar4 = fcn.0044b52a(iVar3, *arg_8h);\n            *unaff_EBX = uVar4;\n            return;\n        }\n        goto code_r0x00428db6;\n    case 0x428dbf:\n        puVar2 = fcn.00411777(8);\n        *unaff_EBX = puVar2;\n        *puVar2 = **arg_8h;\n        if (**unaff_EBX == 0) {\n            uVar4 = fcn.00411777(1);\n            *(*unaff_EBX + 4) = uVar4;\n            **(*unaff_EBX + 4) = 0;\n        }\n        else {\n            uVar4 = fcn.00411777(**unaff_EBX);\n            *(*unaff_EBX + 4) = uVar4;\n            fcn.00411000((*unaff_EBX)[1], *(*arg_8h + 4), **unaff_EBX);\n        }\n        break;\n    case 0x428e1c:\n        iVar3 = fcn.00411777(0x14);\n        if (iVar3 != 0) {\n            uVar4 = fcn.0046fa03(iVar3, *arg_8h);\n            *unaff_EBX = uVar4;\n            return;\n        }\ncode_r0x00428db6:\n        *unaff_EBX = 0;\n    }\n    return;\n}\n",
        "token_count": 1218
    },
    "004091e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004091e0(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    \n    puVar1 = unaff_ESI[3];\n    if (puVar1 != NULL) {\n        *puVar1[3] = *puVar1[3] + -1;\n        if (*puVar1[3] == 0) {\n            fcn.0041137c(*puVar1);\n            fcn.0041137c(puVar1[3]);\n        }\n        fcn.0041137c(puVar1);\n        unaff_ESI[3] = 0;\n    }\n    iVar2 = unaff_ESI[2];\n    if ((iVar2 == 8) && (*unaff_ESI != 0)) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*unaff_ESI);\n        fcn.0041137c(*unaff_ESI);\n    }\n    else if (iVar2 == 10) {\n        if (*unaff_ESI != 0) {\n            fcn.00443f54(*unaff_ESI);\n        }\n    }\n    else if (iVar2 == 5) {\n        fcn.0040e5e0();\n    }\n    else if (iVar2 == 0xb) {\n        fcn.0041137c(*(*unaff_ESI + 4));\n        fcn.0041137c(*unaff_ESI);\n    }\n    else if ((iVar2 == 0xc) && (*unaff_ESI != 0)) {\n        fcn.0044b04b(*unaff_ESI);\n    }\n    unaff_ESI[2] = 1;\n    *unaff_ESI = 0;\n    return;\n}\n",
        "token_count": 392
    },
    "00409260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409260(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint in_stack_ffffff94;\n    uint uVar7;\n    uint *puVar8;\n    uint arg_ch;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    puVar8 = ***(in_EAX + 4);\n    var_1ch = *puVar8;\n    var_18h = puVar8[1];\n    piVar6 = puVar8[3];\n    var_14h = puVar8[2];\n    *piVar6 = *piVar6 + 1;\n    var_8h = 1;\n    uVar4 = 0;\n    var_10h = piVar6;\n    if (*0x4a7f34 == 0) {\ncode_r0x0040929f:\n        cVar2 = fcn.00404150(&var_1ch, 0x4a7f24);\n        if ((cVar2 == '\\0') || (*0x4a7f24 == 0)) {\n            iVar3 = 0;\n            var_ch = uVar4;\n        }\n        else {\n            iVar3 = *(*0x4a7f24 + 0x14);\n            var_ch = *(*0x4a7f24 + 0x10) & 0xff00;\n        }\n    }\n    else {\n        puVar8 = &var_1ch;\n        arg_ch = 0x4a7f34;\n        var_ch = 0;\n        uVar7 = fcn.00432ecc(0x4a7f34);\n        iVar3 = fcn.00452f58(uVar7, arg_ch, puVar8);\n        uVar4 = var_ch;\n        if (iVar3 == 0) goto code_r0x0040929f;\n    }\n    if (iVar3 != 0) {\n        if ((var_ch & 0x100) != 0) {\n            var_ch = iVar3;\n            fcn.0045e1ee(arg_8h, 0xa3, *(**(in_EAX + 4) + 10));\n            fcn.00402260();\n            return;\n        }\n        iVar5 = *(*(in_EAX + 4) + var_8h * 4);\n        var_ch = iVar3;\n        if (*(iVar5 + 8) == 0x4e) {\n            if (*(iVar3 + 8) != 5) {\n                fcn.0045e1ee(arg_8h, 0x7c, *(iVar5 + 10));\n                fcn.00402260();\n                return;\n            }\n            iVar3 = fcn.0040c780(arg_8h, &var_ch, 0);\n            if (iVar3 != 0) {\n                fcn.00402260();\n                return;\n            }\n        }\n        iVar1 = *(*(*(in_EAX + 4) + var_8h * 4) + 8);\n        iVar3 = var_ch;\n        if (iVar1 == 0x35) {\n            if (*(var_ch + 8) != 8) {\n                iVar3 = fcn.00451712(arg_8h, 0xa9, 0, L\"Variable must be of type \\'Object\\'.\", 1);\n                if (iVar3 != 0) {\n                    fcn.0045e1ee(arg_8h, 0xa9, *(*(*(in_EAX + 4) + var_8h * 4) + 10));\n                }\n                fcn.00402260();\n                return;\n            }\n        }\n        else if (*(var_ch + 8) != 8) goto code_r0x0040931c;\n        if ((iVar1 == 0x35) || (iVar1 == 0x47)) {\n            iVar3 = fcn.0047e52b(arg_8h, in_EAX, &var_8h, var_ch);\n            if (iVar3 != 0) {\n                fcn.0045e1ee(arg_8h, 0xaa, *(*(*(in_EAX + 4) + var_8h * 4) + 10));\n            }\n            fcn.00402260();\n            return;\n        }\n    }\ncode_r0x0040931c:\n    var_ch = iVar3;\n    iVar3 = *(*(in_EAX + 4) + var_8h * 4);\n    iVar5 = *(iVar3 + 8);\n    if (((((iVar5 != 0x41) && (iVar5 != 0x52)) && (iVar5 != 0x53)) && ((iVar5 != 0x54 && (iVar5 != 0x55)))) &&\n       (iVar5 != 0x56)) {\n        fcn.0045e1ee(arg_8h, 0x80, *(iVar3 + 10));\n        fcn.00402260();\n        return;\n    }\n    var_8h = var_8h + 1;\n    var_2ch = 0;\n    var_24h = 1;\n    var_20h = 0;\n    iVar3 = fcn.0040aa20(in_EAX, &var_8h, &var_2ch, 0xffffffff);\n    if (iVar3 == 0) {\n        iVar3 = (*(in_EAX + 4))[var_8h];\n        if (*(iVar3 + 8) == 0x7f) {\n            if (var_ch != 0) {\n                if (iVar5 == 0x41) {\n                    fcn.00409120(&var_2ch);\n                }\n                else {\n    // switch table (5 cases) at 0x409430\n                    switch(iVar5) {\n                    case 0x52:\n                        fcn.0040b7b0(var_ch);\n                        break;\n                    case 0x53:\n                        fcn.004529ac(var_ch, &var_2ch);\n                        break;\n                    case 0x54:\n                        fcn.0040bda0(&var_2ch);\n                        break;\n                    case 0x55:\n                        fcn.0040be20();\n                        break;\n                    case 0x56:\n                        fcn.0040bfc0();\n                        piVar6 = var_10h;\n                    }\n                }\n                fcn.004091e0();\n                *piVar6 = *piVar6 + -1;\n                if (*piVar6 != 0) {\n                    return;\n                }\n                fcn.0041137c(var_1ch);\n                fcn.0041137c(piVar6);\n                return;\n            }\n            if ((*(arg_8h + 0xff) == '\\0') && (iVar5 == 0x41)) {\n                if (*0x4a7f34 == 0) {\n                    puVar8 = &var_2ch;\n                }\n                else {\n                    puVar8 = &var_2ch;\n                    in_stack_ffffff94 = 0x4a7f34;\n                    fcn.00432ecc(0x4a7f34);\n                }\n                fcn.004040c0(in_stack_ffffff94, puVar8);\n                fcn.004091e0();\n                piVar6 = var_10h;\n                *var_10h = *var_10h + -1;\n                if (*var_10h != 0) {\n                    return;\n                }\n                fcn.0041137c(var_1ch);\n                fcn.0041137c(piVar6);\n                return;\n            }\n            iVar1 = *(**(in_EAX + 4) + 10);\n            uVar7 = 0x79;\n        }\n        else {\n            iVar1 = *(iVar3 + 10);\n            uVar7 = 0x72;\n        }\n        fcn.0045e1ee(arg_8h, uVar7, iVar1);\n    }\n    fcn.004091e0();\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 1871
    },
    "00409450": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409450(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint arg_ch;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint arg_8h_00;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_74h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    ushort var_28h;\n    ushort var_26h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    if ((*0x4a7f18 != '\\0') && (*(arg_8h + 0x480) != '\\x01')) {\n        var_18h = 0;\n        var_54h = 0x4870e0;\n        var_50h = 0;\n        var_4ch = 0;\n        var_48h = 0;\n        var_44h = 0;\n        var_3ch = 1;\n        var_38h = 0;\n        fcn.0040bf10();\n        pcVar3 = _sym.imp.KERNEL32.dll_InterlockedIncrement;\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x4a7f04);\n        if (*0x4a7f04 != 1) {\n            iVar6 = 2;\n            do {\n                if (iVar6 == 0) {\n                    if (*0x4a7f04 != 1) goto code_r0x0042cd57;\n                    break;\n                }\n                (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x4a7f04);\n                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                (*pcVar3)(0x4a7f04);\n                iVar6 = iVar6 + -1;\n            } while (*0x4a7f04 != 1);\n        }\n        if (*0x4a7f08 != *0x4a7f0c) {\n            iVar6 = (*0x4a7f0c & 0x3f) * 0x10;\n            cVar5 = fcn.00432390(iVar6 + 0x4a9138);\n            if (cVar5 == '\\0') {\n                var_24h = iVar6 + 0x4a9138;\n                fcn.00409120(**(iVar6 + 0x4a913c));\n                fcn.00452e81(*(*(iVar6 + 0x4a913c) + 4));\n                fcn.00402170();\n                fcn.00452e81(*(*(iVar6 + 0x4a913c) + 8));\n                fcn.0040d510();\n                cVar5 = fcn.00464ac0(arg_8h, var_74h, &fcn.00409450::var_14h, &fcn.00409450::var_10h, \n                                     &fcn.00409450::var_1ch, &fcn.00409450::var_20h);\n                if (cVar5 != '\\0') {\n                    var_8h = 3;\ncode_r0x0042cd99:\n                    *(arg_8h + 0x480) = 1;\n                    fcn.00401c30();\n                    fcn.00432acf(&fcn.00409450::var_44h);\n                    fcn.00401990();\n                    fcn.00402260();\n                    var_ch = fcn.0040f5a0();\n                    if (0 < var_10h) {\n                        iVar6 = 3;\n                        while (uVar4 = var_8h,  var_8h < *(var_24h + 8)) {\n                            iVar8 = *(var_ch + 4);\n                            piVar2 = *(iVar8 + iVar6 * 4);\n                            iVar1 = *(piVar2 + 2);\n                            while (iVar1 == 0) {\n                                if (*piVar2 != 0x1e) {\n                                    fcn.0045e1ee(arg_8h, 0x91, 0xffffffff);\n                                    goto code_r0x0042ceb4;\n                                }\n                                piVar2 = *(iVar8 + 4 + iVar6 * 4);\n                                iVar6 = iVar6 + 1;\n                                iVar1 = *(piVar2 + 2);\n                            }\n                            iVar7 = iVar6 + 1;\n                            if (*(*(iVar8 + 4 + iVar6 * 4) + 8) == 0x41) {\n                                iVar7 = iVar6 + 3;\n                            }\n                            fcn.0040bcb0(*(*(var_24h + 4) + var_8h * 4));\n                            var_18h = var_18h + 1;\n                            if (var_10h <= var_18h) break;\n                            iVar6 = iVar7 + 1;\n                            var_8h = uVar4 + 1;\n                        }\n                    }\n                    iVar6 = var_ch;\n                    fcn.0046f6d5((*0x4a7f0c & 0x3f) * 0x10 + 0x4a9138);\n                    iVar8 = 1;\n                    *0x4a7f0c = *0x4a7f0c + 1;\n                    (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x4a7f04);\n                    fcn.0046f7aa(var_14h);\n                    if (0 < var_10h) {\n                        iVar7 = 0xc;\n                        var_8h = 0x18;\n                        var_1ch = var_50h;\n                        while( true ) {\n                            var_20h = iVar8;\n                            if (var_18h < iVar8) {\n                                var_24h = 0;\n                                var_26h = 0;\n                                var_64h = 0x484adc;\n                                var_60h = 0;\n                                var_5ch = 0;\n                                var_58h = 0;\n                                var_28h = 0xffff;\n                                if (*(*(iVar7 + 4 + *(iVar6 + 4)) + 8) == 0x41) {\n                                    iVar1 = *(*(iVar7 + 8 + *(iVar6 + 4)) + 8);\n                                    if ((iVar1 == 0x4a) || (iVar1 == 0x49)) {\n                                        fcn.00402a30();\n                                    }\n                                    fcn.00402a30();\n                                    fcn.004029c0();\n                                    fcn.00402a30();\n                                    fcn.0040aa20(&fcn.00409450::var_64h, &fcn.00409450::var_24h, &fcn.00409450::var_44h\n                                                 , 0xffffffff);\n                                    iVar8 = var_20h;\n                                }\n                                else {\n                                    fcn.004091e0();\n                                    var_3ch = 1;\n                                    var_44h = 0;\n                                }\n                                fcn.00401990();\n                                fcn.0044b0f0(&fcn.00409450::var_30h);\n                                fcn.0040ef20();\n                            }\n                            else {\n                                fcn.00401990();\n                            }\n                            if (*(*(iVar7 + 4 + *(var_ch + 4)) + 8) == 0x41) {\n                                iVar1 = *(*(iVar7 + 8 + *(var_ch + 4)) + 8);\n                                if ((iVar1 == 0x4a) || (iVar1 == 0x49)) {\n                                    iVar6 = 0x14;\n                                }\n                                else {\n                                    iVar6 = 0x10;\n                                }\n                            }\n                            else {\n                                iVar6 = 8;\n                            }\n                            var_8h = var_8h + iVar6;\n                            iVar8 = iVar8 + 1;\n                            iVar7 = iVar7 + iVar6;\n                            if (var_10h < iVar8) break;\n                            var_1ch = var_1ch + 4;\n                            iVar6 = var_ch;\n                        }\n                    }\n                    fcn.0047c1b0(arg_8h, var_14h + 1, 0, 0);\n                    fcn.0046f754(0x4a7f34);\n                    fcn.00401c30();\n                    fcn.0040c560(0x42d05a, &fcn.00409450::var_18h);\n                    fcn.00402260();\n                    if (((*0x4a7f18 != '\\0') && (cVar5 = fcn.004329dd(arg_8h),  cVar5 == '\\0')) && (*0x4a7f1c != 0)) {\n                        *(*0x4a7f1c + 0x40) = 0;\n                    }\n                    *(arg_8h + 0x480) = 0;\ncode_r0x0042ceb4:\n                    fcn.00402260();\n                    fcn.004091e0();\n                    fcn.00410e00();\n                    return 1;\n                }\n                arg_8h_00 = *(*(iVar6 + 0x4a913c) + 4);\n                arg_1ch = &fcn.00409450::var_1ch;\n                arg_18h = &fcn.00409450::var_10h;\n                arg_14h = &fcn.00409450::var_14h;\n                arg_ch = fcn.00452e81(arg_8h_00);\n                cVar5 = fcn.00464ac0(arg_8h, arg_ch, arg_8h_00, arg_14h, arg_18h, arg_1ch);\n                if (cVar5 != '\\0') {\n                    var_8h = 2;\n                    goto code_r0x0042cd99;\n                }\n                fcn.0046f6d5((*0x4a7f0c & 0x3f) * 0x10 + 0x4a9138);\n                *0x4a7f0c = *0x4a7f0c + 1;\n            }\n        }\ncode_r0x0042cd57:\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x4a7f04);\n        fcn.00402260();\n        fcn.004091e0();\n        fcn.00410e00();\n    }\n    return 0;\n}\n",
        "token_count": 2493
    },
    "00409940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00409940(int32_t *arg_8h, int32_t arg_ch, ulong *arg_10h, uchar *arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int16_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    int32_t *piVar5;\n    int16_t *piVar6;\n    ulong *puVar7;\n    ulong *puVar8;\n    char *pcVar9;\n    uint16_t *puVar10;\n    ushort *puVar11;\n    uint *puVar12;\n    ulong *puVar13;\n    uint16_t *puVar14;\n    int32_t iVar15;\n    uint uVar16;\n    int32_t *piVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    uint *extraout_ECX;\n    int16_t *piVar20;\n    char **ppcVar21;\n    uint16_t *puVar22;\n    int32_t **ppiVar23;\n    ulong *unaff_EBX;\n    ulong *puVar24;\n    int32_t *unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t **ppiVar25;\n    int32_t iVar26;\n    uint32_t uVar27;\n    int32_t *piVar28;\n    uint *puVar29;\n    int32_t *piVar30;\n    uint *puVar31;\n    int16_t unaff_retaddr;\n    int32_t *piVar32;\n    uint32_t uVar33;\n    ulong *arg_8h_00;\n    int32_t iVar34;\n    int32_t *in_stack_ffffff3c;\n    ulong *puVar35;\n    uint in_stack_ffffff44;\n    int32_t iStack184;\n    int16_t *piStack180;\n    uint32_t uStack176;\n    int32_t *piStack172;\n    uint32_t uStack168;\n    ulong *puStack164;\n    ulong *puStack160;\n    int32_t *piStack156;\n    uint32_t uStack152;\n    ulong *puStack148;\n    uint uStack144;\n    int16_t *piStack140;\n    ulong *puStack136;\n    ulong *puStack132;\n    ulong *puStack128;\n    ulong *puStack124;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint32_t uStack112;\n    char **ppcStack108;\n    ulong *puStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack64;\n    uint uStack60;\n    int32_t *piStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar auStack32 [4];\n    int32_t *piStack28;\n    int32_t iStack24;\n    uint32_t uStack20;\n    uint uStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    uVar16 = ***(*(arg_ch + 4) + *in_EAX * 4);\n    piStack180 = fcn.00411361(uVar16);\n    if (piStack180 == 0xffffffff) {\n        uStack176 = 8;\n    }\n    else {\n        uStack176 = piStack180 + 4 & 0xfffffff8;\n    }\n    piVar5 = fcn.00411777(-(uStack176 * 2 >> 0x20 != 0) | uStack176 * 2);\n    fcn.00411000(piVar5, uVar16, piStack180 * 2 + 2);\n    piStack172 = fcn.00411777(4);\n    if (piStack172 == NULL) {\n        piStack172 = NULL;\n    }\n    else {\n        *piStack172 = 1;\n    }\n    if (arg_8h[0x50] != 0) {\n        uVar16 = in_stack_ffffff44;\n        if (1 < *piStack172) {\n            *piStack172 = *piStack172 + -1;\n            fcn.004013a0();\n            piStack180 = fcn.00446220(piStack180 + 1);\n            uVar16 = fcn.00411777(-(ZEXT48(piStack180) * 2 >> 0x20 != 0) | ZEXT48(piStack180) * 2);\n            fcn.00411000(uVar16, in_stack_ffffff44, piVar5 * 2 + 2);\n        }\n        piVar32 = piVar5;\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar16);\n        iVar26 = arg_8h[0x4f];\n        if (iVar26 == 0) {\n            ppiVar25 = arg_8h[0x4d];\n            if (ppiVar25 != NULL) {\ncode_r0x00409a20:\n                piVar20 = ppiVar25[1];\n                if (piVar20 != piStack180) goto code_r0x0040a915;\n                if (piVar20 != NULL) {\n                    piVar6 = *ppiVar25;\n                    piVar17 = piVar5;\n                    while (*piVar6 == *piVar17) {\n                        piVar6 = piVar6 + 1;\n                        piVar17 = piVar17 + 2;\n                        piVar20 = piVar20 + -1;\n                        if (piVar20 == NULL) goto code_r0x00409a59;\n                    }\n                    goto code_r0x0040a915;\n                }\ncode_r0x00409a59:\n                *piStack172 = *piStack172 + -1;\n                if (*piStack172 == 0) {\n                    fcn.0041137c(piVar5);\n                    piVar32 = 0x409a78;\n                    fcn.0041137c(piStack172);\n                }\ncode_r0x00409a7b:\n                if (ppiVar25 == NULL) goto code_r0x00429e68;\n                piStack140 = ppiVar25[5];\n                puStack164 = ppiVar25[6];\n                piStack28 = ppiVar25[4];\n                iVar26 = *in_EAX;\n                ppcVar21 = *(*(*(arg_ch + 4) + iVar26 * 4) + 10);\n                iStack12 = arg_8h[0x52];\n                *in_EAX = iVar26 + 1;\n                iVar34 = 0;\n                puVar35 = 0x1;\n                piVar5 = NULL;\n                iStack184 = 0x4870e0;\n                uStack176 = 0;\n                piStack172 = NULL;\n                puStack136 = 0x48b6f0;\n                puStack132 = NULL;\n                puStack128 = NULL;\n                puStack124 = NULL;\n                if (*(*(*(arg_ch + 4) + (iVar26 + 1) * 4) + 8) != 0x47) {\n                    piVar32 = 0x6f;\n                    goto code_r0x0042b479;\n                }\n                puVar7 = iVar26 + 2;\n                arg_8h_00 = NULL;\n                iVar26 = 0;\n                puVar8 = puVar7;\n                do {\n                    while( true ) {\n                        *in_EAX = puVar8;\n                        iVar18 = *(*(*(arg_ch + 4) + puVar8 * 4) + 8);\n                        if (0x46 < iVar18) break;\ncode_r0x00409b29:\n                        puVar8 = puVar8 + 1;\n                    }\n                    if (iVar18 == 0x47) {\n                        iVar26 = iVar26 + 1;\n                        goto code_r0x00409b29;\n                    }\n                    uVar19 = iVar18 - 0x48;\n                    puStack148 = puVar7;\n                    ppcStack108 = ppcVar21;\n                    if (uVar19 != 0) {\n                        if (uVar19 == 0x37) {\n                            piVar32 = 0x6f;\n                            ppcVar21 = *(*(*(arg_ch + 4) + -4 + puVar8 * 4) + 10);\n                            goto code_r0x0042b479;\n                        }\n                        goto code_r0x00409b29;\n                    }\n                    if (iVar26 == 0) goto code_r0x00409b44;\n                    iVar26 = iVar26 + -1;\n                    puVar8 = puVar8 + 1;\n                } while( true );\n            }\n        }\n        else if (-1 < arg_8h[0x50] - 1U) {\n            piStack140 = NULL;\n            uStack120 = arg_8h[0x50] - 1U;\n            do {\n                iVar34 = (uStack120 + piStack140) / 2;\n                iVar18 = fcn.0040bf60();\n                if (iVar18 < 0) {\n                    uStack120 = iVar34 - 1;\n                }\n                else {\n                    if (iVar18 < 1) {\n                        if (piStack140 <= uStack120) {\n                            ppiVar25 = *(iVar26 + iVar34 * 4);\n                            fcn.00402260();\n                            goto code_r0x00409a7b;\n                        }\n                        break;\n                    }\n                    piStack140 = iVar34 + 1;\n                }\n            } while (piStack140 <= uStack120);\n        }\n    }\ncode_r0x00429e5f:\n    fcn.00402260();\ncode_r0x00429e68:\n    uVar16 = fcn.0047c7a1(arg_8h, arg_ch, in_EAX, arg_10h);\n    return uVar16;\ncode_r0x0040a915:\n    ppiVar25 = ppiVar25[8];\n    if (ppiVar25 == NULL) goto code_r0x00429e5f;\n    goto code_r0x00409a20;\ncode_r0x00409b44:\n    *in_EAX = puVar8 + 1;\n    uStack152 = uVar19;\n    if ((piStack28 <= *0x4a90f8) && (0 < piStack28)) {\n        uStack152 = piStack28 * 0x10 + *0x4a912c;\n    }\n    uStack120 = uVar19;\n    if (0 < piStack140) {\n        uVar33 = 3;\n        uStack112 = uVar19;\ncode_r0x00409b90:\n        puVar13 = puStack128;\n        if (puVar8 <= puVar7) goto code_r0x00409d42;\n        uStack120 = uStack120 + 1;\n        ppiVar23 = *(uStack152 + 4) + uVar33 * 4;\n        bVar3 = false;\n        cVar4 = '\\0';\n        iVar2 = *(*ppiVar23 + 2);\n        while (iVar2 == 0) {\n            if (**ppiVar23 == 0x24) {\n                cVar4 = '\\x01';\n            }\n            else {\n                if (**ppiVar23 != 0x1e) {\n                    ppcVar21 = 0xffffffff;\n                    goto code_r0x0042b479;\n                }\n                bVar3 = true;\n            }\n            ppiVar1 = ppiVar23 + 1;\n            uVar33 = uVar33 + 1;\n            ppiVar23 = ppiVar23 + 1;\n            iVar2 = *(*ppiVar1 + 2);\n        }\n        if (*(*(*(arg_ch + 4) + puVar7 * 4) + 8) != 0x33) {\n            cVar4 = '\\0';\n        }\n        puVar24 = arg_8h_00;\n        if (puStack128 == puStack124) {\n            puStack124 = puStack124 * 2;\n            if (puStack124 < 0x4) {\n                puStack124 = 0x4;\n            }\n            puStack160 = fcn.00411777(-(ZEXT48(puStack124) * 4 >> 0x20 != 0) | ZEXT48(puStack124) * 4);\n            fcn.00411000(puStack160, puStack132, puVar13 * 4);\n            fcn.0041137c(puStack132);\n            puStack132 = puStack160;\n            puVar24 = arg_8h_00;\n        }\n        pcVar9 = fcn.00411777(1);\n        if (pcVar9 == NULL) {\n            pcVar9 = NULL;\n        }\n        else {\n            *pcVar9 = cVar4;\n        }\n        *(puStack132 + puVar13 * 4) = pcVar9;\n        puStack128 = puVar13 + 1;\n        if (cVar4 != '\\0') {\n            if (*(*(*(arg_ch + 4) + puStack148 * 4) + 8) == 0x33) {\n                ppcVar21 = &stack0xffffff30;\n                piVar32 = &stack0xffffff34;\n                cVar4 = fcn.0040c560(piVar32, ppcVar21);\n                if ((cVar4 != '\\0') && (((uVar33 & 0x100) == 0 || (bVar3)))) {\n                    piStack156 = piStack156 + 1;\n                    puVar24 = unaff_EBX + 1;\n                    if ((*(puVar8 + 1) == 5) &&\n                       ((*(*(*(arg_ch + 4) + piStack156 * 4) + 8) == 0x4e &&\n                        (piVar32 = arg_8h,  iVar26 = fcn.0040c780(arg_8h, &stack0xffffff2c, 0),  iVar26 != 0)))) {\n                        fcn.004091e0();\n                        fcn.00441954();\n                        fcn.00410e00();\n                        return 1;\n                    }\n                    fcn.004091e0();\n                    iVar34 = 6;\n                    arg_8h_00 = puVar8;\n                    fcn.0040bcb0(&stack0xffffff30);\n                    unaff_EBX = puVar24;\n                    goto code_r0x00409ce4;\n                }\n            }\n            else {\n                piVar32 = 0x91;\n                ppcVar21 = *(*(*(arg_ch + 4) + puStack148 * 4) + 10);\n            }\ncode_r0x0042b479:\n            fcn.0045e1ee(arg_8h, piVar32, ppcVar21);\ncode_r0x0042b47e:\n            fcn.004091e0();\n            fcn.00441954();\n            fcn.00410e00();\n            return 1;\n        }\n        piVar17 = unaff_ESI;\n        piVar32 = piVar5;\n        if (piVar5 != NULL) {\n            fcn.00442ef7(piVar5);\n            puVar35 = NULL;\n            piVar17 = piVar5;\n        }\n        if (piVar32 == 0x8) {\n            if (in_stack_ffffff3c != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(in_stack_ffffff3c);\n                fcn.0041137c(in_stack_ffffff3c);\n            }\n        }\n        else if (piVar32 == 0xa) {\n            if (in_stack_ffffff3c != NULL) {\n                fcn.00443f54(in_stack_ffffff3c);\n                piVar17 = in_stack_ffffff3c;\n            }\n        }\n        else if (piVar32 == 0x5) {\n            fcn.0040e5e0();\n        }\n        else if (piVar32 == 0xb) {\n            fcn.0041137c(in_stack_ffffff3c[1]);\n            fcn.0041137c(in_stack_ffffff3c);\n        }\n        else if ((piVar32 == 0xc) && (in_stack_ffffff3c != NULL)) {\n            fcn.0044b04b(in_stack_ffffff3c);\n            piVar17 = in_stack_ffffff3c;\n        }\n        uVar19 = piStack172;\n        piVar5 = 0x1;\n        in_stack_ffffff3c = NULL;\n        if (piStack172 == uStack168) {\n            uStack168 = uStack168 * 2;\n            if (uStack168 < 4) {\n                uStack168 = 4;\n            }\n            iVar18 = fcn.00411777(-(uStack168 * 4 >> 0x20 != 0) | uStack168 * 4);\n            iVar26 = uStack176;\n            fcn.00411000(iVar18, uStack176, uVar19 * 4);\n            fcn.0041137c(iVar26);\n            uStack176 = iVar18;\n        }\n        iVar26 = uStack176;\n        puVar7 = fcn.00411777(0x10);\n        if (puVar7 == NULL) {\n            puVar7 = NULL;\n            uVar27 = uVar19;\n            iVar18 = iVar26;\n        }\n        else {\n            *(puVar7 + 1) = piVar5;\n            *(puVar7 + 0xc) = NULL;\n            uVar27 = piStack172;\n            iVar18 = uStack176;\n            if (piVar5 - 1U < 0xc) {\n    // switch table (12 cases) at 0x42b4a3\n                switch(piVar5) {\n                case 0x2:\n                    *puVar7 = in_stack_ffffff3c;\n                    *(puVar7 + 4) = puVar35;\n                    uVar27 = uVar19;\n                    iVar18 = iVar26;\n                    break;\n                case 0x3:\n                    *puVar7 = CONCAT44(puVar35, in_stack_ffffff3c);\n                    uVar27 = uVar19;\n                    iVar18 = iVar26;\n                    break;\n                case 0x4:\n                    piVar32 = fcn.00411777(0x10);\n                    if (piVar32 == NULL) {\n                        *(puVar7 + 0xc) = NULL;\n                        uVar27 = uVar19;\n                        iVar18 = iVar26;\n                    }\n                    else {\n                        *piVar32 = *0x4870e0;\n                        piVar32[1] = *0x4870e4;\n                        piVar32[2] = *0x4870e8;\n                        piVar28 = *0x4870ec;\n                        piVar32[3] = *0x4870ec;\n                        *piVar28 = *piVar28 + 1;\n                        *(puVar7 + 0xc) = piVar32;\n                        uVar27 = uVar19;\n                        iVar18 = iVar26;\n                    }\n                    break;\n                case 0x5:\n                    piVar32 = fcn.00411777(0x214);\n                    if (piVar32 == NULL) {\n                        piVar32 = NULL;\n                    }\n                    else {\n                        piVar28 = in_stack_ffffff3c;\n                        piVar30 = piVar32;\n                        for (iVar26 = 0x85; iVar26 != 0; iVar26 = iVar26 + -1) {\n                            *piVar30 = *piVar28;\n                            piVar28 = piVar28 + 1;\n                            piVar30 = piVar30 + 1;\n                        }\n                    }\n                    *puVar7 = piVar32;\n                    uVar27 = piStack172;\n                    iVar18 = uStack176;\n                    if (piVar32[1] != 0) {\n                        *piVar32[1] = *piVar32[1] + 1;\n                    }\n                    break;\n                default:\n                    *puVar7 = in_stack_ffffff3c;\n                    uVar27 = uVar19;\n                    iVar18 = iVar26;\n                    break;\n                case 0x7:\n                    *puVar7 = in_stack_ffffff3c;\n                    uVar27 = uVar19;\n                    iVar18 = iVar26;\n                    break;\n                case 0x8:\n                    if (in_stack_ffffff3c != NULL) {\n                        piVar32 = fcn.00411777(0x10);\n                        *puVar7 = piVar32;\n                        (*_sym.imp.OLEAUT32.dll_VariantClear)(piVar32);\n                        iVar15 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*puVar7, iVar34);\n                        uVar27 = uVar19;\n                        iVar18 = iVar26;\n                        if (iVar15 < 0) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*puVar7);\n                            fcn.0041137c(*puVar7);\n                            *puVar7 = NULL;\n                        }\n                    }\n                    break;\n                case 0x9:\n                    *puVar7 = in_stack_ffffff3c;\n                    uVar27 = uVar19;\n                    iVar18 = iVar26;\n                    break;\n                case 0xa:\n                    iVar18 = fcn.00411777(0x18);\n                    if (iVar18 == 0) {\ncode_r0x0042a1f0:\n                        *puVar7 = NULL;\n                        uVar27 = uVar19;\n                        iVar18 = iVar26;\n                    }\n                    else {\n                        piVar32 = fcn.0044b52a(iVar18, in_stack_ffffff3c);\n                        *puVar7 = piVar32;\n                        uVar27 = uVar19;\n                        iVar18 = iVar26;\n                    }\n                    break;\n                case 0xb:\n                    piVar32 = fcn.00411777(8);\n                    *puVar7 = piVar32;\n                    *piVar32 = *in_stack_ffffff3c;\n                    if (**puVar7 == 0) {\n                        iVar18 = fcn.00411777(1);\n                        (*puVar7)[1] = iVar18;\n                        *(*puVar7)[1] = 0;\n                        uVar27 = uVar19;\n                        iVar18 = iVar26;\n                    }\n                    else {\n                        iVar18 = fcn.00411777(**puVar7);\n                        (*puVar7)[1] = iVar18;\n                        fcn.00411000((*puVar7)[1], in_stack_ffffff3c[1], **puVar7);\n                        uVar27 = uVar19;\n                        iVar18 = iVar26;\n                    }\n                    break;\n                case 0xc:\n                    iVar18 = fcn.00411777(0x14);\n                    if (iVar18 == 0) goto code_r0x0042a1f0;\n                    piVar32 = fcn.0046fa03(iVar18, in_stack_ffffff3c);\n                    *puVar7 = piVar32;\n                    uVar27 = uVar19;\n                    iVar18 = iVar26;\n                }\n            }\n        }\n        *(iVar18 + uVar27 * 4) = puVar7;\n        piStack172 = uVar27 + 1;\n        ppcVar21 = *(iVar18 + -4 + piStack172 * 4);\n        piVar32 = &stack0xffffff70;\n        arg_8h_00 = puVar24;\n        iVar26 = fcn.0040aa20(arg_ch, piVar32, ppcVar21, puVar24);\n        if (iVar26 != 0) goto code_r0x0042b47e;\n        unaff_ESI = piVar17 + 1;\n        if (*(*(*(puStack164 + 4) + 4 + piVar17 * 4) + 8) == 0x41) {\n            unaff_ESI = piVar17 + 3;\n        }\ncode_r0x00409ce4:\n        puVar7 = puStack160;\n        if (puStack160 != puVar24) {\n            if ((*(*(*(arg_ch + 4) + puStack160 * 4) + 8) != 0x40) || (puVar7 = puStack160 + 1,  puVar7 == unaff_EBX))\n            goto code_r0x0042b479;\n            if (*(*(*(puStack164 + 4) + unaff_ESI * 4) + 8) == 0x40) {\n                unaff_ESI = unaff_ESI + 1;\n            }\n            puStack124 = puStack124 + 1;\n            puStack160 = puVar7;\n            if (uStack152 <= puStack124) goto code_r0x00409d42;\n            goto code_r0x00409b90;\n        }\n    }\ncode_r0x00409d42:\n    piVar5 = piStack28;\n    ppcVar21 = ppcStack108;\n    if (((uStack120 < puStack164) || (piStack140 < uStack120)) || (puVar7 != puVar8)) goto code_r0x0042b479;\n    puStack160 = NULL;\n    piStack156 = piStack28;\n    if (piStack28 < 0) {\n        piStack156 = NULL;\n    }\n    if (*0x4a7f3d == '\\0') {\n        puVar7 = fcn.00411777(0xc);\n        if (puVar7 == NULL) {\n            puVar7 = NULL;\n        }\n        else {\n            *puVar7 = 0;\n            *(puVar7 + 4) = piStack156;\n            if (piStack156 < 0) {\n                *(puVar7 + 4) = 0;\n            }\n            if (puStack160 == NULL) {\n                *puVar7 = 0;\n            }\n            else {\n                iVar26 = fcn.00411777(0x20);\n                if (iVar26 == 0) {\n                    uVar16 = 0;\n                }\n                else {\n                    uVar16 = fcn.0044b08e(iVar26);\n                }\n                *puVar7 = uVar16;\n                puVar35 = puStack164;\n                fcn.0040e410(puStack164);\n                uVar19 = uStack168;\n                *(*puVar7 + 0x10) = *(uStack168 + 0x10);\n                *(*puVar7 + 0x14) = *(uStack168 + 0x14);\n                *(*puVar7 + 0x18) = 0;\n                *(*puVar7 + 0x1c) = 0;\n                in_stack_ffffff3c = *(uStack168 + 0x18);\n                iVar34 = *puVar7 + 0x18;\n                fcn.00452eb8(iVar34, in_stack_ffffff3c);\n                arg_8h_00 = *puVar7 + 0x1c;\n                fcn.00452eb8(arg_8h_00, *(uVar19 + 0x1c));\n            }\n        }\n        *(puVar7 + 1) = *0x4a7f38;\n        *0x4a7f38 = puVar7;\n    }\n    else {\n        **0x4a7f38 = 0;\n        *(*0x4a7f38 + 4) = piStack156;\n        *0x4a7f3d = '\\0';\n    }\n    puVar7 = puStack136;\n    *0x4a7f34 = *0x4a7f34 + 1;\n    if (puStack136 != NULL) {\n        if (*(puStack136 + 3) != 0) {\n            fcn.0040b6a0(*(puStack136 + 3));\n        }\n        if (*(puVar7 + 0x1c) != 0) {\n            fcn.0040b6a0(*(puVar7 + 0x1c));\n        }\n        if ((*(puVar7 + 2) == '\\0') && (*(puVar7 + 0x14) != 0)) {\n            fcn.0040e530(1);\n        }\n        fcn.00442ef7(puVar7);\n        arg_8h_00 = puVar7;\n    }\n    if (iStack116 < 1) goto code_r0x0040a279;\n    iStack88 = 1;\n    piVar5 = unaff_EBP;\ncode_r0x00409e00:\n    iVar26 = *(puStack128 + 4);\n    uStack20 = 0x484adc;\n    uStack16 = 0;\n    iStack12 = 0;\n    iStack8 = 0;\n    uStack84 = 0;\n    ppiVar23 = iVar26 + puVar35 * 4;\n    uVar19 = 0;\n    iVar2 = *(*(iVar26 + puVar35 * 4) + 8);\n    puVar7 = puVar35;\n    while (iVar2 == 0) {\n        if (**ppiVar23 == 0x24) {\ncode_r0x0042a411:\n            puVar7 = puVar7 + 1;\n            ppiVar23 = ppiVar23 + 1;\n        }\n        else if (**ppiVar23 == 0x1e) {\n            uVar19 = 0x100;\n            goto code_r0x0042a411;\n        }\n        iVar2 = *(*ppiVar23 + 2);\n    }\n    if (iStack96 < iStack88) {\n        puVar35 = puVar7;\n        fcn.0040d7d0();\n        uStack84 = 0;\n        iVar2 = *(*(*(puStack128 + 4) + 8 + puVar7 * 4) + 8);\n        if ((iVar2 == 0x4a) || (puVar7 = puVar35,  iVar2 == 0x49)) {\n            fcn.00402a30();\n            puVar7 = puVar35;\n        }\n        fcn.00402a30();\n        fcn.004029c0();\n        fcn.00402a30();\n        fcn.0040aa20(&stack0xffffffec, &stack0xffffffac, &stack0xffffff50, 0xffffffff);\n        uStack152 = arg_8h_00 * 4;\n        fcn.00401990();\n        goto code_r0x0040a1f6;\n    }\n    uVar33 = uVar19 | 0x200;\n    if (**ppcStack108 != '\\0') {\n        iVar26 = *piStack156;\n        puVar35 = puVar7;\n        uVar16 = fcn.00432acf(iVar26);\n        cVar4 = fcn.0045efbf(*extraout_ECX, uVar16, iVar26, uVar33);\n        if (cVar4 == '\\0') {\n            fcn.0045e1ee(arg_8h, 0x79, *(*(*(puStack148 + 4) + puVar7 * 4) + 10));\n            fcn.0044b0f0(&stack0xffffffe0);\n            fcn.0040ef20();\n            goto code_r0x0042b47e;\n        }\n        goto code_r0x0040a215;\n    }\n    iVar18 = *piStack156;\n    puStack136 = puVar7 * 4;\n    puVar35 = **(puStack136 + iVar26);\n    if (*0x4a7f34 == 0) {\n        fcn.004040c0(iVar18, uVar33);\n        goto code_r0x0040a1f6;\n    }\n    puVar8 = *0x4a7f38;\n    if (*0x4a7f3d != '\\0') {\n        puVar8 = *(*0x4a7f38 + 1);\n    }\n    iStack184 = iVar18;\n    if (*puVar8 != 0) {\n        uStack144 = uStack144 & 0xffffff;\n        puVar13 = puVar8;\n        if ((*0x4a95e4 & 1) == 0) {\n            *0x4a95e4 = *0x4a95e4 | 1;\n            fcn.0044b08e(0x4a95c4);\n            fcn.004114aa(0x426392);\n        }\n        *0x4a95e0 = 0;\n        *0x4a95dc = 0;\n        uStack120 = 0x4a95c4;\n        iStack92 = 0x4a95c4;\ncode_r0x00409ef6:\n        while( true ) {\n            puVar22 = *(puVar35 + 4);\n            puVar14 = (*puVar8)[1];\n            if (puVar22 != NULL) break;\n            if (puVar14 == NULL) {\ncode_r0x0042a56e:\n                if (puVar22 == NULL) goto code_r0x00409f0e;\n                goto code_r0x00409f57;\n            }\ncode_r0x0042a59c:\n            if (*(*puVar8 + 0x18) == 0) goto code_r0x00409f64;\n            cVar4 = fcn.00442f15(puVar35, *(*puVar8 + 0x18));\n            if (cVar4 != '\\0') {\n                iVar26 = *(*puVar8 + 0x18);\n                *(*puVar8 + 0x18) = *(iVar26 + 0x1c);\n                *(iVar26 + 0x1c) = *puVar8;\n                *puVar8 = iVar26;\n                if (*(iVar26 + 0x18) == 0) goto code_r0x00409f64;\n            }\n            *(uStack120 + 0x18) = *puVar8;\n            uStack120 = *puVar8;\n            *puVar8 = *(uStack120 + 0x18);\n        }\n        if (puVar14 == NULL) goto code_r0x0042a56e;\ncode_r0x00409f0e:\n        if (puVar22 < puVar14) {\n            iVar26 = fcn.0040d430();\n        }\n        else {\n            if (puVar22 != NULL) {\n                puVar14 = **puVar8;\n                puVar10 = *puVar35;\n                do {\n                    puVar8 = puVar13;\n                    if (*puVar10 != *puVar14) {\n                        if (*puVar10 < *puVar14) {\n                            iVar26 = -1;\n                        }\n                        else {\n                            iVar26 = 1;\n                        }\n                        goto code_r0x00409f49;\n                    }\n                    puVar10 = puVar10 + 1;\n                    puVar14 = puVar14 + 1;\n                    puVar22 = puVar22 + -1;\n                } while (puVar22 != NULL);\n            }\n            iVar26 = 0;\n        }\ncode_r0x00409f49:\n        if (iVar26 < 0) goto code_r0x0042a59c;\n        if (0 < iVar26) {\ncode_r0x00409f57:\n            if (*(*puVar8 + 0x1c) == 0) goto code_r0x00409f64;\n            cVar4 = fcn.00442f15(*(*puVar8 + 0x1c), puVar35);\n            if (cVar4 != '\\0') {\n                iVar26 = *(*puVar8 + 0x1c);\n                *(*puVar8 + 0x1c) = *(iVar26 + 0x18);\n                *(iVar26 + 0x18) = *puVar8;\n                *puVar8 = iVar26;\n                if (*(iVar26 + 0x1c) == 0) goto code_r0x00409f64;\n            }\n            *(iStack92 + 0x1c) = *puVar8;\n            iStack92 = *puVar8;\n            *puVar8 = *(iStack92 + 0x1c);\n            goto code_r0x00409ef6;\n        }\n        uStack144 = CONCAT13(1, uStack144);\ncode_r0x00409f64:\n        *(iStack92 + 0x1c) = *(*puVar8 + 0x18);\n        *(uStack120 + 0x18) = *(*puVar8 + 0x1c);\n        *(*puVar8 + 0x18) = *0x4a95e0;\n        *(*puVar8 + 0x1c) = *0x4a95dc;\n        if ((uStack144._3_1_ != '\\0') && (*puVar8 != 0)) {\n            fcn.00409120(0x42a658);\n            goto code_r0x0040a1f6;\n        }\n    }\n    piStack140 = uVar19 | 0x200;\n    puVar8 = fcn.00411777(0x20);\n    if (puVar8 == NULL) {\n        puVar8 = NULL;\n    }\n    else {\n        *(puVar8 + 1) = 8;\n        *(puVar8 + 4) = 0;\n        puVar11 = fcn.00411777(0x10);\n        *puVar8 = puVar11;\n        *puVar11 = 0;\n        puVar12 = fcn.00411777(4);\n        if (puVar12 == NULL) {\n            puVar12 = NULL;\n        }\n        else {\n            *puVar12 = 1;\n        }\n        *(puVar8 + 0xc) = puVar12;\n    }\n    if (puVar8 != puVar35) {\n        piVar32 = *(puVar8 + 0xc);\n        if (*piVar32 < 2) {\n            iVar26 = *(puVar35 + 4);\n            *(puVar8 + 4) = iVar26;\n            if (*(puVar8 + 1) < iVar26 + 1U) {\n                uVar16 = fcn.00446220(0x42a690);\n                *(puVar8 + 1) = uVar16;\n                if (*puVar8 != 0) {\n                    fcn.0041137c(*puVar8);\n                }\n                iVar18 = fcn.00411777(-(*(puVar8 + 1) * 2 >> 0x20 != 0) | *(puVar8 + 1) * 2);\n                *puVar8 = iVar18;\n                *(iVar18 + iVar26 * 2) = 0;\n            }\n            fcn.00411000(*puVar8, *puVar35, *(puVar8 + 4) * 2 + 2);\n        }\n        else {\n            *piVar32 = *piVar32 + -1;\n            *(puVar8 + 4) = *(puVar35 + 4);\n            *(puVar8 + 1) = *(puVar35 + 1);\n            *puVar8 = *puVar35;\n            piVar32 = *(puVar35 + 0xc);\n            *(puVar8 + 0xc) = piVar32;\n            *piVar32 = *piVar32 + 1;\n        }\n    }\n    *(puVar8 + 2) = puStack148;\n    puVar13 = fcn.00411777(0x10);\n    puVar35 = NULL;\n    if (puVar13 == NULL) goto code_r0x0040a0ab;\n    uVar16 = *(puVar7 + 1);\n    *(puVar13 + 1) = uVar16;\n    *(puVar13 + 0xc) = 0;\n    puVar35 = puVar13;\n    puStack128 = puVar13;\n    puVar24 = puVar7;\n    // switch table (12 cases) at 0x40a9e4\n    switch(uVar16) {\n    case 1:\n    case 7:\n        uVar16 = *puVar7;\n        goto code_r0x0040a90a;\n    case 2:\n        *puVar13 = *puVar7;\n        *(puVar13 + 4) = *(puVar7 + 4);\n        break;\n    case 3:\n        *puVar13 = *puVar7;\n        break;\n    case 4:\n        puVar12 = fcn.00411777(0x10);\n        if (puVar12 == NULL) {\n            puVar12 = NULL;\n        }\n        else {\n            puVar29 = *(puVar7 + 0xc);\n            *puVar12 = *puVar29;\n            puVar12[1] = puVar29[1];\n            puVar12[2] = puVar29[2];\n            piVar32 = puVar29[3];\n            puVar12[3] = piVar32;\n            *piVar32 = *piVar32 + 1;\n        }\n        *(puVar13 + 0xc) = puVar12;\n        puVar35 = puStack128;\n        puVar7 = puVar24;\n        break;\n    case 5:\n        puVar12 = fcn.00411777(0x214);\n        if (puVar12 == NULL) {\n            puVar12 = NULL;\n        }\n        else {\n            puVar29 = *puVar7;\n            puVar31 = puVar12;\n            for (iVar26 = 0x85; iVar26 != 0; iVar26 = iVar26 + -1) {\n                *puVar31 = *puVar29;\n                puVar29 = puVar29 + 1;\n                puVar31 = puVar31 + 1;\n            }\n        }\n        *puStack128 = puVar12;\n        puVar35 = puStack128;\n        if (puVar12[1] != 0) {\n            *puVar12[1] = *puVar12[1] + 1;\n        }\n        break;\n    case 6:\n        *puVar13 = *puVar7;\n        break;\n    case 8:\n        if (*puVar7 != 0) {\n            uVar16 = fcn.00411777(0x10);\n            *puVar13 = uVar16;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar16);\n            iVar26 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*puVar13, *puVar7);\n            puVar35 = puStack128;\n            puVar7 = puVar24;\n            if (iVar26 < 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*puVar13);\n                fcn.0041137c(*puVar13);\n                *puVar13 = 0;\n                puVar35 = puStack128;\n                puVar7 = puVar24;\n            }\n        }\n        break;\n    case 9:\n        *puVar13 = *puVar7;\n        break;\n    case 10:\n        iVar26 = fcn.00411777(0x18);\n        if (iVar26 == 0) {\ncode_r0x0042a837:\n            uVar16 = 0;\n            puVar7 = puVar24;\n        }\n        else {\n            uVar16 = fcn.0044b52a(iVar26, *puVar7);\n            puVar7 = puVar24;\n        }\n        goto code_r0x0040a90a;\n    case 0xb:\n        puVar12 = fcn.00411777(8);\n        *puVar13 = puVar12;\n        *puVar12 = **puVar7;\n        if (**puVar13 == 0) {\n            uVar16 = fcn.00411777(1);\n            *(*puVar13 + 4) = uVar16;\n            **(*puVar13 + 4) = 0;\n            puVar35 = puStack128;\n            puVar7 = puVar24;\n        }\n        else {\n            uVar16 = fcn.00411777(**puVar13);\n            *(*puVar13 + 4) = uVar16;\n            fcn.00411000((*puVar13)[1], *(*puVar7 + 4), **puVar13);\n            puVar35 = puStack128;\n            puVar7 = puVar24;\n        }\n        break;\n    case 0xc:\n        iVar26 = fcn.00411777(0x14);\n        if (iVar26 == 0) goto code_r0x0042a837;\n        uVar16 = fcn.0046fa03(iVar26, *puVar7);\n        puVar7 = puVar24;\ncode_r0x0040a90a:\n        *puVar13 = uVar16;\n        puVar35 = puStack128;\n    }\ncode_r0x0040a0ab:\n    *(puVar8 + 0x14) = puVar35;\n    *(puVar8 + 0x1c) = 0;\n    *(puVar8 + 3) = 0;\n    puVar35 = *in_stack_ffffff3c;\n    if (puVar35 != NULL) {\n        if ((*0x4a95e4 & 1) == 0) {\n            *0x4a95e4 = *0x4a95e4 | 1;\n            fcn.0044b08e(0x4a95c4);\n            fcn.004114aa(0x426392);\n        }\n        *0x4a95e0 = 0;\n        *0x4a95dc = 0;\n        puStack100 = 0x4a95c4;\n        puStack128 = 0x4a95c4;\n        do {\n            while( true ) {\n                uVar19 = *(puVar8 + 4);\n                uVar33 = *(puVar35 + 4);\n                if (uVar19 != 0) break;\n                if (uVar33 == 0) {\ncode_r0x0042a869:\n                    if (uVar19 == 0) goto code_r0x0040a106;\n                    goto code_r0x0040a14d;\n                }\ncode_r0x0042a897:\n                puVar7 = puVar35 + 3;\n                puVar13 = *puVar7;\n                if (puVar13 == NULL) goto code_r0x0040a15e;\n                puStack148 = puVar13;\n                cVar4 = fcn.00442f15(puVar8, puVar13);\n                puVar13 = puVar35;\n                if (cVar4 != '\\0') {\n                    *puVar7 = *(puStack148 + 0x1c);\n                    *(puStack148 + 0x1c) = puVar35;\n                    puVar35 = puStack148;\n                    if (*(puStack148 + 3) == 0) goto code_r0x0040a15e;\n                    puVar7 = puStack148 + 3;\n                    puVar13 = puStack148;\n                }\n                *(puStack100 + 3) = puVar13;\n                puVar35 = *puVar7;\n                puStack100 = puVar13;\n            }\n            if (uVar33 == 0) goto code_r0x0042a869;\ncode_r0x0040a106:\n            if (uVar19 < uVar33) {\n                iVar26 = fcn.0040d430();\n            }\n            else {\n                if (uVar19 != 0) {\n                    puVar22 = *puVar35;\n                    puVar14 = *puVar8;\n                    do {\n                        if (*puVar14 != *puVar22) {\n                            if (*puVar14 < *puVar22) {\n                                iVar26 = -1;\n                            }\n                            else {\n                                iVar26 = 1;\n                            }\n                            goto code_r0x0040a143;\n                        }\n                        puVar14 = puVar14 + 1;\n                        puVar22 = puVar22 + 1;\n                        uVar19 = uVar19 - 1;\n                    } while (uVar19 != 0);\n                }\n                iVar26 = 0;\n            }\ncode_r0x0040a143:\n            if (iVar26 < 0) goto code_r0x0042a897;\n            if (iVar26 < 1) goto code_r0x0040a15e;\ncode_r0x0040a14d:\n            puVar7 = puVar35 + 0x1c;\n            puVar13 = *puVar7;\n            if (puVar13 == NULL) goto code_r0x0040a15e;\n            puStack148 = puVar13;\n            cVar4 = fcn.00442f15(puVar13, puVar8);\n            puVar13 = puVar35;\n            if (cVar4 != '\\0') {\n                *puVar7 = *(puStack148 + 3);\n                *(puStack148 + 3) = puVar35;\n                puVar35 = puStack148;\n                if (*(puStack148 + 0x1c) == 0) goto code_r0x0040a15e;\n                puVar7 = puStack148 + 0x1c;\n                puVar13 = puStack148;\n            }\n            *(puStack128 + 0x1c) = puVar13;\n            puVar35 = *puVar7;\n            puStack128 = puVar13;\n        } while( true );\n    }\n    *(puVar8 + 0x1c) = 0;\n    *(puVar8 + 3) = 0;\n    puVar35 = puVar8;\n    goto code_r0x0040a1f4;\ncode_r0x0040a15e:\n    *(puStack128 + 0x1c) = *(puVar35 + 3);\n    *(puStack100 + 3) = *(puVar35 + 0x1c);\n    uVar19 = *(puVar35 + 4);\n    *(puVar35 + 3) = *0x4a95e0;\n    *(puVar35 + 0x1c) = *0x4a95dc;\n    uVar33 = *(puVar8 + 4);\n    if (uVar33 == 0) {\n        if (uVar19 == 0) goto code_r0x0042a94c;\ncode_r0x0042a97a:\n        *(puVar8 + 3) = *(puVar35 + 3);\n        *(puVar8 + 0x1c) = puVar35;\n        *(puVar35 + 3) = 0;\n        puVar35 = puVar8;\n    }\n    else {\n        if (uVar19 == 0) {\ncode_r0x0042a94c:\n            if (uVar33 == 0) goto code_r0x0040a199;\n        }\n        else {\ncode_r0x0040a199:\n            if (uVar33 < uVar19) {\n                iVar26 = fcn.0040d430();\n            }\n            else {\n                if (uVar33 != 0) {\n                    puVar22 = *puVar35;\n                    puVar14 = *puVar8;\n                    do {\n                        if (*puVar14 != *puVar22) {\n                            if (*puVar14 < *puVar22) {\n                                iVar26 = -1;\n                            }\n                            else {\n                                iVar26 = 1;\n                            }\n                            goto code_r0x0040a1d3;\n                        }\n                        puVar14 = puVar14 + 1;\n                        puVar22 = puVar22 + 1;\n                        uVar33 = uVar33 - 1;\n                    } while (uVar33 != 0);\n                }\n                iVar26 = 0;\n            }\ncode_r0x0040a1d3:\n            if (iVar26 < 0) goto code_r0x0042a97a;\n            if (iVar26 < 1) goto code_r0x0040a1f4;\n        }\n        *(puVar8 + 0x1c) = *0x4a95dc;\n        *(puVar8 + 3) = puVar35;\n        *(puVar35 + 0x1c) = 0;\n        puVar35 = puVar8;\n    }\ncode_r0x0040a1f4:\n    *in_stack_ffffff3c = puVar35;\ncode_r0x0040a1f6:\n    puVar35 = puVar7;\n    if (*(*(uStack144 + 4U + *(puStack136 + 4)) + 8) == 0x41) {\n        iVar2 = *(*(*(puStack136 + 4) + 8 + iVar34 * 4) + 8);\n        if ((iVar2 == 0x4a) || (iVar2 == 0x49)) {\n            iVar34 = iVar34 + 5;\n        }\n        else {\n            iVar34 = iVar34 + 4;\n        }\n    }\n    else {\n        iVar34 = iVar34 + 2;\n    }\ncode_r0x0040a215:\n    if (((0x2f < unaff_retaddr) && (unaff_retaddr < 0x40)) && (iStack8 != 0)) {\n        fcn.00442ef7(iStack8);\n    }\n    piStack28 = 0x484adc;\n    if (uStack20 != 0) {\n        uVar19 = 0;\n        do {\n            iVar26 = *(iStack24 + uVar19 * 4);\n            if (iVar26 != 0) {\n                fcn.0044c431(iVar26);\n            }\n            uVar19 = uVar19 + 1;\n        } while (uVar19 < uStack20);\n    }\n    iStack12 = 0;\n    fcn.0041137c();\n    iStack88 = iStack88 + 1;\n    if (iStack116 < iStack88) goto code_r0x0040a279;\n    goto code_r0x00409e00;\ncode_r0x0040a279:\n    iStack80 = 0;\n    uStack68 = 0;\n    uStack64 = 0;\n    uStack60 = 0;\n    piStack56 = piStack56 & 0xffffff00;\n    iStack48 = 0;\n    uStack36 = 0;\n    auStack32[0] = 0;\n    arg_8h[0x52] = iStack96;\n    uStack72 = 1;\n    uStack40 = 1;\n    piVar32 = *(*arg_8h + 4) + 4 + arg_8h;\n    if (*(*(*arg_8h + 4) + 0xd + arg_8h) == '\\0') {\n        puVar12 = fcn.00411777(0x40);\n        if (puVar12 == NULL) {\n            puVar12 = NULL;\n        }\n        else {\n            puVar12[2] = 1;\n            puVar12[3] = 0;\n            *puVar12 = 0;\n            *(puVar12 + 4) = 0;\n            puVar12[5] = 0;\n            *(puVar12 + 6) = 0;\n            puVar12[10] = 1;\n            puVar12[0xb] = 0;\n            puVar12[8] = 0;\n            *(puVar12 + 0xc) = 0;\n        }\n        puVar12[0xe] = piVar32[1];\n        piVar32[1] = puVar12;\n    }\n    else {\n        fcn.00472c8d(piVar32[1], &stack0xffffffb0);\n        *(piVar32 + 9) = 0;\n    }\n    *piVar32 = *piVar32 + 1;\n    puStack136 = arg_8h[0x3d];\n    uVar33 = arg_8h[0x5b];\n    fcn.00409480(piVar5 + 1);\n    uVar19 = arg_8h[0x5b];\n    while (uVar33 < uVar19) {\n        fcn.0040ca30();\n        uVar19 = arg_8h[0x5b];\n    }\n    arg_8h[0x3d] = piStack140;\n    iVar26 = *(arg_8h + *(*arg_8h + 4) + 8);\n    if (*(*(*arg_8h + 4) + 0xd + arg_8h) != '\\0') {\n        iVar26 = *(iVar26 + 0x38);\n    }\n    if (*(iVar26 + 0x10) == '\\0') {\n        *arg_14h = 0;\n        fcn.004091e0();\n        *(arg_10h + 1) = 1;\n        *arg_10h = 0;\n    }\n    else {\n        *arg_14h = 1;\n        iVar26 = *(*arg_8h + 4);\n        if (*(iVar26 + 0xd + arg_8h) == '\\0') {\n            puVar35 = *(arg_8h + iVar26 + 8);\n        }\n        else {\n            puVar35 = *(*(arg_8h + iVar26 + 8) + 0x38);\n        }\n        if (arg_10h != puVar35) {\n            if (*(arg_10h + 0xc) != 0) {\n                fcn.00442ef7(*(arg_10h + 0xc));\n                *(arg_10h + 0xc) = 0;\n            }\n            iVar26 = *(arg_10h + 1);\n            if ((iVar26 == 8) && (*arg_10h != 0)) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_10h);\n                fcn.0041137c(*arg_10h);\n            }\n            else if (iVar26 == 10) {\n                if (*arg_10h != 0) {\n                    fcn.00443f54(*arg_10h);\n                }\n            }\n            else if (iVar26 == 5) {\n                fcn.0040e5e0();\n            }\n            else if (iVar26 == 0xb) {\n                fcn.0041137c(*(*arg_10h + 4));\n                fcn.0041137c(*arg_10h);\n            }\n            else if ((iVar26 == 0xc) && (*arg_10h != 0)) {\n                fcn.0044b04b(*arg_10h);\n            }\n            *(arg_10h + 1) = 1;\n            *arg_10h = 0;\n            iVar26 = *(puVar35 + 1);\n            *(arg_10h + 1) = iVar26;\n            if (iVar26 == 4) {\ncode_r0x0040a3fb:\n                puVar12 = fcn.00411777(0x10);\n                if (puVar12 == NULL) {\n                    puVar12 = NULL;\n                }\n                else {\n                    puVar29 = *(puVar35 + 0xc);\n                    *puVar12 = *puVar29;\n                    puVar12[1] = puVar29[1];\n                    puVar12[2] = puVar29[2];\n                    piVar5 = puVar29[3];\n                    puVar12[3] = piVar5;\n                    *piVar5 = *piVar5 + 1;\n                }\n                *(arg_10h + 0xc) = puVar12;\n            }\n            else {\n    // switch table (12 cases) at 0x42b4d3\n                switch(iVar26) {\n                case 1:\n                case 6:\n                    *arg_10h = *puVar35;\n                    break;\n                case 2:\n                    *arg_10h = *puVar35;\n                    *(arg_10h + 4) = *(puVar35 + 4);\n                    break;\n                case 3:\n                    *arg_10h = *puVar35;\n                    break;\n                case 4:\n                    goto code_r0x0040a3fb;\n                case 5:\n                    puVar12 = fcn.00411777(0x214);\n                    if (puVar12 == NULL) {\n                        puVar12 = NULL;\n                    }\n                    else {\n                        puVar29 = *puVar35;\n                        puVar31 = puVar12;\n                        for (iVar26 = 0x85; iVar26 != 0; iVar26 = iVar26 + -1) {\n                            *puVar31 = *puVar29;\n                            puVar29 = puVar29 + 1;\n                            puVar31 = puVar31 + 1;\n                        }\n                    }\n                    *arg_10h = puVar12;\n                    if (puVar12[1] != 0) {\n                        *puVar12[1] = *puVar12[1] + 1;\n                    }\n                    break;\n                case 7:\n                    *arg_10h = *puVar35;\n                    break;\n                case 8:\n                    if (*puVar35 != 0) {\n                        uVar16 = fcn.00411777(0x10);\n                        *arg_10h = uVar16;\n                        (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar16);\n                        iVar26 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*arg_10h, *puVar35);\n                        if (iVar26 < 0) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_10h);\n                            fcn.0041137c(*arg_10h);\n                            *arg_10h = 0;\n                        }\n                    }\n                    break;\n                case 9:\n                    *arg_10h = *puVar35;\n                    break;\n                case 10:\n                    iVar26 = fcn.00411777(0x18);\n                    if (iVar26 == 0) {\ncode_r0x0042ac05:\n                        *arg_10h = 0;\n                    }\n                    else {\n                        uVar16 = fcn.0044b52a(iVar26, *puVar35);\n                        *arg_10h = uVar16;\n                    }\n                    break;\n                case 0xb:\n                    puVar12 = fcn.00411777(8);\n                    *arg_10h = puVar12;\n                    *puVar12 = **puVar35;\n                    if (**arg_10h == 0) {\n                        uVar16 = fcn.00411777(1);\n                        *(*arg_10h + 4) = uVar16;\n                        **(*arg_10h + 4) = 0;\n                    }\n                    else {\n                        uVar16 = fcn.00411777(**arg_10h);\n                        *(*arg_10h + 4) = uVar16;\n                        fcn.00411000((*arg_10h)[1], *(*puVar35 + 4), **arg_10h);\n                    }\n                    break;\n                case 0xc:\n                    iVar26 = fcn.00411777(0x14);\n                    if (iVar26 == 0) goto code_r0x0042ac05;\n                    uVar16 = fcn.0046fa03(iVar26, *puVar35);\n                    *arg_10h = uVar16;\n                }\n            }\n        }\n    }\n    iVar26 = *(*arg_8h + 4);\n    iVar34 = *(iVar26 + 8 + arg_8h);\n    if (*(iVar26 + 0xd + arg_8h) != '\\0') {\n        iVar34 = *(iVar34 + 0x38);\n    }\n    if (*(iVar34 + 0x18) != '\\0') {\n        iVar34 = fcn.00403f70();\n        uStack68 = *(iVar34 + 0x14);\n    }\n    if (*(arg_8h + iVar26 + 0xd) == '\\0') {\n        iVar26 = *(arg_8h + iVar26 + 8);\n    }\n    else {\n        iVar26 = *(*(arg_8h + iVar26 + 8) + 0x38);\n    }\n    if (*(iVar26 + 0x30) != '\\0') {\n        iVar26 = fcn.00403f70();\n        fcn.00409120(iVar26 + 0x20);\n    }\n    piVar5 = *(*arg_8h + 4) + 4 + arg_8h;\n    if (*(*(*arg_8h + 4) + 0xd + arg_8h) != '\\0') {\n        iVar26 = piVar5[1];\n        iVar34 = *(iVar26 + 0x38);\n        if (iVar26 != 0) {\n            fcn.0044c974(iVar26);\n        }\n        piVar5[1] = iVar34;\n        *(piVar5 + 9) = 0;\n    }\n    if (*(piVar5 + 2) == '\\0') {\n        piVar32 = piVar5[1];\n        uStack144 = piVar32[0xe];\n        if (piVar32 != NULL) {\n            if (piVar32[0xb] != 0) {\n                fcn.00442ef7(piVar32[0xb]);\n                piVar32[0xb] = 0;\n            }\n            iVar26 = piVar32[10];\n            if ((iVar26 == 8) && (piVar32[8] != 0)) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar32[8]);\n                fcn.0041137c(piVar32[8]);\n            }\n            else if (iVar26 == 10) {\n                if (piVar32[8] != 0) {\n                    fcn.00443f54(piVar32[8]);\n                }\n            }\n            else if (iVar26 == 5) {\n                fcn.0040e5e0();\n            }\n            else if (iVar26 == 0xb) {\n                fcn.0041137c(*(piVar32[8] + 4));\n                fcn.0041137c(piVar32[8]);\n            }\n            else if ((iVar26 == 0xc) && (piVar32[8] != 0)) {\n                fcn.0044b04b(piVar32[8]);\n            }\n            piVar32[10] = 1;\n            piVar32[8] = 0;\n            puVar12 = piVar32[3];\n            if (puVar12 != NULL) {\n                *puVar12[3] = *puVar12[3] + -1;\n                if (*puVar12[3] == 0) {\n                    fcn.0041137c(*puVar12);\n                    fcn.0041137c(puVar12[3]);\n                }\n                fcn.0041137c(puVar12);\n                piVar32[3] = 0;\n            }\n            iVar26 = piVar32[2];\n            if ((iVar26 == 8) && (*piVar32 != 0)) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar32);\n                fcn.0041137c(*piVar32);\n            }\n            else if (iVar26 == 10) {\n                if (*piVar32 != 0) {\n                    fcn.00443f54(*piVar32);\n                }\n            }\n            else if (iVar26 == 5) {\n                fcn.0040e5e0();\n            }\n            else if (iVar26 == 0xb) {\n                fcn.0041137c(*(*piVar32 + 4));\n                fcn.0041137c(*piVar32);\n            }\n            else if ((iVar26 == 0xc) && (*piVar32 != 0)) {\n                fcn.0044b04b(*piVar32);\n            }\n            piVar32[2] = 1;\n            *piVar32 = 0;\n            fcn.0041137c(piVar32);\n        }\n        piVar5[1] = uStack144;\n        *(piVar5 + 9) = 0;\n    }\n    else {\n        *(piVar5 + 9) = 1;\n    }\n    *piVar5 = *piVar5 + -1;\n    iVar26 = *(*arg_8h + 4);\n    iVar34 = *(iVar26 + 8 + arg_8h);\n    if (*(arg_8h + iVar26 + 0xd) != '\\0') {\n        iVar34 = *(iVar34 + 0x38);\n    }\n    *(iVar34 + 0x14) = uStack68;\n    iVar34 = *(arg_8h + iVar26 + 8);\n    if (*(arg_8h + iVar26 + 0xd) != '\\0') {\n        iVar34 = *(iVar34 + 0x38);\n    }\n    *(iVar34 + 0x18) = 0;\n    uStack144 = *(*arg_8h + 4) + arg_8h;\n    if (*(uStack144 + 0xd) == '\\0') {\n        iVar26 = *(uStack144 + 1);\n    }\n    else {\n        iVar26 = *(*(uStack144 + 1) + 0x38);\n    }\n    puVar35 = iVar26 + 0x20;\n    if (puVar35 == &stack0xffffffc8) goto code_r0x0040a615;\n    if (*(iVar26 + 0x2c) != 0) {\n        fcn.00442ef7(*(iVar26 + 0x2c));\n        *(iVar26 + 0x2c) = 0;\n    }\n    iVar34 = *(iVar26 + 0x28);\n    if ((iVar34 == 8) && (*puVar35 != NULL)) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*puVar35);\n        fcn.0041137c(*puVar35);\n    }\n    else if (iVar34 == 10) {\n        if (*puVar35 != NULL) {\n            fcn.00443f54(*puVar35);\n        }\n    }\n    else if (iVar34 == 5) {\n        fcn.0040e5e0();\n    }\n    else if (iVar34 == 0xb) {\n        fcn.0041137c((*puVar35)[1]);\n        fcn.0041137c(*puVar35);\n    }\n    else if ((iVar34 == 0xc) && (*puVar35 != NULL)) {\n        fcn.0044b04b(*puVar35);\n    }\n    piVar5 = piStack56;\n    *puVar35 = NULL;\n    *(iVar26 + 0x28) = iStack48;\n    // switch table (12 cases) at 0x42b503\n    switch(iStack48) {\n    case 2:\n        *puVar35 = piStack56;\n        *(iVar26 + 0x24) = uStack52;\n        break;\n    case 3:\n        *puVar35 = CONCAT44(uStack52, piStack56);\n        break;\n    case 4:\n        puVar12 = fcn.00411777(0x10);\n        if (puVar12 == NULL) {\n            *(iVar26 + 0x2c) = 0;\n        }\n        else {\n            *puVar12 = *puStack44;\n            puVar12[1] = puStack44[1];\n            puVar12[2] = puStack44[2];\n            piVar5 = puStack44[3];\n            puVar12[3] = piVar5;\n            *piVar5 = *piVar5 + 1;\n            *(iVar26 + 0x2c) = puVar12;\n        }\n        break;\n    case 5:\n        piVar5 = fcn.00411777(0x214);\n        if (piVar5 == NULL) {\n            piVar5 = NULL;\n        }\n        else {\n            piVar32 = piStack56;\n            piVar17 = piVar5;\n            for (iVar26 = 0x85; iVar26 != 0; iVar26 = iVar26 + -1) {\n                *piVar17 = *piVar32;\n                piVar32 = piVar32 + 1;\n                piVar17 = piVar17 + 1;\n            }\n        }\n        *puVar35 = piVar5;\n        if (piVar5[1] != 0) {\n            *piVar5[1] = *piVar5[1] + 1;\n        }\n        break;\n    case 6:\n        goto code_r0x0040a60f;\n    case 7:\n        *puVar35 = piStack56;\n        break;\n    case 8:\n        if (piStack56 != NULL) {\n            piVar32 = fcn.00411777(0x10);\n            *puVar35 = piVar32;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(piVar32);\n            iVar26 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*puVar35, piVar5);\n            if (iVar26 < 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*puVar35);\n                fcn.0041137c(*puVar35);\n                *puVar35 = NULL;\n            }\n        }\n        break;\n    case 9:\n        *puVar35 = piStack56._0_1_;\n        break;\n    case 10:\n        iVar26 = fcn.00411777(0x18);\n        if (iVar26 == 0) {\ncode_r0x0042b03a:\n            piVar5 = NULL;\n        }\n        else {\n            piVar5 = fcn.0044b52a(iVar26, piStack56);\n        }\n        goto code_r0x0040a60f;\n    case 0xb:\n        piVar32 = fcn.00411777(8);\n        piVar5 = piStack56;\n        *puVar35 = piVar32;\n        *piVar32 = *piStack56;\n        if (**puVar35 == 0) {\n            iVar26 = fcn.00411777(1);\n            (*puVar35)[1] = iVar26;\n            *(*puVar35)[1] = 0;\n        }\n        else {\n            iVar26 = fcn.00411777(**puVar35);\n            (*puVar35)[1] = iVar26;\n            fcn.00411000((*puVar35)[1], piVar5[1], **puVar35);\n        }\n        break;\n    case 0xc:\n        iVar26 = fcn.00411777(0x14);\n        if (iVar26 == 0) goto code_r0x0042b03a;\n        piVar5 = fcn.0046fa03(iVar26, piStack56);\ncode_r0x0040a60f:\n        *puVar35 = piVar5;\n    }\ncode_r0x0040a615:\n    uVar19 = uStack112;\n    if (*(uStack144 + 0xd) == '\\0') {\n        iVar26 = *(uStack144 + 1);\n    }\n    else {\n        iVar26 = *(*(uStack144 + 1) + 0x38);\n    }\n    *(iVar26 + 0x30) = 0;\n    if (*0x4a7f3d != '\\0') {\n        puVar35 = *(*0x4a7f38 + 1);\n        fcn.0046f733(*0x4a7f38);\n        *0x4a7f3d = '\\0';\n        *0x4a7f38 = puVar35;\n    }\n    if (*0x4a7f3c == '\\0') {\n        puVar12 = **0x4a7f38;\n        puStack148 = *(*0x4a7f38 + 1);\n        uStack144 = *0x4a7f38;\n        if (puVar12 != NULL) {\n            if (puVar12[6] != 0) {\n                fcn.0040b6a0(puVar12[6]);\n            }\n            if (puVar12[7] != 0) {\n                fcn.0040b6a0(puVar12[7]);\n            }\n            if ((*(puVar12 + 4) == '\\0') && (piVar5 = puVar12[5],  piVar5 != NULL)) {\n                puVar29 = piVar5[3];\n                if (puVar29 != NULL) {\n                    *puVar29[3] = *puVar29[3] + -1;\n                    if (*puVar29[3] == 0) {\n                        fcn.0041137c(*puVar29);\n                        fcn.0041137c(puVar29[3]);\n                    }\n                    fcn.0041137c(puVar29);\n                    piVar5[3] = 0;\n                }\n                iVar26 = piVar5[2];\n                if ((iVar26 == 8) && (*piVar5 != 0)) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar5);\n                    fcn.0041137c(*piVar5);\n                }\n                else if (iVar26 == 10) {\n                    if (*piVar5 != 0) {\n                        fcn.00443f54(*piVar5);\n                    }\n                }\n                else if (iVar26 == 5) {\n                    fcn.0040e5e0();\n                }\n                else if (iVar26 == 0xb) {\n                    fcn.0041137c(*(*piVar5 + 4));\n                    fcn.0041137c(*piVar5);\n                }\n                else if ((iVar26 == 0xc) && (*piVar5 != 0)) {\n                    fcn.0044b04b(*piVar5);\n                }\n                piVar5[2] = 1;\n                *piVar5 = 0;\n                fcn.0041137c(piVar5);\n            }\n            *puVar12[3] = *puVar12[3] + -1;\n            if (*puVar12[3] == 0) {\n                fcn.0041137c(*puVar12);\n                fcn.0041137c(puVar12[3]);\n            }\n            fcn.0041137c(puVar12);\n            uVar19 = uStack112;\n        }\n        iVar26 = iStack116;\n        fcn.0041137c(uStack144);\n        *0x4a7f38 = puStack148;\n        *0x4a7f3d = 0;\n    }\n    else {\n        *0x4a7f3d = 1;\n        iVar26 = iStack116;\n    }\n    *0x4a7f34 = *0x4a7f34 + -1;\n    arg_8h[0x52] = arg_8h;\n    if (puStack44 != NULL) {\n        fcn.00442ef7(puStack44);\n        iStack48 = 0;\n    }\n    piVar5 = piStack56;\n    if (iStack48 == 8) {\n        if (piStack56 != NULL) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(piStack56);\n            fcn.0041137c(piVar5);\n        }\n    }\n    else if (iStack48 == 10) {\n        if (piStack56 != NULL) {\n            fcn.00443f54(piStack56);\n        }\n    }\n    else if (iStack48 == 5) {\n        fcn.0040e5e0();\n    }\n    else if (iStack48 == 0xb) {\n        fcn.0041137c(piStack56[1]);\n        fcn.0041137c(piVar5);\n    }\n    else if ((iStack48 == 0xc) && (piStack56 != NULL)) {\n        fcn.0044b04b(piStack56);\n    }\n    iVar34 = iStack80;\n    iStack48 = 1;\n    piStack56 = NULL;\n    if (iStack76 != 0) {\n        fcn.00442ef7(iStack76);\n        iStack80 = 0;\n    }\n    iVar18 = iStack88;\n    if (iVar34 == 8) {\n        if (iStack88 != 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(iStack88);\n            fcn.0041137c(iVar18);\n        }\n    }\n    else if (iVar34 == 10) {\n        if (iStack88 != 0) {\n            fcn.00443f54(iStack88);\n        }\n    }\n    else if (iVar34 == 5) {\n        fcn.0040e5e0();\n    }\n    else if (iVar34 == 0xb) {\n        fcn.0041137c(*(iStack88 + 4));\n        fcn.0041137c(iVar18);\n    }\n    else if ((iVar34 == 0xc) && (iStack88 != 0)) {\n        fcn.0044b04b(iStack88);\n    }\n    if (piStack172 != NULL) {\n        fcn.00442ef7(piStack172);\n        uStack176 = 0;\n    }\n    if (uStack176 == 8) {\n        if (iStack184 != 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(iStack184);\n            fcn.0041137c(iStack184);\n        }\n    }\n    else if (uStack176 == 10) {\n        if (iStack184 != 0) {\n            fcn.00443f54(iStack184);\n        }\n    }\n    else if (uStack176 == 5) {\n        fcn.0040e5e0();\n    }\n    else if (uStack176 == 0xb) {\n        fcn.0041137c(*(iStack184 + 4));\n        fcn.0041137c(iStack184);\n    }\n    else if ((uStack176 == 0xc) && (iStack184 != 0)) {\n        fcn.0044b04b(iStack184);\n    }\n    uStack176 = 1;\n    if (uVar19 != 0) {\n        uVar33 = 0;\n        do {\n            fcn.0041137c(*(iVar26 + uVar33 * 4));\n            uVar33 = uVar33 + 1;\n        } while (uVar33 < uVar19);\n    }\n    fcn.0041137c(iStack116);\n    if (puStack160 != NULL) {\n        puVar35 = NULL;\n        do {\n            piVar5 = *(puStack164 + puVar35 * 4);\n            if (piVar5 != NULL) {\n                puVar12 = piVar5[3];\n                if (puVar12 != NULL) {\n                    *puVar12[3] = *puVar12[3] + -1;\n                    if (*puVar12[3] == 0) {\n                        fcn.0041137c(*puVar12);\n                        fcn.0041137c(puVar12[3]);\n                    }\n                    fcn.0041137c(puVar12);\n                    piVar5[3] = 0;\n                }\n                iVar26 = piVar5[2];\n                if ((iVar26 == 8) && (*piVar5 != 0)) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar5);\n                    fcn.0041137c(*piVar5);\n                }\n                else if (iVar26 == 10) {\n                    if (*piVar5 != 0) {\n                        fcn.00443f54(*piVar5);\n                    }\n                }\n                else if (iVar26 == 5) {\n                    fcn.0040e5e0();\n                }\n                else if (iVar26 == 0xb) {\n                    fcn.0041137c(*(*piVar5 + 4));\n                    fcn.0041137c(*piVar5);\n                }\n                else if ((iVar26 == 0xc) && (*piVar5 != 0)) {\n                    fcn.0044b04b(*piVar5);\n                }\n                piVar5[2] = 1;\n                *piVar5 = 0;\n                fcn.0041137c(piVar5);\n            }\n            puVar35 = puVar35 + 1;\n        } while (puVar35 < puStack160);\n    }\n    fcn.0041137c(puStack164);\n    return 0;\n}\n",
        "token_count": 18836
    },
    "0040b240": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b240(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int64_t *piVar11;\n    int32_t *piVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint64_t uVar15;\n    ulong uVar16;\n    double *arg_8h_00;\n    int32_t **ppiVar17;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int16_t **var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    piVar4 = arg_8h;\n    ppiVar17 = *(arg_ch + 4);\n    var_8h = 0;\n    iVar3 = **ppiVar17;\n    if (iVar3 == 0x22) {\ncode_r0x0040b264:\n        if (arg_8h[0x3b] == 1) {\n            fcn.0045e1ee(arg_8h, 0x81, *(*ppiVar17 + 10));\n            goto code_r0x0040b3e3;\n        }\n        var_8h = 1;\n        if (*(ppiVar17[1] + 2) != 0x7f) {\n            _var_2ch = ZEXT48(var_28h) << 0x20;\n            var_20h = NULL;\n            var_24h = 0x1;\n            iVar3 = fcn.0040aa20(arg_ch, &var_8h, &var_2ch, 0xffffffff);\n            if (iVar3 != 0) {\n                fcn.004091e0();\n                goto code_r0x0040b3e3;\n            }\n            arg_10h = *(*piVar4 + 4) + piVar4;\n            if (*(arg_10h + 0xd) == '\\0') {\n                piVar11 = arg_10h[2];\n            }\n            else {\n                piVar11 = *(arg_10h[2] + 0x38);\n            }\n            if (piVar11 != &var_2ch) {\n                if (*(piVar11 + 0xc) != NULL) {\n                    fcn.00442ef7(*(piVar11 + 0xc));\n                    *(piVar11 + 0xc) = NULL;\n                }\n                piVar4 = *(piVar11 + 1);\n                if ((piVar4 == 0x8) && (*piVar11 != NULL)) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar11);\n                    fcn.0041137c(*piVar11);\n                }\n                else if (piVar4 == 0xa) {\n                    if (*piVar11 != NULL) {\n                        fcn.00443f54(*piVar11);\n                    }\n                }\n                else if (piVar4 == 0x5) {\n                    fcn.0040e5e0();\n                }\n                else if (piVar4 == 0xb) {\n                    fcn.0041137c((*piVar11)[1]);\n                    fcn.0041137c(*piVar11);\n                }\n                else if ((piVar4 == 0xc) && (*piVar11 != NULL)) {\n                    fcn.0044b04b(*piVar11);\n                }\n                *(piVar11 + 1) = 0x1;\n                *piVar11 = NULL;\n                *(piVar11 + 1) = var_24h;\n                if (var_24h == 0x4) {\ncode_r0x0040b32d:\n                    piVar4 = fcn.00411777(0x10);\n                    if (piVar4 == NULL) {\n                        piVar4 = NULL;\n                    }\n                    else {\n                        *piVar4 = *var_20h;\n                        piVar4[1] = var_20h[1];\n                        piVar4[2] = var_20h[2];\n                        piVar12 = var_20h[3];\n                        piVar4[3] = piVar12;\n                        *piVar12 = *piVar12 + 1;\n                    }\n                    *(piVar11 + 0xc) = piVar4;\n                }\n                else if (var_24h - 1U < 0xc) {\n    // switch table (12 cases) at 0x42dbf5\n                    switch(*((var_24h - 1U) * 4 + 0x42dbf5)) {\n                    case 0x40b32d:\n                        goto code_r0x0040b32d;\n                    case 0x42d8e0:\n                        *piVar11 = var_2ch;\n                        *(piVar11 + 4) = var_28h;\n                        break;\n                    case 0x42d8f0:\n                        *piVar11 = var_2ch;\n                        break;\n                    case 0x42d8fa:\n                        *piVar11 = _var_2ch;\n                        break;\n                    case 0x42d904:\n                        *piVar11 = var_2ch;\n                        break;\n                    case 0x42d90e:\n                        piVar4 = fcn.00411777(0x214);\n                        if (piVar4 == NULL) {\n                            piVar4 = NULL;\n                        }\n                        else {\n                            piVar12 = piVar4;\n                            for (iVar3 = 0x85; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *piVar12 = *var_2ch;\n                                var_2ch = var_2ch + 1;\n                                piVar12 = piVar12 + 1;\n                            }\n                        }\n                        *piVar11 = piVar4;\n                        if (piVar4[1] != 0) {\n                            *piVar4[1] = *piVar4[1] + 1;\n                        }\n                        break;\n                    case 0x42d94c:\n                        if (var_2ch != NULL) {\n                            piVar4 = fcn.00411777(0x10);\n                            *piVar11 = piVar4;\n                            (*_sym.imp.OLEAUT32.dll_VariantClear)(piVar4);\n                            iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*piVar11, var_2ch);\n                            if (iVar3 < 0) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar11);\n                                fcn.0041137c(*piVar11);\n                                *piVar11 = NULL;\n                            }\n                        }\n                        break;\n                    case 0x42d99d:\n                        *piVar11 = var_2ch;\n                        break;\n                    case 0x42d9a7:\n                        iVar3 = fcn.00411777(0x18);\n                        if (iVar3 == 0) {\ncode_r0x0042d9ca:\n                            *piVar11 = NULL;\n                        }\n                        else {\n                            piVar4 = fcn.0044b52a(iVar3, var_2ch);\n                            *piVar11 = piVar4;\n                        }\n                        break;\n                    case 0x42d9d3:\n                        piVar4 = fcn.00411777(8);\n                        *piVar11 = piVar4;\n                        *piVar4 = *var_2ch;\n                        if (**piVar11 == 0) {\n                            iVar3 = fcn.00411777(1);\n                            (*piVar11)[1] = iVar3;\n                            *(*piVar11)[1] = 0;\n                        }\n                        else {\n                            iVar3 = fcn.00411777(**piVar11);\n                            (*piVar11)[1] = iVar3;\n                            fcn.00411000((*piVar11)[1], *(var_2ch + 4), **piVar11);\n                        }\n                        break;\n                    case 0x42da39:\n                        iVar3 = fcn.00411777(0x14);\n                        if (iVar3 == 0) goto code_r0x0042d9ca;\n                        piVar4 = fcn.0046fa03(iVar3, var_2ch);\n                        *piVar11 = piVar4;\n                    }\n                }\n            }\n            piVar4 = var_20h;\n            iVar3 = arg_10h[2];\n            if (*(arg_10h + 0xd) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x10) = 1;\n            if (var_20h != NULL) {\n                ppiVar17 = var_20h + 3;\n                **ppiVar17 = **ppiVar17 + -1;\n                if (**ppiVar17 == 0) {\n                    fcn.0041137c(*var_20h);\n                    fcn.0041137c(*ppiVar17);\n                }\n                fcn.0041137c(piVar4);\n                var_20h = NULL;\n            }\n            if (var_24h == 0x8) {\n                if (var_2ch != NULL) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_2ch);\n                    fcn.0041137c(var_2ch);\n                }\n            }\n            else if (var_24h == 0xa) {\n                if (var_2ch != NULL) {\n                    fcn.00443f54(var_2ch);\n                }\n            }\n            else if (var_24h == 0x5) {\n                fcn.0040e5e0();\n            }\n            else if (var_24h == 0xb) {\n                fcn.0041137c(*(var_2ch + 4));\n                fcn.0041137c(var_2ch);\n            }\n            else if ((var_24h == 0xc) && (var_2ch != NULL)) {\n                fcn.0044b04b(var_2ch);\n            }\n        }\n        iVar3 = *(*(arg_ch + 4) + var_8h * 4);\n        if (*(iVar3 + 8) != 0x7f) {\n            fcn.0045e1ee(arg_8h, 0x72, *(iVar3 + 10));\n        }\ncode_r0x0040b3e3:\n        *(arg_8h + 0x51) = 1;\n        return;\n    }\n    uVar10 = iVar3 - 4;\n    if (uVar10 < 0x27) {\n    // switch table (39 cases) at 0x40b604\n        switch(*(uVar10 * 4 + 0x40b604)) {\n        case 0x40b264:\n            goto code_r0x0040b264;\n        case 0x40b409:\n            arg_ch = arg_8h + 0x5b;\n            _var_2ch = ZEXT48(var_28h) << 0x20;\n            var_24h = 0x1;\n            var_20h = NULL;\n            if (*(arg_8h + 0x175) == '\\0') {\n                iVar3 = arg_8h[0x5c];\n            }\n            else {\n                iVar3 = *(arg_8h[0x5c] + 0x30);\n            }\n            arg_8h = *(iVar3 + 0xc);\n            var_ch = iVar3;\n            if (*(iVar3 + 0x28) == 8) {\n                iVar5 = fcn.0046c0ef(piVar4, arg_8h, iVar3 + 0x20, &var_2ch);\n                if ((iVar5 != 0) || (*(iVar3 + 0x28) != 8)) {\ncode_r0x0042d11f:\n                    fcn.0040ca30();\n                    fcn.004091e0();\n                    return;\n                }\n                fcn.00409120(&var_2ch);\n                *arg_10h = *(iVar3 + 4) + 1;\n            }\n            else if (*(iVar3 + 0x18) == 5) {\n                var_10h = iVar3 + 0x10;\n                iVar5 = fcn.004329a8(var_10h, 1);\n                _var_1ch = _var_1ch & 0xffffffff | iVar5 - 1 << 0x20;\n                iVar5 = fcn.0040c8f0();\n                if (var_18h <= iVar5) goto code_r0x0042d11f;\n                iVar5 = fcn.0040c8f0();\n                fcn.004091e0();\n                *(iVar3 + 0x20) = iVar5 + 1;\n                *(iVar3 + 0x28) = 1;\n                fcn.0045e408(var_10h);\n                fcn.0040c8f0();\n                fcn.0040d260();\n                iVar3 = fcn.0040d1a0(1, 0);\n                if (iVar3 != 0) {\n                    uVar6 = fcn.0040d1a0(0, 0);\n                    fcn.00409120(uVar6);\n                }\n                *arg_10h = *(var_ch + 4) + 1;\n            }\n            else {\n                arg_8h_00 = iVar3 + 0x20;\n                fcn.0040b7b0(arg_8h);\n                if (var_20h != NULL) {\n                    fcn.00442ef7(var_20h);\n                    var_20h = NULL;\n                }\n                if (var_24h == 0x8) {\n                    if (var_2ch != NULL) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_2ch);\n                        fcn.0041137c(var_2ch);\n                    }\n                }\n                else if (var_24h == 0xa) {\n                    if (var_2ch != NULL) {\n                        fcn.00443f54(var_2ch);\n                    }\n                }\n                else if (var_24h == 0x5) {\n                    fcn.0040e5e0();\n                }\n                else if (var_24h == 0xb) {\n                    fcn.0041137c(*(var_2ch + 4));\n                    fcn.0041137c(var_2ch);\n                }\n                else if ((var_24h == 0xc) && (var_2ch != NULL)) {\n                    fcn.0044b04b(var_2ch);\n                }\n                fVar14 = 0;\n                var_24h = 0x3;\n                _var_2ch = fVar14;\n                iVar5 = *(iVar3 + 0x28);\n                iVar8 = *(iVar5 * 0x30 + 0x4921f4);\n                if (iVar8 == 3) {\n                    if (iVar5 == 1) {\n                        fVar13 = *arg_8h_00;\n                    }\n                    else {\n                        fVar13 = fVar14;\n    // switch table (9 cases) at 0x42db39\n                        switch(iVar5) {\n                        case 2:\n                            fVar13 = *arg_8h_00;\n                            break;\n                        case 3:\n                            fVar13 = *arg_8h_00;\n                            break;\n                        case 4:\n                            piVar1 = **(iVar3 + 0x2c);\n                            if ((*piVar1 == 0x30) && ((piVar1[1] == 0x78 || (piVar1[1] == 0x58)))) {\n                                fcn.00433276(piVar1 + 2, &var_1ch, 8);\n                                fVar13 = _var_1ch;\n                            }\n                            else {\n                                fVar13 = fcn.00413d9d(piVar1);\n                            }\n                            _var_1ch = fVar13;\n                            if (var_24h == 0x3) {\n                                fVar14 = _var_2ch;\n                            }\n                            else if (var_24h - 1U < 10) {\n    // switch table (10 cases) at 0x42db5d\n                                switch(*((var_24h - 1U) * 4 + 0x42db5d)) {\n                                case 0x42d389:\n                                    fVar14 = var_2ch;\n                                    break;\n                                case 0x42d3f9:\n                                    piVar1 = *var_20h;\n                                    if ((*piVar1 == 0x30) && ((piVar1[1] == 0x78 || (piVar1[1] == 0x58)))) {\n                                        fcn.00433276(piVar1 + 2, &var_14h, 8);\n                                        fVar14 = CONCAT44(var_10h, var_14h);\n                                        fVar13 = _var_1ch;\n                                    }\n                                    else {\n                                        fVar14 = fcn.00413d9d(piVar1);\n                                        fVar13 = _var_1ch;\n                                    }\n                                    break;\n                                case 0x42d44e:\n                                    fVar14 = _var_2ch;\n                                    break;\n                                case 0x42d458:\n                                    fVar14 = *(var_2ch + 4);\n                                    break;\n                                case 0x42d465:\n                                    if (var_2ch == '\\0') goto code_r0x0042d46e;\n                                    fVar14 = 1;\n                                    break;\n                                case 0x42d46e:\n                                    goto code_r0x0042d46e;\n                                }\n                            }\n                            else {\ncode_r0x0042d46e:\n                                fVar14 = 0;\n                            }\n                            break;\n                        case 9:\n                            if (*arg_8h_00 != '\\0') {\n                                fVar13 = 1;\n                            }\n                            break;\n                        case 10:\n                            fVar13 = *(*arg_8h_00 + 4);\n                        }\n                    }\n                    if (fVar14 <= fVar13) goto code_r0x0040b4ce;\ncode_r0x0042d27f:\n                    cVar2 = fcn.0046754b(arg_8h, iVar3 + 0x10);\n                    if (cVar2 != '\\0') {\n                        *arg_10h = *(iVar3 + 4) + 1;\n                        goto code_r0x0040b519;\n                    }\n                    goto code_r0x0040b581;\n                }\n    // switch table (9 cases) at 0x42db15\n                switch(iVar8) {\n                case 1:\n                case 9:\n                    iVar5 = fcn.0040c8f0();\n                    iVar8 = fcn.0040c8f0();\n                    if (iVar5 < iVar8) goto code_r0x0042d27f;\n                    break;\n                case 2:\n                    uVar15 = fcn.00442d6f(arg_8h_00);\n                    iVar5 = uVar15 >> 0x20;\n                    _var_1ch = _var_1ch & 0xffffffff00000000 | uVar15 & 0xffffffff;\n                    uVar16 = fcn.00442d6f(&var_2ch);\n                    iVar8 = uVar16 >> 0x20;\n                    if ((iVar5 < iVar8) || ((iVar5 <= iVar8 && (var_1ch < uVar16)))) goto code_r0x0042d27f;\n                    break;\n                case 4:\n                    uVar6 = fcn.00452e60(&var_2ch);\n                    uVar7 = fcn.00452e60(arg_8h_00);\n                    iVar5 = fcn.004457dd(uVar7, arg_8h_00, uVar6);\n                    if (iVar5 < 0) goto code_r0x0042d27f;\n                    break;\n                case 7:\n                    uVar10 = fcn.0044b01e(arg_8h_00);\n                    uVar9 = fcn.0044b01e(&var_2ch);\n                    if (uVar10 < uVar9) goto code_r0x0042d27f;\n                }\ncode_r0x0040b4ce:\n                iVar5 = *(iVar3 + 0x18);\n                ppiVar17 = iVar3 + 0x10;\n                iVar8 = *((arg_8h[2] + iVar5 * 3) * 4 + 0x4921e8);\n                if (iVar8 == 1) {\ncode_r0x0040b4f0:\n                    if (iVar5 == 1) {\ncode_r0x0040b4f9:\n                        piVar4 = *ppiVar17;\n                    }\n                    else {\n    // switch table (10 cases) at 0x42dba5\n                        switch(iVar5) {\n                        case 2:\n                        case 7:\n                            goto code_r0x0040b4f9;\n                        case 3:\n                            piVar4 = fcn.00426200();\n                            break;\n                        case 4:\n                            piVar1 = **(iVar3 + 0x1c);\n                            if ((*piVar1 == 0x30) && ((piVar1[1] == 0x78 || (piVar1[1] == 0x58)))) {\n                                fcn.00433276(piVar1 + 2, &var_1ch, 8);\n                                piVar4 = var_1ch;\n                            }\n                            else {\n                                piVar4 = fcn.00413330(piVar1);\n                            }\n                            break;\n                        default:\ncode_r0x0042d5a2:\n                            piVar4 = NULL;\n                            break;\n                        case 9:\n                            piVar4 = *ppiVar17 != '\\0';\n                            break;\n                        case 10:\n                            piVar4 = (*ppiVar17)[1];\n                            break;\n                        case 0xb:\n                            piVar4 = *ppiVar17;\n                            if (4 < *piVar4) goto code_r0x0042d5a2;\n                            fcn.00433177(piVar4[1], *piVar4, &var_1ch);\n                            piVar4 = var_1ch;\n                        }\n                    }\n                    if (arg_8h[2] == 0x1) {\ncode_r0x0040b50a:\n                        var_1ch = *arg_8h;\n                        goto code_r0x0040b50c;\n                    }\n                    uVar10 = arg_8h[2] - 2;\n                    if (uVar10 < 10) {\n    // switch table (10 cases) at 0x42dbcd\n                        switch(*(uVar10 * 4 + 0x42dbcd)) {\n                        case 0x40b50a:\n                            goto code_r0x0040b50a;\n                        case 0x42d5bc:\n                            piVar1 = *arg_8h[3];\n                            if ((*piVar1 == 0x30) && ((piVar1[1] == 0x78 || (piVar1[1] == 0x58)))) {\n                                fcn.00433276(piVar1 + 2, &var_1ch, 8);\n                            }\n                            else {\n                                var_1ch = fcn.00413330(piVar1);\n                            }\n                            break;\n                        case 0x42d609:\n                            var_1ch = fcn.00426200();\n                            break;\n                        case 0x42d615:\n                            var_1ch = *arg_8h != '\\0';\n                            break;\n                        case 0x42d621:\n                            var_1ch = (*arg_8h)[1];\n                            break;\n                        case 0x42d62b:\n                            piVar12 = *arg_8h;\n                            if (4 < *piVar12) goto code_r0x0042d651;\n                            fcn.00433177(piVar12[1], *piVar12, &var_1ch);\n                            break;\n                        case 0x42d651:\n                            goto code_r0x0042d651;\n                        }\n                    }\n                    else {\ncode_r0x0042d651:\n                        var_1ch = NULL;\n                    }\ncode_r0x0040b50c:\n                    if (piVar4 < var_1ch) {\ncode_r0x0040b581:\n                        fcn.0040ca30();\n                        goto code_r0x0040b519;\n                    }\n                }\n                else {\n    // switch table (8 cases) at 0x42db85\n                    switch(iVar8) {\n                    case 2:\n                        uVar15 = fcn.00442d6f(ppiVar17);\n                        iVar5 = uVar15 >> 0x20;\n                        _var_1ch = _var_1ch & 0xffffffff00000000 | uVar15 & 0xffffffff;\n                        uVar16 = fcn.00442d6f(arg_8h);\n                        iVar8 = uVar16 >> 0x20;\n                        if ((iVar8 <= iVar5) && ((iVar8 < iVar5 || (uVar16 <= var_1ch)))) break;\n                        goto code_r0x0040b581;\n                    case 3:\n                        fVar14 = fcn.0040bd40();\n                        _var_1ch = fVar14;\n                        fVar14 = fcn.0040bd40();\n                        if (((fVar14 < _var_1ch) << 8 | (fVar14 == _var_1ch) << 0xe) == 0) goto code_r0x0040b581;\n                        break;\n                    case 4:\n                        uVar6 = fcn.00452e60(arg_8h);\n                        uVar7 = fcn.00452e60(ppiVar17);\n                        iVar5 = fcn.004457dd(uVar7, ppiVar17, uVar6);\n                        if (iVar5 < 0) goto code_r0x0040b581;\n                        break;\n                    case 7:\n                        uVar10 = fcn.0044b01e(ppiVar17);\n                        uVar9 = fcn.0044b01e(arg_8h);\n                        if (uVar10 < uVar9) goto code_r0x0040b581;\n                        break;\n                    case 9:\n                        goto code_r0x0040b4f0;\n                    }\n                }\n                *arg_10h = *(iVar3 + 4) + 1;\n            }\ncode_r0x0040b519:\n            if (var_20h != NULL) {\n                fcn.00442ef7(var_20h);\n                var_20h = NULL;\n            }\n            if (var_24h == 0x8) {\n                if (var_2ch != NULL) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_2ch);\n                    fcn.0041137c(var_2ch);\n                }\n            }\n            else if (var_24h == 0xa) {\n                if (var_2ch != NULL) {\n                    fcn.00443f54(var_2ch);\n                }\n            }\n            else if (var_24h == 0x5) {\n                fcn.0040e5e0();\n            }\n            else if (var_24h == 0xb) {\n                fcn.0041137c(*(var_2ch + 4));\n                fcn.0041137c(var_2ch);\n            }\n            else if ((var_24h == 0xc) && (var_2ch != NULL)) {\n                fcn.0044b04b(var_2ch);\n            }\n            break;\n        case 0x40b559:\n            fcn.0040cf70(arg_8h, arg_ch, arg_10h);\n            return;\n        case 0x40b56d:\n            fcn.0040c1c0(arg_8h, arg_ch, arg_10h);\n            return;\n        case 0x40b58b:\n            fcn.0040ca30();\n            return;\n        case 0x40b59f:\n            fcn.00410a80();\n            return;\n        case 0x40b5b5:\n            fcn.0040ebc0(arg_ch, arg_10h);\n            return;\n        case 0x40b5ca:\n            fcn.0040f5c0(arg_10h);\n            return;\n        case 0x40b5dc:\n            fcn.0040ec40(arg_8h, arg_ch, arg_10h);\n            return;\n        case 0x40b5f0:\n            fcn.0040f510(arg_8h);\n            return;\n        case 0x42d091:\n            iVar3 = fcn.0040f660();\n            *arg_10h = *(iVar3 + 8) + 1;\n            fcn.0040ca30();\n            break;\n        case 0x42d0b1:\n            fcn.0047e423(arg_8h, arg_ch, arg_10h);\n            break;\n        case 0x42d0c1:\n            fcn.0047e2db(arg_8h, arg_ch, arg_10h);\n            break;\n        case 0x42d6e5:\n            fcn.0047e107(arg_8h, arg_10h);\n            break;\n        case 0x42d6f4:\n            iVar3 = fcn.0040f660();\n            *arg_10h = *(iVar3 + 8);\n            break;\n        case 0x42d70c:\n            fcn.0047de0b(arg_8h, arg_ch, arg_10h);\n            break;\n        case 0x42d71c:\n            fcn.0047234e(arg_8h, arg_ch, &var_8h, arg_10h);\n            break;\n        case 0x42d730:\n            fcn.0047dbb2(arg_8h, arg_ch, &var_8h, 0);\n            break;\n        case 0x42d741:\n            fcn.0047f031(arg_8h, arg_ch, &var_8h, 0);\n            break;\n        case 0x42d752:\n            fcn.0047f4ff(arg_8h, arg_ch, &var_8h, 0);\n            break;\n        case 0x42d763:\n            fcn.0047f4ff(arg_8h, arg_ch, &var_8h, 4);\n            break;\n        case 0x42d775:\n            fcn.0047f4ff(arg_8h, arg_ch, &var_8h, 1);\n            break;\n        case 0x42d787:\n            fcn.0047f4ff(arg_8h, arg_ch, &var_8h, 2);\n            break;\n        case 0x42d799:\n            fcn.0047e914(arg_8h, arg_ch, &var_8h, 0);\n            break;\n        case 0x42d7aa:\n            *(arg_8h + 0x51) = 1;\n            break;\n        case 0x42d7b6:\n            var_8h = 1;\n            fcn.00464ac0(arg_8h, **ppiVar17[1], &var_10h, &var_18h, &arg_ch, &arg_8h);\n            *arg_10h = arg_8h + 1;\n            break;\n        case 0x42d7e9:\n            fcn.0047cf60(arg_8h, arg_ch, &var_8h);\n            break;\n        case 0x42d7f9:\n            fcn.00464a7b(arg_8h, arg_ch, &var_8h);\n            break;\n        case 0x42d809:\n            goto code_r0x0042d809;\n        }\n    }\n    else {\ncode_r0x0042d809:\n        fcn.0045e1ee(arg_8h, 0x81, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 7299
    },
    "0040b6a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6a0(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    if (arg_8h != NULL) {\n        if (arg_8h[6] != 0) {\n            fcn.0040b6a0(arg_8h[6]);\n        }\n        if (arg_8h[7] != 0) {\n            fcn.0040b6a0(arg_8h[7]);\n        }\n        if ((*(arg_8h + 4) == '\\0') && (piVar1 = arg_8h[5],  piVar1 != NULL)) {\n            puVar2 = piVar1[3];\n            if (puVar2 != NULL) {\n                *puVar2[3] = *puVar2[3] + -1;\n                if (*puVar2[3] == 0) {\n                    fcn.0041137c(*puVar2);\n                    fcn.0041137c(puVar2[3]);\n                }\n                fcn.0041137c(puVar2);\n                piVar1[3] = 0;\n            }\n            iVar3 = piVar1[2];\n            if ((iVar3 == 8) && (*piVar1 != 0)) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar1);\n                fcn.0041137c(*piVar1);\n            }\n            else if (iVar3 == 10) {\n                if (*piVar1 != 0) {\n                    fcn.00443f54(*piVar1);\n                }\n            }\n            else if (iVar3 == 5) {\n                fcn.0040e5e0();\n            }\n            else if (iVar3 == 0xb) {\n                fcn.0041137c(*(*piVar1 + 4));\n                fcn.0041137c(*piVar1);\n            }\n            else if ((iVar3 == 0xc) && (*piVar1 != 0)) {\n                fcn.0044b04b(*piVar1);\n            }\n            piVar1[2] = 1;\n            *piVar1 = 0;\n            fcn.0041137c(piVar1);\n        }\n        *arg_8h[3] = *arg_8h[3] + -1;\n        if (*arg_8h[3] == 0) {\n            fcn.0041137c(*arg_8h);\n            fcn.0041137c(arg_8h[3]);\n        }\n        fcn.0041137c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 599
    },
    "0040b890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b890(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uchar *puVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    double *pdVar9;\n    uint uVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint var_10h;\n    double dStack16;\n    \n    piVar1 = in_EAX[1];\n    piVar12 = piVar1;\n    if (*(in_EAX + 9) != '\\0') {\n        piVar12 = piVar1[1];\n    }\n    iVar11 = *piVar12;\n    if (*(in_EAX + 9) != '\\0') {\n        iVar2 = piVar1[1];\n        fcn.0041137c(piVar1);\n        in_EAX[1] = iVar2;\n        *(in_EAX + 9) = 0;\n    }\n    if (*(in_EAX + 2) == '\\0') {\n        iVar2 = *(in_EAX[1] + 4);\n        fcn.0041137c(in_EAX[1]);\n        in_EAX[1] = iVar2;\n        *(in_EAX + 9) = 0;\n    }\n    else {\n        *(in_EAX + 9) = 1;\n    }\n    *in_EAX = *in_EAX + -1;\n    if (((iVar11 == 10) || (iVar11 == 0x10)) || (iVar11 == 0x11)) {\n        if (arg_8h[1] < 1) {\n            return 1;\n        }\n        if (iVar11 != 10) {\n            if (iVar11 != 0x10) {\n                return 0;\n            }\n            var_14h = 1;\n            _var_1ch = CONCAT44(uStack28, 0xffffffff);\n            var_10h = 0;\n            fcn.0040d350();\n            fcn.0040be20();\n            fcn.004091e0();\n            return 0;\n        }\n        uVar10 = fcn.0040d350();\n        uVar4 = fcn.00442c9f(uVar10);\n        arg_8h = arg_8h & 0xffffff00 | uVar4;\n        uVar10 = fcn.0040d350();\n        fcn.00452b3e(uVar10, arg_8h);\n        return 0;\n    }\n    iVar2 = arg_8h[1];\n    if (iVar2 < 2) {\n        return 1;\n    }\n    // switch table (16 cases) at 0x40bb68\n    switch(iVar11) {\n    case 0:\n        fcn.0040d350();\n        fcn.0040c760();\n        cVar3 = fcn.0040c910();\n        if (cVar3 != '\\0') {\n            puVar5 = fcn.0040c760();\n            fcn.004091e0();\n            *puVar5 = 1;\n            goto code_r0x0040bb0f;\n        }\n        goto code_r0x0040bb00;\n    case 1:\n        fcn.0040d350();\n        fcn.0040c760();\n        cVar3 = fcn.0040c910();\n        if (cVar3 != '\\0') {\n            puVar5 = fcn.0040c760();\n            fcn.004091e0();\n            *puVar5 = 1;\n            goto code_r0x0040bb0f;\n        }\ncode_r0x0040bb00:\n        puVar5 = fcn.0040c760();\n        fcn.004091e0();\n        *puVar5 = 0;\ncode_r0x0040bb0f:\n        *(puVar5 + 8) = 9;\n        fcn.0040bbb0();\n        return 0;\n    case 2:\n        uVar10 = fcn.0040d350();\n        uVar6 = fcn.0040c760();\n        cVar3 = fcn.00467564(uVar6, uVar10);\n        goto code_r0x00429640;\n    case 3:\n        uVar10 = fcn.0040d350();\n        uVar6 = fcn.0040c760();\n        cVar3 = fcn.0046754b(uVar6, uVar10);\n        if (cVar3 == '\\0') {\n            arg_8h = arg_8h._1_3_ << 8;\n            uVar10 = fcn.0040c760();\n            fcn.00452b3e(uVar10, arg_8h);\n        }\n        else {\n            arg_8h = CONCAT31(arg_8h._1_3_, 1);\n            uVar10 = fcn.0040c760();\n            fcn.00452b3e(uVar10, arg_8h);\n        }\n        break;\n    case 4:\n        fcn.0040d350();\n        fcn.0040c760();\n        cVar3 = fcn.0040cda0();\n        if (cVar3 == '\\0') {\n            arg_8h = CONCAT31(arg_8h._1_3_, 1);\n            uVar10 = fcn.0040c760();\n            fcn.00452b3e(uVar10, arg_8h);\n            break;\n        }\n        goto code_r0x004294fd;\n    case 5:\n        fcn.0040c760();\n        cVar3 = fcn.0040cda0();\n        if (cVar3 == '\\0') {\n            arg_8h = arg_8h._1_3_ << 8;\n            uVar10 = fcn.0040c760();\n            fcn.00452b3e(uVar10, arg_8h);\n        }\n        else {\n            puVar5 = fcn.0040c760();\n            fcn.004091e0();\n            *(puVar5 + 8) = 9;\n            *puVar5 = 1;\n        }\n        fcn.0040bbb0();\n        return 0;\n    case 6:\n        uVar10 = fcn.0040d350();\n        uVar6 = fcn.0040c760();\n        cVar3 = fcn.0045e48c(uVar6, uVar10);\n        if (cVar3 == '\\0') {\n            iVar11 = arg_8h._1_3_ << 8;\n            uVar10 = fcn.0040c760();\n            fcn.00452b3e(uVar10, iVar11);\n        }\n        else {\n            arg_8h = CONCAT31(arg_8h._1_3_, 1);\n            uVar10 = fcn.0040c760();\n            fcn.00452b3e(uVar10, arg_8h);\n        }\n        break;\n    case 7:\n        uVar10 = fcn.0040d350();\n        fcn.0040c760();\n        cVar3 = fcn.0040d120(uVar10);\n        if (cVar3 == '\\0') {\n            arg_8h = arg_8h._1_3_ << 8;\n            uVar10 = fcn.0040c760();\n            fcn.00452b3e(uVar10, arg_8h);\n        }\n        else {\n            puVar5 = fcn.0040c760();\n            fcn.004091e0();\n            *(puVar5 + 8) = 9;\n            *puVar5 = 1;\n        }\n        break;\n    case 8:\n        uVar10 = fcn.0040d350();\n        uVar6 = fcn.0040c760();\n        cVar3 = fcn.00442c79(uVar6, uVar10);\ncode_r0x00429640:\n        if (cVar3 == '\\0') {\ncode_r0x004294fd:\n            arg_8h = arg_8h & 0xffffff00;\n            uVar10 = fcn.0040c760();\n            fcn.00452b3e(uVar10, arg_8h);\n        }\n        else {\n            arg_8h = CONCAT31(arg_8h._1_3_, 1);\n            uVar10 = fcn.0040c760();\n            fcn.00452b3e(uVar10, arg_8h);\n        }\n        break;\n    case 9:\n        fcn.0040bfc0();\n        fcn.0040bbb0();\n        return 0;\n    default:\n        goto code_r0x0040b936;\n    case 0xb:\n        if (iVar2 == 2) {\n            iVar11 = *arg_8h;\n        }\n        else if (*(arg_8h + 0xd) == '\\0') {\n            iVar11 = *(arg_8h[2] + 0x10);\n        }\n        else {\n            iVar11 = *(*(arg_8h[2] + 0x10) + 0x10);\n        }\n        fcn.0040b7b0(iVar11);\n        fcn.0040bbb0();\n        return 0;\n    case 0xc:\n        uVar10 = fcn.0040d350();\n        uVar6 = fcn.0040c760();\n        fcn.004529ac(uVar6, uVar10);\n        fcn.0040bbb0();\n        return 0;\n    case 0xd:\n        fcn.0040be20();\n        fcn.0040bbb0();\n        return 0;\n    case 0xe:\n        if (iVar2 == 1) {\n            iVar11 = *arg_8h;\n        }\n        else {\n            iVar11 = arg_8h[2];\n            if (*(arg_8h + 0xd) != '\\0') {\n                iVar11 = *(iVar11 + 0x10);\n            }\n        }\n        fcn.0040bda0(iVar11);\n        fcn.0040bbb0();\n        return 0;\n    case 0xf:\n        fcn.0040d350();\n        fcn.0040bc00();\n        fcn.0040bbb0();\n        uVar7 = fcn.00432a0e(&var_1ch);\n        uVar10 = fcn.0040d350();\n        uVar8 = fcn.00432a0e(uVar10);\n        if ((uVar7 & 0x40060) == 0) {\n            if (((uVar8 & 0x40060) == 0) || ((uVar7 & 0x701f8) == 0)) {\n                if (((uVar7 & 0x204) == 0) || ((uVar8 & 0x701f8) == 0)) {\n                    if (((uVar8 & 0x204) == 0) || ((uVar7 & 0x701f8) == 0)) {\n                        if (((uVar8 & 0x10038) == 0) || ((uVar7 & 0xffff0000) == 0)) {\n                            fVar13 = fcn.0040bd40();\n                            fcn.0040d350(fVar13);\n                            fVar13 = fcn.0040bd40();\n                            fVar13 = fcn.0042616b(fVar13);\n                            dStack16 = fVar13;\n                        }\n                        else {\n                            fVar13 = fcn.0040bd40();\n                            fcn.0040d350(fVar13);\n                            fVar13 = fcn.0040bd40();\n                            fVar13 = fcn.00426148(fVar13);\n                            fVar13 = fcn.0042616b(fVar13);\n                            dStack16 = fVar13;\n                            if ((uVar7 & 0x100000) != 0) {\n                                fcn.004091e0();\n                                _var_1ch = *0x48bdc8;\n                                var_14h = 3;\n                                fVar13 = fcn.0040bd40();\n                                dStack16 = fVar13 * dStack16;\n                            }\n                        }\n                    }\n                    else if (((uVar8 & 0x200) == 0) && ((uVar7 & 0x100000) != 0)) {\n                        if ((uVar7 & 0x10000) != 0) goto code_r0x004296e6;\n                        dStack16 = -*0x4902d0;\n                    }\n                    else {\n                        if ((uVar7 & 0x10038) == 0) goto code_r0x00429700;\n                        dStack16 = 0.0;\n                    }\n                }\n                else {\n                    fcn.0040d350();\n                    fVar13 = fcn.0040bd40();\n                    fVar14 = fcn.00416530(SUB84(fVar13, 0), fVar13 >> 0x20);\n                    fVar13 = 1;\n                    if (((fVar13 < fVar14) << 8 | (fVar13 == fVar14) << 0xe) == 0) {\n                        if ((uVar7 & 0x200) != 0) goto code_r0x00429758;\n                        goto code_r0x00429700;\n                    }\n                    if (fVar13 < fVar14) {\n                        uVar7 = uVar7 & 0x200;\n                        goto code_r0x004296fa;\n                    }\n                    dStack16 = *0x4902d0 * *0x48bd88;\n                }\n            }\n            else if ((uVar7 & 0x100000) == 0) {\n                uVar7 = uVar7 & 0x10038;\ncode_r0x004296fa:\n                if (uVar7 == 0) {\ncode_r0x00429758:\n                    dStack16 = 0.0;\n                }\n                else {\ncode_r0x00429700:\n                    dStack16 = *0x4902d0;\n                }\n            }\n            else if ((uVar7 & 0x10000) == 0) {\n                dStack16 = 0.0;\n                if ((uVar8 & 0x20) != 0) {\ncode_r0x004296e6:\n                    dStack16 = *0x48bd90;\n                }\n            }\n            else {\n                dStack16 = *0x4902d0;\n                if ((uVar8 & 0x20) != 0) {\n                    dStack16 = -*0x4902d0;\n                }\n            }\n        }\n        else {\n            dStack16 = 1.0;\n        }\n        pdVar9 = fcn.0040d350();\n        fcn.004091e0();\n        *pdVar9 = dStack16;\n        *(pdVar9 + 1) = 3;\n        fcn.004091e0();\ncode_r0x0040b936:\n        return 0;\n    }\n    fcn.0040bbb0();\n    return 0;\n}\n",
        "token_count": 3429
    },
    "0040bbb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040bbb0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_EDI + 4) != 1) {\n        if (*(unaff_EDI + 0xd) != '\\0') {\n            iVar1 = *(unaff_EDI + 8);\n            uVar2 = *(iVar1 + 0x10);\n            if (iVar1 != 0) {\n                fcn.004091e0();\n                fcn.0041137c(iVar1);\n            }\n            *(unaff_EDI + 8) = uVar2;\n            *(unaff_EDI + 0xd) = 0;\n        }\n        if (*(unaff_EDI + 0xc) == '\\0') {\n            iVar1 = *(unaff_EDI + 8);\n            uVar2 = *(iVar1 + 0x10);\n            if (iVar1 != 0) {\n                fcn.0044b598(iVar1);\n            }\n            *(unaff_EDI + 4) = *(unaff_EDI + 4) + -1;\n            *(unaff_EDI + 8) = uVar2;\n            *(unaff_EDI + 0xd) = 0;\n            return;\n        }\n        *(unaff_EDI + 0xd) = 1;\n    }\n    *(unaff_EDI + 4) = *(unaff_EDI + 4) + -1;\n    return;\n}\n",
        "token_count": 332
    },
    "0040bd40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.0040bd40(double *param_1)\n\n{\n    int16_t *arg_8h;\n    float10 fVar1;\n    uint var_8h;\n    \n    if (*(param_1 + 1) == 1) {\n        return *param_1;\n    }\n    // switch table (9 cases) at 0x40bd70\n    switch(*(param_1 + 1)) {\n    case 2:\n        return *param_1;\n    case 3:\n        return *param_1;\n    case 4:\n        break;\n    case 9:\n        if (*param_1 != '\\0') {\n            return 1;\n        }\n    default:\n        return 0;\n    case 10:\n        return *(*param_1 + 4);\n    }\n    arg_8h = **(param_1 + 0xc);\n    if ((*arg_8h == 0x30) && ((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)))) {\n        fcn.00433276(arg_8h + 2, &var_8h, 8);\n        return _var_8h;\n    }\n    fVar1 = fcn.00413d9d(arg_8h);\n    return fVar1;\n}\n",
        "token_count": 293
    },
    "0040beb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040beb0(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    \n    if (*(unaff_ESI + 4) == 0) {\n        fcn.00409120(unaff_EDI);\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) + 1;\n        return;\n    }\n    if (*(unaff_ESI + 0xd) != '\\0') {\n        fcn.00409120(unaff_EDI);\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) + 1;\n        *(unaff_ESI + 0xd) = 0;\n        return;\n    }\n    iVar1 = fcn.00411777(0x18);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        fcn.0040bc00();\n    }\n    if (*(unaff_ESI + 8) == 0) {\n        *(iVar1 + 0x10) = 0;\n    }\n    else {\n        *(iVar1 + 0x10) = *(unaff_ESI + 8);\n    }\n    *(unaff_ESI + 4) = *(unaff_ESI + 4) + 1;\n    *(unaff_ESI + 8) = iVar1;\n    return;\n}\n",
        "token_count": 313
    },
    "0040bfc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040bfc0(void)\n\n{\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    // switch table (11 cases) at 0x4287d1\n    switch(*(unaff_ESI + 8)) {\n    case 1:\n    case 2:\n    case 3:\n    case 7:\n    case 9:\n    case 10:\n        goto code_r0x004287b1;\n    case 4:\n    case 5:\n    case 6:\n    case 8:\n        return;\n    case 0xb:\n        if (*(unaff_EDI + 8) == 0xb) {\n            fcn.0040b7b0(unaff_ESI);\n            return;\n        }\ncode_r0x004287b1:\n        fcn.0045e43e(unaff_ESI);\n    default:\n        if ((*(unaff_EDI + 8) != 4) && (*(unaff_EDI + 0xc) == 0)) {\n            fcn.00452c26(unaff_EDI);\n        }\n        fcn.0040bff0(*(unaff_EDI + 0xc));\n        return;\n    }\n}\n",
        "token_count": 265
    },
    "0040c110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040c110(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (*(unaff_ESI + 9) != '\\0') {\n        iVar1 = *(unaff_ESI[1] + 4);\n        fcn.0041137c(unaff_ESI[1]);\n        unaff_ESI[1] = iVar1;\n        *(unaff_ESI + 9) = 0;\n    }\n    if (*(unaff_ESI + 2) != '\\0') {\n        *unaff_ESI = *unaff_ESI + -1;\n        *(unaff_ESI + 9) = 1;\n        return;\n    }\n    iVar1 = *(unaff_ESI[1] + 4);\n    fcn.0041137c(unaff_ESI[1]);\n    *unaff_ESI = *unaff_ESI + -1;\n    unaff_ESI[1] = iVar1;\n    *(unaff_ESI + 9) = 0;\n    return;\n}\n",
        "token_count": 233
    },
    "0040c1c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c1c0(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint arg_8h_00;\n    int32_t iVar8;\n    ulong uVar9;\n    uint *in_stack_ffffff68;\n    uint *puVar10;\n    uint var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_64h;\n    int32_t var_5ch;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t *var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint uStack36;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    var_8h = 1;\n    fcn.0040df00();\n    var_24h = 0;\n    uVar7 = var_24h;\n    var_24h = 0;\n    var_18h = 0;\n    var_34h = 0;\n    var_28h = 0;\n    var_10h = 0;\n    var_70h = *arg_10h + -1;\n    var_1ch = 1;\n    var_2ch = 1;\n    piVar1 = *(*(arg_ch + 4) + var_8h * 4);\n    var_74h = 3;\n    if (*(piVar1 + 2) != 0x33) {\n        var_24h = uVar7;\n        fcn.0045e1ee(arg_8h, 0x94, *(piVar1 + 10));\n        goto code_r0x0042c772;\n    }\n    puVar10 = *piVar1;\n    var_44h = *puVar10;\n    var_40h = puVar10[1];\n    var_3ch = puVar10[2];\n    var_38h = puVar10[3];\n    *var_38h = *var_38h + 1;\n    var_8h = var_8h + 1;\n    puVar10 = 0x40c248;\n    fcn.0040c560(&fcn.0040c1c0::var_ch, &fcn.0040c1c0::var_10h);\n    if (var_ch == 0) {\n        fcn.004091e0();\n        var_1ch = 1;\n        var_24h = 0;\n        fcn.00401990();\n        puVar10 = &fcn.0040c1c0::var_10h;\n        in_stack_ffffff68 = &fcn.0040c1c0::var_ch;\n        fcn.0040c560(in_stack_ffffff68, puVar10);\ncode_r0x0040c28b:\n        if ((*(var_ch + 8) == 5) && (*(*(*(arg_ch + 4) + var_8h * 4) + 8) == 0x4e)) {\n            puVar10 = NULL;\n            in_stack_ffffff68 = &fcn.0040c1c0::var_ch;\n            iVar5 = fcn.0040c780(arg_8h, in_stack_ffffff68, 0);\n            if (iVar5 == 0) goto code_r0x0040c295;\n        }\n        else {\ncode_r0x0040c295:\n            iVar5 = var_ch;\n            piVar1 = *(*(arg_ch + 4) + var_8h * 4);\n            if (*(piVar1 + 2) == 0) {\n                if (*piVar1 != 0x11) {\n                    fcn.0045e1ee(arg_8h, 0x94, *(piVar1 + 10));\n                    goto code_r0x0042c46f;\n                }\n                var_8h = var_8h + 1;\n                iVar8 = fcn.0040aa20(arg_ch, &fcn.0040c1c0::var_8h, &fcn.0040c1c0::var_24h, 0xffffffff);\n                if (iVar8 != 0) goto code_r0x0042c46f;\n                if (var_1ch == 8) {\n                    fcn.00409120(&fcn.0040c1c0::var_24h);\n                }\n                else if (var_1ch == 5) {\n                    fcn.0045e408(&fcn.0040c1c0::var_24h);\n                    fcn.0040d260();\n                    uVar9 = fcn.004329a8(arg_8h_00, 0);\n                    if (0 < uVar9) {\n                        uVar9 = fcn.004329a8(uVar9 >> 0x20, 1);\n                        if ((0 < uVar9) && (iVar5 = fcn.0040d1a0(1, 0),  iVar5 != 0)) {\n                            uVar7 = fcn.0040d1a0(0, 0);\n                            fcn.00409120(uVar7);\n                            fcn.00409120(uVar9 >> 0x20);\n                            iVar5 = var_ch;\n                            goto code_r0x0040c366;\n                        }\n                    }\n                    fcn.0040e8e0();\n                    fcn.004091e0();\n                    var_5ch = 1;\n                    var_64h = 1;\n                    fcn.004091e0();\n                    var_4ch = 1;\n                    var_54h = 0xffffffff;\n                    iVar5 = var_ch;\n                }\n                else {\n                    iVar5 = fcn.00451712(arg_8h, 0xa9, 0, L\"Variable is not of type \\'Object\\'.\", 1);\n                    if (iVar5 != 0) goto code_r0x0042c765;\n                    fcn.004091e0();\n                    var_2ch = 1;\n                    var_34h = 1;\n                    iVar5 = var_ch;\n                }\ncode_r0x0040c366:\n                iVar8 = *(*(arg_ch + 4) + var_8h * 4);\n                if (*(iVar8 + 8) != 0x7f) {\n                    fcn.0045e1ee(arg_8h, 0x72, *(iVar8 + 10));\n                    fcn.00402260();\n                    fcn.004091e0();\n                    fcn.004091e0();\n                    fcn.004520e5(&fcn.0040c1c0::var_74h);\n                    return;\n                }\n                iVar8 = 0;\n                bVar3 = false;\n                while( true ) {\n                    iVar2 = *arg_10h;\n                    *arg_10h = iVar2 + 1;\n                    if ((((*0x4a90f8 < iVar2) || (iVar2 < 1)) || (iVar6 = iVar2 * 0x10 + *0x4a912c,  iVar6 == 0)) ||\n                       (bVar3)) break;\n                    piVar1 = **(iVar6 + 4);\n                    if (*(piVar1 + 2) == 0) {\n                        iVar6 = *piVar1;\n                        if (iVar6 == 0xd) {\n                            iVar8 = iVar8 + 1;\n                        }\n                        else if (iVar6 == 0xe) {\n                            if (iVar8 == 0) {\n                                bVar3 = true;\n                                var_6ch = iVar2;\n                            }\n                            else {\n                                iVar8 = iVar8 + -1;\n                            }\n                        }\n                    }\n                }\n                iVar8 = fcn.0040c8f0();\n                if (iVar8 != 1) {\n                    if (*(iVar5 + 8) == 8) {\n                        if (var_5ch != 5) {\n                            fcn.004091e0();\n                            var_2ch = 1;\n                            var_34h = 0;\n                            fcn.004091e0();\n                            var_24h = 0;\n                            var_1ch = 1;\n                            fcn.0046c0ef(arg_8h, var_ch, &fcn.0040c1c0::var_34h, &fcn.0040c1c0::var_24h);\n                            cVar4 = fcn.004329dd(&fcn.0040c1c0::var_34h);\n                            if (cVar4 == '\\0') {\n                                fcn.0040e8e0();\n                                fcn.004091e0();\n                                var_2ch = 1;\n                                var_34h = 0;\n                                fcn.004091e0();\n                                var_1ch = 1;\n                                var_24h = 0;\n                                *arg_10h = var_6ch + 1;\ncode_r0x0042c46f:\n                                fcn.00402260();\n                                fcn.004091e0();\n                                fcn.004091e0();\n                                fcn.004520e5(&fcn.0040c1c0::var_74h);\n                                return;\n                            }\n                            fcn.00409120(&fcn.0040c1c0::var_24h);\n                            fcn.00409120(&fcn.0040c1c0::var_34h);\n                            fcn.0040d150();\n                            *arg_10h = var_70h + 1;\n                            goto code_r0x0040c43f;\n                        }\n                    }\n                    else if (var_5ch != 5) {\n                        fcn.004091e0();\n                        var_24h = 0;\n                        uStack36 = 0;\n                        var_1ch = 3;\n                        cVar4 = fcn.0040c910();\n                        if (cVar4 == '\\0') {\n                            cVar4 = fcn.0040c910();\n                            if (cVar4 == '\\0') {\n                                fcn.0040d150();\n                                *arg_10h = var_70h + 1;\n                            }\n                            else {\n                                *arg_10h = var_6ch + 1;\n                            }\n                        }\n                        else {\n                            cVar4 = fcn.0046754b(var_ch, &fcn.0040c1c0::var_64h);\n                            if (cVar4 == '\\0') {\n                                *arg_10h = var_6ch + 1;\n                            }\n                            else {\n                                fcn.0040d150();\n                                *arg_10h = var_70h + 1;\n                            }\n                        }\n                        goto code_r0x0040c43f;\n                    }\n                    fcn.004091e0();\n                    var_4ch = 1;\n                    var_54h = 0;\n                    fcn.0040d150();\n                    *arg_10h = var_70h + 1;\ncode_r0x0040c43f:\n                    fcn.00402260();\n                    fcn.004091e0();\n                    fcn.004091e0();\n                    fcn.004091e0();\n                    fcn.004091e0();\n                    return;\n                }\n                *arg_10h = var_6ch + 1;\n            }\n            else {\n                var_8h = var_8h + 1;\n                iVar5 = fcn.0040aa20(arg_ch, &fcn.0040c1c0::var_8h, &fcn.0040c1c0::var_24h, 0xffffffff);\n                if (iVar5 == 0) {\n                    fcn.00409120(&fcn.0040c1c0::var_24h);\n                    piVar1 = *(*(arg_ch + 4) + var_8h * 4);\n                    if ((*(piVar1 + 2) != 0) || (*piVar1 != 0xf)) {\n                        in_stack_ffffff68 = 0x94;\n                        goto code_r0x0042c765;\n                    }\n                    var_8h = var_8h + 1;\n                    iVar5 = fcn.0040aa20(arg_ch, &fcn.0040c1c0::var_8h, &fcn.0040c1c0::var_24h, 0xffffffff);\n                    if (iVar5 == 0) {\n                        fcn.00409120(&fcn.0040c1c0::var_24h);\n                        piVar1 = *(*(arg_ch + 4) + var_8h * 4);\n                        if ((*(piVar1 + 2) == 0) && (*piVar1 == 0x10)) {\n                            var_8h = var_8h + 1;\n                            iVar5 = fcn.0040aa20(arg_ch, &fcn.0040c1c0::var_8h, &fcn.0040c1c0::var_24h, 0xffffffff);\n                            if (iVar5 != 0) goto code_r0x0042c76a;\n                            fcn.00409120(&fcn.0040c1c0::var_24h);\n                        }\n                        else {\n                            fcn.004091e0();\n                            var_4ch = 1;\n                            var_54h = 1;\n                        }\n                        if (*(var_ch + 8) == 4) {\n                            fcn.0045297a(var_ch);\n                        }\n                        iVar5 = var_ch;\n                        if (var_5ch == 4) {\n                            fcn.0045297a(&fcn.0040c1c0::var_64h);\n                            iVar5 = var_ch;\n                        }\n                        goto code_r0x0040c366;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        if ((var_10h & 0x100) == 0) goto code_r0x0040c28b;\n        puVar10 = *(*(*(arg_ch + 4) + -4 + var_8h * 4) + 10);\n        in_stack_ffffff68 = 0xa3;\ncode_r0x0042c765:\n        fcn.0045e1ee(arg_8h, in_stack_ffffff68, puVar10);\n    }\ncode_r0x0042c76a:\n    fcn.00402260();\ncode_r0x0042c772:\n    fcn.004091e0();\n    fcn.004091e0();\n    fcn.004520e5(&fcn.0040c1c0::var_74h);\n    return;\n}\n",
        "token_count": 3348
    },
    "0040c490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c490(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint in_stack_ffffffac;\n    uint var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    fcn.0040c560(&var_8h, &var_ch);\n    if (var_8h == 0) {\n        fcn.0045e1ee(arg_8h, 0x79, *(*(*(arg_ch + 4) + *in_EAX * 4) + 10));\n    }\n    else {\n        *in_EAX = *in_EAX + 1;\n        if (((*(var_8h + 8) != 5) || (*(*(*(arg_ch + 4) + *in_EAX * 4) + 8) != 0x4e)) ||\n           (iVar2 = fcn.0040c780(arg_8h, &var_8h, 1),  iVar2 == 0)) {\n            iVar2 = var_8h;\n            if (*(var_8h + 8) == 8) {\n                fcn.0040bc00();\n                iVar2 = fcn.0047ccdd(arg_ch, in_EAX, arg_10h, in_stack_ffffffac);\n                if (iVar2 != 0) {\n                    fcn.0045e1ee(arg_8h, 0xaa, *(*(*(arg_ch + 4) + *in_EAX * 4) + 10));\n                    return 1;\n                }\n            }\n            else {\n                if ((*(var_8h + 8) != 5) && (iVar4 = *(*(arg_ch + 4) + *in_EAX * 4),  *(iVar4 + 8) == 0x4e)) {\n                    fcn.0045e1ee(arg_8h, 0x7c, *(iVar4 + 10));\n                    return 1;\n                }\n                fcn.00409120(var_8h);\n                if (((*(arg_8h + 0xfd) != '\\0') || (*(arg_8h + 0xfe) != '\\0')) &&\n                   (cVar1 = fcn.0044357d(arg_10h),  cVar1 != '\\0')) {\n                    fcn.0040bc00();\n                    if (*(arg_8h + 0xfd) != '\\0') {\n                        fcn.00457977(&var_1ch);\n                        uVar3 = fcn.00452e81(&var_1ch);\n                        iVar4 = fcn.00411361(uVar3);\n                        if (iVar4 == 0) {\n                            fcn.00409120(iVar2);\n                        }\n                    }\n                    if (*(arg_8h + 0xfe) != '\\0') {\n                        fcn.00472042(arg_8h, &var_1ch);\n                        uVar3 = fcn.00452e81(&var_1ch);\n                        iVar4 = fcn.00411361(uVar3);\n                        if (iVar4 == 0) {\n                            fcn.00409120(iVar2);\n                        }\n                    }\n                    fcn.00409120(&var_1ch);\n                    fcn.004091e0();\n                }\n            }\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 796
    },
    "0040c760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040c760(void)\n\n{\n    uint *in_EAX;\n    \n    if (in_EAX[1] == 2) {\n        return *in_EAX;\n    }\n    if (*(in_EAX + 0xd) == '\\0') {\n        return *(in_EAX[2] + 0x10);\n    }\n    return *(*(in_EAX[2] + 0x10) + 0x10);\n}\n",
        "token_count": 99
    },
    "0040ca30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ca30(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    if (*(unaff_EDI + 9) != '\\0') {\n        iVar1 = unaff_EDI[1];\n        iVar2 = *(iVar1 + 0x30);\n        if (iVar1 != 0) {\n            fcn.00452103(iVar1);\n        }\n        unaff_EDI[1] = iVar2;\n        *(unaff_EDI + 9) = 0;\n    }\n    if (*(unaff_EDI + 2) == '\\0') {\n        iVar1 = unaff_EDI[1];\n        iVar2 = *(iVar1 + 0x30);\n        if (iVar1 != 0) {\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.0041137c(iVar1);\n        }\n        unaff_EDI[1] = iVar2;\n        *(unaff_EDI + 9) = 0;\n    }\n    else {\n        *(unaff_EDI + 9) = 1;\n    }\n    *unaff_EDI = *unaff_EDI + -1;\n    return;\n}\n",
        "token_count": 284
    },
    "0040cf70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040cf70(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    char cVar10;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t **var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_10h = 1;\n    iVar7 = fcn.0040cf10(arg_8h, &var_5h);\n    if (iVar7 == 0) {\n        iVar7 = *(arg_ch + 4);\n        piVar3 = *(iVar7 + var_10h * 4);\n        if ((*(piVar3 + 2) == 0) && (*piVar3 == 5)) {\n            var_10h = var_10h + 1;\n            if (*(*(iVar7 + var_10h * 4) + 8) == 0x7f) {\n                bVar6 = false;\n                bVar5 = false;\n                fcn.0040df00();\n                iVar7 = *arg_10h;\n                var_58h = iVar7 + -1;\n                var_5ch = 0;\n                if (var_5h == '\\0') {\n                    iVar7 = 0;\n                }\n                var_ch = 0;\n                cVar10 = var_5h;\n                do {\n                    do {\n                        while( true ) {\n                            while( true ) {\n                                do {\n                                    iVar9 = *arg_10h;\n                                    *arg_10h = iVar9 + 1;\n                                    if ((((*0x4a90f8 < iVar9) || (iVar9 < 1)) ||\n                                        (iVar8 = iVar9 * 0x10 + *0x4a912c,  iVar8 == 0)) || (bVar5)) {\n                                        *arg_10h = iVar7;\n                                        fcn.0040d150();\n                                        fcn.004091e0();\n                                        fcn.004091e0();\n                                        return;\n                                    }\n                                    var_14h = 0;\n                                } while (*(**(iVar8 + 4) + 2) != 0);\n                                iVar4 = ***(iVar8 + 4);\n                                if (iVar4 != 8) break;\n                                if (var_ch == 0) {\n                                    bVar5 = true;\n                                    var_54h = iVar9;\n                                    if ((cVar10 == '\\0') && (!bVar6)) {\n                                        iVar7 = iVar9;\n                                    }\n                                }\n                                else {\n                                    var_ch = var_ch + -1;\n                                }\n                            }\n                            if (iVar4 == 4) break;\n                            if (iVar4 == 6) {\n                                if (var_ch == 0) {\n                                    if (bVar6) {\n                                        fcn.0045e1ee(arg_8h, 0x76, 0xffffffff);\n                                        fcn.004520e5(&var_5ch);\n                                        return;\n                                    }\n                                    bVar6 = true;\n                                    if (cVar10 == '\\0') {\n                                        iVar7 = iVar9 + 1;\n                                    }\n                                }\n                            }\n                            else if ((iVar4 == 7) && (var_ch == iVar4 + -7)) {\n                                if (bVar6) {\n                                    fcn.0045e1ee(arg_8h, 0x76, 0xffffffff);\n                                    fcn.004520e5(&var_5ch);\n                                    return;\n                                }\n                                if (cVar10 == '\\0') {\n                                    *(arg_8h + 0xf4) = iVar9;\n                                    var_14h = 1;\n                                    iVar9 = fcn.0040cf10(arg_8h, &var_5h);\n                                    if (iVar9 != 0) {\n                                        fcn.004520e5(&var_5ch);\n                                        return;\n                                    }\n                                    ppiVar1 = *(iVar8 + 4) + var_14h * 4;\n                                    piVar3 = *ppiVar1;\n                                    if ((*(piVar3 + 2) != 0) || (*piVar3 != 5)) {\n                                        *(arg_8h + 0xf4) = *arg_10h + -1;\n                                        fcn.0045e1ee(arg_8h, 0xa1, *(*(*(iVar8 + 4) + var_14h * 4) + 10));\n                                        fcn.004520e5(&var_5ch);\n                                        return;\n                                    }\n                                    if (*(ppiVar1[1] + 2) != 0x7f) {\n                                        *(arg_8h + 0xf4) = *arg_10h + -1;\n                                        fcn.0045e1ee(arg_8h, 0x72, *(*(*(iVar8 + 4) + var_14h * 4) + 10));\n                                        fcn.004520e5(&var_5ch);\n                                        return;\n                                    }\n                                    cVar10 = var_5h;\n                                    if (var_5h != '\\0') {\n                                        iVar7 = *arg_10h;\n                                    }\n                                }\n                            }\n                        }\n                        var_14h = 1;\n                    } while (*(iVar8 + 8) < 2);\n                    do {\n                        var_18h = *(iVar8 + 4) + var_14h * 4;\n                        if (((*(*var_18h + 2) == 0) && (**var_18h == 5)) && (*(var_18h[1] + 2) == 0x7f)) {\n                            var_ch = var_ch + 1;\n                            break;\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h < *(iVar8 + 8));\n                } while( true );\n            }\n            if (var_5h != '\\0') {\n                var_28h = 0x484adc;\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                iVar2 = *(*(iVar7 + var_10h * 4) + 8);\n                while (iVar2 != 0x7f) {\n                    var_10h = var_10h + 1;\n                    fcn.00402a30();\n                    iVar2 = *(*(*(arg_ch + 4) + var_10h * 4) + 8);\n                }\n                fcn.00402a30();\n                fcn.0040e9a0(&var_28h, arg_10h);\n                var_28h = 0x484adc;\n                fcn.0040d7d0();\n                fcn.0041137c(var_24h);\n            }\n        }\n        else {\n            fcn.0045e1ee(arg_8h, 0xa1, *(piVar3 + 10));\n        }\n    }\n    return;\n}\n",
        "token_count": 1667
    },
    "0040d110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040d110(double *param_1)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    \n    if (*(param_1 + 1) == 9) {\n        return *param_1;\n    }\n    uVar2 = *(param_1 + 1) - 1;\n    // switch table (11 cases) at 0x42688c\n    switch(uVar2) {\n    case 0:\n        return uVar2 & 0xffffff00 | *param_1 != 0;\n    case 1:\n        uVar2 = *param_1 | *(param_1 + 4);\n        if (uVar2 != 0) {\ncode_r0x00426867:\n            return CONCAT31(uVar2 >> 8, 1);\n        }\n        break;\n    case 2:\n        dVar1 = *param_1;\n        uVar2 = uVar2 & 0xffff0000 | (0.0 < dVar1) << 8 | (dVar1 == 0.0) << 0xe;\n        if (dVar1 != 0.0) goto code_r0x00426867;\n        break;\n    case 3:\n        uVar2 = fcn.004362d6(*(param_1 + 0xc));\n        return uVar2 & 0xffffff00 | uVar2 == '\\0';\n    case 6:\n        return *param_1 != 0;\n    case 10:\n        return uVar2 & 0xffffff00 | **param_1 != 0;\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 363
    },
    "0040d150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040d150(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    \n    if (*(unaff_EBX + 9) != '\\0') {\n        fcn.0047230b(unaff_EBX[1], in_EAX);\n        *unaff_EBX = *unaff_EBX + 1;\n        *(unaff_EBX + 9) = 0;\n        return;\n    }\n    iVar1 = fcn.00411777(0x38);\n    if (iVar1 != 0) {\n        fcn.0040ced0();\n        *(iVar1 + 0x30) = unaff_EBX[1];\n        *unaff_EBX = *unaff_EBX + 1;\n        unaff_EBX[1] = iVar1;\n        return;\n    }\n    *0x30 = unaff_EBX[1];\n    *unaff_EBX = *unaff_EBX + 1;\n    unaff_EBX[1] = 0;\n    return;\n}\n",
        "token_count": 236
    },
    "0040d1a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d1a0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t **unaff_EDI;\n    uint var_4h;\n    \n    if (unaff_EDI[2] != 0x5) {\n        return 0;\n    }\n    if (arg_8h == '\\0') {\n        fcn.0040e9e0();\n    }\n    if (arg_ch != 0) {\n        if (unaff_EDI[2] != 0x5) {\n            fcn.0040eb20();\n        }\n        (*unaff_EDI)[0x84] = 0;\n        if (0 < arg_ch) {\n            do {\n                fcn.0040d260();\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n        }\n    }\n    iVar1 = fcn.0040d290();\n    if (iVar1 < 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (*(**unaff_EDI + iVar1 * 4) == 0) {\n            iVar2 = fcn.00411777(0x10);\n            if (iVar2 == 0) {\n                *(**unaff_EDI + iVar1 * 4) = 0;\n                return *(**unaff_EDI + iVar1 * 4);\n            }\n            uVar3 = fcn.0040d530();\n            *(**unaff_EDI + iVar1 * 4) = uVar3;\n            return *(**unaff_EDI + iVar1 * 4);\n        }\n        uVar3 = *(**unaff_EDI + iVar1 * 4);\n    }\n    return uVar3;\n}\n",
        "token_count": 402
    },
    "0040d350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040d350(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[1] != 1) {\n        iVar1 = in_EAX[2];\n        if (*(in_EAX + 0xd) != '\\0') {\n            iVar1 = *(iVar1 + 0x10);\n        }\n        return iVar1;\n    }\n    return *in_EAX;\n}\n",
        "token_count": 101
    },
    "0040d460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d460(uint lpMsg)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    \n    iVar4 = *(in_ECX + 0x28);\n    if (iVar4 != -1) {\n        if (iVar4 < *(in_ECX + 100)) {\n            ppiVar1 = *(in_ECX + 0x60) + iVar4 * 4;\n            piVar2 = *ppiVar1;\n            if ((*piVar2 != 0) && (*(*piVar2 + 0x18) != 0)) {\n                puVar3 = **ppiVar1;\n                iVar4 = (*_sym.imp.USER32.dll_TranslateAcceleratorW)(*puVar3, puVar3[6], lpMsg);\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                return 1;\n            }\n        }\n        *(in_ECX + 0x28) = 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 246
    },
    "0040d480": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d480(int32_t *lpMsg)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    uint32_t uVar5;\n    \n    if (*lpMsg == 0) {\n        return 0;\n    }\n    uVar1 = *(unaff_EBX + 100);\n    if (uVar1 != 0) {\n        uVar5 = 0;\n        do {\n            piVar2 = *(*(unaff_EBX + 0x60) + uVar5 * 4);\n            if (*piVar2 != 0) {\n                iVar4 = *(*piVar2 + 0x1d0);\n                if ((iVar4 != 0) && (*(iVar4 + 0x10) != 0)) {\n                    iVar4 = (**(**(iVar4 + 0x10) + 0x14))(*(iVar4 + 0x10), lpMsg);\n                    if (iVar4 == 0) {\n                        return 1;\n                    }\n                    iVar3 = fcn.00431265(*lpMsg);\n                    if ((iVar3 != *0x4974e0) && (iVar3 != *0x4974e4)) {\n                        return 0;\n                    }\n                }\n                iVar4 = (*_sym.imp.USER32.dll_IsDialogMessageW)(***(*(unaff_EBX + 0x60) + uVar5 * 4), lpMsg);\n                if (iVar4 != 0) {\n                    return 1;\n                }\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 388
    },
    "0040d6e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040d6e0(void)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch;\n    uint *in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040bf10();\n    iVar3 = 1;\n    do {\n        do {\n            iVar2 = iVar3;\n            if (((*0x4a90f8 < iVar2) || (iVar3 = iVar2 + 1,  iVar2 < 1)) ||\n               (arg_8h = iVar2 * 0x10 + *0x4a912c,  arg_8h == 0)) {\n                fcn.00410cd0();\n                fcn.00402260();\n                return 0;\n            }\n            piVar1 = **(arg_8h + 4);\n            *0x4a826c = iVar2;\n            var_4h = iVar3;\n        } while ((*(piVar1 + 2) != 0) || (*piVar1 != 0x20));\n        piVar1 = (*(arg_8h + 4))[1];\n        if (*(piVar1 + 2) != 0x34) {\ncode_r0x004281f6:\n            arg_ch = 0x69;\ncode_r0x00428203:\n            fcn.0045e1ee(0x4a8178, arg_ch, in_stack_ffffffbc);\n            break;\n        }\n        fcn.0040e410(*piVar1);\n        fcn.00401c30();\n        in_stack_ffffffbc = 0x40d76e;\n        iVar3 = fcn.0040f4a0(in_stack_ffffffc0);\n        if (iVar3 != 0) {\n            in_stack_ffffffbc = 0xffffffff;\n            arg_ch = 0x84;\n            goto code_r0x00428203;\n        }\n        if (*(*(*(arg_8h + 4) + 8) + 8) != 0x47) goto code_r0x004281f6;\n        in_stack_ffffffbc = &fcn.0040d6e0::var_4h;\n        var_8h = 3;\n        iVar2 = fcn.0040db00(arg_8h, &fcn.0040d6e0::var_18h, in_stack_ffffffbc);\n        iVar3 = var_4h;\n    } while (iVar2 == 0);\n    fcn.00402260();\n    return 1;\n}\n",
        "token_count": 603
    },
    "0040d7d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040d7d0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if (*(unaff_EBX + 8) != 0) {\n        uVar3 = 0;\n        do {\n            piVar1 = *(*(unaff_EBX + 4) + uVar3 * 4);\n            if (piVar1 != NULL) {\n                if (((*(piVar1 + 2) < 0x40) && (0x2f < *(piVar1 + 2))) && (iVar2 = *piVar1,  iVar2 != 0)) {\n                    fcn.00402260();\n                    fcn.0041137c(iVar2);\n                }\n                fcn.0041137c(piVar1);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(unaff_EBX + 8));\n    }\n    *(unaff_EBX + 8) = 0;\n    return;\n}\n",
        "token_count": 250
    },
    "0040d830": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040d830(void)\n\n{\n    char cVar1;\n    char cVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_438h;\n    uint lpPathName;\n    uint var_14h;\n    char var_2h;\n    uint var_1h;\n    \n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpPathName);\n    fcn.00401f10(in_EAX);\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_MessageBoxA)\n                  (0, \n                   \"This is a compiled AutoIt script. AV researchers please email avsupport@autoitscript.com for support.\"\n                   , 0x483d52, 0x10);\n        return;\n    }\n    if (*0x4a7f54 == 0) {\n        *0x4974f4 = 0xffffffff;\n    }\n    else {\n        var_1h._0_1_ = '\\0';\n        if (*0x4a7f54 == 1) {\n            var_2h = '\\0';\n            fcn.00403d00(1, 0xffffffff);\n            *0x4a90eb = *0x4974e8;\n            cVar2 = var_2h;\n        }\n        else {\n            cVar1 = fcn.0040f6f0(0x4a7f54);\n            cVar2 = *0x4a90e9;\n            if (cVar1 == '\\0') {\n                *0x4974f4 = 1;\n                goto code_r0x0040d939;\n            }\n            *0x4a7f58 = *0x4a90e8;\n            (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(0x4a7f6c, 0x104, &var_438h, 0x4a7f50);\n        }\n        iVar3 = fcn.00401460(0x4a7f6c, *0x4a7f54);\n        if (iVar3 != 0) {\n            fcn.0040ed80();\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpPathName);\n            *0x4974f4 = 1;\n            return;\n        }\n        if ((cVar2 == '\\x01') && (cVar2 = fcn.00433597(),  cVar2 == '\\0')) {\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &var_438h, 0x104);\n            if (var_1h == '\\0') {\n                uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0x483dc4, &var_438h);\n                (*_sym.imp.SHELL32.dll_ShellExecuteW)(uVar4);\n            }\n            else {\n                fcn.00401c30();\n                fcn.0040d510();\n                fcn.0040d510();\n                uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0x483dc4, &var_438h, var_14h, &lpPathName, 1);\n                (*_sym.imp.SHELL32.dll_ShellExecuteW)(uVar4);\n                fcn.00402260();\n            }\n        }\n        else {\n            fcn.00410540();\n            fcn.00410720();\n            if (*0x4a7f58 == '\\0') {\n                fcn.0040e430();\n            }\n            fcn.00409480(1);\n            if (*0x4a7f58 == '\\0') {\n                fcn.00401000();\n            }\n        }\n        fcn.0040ed80();\n    }\ncode_r0x0040d939:\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n    return;\n}\n",
        "token_count": 905
    },
    "0040db00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040db00(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    uint32_t uVar7;\n    uint var_54h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    fcn.0040bf10();\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_10h = 0;\n    iVar5 = *arg_10h;\n    var_24h = 0x483f6c;\n    var_ch = -1;\n    fcn.0040bf10();\n    iVar2 = *(arg_8h + 4);\n    iVar1 = *(*(iVar2 + *in_EAX * 4) + 8);\n    iVar6 = iVar5 + -1;\n    iVar5 = var_14h;\n    do {\n        var_14h = iVar6;\n        if (iVar1 == 0x48) {\n            *in_EAX = *in_EAX + 1;\n            var_14h = iVar5;\n            if (*(*(*(arg_8h + 4) + *in_EAX * 4) + 8) == 0x7f) {\n                iVar5 = fcn.0040f620();\n                if (iVar5 == 0) {\n                    fcn.0040e410(arg_ch);\n                    if (var_ch == -1) {\n                        var_ch = var_10h;\n                    }\n                    fcn.0040ed20();\n                    fcn.00402260();\n                    fcn.00410d40();\n                    fcn.00402260();\n                    return 0;\n                }\n            }\n            else {\ncode_r0x004281ca:\n                fcn.0045e1ee(0x4a8178, unaff_ESI, unaff_EBX);\n            }\n            fcn.00402260();\n            fcn.00410d40();\n            fcn.00402260();\n            return 1;\n        }\n        iVar1 = *(*(iVar2 + *in_EAX * 4) + 8);\n        var_5h._0_1_ = '\\0';\n        while (iVar1 == 0) {\n            iVar5 = *in_EAX;\n            iVar6 = **(iVar2 + iVar5 * 4);\n            if (iVar6 == 0x24) {\n                var_5h._0_1_ = '\\x01';\n            }\n            else if (iVar6 != 0x1e) {\n                iVar5 = *(*(arg_8h + 4) + iVar5 * 4);\n                goto code_r0x00428132;\n            }\n            *in_EAX = iVar5 + 1;\n            iVar1 = *(*(iVar2 + (iVar5 + 1) * 4) + 8);\n        }\n        piVar3 = *(iVar2 + *in_EAX * 4);\n        if (*(piVar3 + 2) != 0x33) {\n            iVar1 = *(*(*(arg_8h + 4) + *in_EAX * 4) + 10);\ncode_r0x004281c5:\n            unaff_EBX = iVar1;\n            unaff_ESI = 0x91;\n            goto code_r0x004281ca;\n        }\n        if (&var_34h != *piVar3) {\n            fcn.00403ee0();\n        }\n        uVar7 = 0;\n        if (var_1ch != 0) {\n            do {\n                cVar4 = fcn.0040df20();\n                if (cVar4 != '\\0') break;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 < var_1ch);\n        }\n        if (uVar7 != var_1ch) {\n            unaff_ESI = 0xab;\n            goto code_r0x004281ca;\n        }\n        fcn.0040da60();\n        *in_EAX = *in_EAX + 1;\n        iVar6 = *in_EAX;\n        iVar2 = *(arg_8h + 4);\n        if ((*(*(iVar2 + iVar6 * 4) + 8) == 0x41) && (var_5h == '\\0')) {\n            iVar1 = *(*(iVar2 + 4 + iVar6 * 4) + 8);\n            *in_EAX = iVar6 + 1;\n            if ((iVar1 == 0x49) || (iVar1 == 0x4a)) {\n                *in_EAX = iVar6 + 2;\n            }\n            cVar4 = fcn.00442f7e(*(iVar2 + *in_EAX * 4));\n            if (cVar4 == '\\0') {\ncode_r0x00428191:\n                unaff_EBX = -1;\n                unaff_ESI = 0x69;\n                goto code_r0x004281ca;\n            }\n            iVar6 = *in_EAX + 1;\n            *in_EAX = iVar6;\n            if (var_ch == -1) {\n                var_ch = var_10h;\n            }\n        }\n        else if (var_ch != -1) goto code_r0x00428191;\n        iVar5 = *(iVar2 + iVar6 * 4);\n        iVar1 = *(iVar5 + 8);\n        var_10h = var_10h + 1;\n        if ((iVar1 != 0x40) && (iVar1 != 0x48)) {\ncode_r0x00428132:\n            unaff_EBX = *(iVar5 + 10);\n            unaff_ESI = 0x69;\n            goto code_r0x004281ca;\n        }\n        if (iVar1 == 0x40) {\n            iVar5 = *(iVar2 + 4 + iVar6 * 4);\n            *in_EAX = iVar6 + 1;\n            if (*(iVar5 + 8) == 0x48) {\n                iVar1 = *(iVar5 + 10);\n                goto code_r0x004281c5;\n            }\n        }\n        iVar1 = *(*(iVar2 + *in_EAX * 4) + 8);\n        iVar6 = var_14h;\n        iVar5 = var_14h;\n    } while( true );\n}\n",
        "token_count": 1555
    },
    "0040de00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040de00(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    if (*(unaff_EDI + 9) != '\\0') {\n        iVar1 = unaff_EDI[1];\n        iVar2 = *(iVar1 + 0x38);\n        if (iVar1 != 0) {\n            fcn.0044c974(iVar1);\n        }\n        unaff_EDI[1] = iVar2;\n        *(unaff_EDI + 9) = 0;\n    }\n    if (*(unaff_EDI + 2) == '\\0') {\n        iVar1 = unaff_EDI[1];\n        iVar2 = *(iVar1 + 0x38);\n        if (iVar1 != 0) {\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.0041137c(iVar1);\n        }\n        unaff_EDI[1] = iVar2;\n        *(unaff_EDI + 9) = 0;\n    }\n    else {\n        *(unaff_EDI + 9) = 1;\n    }\n    *unaff_EDI = *unaff_EDI + -1;\n    return;\n}\n",
        "token_count": 285
    },
    "0040e210": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e210(void)\n\n{\n    uint liDistanceToMove;\n    uint lpNewFilePointer;\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint extraout_EDX;\n    int32_t unaff_EDI;\n    uint var_14h;\n    uint var_10h;\n    char *var_ch;\n    uint var_4h;\n    \n    uVar2 = *(unaff_EDI + 0x28);\n    *(unaff_EDI + 0x2c) = 0;\n    *(unaff_EDI + 0x30) = 0;\n    if (((uVar2 & 0x2000) == 0) && ((uVar2 & 1) == 0)) {\n        return;\n    }\n    if ((uVar2 & 0x10) != 0) {\n        return;\n    }\n    if ((uVar2 & 0x180) == 0) {\n        if ((uVar2 & 0x20) == 0) {\n            if ((uVar2 & 0x40) != 0) {\n                *(unaff_EDI + 0x2c) = 2;\n            }\n        }\n        else {\n            *(unaff_EDI + 0x2c) = 1;\n        }\n    }\n    else {\n        *(unaff_EDI + 0x2c) = 4;\n    }\n    liDistanceToMove = *(unaff_EDI + 0x10);\n    lpNewFilePointer = *(unaff_EDI + 0x14);\n    fcn.0040e300(0, 0, 0);\n    fcn.00411777(0x10000);\n    fcn.0040f670();\n    uVar2 = fcn.00403bc0(var_ch);\n    if (1 < uVar2) {\n        if ((*var_ch == -1) && (var_ch[1] == -2)) {\n            *(unaff_EDI + 0x2c) = 1;\n            *(unaff_EDI + 0x30) = 2;\n            goto code_r0x0040e2da;\n        }\n        if ((*var_ch == -2) && (var_ch[1] == -1)) {\n            *(unaff_EDI + 0x2c) = 2;\n            *(unaff_EDI + 0x30) = 2;\n            goto code_r0x0040e2da;\n        }\n    }\n    if ((((uVar2 < 3) || (*var_ch != -0x11)) || (var_ch[1] != -0x45)) || (var_ch[2] != -0x41)) {\n        if ((uVar2 != 0) && (*(unaff_EDI + 0x2c) == 0)) {\n            if ((uVar2 == 0x10000) && ((*(unaff_EDI + 0x28) & 0x4000) != 0)) {\n                fcn.0040e300(0, 0, 0);\n                uVar3 = fcn.00443ab9(unaff_EDI);\n                uVar3 = fcn.00411777(uVar3);\n                fcn.00403bc0(uVar3);\n                cVar1 = fcn.0040f270();\n                if (cVar1 != '\\0') {\n                    *(unaff_EDI + 0x2c) = 4;\n                    *(unaff_EDI + 0x30) = 0;\n                }\n                fcn.0041137c(extraout_EDX);\n            }\n            else {\n                cVar1 = fcn.0040f270();\n                if (cVar1 != '\\0') {\n                    *(unaff_EDI + 0x30) = 0;\n                    *(unaff_EDI + 0x2c) = 4;\n                }\n            }\n        }\n    }\n    else {\n        *(unaff_EDI + 0x30) = 3;\n        *(unaff_EDI + 0x2c) = 4;\n    }\ncode_r0x0040e2da:\n    fcn.0040e300(liDistanceToMove, lpNewFilePointer, 0);\n    fcn.0040f690();\n    return;\n}\n",
        "token_count": 949
    },
    "0040e430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e430(void)\n\n{\n    char *arg_14h;\n    uint uVar1;\n    int32_t unaff_ESI;\n    int32_t iStack940;\n    uint uStack936;\n    uint uStack932;\n    uint uStack928;\n    uint uStack924;\n    \n    fcn.004130e0(&iStack940);\n    if (*(unaff_ESI + 0x198) == 0) {\n        *(unaff_ESI + 0x198) = *0x4a7f44;\n    }\n    uVar1 = *0x4a7f48;\n    if (*(unaff_ESI + 0x1a4) == 0) {\n        *(unaff_ESI + 0x1a4) = *0x4a7f48;\n        *(unaff_ESI + 0x1a8) = uVar1;\n    }\n    if (*(unaff_ESI + 0x1b0) == 0) {\n        *(unaff_ESI + 0x1b0) = *0x4a7f4c;\n    }\n    arg_14h = unaff_ESI + 0x1a0;\n    if ((*(unaff_ESI + 0x19c) != 0) && (*arg_14h != '\\0')) {\n        (*_sym.imp.USER32.dll_DestroyIcon)();\n    }\n    iStack940 = *0x497518;\n    *(unaff_ESI + 0x19c) = 0;\n    *arg_14h = '\\0';\n    uStack936 = 1;\n    uStack932 = 3;\n    uStack928 = 0x401;\n    uStack924 = 0;\n    if (*(unaff_ESI + 0x40) != 0) {\n        iStack940 = fcn.004347c9(unaff_ESI, *(unaff_ESI + 0x10), *(unaff_ESI + 0x3c), arg_14h);\n        *(unaff_ESI + 0x19c) = iStack940;\n        if ((*(unaff_ESI + 0x40) != 0) && (iStack940 != 0)) goto code_r0x0040e504;\n    }\n    uStack924 = *(unaff_ESI + 0x198);\n    *(unaff_ESI + 0x19c) = uStack924;\ncode_r0x0040e504:\n    if (*0x4974ea == '\\x01') {\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &stack0xfffffc40);\n    }\n    else {\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(0, &stack0xfffffc40);\n        *0x4974ea = '\\x01';\n    }\n    fcn.00401a60();\n    return;\n}\n",
        "token_count": 641
    },
    "0040e560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e560(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **unaff_EDI;\n    \n    if (unaff_EDI[2] == 0x5) {\n        if ((*unaff_EDI)[1] != 0) {\n            piVar1 = (*unaff_EDI)[1];\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                piVar1 = *unaff_EDI;\n                if (0 < piVar1[2]) {\n                    iVar2 = 0;\n                    do {\n                        if (*(*piVar1 + iVar2 * 4) != 0) {\n                            fcn.0040e530(1);\n                        }\n                        piVar1 = *unaff_EDI;\n                        iVar2 = iVar2 + 1;\n                    } while (iVar2 < piVar1[2]);\n                }\n                fcn.0041137c(**unaff_EDI);\n                fcn.0041137c((*unaff_EDI)[1]);\n            }\n        }\n        **unaff_EDI = 0;\n        (*unaff_EDI)[1] = 0;\n        (*unaff_EDI)[2] = 0;\n        (*unaff_EDI)[0x83] = 0;\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "0040e680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e680(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    \n    if (*(unaff_EBX + 9) != '\\0') {\n        fcn.00472c8d(unaff_EBX[1], in_EAX);\n        *unaff_EBX = *unaff_EBX + 1;\n        *(unaff_EBX + 9) = 0;\n        return;\n    }\n    iVar1 = fcn.00411777(0x40);\n    if (iVar1 != 0) {\n        fcn.0040e640();\n        *(iVar1 + 0x38) = unaff_EBX[1];\n        *unaff_EBX = *unaff_EBX + 1;\n        unaff_EBX[1] = iVar1;\n        return;\n    }\n    *0x38 = unaff_EBX[1];\n    *unaff_EBX = *unaff_EBX + 1;\n    unaff_EBX[1] = 0;\n    return;\n}\n",
        "token_count": 237
    },
    "0040e920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e920(void)\n\n{\n    int32_t *piVar1;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x16c) != 0) {\n        do {\n            fcn.0040ca30();\n        } while (*(unaff_ESI + 0x16c) != 0);\n    }\n    if (((*0x4a7f19 != '\\0') && (*0x4a7f1c != NULL)) && (piVar1 = (**(**0x4a7f1c + 8))(*0x4a7f1c),  piVar1 == NULL)) {\n        *0x4a7f1c = piVar1;\n    }\n    fcn.0040e8e0();\n    if (*0x4a7f1a != '\\0') {\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        *0x4a7f1a = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0040e9e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e9e0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t **unaff_ESI;\n    uint var_4h;\n    \n    if (((unaff_ESI[2] == 0x5) && (piVar5 = (*unaff_ESI)[1],  piVar5 != NULL)) && (1 < *piVar5)) {\n        *piVar5 = *piVar5 + -1;\n        iVar1 = **unaff_ESI;\n        iVar2 = (*unaff_ESI)[2] * 4;\n        iVar3 = fcn.00411777(-(iVar2 >> 0x20 != 0) | iVar2);\n        **unaff_ESI = iVar3;\n        puVar4 = fcn.00411777(4);\n        if (puVar4 == NULL) {\n            puVar4 = NULL;\n        }\n        else {\n            *puVar4 = 1;\n        }\n        (*unaff_ESI)[1] = puVar4;\n        piVar5 = *unaff_ESI;\n        if (0 < piVar5[2]) {\n            iVar3 = 0;\n            do {\n                if (*(iVar1 + iVar3 * 4) == 0) {\n                    *(*piVar5 + iVar3 * 4) = 0;\n                }\n                else {\n                    iVar6 = fcn.00411777(0x10);\n                    if (iVar6 == 0) {\n                        *(**unaff_ESI + iVar3 * 4) = 0;\n                    }\n                    else {\n                        uVar7 = fcn.0040bc00();\n                        *(**unaff_ESI + iVar3 * 4) = uVar7;\n                    }\n                }\n                piVar5 = *unaff_ESI;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < piVar5[2]);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "0040ea00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ea00(int32_t arg_8h)\n\n{\n    int32_t **in_EAX;\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_4h;\n    \n    if (in_EAX[2] == 0x5) {\n        fcn.0040e560();\n    }\n    else {\n        fcn.0040eb20();\n    }\n    if (arg_8h != 0) {\n        if (in_EAX[2] != 0x5) {\n            fcn.0040eb20();\n        }\n        (*in_EAX)[0x84] = 0;\n        if (0 < arg_8h) {\n            var_4h = arg_8h;\n            do {\n                fcn.0040d260();\n                var_4h = var_4h + -1;\n            } while (var_4h != 0);\n        }\n    }\n    (*in_EAX)[0x83] = (*in_EAX)[0x84];\n    (*in_EAX)[2] = 1;\n    piVar2 = *in_EAX;\n    if (0 < piVar2[0x83]) {\n        iVar4 = 0;\n        iVar3 = 0xc;\n        do {\n            *(iVar3 + piVar2) = *(iVar3 + 0x100 + piVar2);\n            piVar2 = *in_EAX;\n            piVar2[2] = *(iVar3 + piVar2) * piVar2[2];\n            piVar2 = *in_EAX;\n            if (0x1000000 < piVar2[2]) {\n                return piVar2 & 0xffffff00;\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + 4;\n        } while (iVar4 < piVar2[0x83]);\n    }\n    iVar3 = fcn.00411777(-((*in_EAX)[2] * 4 >> 0x20 != 0) | (*in_EAX)[2] * 4);\n    **in_EAX = iVar3;\n    puVar1 = fcn.00411777(4);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 1;\n    }\n    (*in_EAX)[1] = puVar1;\n    piVar2 = *in_EAX;\n    if (0 < piVar2[2]) {\n        iVar3 = 0;\n        do {\n            *(*piVar2 + iVar3 * 4) = 0;\n            piVar2 = *in_EAX;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < piVar2[2]);\n    }\n    return CONCAT31(piVar2 >> 8, 1);\n}\n",
        "token_count": 644
    },
    "0040ebc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ebc0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.0040cf10(in_EAX, &var_1h);\n    if (iVar1 == 0) {\n        iVar1 = *(*(arg_8h + 4) + 4);\n        if (*(iVar1 + 8) == 0x7f) {\n            if (var_1h != '\\0') {\n                fcn.0040ca30();\n                return;\n            }\n            iVar1 = fcn.0040f660();\n            *arg_ch = *(iVar1 + 4) + 1;\n        }\n        else {\n            fcn.0045e1ee(in_EAX, 0x72, *(iVar1 + 10));\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "0040ec40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ec40(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    int32_t iVar3;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 1;\n    fcn.0040df00();\n    var_3ch = 1;\n    iVar1 = fcn.0040cf10(arg_8h, &var_5h);\n    if (iVar1 == 0) {\n        iVar1 = *(*(arg_ch + 4) + var_ch * 4);\n        if (*(iVar1 + 8) == 0x7f) {\n            iVar1 = *arg_10h;\n            var_38h = iVar1 + -1;\n            iVar3 = 0;\n            while( true ) {\n                *arg_10h = *arg_10h + 1;\n                iVar2 = fcn.0040f5a0();\n                if ((iVar2 == 0) || (extraout_DL != '\\0')) break;\n                if (*(**(iVar2 + 4) + 2) == 0) {\n                    iVar2 = ***(iVar2 + 4);\n                    if (iVar2 == 9) {\n                        iVar3 = iVar3 + 1;\n                    }\n                    else if (iVar2 == 10) {\n                        if (iVar3 == 0) {\n                            var_34h = extraout_ECX + -1;\n                        }\n                        else {\n                            iVar3 = iVar3 + -1;\n                        }\n                    }\n                }\n            }\n            if (var_5h == '\\0') {\n                *arg_10h = var_34h + 1;\n            }\n            else {\n                *arg_10h = iVar1;\n                fcn.0040d150();\n            }\n            fcn.004091e0();\n            fcn.004091e0();\n        }\n        else {\n            fcn.0045e1ee(arg_8h, 0x72, *(iVar1 + 10));\n            fcn.004520e5(&var_3ch);\n        }\n    }\n    else {\n        fcn.004520e5(&var_3ch);\n    }\n    return;\n}\n",
        "token_count": 566
    },
    "0040ed20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ed20(void)\n\n{\n    uint *puVar1;\n    uint *unaff_EBX;\n    \n    if (unaff_EBX[2] == 0) {\n        puVar1 = fcn.00411777(0x24);\n        if (puVar1 == NULL) {\n            puVar1 = NULL;\n        }\n        else {\n            fcn.0040bf10();\n        }\n        fcn.00410d10();\n        fcn.004029a0();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(*puVar1, puVar1[1]);\n        puVar1[8] = 0;\n        if (unaff_EBX[1] == 0) {\n            unaff_EBX[3] = unaff_EBX[3] + 1;\n            *unaff_EBX = puVar1;\n            unaff_EBX[1] = puVar1;\n            return;\n        }\n        *(unaff_EBX[1] + 0x20) = puVar1;\n        unaff_EBX[3] = unaff_EBX[3] + 1;\n        unaff_EBX[1] = puVar1;\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "0040ee10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ee10(void)\n\n{\n    int32_t unaff_ESI;\n    uint32_t uVar1;\n    \n    if (*(unaff_ESI + 8) == 0) {\n        *(unaff_ESI + 8) = 0;\n        return;\n    }\n    uVar1 = 0;\n    do {\n        fcn.0041137c(*(*(unaff_ESI + 4) + uVar1 * 4));\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < *(unaff_ESI + 8));\n    *(unaff_ESI + 8) = 0;\n    return;\n}\n",
        "token_count": 149
    },
    "0040ef20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ef20(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    *param_1 = 0x484adc;\n    if (param_1[2] != 0) {\n        uVar3 = 0;\n        do {\n            piVar1 = *(param_1[1] + uVar3 * 4);\n            if (piVar1 != NULL) {\n                if (((*(piVar1 + 2) < 0x40) && (0x2f < *(piVar1 + 2))) && (puVar2 = *piVar1,  puVar2 != NULL)) {\n                    *puVar2[3] = *puVar2[3] + -1;\n                    if (*puVar2[3] == 0) {\n                        fcn.0041137c(*puVar2);\n                        fcn.0041137c(puVar2[3]);\n                    }\n                    fcn.0041137c(puVar2);\n                }\n                fcn.0041137c(piVar1);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < param_1[2]);\n    }\n    param_1[2] = 0;\n    fcn.0041137c(param_1[1]);\n    return;\n}\n",
        "token_count": 318
    },
    "0040efc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040efc0(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.0040efe0();\n    if (*(unaff_ESI + 8) != 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 61
    },
    "0040efe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040efe0(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"uxtheme.dll\");\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"IsThemeActive\");\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0040f030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f030(int32_t *arg_8h, int16_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = arg_8h[1];\n    if (uVar1 != 0) {\n        var_8h = 0;\n        uVar2 = uVar1;\n        do {\n            uVar2 = uVar2 - 1;\n            iVar4 = 0;\n            if (*arg_ch == 0) {\n                return uVar2;\n            }\n            var_4h = 0;\n            iVar3 = *arg_ch;\n            do {\n                if (*(*arg_8h + uVar2 * 2) == iVar3) {\n                    var_4h = var_4h + 1;\n                }\n                iVar3 = arg_ch[iVar4 + 1];\n                iVar4 = iVar4 + 1;\n            } while (iVar3 != 0);\n            if (var_4h == 0) {\n                return uVar2;\n            }\n            var_8h = var_8h + 1;\n        } while (var_8h < uVar1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 305
    },
    "0040f110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040f110(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.0040f130();\n    if (*(unaff_ESI + 8) != 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 60
    },
    "0040f130": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040f130(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"IsWow64Process\");\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0040f180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040f180(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.0040f1a0();\n    if (*(unaff_ESI + 8) != 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 62
    },
    "0040f1a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040f1a0(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *unaff_ESI = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetNativeSystemInfo\");\n            unaff_ESI[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040f4a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f4a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_4h;\n    \n    if (in_EAX[3] == 0) {\n        fcn.00402260();\n        return 0;\n    }\n    fcn.00410d60();\n    iVar1 = in_EAX[2];\n    if (iVar1 == 0) {\n        for (iVar1 = *in_EAX; iVar1 != 0; iVar1 = *(iVar1 + 0x20)) {\n            cVar2 = fcn.0040df20();\n            if (cVar2 != '\\0') {\n                fcn.00402260();\n                return iVar1;\n            }\n        }\n        fcn.00402260();\n    }\n    else {\n        iVar4 = in_EAX[3] + -1;\n        if (-1 < iVar4) {\n            var_4h = 0;\n            do {\n                iVar5 = (var_4h + iVar4) / 2;\n                iVar3 = fcn.0040bf60();\n                if (iVar3 < 0) {\n                    iVar4 = iVar5 + -1;\n                }\n                else {\n                    if (iVar3 < 1) {\n                        if (var_4h <= iVar4) {\n                            iVar1 = *(iVar1 + iVar5 * 4);\n                            fcn.00402260();\n                            return iVar1;\n                        }\n                        break;\n                    }\n                    var_4h = iVar5 + 1;\n                }\n            } while (var_4h <= iVar4);\n        }\n        fcn.00402260();\n    }\n    return 0;\n}\n",
        "token_count": 406
    },
    "0040f510": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f510(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t iVar3;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.0040df00();\n    iVar1 = *in_EAX;\n    iVar3 = 0;\n    while( true ) {\n        *in_EAX = *in_EAX + 1;\n        iVar2 = fcn.0040f5a0();\n        if ((iVar2 == 0) || (extraout_DL != '\\0')) break;\n        if (*(**(iVar2 + 4) + 2) == 0) {\n            iVar2 = ***(iVar2 + 4);\n            if (iVar2 == 0xb) {\n                iVar3 = iVar3 + 1;\n            }\n            else if ((iVar2 == 0xc) && (iVar3 != 0)) {\n                iVar3 = iVar3 + -1;\n            }\n        }\n    }\n    fcn.0040d150();\n    *in_EAX = iVar1;\n    fcn.004091e0();\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 300
    },
    "0040f660": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040f660(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 9) == '\\0') {\n        return *(in_EAX + 4);\n    }\n    return *(*(in_EAX + 4) + 0x30);\n}\n",
        "token_count": 68
    },
    "0040f6f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f6f0(uint arg_8h)\n\n{\n    int16_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uchar *in_ECX;\n    int32_t unaff_ESI;\n    uint var_5ch;\n    uint var_58h;\n    char16_t *var_50h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    char16_t *var_2ch;\n    uint var_28h;\n    uint var_20h;\n    \n    *(unaff_ESI + 3) = *0x4974e8;\n    if (*in_EAX == 0) {\n        *in_ECX = 1;\n        fcn.004130e0(&var_5ch, 0, 0x58);\n        var_5ch = 0x58;\n        var_2ch = L\"Run Script:\";\n        var_58h = 0;\n        var_3ch = 0x104;\n        var_50h = L\"AutoIt script files (*.au3, *.a3x)\";\n        var_44h = 1;\n        var_28h = 0x1804;\n        var_20h = 0x484870;\n        iVar2 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)(&var_5ch);\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    fcn.004102f0();\n    fcn.00410480();\n    uVar1 = fcn.00410360();\n    uVar1 = fcn.0040f740(unaff_ESI, uVar1, arg_8h);\n    return uVar1;\n}\n",
        "token_count": 390
    },
    "00410360": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00410360(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint32_t uVar3;\n    uint lpBuffer;\n    uint var_8h;\n    uint lpFilePart;\n    \n    (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(param_2, 0x104, &lpBuffer, &lpFilePart);\n    if (*(unaff_EBX + 0x20) != 0) {\n        uVar3 = 0;\n        do {\n            iVar2 = fcn.0041164b(**(*(unaff_EBX + 0x1c) + uVar3 * 4), &lpBuffer);\n            if (iVar2 == 0) {\n                piVar1 = *(*(unaff_EBX + 0x2c) + uVar3 * 4);\n                *piVar1 = *piVar1 + 1;\n                return uVar3;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(unaff_EBX + 0x20));\n    }\n    lpFilePart = fcn.00410330();\n    fcn.004103d0(&lpFilePart);\n    var_8h = 1;\n    fcn.004103d0(&var_8h);\n    return *(unaff_EBX + 0x20) - 1;\n}\n",
        "token_count": 329
    },
    "00410540": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410540(void)\n\n{\n    code *pcVar1;\n    uint ARG_0;\n    uint var_2ch;\n    code *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    char16_t *var_8h;\n    uint var_4h;\n    \n    var_10h = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n    var_14h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    pcVar1 = _sym.imp.USER32.dll_LoadIconW;\n    *0x4a7f40 = (*_sym.imp.USER32.dll_LoadIconW)(*0x497520, 99);\n    *0x4a7f48 = (*pcVar1)(*0x497520, 0xa4);\n    *0x4a7f4c = (*pcVar1)(*0x497520, 0xa2);\n    if (*(*0x4a9604 + 0x1f) == '\\0') {\n        *0x4a7f44 = fcn.004436a7(4);\n    }\n    else {\n        *0x4a7f44 = (*_sym.imp.USER32.dll_LoadImageW)(*0x497520, 99, 1, 0x10, 0x10, 0);\n    }\n    var_1ch = *0x497520;\n    ARG_0 = 0x30;\n    var_2ch = 0x23;\n    var_24h = 0;\n    var_20h = 0;\n    var_ch = 0;\n    var_8h = L\"AutoIt v3\";\n    var_18h = *0x4a7f40;\n    var_28h = fcn.004010a0;\n    var_4h = *0x4a7f44;\n    *0x4974e4 = (*_sym.imp.USER32.dll_RegisterClassExW)(&ARG_0);\n    fcn.00410640(*0x4a7f40, *0x4a7f44);\n    return;\n}\n",
        "token_count": 509
    },
    "00410950": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410950(void)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_EDI + 8) != 0) {\n        uVar1 = 0;\n        do {\n            fcn.0041137c(*(*(unaff_EDI + 4) + uVar1 * 4));\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(unaff_EDI + 8));\n    }\n    *(unaff_EDI + 8) = 0;\n    return;\n}\n",
        "token_count": 131
    },
    "00410a80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410a80(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_EAX = *in_EAX + 1;\n    if (*(*(*(unaff_EDI + 4) + *in_EAX * 4) + 8) == 0x7f) {\n        *0x4974f0 = 1;\n        *(unaff_EBX + 0x144) = 1;\n        *(unaff_EBX + 0xf8) = 1;\n        return;\n    }\n    var_8h = 1;\n    var_10h = 0;\n    var_4h = 0;\n    iVar1 = fcn.0040aa20(unaff_EDI, in_EAX, &var_10h, 0xffffffff);\n    *0x4974f0 = 1;\n    *(unaff_EBX + 0x144) = 1;\n    *(unaff_EBX + 0xf8) = 1;\n    if (iVar1 == 0) {\n        iVar1 = *(*(unaff_EDI + 4) + *in_EAX * 4);\n        if (*(iVar1 + 8) != 0x7f) {\n            fcn.0045e1ee(unaff_EBX, 0x72, *(iVar1 + 10));\n            fcn.004091e0();\n            return;\n        }\n        *0x4974f4 = fcn.0040c8f0();\n        if ((*(unaff_EBX + 0x118) != '\\0') && (*0x4974f4 + 0x80001000U < 0x1000)) {\n            fcn.0045e1ee(unaff_EBX, 0xb9, 0xffffffff);\n        }\n    }\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 457
    },
    "00410bd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410bd0(void)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint *in_EAX;\n    uint32_t uVar3;\n    \n    uVar1 = in_EAX[2];\n    if (uVar1 != 0) {\n        uVar3 = 0;\n        do {\n            piVar2 = *(in_EAX[1] + uVar3 * 4);\n            if (*piVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(**piVar2);\n            }\n            fcn.0041137c(**(in_EAX[1] + uVar3 * 4));\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    *in_EAX = 0x489b68;\n    fcn.00410c00();\n    fcn.0041137c(in_EAX[1]);\n    return;\n}\n",
        "token_count": 218
    },
    "00410c00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410c00(void)\n\n{\n    int32_t unaff_ESI;\n    uint32_t uVar1;\n    \n    if (*(unaff_ESI + 8) != 0) {\n        uVar1 = 0;\n        do {\n            fcn.0041137c(*(*(unaff_ESI + 4) + uVar1 * 4));\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(unaff_ESI + 8));\n    }\n    *(unaff_ESI + 8) = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "00410d80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00410d80(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 9) == '\\0') {\n        return *(in_EAX + 4);\n    }\n    return *(*(in_EAX + 4) + 4);\n}\n",
        "token_count": 66
    },
    "00410d90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00410d90(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX != 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 46
    },
    "00410e00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410e00(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    *param_1 = 0x4870e0;\n    if (param_1[2] != 0) {\n        uVar1 = 0;\n        do {\n            if (*(param_1[1] + uVar1 * 4) != 0) {\n                fcn.0040e530(1);\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[2]);\n    }\n    param_1[2] = 0;\n    fcn.0041137c(param_1[1]);\n    return;\n}\n",
        "token_count": 158
    },
    "00410e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00410e9c(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EDX;\n    float10 fVar3;\n    ulong uVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (pcVar2 = arg_8h[3]; pcVar2 != NULL; pcVar2 = pcVar2 + -1) {\n    }\n    pcVar2 = NULL;\n    if (arg_8h[1] != 0x1) {\n        pcVar2 = arg_8h[2];\n    }\n    if (arg_8h[9] != 0x1) {\n        if (arg_8h[8] == 0xa) {\n            fVar3 = (**arg_8h)();\n            *(arg_8h + 6) = fVar3;\n            goto code_r0x00410f53;\n        }\n        if (arg_8h[8] == 0x9) {\n            fVar3 = (**arg_8h)();\n            arg_8h[6] = fVar3;\n            goto code_r0x00410f53;\n        }\n        if (arg_8h[10] != 0x4) {\n            uVar4 = (**arg_8h)();\n            arg_8h[7] = uVar4 >> 0x20;\n            arg_8h[6] = uVar4;\n            goto code_r0x00410f53;\n        }\n    }\n    pcVar1 = (**arg_8h)();\n    arg_8h[6] = pcVar1;\ncode_r0x00410f53:\n    var_8h = pcVar2 + &stack0xffffffc8 == &stack0xffffffc8;\n    return CONCAT44(in_EDX, var_8h);\n}\n",
        "token_count": 447
    },
    "00410f82": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00410f82(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0xbc615a != 0) {\n        puVar2 = 0xbc617e;\n        puVar3 = &arg_8h;\n        iVar1 = *0xbc615a;\n        while( true ) {\n            if (puVar2[4] == 4) {\n                *puVar2 = *puVar3;\n            }\n            else {\n                *puVar2 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar2[1] = *puVar3;\n            }\n            iVar1 = iVar1 + -1;\n            if (iVar1 == 0) break;\n            puVar3 = puVar3 + 1;\n            puVar2 = puVar2 + 6;\n        }\n    }\n    (*0xbc614e)(0xbc614e);\n    return;\n}\n",
        "token_count": 256
    },
    "004138f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004138f8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x496e6c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00418137();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004180f5(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0041193a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00411a40: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00411a45)\n// WARNING: Removing unreachable block (ram,0x00411a74)\n// WARNING: Removing unreachable block (ram,0x00411a4b)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041193a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00416e30(0x48bf58, 0x20);\n    fcn.0041848b(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = *0x490004;\n    if (*0x496680 != 1) {\n        *0x49667c = 1;\n        *0x496678 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (**0x490004)(*0x4aa74c);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x4aa748);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00417a3c();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00417a3c();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x4aa74c);\n                        piVar2 = (*pcVar1)(*0x4aa748);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x48187c;\n            while (*(unaff_EBP + -0x1c) < 0x481888) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x48188c;\n        while (*(unaff_EBP + -0x20) < 0x481890) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004183b2(8);\n    }\n    return;\n}\n",
        "token_count": 1005
    },
    "004181ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004181ea(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.004138f8(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "004186d1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004186d1(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004183b2(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004192eb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004192eb(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = *unaff_EDI;\n    if (((*(unaff_EBX + 0xc) & 0x40) == 0) || (*(unaff_EBX + 8) != 0)) {\n        *unaff_EDI = 0;\n        if (0 < arg_ch) {\n            do {\n                arg_ch = arg_ch + -1;\n                fcn.004192bc(*arg_8h);\n                arg_8h = arg_8h + 1;\n                if (*in_EAX == -1) {\n                    if (*unaff_EDI != 0x2a) break;\n                    fcn.004192bc(0x3f);\n                }\n            } while (0 < arg_ch);\n            if (*unaff_EDI != 0) {\n                return;\n            }\n        }\n        *unaff_EDI = iVar1;\n    }\n    else {\n        *in_EAX = *in_EAX + arg_ch;\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00419352": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419352(int32_t arg_8h, uint16_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    uint8_t *puVar10;\n    bool bVar11;\n    int64_t iVar12;\n    uint var_474h;\n    int32_t *var_470h;\n    int32_t *var_46ch;\n    uint var_468h;\n    uint var_464h;\n    int32_t var_460h;\n    uint32_t var_45ch;\n    int32_t var_458h;\n    int32_t var_450h;\n    uint var_44ch;\n    int32_t var_448h;\n    int32_t var_444h;\n    uint16_t *var_440h;\n    int32_t *var_43ch;\n    uint var_438h;\n    uint var_434h;\n    int32_t *var_430h;\n    int32_t var_42ch;\n    int32_t var_428h;\n    int32_t var_424h;\n    int32_t **var_420h;\n    uint8_t *var_41ch;\n    int32_t var_418h;\n    uint8_t *var_414h;\n    int32_t *var_410h;\n    int32_t *var_40ch;\n    uint32_t var_408h;\n    uint var_404h;\n    uint var_205h;\n    uint32_t var_4h;\n    \n    var_4h = *0x490d40 ^ &stack0xfffffffc;\n    var_424h = arg_8h;\n    var_420h = arg_14h;\n    var_444h = 0;\n    var_408h = 0;\n    var_430h = NULL;\n    var_40ch = NULL;\n    var_428h = 0;\n    var_448h = 0;\n    var_42ch = 0;\n    fcn.004114c1(arg_10h);\n    var_464h = fcn.00418137();\n    if ((var_424h == 0) || (arg_ch == NULL)) {\n        puVar3 = fcn.00418137();\n        *puVar3 = 0x16;\n        fcn.004180e5();\ncode_r0x004193e2:\n        if (var_44ch != '\\0') {\n            *(var_450h + 0x70) = *(var_450h + 0x70) & 0xfffffffd;\n        }\n    }\n    else {\n        uVar1 = *arg_ch;\n        var_418h = 0;\n        var_414h = NULL;\n        var_43ch = NULL;\n        iVar7 = 0;\n        while (var_41ch = uVar1,  uVar1 != 0) {\n            var_440h = arg_ch + 1;\n            if (var_418h < 0) break;\n            if (uVar1 - 0x20 < 0x59) {\n                uVar4 = var_41ch[0x4829c8] & 0xf;\n            }\n            else {\n                uVar4 = 0;\n            }\n            var_460h = *(iVar7 + 0x4829e8 + uVar4 * 8) >> 4;\n    // switch table (8 cases) at 0x419efa\n            switch(var_460h) {\n            case 0:\ncode_r0x0041968b:\n                var_42ch = 1;\n                fcn.004192bc(var_41ch);\n                break;\n            case 1:\n                var_40ch = 0xffffffff;\n                var_468h = 0;\n                var_448h = 0;\n                var_430h = NULL;\n                var_428h = 0;\n                var_408h = 0;\n                var_42ch = 0;\n                break;\n            case 2:\n                if (var_41ch == 0x20) {\n                    var_408h = var_408h | 2;\n                }\n                else if (var_41ch == 0x23) {\n                    var_408h = var_408h | 0x80;\n                }\n                else if (var_41ch == 0x2b) {\n                    var_408h = var_408h | 1;\n                }\n                else if (var_41ch == 0x2d) {\n                    var_408h = var_408h | 4;\n                }\n                else if (var_41ch == 0x30) {\n                    var_408h = var_408h | 8;\n                }\n                break;\n            case 3:\n                if (uVar1 == 0x2a) {\n                    var_420h = arg_14h + 1;\n                    var_430h = *arg_14h;\n                    if (var_430h < 0) {\n                        var_408h = var_408h | 4;\n                        var_430h = -var_430h;\n                    }\n                }\n                else {\n                    var_430h = var_41ch + var_430h * 10 + -0x30;\n                }\n                break;\n            case 4:\n                var_40ch = NULL;\n                break;\n            case 5:\n                if (uVar1 == 0x2a) {\n                    var_420h = arg_14h + 1;\n                    var_40ch = *arg_14h;\n                    if (var_40ch < 0) {\n                        var_40ch = 0xffffffff;\n                    }\n                }\n                else {\n                    var_40ch = var_41ch + var_40ch * 10 + -0x30;\n                }\n                break;\n            case 6:\n                if (var_41ch == 0x49) {\n                    uVar1 = *var_440h;\n                    if ((uVar1 == 0x36) && (arg_ch[2] == 0x34)) {\n                        var_440h = arg_ch + 3;\n                        var_408h = var_408h | 0x8000;\n                    }\n                    else if ((uVar1 == 0x33) && (arg_ch[2] == 0x32)) {\n                        var_440h = arg_ch + 3;\n                        var_408h = var_408h & 0xffff7fff;\n                    }\n                    else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                             ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                        var_460h = 0;\n                        goto code_r0x0041968b;\n                    }\n                }\n                else if (var_41ch == 0x68) {\n                    var_408h = var_408h | 0x20;\n                }\n                else if (var_41ch == 0x6c) {\n                    if (*var_440h == 0x6c) {\n                        var_440h = arg_ch + 2;\n                        var_408h = var_408h | 0x1000;\n                    }\n                    else {\n                        var_408h = var_408h | 0x10;\n                    }\n                }\n                else if (var_41ch == 0x77) {\n                    var_408h = var_408h | 0x800;\n                }\n                break;\n            case 7:\n                if (var_41ch < 0x65) {\n                    if (var_41ch == 0x64) {\ncode_r0x0041997e:\n                        var_408h = var_408h | 0x40;\ncode_r0x00419985:\n                        var_41ch = 0xa;\ncode_r0x0041998f:\n                        if (((var_408h & 0x8000) == 0) && ((var_408h & 0x1000) == 0)) {\n                            var_420h = arg_14h + 1;\n                            if ((var_408h & 0x20) == 0) {\n                                piVar8 = *arg_14h;\n                                if ((var_408h & 0x40) == 0) {\n                                    piVar9 = NULL;\n                                }\n                                else {\n                                    piVar9 = piVar8 >> 0x1f;\n                                }\n                            }\n                            else {\n                                if ((var_408h & 0x40) == 0) {\n                                    piVar8 = *arg_14h;\n                                }\n                                else {\n                                    piVar8 = *arg_14h;\n                                }\n                                piVar9 = piVar8 >> 0x1f;\n                            }\n                        }\n                        else {\n                            piVar8 = *arg_14h;\n                            piVar9 = arg_14h[1];\n                            var_420h = arg_14h + 2;\n                        }\n                        if ((((var_408h & 0x40) != 0) && (piVar9 < 1)) && (piVar9 < 0)) {\n                            bVar11 = piVar8 != NULL;\n                            piVar8 = -piVar8;\n                            piVar9 = -(piVar9 + bVar11);\n                            var_408h = var_408h | 0x100;\n                        }\n                        if ((var_408h & 0x9000) == 0) {\n                            piVar9 = NULL;\n                        }\n                        iVar12 = CONCAT44(piVar9, piVar8);\n                        if (var_40ch < 0) {\n                            var_40ch = 0x1;\n                        }\n                        else {\n                            var_408h = var_408h & 0xfffffff7;\n                            if (0x200 < var_40ch) {\n                                var_40ch = 0x200;\n                            }\n                        }\n                        if ((piVar8 | piVar9) == 0) {\n                            var_428h = 0;\n                        }\n                        piVar8 = &var_205h;\n                        while ((piVar9 = var_40ch + -1,  0 < var_40ch || (iVar12 != 0))) {\n                            var_40ch = piVar9;\n                            iVar12 = fcn.00418bc0();\n                            iVar7 = extraout_ECX + 0x30;\n                            if (0x39 < iVar7) {\n                                iVar7 = iVar7 + var_444h;\n                            }\n                            *piVar8 = iVar7;\n                            piVar8 = piVar8 + -1;\n                        }\n                        var_414h = &var_205h + -piVar8;\n                        var_410h = piVar8 + 1;\n                        var_40ch = piVar9;\n                        if (((var_408h & 0x200) != 0) && ((var_414h == NULL || (*var_410h != 0x30)))) {\n                            var_414h = &var_205h + -piVar8 + 1;\n                            *piVar8 = 0x30;\n                            var_410h = piVar8;\n                        }\n                    }\n                    else if (var_41ch < 0x54) {\n                        if (var_41ch == 0x53) {\n                            if ((var_408h & 0x830) == 0) {\n                                var_408h = var_408h | 0x20;\n                            }\n                            goto code_r0x0041975a;\n                        }\n                        if (var_41ch != 0x41) {\n                            if (var_41ch == 0x43) {\n                                if ((var_408h & 0x830) == 0) {\n                                    var_408h = var_408h | 0x20;\n                                }\ncode_r0x00419803:\n                                uVar1 = *arg_14h;\n                                var_45ch = uVar1;\n                                var_420h = arg_14h + 1;\n                                var_42ch = 1;\n                                if ((var_408h & 0x20) == 0) {\n                                    var_404h._0_2_ = uVar1;\n                                }\n                                else {\n                                    var_438h._0_1_ = uVar1;\n                                    var_438h._1_1_ = 0;\n                                    iVar7 = fcn.00420e7f(&var_404h, &var_438h, *(var_458h + 0xac), &var_458h);\n                                    if (iVar7 < 0) {\n                                        var_448h = 1;\n                                    }\n                                }\n                                var_414h = 0x1;\n                                var_410h = &var_404h;\n                                goto code_r0x00419cbd;\n                            }\n                            if ((var_41ch != 0x45) && (var_41ch != 0x47)) goto code_r0x00419cbd;\n                        }\n                        var_41ch = var_41ch + 0x20;\n                        var_468h = 1;\ncode_r0x004196f1:\n                        var_408h = var_408h | 0x40;\n                        var_414h = 0x200;\n                        piVar8 = &var_404h;\n                        puVar10 = var_414h;\n                        piVar9 = &var_404h;\n                        if (var_40ch < 0) {\n                            var_40ch = 0x6;\n                        }\n                        else if (var_40ch == NULL) {\n                            if (var_41ch == 0x67) {\n                                var_40ch = 0x1;\n                            }\n                        }\n                        else {\n                            if (0x200 < var_40ch) {\n                                var_40ch = 0x200;\n                            }\n                            if (0xa3 < var_40ch) {\n                                puVar10 = var_40ch + 0x15d;\n                                var_410h = &var_404h;\n                                var_43ch = fcn.00416cc4(puVar10);\n                                piVar8 = var_43ch;\n                                piVar9 = var_43ch;\n                                if (var_43ch == NULL) {\n                                    var_40ch = 0xa3;\n                                    piVar8 = &var_404h;\n                                    puVar10 = var_414h;\n                                    piVar9 = var_410h;\n                                }\n                            }\n                        }\n                        var_410h = piVar9;\n                        var_414h = puVar10;\n                        pcVar6 = *0x490004;\n                        var_470h = *arg_14h;\n                        var_420h = arg_14h + 2;\n                        var_46ch = arg_14h[1];\n                        pcVar5 = (**0x490004)(*0x490d28, &var_470h, piVar8, var_414h, var_41ch, var_40ch, var_468h, \n                                              &var_458h);\n                        (*pcVar5)();\n                        uVar4 = var_408h & 0x80;\n                        if ((uVar4 != 0) && (var_40ch == NULL)) {\n                            pcVar5 = (*pcVar6)(*0x490d34, piVar8, &var_458h);\n                            (*pcVar5)();\n                        }\n                        if ((var_41ch == 0x67) && (uVar4 == 0)) {\n                            pcVar6 = (*pcVar6)(*0x490d30, piVar8, &var_458h);\n                            (*pcVar6)();\n                        }\n                        piVar9 = piVar8;\n                        piVar2 = var_410h;\n                        if (*piVar8 == 0x2d) {\n                            var_408h = var_408h | 0x100;\n                            piVar9 = piVar8 + 1;\n                            piVar2 = piVar8 + 1;\n                        }\ncode_r0x004198dc:\n                        var_410h = piVar2;\n                        var_414h = fcn.004136e0(piVar9);\n                    }\n                    else {\n                        if (var_41ch == 0x58) goto code_r0x00419ae0;\n                        if (var_41ch == 0x5a) {\n                            piVar8 = *arg_14h;\n                            var_420h = arg_14h + 1;\n                            piVar9 = *0x490d90;\n                            piVar2 = *0x490d90;\n                            if ((piVar8 == NULL) || (var_410h = piVar8[1],  piVar2 = *0x490d90,  var_410h == NULL))\n                            goto code_r0x004198dc;\n                            var_414h = *piVar8;\n                            if ((var_408h & 0x800) != 0) {\n                                iVar7 = var_414h - (var_414h >> 0x1f);\n                                goto code_r0x00419cb5;\n                            }\n                            var_42ch = 0;\n                        }\n                        else {\n                            if (var_41ch == 0x61) goto code_r0x004196f1;\n                            if (var_41ch == 0x63) goto code_r0x00419803;\n                        }\n                    }\ncode_r0x00419cbd:\n                    if (var_448h == 0) {\n                        if ((var_408h & 0x40) != 0) {\n                            if ((var_408h & 0x100) == 0) {\n                                if ((var_408h & 1) == 0) {\n                                    if ((var_408h & 2) == 0) goto code_r0x00419cff;\n                                    var_434h._0_2_ = 0x20;\n                                }\n                                else {\n                                    var_434h._0_2_ = 0x2b;\n                                }\n                            }\n                            else {\n                                var_434h._0_2_ = 0x2d;\n                            }\n                            var_428h = 1;\n                        }\ncode_r0x00419cff:\n                        puVar10 = var_430h + (-var_428h - var_414h);\n                        var_41ch = puVar10;\n                        if ((var_408h & 0xc) == 0) {\n                            do {\n                                if (puVar10 < 1) break;\n                                puVar10 = puVar10 + -1;\n                                fcn.004192bc(0x20);\n                            } while (var_418h != -1);\n                        }\n                        fcn.004192eb(&var_434h, var_428h);\n                        if (((var_408h & 8) != 0) && (puVar10 = var_41ch,  (var_408h & 4) == 0)) {\n                            do {\n                                if (puVar10 < 1) break;\n                                fcn.004192bc(0x30);\n                                puVar10 = puVar10 + -1;\n                            } while (var_418h != -1);\n                        }\n                        if ((var_42ch == 0) && (puVar10 = var_414h,  piVar8 = var_410h,  0 < var_414h)) {\n                            do {\n                                puVar10 = puVar10 + -1;\n                                iVar7 = fcn.00420e7f(&var_45ch, piVar8, *(var_458h + 0xac), &var_458h);\n                                if (iVar7 < 1) {\n                                    var_418h = -1;\n                                    break;\n                                }\n                                fcn.004192bc(var_45ch);\n                                piVar8 = piVar8 + iVar7;\n                            } while (0 < puVar10);\n                        }\n                        else {\n                            fcn.004192eb(var_410h, var_414h);\n                        }\n                        if ((-1 < var_418h) && (puVar10 = var_41ch,  (var_408h & 4) != 0)) {\n                            do {\n                                if (puVar10 < 1) break;\n                                fcn.004192bc(0x20);\n                                puVar10 = puVar10 + -1;\n                            } while (var_418h != -1);\n                        }\n                    }\n                }\n                else {\n                    if (0x70 < var_41ch) {\n                        if (var_41ch == 0x73) {\ncode_r0x0041975a:\n                            piVar8 = var_40ch;\n                            if (var_40ch == 0xffffffff) {\n                                piVar8 = 0x7fffffff;\n                            }\n                            var_420h = arg_14h + 1;\n                            var_410h = *arg_14h;\n                            if ((var_408h & 0x20) == 0) {\n                                piVar9 = var_410h;\n                                if (var_410h == NULL) {\n                                    piVar9 = *0x490d94;\n                                    var_410h = *0x490d94;\n                                }\n                                for (; (piVar8 != NULL && (piVar8 = piVar8 + -1,  *piVar9 != 0)); piVar9 = piVar9 + 2) {\n                                }\n                                iVar7 = piVar9 - var_410h;\ncode_r0x00419cb5:\n                                var_420h = arg_14h + 1;\n                                var_42ch = 1;\n                                var_414h = iVar7 >> 1;\n                            }\n                            else {\n                                if (var_410h == NULL) {\n                                    var_410h = *0x490d90;\n                                }\n                                var_414h = NULL;\n                                piVar9 = var_410h;\n                                if (0 < piVar8) {\n                                    do {\n                                        if (*piVar9 == 0) break;\n                                        iVar7 = fcn.00413351(*piVar9, &var_458h);\n                                        if (iVar7 != 0) {\n                                            piVar9 = piVar9 + 1;\n                                        }\n                                        piVar9 = piVar9 + 1;\n                                        var_414h = var_414h + 1;\n                                    } while (var_414h < piVar8);\n                                }\n                            }\n                            goto code_r0x00419cbd;\n                        }\n                        if (var_41ch == 0x75) goto code_r0x00419985;\n                        if (var_41ch != 0x78) goto code_r0x00419cbd;\n                        var_444h = 0x27;\ncode_r0x00419b0c:\n                        var_41ch = 0x10;\n                        if ((var_408h & 0x80) != 0) {\n                            var_434h._0_2_ = 0x30;\n                            var_434h._2_2_ = var_444h + 0x51;\n                            var_428h = 2;\n                        }\n                        goto code_r0x0041998f;\n                    }\n                    if (var_41ch == 0x70) {\n                        var_40ch = 0x8;\ncode_r0x00419ae0:\n                        var_444h = 7;\n                        goto code_r0x00419b0c;\n                    }\n                    if (var_41ch < 0x65) goto code_r0x00419cbd;\n                    if (var_41ch < 0x68) goto code_r0x004196f1;\n                    if (var_41ch == 0x69) goto code_r0x0041997e;\n                    if (var_41ch != 0x6e) {\n                        if (var_41ch != 0x6f) goto code_r0x00419cbd;\n                        var_41ch = 0x8;\n                        if ((var_408h & 0x80) != 0) {\n                            var_408h = var_408h | 0x200;\n                        }\n                        goto code_r0x0041998f;\n                    }\n                    piVar8 = *arg_14h;\n                    var_420h = arg_14h + 1;\n                    iVar7 = fcn.00420e69();\n                    if (iVar7 == 0) {\n                        puVar3 = fcn.00418137();\n                        *puVar3 = 0x16;\n                        fcn.004180e5();\n                        goto code_r0x004193e2;\n                    }\n                    if ((var_408h & 0x20) == 0) {\n                        *piVar8 = var_418h;\n                    }\n                    else {\n                        *piVar8 = var_418h;\n                    }\n                    var_448h = 1;\n                }\n                if (var_43ch != NULL) {\n                    fcn.004138f8(var_43ch);\n                    var_43ch = NULL;\n                }\n            }\n            iVar7 = var_460h;\n            arg_ch = var_440h;\n            arg_14h = var_420h;\n            uVar1 = *var_440h;\n        }\n        if (var_44ch != '\\0') {\n            *(var_450h + 0x70) = *(var_450h + 0x70) & 0xfffffffd;\n        }\n    }\n    fcn.0041a3c8(unaff_EBX);\n    return;\n}\n",
        "token_count": 5701
    },
    "0041a3c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a3c8(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x490d40) {\n        return;\n    }\n    *0x497288 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x49728c = &arg_8h;\n    *0x4971c8 = 0x10001;\n    *0x497170 = 0xc0000409;\n    *0x497174 = 1;\n    var_328h = *0x490d40;\n    var_324h = *0x490d44;\n    *0x49717c = unaff_retaddr;\n    *0x497254 = in_GS;\n    *0x497258 = in_FS;\n    *0x49725c = in_ES;\n    *0x497260 = in_DS;\n    *0x497264 = unaff_EDI;\n    *0x497268 = unaff_ESI;\n    *0x49726c = unaff_EBX;\n    *0x497270 = in_EDX;\n    *0x497274 = in_ECX;\n    *0x497278 = in_EAX;\n    *0x49727c = unaff_EBP;\n    *0x497280 = unaff_retaddr;\n    *0x497284 = in_CS;\n    *0x497290 = in_SS;\n    *0x4971c0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00420459(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x48349c);\n    if (*0x4971c0 == 0) {\n        fcn.00420459(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 815
    },
    "0041ba79": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ba79(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = *unaff_EDI;\n    if (((*(unaff_EBX + 0xc) & 0x40) == 0) || (*(unaff_EBX + 8) != 0)) {\n        *unaff_EDI = 0;\n        if (0 < arg_ch) {\n            do {\n                arg_ch = arg_ch + -1;\n                fcn.0041ba46();\n                if (*in_EAX == -1) {\n                    if (*unaff_EDI != 0x2a) break;\n                    fcn.0041ba46();\n                }\n            } while (0 < arg_ch);\n            if (*unaff_EDI != 0) {\n                return;\n            }\n        }\n        *unaff_EDI = iVar1;\n    }\n    else {\n        *in_EAX = *in_EAX + arg_ch;\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0041badb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041badb(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int32_t *piVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint8_t *puVar11;\n    int32_t *piVar12;\n    int32_t **ppiVar13;\n    bool bVar14;\n    int64_t iVar15;\n    int32_t *var_280h;\n    int32_t *var_27ch;\n    uint var_278h;\n    int32_t var_274h;\n    int32_t var_270h;\n    uint var_26ch;\n    uchar *var_268h;\n    char *var_260h;\n    uint var_25ch;\n    int32_t var_254h;\n    uint var_250h;\n    int32_t var_24ch;\n    int32_t *var_248h;\n    int32_t var_244h;\n    uint8_t *var_240h;\n    int32_t var_23ch;\n    int32_t *var_238h;\n    int32_t var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    uchar *var_228h;\n    int32_t var_224h;\n    int32_t *var_220h;\n    int32_t **var_21ch;\n    int32_t *var_218h;\n    uint8_t var_211h;\n    uint32_t var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x490d40 ^ &stack0xfffffffc;\n    var_230h = arg_8h;\n    var_21ch = arg_14h;\n    var_24ch = 0;\n    var_210h = 0;\n    var_238h = NULL;\n    var_218h = NULL;\n    var_234h = 0;\n    var_244h = 0;\n    var_23ch = 0;\n    fcn.004114c1(arg_10h);\n    var_26ch = fcn.00418137();\n    if (arg_8h != 0) {\n        if ((*(arg_8h + 0xc) & 0x40) == 0) {\n            uVar5 = fcn.004142e9(arg_8h);\n            if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {\n                iVar10 = 0x490d50;\n            }\n            else {\n                iVar10 = (uVar5 & 0x1f) * 0x40 + *((uVar5 >> 5) * 4 + 0x4a9620);\n            }\n            if ((*(iVar10 + 0x24) & 0x7f) == 0) {\n                if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {\n                    iVar10 = 0x490d50;\n                }\n                else {\n                    iVar10 = (uVar5 & 0x1f) * 0x40 + *((uVar5 >> 5) * 4 + 0x4a9620);\n                }\n                if ((*(iVar10 + 0x24) & 0x80) == 0) goto code_r0x0041bbe0;\n            }\n        }\n        else {\ncode_r0x0041bbe0:\n            if (arg_ch != NULL) {\n                var_211h = *arg_ch;\n                var_224h = 0;\n                var_228h = NULL;\n                var_248h = NULL;\n                iVar10 = 0;\n                ppiVar13 = var_21ch;\n                while ((var_21ch = ppiVar13,  var_211h != 0 &&\n                       (puVar11 = arg_ch + 1,  var_240h = puVar11,  -1 < var_224h))) {\n                    if (var_211h - 0x20 < 0x59) {\n                        uVar5 = *(var_211h + 0x4829c8) & 0xf;\n                    }\n                    else {\n                        uVar5 = 0;\n                    }\n                    var_274h = *(iVar10 + 0x4829e8 + uVar5 * 8) >> 4;\n    // switch table (8 cases) at 0x41c6c3\n                    switch(var_274h) {\n                    case 0:\ncode_r0x0041be5d:\n                        var_23ch = 0;\n                        iVar10 = fcn.00413351(var_211h, &var_25ch);\n                        if (iVar10 != 0) {\n                            fcn.0041ba46();\n                            var_240h = arg_ch + 2;\n                            if (*puVar11 == 0) goto code_r0x0041bb51;\n                        }\n                        fcn.0041ba46();\n                        break;\n                    case 1:\n                        var_218h = 0xffffffff;\n                        var_278h = 0;\n                        var_244h = 0;\n                        var_238h = NULL;\n                        var_234h = 0;\n                        var_210h = 0;\n                        var_23ch = 0;\n                        break;\n                    case 2:\n                        if (var_211h == 0x20) {\n                            var_210h = var_210h | 2;\n                        }\n                        else if (var_211h == 0x23) {\n                            var_210h = var_210h | 0x80;\n                        }\n                        else if (var_211h == 0x2b) {\n                            var_210h = var_210h | 1;\n                        }\n                        else if (var_211h == 0x2d) {\n                            var_210h = var_210h | 4;\n                        }\n                        else if (var_211h == 0x30) {\n                            var_210h = var_210h | 8;\n                        }\n                        break;\n                    case 3:\n                        if (var_211h == 0x2a) {\n                            var_238h = *arg_14h;\n                            var_21ch = arg_14h + 1;\n                            if (var_238h < 0) {\n                                var_210h = var_210h | 4;\n                                var_238h = -var_238h;\n                            }\n                        }\n                        else {\n                            var_238h = var_238h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 4:\n                        var_218h = NULL;\n                        break;\n                    case 5:\n                        if (var_211h == 0x2a) {\n                            var_218h = *arg_14h;\n                            var_21ch = arg_14h + 1;\n                            if (var_218h < 0) {\n                                var_218h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_218h = var_218h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 6:\n                        if (var_211h == 0x49) {\n                            uVar1 = *puVar11;\n                            if ((uVar1 == 0x36) && (arg_ch[2] == 0x34)) {\n                                var_210h = var_210h | 0x8000;\n                                var_240h = arg_ch + 3;\n                            }\n                            else if ((uVar1 == 0x33) && (arg_ch[2] == 0x32)) {\n                                var_210h = var_210h & 0xffff7fff;\n                                var_240h = arg_ch + 3;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_274h = 0;\n                                goto code_r0x0041be5d;\n                            }\n                        }\n                        else if (var_211h == 0x68) {\n                            var_210h = var_210h | 0x20;\n                        }\n                        else if (var_211h == 0x6c) {\n                            if (*puVar11 == 0x6c) {\n                                var_210h = var_210h | 0x1000;\n                                var_240h = arg_ch + 2;\n                            }\n                            else {\n                                var_210h = var_210h | 0x10;\n                            }\n                        }\n                        else if (var_211h == 0x77) {\n                            var_210h = var_210h | 0x800;\n                        }\n                        break;\n                    case 7:\n                        if (var_211h < 'e') {\n                            if (var_211h == 100) {\ncode_r0x0041c121:\n                                var_210h = var_210h | 0x40;\ncode_r0x0041c128:\n                                ppiVar13 = arg_14h;\n                                var_228h = 0xa;\ncode_r0x0041c132:\n                                if (((var_210h & 0x8000) == 0) && ((var_210h & 0x1000) == 0)) {\n                                    var_21ch = ppiVar13 + 1;\n                                    if ((var_210h & 0x20) == 0) {\n                                        piVar12 = *ppiVar13;\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar8 = NULL;\n                                        }\n                                        else {\n                                            piVar8 = piVar12 >> 0x1f;\n                                        }\n                                    }\n                                    else {\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar12 = *ppiVar13;\n                                        }\n                                        else {\n                                            piVar12 = *ppiVar13;\n                                        }\n                                        piVar8 = piVar12 >> 0x1f;\n                                    }\n                                }\n                                else {\n                                    piVar12 = *ppiVar13;\n                                    piVar8 = ppiVar13[1];\n                                    var_21ch = ppiVar13 + 2;\n                                }\n                                if ((((var_210h & 0x40) != 0) && (piVar8 < 1)) && (piVar8 < 0)) {\n                                    bVar14 = piVar12 != NULL;\n                                    piVar12 = -piVar12;\n                                    piVar8 = -(piVar8 + bVar14);\n                                    var_210h = var_210h | 0x100;\n                                }\n                                if ((var_210h & 0x9000) == 0) {\n                                    piVar8 = NULL;\n                                }\n                                iVar15 = CONCAT44(piVar8, piVar12);\n                                if (var_218h < 0) {\n                                    var_218h = 0x1;\n                                }\n                                else {\n                                    var_210h = var_210h & 0xfffffff7;\n                                    if (0x200 < var_218h) {\n                                        var_218h = 0x200;\n                                    }\n                                }\n                                if ((piVar12 | piVar8) == 0) {\n                                    var_234h = 0;\n                                }\n                                piVar12 = &var_dh;\n                                while( true ) {\n                                    pcVar9 = iVar15;\n                                    piVar8 = var_218h + -1;\n                                    if ((var_218h < 1) && (iVar15 == 0)) break;\n                                    var_218h = piVar8;\n                                    iVar15 = fcn.00418bc0();\n                                    iVar10 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar10) {\n                                        iVar10 = iVar10 + var_24ch;\n                                    }\n                                    *piVar12 = iVar10;\n                                    piVar12 = piVar12 + -1;\n                                    var_260h = pcVar9;\n                                }\n                                var_228h = &var_dh + -piVar12;\n                                var_220h = piVar12 + 1;\n                                var_218h = piVar8;\n                                if (((var_210h & 0x200) != 0) && ((var_228h == NULL || (*var_220h != '0')))) {\n                                    *piVar12 = '0';\n                                    var_228h = &var_ch + -piVar12;\n                                    var_220h = piVar12;\n                                }\n                            }\n                            else if (var_211h < 'T') {\n                                if (var_211h == 0x53) {\n                                    if ((var_210h & 0x830) == 0) {\n                                        var_210h = var_210h | 0x800;\n                                    }\n                                    goto code_r0x0041bf36;\n                                }\n                                if (var_211h == 0x41) {\ncode_r0x0041bee9:\n                                    var_211h = var_211h + 0x20;\n                                    var_278h = 1;\ncode_r0x0041c157:\n                                    var_210h = var_210h | 0x40;\n                                    var_260h = 0x200;\n                                    piVar8 = &var_20ch;\n                                    pcVar9 = var_260h;\n                                    piVar12 = &var_20ch;\n                                    if (var_218h < 0) {\n                                        var_218h = 0x6;\n                                    }\n                                    else if (var_218h == NULL) {\n                                        if (var_211h == 0x67) {\n                                            var_218h = 0x1;\n                                        }\n                                    }\n                                    else {\n                                        if (0x200 < var_218h) {\n                                            var_218h = 0x200;\n                                        }\n                                        if (0xa3 < var_218h) {\n                                            pcVar9 = var_218h + 0x15d;\n                                            var_220h = &var_20ch;\n                                            var_248h = fcn.00416cc4(pcVar9);\n                                            piVar8 = var_248h;\n                                            piVar12 = var_248h;\n                                            if (var_248h == NULL) {\n                                                var_218h = 0xa3;\n                                                piVar8 = &var_20ch;\n                                                pcVar9 = var_260h;\n                                                piVar12 = var_220h;\n                                            }\n                                        }\n                                    }\n                                    var_220h = piVar12;\n                                    var_260h = pcVar9;\n                                    pcVar7 = *0x490004;\n                                    var_280h = *arg_14h;\n                                    var_21ch = arg_14h + 2;\n                                    var_27ch = arg_14h[1];\n                                    pcVar6 = (**0x490004)(*0x490d28, &var_280h, piVar8, var_260h, var_211h, var_218h, \n                                                          var_278h, &var_25ch);\n                                    (*pcVar6)();\n                                    uVar5 = var_210h & 0x80;\n                                    if ((uVar5 != 0) && (var_218h == NULL)) {\n                                        pcVar6 = (*pcVar7)(*0x490d34, piVar8, &var_25ch);\n                                        (*pcVar6)();\n                                    }\n                                    if ((var_211h == 0x67) && (uVar5 == 0)) {\n                                        pcVar7 = (*pcVar7)(*0x490d30, piVar8, &var_25ch);\n                                        (*pcVar7)();\n                                    }\n                                    if (*piVar8 == '-') {\n                                        var_210h = var_210h | 0x100;\n                                        var_220h = piVar8 + 1;\n                                        piVar8 = var_220h;\n                                    }\ncode_r0x0041c06e:\n                                    var_228h = fcn.004136e0(piVar8);\n                                }\n                                else if (var_211h == 0x43) {\n                                    ppiVar13 = arg_14h;\n                                    if ((var_210h & 0x830) == 0) {\n                                        var_210h = var_210h | 0x800;\n                                    }\ncode_r0x0041bfaf:\n                                    var_21ch = ppiVar13 + 1;\n                                    if ((var_210h & 0x810) == 0) {\n                                        var_20ch._0_1_ = *ppiVar13;\n                                        var_228h = 0x1;\n                                    }\n                                    else {\n                                        iVar10 = fcn.00422a00(&var_228h, &var_20ch, 0x200, *ppiVar13);\n                                        if (iVar10 != 0) {\n                                            var_244h = 1;\n                                        }\n                                    }\n                                    var_220h = &var_20ch;\n                                }\n                                else if ((var_211h == 0x45) || (var_211h == 0x47)) goto code_r0x0041bee9;\n                            }\n                            else {\n                                if (var_211h == 0x58) goto code_r0x0041c2b7;\n                                if (var_211h == 0x5a) {\n                                    piVar12 = *arg_14h;\n                                    var_21ch = arg_14h + 1;\n                                    piVar8 = *0x490d90;\n                                    var_220h = *0x490d90;\n                                    if ((piVar12 == NULL) || (piVar3 = piVar12[1],  piVar3 == NULL))\n                                    goto code_r0x0041c06e;\n                                    var_228h = *piVar12;\n                                    var_220h = piVar3;\n                                    if ((var_210h & 0x800) == 0) {\n                                        var_23ch = 0;\n                                    }\n                                    else {\n                                        var_228h = var_228h / 2;\n                                        var_23ch = 1;\n                                    }\n                                }\n                                else {\n                                    if (var_211h == 0x61) goto code_r0x0041c157;\n                                    if (var_211h == 99) goto code_r0x0041bfaf;\n                                }\n                            }\ncode_r0x0041c494:\n                            if (var_244h == 0) {\n                                if ((var_210h & 0x40) != 0) {\n                                    if ((var_210h & 0x100) == 0) {\n                                        if ((var_210h & 1) == 0) {\n                                            if ((var_210h & 2) == 0) goto code_r0x0041c4e1;\n                                            var_22ch._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_22ch._0_1_ = 0x2d;\n                                    }\n                                    var_234h = 1;\n                                }\ncode_r0x0041c4e1:\n                                pcVar9 = var_238h + (-var_234h - var_228h);\n                                var_260h = pcVar9;\n                                if ((var_210h & 0xc) == 0) {\n                                    do {\n                                        if (pcVar9 < 1) break;\n                                        pcVar9 = pcVar9 + -1;\n                                        fcn.0041ba46();\n                                    } while (var_224h != -1);\n                                }\n                                fcn.0041ba79(&var_22ch, var_234h);\n                                if (((var_210h & 8) != 0) && (pcVar9 = var_260h,  (var_210h & 4) == 0)) {\n                                    do {\n                                        if (pcVar9 < 1) break;\n                                        fcn.0041ba46();\n                                        pcVar9 = pcVar9 + -1;\n                                    } while (var_224h != -1);\n                                }\n                                if ((var_23ch == 0) || (var_228h < 1)) {\n                                    fcn.0041ba79(var_220h, var_228h);\n                                }\n                                else {\n                                    var_268h = var_228h;\n                                    piVar12 = var_220h;\n                                    do {\n                                        uVar2 = *piVar12;\n                                        var_268h = var_268h + -1;\n                                        piVar12 = piVar12 + 2;\n                                        iVar10 = fcn.00422a00(&var_270h, &var_ch, 6, uVar2);\n                                        if ((iVar10 != 0) || (var_270h == 0)) {\n                                            var_224h = -1;\n                                            break;\n                                        }\n                                        fcn.0041ba79(&var_ch, var_270h);\n                                    } while (var_268h != NULL);\n                                }\n                                if ((-1 < var_224h) && (pcVar9 = var_260h,  (var_210h & 4) != 0)) {\n                                    do {\n                                        if (pcVar9 < 1) break;\n                                        fcn.0041ba46();\n                                        pcVar9 = pcVar9 + -1;\n                                    } while (var_224h != -1);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_211h) {\n                                if (var_211h == 0x73) {\ncode_r0x0041bf36:\n                                    piVar12 = var_218h;\n                                    if (var_218h == 0xffffffff) {\n                                        piVar12 = 0x7fffffff;\n                                    }\n                                    var_21ch = arg_14h + 1;\n                                    var_220h = *arg_14h;\n                                    if ((var_210h & 0x810) == 0) {\n                                        piVar8 = var_220h;\n                                        if (var_220h == NULL) {\n                                            piVar8 = *0x490d90;\n                                            var_220h = *0x490d90;\n                                        }\n                                        for (; (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar8 != '\\0'));\n                                            piVar8 = piVar8 + 1) {\n                                        }\n                                        var_228h = piVar8 - var_220h;\n                                    }\n                                    else {\n                                        if (var_220h == NULL) {\n                                            var_220h = *0x490d94;\n                                        }\n                                        var_23ch = 1;\n                                        for (piVar8 = var_220h;\n                                            (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar8 != 0));\n                                            piVar8 = piVar8 + 2) {\n                                        }\n                                        var_228h = piVar8 - var_220h >> 1;\n                                    }\n                                    goto code_r0x0041c494;\n                                }\n                                if (var_211h == 0x75) goto code_r0x0041c128;\n                                if (var_211h != 0x78) goto code_r0x0041c494;\n                                var_24ch = 0x27;\ncode_r0x0041c2e9:\n                                var_228h = 0x10;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_22ch._1_1_ = var_24ch + 'Q';\n                                    var_22ch._0_1_ = 0x30;\n                                    var_234h = 2;\n                                }\n                                goto code_r0x0041c132;\n                            }\n                            if (var_211h == 0x70) {\n                                var_218h = 0x8;\ncode_r0x0041c2b7:\n                                var_24ch = 7;\n                                ppiVar13 = arg_14h;\n                                goto code_r0x0041c2e9;\n                            }\n                            if (var_211h < 'e') goto code_r0x0041c494;\n                            arg_14h = ppiVar13;\n                            if (var_211h < 'h') goto code_r0x0041c157;\n                            if (var_211h == 0x69) goto code_r0x0041c121;\n                            if (var_211h != 0x6e) {\n                                if (var_211h != 0x6f) goto code_r0x0041c494;\n                                var_228h = 0x8;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_210h = var_210h | 0x200;\n                                }\n                                goto code_r0x0041c132;\n                            }\n                            var_21ch = ppiVar13 + 1;\n                            piVar12 = *ppiVar13;\n                            iVar10 = fcn.00420e69();\n                            if (iVar10 == 0) goto code_r0x0041bb51;\n                            if ((var_210h & 0x20) == 0) {\n                                *piVar12 = var_224h;\n                            }\n                            else {\n                                *piVar12 = var_224h;\n                            }\n                            var_244h = 1;\n                        }\n                        if (var_248h != NULL) {\n                            fcn.004138f8(var_248h);\n                            var_248h = NULL;\n                        }\n                    }\n                    var_211h = *var_240h;\n                    iVar10 = var_274h;\n                    arg_ch = var_240h;\n                    arg_14h = var_21ch;\n                    ppiVar13 = var_21ch;\n                }\n                if (var_250h != '\\0') {\n                    *(var_254h + 0x70) = *(var_254h + 0x70) & 0xfffffffd;\n                }\n                goto code_r0x0041c6b3;\n            }\n        }\n    }\ncode_r0x0041bb51:\n    puVar4 = fcn.00418137();\n    *puVar4 = 0x16;\n    fcn.004180e5();\n    if (var_250h != '\\0') {\n        *(var_254h + 0x70) = *(var_254h + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041c6b3:\n    fcn.0041a3c8(unaff_EBX);\n    return;\n}\n",
        "token_count": 5988
    },
    "0041e58e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041e58e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.0041e7d0();\n    fcn.0041e613(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 92
    },
    "004206dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004206dc(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x490d40 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00417a3c();\n    var_14h = 0;\n    if (*0x497154 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x483470),  pcVar4 = *0x490000,  iVar2 == 0))\n        goto code_r0x00420839;\n        *0x497154 = (**0x490000)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x483460);\n        *0x497158 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x49715c = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x497164 = (*pcVar4)(uVar3);\n        if (*0x497164 != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x483418);\n            *0x497160 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = *0x490004;\n    if ((*0x497160 == var_18h) || (*0x497164 == var_18h)) {\ncode_r0x004207e8:\n        if ((((*0x497158 != var_18h) && (pcVar4 = (*pcVar6)(*0x497158),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x49715c != var_18h && (pcVar4 = (*pcVar6)(*0x49715c),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (**0x490004)(*0x497160);\n        pcVar5 = (*pcVar6)(*0x497164);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x004207e8;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x497154);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00420839:\n    fcn.0041a3c8(unaff_EBX);\n    return;\n}\n",
        "token_count": 896
    },
    "00420faf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00420faf(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x490d40 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x004210f3;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x004210fa;\ncode_r0x004210f3:\n                        do {\n                            bVar6 = true;\ncode_r0x004210fa:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00421108;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00421108:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x491104 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x491104 < iVar14) {\n                if (iVar14 < *0x491100) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x491100;\n                }\n                goto code_r0x004214b3;\n            }\n            iVar13 = *0x491104 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x004212a7;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x004212a7:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x004214b3:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.0041a3c8(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3253
    },
    "00421500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00421500(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x490d40 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x491124;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x491120 + -1;\n        iVar14 = *0x491120 + (*0x491120 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x491120 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00421644;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0042164b;\ncode_r0x00421644:\n                        do {\n                            bVar6 = true;\ncode_r0x0042164b:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00421659;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00421659:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x49111c - *0x491120) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x49111c < iVar14) {\n                if (iVar14 < *0x491118) {\n                    iVar14 = iVar14 + *0x49112c;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x491124 + (*0x491124 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x491124 + (*0x491124 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x49112c + *0x491118;\n                }\n                goto code_r0x00421a04;\n            }\n            iVar13 = *0x49111c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x491120 + -1;\n            iVar13 = *0x491120 + (*0x491120 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x491120 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x004217f8;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x004217f8:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x491124 + 1 + (*0x491124 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00421a04:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x491128 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x491128 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.0041a3c8(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3207
    },
    "0042264c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042264c(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = arg_10h;\n    uVar8 = 0;\n    var_4h._0_2_ = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        uVar5 = 0;\n        arg_10h = NULL;\n        do {\n            uVar9 = *puVar4;\n            uVar1 = puVar4[1];\n            uVar2 = puVar4[2];\n            bVar3 = false;\n            uVar6 = (uVar8 * 2 | uVar5 >> 0x1f) * 2 | uVar5 * 2 >> 0x1f;\n            uVar5 = uVar5 * 4;\n            uVar8 = (arg_10h * 2 | uVar8 >> 0x1f) * 2 | uVar8 * 2 >> 0x1f;\n            uVar7 = uVar9 + uVar5;\n            *puVar4 = uVar5;\n            puVar4[1] = uVar6;\n            puVar4[2] = uVar8;\n            if ((uVar7 < uVar5) || (uVar7 < uVar9)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar7;\n            uVar5 = uVar6;\n            if (bVar3) {\n                bVar3 = false;\n                uVar5 = uVar6 + 1;\n                if ((uVar5 < uVar6) || (uVar5 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar5;\n                if (bVar3) {\n                    uVar8 = uVar8 + 1;\n                    puVar4[2] = uVar8;\n                }\n            }\n            bVar3 = false;\n            uVar9 = uVar5 + uVar1;\n            if ((uVar9 < uVar5) || (uVar9 < uVar1)) {\n                bVar3 = true;\n            }\n            puVar4[1] = uVar9;\n            if (bVar3) {\n                uVar8 = uVar8 + 1;\n                puVar4[2] = uVar8;\n            }\n            bVar3 = false;\n            arg_10h = (uVar8 + uVar2) * 2 | uVar9 >> 0x1f;\n            uVar8 = uVar7 * 2;\n            uVar9 = uVar9 * 2 | uVar7 >> 0x1f;\n            puVar4[2] = arg_10h;\n            *puVar4 = uVar8;\n            puVar4[1] = uVar9;\n            uVar5 = uVar8 + *arg_8h;\n            if ((uVar5 < uVar8) || (uVar5 < *arg_8h)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar5;\n            uVar8 = uVar9;\n            if (bVar3) {\n                uVar8 = uVar9 + 1;\n                bVar3 = false;\n                if ((uVar8 < uVar9) || (uVar8 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar8;\n                if (bVar3) {\n                    arg_10h = arg_10h + 1;\n                    puVar4[2] = arg_10h;\n                }\n            }\n            arg_ch = arg_ch + -1;\n            arg_8h = arg_8h + 1;\n            puVar4[1] = uVar8;\n            puVar4[2] = arg_10h;\n        } while (arg_ch != 0);\n    }\n    if (puVar4[2] == 0) {\n        uVar8 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -0x10;\n            uVar5 = uVar8 >> 0x10;\n            uVar8 = uVar8 << 0x10 | *puVar4 >> 0x10;\n            puVar4[1] = uVar8;\n            *puVar4 = *puVar4 << 0x10;\n        } while (uVar5 == 0);\n        puVar4[2] = uVar5;\n    }\n    uVar8 = puVar4[2];\n    if ((uVar8 & 0x8000) == 0) {\n        uVar5 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -1;\n            uVar9 = uVar8 * 2;\n            uVar8 = uVar9 | uVar5 >> 0x1f;\n            uVar5 = uVar5 * 2 | *puVar4 >> 0x1f;\n            *puVar4 = *puVar4 * 2;\n            puVar4[1] = uVar5;\n            puVar4[2] = uVar8;\n        } while ((uVar9 & 0x8000) == 0);\n    }\n    *(puVar4 + 10) = var_4h;\n    return;\n}\n",
        "token_count": 1359
    },
    "0042ecbb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0042ecbb(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    puVar3 = arg_8h;\n    if (arg_ch < 0) {\n        uVar2 = *arg_8h;\n        puVar6 = arg_8h;\n        while (uVar2 != 0) {\n            puVar6 = puVar6 + 1;\n            uVar2 = *puVar6;\n        }\n        arg_ch = puVar6 - arg_8h;\n    }\n    do {\n        if (arg_ch < 1) {\n            return 0xffffffff;\n        }\n        uVar2 = *puVar3;\n        uVar4 = uVar2;\n        arg_ch = arg_ch + -1;\n        if (0x7f < uVar4) {\n            if ((uVar4 < 0xc0) || (uVar5 = *((uVar4 & 0x3f) + 0x485318),  3 < uVar5)) {\n                return puVar3 + -arg_8h;\n            }\n            if (arg_ch < uVar5) {\n                return puVar3 + arg_ch + (1 - arg_8h);\n            }\n            uVar1 = puVar3[1];\n            puVar3 = puVar3 + 1;\n            arg_ch = arg_ch - uVar5;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x0042ed4c;\n            if (uVar5 == 1) {\n                if ((uVar2 & 0x3e) == 0) goto code_r0x0042ed4c;\n            }\n            else {\n                if (uVar5 == 2) {\n                    if (uVar4 == 0xe0) {\n                        uVar1 = uVar1 & 0x20;\njoined_r0x0042ed70:\n                        if (uVar1 == 0) {\ncode_r0x0042ed4c:\n                            return puVar3 + -arg_8h;\n                        }\n                    }\n                    else if ((uVar4 == 0xed) && (0x9f < uVar1)) goto code_r0x0042ed4c;\n                }\n                else if (uVar5 == 3) {\n                    if (uVar4 == 0xf0) {\n                        uVar1 = uVar1 & 0x30;\n                        goto joined_r0x0042ed70;\n                    }\n                    if ((0xf4 < uVar4) || ((uVar4 == 0xf4 && (0x8f < uVar1)))) goto code_r0x0042ed4c;\n                }\n                while (uVar5 = uVar5 - 1,  0 < uVar5) {\n                    puVar6 = puVar3 + 1;\n                    puVar3 = puVar3 + 1;\n                    if ((*puVar6 & 0xc0) != 0x80) goto code_r0x0042ed4c;\n                }\n            }\n        }\n        puVar3 = puVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 749
    },
    "0041376b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041376b(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (arg_8h < 0xffffffe1) {\n        do {\n            if (*0x496e6c == 0) {\n                fcn.00418ac1();\n                fcn.00418912(0x1e);\n                fcn.00411822(0xff);\n            }\n            uVar1 = arg_8h;\n            if (arg_8h == 0) {\n                uVar1 = 1;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x496e6c, 0, uVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (*0x496e68 == 0) {\n                puVar4 = fcn.00418137();\n                *puVar4 = 0xc;\n                break;\n            }\n            iVar3 = fcn.00411b28(arg_8h);\n        } while (iVar3 != 0);\n        puVar4 = fcn.00418137();\n        *puVar4 = 0xc;\n    }\n    else {\n        fcn.00411b28(arg_8h);\n        puVar4 = fcn.00418137();\n        *puVar4 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 341
    },
    "0042f284": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f284(uint arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *arg_ch_00;\n    \n    arg_ch_00 = \"alpha\";\n    iVar3 = 0;\n    do {\n        if (arg_ch == *(iVar3 + 0x48605c)) {\n            iVar2 = fcn.00416af1(arg_8h, arg_ch_00, arg_ch);\n            if (iVar2 == 0) {\n                return iVar3;\n            }\n        }\n        pcVar1 = iVar3 + 0x48605d;\n        arg_ch_00 = arg_ch_00 + *(iVar3 + 0x48605c) + 1;\n        iVar3 = iVar3 + 1;\n    } while (*pcVar1 != '\\0');\n    return -1;\n}\n",
        "token_count": 204
    },
    "0042f321": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0042f321(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *arg_8h;\n    do {\n        uVar1 = uVar2;\n        if (uVar1 == 0) {\n            return NULL;\n        }\n        if (uVar1 == 0x52) {\n            return arg_8h;\n        }\n    // switch table (57 cases) at 0x42f3d5\n        switch(uVar1) {\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n            uVar2 = arg_8h[1];\n            break;\n        case 0x3f:\n        case 0x40:\n        case 0x41:\n        case 0x45:\n            uVar2 = arg_8h[3];\n            break;\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n        case 0x5e:\n        case 0x5f:\n        case 0x60:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6c:\n        case 0x6e:\n        case 0x70:\n            goto code_r0x0042f388;\n        case 0x6b:\n        case 0x6d:\n        case 0x6f:\n            uVar2 = arg_8h[1];\n            goto code_r0x0042f386;\n        case 0x71:\n            uVar2 = arg_8h[3];\ncode_r0x0042f386:\n            arg_8h = arg_8h + uVar2;\n            goto code_r0x0042f388;\n        default:\n            uVar1 = CONCAT11(arg_8h[1], arg_8h[2]);\n            goto code_r0x0042f3c2;\n        }\n        if ((uVar2 == 0x10) || (uVar2 == 0xf)) {\n            arg_8h = arg_8h + 2;\n        }\ncode_r0x0042f388:\n        arg_8h = arg_8h + *(uVar1 + 0x485228);\n        if (arg_ch != 0) {\n    // switch table (16 cases) at 0x42f425\n            switch(uVar1) {\n            case 0x1c:\n            case 0x1d:\n            case 0x1f:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x25:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n                if (0xbf < arg_8h[-1]) {\n                    uVar1 = *((arg_8h[-1] & 0x3f) + 0x485318);\ncode_r0x0042f3c2:\n                    arg_8h = arg_8h + uVar1;\n                }\n            }\n        }\n        uVar2 = *arg_8h;\n    } while( true );\n}\n",
        "token_count": 1007
    },
    "0042f43d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0042f43d(uint8_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *arg_8h;\n    do {\n        uVar1 = uVar2;\n        if (uVar1 == 0) {\n            return NULL;\n        }\n        if (uVar1 == 0x50) {\n            uVar1 = CONCAT11(arg_8h[1], arg_8h[2]);\n            goto code_r0x0042f510;\n        }\n        if (uVar1 == 0x5c) {\n            if (arg_10h < 0) {\n                return arg_8h;\n            }\n            arg_8h = arg_8h + 3;\n            goto code_r0x0042f512;\n        }\n    // switch table (57 cases) at 0x42f525\n        switch(uVar1) {\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n            uVar2 = arg_8h[1];\n            break;\n        case 0x3f:\n        case 0x40:\n        case 0x41:\n        case 0x45:\n            uVar2 = arg_8h[3];\n            break;\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n        case 0x5e:\n        case 0x5f:\n        case 0x60:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6c:\n        case 0x6e:\n        case 0x70:\n            goto code_r0x0042f4d6;\n        case 0x6b:\n        case 0x6d:\n        case 0x6f:\n            uVar2 = arg_8h[1];\n            goto code_r0x0042f4d4;\n        case 0x71:\n            uVar2 = arg_8h[3];\ncode_r0x0042f4d4:\n            arg_8h = arg_8h + uVar2;\n            goto code_r0x0042f4d6;\n        default:\n            if (CONCAT11(arg_8h[3], arg_8h[4]) == arg_10h) {\n                return arg_8h;\n            }\n            arg_8h = arg_8h + 5;\n            goto code_r0x0042f512;\n        }\n        if ((uVar2 == 0x10) || (uVar2 == 0xf)) {\n            arg_8h = arg_8h + 2;\n        }\ncode_r0x0042f4d6:\n        arg_8h = arg_8h + *(uVar1 + 0x485228);\n        if (arg_ch != 0) {\n    // switch table (16 cases) at 0x42f575\n            switch(uVar1) {\n            case 0x1c:\n            case 0x1d:\n            case 0x1f:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x25:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n                if (0xbf < arg_8h[-1]) {\n                    uVar1 = *((arg_8h[-1] & 0x3f) + 0x485318);\ncode_r0x0042f510:\n                    arg_8h = arg_8h + uVar1;\n                }\n            }\n        }\ncode_r0x0042f512:\n        uVar2 = *arg_8h;\n    } while( true );\n}\n",
        "token_count": 1145
    },
    "0042f58d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f58d(uint8_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    iVar5 = 0;\n    do {\n        puVar4 = arg_8h + 3;\ncode_r0x0042f5ad:\n        arg_8h = puVar4;\n        uVar1 = *arg_8h;\n    // switch table (105 cases) at 0x42f7ed\n        switch(uVar1) {\n        case 0:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n            iVar2 = iVar5;\n            if ((-1 < var_4h) && (iVar2 = var_4h,  var_4h != iVar5)) {\n                return -1;\n            }\n            var_4h = iVar2;\n            if (uVar1 != 0x54) {\n                return var_4h;\n            }\n            iVar5 = 0;\n            puVar4 = arg_8h + 3;\n            goto code_r0x0042f5ad;\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n            goto code_r0x0042f766;\n        case 0xe:\n            return -2;\n        case 0xf:\n        case 0x10:\n            arg_8h = arg_8h + 2;\ncode_r0x0042f766:\n            iVar5 = iVar5 + 1;\n            puVar4 = arg_8h + 1;\n            goto code_r0x0042f5ad;\n        default:\n            goto code_r0x0042f7e4;\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n            iVar5 = iVar5 + 1;\n            puVar4 = arg_8h + 2;\n            if (((arg_ch & 0x800) != 0) && (0xbf < arg_8h[1])) {\n                puVar4 = puVar4 + *((arg_8h[1] & 0x3f) + 0x485318);\n            }\n            goto code_r0x0042f5ad;\n        case 0x27:\n            iVar5 = iVar5 + CONCAT11(arg_8h[1], arg_8h[2]);\n            puVar4 = arg_8h + 4;\n            if (((arg_ch & 0x800) != 0) && (0xbf < arg_8h[3])) {\n                puVar4 = puVar4 + *((arg_8h[3] & 0x3f) + 0x485318);\n            }\n            goto code_r0x0042f5ad;\n        case 0x41:\n            iVar5 = iVar5 + CONCAT11(arg_8h[1], arg_8h[2]);\n            if ((arg_8h[3] == 0x10) || (arg_8h[3] == 0xf)) {\n                arg_8h = arg_8h + 2;\n            }\n            puVar4 = arg_8h + 4;\n            goto code_r0x0042f5ad;\n        case 0x4e:\n        case 0x4f:\n            goto code_r0x0042f77e;\n        case 0x50:\n            arg_8h = arg_8h + (CONCAT11(arg_8h[1], arg_8h[2]) - 0x21);\ncode_r0x0042f77e:\n    // switch table (8 cases) at 0x42f891\n            switch(arg_8h[0x21]) {\n            case 0x46:\n            case 0x47:\n            case 0x4a:\n            case 0x4b:\n                goto code_r0x0042f7e4;\n            default:\n                iVar5 = iVar5 + 1;\n                puVar4 = arg_8h + 0x21;\n                break;\n            case 0x4c:\n            case 0x4d:\n                if (CONCAT11(arg_8h[0x22], arg_8h[0x23]) == CONCAT11(arg_8h[0x24], arg_8h[0x25])) goto code_r0x0042f7b9;\n                goto code_r0x0042f7e4;\n            }\n            goto code_r0x0042f5ad;\n        case 0x52:\n            if (arg_10h == 0) {\n                return -3;\n            }\n            puVar3 = CONCAT11(arg_8h[1], arg_8h[2]) + *(arg_14h + 0x14);\n            puVar4 = puVar3;\n            do {\n                puVar4 = puVar4 + CONCAT11(puVar4[1], puVar4[2]);\n            } while (*puVar4 == 0x54);\n            if ((puVar3 < arg_8h) && (arg_8h < puVar4)) {\ncode_r0x0042f7e4:\n                return -1;\n            }\n            iVar2 = fcn.0042f58d(puVar3 + 2, arg_ch, arg_10h, arg_14h);\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            iVar5 = iVar5 + iVar2;\n            break;\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5b:\n            do {\n                arg_8h = arg_8h + CONCAT11(arg_8h[1], arg_8h[2]);\n            } while (*arg_8h == 0x54);\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x53:\n        case 0x5c:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n            puVar4 = arg_8h + *(*arg_8h + 0x485228);\n            goto code_r0x0042f5ad;\n        case 0x5d:\n        case 0x5e:\n        case 0x5f:\n        case 0x60:\n            iVar2 = fcn.0042f58d(arg_8h + ((uVar1 != 0x5f) - 1 & 2), arg_ch, arg_10h, arg_14h);\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            iVar5 = iVar5 + iVar2;\n            do {\n                arg_8h = arg_8h + CONCAT11(arg_8h[1], arg_8h[2]);\n            } while (*arg_8h == 0x54);\n        }\n    } while( true );\ncode_r0x0042f7b9:\n    iVar5 = iVar5 + CONCAT11(arg_8h[0x22], arg_8h[0x23]);\n    puVar4 = arg_8h + 0x26;\n    goto code_r0x0042f5ad;\n}\n",
        "token_count": 1751
    },
    "0042f8a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f8a5(uint8_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    do {\n    // switch table (101 cases) at 0x42f92d\n        switch(*arg_8h) {\n        case 4:\n        case 5:\n            if (arg_14h == 0) {\n                return;\n            }\n        case 0x53:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n            arg_8h = arg_8h + *(*arg_8h + 0x485228);\n            break;\n        default:\n            return;\n        case 0x19:\n            if ((0 < arg_10h) && ((arg_8h[1] & arg_10h) != (*arg_ch & arg_10h))) {\n                *arg_ch = arg_8h[1];\n            }\n            arg_8h = arg_8h + 2;\n            break;\n        case 0x59:\n        case 0x5a:\n        case 0x5b:\n            if (arg_14h == 0) {\n                return;\n            }\n            do {\n                arg_8h = arg_8h + CONCAT11(arg_8h[1], arg_8h[2]);\n            } while (*arg_8h == 0x54);\n            arg_8h = arg_8h + *(*arg_8h + 0x485228);\n        }\n    } while( true );\n}\n",
        "token_count": 364
    },
    "0042f9a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0042f9a6(uint8_t **arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint8_t *var_4h;\n    \n    puVar7 = *arg_8h;\n    iVar2 = *arg_20h;\n    bVar4 = false;\n    var_4h = puVar7;\n    if (*puVar7 == 0x28) {\n        if (puVar7[1] == 0x2a) {\n            var_4h = puVar7 + 2;\n        }\n        else if (puVar7[1] == 0x3f) {\n            uVar5 = puVar7[2];\n            if (uVar5 == 0x7c) {\n                bVar4 = true;\n                var_4h = puVar7 + 3;\n            }\n            else {\n                if (uVar5 == 0x23) {\n                    var_4h = puVar7 + 3;\n                    uVar5 = *var_4h;\n                    if (uVar5 != 0) {\n                        while (uVar5 != 0x29) {\n                            var_4h = var_4h + 1;\n                            uVar5 = *var_4h;\n                            if (uVar5 == 0) {\n                                *arg_8h = var_4h;\n                                return -1;\n                            }\n                        }\n                    }\n                    goto code_r0x0042fd39;\n                }\n                var_4h = puVar7 + 2;\n                if (uVar5 == 0x28) {\n                    if (puVar7[3] != 0x3f) {\n                        uVar5 = *var_4h;\n                        puVar7 = var_4h;\n                        while (var_4h = puVar7,  uVar5 != 0) {\n                            if (uVar5 == 0x29) {\n                                if (*puVar7 != 0) goto code_r0x0042fa79;\n                                break;\n                            }\n                            puVar7 = puVar7 + 1;\n                            uVar5 = *puVar7;\n                        }\n                    }\n                }\n                else {\n                    if (*var_4h == 0x50) {\n                        var_4h = puVar7 + 3;\n                    }\n                    if ((((*var_4h == 0x3c) && (var_4h[1] != 0x21)) && (var_4h[1] != 0x3d)) || (*var_4h == 0x27)) {\n                        iVar6 = iVar2 + 1;\n                        *arg_20h = iVar6;\n                        if ((arg_10h == 0) && (iVar6 == arg_14h)) {\n                            return iVar6;\n                        }\n                        uVar5 = *var_4h;\n                        puVar7 = var_4h + 1;\n                        if (uVar5 == 0x3c) {\n                            uVar5 = 0x3e;\n                        }\n                        uVar1 = *puVar7;\n                        var_4h = puVar7;\n                        while (uVar1 != uVar5) {\n                            var_4h = var_4h + 1;\n                            uVar1 = *var_4h;\n                        }\n                        if (((arg_10h != 0) && (arg_14h == var_4h - puVar7)) &&\n                           (iVar6 = fcn.00416af1(arg_10h, puVar7, arg_14h),  iVar6 == 0)) {\n                            return *arg_20h;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            iVar6 = iVar2 + 1;\n            *arg_20h = iVar6;\n            if ((arg_10h == 0) && (iVar6 == arg_14h)) {\n                return iVar6;\n            }\ncode_r0x0042fa79:\n            var_4h = puVar7 + 1;\n        }\n    }\n    var_8h = iVar2;\n    if (var_4h < *(arg_ch + 0x1c)) {\ncode_r0x0042fb10:\n        uVar5 = *var_4h;\n        if (uVar5 == 0x5c) {\n            var_4h = var_4h + 1;\n            if (*var_4h != 0) {\n                if (*var_4h == 0x51) {\n                    do {\n                        puVar7 = var_4h;\n                        var_4h = puVar7 + 1;\n                        if (*var_4h == 0) goto code_r0x0042fd39;\n                    } while ((*var_4h != 0x5c) || (var_4h = puVar7 + 2,  *var_4h != 0x45));\n                }\n                goto code_r0x0042fd1c;\n            }\n        }\n        else {\n            if (uVar5 == 0x5b) {\n                bVar3 = false;\n                puVar7 = var_4h;\n                while( true ) {\n                    while (var_4h = puVar7,  var_4h[1] == 0x5c) {\n                        puVar7 = var_4h + 2;\n                        if (*puVar7 != 0x45) {\n                            iVar6 = fcn.00416af1(puVar7, 0x48bcf8, 3);\n                            if (iVar6 != 0) goto code_r0x0042fbae;\n                            puVar7 = var_4h + 4;\n                        }\n                    }\n                    if ((bVar3) || (var_4h[1] != 0x5e)) break;\n                    bVar3 = true;\n                    puVar7 = var_4h + 1;\n                }\ncode_r0x0042fbae:\n                if ((var_4h[1] == 0x5d) && ((*(arg_ch + 0x44) & 0x2000000) == 0)) {\n                    var_4h = var_4h + 1;\n                }\n                var_4h = var_4h + 1;\n                uVar5 = *var_4h;\n                while (uVar5 != 0x5d) {\n                    if (uVar5 == 0) {\n                        return -1;\n                    }\n                    if (uVar5 == 0x5c) {\n                        var_4h = var_4h + 1;\n                        if (*var_4h == 0) goto code_r0x0042fd39;\n                        if (*var_4h == 0x51) {\n                            do {\n                                puVar7 = var_4h;\n                                var_4h = puVar7 + 1;\n                                if (*var_4h == 0) goto code_r0x0042fd39;\n                            } while ((*var_4h != 0x5c) || (var_4h = puVar7 + 2,  *var_4h != 0x45));\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                    uVar5 = *var_4h;\n                }\n                goto code_r0x0042fd1c;\n            }\n            if ((arg_18h == 0) || (uVar5 != 0x23)) {\n                if (uVar5 == 0x28) {\n                    iVar6 = fcn.0042f9a6(&var_4h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                    if (0 < iVar6) {\n                        return iVar6;\n                    }\n                    uVar5 = *var_4h;\n                    goto joined_r0x0042fc6f;\n                }\n                if (uVar5 != 0x29) {\n                    if ((uVar5 == 0x7c) && (bVar4)) {\n                        if (var_8h < *arg_20h) {\n                            var_8h = *arg_20h;\n                        }\n                        *arg_20h = iVar2;\n                    }\n                    goto code_r0x0042fd1c;\n                }\n                if ((bVar4) && (*arg_20h < var_8h)) {\n                    *arg_20h = var_8h;\n                }\n            }\n            else {\n                var_4h = var_4h + 1;\n                uVar5 = *var_4h;\n                if (uVar5 != 0) {\n                    do {\n                        puVar7 = var_4h;\n                        if (*(arg_ch + 0x58) == 0) {\n                            if (((var_4h <= *(arg_ch + 0x1c) - *(arg_ch + 0x5c)) && (uVar5 == *(arg_ch + 0x60))) &&\n                               ((*(arg_ch + 0x5c) == 1 || (var_4h[1] == *(arg_ch + 0x61))))) goto code_r0x0042fc62;\n                        }\n                        else if ((var_4h < *(arg_ch + 0x1c)) &&\n                                (iVar6 = fcn.0042efe8(var_4h, *(arg_ch + 0x58), *(arg_ch + 0x1c), arg_ch + 0x5c, arg_1ch\n                                                     ),  iVar6 != 0)) goto code_r0x0042fc62;\n                        var_4h = puVar7 + 1;\n                        if (arg_1ch != 0) {\n                            uVar5 = *var_4h;\n                            while ((uVar5 & 0xc0) == 0x80) {\n                                var_4h = var_4h + 1;\n                                uVar5 = *var_4h;\n                            }\n                        }\n                        uVar5 = *var_4h;\n                        if (uVar5 == 0) {\n                            *arg_8h = var_4h;\n                            return -1;\n                        }\n                    } while( true );\n                }\n            }\n        }\n    }\ncode_r0x0042fd39:\n    *arg_8h = var_4h;\n    return -1;\ncode_r0x0042fc62:\n    var_4h = puVar7 + *(arg_ch + 0x5c) + -1;\n    uVar5 = *var_4h;\njoined_r0x0042fc6f:\n    if (uVar5 == 0) goto code_r0x0042fd39;\ncode_r0x0042fd1c:\n    var_4h = var_4h + 1;\n    if (*(arg_ch + 0x1c) <= var_4h) goto code_r0x0042fd39;\n    goto code_r0x0042fb10;\n}\n",
        "token_count": 2533
    },
    "0042fe8e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042fe8e(uint8_t **arg_8h, uint *arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puVar7 = *arg_8h;\n    uVar3 = puVar7[1];\n    uVar5 = uVar3;\n    puVar6 = puVar7 + 2;\n    uVar11 = arg_14h >> 0xb & 1;\n    if ((uVar11 != 0) && (0xbf < uVar5)) {\n        uVar8 = *puVar6 & 0x3f;\n        if ((uVar3 & 0x20) == 0) {\n            uVar5 = (uVar5 & 0x1f) << 6 | uVar8;\n            puVar6 = puVar7 + 3;\n        }\n        else if ((uVar3 & 0x10) == 0) {\n            uVar5 = puVar7[3] & 0x3f | (uVar8 | (uVar5 & 0xf) << 6) << 6;\n            puVar6 = puVar7 + 4;\n        }\n        else if ((uVar3 & 8) == 0) {\n            uVar5 = puVar7[4] & 0x3f | ((uVar8 | (uVar5 & 7) << 6) << 6 | puVar7[3] & 0x3f) << 6;\n            puVar6 = puVar7 + 5;\n        }\n        else if ((uVar3 & 4) == 0) {\n            uVar5 = puVar7[5] & 0x3f |\n                    (((uVar8 | (uVar5 & 3) << 6) << 6 | puVar7[3] & 0x3f) << 6 | puVar7[4] & 0x3f) << 6;\n            puVar6 = puVar7 + 6;\n        }\n        else {\n            uVar5 = puVar7[6] & 0x3f |\n                    ((((uVar8 | (uVar5 & 1) << 6) << 6 | puVar7[3] & 0x3f) << 6 | puVar7[4] & 0x3f) << 6 |\n                    puVar7[5] & 0x3f) << 6;\n            puVar6 = puVar7 + 7;\n        }\n    }\n    puVar7 = puVar6 + -1;\n    uVar8 = uVar5;\n    if (uVar5 == 0) {\n        *arg_ch = 1;\n        puVar6 = puVar7;\n        goto code_r0x004302af;\n    }\n    uVar1 = uVar5 - 0x30;\n    puVar9 = puVar7;\n    if ((uVar1 < 0x4b) && (uVar10 = *(uVar1 * 2 + 0x485f00),  uVar8 = uVar10,  uVar10 == 0)) {\n    // switch table (73 cases) at 0x4302ce\n        switch(uVar5) {\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n            if (arg_18h == 0) {\n                uVar3 = *(*puVar6 + 0x486b28);\n                uVar8 = uVar1;\n                while ((uVar3 & 4) != 0) {\n                    uVar8 = (puVar9[1] - 0x30) + uVar8 * 10;\n                    uVar3 = *(puVar9[2] + 0x486b28);\n                    puVar9 = puVar9 + 1;\n                }\n                if (uVar8 < 0) {\n                    *arg_ch = 0x3d;\n                    break;\n                }\n                if ((uVar8 < 10) || (uVar8 <= arg_10h)) goto code_r0x004300e1;\n            }\n            uVar5 = *puVar7;\n            if (0x37 < uVar5) {\n                puVar6 = puVar6 + -2;\n                uVar8 = 0;\n                goto code_r0x004302af;\n            }\n        case 0x30:\n            uVar8 = uVar5 - 0x30;\n            do {\n                uVar10 = uVar10 + 1;\n                if ((puVar7[1] < 0x30) || (0x37 < puVar7[1])) break;\n                puVar6 = puVar7 + 1;\n                puVar7 = puVar7 + 1;\n                uVar8 = (*puVar6 - 0x30) + uVar8 * 8;\n            } while (uVar10 < 2);\n            puVar9 = puVar7;\n            if ((uVar11 == 0) && (0xff < uVar8)) {\n                *arg_ch = 0x33;\n            }\n            break;\n        default:\n            uVar8 = uVar5;\n            if ((arg_14h & 0x40) != 0) {\n                *arg_ch = 3;\n            }\n            break;\n        case 0x4c:\n        case 0x55:\n        case 0x6c:\n        case 0x75:\n            *arg_ch = 0x25;\n            uVar8 = uVar5;\n            break;\n        case 99:\n            uVar8 = *puVar6;\n            if (uVar8 == 0) {\n                *arg_ch = 2;\n                goto code_r0x004302af;\n            }\n            puVar9 = puVar6;\n            if (uVar8 < 0x80) {\n                if (uVar8 - 0x61 < 0x1a) {\n                    uVar8 = uVar8 - 0x20;\n                }\n                uVar8 = uVar8 ^ 0x40;\n            }\n            else {\n                *arg_ch = 0x44;\n            }\n            break;\n        case 0x67:\n            uVar3 = *puVar6;\n            if ((uVar3 == 0x3c) || (uVar3 == 0x27)) {\n                uVar8 = 0xffffffe5;\n                puVar6 = puVar7;\n                goto code_r0x004302af;\n            }\n            if (uVar3 == 0x7b) {\n                uVar3 = puVar6[1];\n                puVar9 = puVar6;\n                while (uVar3 != 0) {\n                    if ((uVar3 == 0x7d) || ((uVar3 != 0x2d && ((*(uVar3 + 0x486b28) & 4) == 0)))) {\n                        uVar3 = puVar9[1];\n                        if ((uVar3 != 0) && (uVar3 != 0x7d)) {\n                            uVar8 = 0xffffffe4;\n                            puVar6 = puVar7;\n                            goto code_r0x004302af;\n                        }\n                        break;\n                    }\n                    uVar3 = puVar9[2];\n                    puVar9 = puVar9 + 1;\n                }\n                bVar4 = true;\n                puVar7 = puVar6;\n            }\n            else {\n                bVar4 = false;\n            }\n            puVar6 = puVar7 + 1;\n            if (*puVar6 == 0x2d) {\n                puVar7 = puVar7 + 1;\n            }\n            uVar8 = 0;\n            puVar9 = puVar7;\n            if ((*(puVar7[1] + 0x486b28) & 4) != 0) {\n                do {\n                    puVar9 = puVar7 + 1;\n                    uVar8 = (puVar7[1] - 0x30) + uVar8 * 10;\n                    puVar2 = puVar7 + 2;\n                    puVar7 = puVar9;\n                } while ((*(*puVar2 + 0x486b28) & 4) != 0);\n                if (uVar8 < 0) {\n                    *arg_ch = 0x3d;\n                    break;\n                }\n            }\n            if ((bVar4) && (puVar9 = puVar9 + 1,  *puVar9 != 0x7d)) {\n                *arg_ch = 0x39;\n            }\n            else {\n                if (uVar8 == 0) {\n                    *arg_ch = 0x3a;\n                    puVar6 = puVar9;\n                    goto code_r0x004302af;\n                }\n                if (*puVar6 == 0x2d) {\n                    if (arg_10h < uVar8) {\n                        *arg_ch = 0xf;\n                        break;\n                    }\n                    uVar8 = (arg_10h - uVar8) + 1;\n                }\ncode_r0x004300e1:\n                uVar8 = -uVar8 - 0x23;\n            }\n            break;\n        case 0x78:\n            if (*puVar6 == 0x7b) {\n                uVar5 = puVar6[1];\n                puVar9 = puVar6 + 1;\n                uVar8 = 0;\n                uVar3 = *(uVar5 + 0x486b28);\n                var_4h = 0;\n                while ((uVar3 & 8) != 0) {\n                    puVar9 = puVar9 + 1;\n                    if ((uVar8 != 0) || (uVar5 != 0x30)) {\n                        var_4h = var_4h + 1;\n                        if (0x60 < uVar5) {\n                            uVar5 = uVar5 - 0x20;\n                        }\n                        uVar8 = (uVar8 * 0x10 - (((0x40 < uVar5) - 1 & 0xfffffff9) + 0x37)) + uVar5;\n                    }\n                    uVar5 = *puVar9;\n                    uVar3 = *(uVar5 + 0x486b28);\n                }\n                if (*puVar9 == 0x7d) {\n                    if ((uVar8 < 0) || ((-(uVar11 != 0) & 6) + 2 < var_4h)) {\n                        *arg_ch = 0x22;\n                    }\n                    break;\n                }\n            }\n            uVar8 = 0;\n            puVar9 = puVar7;\n            do {\n                uVar10 = uVar10 + 1;\n                if ((*(puVar9[1] + 0x486b28) & 8) == 0) break;\n                uVar5 = puVar9[1];\n                puVar9 = puVar9 + 1;\n                if (0x60 < uVar5) {\n                    uVar5 = uVar5 - 0x20;\n                }\n                uVar8 = (uVar8 * 0x10 - (((0x40 < uVar5) - 1 & 0xfffffff9) + 0x37)) + uVar5;\n            } while (uVar10 < 2);\n        }\n    }\n    puVar6 = puVar9;\n    if ((uVar8 == 0xfffffff4) && (puVar9[1] == 0x7b)) {\n        *arg_ch = 0x25;\n    }\ncode_r0x004302af:\n    if (((arg_14h & 0x20000000) != 0) && (uVar8 + 0xb < 6)) {\n        uVar8 = uVar8 - 0x17;\n    }\n    *arg_8h = puVar6;\n    return uVar8;\n}\n",
        "token_count": 2813
    },
    "0043035c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043035c(uint arg_8h, int32_t arg_ch)\n\n{\n    if (*0x4a86ec != '\\0') {\n        (*_sym.imp.GDI32.dll_EndPath)(arg_8h);\n        *0x4a86ec = '\\0';\n        if ((arg_ch == -1) || (arg_ch == -2)) {\n            (*_sym.imp.GDI32.dll_StrokePath)(arg_8h);\n        }\n        else {\n            (*_sym.imp.GDI32.dll_StrokeAndFillPath)(arg_8h);\n        }\n    }\n    if (*0x4a86e8 != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(arg_8h, *0x4a86e8);\n        *0x4a86e8 = 0;\n        (*_sym.imp.GDI32.dll_DeleteObject)(*0x4a86e4);\n        *0x4a86e4 = 0;\n        *0x4a86f4 = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "004303d9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004303d9(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint wParam)\n\n{\n    uint32_t lpPoint;\n    int32_t y;\n    \n    if (*0x4a86e0 != 0) {\n        lpPoint = arg_ch;\n        y = arg_10h;\n        (*_sym.imp.USER32.dll_ClientToScreen)(arg_8h, &lpPoint);\n        (*_sym.imp.COMCTL32.dll_ImageList_DragMove)(lpPoint, y);\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x200, wParam, arg_10h << 0x10 | arg_ch & 0xffff);\n    return;\n}\n",
        "token_count": 168
    },
    "0043055e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043055e(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h[1] != 0) {\n        iVar1 = fcn.00411777(0xc);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0043047a(iVar1, arg_ch);\n            *(iVar1 + 8) = arg_8h[1];\n            *(arg_8h[1] + 4) = iVar1;\n            arg_8h[2] = arg_8h[2] + 1;\n            arg_8h[1] = iVar1;\n            return;\n        }\n        *0x8 = arg_8h[1];\n        *(arg_8h[1] + 4) = 0;\n        arg_8h[2] = arg_8h[2] + 1;\n        arg_8h[1] = 0;\n        return;\n    }\n    iVar1 = fcn.00411777(0xc);\n    if (iVar1 != 0) {\n        uVar2 = fcn.0043047a(iVar1, arg_ch);\n        arg_8h[2] = arg_8h[2] + 1;\n        *arg_8h = uVar2;\n        arg_8h[1] = uVar2;\n        return;\n    }\n    arg_8h[2] = arg_8h[2] + 1;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return;\n}\n",
        "token_count": 369
    },
    "00430622": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430622(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    \n    ppiVar2 = arg_8h[0x73];\n    ppiVar3 = arg_8h[0x73];\n    while (ppiVar3 != NULL) {\n        if ((arg_ch == 0) || (ppiVar3 == *(arg_ch + 0x78))) {\n            piVar4 = ppiVar3[1];\n            while (piVar4 != NULL) {\n                piVar1 = piVar4[1];\n                fcn.0041137c(piVar4);\n                piVar4 = piVar1;\n            }\n            if ((*ppiVar2 == arg_8h[0x73]) || (ppiVar3 == arg_8h[0x73])) {\n                arg_8h[0x73] = *ppiVar3;\n            }\n            else {\n                *ppiVar2 = *ppiVar3;\n            }\n            fcn.0041137c(ppiVar3);\n            if (arg_ch != 0) break;\n            ppiVar2 = arg_8h[0x73];\n            ppiVar3 = arg_8h[0x73];\n        }\n        else {\n            ppiVar2 = ppiVar3;\n            ppiVar3 = *ppiVar3;\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h, 0, 1);\n    return;\n}\n",
        "token_count": 359
    },
    "004306bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004306bc(uint *arg_8h, int16_t *hgdiobj, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpvObject;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint lpNumberOfBytesRead;\n    int32_t *ppstm;\n    int32_t *var_4h;\n    \n    if (*hgdiobj == 0) {\n        hgdiobj = NULL;\ncode_r0x004307e4:\n        if (arg_8h[0x18] != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h[0x18]);\n        }\n        arg_8h[0x18] = hgdiobj;\n        uVar2 = *arg_8h;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x172, 0, hgdiobj);\n        return uVar2;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(hgdiobj, 0x80000000, 0, 0, 3, 0, 0);\n    if (iVar1 != -1) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar2);\n        if (iVar3 != 0) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar3);\n            (*_sym.imp.KERNEL32.dll_ReadFile)(iVar1, uVar4, uVar2, &lpNumberOfBytesRead, 0);\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(iVar3, 1, &ppstm);\n            var_4h = NULL;\n            (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(ppstm, 0, 0, 0x4819f0, &var_4h);\n            (**(*ppstm + 8))(ppstm);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar3);\n            if (var_4h != NULL) {\n                (**(*var_4h + 0xc))(var_4h, &hgdiobj);\n                (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n                if ((*arg_10h == 0) && (*arg_14h == 0)) {\n                    *arg_10h = var_20h;\n                    *arg_14h = var_1ch;\n                }\n                hgdiobj = (*_sym.imp.USER32.dll_CopyImage)(hgdiobj, 0, *arg_10h, *arg_14h, 0x2000);\n                (**(*var_4h + 8))(var_4h);\n                goto code_r0x004307e4;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 722
    },
    "00430817": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00430817(uint *arg_8h, uint32_t arg_ch, uint lpClassName, uint lpWindowName, uint32_t arg_18h, uint arg_1ch, \n            uint arg_20h, uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((arg_ch & 0x80000) != 0) {\n        arg_ch = arg_ch & 0xfff7ffff;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (arg_ch, lpClassName, lpWindowName, arg_18h | 0x50000000, arg_1ch, arg_20h, arg_24h, arg_28h, \n                       *arg_8h, arg_2ch, *0x4a8684, 0);\n    if (iVar1 != 0) {\n        if (arg_30h != '\\0') {\n            uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11, 0);\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0x30, uVar2);\n        }\n        if ((-1 < arg_8h[100]) && (*(arg_8h + 0x67) != '\\0')) {\n            (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 340
    },
    "004308aa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004308aa(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint lpRect;\n    uint var_20h;\n    int32_t lpPoint;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    if (*(arg_8h + 0x3a) == '\\0') {\n        uVar1 = *(arg_ch + 0x7e);\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_8h, &var_34h);\n        iVar2 = arg_8h[0x11];\n        iVar8 = arg_8h[0x12];\n        arg_10h = var_2ch;\n        var_14h = var_28h;\n        if ((var_2ch == 0) && (arg_10h = 1,  iVar2 != 0)) {\n            arg_10h = iVar2;\n        }\n        if ((var_28h == 0) && (var_14h = 1,  iVar8 != 0)) {\n            var_14h = iVar8;\n        }\n        if (arg_8h[0x68] != 0) {\n            var_8h = iVar8;\n            iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n            iVar8 = iVar8 - iVar7;\n        }\n        var_8h = iVar8;\n        (*_sym.imp.USER32.dll_GetWindowRect)(*arg_ch, &var_34h);\n        var_ch = var_2ch - var_34h;\n        var_10h = var_28h - var_30h;\n        var_18h = var_30h;\n        lpPoint = var_34h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n        *(arg_ch + 0x20) = (lpPoint * iVar2) / arg_10h;\n        *(arg_ch + 0x82) = (var_18h * iVar8) / var_14h;\n        *(arg_ch + 0x21) = (var_ch * iVar2) / arg_10h;\n        *(arg_ch + 0x86) = (var_10h * var_8h) / var_14h;\n        if (uVar1 != 0) {\n            iVar3 = lpPoint;\n            iVar4 = iVar2;\n            if (((uVar1 & 0x100) != 0) && (*(arg_ch + 0x21) = var_ch,  (uVar1 & 6) == 0)) {\n                if ((uVar1 & 8) == 0) {\n                    if (arg_10h / 2 < lpPoint) {\n                        *(arg_ch + 0x20) = ((((lpPoint - arg_10h) + var_ch) * iVar2) / arg_10h - var_ch) + iVar4;\n                    }\n                }\n                else {\n                    *(arg_ch + 0x20) = iVar3 - (iVar2 - arg_10h) / 2;\n                }\n            }\n            iVar5 = var_18h;\n            iVar6 = var_8h;\n            if ((uVar1 & 0x200) != 0) {\n                *(arg_ch + 0x86) = var_10h;\n                if ((uVar1 & 0x60) == 0) {\n                    if (uVar1 < '\\0') {\n                        *(arg_ch + 0x82) = iVar5 - (var_8h - var_14h) / 2;\n                    }\n                    else if (var_14h / 2 < var_18h) {\n                        *(arg_ch + 0x82) = ((((var_18h - var_14h) + var_10h) * var_8h) / var_14h - var_10h) + iVar6;\n                    }\n                }\n            }\n            if ((uVar1 & 2) != 0) {\n                *(arg_ch + 0x20) = iVar3;\n            }\n            if ((uVar1 & 4) != 0) {\n                if ((uVar1 & 2) == 0) {\n                    *(arg_ch + 0x20) = ((iVar3 - arg_10h) - *(arg_ch + 0x21)) + iVar4 + var_ch;\n                }\n                else {\n                    *(arg_ch + 0x21) = ((iVar3 - *(arg_ch + 0x20)) - arg_10h) + iVar4 + var_ch;\n                }\n            }\n            if ((uVar1 & 0x20) != 0) {\n                *(arg_ch + 0x82) = iVar5;\n            }\n            if ((uVar1 & 0x40) != 0) {\n                if ((uVar1 & 0x20) != 0) {\n                    *(arg_ch + 0x86) = ((iVar5 - *(arg_ch + 0x82)) - var_14h) + iVar6 + var_10h;\n                    return;\n                }\n                *(arg_ch + 0x82) = ((iVar5 - *(arg_ch + 0x86)) - var_14h) + iVar6 + var_10h;\n            }\n        }\n    }\n    else {\n        *(arg_ch + 0x20) = *(arg_8h + 0x16);\n        *(arg_ch + 0x82) = *(arg_8h + 0x17);\n        if ((*(arg_ch + 0x22) != '\\a') || (arg_10h != '\\0')) {\n            *(arg_ch + 0x21) = *(arg_8h + 0x18);\n            *(arg_ch + 0x86) = *(arg_8h + 0x19);\n        }\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_ch, &lpRect);\n        if (arg_8h[0x16] == -1) {\n            *(arg_ch + 0x20) = lpRect;\n        }\n        if (arg_8h[0x17] == -1) {\n            *(arg_ch + 0x82) = var_20h;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(*arg_ch, &lpRect);\n        if (arg_8h[0x18] == -1) {\n            *(arg_ch + 0x21) = lpPoint - lpRect;\n        }\n        if ((arg_8h[0x19] == -1) || (*(arg_ch + 0x22) == '\\0')) {\n            *(arg_ch + 0x86) = var_18h - var_20h;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 1626
    },
    "00430f0e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430f0e(int32_t arg_8h, uint *hWnd)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint nLeftRect;\n    uint nTopRect;\n    uint nRightRect;\n    uint nBottomRect;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint lpchText;\n    uint32_t var_14h;\n    uint32_t nMaxCount;\n    uint32_t var_ch;\n    uint crColor;\n    uint var_4h;\n    \n    iVar4 = arg_8h;\n    uVar1 = *(arg_8h + 0x18);\n    var_14h = *(arg_8h + 0x10) & 0x10;\n    var_ch = *(arg_8h + 0x10) & 6;\n    if (var_ch == 0) {\n        iVar7 = hWnd[0x12];\n        if (iVar7 == -1) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        }\n        var_4h = (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, iVar7);\n    }\n    else {\n        uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0xe);\n        var_4h = (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, uVar5);\n    }\n    if (hWnd[0x11] == -1) {\n        arg_8h = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n        crColor = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    }\n    else {\n        arg_8h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(hWnd[0x11]);\n        crColor = hWnd[0x11];\n    }\n    if (var_ch == 0) {\n        uVar5 = 0x743c00;\n    }\n    else {\n        uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n    }\n    var_24h = (*_sym.imp.GDI32.dll_CreatePen)(0, 1, uVar5);\n    pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n    var_20h = (*_sym.imp.GDI32.dll_SelectObject)(uVar1, var_24h);\n    var_28h = (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, crColor);\n    var_1ch = (*pcVar3)(uVar1, arg_8h);\n    nTopRect = *(iVar4 + 0x20);\n    nRightRect = *(iVar4 + 0x24);\n    nLeftRect = *(iVar4 + 0x1c);\n    nBottomRect = *(iVar4 + 0x28);\n    (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, 0xffffffff, 0xffffffff);\n    (*_sym.imp.GDI32.dll_RoundRect)(uVar1, nLeftRect, nTopRect, nRightRect, nBottomRect, 5, 5);\n    crColor = 0x105;\n    uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(*hWnd, 0xfffffff0);\n    if ((uVar6 & 0x2000) == 0) {\n        crColor = 0x125;\n    }\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xe, 0, 0);\n    nMaxCount = iVar7 + 1;\n    lpchText = fcn.00411777(-(nMaxCount * 2 >> 0x20 != 0) | nMaxCount * 2);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(*hWnd, lpchText, nMaxCount);\n    if (var_14h != 0) {\n        nTopRect = *(iVar4 + 0x20);\n        nLeftRect = *(iVar4 + 0x1c);\n        nRightRect = *(iVar4 + 0x24);\n        nBottomRect = *(iVar4 + 0x28);\n        (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, 0xfffffffd, 0xfffffffd);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(uVar1, &nLeftRect);\n    }\n    if (var_ch != 0) {\n        uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n        (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, uVar5);\n    }\n    uVar5 = lpchText;\n    (*_sym.imp.USER32.dll_DrawTextW)(uVar1, lpchText, 0xffffffff, &nLeftRect, crColor);\n    fcn.0041137c(uVar5);\n    (*pcVar3)(uVar1, var_1ch);\n    pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h);\n    (*pcVar3)(uVar1, var_20h);\n    (*pcVar2)(var_24h);\n    (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, var_4h);\n    (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, var_28h);\n    return 1;\n}\n",
        "token_count": 1248
    },
    "004311a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004311a6(uint *arg_8h, uint *hWnd, uint bErase)\n\n{\n    code *pcVar1;\n    uint lpRect;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (*(arg_8h + 0x39) == '\\0') {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*hWnd, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        var_ch = lpRect;\n        var_8h = var_18h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &var_ch);\n        lpRect = var_ch;\n        var_18h = var_8h;\n        var_ch = var_14h;\n        var_8h = var_10h;\n        (*pcVar1)(*arg_8h, &var_ch);\n        var_14h = var_ch;\n        var_10h = var_8h;\n        (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h, &lpRect, bErase);\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "00431228": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00431228(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    \n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(arg_ch, 0xffffffeb);\n        if (((uVar2 < *(arg_8h + 100)) && (ppiVar1 = *(*(arg_8h + 0x60) + uVar2 * 4),  *ppiVar1 != NULL)) &&\n           (**ppiVar1 == arg_ch)) {\n            return uVar2;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 158
    },
    "0043129e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043129e(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"advapi32.dll\");\n        *arg_8h = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RegDeleteKeyExW\");\n            arg_8h[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004312ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004312ea(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *arg_8h = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetSystemWow64DirectoryW\");\n            arg_8h[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004313b6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004313b6(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *arg_8h = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetModuleHandleExW\");\n            arg_8h[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0043142e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0043142e(int32_t *arg_8h, int32_t arg_ch, int32_t **arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar6 = arg_ch;\n    piVar9 = NULL;\n    *arg_10h = NULL;\n    if (arg_8h == NULL) {\n        return -0x7fffbffd;\n    }\n    iVar5 = (**(*arg_8h + 0x10))(arg_8h, 0, 0x800, &var_8h);\n    if (-1 < iVar5) {\n        iVar5 = (**(*var_8h + 0x48))(var_8h, &arg_8h, &var_28h);\n        if (iVar5 < 0) {\n            (**(*var_8h + 8))(var_8h);\n            return iVar5;\n        }\n        if (iVar6 == 0) {\n            uVar7 = (**(*arg_8h + 0xc))(arg_8h);\n            uVar8 = 0;\n            var_1ch = NULL;\n            var_30h = uVar7;\n            if (uVar7 != 0) {\n                do {\n                    if (var_1ch != NULL) break;\n                    var_18h = 0;\n                    (**(*arg_8h + 0x14))(arg_8h, uVar8, &var_18h);\n                    if (var_18h == 5) {\n                        (**(*arg_8h + 0x10))(arg_8h, uVar8, &var_4h);\n                        (**(*var_4h + 0xc))(var_4h, &var_20h);\n                        uVar7 = *(var_20h + 0x30);\n                        (**(*var_4h + 0x4c))(var_4h, var_20h);\n                        if (1 < uVar7) {\n                            var_10h = -1;\n                            var_ch = 0;\n                            if (uVar7 != 0) {\n                                do {\n                                    iVar6 = (**(*var_4h + 0x20))(var_4h, var_ch, &var_24h);\n                                    if (iVar6 == 0) {\n                                        (**(*var_8h + 0x38))(var_8h, var_24h, &var_14h);\n                                        if (var_10h == -1) {\n                                            (**(*var_14h + 0x48))(var_14h, 0, &var_10h);\n                                        }\n                                        (**(*var_4h + 0x24))(var_4h, var_ch, &var_2ch);\n                                        if (((var_10h == var_28h) && ((var_2ch & 1) != 0)) && ((var_2ch & 2) != 0)) {\n                                            var_1ch = 0x1;\n                                            piVar9 = var_14h;\n                                            break;\n                                        }\n                                        (**(*var_14h + 8))(var_14h);\n                                    }\n                                    var_ch = var_ch + 1;\n                                } while (var_ch < uVar7);\n                            }\n                        }\n                        (**(*var_4h + 8))(var_4h);\n                        uVar7 = var_30h;\n                    }\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 < uVar7);\n            }\n            (**(*arg_8h + 8))(arg_8h);\n            (**(*var_8h + 8))(var_8h);\n        }\n        else {\n            var_ch = 1;\n            iVar6 = (**(*arg_8h + 0x2c))(arg_8h, iVar6, 0, &var_1ch, &var_30h, &var_ch);\n            (**(*arg_8h + 8))(arg_8h);\n            (**(*var_8h + 8))(var_8h);\n            if (iVar6 < 0) {\n                return -0x7ffd7fe9;\n            }\n            piVar9 = var_1ch;\n            if (var_ch == 0) {\n                return -0x7ffd7fe9;\n            }\n        }\n        if (piVar9 == NULL) {\n            return -0x7ffd7fe9;\n        }\n        (**(*piVar9 + 0xc))(piVar9, &var_34h);\n        uVar1 = var_34h[2];\n        uVar2 = var_34h[1];\n        iVar6 = var_34h[10];\n        uVar3 = *var_34h;\n        uVar4 = var_34h[3];\n        (**(*piVar9 + 0x4c))(piVar9, var_34h);\n        if (iVar6 != 4) {\n            (**(*piVar9 + 8))(piVar9);\n            return -0x7ffd7360;\n        }\n        *arg_10h = piVar9;\n        *arg_14h = uVar3;\n        arg_14h[1] = uVar2;\n        arg_14h[2] = uVar1;\n        arg_14h[3] = uVar4;\n        iVar5 = 0;\n    }\n    return iVar5;\n}\n",
        "token_count": 1389
    },
    "004317a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004317a8(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"ICMP.DLL\");\n        *arg_8h = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"IcmpSendEcho\");\n            arg_8h[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004317da": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004317da(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"ICMP.DLL\");\n        *arg_8h = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"IcmpCloseHandle\");\n            arg_8h[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0043180c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043180c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"ICMP.DLL\");\n        *arg_8h = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"IcmpCreateFile\");\n            arg_8h[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004318ef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004318ef(int32_t arg_8h, uint nWidth, int32_t *arg_10h, uint *arg_14h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint hgdiobj;\n    uint var_1h;\n    \n    iVar6 = *arg_10h;\n    iVar8 = arg_10h[1];\n    bVar1 = arg_10h[2] < iVar6;\n    var_1h._0_1_ = arg_10h[3] < iVar8;\n    if (bVar1) {\n        *arg_10h = arg_10h[2];\n        arg_10h[2] = iVar6;\n    }\n    if (var_1h) {\n        arg_10h[1] = arg_10h[3];\n        arg_10h[3] = iVar8;\n    }\n    fcn.004318a3(*(arg_8h + 0x104), &var_18h, nWidth);\n    *arg_10h = *arg_10h + var_18h;\n    arg_10h[2] = arg_10h[2] + var_18h;\n    arg_10h[3] = arg_10h[3] + var_14h;\n    arg_10h[1] = arg_10h[1] + var_14h;\n    var_40h = (arg_10h[2] - *arg_10h) + 1;\n    iVar8 = (arg_10h[3] - arg_10h[1]) + 1;\n    uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n    var_ch = uVar3;\n    hgdiobj = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar3, var_40h, iVar8);\n    uVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar3);\n    var_10h = (*_sym.imp.GDI32.dll_SelectObject)(uVar3, hgdiobj);\n    iVar6 = iVar8;\n    if (var_1h != '\\0') {\n        iVar6 = -iVar8;\n    }\n    iVar4 = var_40h;\n    if (bVar1) {\n        iVar4 = -var_40h;\n    }\n    if (var_1h == '\\0') {\n        iVar7 = arg_10h[1];\n    }\n    else {\n        iVar7 = arg_10h[3];\n    }\n    if (bVar1) {\n        iVar9 = arg_10h[2];\n    }\n    else {\n        iVar9 = *arg_10h;\n    }\n    (*_sym.imp.GDI32.dll_StretchBlt)(uVar3, 0, 0, var_40h, iVar8, var_ch, iVar9, iVar7, iVar4, iVar6, 0xcc0020);\n    uVar2 = hgdiobj;\n    var_3ch = -iVar8;\n    var_44h = 0x28;\n    var_38h = 0x200001;\n    var_34h = 0;\n    (*_sym.imp.GDI32.dll_GetDIBits)(uVar3, hgdiobj, 0, 0, 0, &var_44h, 0);\n    *arg_14h = var_30h;\n    uVar5 = fcn.00411777(var_30h);\n    iVar6 = (*_sym.imp.GDI32.dll_GetDIBits)(uVar3, uVar2, 0, iVar8, uVar5, &var_44h, 0);\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar3, var_10h);\n    (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar3);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, var_ch);\n    if (iVar6 != 0) {\n        return uVar5;\n    }\n    fcn.0041137c(uVar5);\n    return 0;\n}\n",
        "token_count": 1065
    },
    "0043204d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0043204d(uint arg_8h, uint32_t dwFileAttributes, uint32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar uVar7;\n    uchar *puStack620;\n    uchar auStack600 [24];\n    uchar auStack576 [8];\n    uchar auStack568 [4];\n    uchar auStack564 [560];\n    uchar uVar8;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    puStack620 = auStack600;\n    uVar8 = 0;\n    uVar7 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(arg_8h);\n    if (iVar4 != -1) {\n        do {\n            iVar5 = fcn.004132dc(auStack564, 0x486cfc);\n            uVar7 = uVar8;\n            if ((iVar5 != 0) && (iVar5 = fcn.004132dc(auStack564, 0x489b88),  iVar5 != 0)) {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(auStack564);\n                iVar5 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(auStack568, (uVar6 | dwFileAttributes) & ~arg_10h);\n                if (iVar5 == 0) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    return 0;\n                }\n                uVar7 = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &stack0xfffffda0);\n            uVar8 = uVar7;\n        } while (iVar5 != 0);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_FindClose;\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    if (arg_14h != '\\0') {\n        iVar4 = (*pcVar1)(0x489b80, &stack0xfffffd9c);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n        if (iVar4 != -1) {\n            do {\n                if ((((puStack620 & 0x10) != 0) && (iVar5 = fcn.004132dc(auStack576, 0x486cfc),  iVar5 != 0)) &&\n                   (iVar5 = fcn.004132dc(auStack576, 0x489b88),  iVar5 != 0)) {\n                    (*pcVar1)(auStack576);\n                    cVar3 = fcn.0043204d(arg_8h, dwFileAttributes, arg_10h, arg_14h);\n                    if (cVar3 == '\\0') {\n                        (*pcVar2)(iVar4);\n                        return 0;\n                    }\n                    (*pcVar1)(0x489b88);\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &puStack620);\n            } while (iVar5 != 0);\n        }\n        (*pcVar2)(iVar4);\n        return 1;\n    }\n    return uVar7;\n}\n",
        "token_count": 746
    },
    "004329dd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004329dd(int16_t **arg_8h)\n\n{\n    if ((((arg_8h[2] == 0x8) && (arg_8h = *arg_8h,  arg_8h != NULL)) && ((*arg_8h == 9 || (*arg_8h == 0xd)))) &&\n       (arg_8h[2] != NULL)) {\n        return CONCAT31(arg_8h >> 8, 1);\n    }\n    return arg_8h & 0xffffff00;\n}\n",
        "token_count": 123
    },
    "00432bf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432bf8(uint8_t *arg_8h)\n\n{\n    if (((*arg_8h & 1) != 0) && (*(arg_8h + 0x18) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 67
    },
    "00432c2b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432c2b(uint8_t *arg_8h)\n\n{\n    if (((*arg_8h & 4) != 0) && (*(arg_8h + 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "00432c4b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432c4b(uint8_t *arg_8h)\n\n{\n    if (((*arg_8h & 2) != 0) && (*(arg_8h + 8) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 66
    },
    "00432ccb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432ccb(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.OLEAUT32.dll_VariantCopy;\n    if (*(arg_8h + 0x2c) != '\\0') {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_8h + 0x48);\n        (*pcVar1)(arg_8h + 0x68);\n        (*pcVar1)(arg_8h + 0x78);\n        (*pcVar1)(arg_8h + 0x88);\n        (*pcVar1)(arg_8h + 0x98);\n        (*pcVar1)(arg_8h + 0x58);\n        (*pcVar1)(arg_8h + 0xa8);\n        (*pcVar1)(arg_8h + 0xb8);\n        if (*(arg_8h + 8) != '\\0') {\n            *0x4a7f19 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00432d58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432d58(int32_t arg_8h, uint noname_1, uint *arg_10h, uint noname_3, uint noname_4, uint *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(arg_8h + 8) == '\\0') && (arg_10h != NULL)) && (arg_1ch != NULL)) {\n        iVar2 = 0;\n        do {\n            iVar1 = fcn.0041164b(*arg_10h, *(iVar2 * 8 + 0x492428));\n            if (iVar1 == 0) {\n                *arg_1ch = *(iVar2 * 8 + 0x49242c);\n                return 0;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < 0xd);\n    }\n    return 0x80020006;\n}\n",
        "token_count": 213
    },
    "00432db3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432db3(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    if (*(arg_8h + 8) != '\\0') {\n        return 0x8002000b;\n    }\n    if ((arg_14h != NULL) && (*(arg_8h + 0x28) != 0)) {\n        *arg_14h = 0;\n        if (arg_ch != 0) {\n            return 0x8002000b;\n        }\n        (**(**(arg_8h + 0x28) + 4))(*(arg_8h + 0x28));\n        *arg_14h = *(arg_8h + 0x28);\n        return 0;\n    }\n    return 0x80070057;\n}\n",
        "token_count": 190
    },
    "00432e31": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432e31(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 8) == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 4);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00432ecc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432ecc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h + 4);\n    if (*(arg_8h + 9) != '\\0') {\n        iVar1 = *(iVar1 + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 77
    },
    "00432fc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00432fc4(int16_t *arg_8h, ushort *lpSystemTime, uint arg_10h, int32_t arg_14h)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_GetLocalTime)(lpSystemTime);\n    if (*arg_8h != 0) {\n        uVar2 = fcn.00411361(arg_8h);\n        if (3 < uVar2) {\n            if (arg_10h != '\\0') {\n                fcn.0041315a(&var_ch, arg_8h, 4);\n                var_4h._0_2_ = 0;\n                uVar1 = fcn.00413330(&var_ch);\n                arg_8h = arg_8h + arg_14h + 4;\n                *lpSystemTime = uVar1;\n                uVar2 = fcn.00411361(arg_8h);\n                if (1 < uVar2) {\n                    fcn.0041315a(&var_ch, arg_8h, 2);\n                    var_8h._0_2_ = 0;\n                    uVar1 = fcn.00413330(&var_ch);\n                    arg_8h = arg_8h + arg_14h + 2;\n                    lpSystemTime[1] = uVar1;\n                    uVar2 = fcn.00411361(arg_8h);\n                    if (1 < uVar2) {\n                        fcn.0041315a(&var_ch, arg_8h, 2);\n                        var_8h._0_2_ = 0;\n                        uVar1 = fcn.00413330(&var_ch);\n                        arg_8h = arg_8h + 2;\n                        lpSystemTime[3] = uVar1;\n                        iVar3 = fcn.00411361(arg_8h);\n                        if (iVar3 != 0) {\n                            arg_8h = arg_8h + arg_14h;\n                        }\n                    }\n                }\n            }\n            uVar2 = fcn.00411361(arg_8h);\n            if (1 < uVar2) {\n                fcn.0041315a(&var_ch, arg_8h, 2);\n                var_8h._0_2_ = 0;\n                uVar1 = fcn.00413330(&var_ch);\n                arg_8h = arg_8h + arg_14h + 2;\n                lpSystemTime[4] = uVar1;\n                uVar2 = fcn.00411361(arg_8h);\n                if (1 < uVar2) {\n                    fcn.0041315a(&var_ch, arg_8h, 2);\n                    var_8h._0_2_ = 0;\n                    uVar1 = fcn.00413330(&var_ch);\n                    lpSystemTime[5] = uVar1;\n                    uVar2 = fcn.00411361(arg_8h + arg_14h + 2);\n                    if (1 < uVar2) {\n                        fcn.0041315a(&var_ch, arg_8h + arg_14h + 2, 2);\n                        var_8h._0_2_ = 0;\n                        uVar1 = fcn.00413330(&var_ch);\n                        lpSystemTime[6] = uVar1;\n                        lpSystemTime[7] = 0;\n                    }\n                }\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 821
    },
    "00433492": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00433492(uint32_t arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_4h;\n    \n    iVar3 = arg_8h;\n    var_4h = 1;\n    arg_8h = 0;\n    if (iVar3 == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    iVar4 = fcn.004133c5(*(iVar3 + *arg_ch * 2));\n    while (iVar4 != 0) {\n        *arg_ch = *arg_ch + 1;\n        iVar4 = fcn.004133c5(*(iVar3 + *arg_ch * 2));\n    }\n    uVar2 = *arg_ch;\n    uVar5 = *(iVar3 + uVar2 * 2);\n    uVar6 = uVar5 - 0x2b;\n    *arg_10h = 0;\n    if (uVar6 != 0) {\n        uVar6 = uVar5 - 0x2d;\n        if (uVar6 != 0) goto code_r0x00433507;\n        var_4h = -1;\n    }\n    *arg_ch = uVar2 + 1;\ncode_r0x00433507:\n    iVar1 = *(iVar3 + *arg_ch * 2);\n    while ((iVar1 != 0 && (uVar6 = fcn.00413983(*(iVar3 + *arg_ch * 2)),  uVar6 != 0))) {\n        uVar6 = *arg_ch + 1;\n        iVar1 = *(iVar3 + uVar6 * 2);\n        *arg_10h = (*(iVar3 + *arg_ch * 2) - 0x30) + *arg_10h * 10;\n        arg_8h = 0x1000000;\n        *arg_ch = uVar6;\n    }\n    *arg_10h = *arg_10h * var_4h;\n    return uVar6 & 0xffffff00 | arg_8h >> 0x18;\n}\n",
        "token_count": 524
    },
    "00433a3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433a3c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint lpWSAData;\n    uint name;\n    uint in;\n    \n    iVar2 = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x101, &lpWSAData);\n    if (iVar2 == 0) {\n        (*_sym.imp.WSOCK32.dll_gethostname)(&name, 0x100);\n        iVar2 = (*_sym.imp.WSOCK32.dll_gethostbyname)(&name);\n        if (iVar2 != 0) {\n            piVar1 = *(iVar2 + 0xc);\n            iVar5 = 0;\n            iVar2 = *piVar1;\n            piVar4 = piVar1;\n            while (iVar2 != 0) {\n                piVar4 = piVar4 + 1;\n                iVar5 = iVar5 + 1;\n                iVar2 = *piVar4;\n            }\n            if (iVar5 < arg_8h) {\n                fcn.00411707(arg_ch, L\"0.0.0.0\");\n                (*_sym.imp.WSOCK32.dll_WSACleanup)();\n                return;\n            }\n            fcn.00411000(&in, piVar1[arg_8h + -1], 4);\n            uVar3 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(in);\n            fcn.00413800(&name, uVar3);\n            uVar3 = fcn.00432f4e(&name, 0xffffffff);\n            fcn.00411707(arg_ch, uVar3);\n            fcn.0041137c(uVar3);\n            (*_sym.imp.WSOCK32.dll_WSACleanup)();\n            return;\n        }\n    }\n    fcn.00411707(arg_ch, 0x483f68);\n    return;\n}\n",
        "token_count": 446
    },
    "00433c6e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433c6e(int16_t *arg_8h, uint arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    iVar7 = 0;\n    iVar6 = 0;\n    bVar2 = false;\n    iVar4 = fcn.00413fcf(arg_10h, 0x2a);\n    if (iVar4 != 0) {\n        iVar1 = *arg_10h;\n        while (iVar1 != 0x2a) {\n            iVar7 = iVar7 + 1;\n            *(arg_14h + iVar6 * 2) = iVar1;\n            iVar6 = iVar6 + 1;\n            iVar1 = arg_10h[iVar7];\n        }\n        iVar4 = 0;\n        iVar1 = *arg_8h;\n        while (iVar1 != 0) {\n            *(arg_14h + iVar6 * 2) = iVar1;\n            iVar3 = iVar4 + 1;\n            iVar4 = iVar4 + 1;\n            iVar6 = iVar6 + 1;\n            iVar1 = arg_8h[iVar3];\n        }\n        piVar5 = arg_10h + iVar7 + 1;\n        iVar1 = arg_10h[iVar7 + 1];\n        while (iVar1 != 0) {\n            if (*piVar5 != 0x2a) {\n                *(arg_14h + iVar6 * 2) = *piVar5;\n                iVar6 = iVar6 + 1;\n            }\n            piVar5 = piVar5 + 1;\n            iVar1 = *piVar5;\n        }\n        *(arg_14h + iVar6 * 2) = 0;\n        bVar2 = true;\n    }\n    fcn.00413ff6(arg_ch, 0x486d00);\n    if (!bVar2) {\n        fcn.00411707(arg_14h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 490
    },
    "00433d2d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433d2d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint *arg_ch_00;\n    uint var_1060h;\n    uint var_e54h;\n    uint var_c48h;\n    uint var_a3ch;\n    uint var_830h;\n    uint var_624h;\n    uint var_418h;\n    uint var_20ch;\n    uint uStackY64;\n    \n    fcn.00422880();\n    iVar1 = fcn.00413fcf(arg_14h, 0x2a);\n    if (iVar1 == 0) {\n        fcn.00411707(arg_18h, arg_14h);\n        return;\n    }\n    fcn.00413bbe(arg_8h, &fcn.00433d2d::var_830h, &fcn.00433d2d::var_c48h, &fcn.00433d2d::var_1060h, \n                 &fcn.00433d2d::var_20ch);\n    fcn.00413bbe(arg_14h, &fcn.00433d2d::var_830h, &fcn.00433d2d::var_c48h, &fcn.00433d2d::var_e54h, \n                 &fcn.00433d2d::var_624h);\n    if (var_20ch == 0x2e) {\n        fcn.00411707(&fcn.00433d2d::var_20ch, &fcn.00433d2d::var_20ch + 2);\n    }\n    if (var_624h == 0x2e) {\n        fcn.00411707(&fcn.00433d2d::var_624h, &fcn.00433d2d::var_624h + 2);\n    }\n    fcn.00411707(arg_18h, &fcn.00433d2d::var_830h);\n    fcn.004116d6(arg_18h, &fcn.00433d2d::var_c48h);\n    fcn.00433c6e(&fcn.00433d2d::var_20ch, arg_10h, &fcn.00433d2d::var_624h, &fcn.00433d2d::var_a3ch);\n    uStackY64 = 0x433e44;\n    fcn.00433c6e(&fcn.00433d2d::var_1060h, arg_ch, &fcn.00433d2d::var_e54h, &fcn.00433d2d::var_418h);\n    if (var_a3ch == 0) {\n        if (var_20ch == 0) goto code_r0x00433e9b;\n        fcn.004116d6(&fcn.00433d2d::var_418h, 0x486cfc);\n        arg_ch_00 = &fcn.00433d2d::var_20ch;\n    }\n    else {\n        fcn.004116d6(&fcn.00433d2d::var_418h, 0x486cfc);\n        arg_ch_00 = &fcn.00433d2d::var_a3ch;\n    }\n    fcn.004116d6(&fcn.00433d2d::var_418h, arg_ch_00);\ncode_r0x00433e9b:\n    fcn.004116d6(arg_18h, &fcn.00433d2d::var_418h);\n    return;\n}\n",
        "token_count": 828
    },
    "00433eb1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00433eb1(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_820h;\n    uint var_61ch;\n    uint var_418h;\n    uint var_214h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.00413bbe(arg_8h, &var_10h, &var_820h, &var_61ch, &var_214h);\n    fcn.00413bbe(arg_ch, &var_8h, &var_418h, &var_61ch, &var_214h);\n    if ((var_10h == 0) && (var_8h == 0)) {\n        uVar1 = fcn.0041164b(&var_820h, &var_418h);\n        return uVar1 & 0xffffff00 | uVar1 != 0;\n    }\n    uVar1 = fcn.0041164b(&var_10h, &var_8h);\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 264
    },
    "0043420f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043420f(int16_t *arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = 0;\n    iVar2 = *arg_8h;\n    while (iVar2 != 0) {\n        piVar1 = arg_8h + iVar3;\n        iVar3 = iVar3 + 1;\n        if (*piVar1 == 10) {\n            iVar4 = iVar4 + 1;\n        }\n        iVar2 = arg_8h[iVar3];\n    }\n    return iVar4 + 1 + iVar3;\n}\n",
        "token_count": 159
    },
    "00434239": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434239(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *arg_8h;\n    while (iVar1 != 0) {\n        if (*arg_8h == 10) {\n            *(arg_ch + iVar2 * 2) = 0xd;\n            *(arg_ch + 2 + iVar2 * 2) = *arg_8h;\n            iVar2 = iVar2 + 2;\n        }\n        else {\n            *(arg_ch + iVar2 * 2) = *arg_8h;\n            iVar2 = iVar2 + 1;\n        }\n        arg_8h = arg_8h + 1;\n        iVar1 = *arg_8h;\n    }\n    *(arg_ch + iVar2 * 2) = 0;\n    return;\n}\n",
        "token_count": 207
    },
    "0043427f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043427f(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = 0;\n    iVar1 = *arg_8h;\n    piVar3 = arg_8h;\n    while (iVar1 != 0) {\n        if (*piVar3 != 0xd) {\n            arg_8h[iVar2] = *piVar3;\n            iVar2 = iVar2 + 1;\n        }\n        piVar3 = piVar3 + 1;\n        iVar1 = *piVar3;\n    }\n    arg_8h[iVar2] = 0;\n    return;\n}\n",
        "token_count": 159
    },
    "00434304": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434304(uint16_t *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    uVar2 = *arg_8h;\n    puVar1 = arg_8h;\n    while( true ) {\n        if (uVar2 == 0) {\n            uVar4 = fcn.0041333b(arg_8h);\n            return uVar4;\n        }\n        iVar3 = fcn.0041339c(*puVar1);\n        if (iVar3 == 0) break;\n        iVar5 = iVar5 + 1;\n        uVar2 = arg_8h[iVar5];\n        puVar1 = arg_8h + iVar5;\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "00434343": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint __cdecl fcn.00434343(uint arg_8h, int32_t *arg_ch, char *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint lpidProcess;\n    uint var_82ch;\n    uint var_628h;\n    uint lpBaseName;\n    uint var_218h;\n    uint uStackY112;\n    uint var_14h;\n    uint var_ch;\n    uint lphModule;\n    uint *lpcbNeeded;\n    \n    lpcbNeeded = 0x434350;\n    fcn.00422880();\n    lpcbNeeded = &fcn.00434343::lpcbNeeded;\n    iVar1 = (*_sym.imp.PSAPI.DLL_EnumProcesses)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar4 = lpcbNeeded >> 2;\n    *arg_10h = '\\0';\n    iVar1 = fcn.00434304(arg_8h);\n    uVar3 = 0;\n    if (uVar4 != 0) {\n        do {\n            if (*arg_10h != '\\0') {\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_OpenProcess)();\n            (*_sym.imp.PSAPI.DLL_EnumProcessModules)();\n            iVar2 = (*_sym.imp.PSAPI.DLL_GetModuleBaseNameW)();\n            if (iVar2 != 0) {\n                fcn.00413bbe(&fcn.00434343::lpBaseName, &fcn.00434343::var_14h, &fcn.00434343::var_82ch, \n                             &fcn.00434343::var_218h, &fcn.00434343::var_628h);\n                fcn.004116d6(&fcn.00434343::var_218h, &fcn.00434343::var_628h);\n                uStackY112 = 0x43443a;\n                iVar2 = fcn.0041164b(&fcn.00434343::var_218h, arg_8h);\n                if (iVar2 == 0) {\n                    *arg_ch = (&fcn.00434343::lpidProcess)[uVar3];\n                }\n                else {\n                    if ((iVar1 == 0) || (iVar1 != (&fcn.00434343::lpidProcess)[uVar3])) goto code_r0x0043446c;\n                    *arg_ch = (&fcn.00434343::lpidProcess)[uVar3];\n                }\n                *arg_10h = '\\x01';\n            }\ncode_r0x0043446c:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar4);\n    }\n    return 1;\n}\n",
        "token_count": 649
    },
    "00434485": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434485(uint arg_8h, int32_t *arg_ch, char *arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_840h;\n    uint var_63ch;\n    uint var_438h;\n    uint var_234h;\n    int32_t var_22ch;\n    uint var_210h;\n    uint var_8h;\n    \n    var_234h = 0x22c;\n    uVar2 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    (*_sym.imp.KERNEL32.dll_Process32FirstW)(uVar2, &var_234h);\n    *arg_10h = '\\0';\n    iVar3 = fcn.00434304(arg_8h);\n    cVar1 = *arg_10h;\n    do {\n        if ((cVar1 != '\\0') || (iVar4 = (*_sym.imp.KERNEL32.dll_Process32NextW)(uVar2, &var_234h),  iVar4 != 1)) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n            return 1;\n        }\n        fcn.00413bbe(&var_210h, &var_8h, &var_840h, &var_438h, &var_63ch);\n        fcn.004116d6(&var_438h, &var_63ch);\n        iVar4 = fcn.0041164b(&var_438h, arg_8h);\n        if (iVar4 == 0) {\n            *arg_ch = var_22ch;\ncode_r0x00434557:\n            *arg_10h = '\\x01';\n        }\n        else if ((iVar3 != 0) && (iVar3 == var_22ch)) {\n            *arg_ch = var_22ch;\n            goto code_r0x00434557;\n        }\n        cVar1 = *arg_10h;\n    } while( true );\n}\n",
        "token_count": 458
    },
    "004345d9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004345d9(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint var_408h;\n    uint var_204h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, arg_8h, &var_204h, 0x100);\n    pcVar2 = _sym.imp.USER32.dll_LoadStringW;\n    (*_sym.imp.USER32.dll_LoadStringW)(uVar3);\n    uVar3 = (*pcVar1)(0, 0x1389, &var_408h, 0x100);\n    (*pcVar2)(uVar3);\n    if (arg_ch != '\\0') {\n        fcn.00413c6e(L\"%s (%d) : ==> %s: \\n%s \\n%s\\n\", &var_204h);\n        return;\n    }\n    (*_sym.imp.USER32.dll_MessageBoxW)(0, &var_408h, &var_204h, 0x11010);\n    return;\n}\n",
        "token_count": 265
    },
    "0043471a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043471a(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    puVar2 = fcn.00411777(8);\n    uVar1 = *arg_ch;\n    puVar2[1] = 0;\n    *puVar2 = uVar1;\n    if (arg_8h[1] != 0) {\n        *(arg_8h[2] + 4) = puVar2;\n        *arg_8h = *arg_8h + 1;\n        arg_8h[2] = puVar2;\n        return;\n    }\n    *arg_8h = *arg_8h + 1;\n    arg_8h[1] = puVar2;\n    arg_8h[2] = puVar2;\n    return;\n}\n",
        "token_count": 197
    },
    "0043475c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043475c(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint *puVar1;\n    \n    *arg_10h = 0xffffffff;\n    if (((-1 < arg_ch) || (puVar1 = arg_10h,  arg_ch = *(arg_8h + 0x9d4),  *(arg_8h + 0x9d4) != 0xffffffff)) &&\n       (puVar1 = arg_ch,  *arg_10h = puVar1,  puVar1 < 0x207)) {\n        return puVar1 & 0xffffff00 | *(arg_8h + 0x1b4 + puVar1 * 4) != 0;\n    }\n    return puVar1 & 0xffffff00;\n}\n",
        "token_count": 190
    },
    "0043479d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043479d(int32_t *arg_8h, char *arg_ch)\n\n{\n    if ((*arg_8h != 0) && (*arg_ch != '\\0')) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*arg_8h);\n    }\n    *arg_8h = 0;\n    *arg_ch = '\\0';\n    return;\n}\n",
        "token_count": 86
    },
    "00434990": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434990(int32_t lpdwProcessId, uint arg_ch, uint hWnd)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar1 = lpdwProcessId;\n    iVar4 = 0;\n    piVar2 = lpdwProcessId + 4;\n    do {\n        if (*piVar2 == 0) break;\n        iVar4 = iVar4 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar4 < 0x10);\n    if (iVar4 == 0x10) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &lpdwProcessId);\n    uVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x438, 0, lpdwProcessId);\n    *(iVar1 + iVar4 * 8) = uVar3;\n    uVar3 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(uVar3, 0, arg_ch, 0x1000, 4);\n    *(iVar1 + 4 + iVar4 * 8) = uVar3;\n    return uVar3;\n}\n",
        "token_count": 287
    },
    "00434c04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434c04(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t lpdwProcessId;\n    \n    iVar2 = arg_ch;\n    if ((arg_ch != 0) || (*(arg_8h + 9) != '\\0')) {\n        arg_ch = 0;\n        lpdwProcessId = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        pcVar1 = _sym.imp.USER32.dll_AttachThreadInput;\n        if (arg_10h == '\\0') {\n            if ((iVar2 != 0) && ((*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x4a95bc, 0),  *0x4a95c0 != *0x4a95bc)\n               ) {\n                (*pcVar1)(*0x4a95c0, *0x4a95bc, 0);\n            }\n            (*pcVar1)(iVar3, *0x4a95c0, 0);\n        }\n        else {\n            uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0);\n            *0x4a95c0 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(uVar4);\n            pcVar1 = _sym.imp.USER32.dll_AttachThreadInput;\n            iVar5 = (*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x4a95c0, 1);\n            if (iVar2 != 0) {\n                *0x4a95bc = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, &lpdwProcessId);\n                if (*0x4a95c0 != *0x4a95bc) {\n                    arg_ch = (*pcVar1)(*0x4a95c0, *0x4a95bc, 1);\n                }\n                lpdwProcessId = (*pcVar1)(iVar3, *0x4a95bc, 1);\n            }\n            if ((((iVar5 == 0) && (arg_ch == 0)) && (lpdwProcessId == 0)) &&\n               ((iVar3 == *0x4a95c0 && (*0x4a95c0 == *0x4a95bc)))) {\n                *(arg_8h + 0x20) = 0;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "00434f46": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434f46(int32_t arg_8h, uint arg_ch)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    if (*(arg_8h + 0x10) != 0) {\n        iVar2 = fcn.00411361(**(arg_8h + 0xc));\n        iVar3 = fcn.00411361(arg_ch);\n        iVar1 = (iVar3 + 1 + iVar2) * 2;\n        arg_8h_00 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.00411707(arg_8h_00, **(arg_8h + 0xc));\n        fcn.004116d6(arg_8h_00, arg_ch);\n        fcn.0041137c(**(arg_8h + 0xc));\n        **(arg_8h + 0xc) = arg_8h_00;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "004350a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004350a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    \n    if (((-1 < arg_ch) && (arg_ch < *(arg_8h + 8))) && (piVar1 = **(*(arg_8h + 4) + arg_ch * 4),  *piVar1 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar1);\n        fcn.0041137c(**(*(arg_8h + 4) + arg_ch * 4));\n        **(*(arg_8h + 4) + arg_ch * 4) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 168
    },
    "004350fa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004350fa(int32_t arg_8h, uint lpLibFileName, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(lpLibFileName);\n    if (iVar3 == 0) {\n        return 3;\n    }\n    uVar1 = *(iVar2 + 8);\n    uVar6 = 0;\n    if (uVar1 != 0) {\n        ppiVar4 = *(iVar2 + 4);\n        do {\n            if (**ppiVar4 == 0) break;\n            uVar6 = uVar6 + 1;\n            ppiVar4 = ppiVar4 + 1;\n        } while (uVar6 < uVar1);\n    }\n    var_4h = fcn.00411777(0xc);\n    if (uVar6 == uVar1) {\n        fcn.00431f64(iVar2, &var_4h);\n    }\n    else {\n        **(*(iVar2 + 4) + uVar6 * 4) = var_4h;\n    }\n    ***(*(iVar2 + 4) + uVar6 * 4) = iVar3;\n    pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(***(*(iVar2 + 4) + uVar6 * 4), \"AU3_GetPluginDetails\");\n    if (pcVar5 == NULL) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(***(*(iVar2 + 4) + uVar6 * 4));\n        fcn.0041137c(**(*(iVar2 + 4) + uVar6 * 4));\n        **(*(iVar2 + 4) + uVar6 * 4) = 0;\n        return 3;\n    }\n    arg_8h = 0;\n    lpLibFileName = 0;\n    (*pcVar5)(&arg_8h, &lpLibFileName);\n    *(**(*(iVar2 + 4) + uVar6 * 4) + 4) = arg_8h;\n    iVar2 = **(*(iVar2 + 4) + uVar6 * 4);\n    *arg_10h = uVar6;\n    *(iVar2 + 8) = lpLibFileName;\n    return 0;\n}\n",
        "token_count": 577
    },
    "004352d1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004352d1(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    piVar2 = arg_8h;\n    piVar3 = arg_8h[7];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 0xc))(piVar3, &var_8h);\n        iVar1 = *(var_8h + 0x28);\n        uVar4 = *(var_8h + 0x30);\n        (**(*piVar2[7] + 0x4c))(piVar2[7], var_8h);\n        if ((((iVar1 != 3) && (piVar2[1] != 0)) && (uVar4 != 0)) && (var_4h = 0,  uVar4 != 0)) {\n            do {\n                uVar5 = var_4h;\n                piVar3 = (**(*piVar2[7] + 0x20))(piVar2[7], var_4h, &var_ch);\n                if (piVar3 == NULL) {\n                    arg_8h = piVar3;\n                    (**(*piVar2[7] + 0x38))(piVar2[7], var_ch, &arg_8h);\n                    (**(*arg_8h + 0xc))(arg_8h, &var_10h);\n                    iVar1 = *(var_10h + 0x28);\n                    (**(*arg_8h + 0x4c))(arg_8h, var_10h);\n                    if (iVar1 == 3) {\n                        (**(*piVar2[7] + 8))(piVar2[7]);\n                        piVar2[7] = arg_8h;\n                        return;\n                    }\n                    (**(*arg_8h + 8))(arg_8h);\n                    uVar5 = var_4h;\n                }\n                var_4h = uVar5 + 1;\n            } while (var_4h < uVar4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "004353bb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004353bb(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, int32_t *arg_1ch, \n            ushort *arg_20h, uint arg_24h, uint arg_28h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    \n    if (arg_ch != 0) {\n        uVar3 = arg_1ch[2];\n        uVar5 = 0;\n        if (uVar3 != 0) {\n            do {\n                iVar2 = *(*(arg_8h + 8) + 4 + arg_ch * 4);\n                if (*(iVar2 + uVar5 * 8) != 0) {\n                    uVar1 = *(iVar2 + uVar5 * 8 + 4);\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(((uVar3 - uVar5) + -1) * 0x10 + *arg_1ch);\n                    *(*arg_1ch + ((arg_1ch[2] - uVar5) + -1) * 0x10) = uVar1;\n                }\n                uVar3 = arg_1ch[2];\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < uVar3);\n        }\n        if (*(arg_8h + 0x18) == 0) {\n            return 0x80004001;\n        }\n        uVar4 = (**(**(arg_8h + 0x18) + 0x18))\n                          (*(arg_8h + 0x18), arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n        return uVar4;\n    }\n    if ((arg_18h & 2) == 0) {\n        return 0x80020003;\n    }\n    if (arg_1ch[2] != 0) {\n        return 0x8002000e;\n    }\n    if (arg_20h == NULL) {\n        return 0x80020010;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_20h);\n    *arg_20h = 0x13;\n    *(arg_20h + 4) = *(arg_8h + 0x14);\n    return 0;\n}\n",
        "token_count": 575
    },
    "004354a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004354a9(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x18) != 0) {\n        uVar1 = (**(**(arg_8h + 0x18) + 0x14))(*(arg_8h + 0x18), arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n        return uVar1;\n    }\n    return 0x80004001;\n}\n",
        "token_count": 149
    },
    "004354e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004354e1(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x18) != 0) {\n        uVar1 = (**(**(arg_8h + 0x18) + 0x10))(*(arg_8h + 0x18), arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    return 0x80004001;\n}\n",
        "token_count": 127
    },
    "00435511": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435511(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x18) != 0) {\n        uVar1 = (**(**(arg_8h + 0x18) + 0xc))(*(arg_8h + 0x18), arg_ch);\n        return uVar1;\n    }\n    return 0x80004001;\n}\n",
        "token_count": 103
    },
    "00435539": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435539(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x18) != 0) {\n        uVar1 = (****(arg_8h + 0x18))(*(arg_8h + 0x18), arg_ch, arg_10h);\n        return uVar1;\n    }\n    return 0x80004001;\n}\n",
        "token_count": 109
    },
    "00435593": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435593(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    \n    *arg_8h = 0x484630;\n    if (arg_8h[1] != 0) {\n        if (*(arg_8h[4] + 4) != 0) {\n            uVar2 = 0;\n            do {\n                fcn.0041137c(*(arg_8h[2] + uVar2 * 4));\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(arg_8h[4] + 4));\n        }\n        fcn.0041137c(arg_8h[2]);\n        fcn.0041137c(arg_8h[3]);\n        fcn.0041137c(arg_8h[4]);\n        fcn.0041137c(arg_8h[1]);\n    }\n    piVar1 = arg_8h[7];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (arg_8h[9] != 0) {\n        (**(*arg_8h[5] + 8))(arg_8h[5]);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00435804": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435804(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    \n    iVar1 = arg_ch;\n    cVar3 = '\\0';\n    arg_ch = NULL;\n    if ((iVar1 == 0) || (*(iVar1 + 0x88) != '\\x1d')) {\n        if (*(arg_8h + 0x10) != 0) {\n            piVar2 = *(arg_8h + 0x10);\n            if (*(arg_8h + 0x18) != '\\0') {\n                (*(*piVar2)[7])(piVar2, 0);\n                return;\n            }\n            (***piVar2)(piVar2, 0x481910, &arg_ch);\n            if (arg_ch != NULL) {\n                (**(*arg_ch + 0x18))(arg_ch);\n                (**(*arg_ch + 8))(arg_ch);\n                return;\n            }\n        }\n    }\n    else {\n        iVar1 = *(iVar1 + 0x78);\n        if (iVar1 != 0) {\n            cVar3 = *(iVar1 + 0x3c);\n        }\n        if (((*(arg_8h + 0x10) == 0) || (cVar3 == '\\0')) && (*(arg_8h + 0x18) == '\\0')) {\n            (**(**(arg_8h + 0x10) + 0x1c))(*(arg_8h + 0x10), 0);\n            (**(**(iVar1 + 0xc) + 0x2c))\n                      (*(iVar1 + 0xc), 0xffffffff, 0, *(iVar1 + 0x28), 0xffffffff, *(iVar1 + 8), iVar1 + 0x10);\n        }\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "0043596f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043596f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    iVar2 = 0;\n    if (2 < arg_10h) {\n        ppiVar3 = *(arg_ch + 4) + 0xc;\n        arg_10h = arg_10h + -2;\n        do {\n            iVar1 = **ppiVar3;\n            if ((((iVar1 != 0) && (*(iVar1 + 4) == *(arg_8h + 4))) && (*(iVar1 + 0x88) == '\\x1d')) &&\n               (*(iVar1 + 0x78) != 0)) {\n                iVar2 = iVar2 + 1;\n            }\n            ppiVar3 = ppiVar3 + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "00435b4e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435b4e(int32_t arg_8h)\n\n{\n    if (**(arg_8h + 4) != 0) {\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(**(arg_8h + 4) + 0x14), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00435bcd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435bcd(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    \n    piVar2 = arg_8h;\n    piVar1 = arg_8h[1];\n    if ((piVar1 != NULL) && (*piVar1 != 0)) {\n        *(*piVar1 + 0x18) = 0;\n    }\n    if (arg_ch == 0) {\n        iVar3 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0x481940, &arg_8h);\n        if (iVar3 < 0) {\n            return 0x80004005;\n        }\n        (**(*arg_8h + 0xc))(arg_8h, 0, 0, 0, piVar2 + 2);\n        (**(*arg_8h + 8))(arg_8h);\n    }\n    else {\n        arg_8h[2] = arg_ch;\n    }\n    ppiVar4 = piVar2 + 2;\n    (**(**ppiVar4 + 4))(*ppiVar4);\n    iVar3 = (**(**ppiVar4 + 0xc))(*ppiVar4, *(piVar2[1] + 0x30));\n    if (iVar3 < 0) {\n        return 0x80004005;\n    }\n    (**(**ppiVar4 + 0x28))(*ppiVar4, 1);\n    (**(**ppiVar4 + 0x18))(*ppiVar4, piVar2[1] + 0x10);\n    (**(**ppiVar4 + 0x24))(*ppiVar4, 1);\n    *(*piVar2[1] + 0x18) = 1;\n    return 0;\n}\n",
        "token_count": 436
    },
    "00435d38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435d38(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    \n    if (arg_ch != NULL) {\n        (**(*arg_ch + 4))(arg_ch);\n        *(*(arg_8h + 4) + 0x10) = arg_ch;\n        return 0;\n    }\n    if (*(*(arg_8h + 4) + 0x10) != 0) {\n        piVar1 = *(*(arg_8h + 4) + 0x10);\n        (**(*piVar1 + 8))(piVar1);\n    }\n    *(*(arg_8h + 4) + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 173
    },
    "00435d7f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435d7f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    \n    if (arg_ch != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(arg_8h + 8), &var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 79
    },
    "00436011": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436011(int32_t arg_8h, uint *arg_ch)\n\n{\n    if ((arg_ch != NULL) && (**(arg_8h + 4) != 0)) {\n        *arg_ch = *(**(arg_8h + 4) + 0x14);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 82
    },
    "0043603c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043603c(int32_t arg_8h)\n\n{\n    if (**(arg_8h + 8) != 0) {\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(**(arg_8h + 8) + 0x14), 0, 1);\n    }\n    return 0;\n}\n",
        "token_count": 79
    },
    "00436060": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436060(int32_t arg_8h, uint *arg_ch)\n\n{\n    if (**(arg_8h + 8) != 0) {\n        *arg_ch = ***(arg_8h + 8);\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "00436167": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436167(uint *arg_8h, uint arg_ch)\n\n{\n    if (arg_ch != '\\0') {\n        (*_sym.imp.USER32.dll_ShowWindow)(*arg_8h, 4);\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(*arg_8h, 0);\n    return 1;\n}\n",
        "token_count": 83
    },
    "00436195": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436195(uint *arg_8h, uint arg_ch)\n\n{\n    if (arg_ch != '\\0') {\n        (*_sym.imp.USER32.dll_EnableWindow)(*arg_8h, 1);\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnableWindow)(*arg_8h, 0);\n    return 1;\n}\n",
        "token_count": 83
    },
    "0043670e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043670e(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == '\\0') {\n        uVar2 = *arg_8h;\n    }\n    else {\n        uVar2 = *arg_8h;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x14f, arg_ch != '\\0', 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 133
    },
    "00436c05": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00436c05(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint32_t hObject, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    uint var_4h;\n    \n    uVar1 = hObject;\n    uVar4 = 0;\n    arg_14h = 0;\n    if ((arg_14h & 1) == 0) {\n        if ((arg_14h & 2) != 0) {\n            uVar4 = 2;\n        }\n    }\n    else {\n        uVar4 = 1;\n    }\n    bVar5 = false;\n    if ((arg_14h & 4) != 0) {\n        hObject = 0;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(10, &hObject);\n        (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2);\n        iVar3 = (*_sym.imp.USERENV.dll_CreateEnvironmentBlock)(&arg_14h, hObject, 1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        if (iVar3 == 0) goto code_r0x00436c9f;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CreateProcessWithLogonW)\n                      (arg_8h, arg_ch, arg_10h, uVar4, 0, arg_18h, uVar1 | 0x400, arg_14h, arg_20h, arg_24h, arg_28h);\n    bVar5 = iVar3 != 0;\ncode_r0x00436c9f:\n    if (arg_14h != 0) {\n        arg_14h = (*_sym.imp.USERENV.dll_DestroyEnvironmentBlock)(arg_14h);\n    }\n    return arg_14h & 0xffffff00 | bVar5;\n}\n",
        "token_count": 474
    },
    "00436cb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00436cb8(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint8_t uVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint32_t *arg_8h;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t *var_8h;\n    int32_t ThreadHandle;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    ThreadHandle = 0;\n    var_8h = NULL;\n    uVar6 = 0;\n    var_10h = 0;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, 0, &ThreadHandle);\n    iVar4 = (*_sym.imp.ADVAPI32.dll_OpenThreadToken)(uVar3);\n    if (iVar4 == 0) {\n        uVar3 = (*pcVar1)(8, &ThreadHandle);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n        arg_8h = NULL;\n        if (iVar4 == 0) goto code_r0x00436db4;\n    }\n    cVar2 = fcn.00436936(ThreadHandle, &var_8h, &var_10h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_LookupPrivilegeValueW;\n    arg_8h = var_8h;\n    if ((cVar2 != '\\0') &&\n       (iVar4 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, 0x483f70, &var_28h),  arg_8h = var_8h,  iVar4 != 0)) {\n        var_20h = 0;\n        iVar4 = (*pcVar1)(0, L\"SeIncreaseQuotaPrivilege\", &var_1ch);\n        arg_8h = var_8h;\n        if (iVar4 != 0) {\n            var_14h = 0;\n            uVar8 = 0;\n            if (*var_8h != 0) {\n                var_8h = var_8h + 1;\n                do {\n                    puVar7 = &var_20h;\n                    var_ch = 2;\n                    do {\n                        iVar4 = fcn.00411b83(var_8h, puVar7 + -2, 8);\n                        if (iVar4 == 0) {\n                            *puVar7 = 1;\n                        }\n                        puVar7 = puVar7 + 3;\n                        var_ch = var_ch + -1;\n                    } while (var_ch != 0);\n                    var_8h = var_8h + 3;\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 < *arg_8h);\n            }\n            uVar6 = 1;\n            uVar8 = 0;\n            piVar5 = &var_20h;\n            do {\n                if (*piVar5 == 0) {\n                    uVar6 = 0;\n                    break;\n                }\n                uVar8 = uVar8 + 1;\n                piVar5 = piVar5 + 3;\n            } while (uVar8 < 2);\n        }\n    }\ncode_r0x00436db4:\n    if (ThreadHandle != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ThreadHandle);\n    }\n    uVar8 = fcn.0043689c(arg_8h);\n    return uVar8 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 846
    },
    "00436df0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436df0(uint *arg_8h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00411777(8);\n    puVar1[1] = 0;\n    *puVar1 = *arg_8h;\n    if (*0x4a8628 != NULL) {\n        *(*0x4a862c + 4) = puVar1;\n        *0x4a8624 = *0x4a8624 + 1;\n        *0x4a862c = puVar1;\n        return;\n    }\n    *0x4a8624 = *0x4a8624 + 1;\n    *0x4a8628 = puVar1;\n    *0x4a862c = puVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "00436f5e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint8_t * __cdecl\nfcn.00436f5e(uint8_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t arg_20h, uint *arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *arg_1ch_00;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint8_t *puVar15;\n    bool bVar16;\n    uint var_120h;\n    uint var_a4h;\n    uint32_t var_a0h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    int32_t var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint *var_44h;\n    uint8_t *var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint8_t *var_34h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint8_t *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint8_t *var_18h;\n    uint8_t *var_14h;\n    uchar *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_1ch_00 = arg_1ch;\n    var_1ch = arg_1ch[0x11];\n    uVar6 = *arg_1ch;\n    if (arg_1ch[1] <= uVar6) {\ncode_r0x0043ca05:\n        *arg_1ch_00 = *arg_1ch_00 + 1;\n        return 0xfffffff8;\n    }\ncode_r0x00436f84:\n    *arg_1ch_00 = uVar6 + 1;\n    if (arg_1ch_00[2] <= arg_2ch) {\n        return 0xffffffeb;\n    }\n    var_20h = arg_20h;\n    puVar15 = arg_ch;\n    if ((arg_28h & 2) != 0) {\n        var_44h = arg_24h;\n        arg_24h = &var_44h;\n        var_40h = arg_8h;\n    }\ncode_r0x00436fae:\n    var_4h = *puVar15;\n    var_18h = NULL;\n    var_14h = NULL;\n    puVar10 = arg_8h;\n    // switch table (119 cases) at 0x43e80a\n    switch(var_4h) {\n    case 0:\n    case 0x74:\n        if ((arg_1ch_00[0x25] == 0) || (puVar4 = arg_1ch_00[0x25],  puVar4[1] != 0)) {\n            if ((arg_8h != arg_10h) ||\n               ((arg_1ch_00[0x15] == 0 && ((arg_1ch_00[0x16] == 0 || (arg_10h != arg_1ch_00[0x22] + arg_1ch_00[0x1a]))))\n               )) {\n                arg_1ch_00[0x1d] = arg_8h;\n                arg_1ch_00[0x20] = arg_18h;\n                arg_1ch_00[0x1c] = arg_10h;\n                arg_1ch_00[0x27] = arg_14h;\n                return (-(var_4h != 0) & 0xfffffc18) + 1;\n            }\n            goto code_r0x0043ce34;\n        }\n        arg_1ch_00[0x25] = *puVar4;\n        fcn.00416790(arg_1ch_00[3], puVar4[3], puVar4[4] * 4);\n        arg_18h = puVar4[5];\n        arg_20h = var_20h;\n        puVar15 = puVar4[2];\n        goto code_r0x00436fae;\n    case 1:\n        goto code_r0x00437a58;\n    case 2:\n        if (arg_8h != arg_1ch_00[0x22] + arg_1ch_00[0x1a]) goto code_r0x0043d057;\n        puVar15 = puVar15 + 1;\n        goto code_r0x00436fae;\n    case 3:\n        puVar15 = puVar15 + 1;\n        arg_10h = arg_8h;\n        goto code_r0x00436fae;\n    case 4:\n    case 5:\n        if (var_1ch == 0) {\n            if (arg_8h == arg_1ch_00[0x1a]) {\n                uVar14 = 0;\n            }\n            else {\n                if (arg_8h < arg_1ch_00[0x1e] || arg_8h == arg_1ch_00[0x1e]) {\n                    arg_1ch_00[0x1e] = arg_8h + -1;\n                }\n                uVar14 = *(arg_8h[-1] + arg_1ch_00[0xd]) >> 4 & 1;\n            }\n            if (arg_8h < arg_1ch_00[0x1b]) {\n                uVar6 = *(*arg_8h + arg_1ch_00[0xd]) >> 4 & 1;\n            }\n            else {\n                if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n                   (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d13b;\ncode_r0x00437df7:\n                uVar6 = 0;\n            }\n        }\n        else {\n            if (arg_8h == arg_1ch_00[0x1a]) {\ncode_r0x00437cba:\n                uVar14 = 0;\n            }\n            else {\n                uVar5 = arg_8h[-1];\n                while (puVar7 = puVar10 + -1,  (uVar5 & 0xc0) == 0x80) {\n                    uVar5 = puVar10[-2];\n                    puVar10 = puVar7;\n                }\n                if (puVar7 < arg_1ch_00[0x1e]) {\n                    arg_1ch_00[0x1e] = puVar7;\n                }\n                uVar5 = *puVar7;\n                uVar6 = uVar5;\n                if (0xbf < uVar6) {\n                    if ((uVar5 & 0x20) == 0) {\n                        uVar14 = *puVar10;\n                        uVar6 = uVar6 & 0x1f;\n                    }\n                    else {\n                        uVar13 = *puVar10 & 0x3f;\n                        if ((uVar5 & 0x10) == 0) {\n                            uVar14 = puVar10[1];\n                            uVar6 = (uVar6 & 0xf) << 6;\n                        }\n                        else {\n                            if ((uVar5 & 8) == 0) {\n                                uVar13 = uVar13 | (uVar6 & 7) << 6;\n                                uVar6 = puVar10[1];\n                                uVar14 = puVar10[2];\n                            }\n                            else if ((uVar5 & 4) == 0) {\n                                uVar13 = (uVar13 | (uVar6 & 3) << 6) << 6 | puVar10[1] & 0x3f;\n                                uVar6 = puVar10[2];\n                                uVar14 = puVar10[3];\n                            }\n                            else {\n                                uVar13 = ((uVar13 | (uVar6 & 1) << 6) << 6 | puVar10[1] & 0x3f) << 6 | puVar10[2] & 0x3f\n                                ;\n                                uVar6 = puVar10[3];\n                                uVar14 = puVar10[4];\n                            }\n                            uVar13 = uVar13 << 6;\n                            uVar6 = uVar6 & 0x3f;\n                        }\n                        uVar6 = uVar6 | uVar13;\n                    }\n                    uVar6 = uVar6 << 6 | uVar14 & 0x3f;\n                }\n                if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 0x10) == 0)) goto code_r0x00437cba;\n                uVar14 = 1;\n            }\n            if (arg_8h < arg_1ch_00[0x1b]) {\n                uVar5 = *arg_8h;\n                uVar6 = uVar5;\n                if (0xbf < uVar6) {\n                    uVar13 = arg_8h[1] & 0x3f;\n                    if ((uVar5 & 0x20) == 0) {\n                        uVar6 = (uVar6 & 0x1f) << 6;\n                    }\n                    else {\n                        if ((uVar5 & 0x10) == 0) {\n                            uVar13 = uVar13 | (uVar6 & 0xf) << 6;\n                            uVar6 = arg_8h[2];\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar13 = (uVar13 | (uVar6 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                            uVar6 = arg_8h[3];\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar13 = ((uVar13 | (uVar6 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                            uVar6 = arg_8h[4];\n                        }\n                        else {\n                            uVar13 = (((uVar13 | (uVar6 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                                     6 | arg_8h[4] & 0x3f;\n                            uVar6 = arg_8h[5];\n                        }\n                        uVar13 = uVar13 << 6;\n                        uVar6 = uVar6 & 0x3f;\n                    }\n                    uVar6 = uVar6 | uVar13;\n                }\n                if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 0x10) == 0)) goto code_r0x00437df7;\n                uVar6 = 1;\n            }\n            else {\n                if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n                   (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d16f;\n                uVar6 = 0;\n            }\n        }\n        uVar5 = *puVar15;\n        puVar15 = puVar15 + 1;\n        if (uVar5 != 5) goto code_r0x00439633;\n        if (uVar6 == uVar14) {\n            arg_1ch_00[0x27] = arg_14h;\n            return NULL;\n        }\n        goto code_r0x00436fae;\n    case 6:\n        if (arg_1ch_00[0x1b] <= arg_8h) break;\n        uVar5 = *arg_8h;\n        uVar6 = uVar5;\n        puVar10 = arg_8h + 1;\n        if ((var_1ch != 0) && (0xbf < uVar6)) {\n            if ((uVar5 & 0x20) == 0) {\n                uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                puVar10 = arg_8h + 2;\n            }\n            else if ((uVar5 & 0x10) == 0) {\n                uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                puVar10 = arg_8h + 3;\n            }\n            else if ((uVar5 & 8) == 0) {\n                uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                puVar10 = arg_8h + 4;\n            }\n            else if ((uVar5 & 4) == 0) {\n                uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f;\n                puVar10 = arg_8h + 5;\n            }\n            else {\n                uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                puVar10 = arg_8h + 6;\n            }\n        }\n        arg_8h = puVar10;\n        if (0xff < uVar6) goto code_r0x00437b16;\n        if ((*(uVar6 + arg_1ch_00[0xd]) & 4) != 0) goto code_r0x0043ce34;\n        puVar15 = puVar15 + 1;\n        goto code_r0x00436fae;\n    case 7:\n        if (arg_8h < arg_1ch_00[0x1b]) {\n            uVar5 = *arg_8h;\n            uVar6 = uVar5;\n            puVar10 = arg_8h + 1;\n            if ((var_1ch != 0) && (0xbf < uVar6)) {\n                if ((uVar5 & 0x20) == 0) {\n                    uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                    puVar10 = arg_8h + 2;\n                }\n                else if ((uVar5 & 0x10) == 0) {\n                    uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                    puVar10 = arg_8h + 3;\n                }\n                else if ((uVar5 & 8) == 0) {\n                    uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                    puVar10 = arg_8h + 4;\n                }\n                else if ((uVar5 & 4) == 0) {\n                    uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                            6 | arg_8h[4] & 0x3f;\n                    puVar10 = arg_8h + 5;\n                }\n                else {\n                    uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                             6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                    puVar10 = arg_8h + 6;\n                }\n            }\n            arg_8h = puVar10;\n            if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 4) == 0)) goto code_r0x0043ce34;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\n        break;\n    case 8:\n        if (arg_8h < arg_1ch_00[0x1b]) {\n            uVar5 = *arg_8h;\n            uVar6 = uVar5;\n            puVar10 = arg_8h + 1;\n            if ((var_1ch != 0) && (0xbf < uVar6)) {\n                if ((uVar5 & 0x20) == 0) {\n                    uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                    puVar10 = arg_8h + 2;\n                }\n                else if ((uVar5 & 0x10) == 0) {\n                    uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                    puVar10 = arg_8h + 3;\n                }\n                else if ((uVar5 & 8) == 0) {\n                    uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                    puVar10 = arg_8h + 4;\n                }\n                else if ((uVar5 & 4) == 0) {\n                    uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                            6 | arg_8h[4] & 0x3f;\n                    puVar10 = arg_8h + 5;\n                }\n                else {\n                    uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                             6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                    puVar10 = arg_8h + 6;\n                }\n            }\n            arg_8h = puVar10;\n            if (0xff < uVar6) goto code_r0x00437b16;\n            if ((*(uVar6 + arg_1ch_00[0xd]) & 1) != 0) goto code_r0x0043ce34;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\n        break;\n    case 9:\n        if (arg_8h < arg_1ch_00[0x1b]) {\n            uVar5 = *arg_8h;\n            uVar6 = uVar5;\n            puVar10 = arg_8h + 1;\n            if ((var_1ch != 0) && (0xbf < uVar6)) {\n                if ((uVar5 & 0x20) == 0) {\n                    uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                    puVar10 = arg_8h + 2;\n                }\n                else if ((uVar5 & 0x10) == 0) {\n                    uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                    puVar10 = arg_8h + 3;\n                }\n                else if ((uVar5 & 8) == 0) {\n                    uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                    puVar10 = arg_8h + 4;\n                }\n                else if ((uVar5 & 4) == 0) {\n                    uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                            6 | arg_8h[4] & 0x3f;\n                    puVar10 = arg_8h + 5;\n                }\n                else {\n                    uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                             6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                    puVar10 = arg_8h + 6;\n                }\n            }\n            arg_8h = puVar10;\n            if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 1) == 0)) goto code_r0x0043ce34;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\n        break;\n    case 10:\n        if (arg_8h < arg_1ch_00[0x1b]) {\n            uVar5 = *arg_8h;\n            uVar6 = uVar5;\n            puVar10 = arg_8h + 1;\n            if ((var_1ch != 0) && (0xbf < uVar6)) {\n                if ((uVar5 & 0x20) == 0) {\n                    uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                    puVar10 = arg_8h + 2;\n                }\n                else if ((uVar5 & 0x10) == 0) {\n                    uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                    puVar10 = arg_8h + 3;\n                }\n                else if ((uVar5 & 8) == 0) {\n                    uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                    puVar10 = arg_8h + 4;\n                }\n                else if ((uVar5 & 4) == 0) {\n                    uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                            6 | arg_8h[4] & 0x3f;\n                    puVar10 = arg_8h + 5;\n                }\n                else {\n                    uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                             6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                    puVar10 = arg_8h + 6;\n                }\n            }\n            arg_8h = puVar10;\n            if (0xff < uVar6) goto code_r0x00437b16;\n            if ((*(uVar6 + arg_1ch_00[0xd]) & 0x10) != 0) goto code_r0x0043ce34;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\n        break;\n    case 0xb:\n        if (arg_8h < arg_1ch_00[0x1b]) {\n            uVar5 = *arg_8h;\n            uVar6 = uVar5;\n            puVar10 = arg_8h + 1;\n            if ((var_1ch != 0) && (0xbf < uVar6)) {\n                if ((uVar5 & 0x20) == 0) {\n                    uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                    puVar10 = arg_8h + 2;\n                }\n                else if ((uVar5 & 0x10) == 0) {\n                    uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                    puVar10 = arg_8h + 3;\n                }\n                else if ((uVar5 & 8) == 0) {\n                    uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                    puVar10 = arg_8h + 4;\n                }\n                else if ((uVar5 & 4) == 0) {\n                    uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                            6 | arg_8h[4] & 0x3f;\n                    puVar10 = arg_8h + 5;\n                }\n                else {\n                    uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                             6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                    puVar10 = arg_8h + 6;\n                }\n            }\n            arg_8h = puVar10;\n            if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 0x10) == 0)) goto code_r0x0043ce34;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\n        break;\n    case 0xc:\n        if (arg_1ch_00[6] == 0) {\n            if (((arg_1ch_00[0x1b] - arg_1ch_00[7] < arg_8h) || (*arg_8h != *(arg_1ch_00 + 0xb))) ||\n               ((arg_1ch_00[7] != 1 && (arg_8h[1] != *(arg_1ch_00 + 0x2d))))) goto code_r0x00437e84;\n            goto code_r0x0043d057;\n        }\n        if ((arg_8h < arg_1ch_00[0x1b]) &&\n           (iVar9 = fcn.0042efe8(arg_8h, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, var_1ch),  iVar9 != 0))\n        goto code_r0x0043d057;\n    case 0xd:\ncode_r0x00437e84:\n        puVar10 = arg_8h + 1;\n        if (arg_1ch_00[0x1b] <= arg_8h) {\n            if ((arg_1ch_00[0x1f] == 0) || (puVar10 < arg_1ch_00[0x1e] || puVar10 == arg_1ch_00[0x1e]))\n            goto code_r0x0043d2b3;\n            arg_1ch_00[0x17] = 1;\n            uVar6 = arg_1ch_00[0x1f];\n            goto joined_r0x0043d8b8;\n        }\n        arg_8h = puVar10;\n        if (var_1ch != 0) {\n            for (; (arg_8h < arg_1ch_00[0x1b] && ((*arg_8h & 0xc0) == 0x80)); arg_8h = arg_8h + 1) {\n            }\n        }\n        puVar15 = puVar15 + 1;\n        goto code_r0x00436fae;\n    case 0xe:\n        puVar10 = arg_8h + 1;\n        if (arg_1ch_00[0x1b] <= arg_8h) {\ncode_r0x0043d150:\n            if ((arg_1ch_00[0x1f] == 0) || (puVar10 < arg_1ch_00[0x1e] || puVar10 == arg_1ch_00[0x1e]))\n            goto code_r0x0043ce34;\n            goto code_r0x0043d163;\n        }\n        puVar15 = puVar15 + 1;\n        arg_8h = puVar10;\n        goto code_r0x00436fae;\n    default:\n        return 0xfffffffb;\n    case 0x11:\n        if (arg_1ch_00[0x1b] <= arg_8h) break;\n        uVar5 = *arg_8h;\n        uVar6 = uVar5;\n        puVar10 = arg_8h + 1;\n        if ((var_1ch != 0) && (0xbf < uVar6)) {\n            uVar13 = *puVar10 & 0x3f;\n            if ((uVar5 & 0x20) == 0) {\n                uVar6 = (uVar6 & 0x1f) << 6 | uVar13;\n                puVar10 = arg_8h + 2;\n            }\n            else if ((uVar5 & 0x10) == 0) {\n                uVar6 = ((uVar6 & 0xf) << 6 | uVar13) << 6 | arg_8h[2] & 0x3f;\n                puVar10 = arg_8h + 3;\n            }\n            else if ((uVar5 & 8) == 0) {\n                uVar6 = (((uVar6 & 7) << 6 | uVar13) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                puVar10 = arg_8h + 4;\n            }\n            else if ((uVar5 & 4) == 0) {\n                uVar6 = ((((uVar6 & 3) << 6 | uVar13) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f;\n                puVar10 = arg_8h + 5;\n            }\n            else {\n                uVar6 = (((((uVar6 & 1) << 6 | uVar13) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                puVar10 = arg_8h + 6;\n            }\n        }\n        arg_8h = puVar10;\n        if (0xd < uVar6) {\n            if ((uVar6 != 0x85) && ((uVar6 < 0x2028 || (0x2029 < uVar6)))) goto code_r0x0043ce34;\ncode_r0x004386c5:\n            if (arg_1ch_00[0x18] != 0) goto code_r0x0043d2b3;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\n        if (uVar6 == 0xd) {\n            if ((arg_1ch_00[0x1b] <= puVar10) || (*puVar10 != 10)) goto code_r0x00437b16;\n            puVar15 = puVar15 + 1;\n            arg_8h = puVar10 + 1;\n            goto code_r0x00436fae;\n        }\n        if (uVar6 != 10) {\n            if ((10 < uVar6) && (uVar6 < 0xd)) goto code_r0x004386c5;\n            goto code_r0x0043ce34;\n        }\n        goto code_r0x00437b16;\n    case 0x12:\n        if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d1bc;\n        uVar5 = *arg_8h;\n        uVar6 = uVar5;\n        puVar10 = arg_8h + 1;\n        if ((var_1ch != 0) && (0xbf < uVar6)) {\n            if ((uVar5 & 0x20) == 0) {\n                uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                puVar10 = arg_8h + 2;\n            }\n            else if ((uVar5 & 0x10) == 0) {\n                uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                puVar10 = arg_8h + 3;\n            }\n            else if ((uVar5 & 8) == 0) {\n                uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                puVar10 = arg_8h + 4;\n            }\n            else if ((uVar5 & 4) == 0) {\n                uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f;\n                puVar10 = arg_8h + 5;\n            }\n            else {\n                uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                puVar10 = arg_8h + 6;\n            }\n        }\n        arg_8h = puVar10;\n        if (uVar6 < 0x180f) {\n            if (uVar6 == 0x180e) goto code_r0x0043d2b3;\n            if (uVar6 < 0xa1) {\n                if (((uVar6 == 0xa0) || (uVar6 == 9)) || (uVar6 == 0x20)) goto code_r0x0043d2b3;\n                puVar15 = puVar15 + 1;\n            }\n            else {\n                if (uVar6 == 0x1680) goto code_r0x0043d2b3;\n                puVar15 = puVar15 + 1;\n            }\n        }\n        else if (uVar6 < 0x2060) {\n            if (uVar6 == 0x205f) goto code_r0x0043d2b3;\n            if (uVar6 < 0x2000) goto code_r0x00437b16;\n            if ((uVar6 < 0x200b) || (uVar6 == 0x202f)) goto code_r0x0043d2b3;\n            puVar15 = puVar15 + 1;\n        }\n        else {\n            if (uVar6 == 0x3000) goto code_r0x0043d2b3;\n            puVar15 = puVar15 + 1;\n        }\n        goto code_r0x00436fae;\n    case 0x13:\n        if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d1bc;\n        uVar5 = *arg_8h;\n        uVar6 = uVar5;\n        puVar10 = arg_8h + 1;\n        if ((var_1ch != 0) && (0xbf < uVar6)) {\n            if ((uVar5 & 0x20) == 0) {\n                uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                puVar10 = arg_8h + 2;\n            }\n            else if ((uVar5 & 0x10) == 0) {\n                uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                puVar10 = arg_8h + 3;\n            }\n            else if ((uVar5 & 8) == 0) {\n                uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                puVar10 = arg_8h + 4;\n            }\n            else if ((uVar5 & 4) == 0) {\n                uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f;\n                puVar10 = arg_8h + 5;\n            }\n            else {\n                uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                puVar10 = arg_8h + 6;\n            }\n        }\n        arg_8h = puVar10;\n        if (uVar6 < 0x180f) {\n            if (uVar6 == 0x180e) goto code_r0x00437b16;\n            if (0xa0 < uVar6) {\n                if (uVar6 != 0x1680) goto code_r0x0043d2b3;\n                puVar15 = puVar15 + 1;\n                goto code_r0x00436fae;\n            }\n            if ((uVar6 != 0xa0) && (uVar6 != 9)) {\n                if (uVar6 != 0x20) goto code_r0x0043d2b3;\n                puVar15 = puVar15 + 1;\n                goto code_r0x00436fae;\n            }\n        }\n        else {\n            if (0x205f < uVar6) {\n                if (uVar6 != 0x3000) goto code_r0x0043d2b3;\n                puVar15 = puVar15 + 1;\n                goto code_r0x00436fae;\n            }\n            if (uVar6 != 0x205f) {\n                if (uVar6 < 0x2000) goto code_r0x0043d2b3;\n                if (0x200a < uVar6) {\n                    if (uVar6 != 0x202f) goto code_r0x0043d2b3;\n                    puVar15 = puVar15 + 1;\n                    goto code_r0x00436fae;\n                }\n            }\n        }\n        goto code_r0x00437b16;\n    case 0x14:\n        if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d1bc;\n        uVar5 = *arg_8h;\n        uVar6 = uVar5;\n        puVar10 = arg_8h + 1;\n        if ((var_1ch != 0) && (0xbf < uVar6)) {\n            if ((uVar5 & 0x20) == 0) {\n                uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                puVar10 = arg_8h + 2;\n            }\n            else if ((uVar5 & 0x10) == 0) {\n                uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                puVar10 = arg_8h + 3;\n            }\n            else if ((uVar5 & 8) == 0) {\n                uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                puVar10 = arg_8h + 4;\n            }\n            else if ((uVar5 & 4) == 0) {\n                uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f;\n                puVar10 = arg_8h + 5;\n            }\n            else {\n                uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                puVar10 = arg_8h + 6;\n            }\n        }\n        arg_8h = puVar10;\n        if (0x85 < uVar6) {\n            if (uVar6 < 0x2028) goto code_r0x00437b16;\n            if (uVar6 < 0x202a) goto code_r0x0043d2b3;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\n        if (uVar6 == 0x85) goto code_r0x0043d2b3;\n        if (9 < uVar6) {\n            if (uVar6 < 0xe) goto code_r0x0043d2b3;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\n        goto code_r0x00437b16;\n    case 0x15:\n        if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d1bc;\n        uVar5 = *arg_8h;\n        uVar6 = uVar5;\n        puVar10 = arg_8h + 1;\n        if ((var_1ch != 0) && (0xbf < uVar6)) {\n            if ((uVar5 & 0x20) == 0) {\n                uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                puVar10 = arg_8h + 2;\n            }\n            else if ((uVar5 & 0x10) == 0) {\n                uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                puVar10 = arg_8h + 3;\n            }\n            else if ((uVar5 & 8) == 0) {\n                uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                puVar10 = arg_8h + 4;\n            }\n            else if ((uVar5 & 4) == 0) {\n                uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f;\n                puVar10 = arg_8h + 5;\n            }\n            else {\n                uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                puVar10 = arg_8h + 6;\n            }\n        }\n        arg_8h = puVar10;\n        if (uVar6 < 0x86) {\n            if (uVar6 == 0x85) goto code_r0x00437b16;\n            if ((uVar6 < 10) || (0xd < uVar6)) goto code_r0x0043d2b3;\n            puVar15 = puVar15 + 1;\n        }\n        else {\n            if ((uVar6 < 0x2028) || (0x2029 < uVar6)) goto code_r0x0043d2b3;\n            puVar15 = puVar15 + 1;\n        }\n        goto code_r0x00436fae;\n    case 0x17:\n        goto code_r0x00437b35;\n    case 0x18:\ncode_r0x00437b2a:\n        if (arg_1ch_00[0x1b] <= arg_8h) {\ncode_r0x00437afb:\n            if (((arg_1ch_00[0x1f] == 0) || (arg_8h < arg_1ch_00[0x1e] || arg_8h == arg_1ch_00[0x1e])) ||\n               (arg_1ch_00[0x17] = 1,  arg_1ch_00[0x1f] < 2)) goto code_r0x00437b16;\n            goto code_r0x0043d16f;\n        }\n        goto code_r0x0043d2b3;\n    case 0x19:\n        arg_20h = puVar15[1];\n        puVar15 = puVar15 + 2;\n        goto code_r0x00436fae;\n    case 0x1a:\n        if ((arg_1ch_00[0xf] != 0) && (arg_8h == arg_1ch_00[0x1a])) goto code_r0x0043d057;\n        if ((arg_20h & 2) == 0) {\ncode_r0x00437a58:\n            if (arg_8h != arg_1ch_00[0x1a]) goto code_r0x0043d2b3;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\n        if (arg_8h != arg_1ch_00[0x1a]) {\n            if (arg_8h == arg_1ch_00[0x1b]) goto code_r0x0043ce34;\n            if (arg_1ch_00[6] != 0) {\n                if ((arg_8h <= arg_1ch_00[0x1a]) ||\n                   (iVar9 = fcn.0042ee14(arg_8h, arg_1ch_00[6], arg_1ch_00[0x1a], arg_1ch_00 + 7, var_1ch),  iVar9 == 0)\n                   ) goto code_r0x0043ce34;\n                puVar15 = puVar15 + 1;\n                goto code_r0x00436fae;\n            }\n            if (arg_8h < arg_1ch_00[0x1a] + arg_1ch_00[7]) goto code_r0x0043ce34;\n            if ((arg_8h[-arg_1ch_00[7]] != *(arg_1ch_00 + 0xb)) ||\n               ((arg_1ch_00[7] != 1 && ((arg_8h + -arg_1ch_00[7])[1] != *(arg_1ch_00 + 0x2d))))) goto code_r0x0043ce34;\n        }\n        puVar15 = puVar15 + 1;\n        goto code_r0x00436fae;\n    case 0x1b:\n        if ((arg_20h & 2) != 0) {\n            if (arg_1ch_00[0x1b] <= arg_8h) {\n                if (arg_1ch_00[0x10] == 0) goto code_r0x00437afb;\n                goto code_r0x0043d2b3;\n            }\n            if (arg_1ch_00[6] == 0) {\n                if ((arg_1ch_00[0x1b] - arg_1ch_00[7] < arg_8h) || (*arg_8h != *(arg_1ch_00 + 0xb)))\n                goto code_r0x0043ce34;\n                if (arg_1ch_00[7] == 1) goto code_r0x00437b16;\n                if (arg_8h[1] != *(arg_1ch_00 + 0x2d)) goto code_r0x0043ce34;\n                puVar15 = puVar15 + 1;\n            }\n            else {\n                iVar9 = fcn.0042efe8(arg_8h, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, var_1ch);\n                if (iVar9 == 0) goto code_r0x0043ce34;\n                puVar15 = puVar15 + 1;\n            }\n            goto code_r0x00436fae;\n        }\n        if (arg_1ch_00[0x10] != 0) goto code_r0x0043ce34;\n        if (arg_1ch_00[0x14] != 0) goto code_r0x00437b2a;\ncode_r0x00437b35:\n        if (arg_8h < arg_1ch_00[0x1b]) {\n            if (arg_1ch_00[6] == 0) {\n                if (((arg_1ch_00[0x1b] - arg_1ch_00[7] < arg_8h) || (*arg_8h != *(arg_1ch_00 + 0xb))) ||\n                   ((arg_1ch_00[7] != 1 && (arg_8h[1] != *(arg_1ch_00 + 0x2d))))) goto code_r0x0043ce34;\n            }\n            else {\n                iVar9 = fcn.0042efe8(arg_8h, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, var_1ch);\n                if (iVar9 == 0) goto code_r0x0043ce34;\n            }\n            if (arg_8h != arg_1ch_00[0x1b] - arg_1ch_00[7]) goto code_r0x0043ce34;\n        }\n        if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n            arg_1ch_00[0x17] = 1;\n            if (1 < arg_1ch_00[0x1f]) goto code_r0x0043d1a7;\n            puVar15 = puVar15 + 1;\n            goto code_r0x00436fae;\n        }\ncode_r0x00437b16:\n        puVar15 = puVar15 + 1;\n        goto code_r0x00436fae;\n    case 0x1c:\n        if (var_1ch == 0) {\n            if (arg_1ch_00[0x1b] - arg_8h < 1) {\n                if ((arg_1ch_00[0x1f] == 0) || (arg_8h < arg_1ch_00[0x1e] || arg_8h == arg_1ch_00[0x1e]))\n                goto code_r0x0043d057;\n                goto code_r0x0043d303;\n            }\n            if (puVar15[1] != *arg_8h) goto code_r0x0043ce34;\n            puVar15 = puVar15 + 2;\n            arg_8h = arg_8h + 1;\n        }\n        else {\n            uVar5 = puVar15[1];\n            puVar15 = puVar15 + 1;\n            iVar9 = 1;\n            if (0xbf < uVar5) {\n                if ((uVar5 & 0x20) == 0) {\n                    iVar9 = 2;\n                }\n                else if ((uVar5 & 0x10) == 0) {\n                    iVar9 = 3;\n                }\n                else if ((uVar5 & 8) == 0) {\n                    iVar9 = 4;\n                }\n                else {\n                    iVar9 = ((uVar5 & 4) != 0) + 5;\n                }\n            }\n            if (arg_1ch_00[0x1b] - arg_8h < iVar9) {\n                if ((((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1b] <= arg_8h)) &&\n                    (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n                   (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) {\n                    arg_1ch_00[0x27] = arg_14h;\n                    return 0xfffffff4;\n                }\n                goto code_r0x0043d057;\n            }\n            if (iVar9 != 0) {\n                do {\n                    uVar5 = *puVar15;\n                    uVar2 = *arg_8h;\n                    iVar9 = iVar9 + -1;\n                    arg_8h = arg_8h + 1;\n                    puVar15 = puVar15 + 1;\n                    if (uVar5 != uVar2) goto code_r0x0043ce34;\n                } while (0 < iVar9);\n            }\n        }\n        goto code_r0x00436fae;\n    case 0x1d:\n        if (var_1ch == 0) {\n            if (arg_1ch_00[0x1b] - arg_8h < 1) goto code_r0x0043d150;\n            if (*(puVar15[1] + arg_1ch_00[0xc]) != *(*arg_8h + arg_1ch_00[0xc])) goto code_r0x0043d2b3;\n            puVar15 = puVar15 + 2;\n            arg_8h = arg_8h + 1;\n        }\n        else {\n            uVar5 = puVar15[1];\n            uVar13 = uVar5;\n            var_10h = 0x1;\n            uVar6 = uVar13;\n            if (0xbf < uVar13) {\n                if ((uVar5 & 0x20) == 0) {\n                    uVar6 = (uVar13 & 0x1f) << 6 | puVar15[2] & 0x3f;\n                    var_10h = 0x2;\n                }\n                else {\n                    uVar14 = puVar15[2] & 0x3f;\n                    uVar6 = puVar15[3] & 0x3f;\n                    if ((uVar5 & 0x10) == 0) {\n                        uVar6 = ((uVar13 & 0xf) << 6 | uVar14) << 6 | uVar6;\n                        var_10h = 0x3;\n                    }\n                    else if ((uVar5 & 8) == 0) {\n                        uVar6 = puVar15[4] & 0x3f | ((uVar14 | (uVar13 & 7) << 6) << 6 | uVar6) << 6;\n                        var_10h = 0x4;\n                    }\n                    else if ((uVar5 & 4) == 0) {\n                        uVar6 = (puVar15[4] & 0x3f | ((uVar14 | (uVar13 & 3) << 6) << 6 | uVar6) << 6) << 6 |\n                                puVar15[5] & 0x3f;\n                        var_10h = 0x5;\n                    }\n                    else {\n                        uVar6 = puVar15[6] & 0x3f |\n                                ((((uVar14 | (uVar13 & 1) << 6) << 6 | uVar6) << 6 | puVar15[4] & 0x3f) << 6 |\n                                puVar15[5] & 0x3f) << 6;\n                        var_10h = 0x6;\n                    }\n                }\n            }\n            if (arg_1ch_00[0x1b] - arg_8h < var_10h) {\n                if ((arg_1ch_00[0x1f] == 0) || (arg_8h < arg_1ch_00[0x1b])) goto code_r0x0043d057;\n                goto code_r0x0043d2f5;\n            }\n            uVar5 = *arg_8h;\n            uVar14 = uVar5;\n            puVar10 = arg_8h + 1;\n            if (uVar6 < 0x80) {\n                puVar15 = puVar15 + 2;\n                arg_8h = puVar10;\n                if (*(uVar13 + arg_1ch_00[0xc]) != *(uVar14 + arg_1ch_00[0xc])) {\n                    arg_1ch_00[0x27] = arg_14h;\n                    return NULL;\n                }\n            }\n            else {\n                if (0xbf < uVar14) {\n                    uVar13 = *puVar10 & 0x3f;\n                    if ((uVar5 & 0x20) == 0) {\n                        uVar14 = (uVar14 & 0x1f) << 6 | uVar13;\n                        puVar10 = arg_8h + 2;\n                    }\n                    else if ((uVar5 & 0x10) == 0) {\n                        uVar14 = ((uVar14 & 0xf) << 6 | uVar13) << 6 | arg_8h[2] & 0x3f;\n                        puVar10 = arg_8h + 3;\n                    }\n                    else if ((uVar5 & 8) == 0) {\n                        uVar14 = (((uVar14 & 7) << 6 | uVar13) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                        puVar10 = arg_8h + 4;\n                    }\n                    else if ((uVar5 & 4) == 0) {\n                        uVar14 = ((((uVar14 & 3) << 6 | uVar13) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                                 arg_8h[4] & 0x3f;\n                        puVar10 = arg_8h + 5;\n                    }\n                    else {\n                        uVar14 = (((((uVar14 & 1) << 6 | uVar13) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6\n                                 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                        puVar10 = arg_8h + 6;\n                    }\n                }\n                puVar15 = puVar15 + 1 + var_10h;\n                arg_8h = puVar10;\ncode_r0x00439633:\n                if (uVar6 != uVar14) {\n                    arg_1ch_00[0x27] = arg_14h;\n                    return NULL;\n                }\n            }\n        }\n        goto code_r0x00436fae;\n    case 0x1e:\n        if (arg_1ch_00[0x1b] <= arg_8h) {\ncode_r0x0043d1bc:\n            if ((arg_1ch_00[0x1f] == 0) || (arg_8h < arg_1ch_00[0x1e] || arg_8h == arg_1ch_00[0x1e]))\n            goto code_r0x0043ce34;\n            goto code_r0x0043d163;\n        }\n        uVar5 = *arg_8h;\n        uVar6 = uVar5;\n        puVar10 = arg_8h + 1;\n        if ((var_1ch != 0) && (0xbf < uVar6)) {\n            if ((uVar5 & 0x20) == 0) {\n                uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n                puVar10 = arg_8h + 2;\n            }\n            else if ((uVar5 & 0x10) == 0) {\n                uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                puVar10 = arg_8h + 3;\n            }\n            else if ((uVar5 & 8) == 0) {\n                uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                puVar10 = arg_8h + 4;\n            }\n            else if ((uVar5 & 4) == 0) {\n                uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f;\n                puVar10 = arg_8h + 5;\n            }\n            else {\n                uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                puVar10 = arg_8h + 6;\n            }\n        }\n        arg_8h = puVar10;\n        if ((arg_20h & 1) == 0) {\n            puVar10 = puVar15 + 1;\n            puVar15 = puVar15 + 2;\n            if (*puVar10 == uVar6) {\n                arg_1ch_00[0x27] = arg_14h;\n                return NULL;\n            }\n        }\n        else {\n            if (uVar6 < 0x100) {\n                uVar6 = *(arg_1ch_00[0xc] + uVar6);\n            }\n            puVar10 = puVar15 + 1;\n            puVar15 = puVar15 + 2;\n            if (*(arg_1ch_00[0xc] + *puVar10) == uVar6) {\n                arg_1ch_00[0x27] = arg_14h;\n                return NULL;\n            }\n        }\n        goto code_r0x00436fae;\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n        var_14h = var_4h - 0x1f & 1;\n        var_8h = *(var_4h + 0x485ed1);\n        var_ch = *(var_4h + 0x485ed9);\n        puVar10 = puVar15 + 1;\n        if (var_ch == 0) goto code_r0x00439720;\n        goto code_r0x00439728;\n    case 0x25:\n    case 0x26:\n        goto code_r0x004396a2;\n    case 0x27:\n        var_ch = CONCAT11(puVar15[1], puVar15[2]);\n        puVar10 = puVar15 + 3;\n        var_8h = var_ch;\n        goto code_r0x00439728;\n    case 0x28:\n        var_18h = 0x1;\n        var_8h = 0;\n        goto code_r0x00439720;\n    case 0x29:\n        var_18h = 0x1;\n        var_8h = 1;\ncode_r0x00439720:\n        puVar10 = puVar15 + 1;\n        var_ch = 0x7fffffff;\n        goto code_r0x00439728;\n    case 0x2a:\n        var_8h = 0;\n        var_18h = 0x1;\n        var_ch = 1;\n        puVar10 = puVar15 + 1;\n        goto code_r0x00439728;\n    case 0x2b:\n        var_18h = 0x1;\ncode_r0x004396a2:\n        var_8h = 0;\n        var_ch = CONCAT11(puVar15[1], puVar15[2]);\n        var_14h = *puVar15 == 0x26;\n        puVar10 = puVar15 + 3;\ncode_r0x00439728:\n        uVar5 = *puVar10;\n        var_4h = uVar5;\n        if (var_1ch == 0) {\n            puVar15 = puVar10 + 1;\n        }\n        else {\n            var_10h = 0x1;\n            if (0xbf < var_4h) {\n                uVar6 = puVar10[1] & 0x3f;\n                if ((uVar5 & 0x20) == 0) {\n                    var_4h = (var_4h & 0x1f) << 6 | uVar6;\n                    var_10h = 0x2;\n                }\n                else if ((uVar5 & 0x10) == 0) {\n                    var_4h = puVar10[2] & 0x3f | (uVar6 | (var_4h & 0xf) << 6) << 6;\n                    var_10h = 0x3;\n                }\n                else if ((uVar5 & 8) == 0) {\n                    var_4h = puVar10[3] & 0x3f | ((uVar6 | (var_4h & 7) << 6) << 6 | puVar10[2] & 0x3f) << 6;\n                    var_10h = 0x4;\n                }\n                else if ((uVar5 & 4) == 0) {\n                    var_4h = puVar10[4] & 0x3f |\n                             (((uVar6 | (var_4h & 3) << 6) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f) << 6;\n                    var_10h = 0x5;\n                }\n                else {\n                    var_4h = puVar10[5] & 0x3f |\n                             ((((uVar6 | (var_4h & 1) << 6) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f) << 6 |\n                             puVar10[4] & 0x3f) << 6;\n                    var_10h = 0x6;\n                }\n            }\n            puVar15 = puVar10 + var_10h;\n            var_24h = puVar10;\n            if (0x1 < var_10h) {\n                arg_1ch = 0x1;\n                if (0 < var_8h) {\n                    do {\n                        if ((arg_1ch_00[0x1b] - var_10h < arg_8h) ||\n                           (iVar9 = fcn.00411b83(arg_8h, var_24h, var_10h),  iVar9 != 0)) goto code_r0x0043d2c5;\n                        arg_1ch = arg_1ch + 1;\n                        arg_8h = arg_8h + var_10h;\n                    } while (arg_1ch <= var_8h);\n                }\n                if (var_8h != var_ch) {\n                    if (var_14h != NULL) {\n                        arg_1ch = var_8h;\n                        var_8h = arg_2ch + 1;\n                        puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h\n                                               , 0, arg_2ch + 1);\n                        if (puVar10 != NULL) {\n                            return puVar10;\n                        }\n                        goto code_r0x0043db6e;\n                    }\n                    arg_1ch = var_8h;\n                    var_14h = arg_8h;\n                    if (var_8h < var_ch) {\n                        do {\n                            if ((arg_1ch_00[0x1b] - var_10h < arg_8h) ||\n                               (iVar9 = fcn.00411b83(arg_8h, var_24h, var_10h),  iVar9 != 0)) {\n                                if ((arg_1ch_00[0x1f] != 0) &&\n                                   (((arg_1ch_00[0x1b] <= arg_8h &&\n                                     (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n                                    (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])))) goto code_r0x0043d16f;\n                                break;\n                            }\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = arg_8h + var_10h;\n                        } while (arg_1ch < var_ch);\n                    }\n                    if (var_18h == NULL) {\n                        var_8h = arg_2ch + 1;\n                        puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h\n                                               , 0, var_8h);\n                        if (puVar10 != NULL) {\n                            return puVar10;\n                        }\n                        while (arg_8h != var_14h) {\n                            arg_8h = arg_8h + -var_10h;\n                            puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, \n                                                   arg_24h, 0, var_8h);\n                            if (puVar10 != NULL) {\n                                return puVar10;\n                            }\n                        }\n                        goto code_r0x0043d057;\n                    }\n                }\n                goto code_r0x00436fae;\n            }\n        }\n        if ((arg_20h & 1) == 0) {\n            arg_1ch = 0x1;\n            puVar10 = arg_8h;\n            if (0 < var_8h) {\n                do {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d324;\n                    uVar5 = *arg_8h;\n                    arg_8h = arg_8h + 1;\n                    if (var_4h != uVar5) goto code_r0x0043d2b3;\n                    arg_1ch = arg_1ch + 1;\n                    puVar10 = arg_8h;\n                } while (arg_1ch <= var_8h);\n            }\n            arg_8h = puVar10;\n            if (var_8h != var_ch) {\n                arg_1ch = var_8h;\n                uVar6 = var_8h;\n                if (var_14h != NULL) {\n                    var_8h = arg_2ch + 1;\n                    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                          var_8h);\n                    if (puVar7 != NULL) {\n                        return puVar7;\n                    }\n                    goto code_r0x0043dcee;\n                }\n                for (; uVar6 < var_ch; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) {\n                        if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n                           (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d16f;\n                        break;\n                    }\n                    if (var_4h != *arg_8h) break;\n                    arg_8h = arg_8h + 1;\n                }\n                if (var_18h == NULL) {\n                    if (puVar10 <= arg_8h) {\n                        var_8h = arg_2ch + 1;\n                        var_14h = puVar10;\n                        do {\n                            puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, \n                                                   arg_24h, 0, var_8h);\n                            arg_8h = arg_8h + -1;\n                            if (puVar10 != NULL) {\n                                return puVar10;\n                            }\n                        } while (var_14h <= arg_8h);\n                    }\n                    arg_1ch_00[0x27] = arg_14h;\n                    return NULL;\n                }\n            }\n        }\n        else {\n            var_4h = *(var_4h + arg_1ch_00[0xc]);\n            arg_1ch = 0x1;\n            puVar10 = arg_8h;\n            if (0 < var_8h) {\n                do {\n                    if (arg_1ch_00[0x1b] <= puVar10) {\n                        if (((arg_1ch_00[0x1f] == 0) || (puVar10 < arg_1ch_00[0x1e] || puVar10 == arg_1ch_00[0x1e])) ||\n                           (arg_1ch_00[0x17] = 1,  arg_1ch_00[0x1f] < 2)) goto code_r0x0043d2b3;\n                        goto code_r0x0043d13b;\n                    }\n                    uVar5 = *puVar10;\n                    puVar10 = puVar10 + 1;\n                    if (var_4h != *(uVar5 + arg_1ch_00[0xc])) goto code_r0x0043d057;\n                    arg_1ch = arg_1ch + 1;\n                } while (arg_1ch <= var_8h);\n            }\n            arg_8h = puVar10;\n            if (var_8h != var_ch) {\n                if (var_14h != NULL) {\n                    arg_1ch = var_8h;\n                    var_8h = arg_2ch + 1;\n                    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                          var_8h);\n                    if (puVar7 != NULL) {\n                        return puVar7;\n                    }\n                    goto code_r0x0043dc5e;\n                }\n                if (var_8h < var_ch) {\n                    arg_1ch = var_8h;\n                    do {\n                        if (arg_1ch_00[0x1b] <= arg_8h) {\n                            if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e]))\n                               && (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d16f;\n                            break;\n                        }\n                        if (var_4h != *(*arg_8h + arg_1ch_00[0xc])) break;\n                        arg_1ch = arg_1ch + 1;\n                        arg_8h = arg_8h + 1;\n                    } while (arg_1ch < var_ch);\n                }\n                if (var_18h == NULL) {\n                    if (puVar10 <= arg_8h) {\n                        var_8h = arg_2ch + 1;\n                        var_14h = puVar10;\n                        do {\n                            puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, \n                                                   arg_24h, 0, var_8h);\n                            arg_8h = arg_8h + -1;\n                            if (puVar10 != NULL) {\n                                return puVar10;\n                            }\n                        } while (var_14h <= arg_8h);\n                    }\n                    arg_1ch_00[0x27] = arg_14h;\n                    return NULL;\n                }\n            }\n        }\n        goto code_r0x00436fae;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n        var_14h = var_4h - 0x2c & 1;\n        uVar6 = *(var_4h + 0x485ec4);\n        puVar7 = puVar15 + 1;\n        var_ch = *(var_4h + 0x485ecc);\n        if (*(var_4h + 0x485ecc) == 0) goto code_r0x00439d64;\n        goto code_r0x00439d6c;\n    case 0x32:\n    case 0x33:\n        uVar6 = 0;\n        var_14h = *puVar15 == 0x33;\n        puVar7 = puVar15 + 3;\n        var_ch = CONCAT11(puVar15[1], puVar15[2]);\n        goto code_r0x00439d6c;\n    case 0x34:\n        uVar6 = CONCAT11(puVar15[1], puVar15[2]);\n        puVar7 = puVar15 + 3;\n        var_ch = uVar6;\n        goto code_r0x00439d6c;\n    case 0x35:\n        uVar6 = 0;\n        var_18h = 0x1;\n        goto code_r0x00439d64;\n    case 0x36:\n        uVar6 = 1;\n        var_18h = 0x1;\ncode_r0x00439d64:\n        puVar7 = puVar15 + 1;\n        var_ch = 0x7fffffff;\n        goto code_r0x00439d6c;\n    case 0x37:\n        uVar6 = 0;\n        var_18h = 0x1;\n        puVar7 = puVar15 + 1;\n        var_ch = 1;\n        goto code_r0x00439d6c;\n    case 0x38:\n        uVar6 = 0;\n        var_18h = 0x1;\n        puVar7 = puVar15 + 3;\n        var_ch = CONCAT11(puVar15[1], puVar15[2]);\ncode_r0x00439d6c:\n        var_4h = *puVar7;\n        puVar15 = puVar7 + 1;\n        if ((arg_20h & 1) == 0) {\n            arg_1ch = 0x1;\n            if (var_1ch == 0) {\n                if (0 < uVar6) {\n                    do {\n                        if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043df5a;\n                        uVar5 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        if (var_4h == uVar5) goto code_r0x0043d2b3;\n                        arg_1ch = arg_1ch + 1;\n                        puVar10 = arg_8h;\n                    } while (arg_1ch <= uVar6);\n                }\n            }\n            else if (0 < uVar6) {\n                do {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043df5a;\n                    uVar5 = *arg_8h;\n                    uVar13 = uVar5;\n                    puVar10 = arg_8h + 1;\n                    if (0xbf < uVar13) {\n                        if ((uVar5 & 0x20) == 0) {\n                            uVar13 = (uVar13 & 0x1f) << 6 | *puVar10 & 0x3f;\n                            puVar10 = arg_8h + 2;\n                        }\n                        else if ((uVar5 & 0x10) == 0) {\n                            uVar13 = ((uVar13 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n                            puVar10 = arg_8h + 3;\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar13 = (((uVar13 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                     arg_8h[3] & 0x3f;\n                            puVar10 = arg_8h + 4;\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar13 = ((((uVar13 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                     arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f;\n                            puVar10 = arg_8h + 5;\n                        }\n                        else {\n                            uVar13 = (((((uVar13 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                      arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                            puVar10 = arg_8h + 6;\n                        }\n                    }\n                    if (var_4h == uVar13) goto code_r0x0043d2b3;\n                    arg_1ch = arg_1ch + 1;\n                    arg_8h = puVar10;\n                } while (arg_1ch <= uVar6);\n            }\n            arg_8h = puVar10;\n            if (uVar6 != var_ch) {\n                if (var_14h != NULL) {\n                    var_8h = arg_2ch + 1;\n                    if (var_1ch == 0) {\n                        puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h\n                                              , 0, var_8h);\n                        arg_1ch = uVar6;\n                        if (puVar7 != NULL) {\n                            return puVar7;\n                        }\n                        goto code_r0x0043e12e;\n                    }\n                    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                          var_8h);\n                    arg_1ch = uVar6;\n                    if (puVar7 != NULL) {\n                        return puVar7;\n                    }\n                    goto code_r0x0043dfbe;\n                }\n                var_14h = puVar10;\n                if (var_1ch == 0) {\n                    for (; uVar6 < var_ch; uVar6 = uVar6 + 1) {\n                        if (arg_1ch_00[0x1b] <= arg_8h) {\n                            if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e]))\n                               && (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d13b;\n                            break;\n                        }\n                        if (var_4h == *arg_8h) break;\n                        arg_8h = arg_8h + 1;\n                    }\n                    if (var_18h == NULL) {\n                        if (puVar10 <= arg_8h) {\n                            var_8h = arg_2ch + 1;\n                            do {\n                                puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, \n                                                       arg_24h, 0, var_8h);\n                                if (puVar10 != NULL) {\n                                    return puVar10;\n                                }\n                                arg_8h = arg_8h + -1;\n                            } while (var_14h <= arg_8h);\n                        }\n                        goto code_r0x0043a551;\n                    }\n                }\n                else {\n                    for (; uVar6 < var_ch; uVar6 = uVar6 + 1) {\n                        iVar9 = 1;\n                        if (arg_1ch_00[0x1b] <= arg_8h) {\n                            if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e]))\n                               && (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d13b;\n                            break;\n                        }\n                        uVar5 = *arg_8h;\n                        uVar13 = uVar5;\n                        if (0xbf < uVar13) {\n                            uVar14 = arg_8h[1] & 0x3f;\n                            if ((uVar5 & 0x20) == 0) {\n                                uVar13 = (uVar13 & 0x1f) << 6 | uVar14;\n                                iVar9 = 2;\n                            }\n                            else if ((uVar5 & 0x10) == 0) {\n                                uVar13 = arg_8h[2] & 0x3f | (uVar14 | (uVar13 & 0xf) << 6) << 6;\n                                iVar9 = 3;\n                            }\n                            else if ((uVar5 & 8) == 0) {\n                                uVar13 = arg_8h[3] & 0x3f | ((uVar14 | (uVar13 & 7) << 6) << 6 | arg_8h[2] & 0x3f) << 6;\n                                iVar9 = 4;\n                            }\n                            else if ((uVar5 & 4) == 0) {\n                                uVar13 = arg_8h[4] & 0x3f |\n                                         (((uVar14 | (uVar13 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f\n                                         ) << 6;\n                                iVar9 = 5;\n                            }\n                            else {\n                                uVar13 = arg_8h[5] & 0x3f |\n                                         ((((uVar14 | (uVar13 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                          arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f) << 6;\n                                iVar9 = 6;\n                            }\n                        }\n                        if (var_4h == uVar13) break;\n                        arg_8h = arg_8h + iVar9;\n                    }\n                    if (var_18h == NULL) {\n                        var_8h = arg_2ch + 1;\n                        puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h\n                                               , 0, var_8h);\n                        if (puVar10 != NULL) {\n                            return puVar10;\n                        }\n                        while (arg_8h != var_14h) {\n                            uVar5 = arg_8h[-1];\n                            arg_8h = arg_8h + -1;\n                            while ((uVar5 & 0xc0) == 0x80) {\n                                puVar10 = arg_8h + -1;\n                                arg_8h = arg_8h + -1;\n                                uVar5 = *puVar10;\n                            }\n                            puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, \n                                                   arg_24h, 0, var_8h);\n                            if (puVar10 != NULL) {\n                                return puVar10;\n                            }\n                        }\ncode_r0x0043a551:\n                        arg_1ch_00[0x27] = arg_14h;\n                        return NULL;\n                    }\n                }\n            }\n        }\n        else {\n            var_4h = *(var_4h + arg_1ch_00[0xc]);\n            arg_1ch = 0x1;\n            if (var_1ch == 0) {\n                if (0 < uVar6) {\n                    do {\n                        if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n                        uVar5 = *puVar10;\n                        puVar10 = puVar10 + 1;\n                        if (var_4h == *(uVar5 + arg_1ch_00[0xc])) goto code_r0x0043d057;\n                        arg_1ch = arg_1ch + 1;\n                    } while (arg_1ch <= uVar6);\n                }\n            }\n            else if (0 < uVar6) {\n                do {\n                    puVar10 = arg_8h;\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d89a;\n                    uVar5 = *arg_8h;\n                    uVar13 = uVar5;\n                    puVar10 = arg_8h + 1;\n                    if (0xbf < uVar13) {\n                        uVar14 = *puVar10 & 0x3f;\n                        if ((uVar5 & 0x20) == 0) {\n                            uVar13 = (uVar13 & 0x1f) << 6 | uVar14;\n                            puVar10 = arg_8h + 2;\n                        }\n                        else if ((uVar5 & 0x10) == 0) {\n                            uVar13 = ((uVar13 & 0xf) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f;\n                            puVar10 = arg_8h + 3;\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar13 = (((uVar13 & 7) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                            puVar10 = arg_8h + 4;\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar13 = ((((uVar13 & 3) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                                     6 | arg_8h[4] & 0x3f;\n                            puVar10 = arg_8h + 5;\n                        }\n                        else {\n                            uVar13 = (((((uVar13 & 1) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f)\n                                      << 6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                            puVar10 = arg_8h + 6;\n                        }\n                    }\n                    if (uVar13 < 0x100) {\n                        uVar13 = *(uVar13 + arg_1ch_00[0xc]);\n                    }\n                    if (var_4h == uVar13) goto code_r0x0043d057;\n                    arg_1ch = arg_1ch + 1;\n                    arg_8h = puVar10;\n                } while (arg_1ch <= uVar6);\n            }\n            arg_8h = puVar10;\n            if (uVar6 != var_ch) {\n                if (var_14h != NULL) {\n                    var_8h = arg_2ch + 1;\n                    if (var_1ch != 0) {\n                        puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h\n                                              , 0, var_8h);\n                        arg_1ch = uVar6;\n                        if (puVar7 != NULL) {\n                            return puVar7;\n                        }\n                        goto code_r0x0043dd81;\n                    }\n                    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                          var_8h);\n                    arg_1ch = uVar6;\n                    if (puVar7 != NULL) {\n                        return puVar7;\n                    }\n                    goto code_r0x0043defe;\n                }\n                var_14h = puVar10;\n                if (var_1ch == 0) {\n                    for (; uVar6 < var_ch; uVar6 = uVar6 + 1) {\n                        if (arg_1ch_00[0x1b] <= arg_8h) {\n                            if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e]))\n                               && (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d16f;\n                            break;\n                        }\n                        if (var_4h == *(*arg_8h + arg_1ch_00[0xc])) break;\n                        arg_8h = arg_8h + 1;\n                    }\n                    if (var_18h == NULL) {\n                        if (puVar10 <= arg_8h) {\n                            var_8h = arg_2ch + 1;\n                            do {\n                                puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, \n                                                       arg_24h, 0, var_8h);\n                                if (puVar10 != NULL) {\n                                    return puVar10;\n                                }\n                                arg_8h = arg_8h + -1;\n                            } while (var_14h <= arg_8h);\n                        }\n                        goto code_r0x0043a164;\n                    }\n                }\n                else {\n                    for (; uVar6 < var_ch; uVar6 = uVar6 + 1) {\n                        iVar9 = 1;\n                        if (arg_1ch_00[0x1b] <= arg_8h) {\n                            if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e]))\n                               && (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d16f;\n                            break;\n                        }\n                        uVar5 = *arg_8h;\n                        uVar13 = uVar5;\n                        if (0xbf < uVar13) {\n                            uVar14 = arg_8h[1] & 0x3f;\n                            if ((uVar5 & 0x20) == 0) {\n                                uVar13 = (uVar13 & 0x1f) << 6 | uVar14;\n                                iVar9 = 2;\n                            }\n                            else if ((uVar5 & 0x10) == 0) {\n                                uVar13 = arg_8h[2] & 0x3f | (uVar14 | (uVar13 & 0xf) << 6) << 6;\n                                iVar9 = 3;\n                            }\n                            else if ((uVar5 & 8) == 0) {\n                                uVar13 = arg_8h[3] & 0x3f | ((uVar14 | (uVar13 & 7) << 6) << 6 | arg_8h[2] & 0x3f) << 6;\n                                iVar9 = 4;\n                            }\n                            else if ((uVar5 & 4) == 0) {\n                                uVar13 = arg_8h[4] & 0x3f |\n                                         (((uVar14 | (uVar13 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f\n                                         ) << 6;\n                                iVar9 = 5;\n                            }\n                            else {\n                                uVar13 = arg_8h[5] & 0x3f |\n                                         ((((uVar14 | (uVar13 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                          arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f) << 6;\n                                iVar9 = 6;\n                            }\n                        }\n                        if (uVar13 < 0x100) {\n                            uVar13 = *(uVar13 + arg_1ch_00[0xc]);\n                        }\n                        if (var_4h == uVar13) break;\n                        arg_8h = arg_8h + iVar9;\n                    }\n                    if (var_18h == NULL) {\n                        var_8h = arg_2ch + 1;\n                        puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h\n                                               , 0, var_8h);\n                        if (puVar10 != NULL) {\n                            return puVar10;\n                        }\n                        while (arg_8h != var_14h) {\n                            uVar5 = arg_8h[-1];\n                            arg_8h = arg_8h + -1;\n                            while ((uVar5 & 0xc0) == 0x80) {\n                                puVar10 = arg_8h + -1;\n                                arg_8h = arg_8h + -1;\n                                uVar5 = *puVar10;\n                            }\n                            puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, \n                                                   arg_24h, 0, var_8h);\n                            if (puVar10 != NULL) {\n                                return puVar10;\n                            }\n                        }\ncode_r0x0043a164:\n                        arg_1ch_00[0x27] = arg_14h;\n                        return NULL;\n                    }\n                }\n            }\n        }\n        goto code_r0x00436fae;\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n        var_ch = *(var_4h + 0x485ebf);\n        var_14h = var_4h - 0x39 & 1;\n        var_8h = *(var_4h + 0x485eb7);\n        puVar7 = puVar15 + 1;\n        if (var_ch == 0) goto code_r0x0043a621;\n        goto code_r0x0043a629;\n    case 0x3f:\n    case 0x40:\n        var_ch = CONCAT11(puVar15[1], puVar15[2]);\n        var_8h = 0;\n        var_14h = *puVar15 == 0x40;\n        puVar7 = puVar15 + 3;\n        goto code_r0x0043a629;\n    case 0x41:\n        var_ch = CONCAT11(puVar15[1], puVar15[2]);\n        var_14h = 0x1;\n        puVar7 = puVar15 + 3;\n        var_8h = var_ch;\n        goto code_r0x0043a629;\n    case 0x42:\n        var_18h = 0x1;\n        var_8h = 0;\n        goto code_r0x0043a621;\n    case 0x43:\n        var_18h = 0x1;\n        var_8h = 1;\ncode_r0x0043a621:\n        puVar7 = puVar15 + 1;\n        var_ch = 0x7fffffff;\n        goto code_r0x0043a629;\n    case 0x44:\n        var_ch = 1;\n        var_18h = 0x1;\n        var_8h = 0;\n        puVar7 = puVar15 + 1;\n        goto code_r0x0043a629;\n    case 0x45:\n        var_ch = CONCAT11(puVar15[1], puVar15[2]);\n        var_18h = 0x1;\n        var_8h = 0;\n        puVar7 = puVar15 + 3;\ncode_r0x0043a629:\n        var_10h = *puVar7;\n        puVar15 = puVar7 + 1;\n        uVar6 = var_8h;\n        uVar13 = var_ch;\n        if (0 < var_8h) {\n            if (var_1ch == 0) {\n    // switch table (16 cases) at 0x43ea22\n                switch(var_10h + -6) {\n                case NULL:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n                            uVar5 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            if ((*(uVar5 + arg_1ch_00[0xd]) & 4) != 0) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x1:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n                            uVar5 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            if ((*(uVar5 + arg_1ch_00[0xd]) & 4) == 0) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x2:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n                            uVar5 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            if ((*(uVar5 + arg_1ch_00[0xd]) & 1) != 0) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x3:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n                            uVar5 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            if ((*(uVar5 + arg_1ch_00[0xd]) & 1) == 0) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x4:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n                            uVar5 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            if ((*(uVar5 + arg_1ch_00[0xd]) & 0x10) != 0) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x5:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n                            uVar5 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            if ((*(uVar5 + arg_1ch_00[0xd]) & 0x10) == 0) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x6:\n                    if (0 < var_8h) {\n                        arg_1ch = 0x1;\n                        do {\n                            arg_8h = puVar10;\n                            if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d2eb;\n                            if (arg_1ch_00[6] == 0) {\n                                if (((puVar10 <= arg_1ch_00[0x1b] - arg_1ch_00[7]) && (*puVar10 == *(arg_1ch_00 + 0xb)))\n                                   && ((arg_1ch_00[7] == 1 || (puVar10[1] == *(arg_1ch_00 + 0x2d)))))\n                                goto code_r0x0043ce34;\n                            }\n                            else {\n                                iVar9 = fcn.0042efe8(puVar10, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, 0);\n                                uVar6 = var_8h;\n                                uVar13 = var_ch;\n                                if (iVar9 != 0) goto code_r0x0043ce34;\n                            }\n                            arg_1ch = arg_1ch + 1;\n                            puVar10 = puVar10 + 1;\n                        } while (arg_1ch <= uVar6);\n                    }\n                    break;\n                case 0x7:\n                    if (arg_1ch_00[0x1b] - var_8h < arg_8h) goto code_r0x0043d2eb;\n                    puVar10 = arg_8h + var_8h;\n                    break;\n                case 0x8:\n                    if (arg_1ch_00[0x1b] - var_8h < arg_8h) goto code_r0x0043d89a;\n                    puVar10 = arg_8h + var_8h;\n                    break;\n                default:\n                    goto code_r0x0043e183;\n                case 0xb:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d324;\n                            puVar10 = arg_8h + 1;\n    // switch table (124 cases) at 0x43ea62\n                            switch(*arg_8h) {\n                            case 10:\n                                break;\n                            case 0xb:\n                            case 0xc:\n                            case 0x85:\n                                if (arg_1ch_00[0x18] != 0) goto code_r0x0043d2b3;\n                                break;\n                            case 0xd:\n                                if ((puVar10 < arg_1ch_00[0x1b]) && (*puVar10 == 10)) {\n                                    puVar10 = arg_8h + 2;\n                                }\n                                break;\n                            default:\n                                goto code_r0x0043d057;\n                            }\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0xc:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            puVar10 = arg_8h;\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d89a;\n                            uVar5 = *arg_8h;\n                            puVar10 = arg_8h + 1;\n                            if (((uVar5 == 9) || (uVar5 == 0x20)) || (uVar5 == 0xa0)) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0xd:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            puVar10 = arg_8h;\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d89a;\n                            uVar5 = *arg_8h;\n                            puVar10 = arg_8h + 1;\n                            if (((uVar5 != 9) && (uVar5 != 0x20)) && (uVar5 != 0xa0)) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0xe:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n                            uVar5 = *puVar10;\n                            puVar10 = puVar10 + 1;\n                            if ((9 < uVar5) && ((uVar5 < 0xe || (uVar5 == 0x85)))) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0xf:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            puVar10 = arg_8h;\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d89a;\n                            uVar5 = *arg_8h;\n                            puVar10 = arg_8h + 1;\n                            if ((uVar5 < 10) || ((0xd < uVar5 && (uVar5 != 0x85)))) goto code_r0x0043d057;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                }\n            }\n            else {\n    // switch table (16 cases) at 0x43e9e2\n                switch(var_10h + -6) {\n                case NULL:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            uVar5 = *arg_8h;\n                            var_4h = uVar5;\n                            puVar10 = arg_8h + 1;\n                            if (0xbf < var_4h) {\n                                uVar14 = *puVar10 & 0x3f;\n                                if ((uVar5 & 0x20) == 0) {\n                                    var_4h = (var_4h & 0x1f) << 6 | uVar14;\n                                    puVar10 = arg_8h + 2;\n                                }\n                                else if ((uVar5 & 0x10) == 0) {\n                                    var_4h = ((var_4h & 0xf) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f;\n                                    puVar10 = arg_8h + 3;\n                                }\n                                else if ((uVar5 & 8) == 0) {\n                                    var_4h = (((var_4h & 7) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f;\n                                    puVar10 = arg_8h + 4;\n                                }\n                                else if ((uVar5 & 4) == 0) {\n                                    var_4h = ((((var_4h & 3) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f;\n                                    puVar10 = arg_8h + 5;\n                                }\n                                else {\n                                    var_4h = (((((var_4h & 1) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                              arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                                    puVar10 = arg_8h + 6;\n                                }\n                            }\n                            if ((var_4h < 0x80) && ((*(var_4h + arg_1ch_00[0xd]) & 4) != 0)) goto code_r0x0043ce34;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x1:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            if ((0x7f < *arg_8h) || (puVar10 = arg_8h + 1,  (*(*arg_8h + arg_1ch_00[0xd]) & 4) == 0))\n                            goto code_r0x0043ce34;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x2:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            if ((*arg_8h < 0x80) && ((*(*arg_8h + arg_1ch_00[0xd]) & 1) != 0)) goto code_r0x0043ce34;\n                            do {\n                                puVar10 = arg_8h + 1;\n                                arg_8h = puVar10;\n                                if (arg_1ch_00[0x1b] <= puVar10) break;\n                            } while ((*puVar10 & 0xc0) == 0x80);\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x3:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            if ((0x7f < *arg_8h) || (puVar10 = arg_8h + 1,  (*(*arg_8h + arg_1ch_00[0xd]) & 1) == 0))\n                            goto code_r0x0043ce34;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x4:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            if ((*arg_8h < 0x80) && ((*(*arg_8h + arg_1ch_00[0xd]) & 0x10) != 0)) goto code_r0x0043ce34;\n                            do {\n                                puVar10 = arg_8h + 1;\n                                arg_8h = puVar10;\n                                if (arg_1ch_00[0x1b] <= puVar10) break;\n                            } while ((*puVar10 & 0xc0) == 0x80);\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x5:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            if ((0x7f < *arg_8h) || (puVar10 = arg_8h + 1,  (*(*arg_8h + arg_1ch_00[0xd]) & 0x10) == 0))\n                            goto code_r0x0043ce34;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x6:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n                            if (arg_1ch_00[6] == 0) {\n                                if (((puVar10 <= arg_1ch_00[0x1b] - arg_1ch_00[7]) && (*puVar10 == *(arg_1ch_00 + 0xb)))\n                                   && ((arg_1ch_00[7] == 1 || (puVar10[1] == *(arg_1ch_00 + 0x2d)))))\n                                goto code_r0x0043d057;\n                            }\n                            else {\n                                iVar9 = fcn.0042efe8(puVar10, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, var_1ch);\n                                uVar6 = var_8h;\n                                uVar13 = var_ch;\n                                if (iVar9 != 0) goto code_r0x0043d057;\n                            }\n                            puVar10 = puVar10 + 1;\n                            if (puVar10 < arg_1ch_00[0x1b]) {\n                                do {\n                                    if ((*puVar10 & 0xc0) != 0x80) break;\n                                    puVar10 = puVar10 + 1;\n                                } while (puVar10 < arg_1ch_00[0x1b]);\n                            }\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch <= uVar6);\n                    }\n                    break;\n                case 0x7:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            puVar10 = arg_8h;\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d89a;\n                            puVar10 = arg_8h + 1;\n                            if (puVar10 < arg_1ch_00[0x1b]) {\n                                do {\n                                    if ((*puVar10 & 0xc0) != 0x80) break;\n                                    puVar10 = puVar10 + 1;\n                                } while (puVar10 < arg_1ch_00[0x1b]);\n                            }\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0x8:\n                    if (arg_1ch_00[0x1b] - var_8h < arg_8h) goto code_r0x0043d057;\n                    puVar10 = arg_8h + var_8h;\n                    break;\n                default:\n                    goto code_r0x0043e183;\n                case 0xb:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            puVar10 = arg_8h;\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d89a;\n                            uVar5 = *arg_8h;\n                            var_4h = uVar5;\n                            puVar10 = arg_8h + 1;\n                            if (0xbf < var_4h) {\n                                uVar14 = *puVar10 & 0x3f;\n                                if ((uVar5 & 0x20) == 0) {\n                                    var_4h = (var_4h & 0x1f) << 6 | uVar14;\n                                    puVar10 = arg_8h + 2;\n                                }\n                                else if ((uVar5 & 0x10) == 0) {\n                                    var_4h = ((var_4h & 0xf) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f;\n                                    puVar10 = arg_8h + 3;\n                                }\n                                else if ((uVar5 & 8) == 0) {\n                                    var_4h = (((var_4h & 7) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f;\n                                    puVar10 = arg_8h + 4;\n                                }\n                                else if ((uVar5 & 4) == 0) {\n                                    var_4h = ((((var_4h & 3) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f;\n                                    puVar10 = arg_8h + 5;\n                                }\n                                else {\n                                    var_4h = (((((var_4h & 1) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                              arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                                    puVar10 = arg_8h + 6;\n                                }\n                            }\n                            if (var_4h < 0xe) {\n                                if (var_4h == 0xd) {\n                                    if ((puVar10 < arg_1ch_00[0x1b]) && (*puVar10 == 10)) {\n                                        puVar10 = puVar10 + 1;\n                                    }\n                                }\n                                else if (var_4h != 10) {\n                                    if (var_4h - 0xb < 2) goto code_r0x0043a888;\n                                    goto code_r0x0043d057;\n                                }\n                            }\n                            else {\n                                if ((var_4h != 0x85) && (1 < var_4h - 0x2028)) goto code_r0x0043d057;\ncode_r0x0043a888:\n                                if (arg_1ch_00[0x18] != 0) goto code_r0x0043ce34;\n                            }\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0xc:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            uVar5 = *arg_8h;\n                            var_4h = uVar5;\n                            puVar10 = arg_8h + 1;\n                            if (0xbf < var_4h) {\n                                uVar14 = *puVar10 & 0x3f;\n                                if ((uVar5 & 0x20) == 0) {\n                                    var_4h = (var_4h & 0x1f) << 6 | uVar14;\n                                    puVar10 = arg_8h + 2;\n                                }\n                                else if ((uVar5 & 0x10) == 0) {\n                                    var_4h = ((var_4h & 0xf) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f;\n                                    puVar10 = arg_8h + 3;\n                                }\n                                else if ((uVar5 & 8) == 0) {\n                                    var_4h = (((var_4h & 7) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f;\n                                    puVar10 = arg_8h + 4;\n                                }\n                                else if ((uVar5 & 4) == 0) {\n                                    var_4h = ((((var_4h & 3) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f;\n                                    puVar10 = arg_8h + 5;\n                                }\n                                else {\n                                    var_4h = (((((var_4h & 1) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                              arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                                    puVar10 = arg_8h + 6;\n                                }\n                            }\n                            if (var_4h < 0x180f) {\n                                if (var_4h == 0x180e) goto code_r0x0043ce34;\n                                if (var_4h < 0xa1) {\n                                    if (((var_4h == 0xa0) || (var_4h == 9)) || (var_4h == 0x20)) goto code_r0x0043ce34;\n                                }\n                                else if (var_4h == 0x1680) goto code_r0x0043ce34;\n                            }\n                            else if (var_4h < 0x2060) {\n                                if ((var_4h == 0x205f) ||\n                                   ((0x1fff < var_4h && ((var_4h < 0x200b || (var_4h == 0x202f))))))\n                                goto code_r0x0043ce34;\n                            }\n                            else if (var_4h == 0x3000) goto code_r0x0043ce34;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0xd:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            uVar5 = *arg_8h;\n                            var_4h = uVar5;\n                            puVar10 = arg_8h + 1;\n                            if (0xbf < var_4h) {\n                                uVar14 = *puVar10 & 0x3f;\n                                if ((uVar5 & 0x20) == 0) {\n                                    var_4h = (var_4h & 0x1f) << 6 | uVar14;\n                                    puVar10 = arg_8h + 2;\n                                }\n                                else if ((uVar5 & 0x10) == 0) {\n                                    var_4h = ((var_4h & 0xf) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f;\n                                    puVar10 = arg_8h + 3;\n                                }\n                                else if ((uVar5 & 8) == 0) {\n                                    var_4h = (((var_4h & 7) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f;\n                                    puVar10 = arg_8h + 4;\n                                }\n                                else if ((uVar5 & 4) == 0) {\n                                    var_4h = ((((var_4h & 3) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f;\n                                    puVar10 = arg_8h + 5;\n                                }\n                                else {\n                                    var_4h = (((((var_4h & 1) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                              arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                                    puVar10 = arg_8h + 6;\n                                }\n                            }\n                            if (var_4h < 0x180f) {\n                                if (var_4h != 0x180e) {\n                                    if (var_4h < 0xa1) {\n                                        if (((var_4h != 0xa0) && (var_4h != 9)) && (var_4h != 0x20))\n                                        goto code_r0x0043ce34;\n                                    }\n                                    else if (var_4h != 0x1680) goto code_r0x0043ce34;\n                                }\n                            }\n                            else if (var_4h < 0x2060) {\n                                if ((var_4h != 0x205f) &&\n                                   ((var_4h < 0x2000 || ((0x200a < var_4h && (var_4h != 0x202f))))))\n                                goto code_r0x0043ce34;\n                            }\n                            else if (var_4h != 0x3000) goto code_r0x0043ce34;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0xe:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            uVar5 = *arg_8h;\n                            var_4h = uVar5;\n                            puVar10 = arg_8h + 1;\n                            if (0xbf < var_4h) {\n                                uVar14 = *puVar10 & 0x3f;\n                                if ((uVar5 & 0x20) == 0) {\n                                    var_4h = (var_4h & 0x1f) << 6 | uVar14;\n                                    puVar10 = arg_8h + 2;\n                                }\n                                else if ((uVar5 & 0x10) == 0) {\n                                    var_4h = ((var_4h & 0xf) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f;\n                                    puVar10 = arg_8h + 3;\n                                }\n                                else if ((uVar5 & 8) == 0) {\n                                    var_4h = (((var_4h & 7) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f;\n                                    puVar10 = arg_8h + 4;\n                                }\n                                else if ((uVar5 & 4) == 0) {\n                                    var_4h = ((((var_4h & 3) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f;\n                                    puVar10 = arg_8h + 5;\n                                }\n                                else {\n                                    var_4h = (((((var_4h & 1) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                              arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                                    puVar10 = arg_8h + 6;\n                                }\n                            }\n                            if (var_4h < 0x86) {\n                                if ((var_4h == 0x85) || ((9 < var_4h && (var_4h < 0xe)))) goto code_r0x0043ce34;\n                            }\n                            else if ((0x2027 < var_4h) && (var_4h < 0x202a)) goto code_r0x0043ce34;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                    break;\n                case 0xf:\n                    arg_1ch = 0x1;\n                    if (0 < var_8h) {\n                        do {\n                            if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d2eb;\n                            uVar5 = *arg_8h;\n                            var_4h = uVar5;\n                            puVar10 = arg_8h + 1;\n                            if (0xbf < var_4h) {\n                                uVar14 = *puVar10 & 0x3f;\n                                if ((uVar5 & 0x20) == 0) {\n                                    var_4h = (var_4h & 0x1f) << 6 | uVar14;\n                                    puVar10 = arg_8h + 2;\n                                }\n                                else if ((uVar5 & 0x10) == 0) {\n                                    var_4h = ((var_4h & 0xf) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f;\n                                    puVar10 = arg_8h + 3;\n                                }\n                                else if ((uVar5 & 8) == 0) {\n                                    var_4h = (((var_4h & 7) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f;\n                                    puVar10 = arg_8h + 4;\n                                }\n                                else if ((uVar5 & 4) == 0) {\n                                    var_4h = ((((var_4h & 3) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                             arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f;\n                                    puVar10 = arg_8h + 5;\n                                }\n                                else {\n                                    var_4h = (((((var_4h & 1) << 6 | uVar14) << 6 | arg_8h[2] & 0x3f) << 6 |\n                                              arg_8h[3] & 0x3f) << 6 | arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n                                    puVar10 = arg_8h + 6;\n                                }\n                            }\n                            if (var_4h < 0x86) {\n                                if ((var_4h != 0x85) && (3 < var_4h - 10)) goto code_r0x0043ce34;\n                            }\n                            else if (1 < var_4h - 0x2028) goto code_r0x0043ce34;\n                            arg_1ch = arg_1ch + 1;\n                            arg_8h = puVar10;\n                        } while (arg_1ch <= var_8h);\n                    }\n                }\n            }\n        }\n        arg_8h = puVar10;\n        if (uVar6 == uVar13) goto code_r0x00436fae;\n        if (var_14h != NULL) {\n            if (var_1ch != 0) {\n                arg_1ch = var_8h;\n                var_8h = arg_2ch + 1;\n                puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                      var_8h);\n                if (puVar7 != NULL) {\n                    return puVar7;\n                }\n                goto code_r0x0043e1d0;\n            }\n            arg_1ch = var_8h;\n            var_8h = arg_2ch + 1;\n            puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                  arg_2ch + 1);\n            if (puVar7 != NULL) {\n                return puVar7;\n            }\n            goto code_r0x0043e62e;\n        }\n        puVar8 = var_10h + -6;\n        arg_1ch = uVar6;\n        var_14h = puVar10;\n        if (var_1ch == 0) {\n            if (0xf < puVar8) {\n                return 0xfffffff2;\n            }\n    // switch table (16 cases) at 0x43eb2e\n            switch(*(puVar8 * 4 + 0x43eb2e)) {\n            case 0x43c398:\n                if (uVar6 < uVar13) {\n                    do {\n                        if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c408;\n                        if (arg_1ch_00[6] == 0) {\n                            if (((arg_8h <= arg_1ch_00[0x1b] - arg_1ch_00[7]) && (*arg_8h == *(arg_1ch_00 + 0xb))) &&\n                               ((arg_1ch_00[7] == 1 || (arg_8h[1] == *(arg_1ch_00 + 0x2d))))) break;\n                        }\n                        else {\n                            iVar9 = fcn.0042efe8(arg_8h, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, 0);\n                            uVar13 = var_ch;\n                            if (iVar9 != 0) break;\n                        }\n                        arg_1ch = arg_1ch + 1;\n                        arg_8h = arg_8h + 1;\n                    } while (arg_1ch < uVar13);\n                }\n                break;\n            case 0x43c431:\n                if (arg_1ch_00[0x1b] - puVar10 < uVar13 - uVar6) {\n                    arg_8h = arg_1ch_00[0x1b];\ncode_r0x0043c43f:\n                    if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n                       (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d16f;\n                }\n                else {\n                    arg_8h = puVar10 + (uVar13 - uVar6);\n                }\n                break;\n            case 0x43c46f:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c4cb;\n                    uVar5 = *arg_8h;\n                    if (uVar5 == 0xd) {\n                        arg_8h = arg_8h + 1;\n                        if (arg_1ch_00[0x1b] <= arg_8h) break;\n                        if (*arg_8h == 10) goto code_r0x0043c4c0;\n                    }\n                    else {\n                        if ((uVar5 != 10) &&\n                           ((arg_1ch_00[0x18] != 0 || (((uVar5 != 0xb && (uVar5 != 0xc)) && (uVar5 != 0x85)))))) break;\ncode_r0x0043c4c0:\n                        arg_8h = arg_8h + 1;\n                    }\n                }\n                break;\n            case 0x43c4f4:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c408;\n                    uVar5 = *arg_8h;\n                    if (((uVar5 == 9) || (uVar5 == 0x20)) || (uVar5 == 0xa0)) break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43c532:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c43f;\n                    uVar5 = *arg_8h;\n                    if (((uVar5 != 9) && (uVar5 != 0x20)) && (uVar5 != 0xa0)) break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43c56a:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c4cb;\n                    uVar5 = *arg_8h;\n                    if (((uVar5 == 10) || (uVar5 == 0xb)) || ((uVar5 == 0xc || ((uVar5 == 0xd || (uVar5 == 0x85))))))\n                    break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43c5b8:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c408;\n                    uVar5 = *arg_8h;\n                    if ((((uVar5 != 10) && (uVar5 != 0xb)) && (uVar5 != 0xc)) && ((uVar5 != 0xd && (uVar5 != 0x85))))\n                    break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43c5f6:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c43f;\n                    if ((*(*arg_8h + arg_1ch_00[0xd]) & 4) != 0) break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43c62b:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c4cb;\n                    if ((*(*arg_8h + arg_1ch_00[0xd]) & 4) == 0) break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43c668:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c408;\n                    if ((*(*arg_8h + arg_1ch_00[0xd]) & 1) != 0) break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43c69d:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c43f;\n                    if ((*(*arg_8h + arg_1ch_00[0xd]) & 1) == 0) break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43c6d5:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c4cb;\n                    if ((*(*arg_8h + arg_1ch_00[0xd]) & 0x10) != 0) break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43c701:\n                for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                    if (arg_1ch_00[0x1b] <= arg_8h) {\n                        if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n                            arg_1ch_00[0x17] = 1;\n                            uVar6 = arg_1ch_00[0x1f];\n                            goto joined_r0x0043c743;\n                        }\n                        break;\n                    }\n                    if ((*(*arg_8h + arg_1ch_00[0xd]) & 0x10) == 0) break;\n                    arg_8h = arg_8h + 1;\n                }\n                break;\n            case 0x43e183:\n                goto code_r0x0043e183;\n            }\n            goto code_r0x0043c749;\n        }\n        if (0xf < puVar8) {\n            return 0xfffffff2;\n        }\n    // switch table (16 cases) at 0x43eaee\n        switch(*(puVar8 * 4 + 0x43eaee)) {\n        case 0x43b4ae:\n            if (uVar13 < 0x7fffffff) {\n                if (uVar6 < uVar13) {\n                    do {\n                        if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043b683;\n                        if (arg_1ch_00[6] == 0) {\n                            if (((arg_8h <= arg_1ch_00[0x1b] - arg_1ch_00[7]) && (*arg_8h == *(arg_1ch_00 + 0xb))) &&\n                               ((arg_1ch_00[7] == 1 || (arg_8h[1] == *(arg_1ch_00 + 0x2d))))) break;\n                        }\n                        else {\n                            iVar9 = fcn.0042efe8(arg_8h, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, var_1ch);\n                            uVar13 = var_ch;\n                            if (iVar9 != 0) break;\n                        }\n                        do {\n                            arg_8h = arg_8h + 1;\n                            if (arg_1ch_00[0x1b] <= arg_8h) break;\n                        } while ((*arg_8h & 0xc0) == 0x80);\n                        arg_1ch = arg_1ch + 1;\n                    } while (arg_1ch < uVar13);\n                }\n            }\n            else if (uVar6 < uVar13) {\n                while (arg_8h = puVar10,  puVar10 < arg_1ch_00[0x1b]) {\n                    if (arg_1ch_00[6] == 0) {\n                        if (((puVar10 <= arg_1ch_00[0x1b] - arg_1ch_00[7]) && (*puVar10 == *(arg_1ch_00 + 0xb))) &&\n                           ((arg_1ch_00[7] == 1 || (puVar10[1] == *(arg_1ch_00 + 0x2d))))) goto code_r0x0043c2f7;\n                    }\n                    else {\n                        iVar9 = fcn.0042efe8(puVar10, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, var_1ch);\n                        uVar13 = var_ch;\n                        if (iVar9 != 0) goto code_r0x0043c2f7;\n                    }\n                    do {\n                        puVar10 = puVar10 + 1;\n                        if (arg_1ch_00[0x1b] <= puVar10) break;\n                    } while ((*puVar10 & 0xc0) == 0x80);\n                    arg_1ch = arg_1ch + 1;\n                    arg_8h = puVar10;\n                    if (uVar13 <= arg_1ch) goto code_r0x0043c2f7;\n                }\n                if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= puVar10 && puVar10 != arg_1ch_00[0x1e])) {\n                    arg_1ch_00[0x17] = 1;\n                    uVar6 = arg_1ch_00[0x1f];\n                    goto joined_r0x0043b830;\n                }\n            }\n            break;\n        case 0x43b606:\n            if (uVar13 < 0x7fffffff) {\n                if (uVar6 < uVar13) {\n                    do {\n                        if (arg_1ch_00[0x1b] <= arg_8h) {\n                            if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n                                arg_1ch_00[0x17] = 1;\n                                uVar6 = arg_1ch_00[0x1f];\n                                goto joined_r0x0043c1af;\n                            }\n                            break;\n                        }\n                        do {\n                            arg_8h = arg_8h + 1;\n                            if (arg_1ch_00[0x1b] <= arg_8h) break;\n                        } while ((*arg_8h & 0xc0) == 0x80);\n                        arg_1ch = arg_1ch + 1;\n                    } while (arg_1ch < uVar13);\n                }\n            }\n            else {\n                arg_8h = arg_1ch_00[0x1b];\n            }\n            break;\n        case 0x43b675:\n            if (arg_1ch_00[0x1b] - puVar10 < uVar13 - uVar6) {\n                arg_8h = arg_1ch_00[0x1b];\ncode_r0x0043b683:\n                if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n                    arg_1ch_00[0x17] = 1;\n                    uVar6 = arg_1ch_00[0x1f];\njoined_r0x0043bb46:\n                    if (1 < uVar6) goto code_r0x0043d30f;\n                }\n            }\n            else {\n                arg_8h = puVar10 + (uVar13 - uVar6);\n            }\n            break;\n        case 0x43b6b3:\n            if (uVar6 < uVar13) {\n                while (iVar9 = 1,  arg_8h = puVar10,  puVar10 < arg_1ch_00[0x1b]) {\n                    uVar5 = *puVar10;\n                    uVar6 = uVar5;\n                    if (0xbf < uVar6) {\n                        uVar14 = puVar10[1] & 0x3f;\n                        if ((uVar5 & 0x20) == 0) {\n                            uVar6 = (uVar6 & 0x1f) << 6 | uVar14;\n                            iVar9 = 2;\n                        }\n                        else if ((uVar5 & 0x10) == 0) {\n                            uVar6 = puVar10[2] & 0x3f | (uVar14 | (uVar6 & 0xf) << 6) << 6;\n                            iVar9 = 3;\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar6 = puVar10[3] & 0x3f | ((uVar14 | (uVar6 & 7) << 6) << 6 | puVar10[2] & 0x3f) << 6;\n                            iVar9 = 4;\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar6 = puVar10[4] & 0x3f |\n                                    (((uVar14 | (uVar6 & 3) << 6) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f) <<\n                                    6;\n                            iVar9 = 5;\n                        }\n                        else {\n                            uVar6 = puVar10[5] & 0x3f |\n                                    ((((uVar14 | (uVar6 & 1) << 6) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f)\n                                     << 6 | puVar10[4] & 0x3f) << 6;\n                            iVar9 = 6;\n                        }\n                    }\n                    if (uVar6 == 0xd) {\n                        arg_8h = puVar10 + 1;\n                        if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043c2f7;\n                        if (*arg_8h == 10) {\n                            arg_8h = puVar10 + 2;\n                        }\n                    }\n                    else {\n                        if ((uVar6 != 10) &&\n                           ((arg_1ch_00[0x18] != 0 ||\n                            (((uVar6 != 0xb && (uVar6 != 0xc)) &&\n                             ((uVar6 != 0x85 && ((uVar6 != 0x2028 && (uVar6 != 0x2029)))))))))) goto code_r0x0043c2f7;\n                        arg_8h = puVar10 + iVar9;\n                    }\n                    arg_1ch = arg_1ch + 1;\n                    puVar10 = arg_8h;\n                    if (uVar13 <= arg_1ch) goto code_r0x0043c2f7;\n                }\n                if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= puVar10 && puVar10 != arg_1ch_00[0x1e])) {\n                    arg_1ch_00[0x17] = 1;\n                    uVar6 = arg_1ch_00[0x1f];\n                    goto joined_r0x0043b830;\n                }\n            }\n            break;\n        case 0x43b83b:\n            for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                var_8h = 1;\n                if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043b9bd;\n                uVar5 = *arg_8h;\n                uVar14 = uVar5;\n                if (0xbf < uVar14) {\n                    uVar12 = arg_8h[1] & 0x3f;\n                    if ((uVar5 & 0x20) == 0) {\n                        uVar14 = (uVar14 & 0x1f) << 6;\n                        var_8h = 2;\n                    }\n                    else {\n                        if ((uVar5 & 0x10) == 0) {\n                            uVar12 = uVar12 | (uVar14 & 0xf) << 6;\n                            uVar14 = arg_8h[2];\n                            var_8h = 3;\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar12 = (uVar12 | (uVar14 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                            uVar14 = arg_8h[3];\n                            var_8h = 4;\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar12 = ((uVar12 | (uVar14 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                            uVar14 = arg_8h[4];\n                            var_8h = 5;\n                        }\n                        else {\n                            uVar12 = (((uVar12 | (uVar14 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                                     6 | arg_8h[4] & 0x3f;\n                            uVar14 = arg_8h[5];\n                            var_8h = 6;\n                        }\n                        uVar12 = uVar12 << 6;\n                        uVar14 = uVar14 & 0x3f;\n                    }\n                    uVar14 = uVar14 | uVar12;\n                }\n                if (uVar14 < 0x180f) {\n                    if (uVar14 != 0x180e) {\n                        if (uVar14 < 0xa1) {\n                            if (((uVar14 != 0xa0) && (uVar14 != 9)) && (uVar14 != 0x20)) goto code_r0x0043b9b9;\n                        }\n                        else if (uVar14 != 0x1680) {\n                            bVar16 = false;\n                            goto code_r0x0043b957;\n                        }\n                    }\ncode_r0x0043b952:\n                    bVar16 = true;\n                }\n                else {\n                    if (uVar14 < 0x2060) {\n                        if (uVar14 != 0x205f) {\n                            if (uVar14 < 0x2000) goto code_r0x0043b9b9;\n                            if ((0x200a < uVar14) && (uVar14 != 0x202f)) {\n                                bVar16 = false;\n                                goto code_r0x0043b957;\n                            }\n                        }\n                        goto code_r0x0043b952;\n                    }\n                    if (uVar14 == 0x3000) goto code_r0x0043b952;\ncode_r0x0043b9b9:\n                    bVar16 = false;\n                }\ncode_r0x0043b957:\n                if (bVar16 == (var_10h == 0x12)) break;\n                arg_8h = arg_8h + var_8h;\n            }\n            break;\n        case 0x43b9e1:\n            for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                var_8h = 1;\n                if (arg_1ch_00[0x1b] <= arg_8h) {\n                    if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n                        arg_1ch_00[0x17] = 1;\n                        uVar6 = arg_1ch_00[0x1f];\n                        goto joined_r0x0043bb46;\n                    }\n                    break;\n                }\n                uVar5 = *arg_8h;\n                uVar14 = uVar5;\n                if (0xbf < uVar14) {\n                    uVar12 = arg_8h[1] & 0x3f;\n                    if ((uVar5 & 0x20) == 0) {\n                        uVar14 = (uVar14 & 0x1f) << 6;\n                        var_8h = 2;\n                    }\n                    else {\n                        if ((uVar5 & 0x10) == 0) {\n                            uVar12 = uVar12 | (uVar14 & 0xf) << 6;\n                            uVar14 = arg_8h[2];\n                            var_8h = 3;\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar12 = (uVar12 | (uVar14 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                            uVar14 = arg_8h[3];\n                            var_8h = 4;\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar12 = ((uVar12 | (uVar14 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                            uVar14 = arg_8h[4];\n                            var_8h = 5;\n                        }\n                        else {\n                            uVar12 = (((uVar12 | (uVar14 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                                     6 | arg_8h[4] & 0x3f;\n                            uVar14 = arg_8h[5];\n                            var_8h = 6;\n                        }\n                        uVar12 = uVar12 << 6;\n                        uVar14 = uVar14 & 0x3f;\n                    }\n                    uVar14 = uVar14 | uVar12;\n                }\n                if (uVar14 < 0x86) {\n                    if ((uVar14 == 0x85) || ((9 < uVar14 && (uVar14 < 0xe)))) goto code_r0x0043bb26;\ncode_r0x0043baec:\n                    bVar16 = false;\n                }\n                else {\n                    if (1 < uVar14 - 0x2028) goto code_r0x0043baec;\ncode_r0x0043bb26:\n                    bVar16 = true;\n                }\n                if (bVar16 == (var_10h == 0x14)) break;\n                arg_8h = arg_8h + var_8h;\n            }\n            break;\n        case 0x43bb51:\njoined_r0x0043bb56:\n            if (uVar6 < uVar13) {\n                var_10h = 0x1;\n                if (arg_8h < arg_1ch_00[0x1b]) {\n                    uVar5 = *arg_8h;\n                    uVar14 = uVar5;\n                    if (0xbf < uVar14) {\n                        uVar12 = arg_8h[1] & 0x3f;\n                        if ((uVar5 & 0x20) == 0) {\n                            uVar14 = (uVar14 & 0x1f) << 6;\n                            var_10h = 0x2;\n                        }\n                        else {\n                            if ((uVar5 & 0x10) == 0) {\n                                uVar12 = uVar12 | (uVar14 & 0xf) << 6;\n                                uVar14 = arg_8h[2];\n                                var_10h = 0x3;\n                            }\n                            else if ((uVar5 & 8) == 0) {\n                                uVar12 = (uVar12 | (uVar14 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                                uVar14 = arg_8h[3];\n                                var_10h = 0x4;\n                            }\n                            else if ((uVar5 & 4) == 0) {\n                                uVar12 = ((uVar12 | (uVar14 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                                uVar14 = arg_8h[4];\n                                var_10h = 0x5;\n                            }\n                            else {\n                                uVar12 = (((uVar12 | (uVar14 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f\n                                         ) << 6 | arg_8h[4] & 0x3f;\n                                uVar14 = arg_8h[5];\n                                var_10h = 0x6;\n                            }\n                            uVar12 = uVar12 << 6;\n                            uVar14 = uVar14 & 0x3f;\n                        }\n                        uVar14 = uVar14 | uVar12;\n                    }\n                    if ((0xff < uVar14) || ((*(uVar14 + arg_1ch_00[0xd]) & 4) == 0)) goto code_r0x0043bc5f;\n                }\n                else if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n                    arg_1ch_00[0x17] = 1;\n                    uVar6 = arg_1ch_00[0x1f];\njoined_r0x0043c064:\n                    var_10h = 0x1;\n                    puVar10 = arg_8h;\njoined_r0x0043b830:\n                    arg_8h = puVar10;\n                    if (1 < uVar6) goto code_r0x0043d16f;\n                }\n            }\n            break;\n        case 0x43bc9a:\n            for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                var_10h = 0x1;\n                if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043b9bd;\n                uVar5 = *arg_8h;\n                uVar14 = uVar5;\n                if (0xbf < uVar14) {\n                    uVar12 = arg_8h[1] & 0x3f;\n                    if ((uVar5 & 0x20) == 0) {\n                        uVar14 = (uVar14 & 0x1f) << 6;\n                        var_10h = 0x2;\n                    }\n                    else {\n                        if ((uVar5 & 0x10) == 0) {\n                            uVar12 = uVar12 | (uVar14 & 0xf) << 6;\n                            uVar14 = arg_8h[2];\n                            var_10h = 0x3;\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar12 = (uVar12 | (uVar14 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                            uVar14 = arg_8h[3];\n                            var_10h = 0x4;\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar12 = ((uVar12 | (uVar14 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                            uVar14 = arg_8h[4];\n                            var_10h = 0x5;\n                        }\n                        else {\n                            uVar12 = (((uVar12 | (uVar14 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                                     6 | arg_8h[4] & 0x3f;\n                            uVar14 = arg_8h[5];\n                            var_10h = 0x6;\n                        }\n                        uVar12 = uVar12 << 6;\n                        uVar14 = uVar14 & 0x3f;\n                    }\n                    uVar14 = uVar14 | uVar12;\n                }\n                if ((0xff < uVar14) || ((*(uVar14 + arg_1ch_00[0xd]) & 4) == 0)) break;\n                arg_8h = arg_8h + var_10h;\n            }\n            break;\n        case 0x43bdcb:\n            for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                var_10h = 0x1;\n                if (arg_1ch_00[0x1b] <= arg_8h) {\n                    if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n                        arg_1ch_00[0x17] = 1;\n                        uVar6 = arg_1ch_00[0x1f];\n                        goto joined_r0x0043bb46;\n                    }\n                    break;\n                }\n                uVar5 = *arg_8h;\n                uVar14 = uVar5;\n                if (0xbf < uVar14) {\n                    uVar12 = arg_8h[1] & 0x3f;\n                    if ((uVar5 & 0x20) == 0) {\n                        uVar14 = (uVar14 & 0x1f) << 6;\n                        var_10h = 0x2;\n                    }\n                    else {\n                        if ((uVar5 & 0x10) == 0) {\n                            uVar12 = uVar12 | (uVar14 & 0xf) << 6;\n                            uVar14 = arg_8h[2];\n                            var_10h = 0x3;\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar12 = (uVar12 | (uVar14 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                            uVar14 = arg_8h[3];\n                            var_10h = 0x4;\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar12 = ((uVar12 | (uVar14 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                            uVar14 = arg_8h[4];\n                            var_10h = 0x5;\n                        }\n                        else {\n                            uVar12 = (((uVar12 | (uVar14 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                                     6 | arg_8h[4] & 0x3f;\n                            uVar14 = arg_8h[5];\n                            var_10h = 0x6;\n                        }\n                        uVar12 = uVar12 << 6;\n                        uVar14 = uVar14 & 0x3f;\n                    }\n                    uVar14 = uVar14 | uVar12;\n                }\n                if ((uVar14 < 0x100) && ((*(uVar14 + arg_1ch_00[0xd]) & 1) != 0)) break;\n                arg_8h = arg_8h + var_10h;\n            }\n            break;\n        case 0x43bf1a:\n            if (uVar6 < uVar13) {\n                while (var_10h = 0x1,  arg_8h < arg_1ch_00[0x1b]) {\n                    uVar5 = *arg_8h;\n                    uVar6 = uVar5;\n                    if (0xbf < uVar6) {\n                        uVar14 = arg_8h[1] & 0x3f;\n                        if ((uVar5 & 0x20) == 0) {\n                            uVar6 = (uVar6 & 0x1f) << 6;\n                            var_10h = 0x2;\n                        }\n                        else {\n                            if ((uVar5 & 0x10) == 0) {\n                                uVar14 = uVar14 | (uVar6 & 0xf) << 6;\n                                uVar6 = arg_8h[2];\n                                var_10h = 0x3;\n                            }\n                            else if ((uVar5 & 8) == 0) {\n                                uVar14 = (uVar14 | (uVar6 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                                uVar6 = arg_8h[3];\n                                var_10h = 0x4;\n                            }\n                            else if ((uVar5 & 4) == 0) {\n                                uVar14 = ((uVar14 | (uVar6 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                                uVar6 = arg_8h[4];\n                                var_10h = 0x5;\n                            }\n                            else {\n                                uVar14 = (((uVar14 | (uVar6 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f)\n                                         << 6 | arg_8h[4] & 0x3f;\n                                uVar6 = arg_8h[5];\n                                var_10h = 0x6;\n                            }\n                            uVar14 = uVar14 << 6;\n                            uVar6 = uVar6 & 0x3f;\n                        }\n                        uVar6 = uVar6 | uVar14;\n                    }\n                    if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 1) == 0)) goto code_r0x0043c2f7;\n                    arg_8h = arg_8h + var_10h;\n                    arg_1ch = arg_1ch + 1;\n                    if (uVar13 <= arg_1ch) goto code_r0x0043c2f7;\n                }\n                if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n                    arg_1ch_00[0x17] = 1;\n                    uVar6 = arg_1ch_00[0x1f];\n                    goto joined_r0x0043c064;\n                }\n            }\n            break;\n        case 0x43c06f:\n            for (; uVar6 < uVar13; uVar6 = uVar6 + 1) {\n                var_10h = 0x1;\n                if (arg_1ch_00[0x1b] <= arg_8h) {\n                    if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n                        arg_1ch_00[0x17] = 1;\n                        uVar6 = arg_1ch_00[0x1f];\n                        goto joined_r0x0043c1af;\n                    }\n                    break;\n                }\n                uVar5 = *arg_8h;\n                uVar14 = uVar5;\n                if (0xbf < uVar14) {\n                    uVar12 = arg_8h[1] & 0x3f;\n                    if ((uVar5 & 0x20) == 0) {\n                        uVar14 = (uVar14 & 0x1f) << 6;\n                        var_10h = 0x2;\n                    }\n                    else {\n                        if ((uVar5 & 0x10) == 0) {\n                            uVar12 = uVar12 | (uVar14 & 0xf) << 6;\n                            uVar14 = arg_8h[2];\n                            var_10h = 0x3;\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar12 = (uVar12 | (uVar14 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                            uVar14 = arg_8h[3];\n                            var_10h = 0x4;\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar12 = ((uVar12 | (uVar14 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                            uVar14 = arg_8h[4];\n                            var_10h = 0x5;\n                        }\n                        else {\n                            uVar12 = (((uVar12 | (uVar14 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                                     6 | arg_8h[4] & 0x3f;\n                            uVar14 = arg_8h[5];\n                            var_10h = 0x6;\n                        }\n                        uVar12 = uVar12 << 6;\n                        uVar14 = uVar14 & 0x3f;\n                    }\n                    uVar14 = uVar14 | uVar12;\n                }\n                if ((uVar14 < 0x100) && ((*(uVar14 + arg_1ch_00[0xd]) & 0x10) != 0)) break;\n                arg_8h = arg_8h + var_10h;\n            }\n            break;\n        case 0x43c1ba:\n            if (uVar6 < uVar13) {\n                while (var_10h = 0x1,  arg_8h < arg_1ch_00[0x1b]) {\n                    uVar5 = *arg_8h;\n                    uVar6 = uVar5;\n                    if (0xbf < uVar6) {\n                        uVar14 = arg_8h[1] & 0x3f;\n                        if ((uVar5 & 0x20) == 0) {\n                            uVar6 = (uVar6 & 0x1f) << 6;\n                            var_10h = 0x2;\n                        }\n                        else {\n                            if ((uVar5 & 0x10) == 0) {\n                                uVar14 = uVar14 | (uVar6 & 0xf) << 6;\n                                uVar6 = arg_8h[2];\n                                var_10h = 0x3;\n                            }\n                            else if ((uVar5 & 8) == 0) {\n                                uVar14 = (uVar14 | (uVar6 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                                uVar6 = arg_8h[3];\n                                var_10h = 0x4;\n                            }\n                            else if ((uVar5 & 4) == 0) {\n                                uVar14 = ((uVar14 | (uVar6 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                                uVar6 = arg_8h[4];\n                                var_10h = 0x5;\n                            }\n                            else {\n                                uVar14 = (((uVar14 | (uVar6 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f)\n                                         << 6 | arg_8h[4] & 0x3f;\n                                uVar6 = arg_8h[5];\n                                var_10h = 0x6;\n                            }\n                            uVar14 = uVar14 << 6;\n                            uVar6 = uVar6 & 0x3f;\n                        }\n                        uVar6 = uVar6 | uVar14;\n                    }\n                    if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 0x10) == 0)) goto code_r0x0043c2f7;\n                    arg_8h = arg_8h + var_10h;\n                    arg_1ch = arg_1ch + 1;\n                    if (uVar13 <= arg_1ch) goto code_r0x0043c2f7;\n                }\n                if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n                    arg_1ch_00[0x17] = 1;\n                    uVar6 = arg_1ch_00[0x1f];\n                    goto joined_r0x0043bb46;\n                }\n            }\n            break;\n        case 0x43e183:\n            goto code_r0x0043e183;\n        }\n        goto code_r0x0043c2f7;\n    case 0x4e:\n    case 0x4f:\n        var_18h = puVar15 + 1;\n        puVar10 = puVar15 + 0x21;\n        uVar6 = *puVar10;\n    // switch table (8 cases) at 0x43e9c2\n        switch(uVar6) {\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n            var_14h = uVar6 - 0x46 & 1;\n            var_8h = *(uVar6 + 0x485eaa);\n            var_ch = *(uVar6 + 0x485eb2);\n            puVar15 = puVar15 + 0x22;\n            if (var_ch == 0) {\n                var_ch = 0x7fffffff;\n            }\n            break;\n        case 0x4c:\n        case 0x4d:\n            var_14h = *puVar10 == 0x4d;\n            var_8h = CONCAT11(puVar15[0x22], puVar15[0x23]);\n            var_ch = CONCAT11(puVar15[0x24], puVar15[0x25]);\n            if (var_ch == 0) {\n                var_ch = 0x7fffffff;\n            }\n            puVar15 = puVar15 + 0x26;\n            break;\n        default:\n            var_ch = 1;\n            var_8h = 1;\n            puVar15 = puVar10;\n        }\n        uVar6 = var_8h;\n        if (var_1ch == 0) {\n            arg_1ch = 0x1;\n            if (0 < var_8h) {\n                do {\n                    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d324;\n                    uVar5 = *arg_8h;\n                    arg_8h = arg_8h + 1;\n                    if ((var_18h[uVar5 >> 3] & 1 << (uVar5 & 7)) == 0) goto code_r0x0043d2b3;\n                    arg_1ch = arg_1ch + 1;\n                } while (arg_1ch <= var_8h);\n            }\n        }\n        else {\n            arg_1ch = 0x1;\n            puVar10 = arg_8h;\n            if (0 < var_8h) {\n                do {\n                    arg_8h = puVar10;\n                    if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d2eb;\n                    uVar5 = *puVar10;\n                    uVar13 = uVar5;\n                    arg_8h = puVar10 + 1;\n                    if (0xbf < uVar13) {\n                        uVar14 = *arg_8h & 0x3f;\n                        if ((uVar5 & 0x20) == 0) {\n                            uVar13 = (uVar13 & 0x1f) << 6 | uVar14;\n                            arg_8h = puVar10 + 2;\n                        }\n                        else if ((uVar5 & 0x10) == 0) {\n                            uVar13 = ((uVar13 & 0xf) << 6 | uVar14) << 6 | puVar10[2] & 0x3f;\n                            arg_8h = puVar10 + 3;\n                        }\n                        else if ((uVar5 & 8) == 0) {\n                            uVar13 = (((uVar13 & 7) << 6 | uVar14) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f;\n                            arg_8h = puVar10 + 4;\n                        }\n                        else if ((uVar5 & 4) == 0) {\n                            uVar13 = ((((uVar13 & 3) << 6 | uVar14) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f)\n                                     << 6 | puVar10[4] & 0x3f;\n                            arg_8h = puVar10 + 5;\n                        }\n                        else {\n                            uVar13 = (((((uVar13 & 1) << 6 | uVar14) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f)\n                                      << 6 | puVar10[4] & 0x3f) << 6 | puVar10[5] & 0x3f;\n                            arg_8h = puVar10 + 6;\n                        }\n                    }\n                    if (uVar13 < 0x100) {\n                        if ((var_18h[uVar13 >> 3] & 1 << (uVar13 & 7)) == 0) goto code_r0x0043d2b3;\n                    }\n                    else if (var_4h == 0x4e) goto code_r0x0043ce34;\n                    arg_1ch = arg_1ch + 1;\n                    puVar10 = arg_8h;\n                } while (arg_1ch <= var_8h);\n            }\n        }\n        if (var_8h != var_ch) {\n            if (var_14h == NULL) {\n                var_14h = arg_8h;\n                if (var_1ch != 0) goto joined_r0x0043d517;\n                puVar10 = arg_8h;\n                arg_1ch = var_8h;\n                if (var_ch <= var_8h) goto code_r0x0043d73e;\n                goto code_r0x0043d6ed;\n            }\n            var_8h = arg_2ch + 1;\n            arg_1ch = uVar6;\n            if (var_1ch == 0) {\n                puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                       var_8h);\n                if (puVar10 != NULL) {\n                    return puVar10;\n                }\n                goto code_r0x0043d49e;\n            }\n            puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n            if (puVar10 != NULL) {\n                return puVar10;\n            }\n            goto code_r0x004390ce;\n        }\n        goto code_r0x00436fae;\n    case 0x50:\n        var_18h = puVar15 + 3;\n        puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n        uVar6 = *puVar15;\n    // switch table (8 cases) at 0x43e9d2\n        switch(uVar6) {\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n            var_14h = uVar6 - 0x46 & 1;\n            var_8h = *(uVar6 + 0x485eaa);\n            var_ch = *(uVar6 + 0x485eb2);\n            puVar15 = puVar15 + 1;\n            if (var_ch == 0) {\n                var_ch = 0x7fffffff;\n            }\n            break;\n        case 0x4c:\n        case 0x4d:\n            var_14h = *puVar15 == 0x4d;\n            var_8h = CONCAT11(puVar15[1], puVar15[2]);\n            var_ch = CONCAT11(puVar15[3], puVar15[4]);\n            if (var_ch == 0) {\n                var_ch = 0x7fffffff;\n            }\n            puVar15 = puVar15 + 5;\n            break;\n        default:\n            var_ch = 1;\n            var_8h = 1;\n        }\n        arg_1ch = 0x1;\n        if (0 < var_8h) {\n            do {\n                arg_8h = puVar10;\n                if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d2eb;\n                uVar5 = *puVar10;\n                uVar6 = uVar5;\n                arg_8h = puVar10 + 1;\n                if ((var_1ch != 0) && (0xbf < uVar6)) {\n                    if ((uVar5 & 0x20) == 0) {\n                        uVar6 = (uVar6 & 0x1f) << 6 | *arg_8h & 0x3f;\n                        arg_8h = puVar10 + 2;\n                    }\n                    else if ((uVar5 & 0x10) == 0) {\n                        uVar6 = ((uVar6 & 0xf) << 6 | *arg_8h & 0x3f) << 6 | puVar10[2] & 0x3f;\n                        arg_8h = puVar10 + 3;\n                    }\n                    else if ((uVar5 & 8) == 0) {\n                        uVar6 = (((uVar6 & 7) << 6 | *arg_8h & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f;\n                        arg_8h = puVar10 + 4;\n                    }\n                    else if ((uVar5 & 4) == 0) {\n                        uVar6 = ((((uVar6 & 3) << 6 | *arg_8h & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f\n                                ) << 6 | puVar10[4] & 0x3f;\n                        arg_8h = puVar10 + 5;\n                    }\n                    else {\n                        uVar6 = (((((uVar6 & 1) << 6 | *arg_8h & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 |\n                                 puVar10[3] & 0x3f) << 6 | puVar10[4] & 0x3f) << 6 | puVar10[5] & 0x3f;\n                        arg_8h = puVar10 + 6;\n                    }\n                }\n                iVar9 = fcn.0042e930(uVar6, var_18h);\n                if (iVar9 == 0) goto code_r0x0043ce34;\n                arg_1ch = arg_1ch + 1;\n                puVar10 = arg_8h;\n            } while (arg_1ch <= var_8h);\n        }\n        if (var_8h != var_ch) {\n            if (var_14h != NULL) {\n                arg_1ch = var_8h;\n                var_8h = arg_2ch + 1;\n                puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                       arg_2ch + 1);\n                if (puVar10 != NULL) {\n                    return puVar10;\n                }\n                goto code_r0x00439332;\n            }\n            arg_1ch = var_8h;\n            var_14h = arg_8h;\n            if (var_ch <= var_8h) goto code_r0x0043da39;\n            goto code_r0x0043d8d6;\n        }\n        goto code_r0x00436fae;\n    case 0x51:\n        uVar6 = CONCAT11(puVar15[1], puVar15[2]);\n        var_18h = uVar6 * 2;\n        puVar10 = puVar15 + 3;\n        if (var_18h < arg_18h) {\n            iVar9 = *(arg_1ch_00[3] + uVar6 * 8);\n            if (iVar9 < 0) goto code_r0x00438c8d;\n            var_10h = *(arg_1ch_00[3] + uVar6 * 8 + 4) - iVar9;\n        }\n        else {\ncode_r0x00438c8d:\n            if (arg_1ch_00[0x12] == 0) {\n                var_10h = (arg_1ch_00[0x1b] - arg_8h) + 1;\n            }\n            else {\n                var_10h = NULL;\n            }\n        }\n        uVar6 = *puVar10;\n    // switch table (8 cases) at 0x43e9b2\n        switch(uVar6) {\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n            var_14h = uVar6 - 0x46 & 1;\n            var_8h = *(uVar6 + 0x485eaa);\n            var_ch = *(uVar6 + 0x485eb2);\n            puVar15 = puVar15 + 4;\n            if (var_ch == 0) {\n                var_ch = 0x7fffffff;\n            }\n            break;\n        case 0x4c:\n        case 0x4d:\n            var_14h = *puVar10 == 0x4d;\n            var_8h = CONCAT11(puVar15[4], puVar15[5]);\n            var_ch = CONCAT11(puVar15[6], puVar15[7]);\n            if (var_ch == 0) {\n                var_ch = 0x7fffffff;\n            }\n            puVar15 = puVar15 + 8;\n            break;\n        default:\n            iVar9 = fcn.0042f201(var_18h, arg_8h, var_10h, arg_1ch_00, arg_20h);\n            if (iVar9 == 0) {\ncode_r0x0043d2c5:\n                if ((arg_1ch_00[0x1f] == 0) ||\n                   ((arg_8h < arg_1ch_00[0x1b] || (arg_8h < arg_1ch_00[0x1e] || arg_8h == arg_1ch_00[0x1e]))))\n                goto code_r0x0043ce34;\n                goto code_r0x0043d163;\n            }\n            puVar15 = puVar10;\n            arg_8h = arg_8h + var_10h;\n            goto code_r0x00436fae;\n        }\n        if (var_10h != NULL) {\n            arg_1ch = 0x1;\n            if (0 < var_8h) {\n                do {\n                    iVar9 = fcn.0042f201(var_18h, arg_8h, var_10h, arg_1ch_00, arg_20h);\n                    if (iVar9 == 0) goto code_r0x0043d2c5;\n                    arg_8h = arg_8h + var_10h;\n                    arg_1ch = arg_1ch + 1;\n                } while (arg_1ch <= var_8h);\n            }\n            if (var_8h != var_ch) {\n                if (var_14h == NULL) {\n                    arg_1ch = var_8h;\n                    var_14h = arg_8h;\n                    if (var_ch <= var_8h) goto code_r0x0043d272;\n                    goto code_r0x0043d221;\n                }\n                arg_1ch = var_8h;\n                var_8h = arg_2ch + 1;\n                puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                       arg_2ch + 1);\n                if (puVar10 != NULL) {\n                    return puVar10;\n                }\n                goto code_r0x00438dbe;\n            }\n        }\n        goto code_r0x00436fae;\n    case 0x52:\n        arg_1ch = CONCAT11(puVar15[1], puVar15[2]) + arg_1ch_00[0x19];\n        if (arg_1ch == arg_1ch_00[0x19]) {\n            var_38h = 0;\n        }\n        else {\n            var_38h = CONCAT11(*(arg_1ch + 3), *(arg_1ch + 4));\n        }\n        var_3ch = arg_1ch_00[0x25];\n        arg_1ch_00[0x25] = &var_3ch;\n        puVar15 = puVar15 + 3;\n        var_2ch = arg_1ch_00[4];\n        var_34h = puVar15;\n        if (var_2ch < 0x1f) {\n            var_30h = &var_120h;\n        }\n        else {\n            var_30h = (**0x491490)(var_2ch * 4);\n            if (var_30h == NULL) {\n                return 0xfffffffa;\n            }\n        }\n        fcn.00411000(var_30h, arg_1ch_00[3], var_2ch * 4);\n        var_28h = arg_18h;\n        uVar5 = *arg_1ch;\n        bVar16 = uVar5 < 0x61;\n        var_8h = arg_2ch + 1;\n        do {\n            var_24h = fcn.00436f5e(arg_8h, arg_1ch + *(uVar5 + 0x485228), arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h\n                                   , arg_24h, (-bVar16 & 0xfffffffe) + 2, var_8h);\n            if ((var_24h == 0x1) || (var_24h == 0xfffffc19)) {\n                arg_1ch_00[0x25] = var_3ch;\n                if (var_30h != &var_120h) {\n                    (**0x491494)(var_30h);\n                }\n                arg_1ch_00[0x27] = arg_14h;\n                return 0x1;\n            }\n            if ((var_24h != NULL) && ((var_24h != 0xfffffc1e || (arg_1ch_00[0x1c] != puVar15)))) {\n                if (var_30h != &var_120h) {\n                    (**0x491494)(var_30h);\n                    return var_24h;\n                }\n                return var_24h;\n            }\n            arg_1ch_00[0x25] = &var_3ch;\n            fcn.00411000(arg_1ch_00[3], var_30h, var_2ch * 4);\n            arg_1ch = arg_1ch + CONCAT11(*(arg_1ch + 1), *(arg_1ch + 2));\n            uVar5 = *arg_1ch;\n        } while (uVar5 == 0x54);\n        arg_1ch_00[0x25] = var_3ch;\n        if (var_30h != &var_120h) {\n            (**0x491494)(var_30h);\n        }\n        goto code_r0x0043d057;\n    case 0x53:\n        if (*0x4a7f20 != NULL) {\n            var_74h = 1;\n            var_70h = puVar15[1];\n            var_6ch = arg_1ch_00[3];\n            var_68h = arg_1ch_00[0x1a];\n            var_64h = arg_1ch_00[0x1b] - arg_1ch_00[0x1a];\n            var_60h = arg_10h - arg_1ch_00[0x1a];\n            var_5ch = arg_8h - arg_1ch_00[0x1a];\n            var_4ch = CONCAT11(puVar15[2], puVar15[3]);\n            var_48h = CONCAT11(puVar15[4], puVar15[5]);\n            var_58h = arg_18h / 2;\n            var_54h = arg_1ch_00[0x21];\n            var_50h = arg_1ch_00[0x26];\n            puVar10 = (**0x4a7f20)(&var_74h);\n            if (0 < puVar10) goto code_r0x0043ce34;\n            if (puVar10 < 0) {\n                return puVar10;\n            }\n        }\n        puVar15 = puVar15 + 6;\n        goto code_r0x00436fae;\n    case 0x54:\n        do {\n            puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n        } while (*puVar15 == 0x54);\n        goto code_r0x00436fae;\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        arg_ch = puVar15 + -CONCAT11(puVar15[1], puVar15[2]);\n        uVar5 = *arg_ch;\n        if (uVar5 < 0x61) {\n            var_18h = NULL;\n        }\n        else {\n            var_18h = arg_24h[1];\n            arg_24h = *arg_24h;\n        }\n        if ((((uVar5 == 0x58) || (uVar5 == 0x59)) || (uVar5 == 0x5a)) || ((uVar5 == 0x5b || (uVar5 == 0x5d)))) {\n            arg_1ch_00[0x1d] = arg_8h;\n            arg_1ch_00[0x20] = arg_18h;\n            arg_1ch_00[0x1c] = arg_10h;\n            arg_1ch_00[0x27] = arg_14h;\n            return 0x1;\n        }\n        if ((uVar5 == 0x5f) || (uVar5 == 0x62)) {\n            var_14h = CONCAT11(arg_ch[3], arg_ch[4]);\n            iVar9 = var_14h * 2;\n            arg_1ch_00[0x21] = var_14h;\n            if (iVar9 < arg_1ch_00[5]) {\n                *(arg_1ch_00[3] + var_14h * 8) = *(arg_1ch_00[3] + (arg_1ch_00[4] - var_14h) * 4);\n                *(arg_1ch_00[3] + 4 + var_14h * 8) = arg_8h - arg_1ch_00[0x1a];\n                if (arg_18h <= iVar9) {\n                    arg_18h = iVar9 + 2;\n                }\n            }\n            else {\n                arg_1ch_00[0xe] = 1;\n            }\n            if ((arg_1ch_00[0x25] != 0) && (puVar4 = arg_1ch_00[0x25],  puVar4[1] == var_14h)) {\n                arg_1ch_00[0x25] = *puVar4;\n                fcn.00411000(arg_1ch_00[3], puVar4[3], puVar4[4] * 4);\n                arg_18h = puVar4[5];\n                arg_20h = var_20h;\n                puVar15 = puVar4[2];\n                goto code_r0x00436fae;\n            }\n        }\n        arg_20h = var_20h;\n        if ((*puVar15 != 0x55) && (arg_8h != var_18h)) {\n            arg_28h = (-(*arg_ch < 0x61) & 0xfffffffe) + 2;\n            if (*puVar15 != 0x57) {\n                puVar10 = fcn.00436f5e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch_00, var_20h, arg_24h, arg_28h\n                                       , arg_2ch + 1);\n                if (puVar10 != NULL) {\n                    return puVar10;\n                }\n                arg_ch = puVar15 + 3;\n                goto code_r0x0043c9ed;\n            }\n            puVar15 = fcn.00436f5e(arg_8h, puVar15 + 3, arg_10h, arg_14h, arg_18h, arg_1ch_00, var_20h, arg_24h, 0, \n                                   arg_2ch + 1);\n            if (puVar15 != NULL) {\n                return puVar15;\n            }\n            if (arg_28h != 0) {\n                puVar15 = fcn.00436f5e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch_00, var_20h, arg_24h, arg_28h\n                                       , arg_2ch + 1);\n                return puVar15;\n            }\n            goto code_r0x0043c9f4;\n        }\n        puVar15 = puVar15 + 3;\n        goto code_r0x00436fae;\n    case 0x58:\n    case 0x5a:\n        do {\n            puVar10 = fcn.00436f5e(arg_8h, puVar15 + 3, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, NULL, 0, \n                                   arg_2ch + 1);\n            if ((puVar10 == 0x1) || (puVar10 == 0xfffffc19)) {\n                arg_10h = arg_1ch_00[0x1c];\n                break;\n            }\n            if (puVar10 != NULL) {\n                if (puVar10 != 0xfffffc1e) {\n                    return puVar10;\n                }\n                if (arg_1ch_00[0x1c] != puVar15) {\n                    return 0xfffffc1e;\n                }\n            }\n            puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n        } while (*puVar15 == 0x54);\n        if (*puVar15 == 0x55) goto code_r0x0043d057;\n        if ((arg_28h & 1) != 0) {\n            return 1;\n        }\n        do {\n            puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n        } while (*puVar15 == 0x54);\n        arg_18h = arg_1ch_00[0x20];\n        puVar15 = puVar15 + 3;\n        goto code_r0x00436fae;\n    case 0x59:\n    case 0x5b:\n        do {\n            puVar10 = fcn.00436f5e(arg_8h, puVar15 + 3, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, NULL, 0, \n                                   arg_2ch + 1);\n            if ((puVar10 == 0x1) || (puVar10 == 0xfffffc19)) goto code_r0x0043ce34;\n            if ((puVar10 == 0xfffffc1c) || ((puVar10 == 0xfffffc1b || (puVar10 == 0xfffffc1a)))) goto code_r0x004375f1;\n            if (puVar10 != NULL) {\n                if (puVar10 != 0xfffffc1e) {\n                    return puVar10;\n                }\n                if (arg_1ch_00[0x1c] != puVar15) {\n                    return 0xfffffc1e;\n                }\n            }\n            puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n        } while (*puVar15 == 0x54);\n        goto code_r0x00437605;\n    case 0x5c:\n        if (var_1ch == 0) {\n            arg_8h = arg_8h + -CONCAT11(puVar15[1], puVar15[2]);\n            if (arg_8h < arg_1ch_00[0x1a]) goto code_r0x0043d057;\n        }\n        else {\n            uVar6 = CONCAT11(puVar15[1], puVar15[2]);\n            if (uVar6 != 0) {\n                do {\n                    arg_8h = arg_8h + -1;\n                    uVar6 = uVar6 - 1;\n                    if (arg_8h < arg_1ch_00[0x1a]) goto code_r0x0043d2b3;\n                    uVar5 = *arg_8h;\n                    while ((uVar5 & 0xc0) == 0x80) {\n                        puVar10 = arg_8h + -1;\n                        arg_8h = arg_8h + -1;\n                        uVar5 = *puVar10;\n                    }\n                } while (0 < uVar6);\n            }\n        }\n        if (arg_8h < arg_1ch_00[0x1e]) {\n            arg_1ch_00[0x1e] = arg_8h;\n        }\n        puVar15 = puVar15 + 3;\n        goto code_r0x00436fae;\n    case 0x5d:\n        puVar10 = puVar15;\n        var_18h = arg_8h;\n        do {\n            puVar7 = fcn.00436f5e(arg_8h, puVar10 + 3, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                  arg_2ch + 1);\n            if (puVar7 == 0x1) {\n                arg_10h = arg_1ch_00[0x1c];\n                break;\n            }\n            if (puVar7 != NULL) {\n                if (puVar7 != 0xfffffc1e) {\n                    return puVar7;\n                }\n                if (arg_1ch_00[0x1c] != puVar10) {\n                    return 0xfffffc1e;\n                }\n            }\n            puVar10 = puVar10 + CONCAT11(puVar10[1], puVar10[2]);\n        } while (*puVar10 == 0x54);\n        if ((*puVar10 != 0x5d) && (*puVar10 != 0x54)) {\n            return 0;\n        }\n        do {\n            puVar10 = puVar10 + CONCAT11(puVar10[1], puVar10[2]);\n        } while (*puVar10 == 0x54);\n        arg_18h = arg_1ch_00[0x20];\n        arg_8h = arg_1ch_00[0x1d];\n        if ((*puVar10 != 0x55) && (arg_8h != var_18h)) {\n            var_24h = puVar10 + 3;\n            if (puVar10[3] == 0x19) {\n                arg_20h = puVar10[4] | arg_20h & 0xfffffff8;\n            }\n            if (*puVar10 == 0x57) {\n                puVar10 = fcn.00436f5e(arg_8h, var_24h, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                       arg_2ch + 1);\n                arg_ch = puVar15;\n            }\n            else {\n                puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 2, \n                                       arg_2ch + 1);\n                arg_ch = var_24h;\n            }\n            if (puVar10 != NULL) {\n                return puVar10;\n            }\n            goto code_r0x0043c9ed;\n        }\n        puVar15 = puVar10 + 3;\n        goto code_r0x00436fae;\n    case 0x5e:\n    case 0x61:\n        goto code_r0x0043c82b;\n    case 0x5f:\n    case 0x62:\n        var_14h = CONCAT11(puVar15[3], puVar15[4]);\n        var_18h = var_14h * 2;\n        if (var_18h < arg_1ch_00[5]) {\n            uVar6 = arg_1ch_00[3];\n            var_24h = *(uVar6 + var_14h * 8);\n            var_20h = *(uVar6 + 4 + var_14h * 8);\n            piVar1 = uVar6 + (arg_1ch_00[4] - var_14h) * 4;\n            var_18h = *piVar1;\n            uVar6 = arg_1ch_00[0x21];\n            *piVar1 = arg_8h - arg_1ch_00[0x1a];\n            bVar16 = var_4h != 0x62;\n            var_8h = arg_2ch + 1;\n            do {\n                puVar10 = fcn.00436f5e(arg_8h, puVar15 + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, arg_1ch_00, \n                                       arg_20h, arg_24h, bVar16 - 1 & 2, var_8h);\n                if (puVar10 != NULL) {\n                    if (puVar10 != 0xfffffc1e) {\n                        return puVar10;\n                    }\n                    if (arg_1ch_00[0x1c] != puVar15) {\n                        return 0xfffffc1e;\n                    }\n                }\n                arg_1ch_00[0x21] = uVar6;\n                puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n            } while (*puVar15 == 0x54);\n            *(arg_1ch_00[3] + var_14h * 8) = var_24h;\n            *(arg_1ch_00[3] + 4 + var_14h * 8) = var_20h;\n            *(arg_1ch_00[3] + (arg_1ch_00[4] - var_14h) * 4) = var_18h;\n            if (puVar10 == 0xfffffc1e) {\n                return 0;\n            }\n            goto code_r0x0043ce34;\n        }\n        goto code_r0x0043c82b;\n    case 0x60:\n    case 99:\n        uVar5 = puVar15[1];\n        uVar2 = puVar15[2];\n        if (puVar15[3] == 0x53) {\n            if (*0x4a7f20 != NULL) {\n                var_a4h = 1;\n                var_a0h = puVar15[4];\n                var_9ch = arg_1ch_00[3];\n                var_98h = arg_1ch_00[0x1a];\n                var_94h = arg_1ch_00[0x1b] - arg_1ch_00[0x1a];\n                var_90h = arg_10h - arg_1ch_00[0x1a];\n                var_8ch = arg_8h - arg_1ch_00[0x1a];\n                var_7ch = CONCAT11(puVar15[5], puVar15[6]);\n                var_78h = CONCAT11(puVar15[7], puVar15[8]);\n                var_88h = arg_18h / 2;\n                var_84h = arg_1ch_00[0x21];\n                var_80h = arg_1ch_00[0x26];\n                puVar10 = (**0x4a7f20)(&var_a4h);\n                if (0 < puVar10) goto code_r0x0043d057;\n                if (puVar10 < 0) {\n                    return puVar10;\n                }\n            }\n            puVar15 = puVar15 + 6;\n        }\n        uVar3 = puVar15[3];\n        if ((uVar3 != 0x66) && (uVar3 != 0x67)) {\n            if ((uVar3 == 100) || (uVar3 == 0x65)) {\n                iVar9 = CONCAT11(puVar15[4], puVar15[5]) * 2;\n                if ((iVar9 < arg_18h) && (-1 < *(arg_1ch_00[3] + CONCAT11(puVar15[4], puVar15[5]) * 8)))\n                goto code_r0x00437406;\n                var_18h = NULL;\n                if (uVar3 == 0x65) {\n                    var_10h = arg_1ch_00[10];\n                    var_24h = iVar9 >> 1;\n                    arg_1ch = NULL;\n                    if (0 < arg_1ch_00[8]) {\n                        do {\n                            if (CONCAT11(*var_10h, var_10h[1]) == var_24h) break;\n                            var_10h = var_10h + arg_1ch_00[9];\n                            arg_1ch = arg_1ch + 1;\n                        } while (arg_1ch < arg_1ch_00[8]);\n                    }\n                    if (arg_1ch < arg_1ch_00[8]) {\n                        var_14h = var_10h;\n                        if (arg_1ch_00[10] <= var_10h && var_10h != arg_1ch_00[10]) {\n                            do {\n                                var_18h = NULL;\n                                var_14h = var_14h + -arg_1ch_00[9];\n                                iVar9 = fcn.00414ee0(var_10h + 2, var_14h + 2);\n                                if (iVar9 != 0) break;\n                                if ((CONCAT11(*var_14h, var_14h[1]) * 2 < arg_18h) &&\n                                   (-1 < *(arg_1ch_00[3] + CONCAT11(*var_14h, var_14h[1]) * 8))) goto code_r0x00437406;\n                                var_18h = NULL;\n                            } while (arg_1ch_00[10] <= var_14h && var_14h != arg_1ch_00[10]);\n                        }\n                        var_14h = var_10h;\n                        arg_1ch = arg_1ch + 1;\n                        if (arg_1ch < arg_1ch_00[8]) {\n                            var_24h = var_10h + 2;\n                            do {\n                                var_14h = var_14h + arg_1ch_00[9];\n                                iVar9 = fcn.00414ee0(var_24h, var_14h + 2);\n                                if (iVar9 != 0) break;\n                                if ((CONCAT11(*var_14h, var_14h[1]) * 2 < arg_18h) &&\n                                   (-1 < *(arg_1ch_00[3] + CONCAT11(*var_14h, var_14h[1]) * 8))) goto code_r0x00437406;\n                                arg_1ch = arg_1ch + 1;\n                                var_18h = NULL;\n                            } while (arg_1ch < arg_1ch_00[8]);\n                        }\n                    }\n                }\ncode_r0x00437281:\n                uVar6 = CONCAT11(puVar15[1], puVar15[2]);\n                goto code_r0x0043728e;\n            }\n            if (uVar3 == 0x68) {\n                arg_ch = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n                goto code_r0x0043729a;\n            }\n            puVar10 = fcn.00436f5e(arg_8h, puVar15 + 3, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, NULL, 1, \n                                   arg_2ch + 1);\n            if (puVar10 != 0x1) {\n                if (puVar10 != NULL) {\n                    if (puVar10 != 0xfffffc1e) {\n                        return puVar10;\n                    }\n                    if (arg_1ch_00[0x1c] != puVar15) {\n                        return 0xfffffc1e;\n                    }\n                }\n                arg_ch = puVar15 + CONCAT11(uVar5, uVar2);\n                goto code_r0x0043729a;\n            }\n            arg_ch = puVar15 + CONCAT11(puVar15[4], puVar15[5]) + 3;\n            uVar5 = puVar15[CONCAT11(puVar15[4], puVar15[5]) + 3];\n            while (uVar5 == 0x54) {\n                arg_ch = arg_ch + CONCAT11(arg_ch[1], arg_ch[2]);\n                uVar5 = *arg_ch;\n            }\ncode_r0x0043c7d2:\n            arg_ch = arg_ch + 3;\n            if (var_4h == 99) {\n                puVar15 = fcn.00436f5e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 2, \n                                       arg_2ch + 1);\n                return puVar15;\n            }\ncode_r0x0043c9ed:\n            arg_28h = 0;\n            goto code_r0x0043c9f4;\n        }\n        if (arg_1ch_00[0x25] == 0) {\n            arg_ch = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n            goto code_r0x0043729a;\n        }\n        var_24h = CONCAT11(puVar15[4], puVar15[5]);\n        if ((var_24h != 0xffff) && (var_24h != *(arg_1ch_00[0x25] + 4))) {\n            var_18h = NULL;\n            if (uVar3 == 0x67) {\n                var_10h = arg_1ch_00[10];\n                arg_1ch = NULL;\n                if (0 < arg_1ch_00[8]) {\n                    do {\n                        if (CONCAT11(*var_10h, var_10h[1]) == var_24h) break;\n                        var_10h = var_10h + arg_1ch_00[9];\n                        arg_1ch = arg_1ch + 1;\n                    } while (arg_1ch < arg_1ch_00[8]);\n                }\n                if (arg_1ch < arg_1ch_00[8]) {\n                    var_14h = var_10h;\n                    if (arg_1ch_00[10] <= var_10h && var_10h != arg_1ch_00[10]) {\n                        do {\n                            var_18h = NULL;\n                            var_14h = var_14h + -arg_1ch_00[9];\n                            iVar9 = fcn.00414ee0(var_10h + 2, var_14h + 2);\n                            if (iVar9 != 0) break;\n                            if (CONCAT11(*var_14h, var_14h[1]) == *(arg_1ch_00[0x25] + 4)) goto code_r0x00437406;\n                            var_18h = NULL;\n                        } while (arg_1ch_00[10] <= var_14h && var_14h != arg_1ch_00[10]);\n                    }\n                    var_14h = var_10h;\n                    arg_1ch = arg_1ch + 1;\n                    if (arg_1ch < arg_1ch_00[8]) {\n                        var_24h = var_10h + 2;\n                        do {\n                            var_14h = var_14h + arg_1ch_00[9];\n                            iVar9 = fcn.00414ee0(var_24h, var_14h + 2);\n                            if (iVar9 != 0) break;\n                            if (CONCAT11(*var_14h, var_14h[1]) == *(arg_1ch_00[0x25] + 4)) goto code_r0x00437406;\n                            arg_1ch = arg_1ch + 1;\n                            var_18h = NULL;\n                        } while (arg_1ch < arg_1ch_00[8]);\n                    }\n                }\n            }\n            goto code_r0x00437281;\n        }\ncode_r0x00437406:\n        var_18h = 0x1;\n        uVar6 = 3;\ncode_r0x0043728e:\n        arg_ch = puVar15 + uVar6;\n        if (var_18h != NULL) goto code_r0x0043c7d2;\ncode_r0x0043729a:\n        if (*arg_ch == 0x54) goto code_r0x0043c7d2;\n        puVar15 = arg_ch + 3;\n        goto code_r0x00436fae;\n    case 0x69:\n        puVar15 = puVar15 + 1;\n        puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, arg_2ch + 1)\n        ;\n        if (puVar10 != NULL) {\n            return puVar10;\n        }\n        do {\n            puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n        } while (*puVar15 == 0x54);\n        puVar15 = puVar15 + 3;\n        goto code_r0x00436fae;\n    case 0x6a:\n        puVar15 = puVar15 + 1;\n        puVar10 = puVar15;\n        do {\n            puVar10 = puVar10 + CONCAT11(puVar10[1], puVar10[2]);\n        } while (*puVar10 == 0x54);\n        puVar10 = fcn.00436f5e(arg_8h, puVar10 + 3, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                               arg_2ch + 1);\n        if (puVar10 != NULL) {\n            return puVar10;\n        }\n        goto code_r0x00436fae;\n    case 0x6b:\n        puVar10 = puVar15 + 2;\n        puVar15 = fcn.00436f5e(arg_8h, puVar15 + puVar15[1] + *(*puVar15 + 0x485228), arg_10h, puVar10, arg_18h, \n                               arg_1ch_00, arg_20h, arg_24h, arg_28h, arg_2ch + 1);\n        if ((puVar15 == 0xfffffc1d) && (iVar9 = fcn.00414ee0(puVar10, arg_1ch_00[0x1c]),  iVar9 == 0)) {\n            arg_1ch_00[0x1c] = arg_8h;\n            return 0xfffffc1c;\n        }\n        if (arg_1ch_00[0x27] == 0) {\n            arg_1ch_00[0x27] = puVar10;\n        }\n        return puVar15;\n    case 0x6c:\n        puVar15 = fcn.00436f5e(arg_8h, puVar15 + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h\n                               , arg_24h, arg_28h, arg_2ch + 1);\n        if ((puVar15 != NULL) && (puVar15 != 0xfffffc1e)) {\n            return puVar15;\n        }\n        arg_1ch_00[0x27] = arg_14h;\n        return 0xfffffc1b;\n    case 0x6d:\n        puVar10 = fcn.00436f5e(arg_8h, puVar15 + puVar15[1] + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, \n                               arg_1ch_00, arg_20h, arg_24h, arg_28h, arg_2ch + 1);\n        if ((puVar10 != NULL) && (puVar10 != 0xfffffc1e)) {\n            return puVar10;\n        }\n        arg_1ch_00[0x27] = puVar15 + 2;\n        return 0xfffffc1b;\n    case 0x6e:\n        puVar15 = fcn.00436f5e(arg_8h, puVar15 + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h\n                               , arg_24h, arg_28h, arg_2ch + 1);\n        if (((puVar15 != NULL) && (puVar15 != 0xfffffc1b)) && (puVar15 != 0xfffffc1e)) {\n            return puVar15;\n        }\n        arg_1ch_00[0x1c] = arg_8h;\n        arg_1ch_00[0x27] = arg_14h;\n        return 0xfffffc1c;\n    case 0x6f:\n        puVar10 = fcn.00436f5e(arg_8h, puVar15 + puVar15[1] + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, \n                               arg_1ch_00, arg_20h, arg_24h, arg_28h, arg_2ch + 1);\n        if (((puVar10 != NULL) && (puVar10 != 0xfffffc1b)) && (puVar10 != 0xfffffc1e)) {\n            return puVar10;\n        }\n        arg_1ch_00[0x1c] = puVar15 + 2;\n        return 0xfffffc1d;\n    case 0x70:\n        puVar10 = fcn.00436f5e(arg_8h, puVar15 + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h\n                               , arg_24h, arg_28h, arg_2ch + 1);\n        if (puVar10 == NULL) {\n            arg_1ch_00[0x1c] = puVar15 - CONCAT11(puVar15[1], puVar15[2]);\n            arg_1ch_00[0x27] = arg_14h;\n            return 0xfffffc1e;\n        }\n        return puVar10;\n    case 0x71:\n        puVar10 = fcn.00436f5e(arg_8h, puVar15 + puVar15[3] + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, \n                               arg_1ch_00, arg_20h, arg_24h, arg_28h, arg_2ch + 1);\n        if (puVar10 == NULL) {\n            arg_1ch_00[0x1c] = puVar15 - CONCAT11(puVar15[1], puVar15[2]);\n            arg_1ch_00[0x27] = puVar15 + 4;\n            return 0xfffffc1e;\n        }\n        return puVar10;\n    case 0x72:\n        puVar15 = fcn.00436f5e(arg_8h, puVar15 + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h\n                               , arg_24h, arg_28h, arg_2ch + 1);\n        if ((((puVar15 != NULL) && (puVar15 != 0xfffffc1b)) && (puVar15 != 0xfffffc1c)) &&\n           ((puVar15 != 0xfffffc1d && (puVar15 != 0xfffffc1e)))) {\n            return puVar15;\n        }\n        arg_1ch_00[0x27] = arg_14h;\n        return 0xfffffc1a;\n    case 0x73:\n        goto code_r0x0043d2b3;\n    case 0x75:\n        uVar6 = CONCAT11(puVar15[1], puVar15[2]);\n        iVar9 = uVar6 * 2;\n        arg_1ch_00[0x21] = uVar6;\n        if (iVar9 < arg_1ch_00[5]) {\n            *(arg_1ch_00[3] + uVar6 * 8) = *(arg_1ch_00[3] + (arg_1ch_00[4] - uVar6) * 4);\n            *(arg_1ch_00[3] + 4 + uVar6 * 8) = arg_8h - arg_1ch_00[0x1a];\n            if (arg_18h <= iVar9) {\n                arg_18h = iVar9 + 2;\n            }\n            puVar15 = puVar15 + 3;\n        }\n        else {\n            arg_1ch_00[0xe] = 1;\n            puVar15 = puVar15 + 3;\n        }\n        goto code_r0x00436fae;\n    case 0x76:\n        goto code_r0x00437888;\n    }\n    if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n       (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) {\ncode_r0x0043d1a7:\n        arg_1ch_00[0x27] = arg_14h;\n        return 0xfffffff4;\n    }\n    goto code_r0x0043d057;\ncode_r0x00437888:\n    puVar15 = puVar15 + 1;\n    do {\n        puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n    } while (*puVar15 == 0x54);\n    puVar15 = puVar15 + 3;\n    goto code_r0x00436fae;\ncode_r0x0043c82b:\n    arg_28h = (var_4h < 0x61) - 1 & 2;\n    uVar5 = puVar15[CONCAT11(puVar15[1], puVar15[2])];\n    while (uVar5 == 0x54) {\n        puVar10 = fcn.00436f5e(arg_8h, puVar15 + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h\n                               , arg_24h, arg_28h, arg_2ch + 1);\n        if (puVar10 != NULL) {\n            if (puVar10 != 0xfffffc1e) {\n                return puVar10;\n            }\n            if (arg_1ch_00[0x1c] != puVar15) {\n                return 0xfffffc1e;\n            }\n        }\n        puVar10 = puVar15 + CONCAT11(puVar15[1], puVar15[2]) + 1;\n        puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n        uVar5 = puVar15[CONCAT11(*puVar10, puVar15[2])];\n    }\n    if (arg_28h != 0) {\n        puVar15 = fcn.00436f5e(arg_8h, puVar15 + *(*puVar15 + 0x485228), arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h\n                               , arg_24h, arg_28h, arg_2ch + 1);\n        if (puVar15 == NULL) {\n            arg_1ch_00[0x27] = arg_14h;\n            return NULL;\n        }\n        return puVar15;\n    }\n    arg_ch = puVar15 + *(*puVar15 + 0x485228);\ncode_r0x0043c9f4:\n    uVar6 = *arg_1ch_00;\n    var_1ch = arg_1ch_00[0x11];\n    if (arg_1ch_00[1] <= uVar6) goto code_r0x0043ca05;\n    goto code_r0x00436f84;\ncode_r0x004375f1:\n    do {\n        puVar15 = puVar15 + CONCAT11(puVar15[1], puVar15[2]);\n    } while (*puVar15 == 0x54);\ncode_r0x00437605:\n    if ((arg_28h & 1) != 0) {\n        return 1;\n    }\n    puVar15 = puVar15 + 3;\n    goto code_r0x00436fae;\ncode_r0x00438dbe:\n    if (var_ch <= arg_1ch) goto code_r0x0043d057;\n    iVar9 = fcn.0042f201(var_18h, arg_8h, var_10h, arg_1ch_00, arg_20h);\n    if (iVar9 == 0) {\n        if ((((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1b] <= arg_8h)) &&\n            (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) && (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])\n           ) {\n            arg_1ch_00[0x27] = arg_14h;\n            return 0xfffffff4;\n        }\n        goto code_r0x0043d2b3;\n    }\n    arg_8h = arg_8h + var_10h;\n    arg_1ch = arg_1ch + 1;\n    puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    if (puVar10 != NULL) {\n        return puVar10;\n    }\n    goto code_r0x00438dbe;\n    while( true ) {\n        arg_8h = arg_8h + var_10h;\n        arg_1ch = arg_1ch + 1;\n        if (var_ch <= arg_1ch) break;\ncode_r0x0043d221:\n        iVar9 = fcn.0042f201(var_18h, arg_8h, var_10h, arg_1ch_00, arg_20h);\n        if (iVar9 == 0) {\n            if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1b] <= arg_8h)) &&\n               ((arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e] &&\n                (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])))) goto code_r0x0043d16f;\n            break;\n        }\n    }\n    if (var_14h <= arg_8h) {\ncode_r0x0043d272:\n        var_8h = arg_2ch + 1;\n        do {\n            puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n            if (puVar10 != NULL) {\n                return puVar10;\n            }\n            arg_8h = arg_8h + -var_10h;\n        } while (var_14h <= arg_8h);\n    }\n    goto code_r0x0043d2b3;\ncode_r0x00439332:\n    if (var_ch <= arg_1ch) goto code_r0x0043d057;\n    puVar10 = arg_8h;\n    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d89a;\n    uVar5 = *arg_8h;\n    uVar6 = uVar5;\n    puVar10 = arg_8h + 1;\n    if ((var_1ch != 0) && (0xbf < uVar6)) {\n        if ((uVar5 & 0x20) == 0) {\n            uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n            puVar10 = arg_8h + 2;\n        }\n        else if ((uVar5 & 0x10) == 0) {\n            uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n            puVar10 = arg_8h + 3;\n        }\n        else if ((uVar5 & 8) == 0) {\n            uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n            puVar10 = arg_8h + 4;\n        }\n        else if ((uVar5 & 4) == 0) {\n            uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                    arg_8h[4] & 0x3f;\n            puVar10 = arg_8h + 5;\n        }\n        else {\n            uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                    arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n            puVar10 = arg_8h + 6;\n        }\n    }\n    iVar9 = fcn.0042e930(uVar6, var_18h);\n    if (iVar9 == 0) goto code_r0x0043d057;\n    arg_1ch = arg_1ch + 1;\n    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    arg_8h = puVar10;\n    if (puVar7 != NULL) {\n        return puVar7;\n    }\n    goto code_r0x00439332;\ncode_r0x004390ce:\n    if (var_ch <= arg_1ch) goto code_r0x0043d2b3;\n    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d324;\n    uVar5 = *arg_8h;\n    uVar6 = uVar5;\n    puVar10 = arg_8h + 1;\n    if (0xbf < uVar6) {\n        if ((uVar5 & 0x20) == 0) {\n            uVar6 = (uVar6 & 0x1f) << 6 | *puVar10 & 0x3f;\n            puVar10 = arg_8h + 2;\n        }\n        else if ((uVar5 & 0x10) == 0) {\n            uVar6 = ((uVar6 & 0xf) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f;\n            puVar10 = arg_8h + 3;\n        }\n        else if ((uVar5 & 8) == 0) {\n            uVar6 = (((uVar6 & 7) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n            puVar10 = arg_8h + 4;\n        }\n        else if ((uVar5 & 4) == 0) {\n            uVar6 = ((((uVar6 & 3) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                    arg_8h[4] & 0x3f;\n            puVar10 = arg_8h + 5;\n        }\n        else {\n            uVar6 = (((((uVar6 & 1) << 6 | *puVar10 & 0x3f) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                    arg_8h[4] & 0x3f) << 6 | arg_8h[5] & 0x3f;\n            puVar10 = arg_8h + 6;\n        }\n    }\n    if (uVar6 < 0x100) {\n        if ((var_18h[uVar6 >> 3] & 1 << (uVar6 & 7)) == 0) goto code_r0x0043d057;\n    }\n    else if (var_4h == 0x4e) goto code_r0x0043d2b3;\n    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    arg_8h = puVar10;\n    arg_1ch = arg_1ch + 1;\n    if (puVar7 != NULL) {\n        return puVar7;\n    }\n    goto code_r0x004390ce;\ncode_r0x0043d49e:\n    if (var_ch <= arg_1ch) goto code_r0x0043d2b3;\n    if (arg_1ch_00[0x1b] <= arg_8h) goto code_r0x0043d324;\n    uVar5 = *arg_8h;\n    arg_8h = arg_8h + 1;\n    if ((var_18h[uVar5 >> 3] & 1 << (uVar5 & 7)) == 0) goto code_r0x0043d2b3;\n    puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    arg_1ch = arg_1ch + 1;\n    if (puVar10 != NULL) {\n        return puVar10;\n    }\n    goto code_r0x0043d49e;\njoined_r0x0043d517:\n    if (var_ch <= var_8h) goto code_r0x0043d660;\n    var_20h = 1;\n    if (arg_1ch_00[0x1b] <= arg_8h) {\n        if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n           (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d30f;\n        goto code_r0x0043d660;\n    }\n    uVar5 = *arg_8h;\n    uVar6 = uVar5;\n    if (0xbf < uVar6) {\n        uVar13 = arg_8h[1] & 0x3f;\n        if ((uVar5 & 0x20) == 0) {\n            uVar6 = (uVar6 & 0x1f) << 6;\n            var_20h = 2;\n        }\n        else {\n            if ((uVar5 & 0x10) == 0) {\n                uVar13 = uVar13 | (uVar6 & 0xf) << 6;\n                uVar6 = arg_8h[2];\n                var_20h = 3;\n            }\n            else if ((uVar5 & 8) == 0) {\n                uVar13 = (uVar13 | (uVar6 & 7) << 6) << 6 | arg_8h[2] & 0x3f;\n                uVar6 = arg_8h[3];\n                var_20h = 4;\n            }\n            else if ((uVar5 & 4) == 0) {\n                uVar13 = ((uVar13 | (uVar6 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f;\n                uVar6 = arg_8h[4];\n                var_20h = 5;\n            }\n            else {\n                uVar13 = (((uVar13 | (uVar6 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                         arg_8h[4] & 0x3f;\n                uVar6 = arg_8h[5];\n                var_20h = 6;\n            }\n            uVar13 = uVar13 << 6;\n            uVar6 = uVar6 & 0x3f;\n        }\n        uVar6 = uVar6 | uVar13;\n    }\n    if (uVar6 < 0x100) {\n        if ((var_18h[uVar6 >> 3] & 1 << (uVar6 & 7)) == 0) goto code_r0x0043d660;\n    }\n    else if (var_4h == 0x4e) goto code_r0x0043d660;\n    var_8h = var_8h + 1;\n    arg_8h = arg_8h + var_20h;\n    goto joined_r0x0043d517;\ncode_r0x0043d660:\n    var_8h = arg_2ch + 1;\n    puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    if (puVar10 != NULL) {\n        return puVar10;\n    }\n    while (arg_8h != var_14h) {\n        uVar5 = arg_8h[-1];\n        arg_8h = arg_8h + -1;\n        while ((uVar5 & 0xc0) == 0x80) {\n            puVar10 = arg_8h + -1;\n            arg_8h = arg_8h + -1;\n            uVar5 = *puVar10;\n        }\n        puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n        if (puVar10 != NULL) {\n            return puVar10;\n        }\n    }\n    goto code_r0x0043d778;\ncode_r0x0043e62e:\n    if (var_ch <= arg_1ch) goto code_r0x0043ce34;\n    arg_8h = puVar10;\n    if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d2eb;\n    if (var_10h == 0xc) {\n        if (arg_1ch_00[6] == 0) {\n            if (((puVar10 <= arg_1ch_00[0x1b] - arg_1ch_00[7]) && (*puVar10 == *(arg_1ch_00 + 0xb))) &&\n               ((arg_1ch_00[7] == 1 || (puVar10[1] == *(arg_1ch_00 + 0x2d))))) goto code_r0x0043ce34;\n        }\n        else {\n            iVar9 = fcn.0042efe8(puVar10, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, 0);\n            if (iVar9 != 0) goto code_r0x0043ce34;\n        }\n    }\n    uVar6 = *puVar10;\n    puVar7 = puVar10 + 1;\n    if (0xf < var_10h + -6) {\n        return 0xfffffff2;\n    }\n    // switch table (16 cases) at 0x43ebae\n    switch(*((var_10h + -6) * 4 + 0x43ebae)) {\n    case 0x43e183:\n        goto code_r0x0043e183;\n    case 0x43e6af:\n    // switch table (124 cases) at 0x43ebee\n        switch(uVar6) {\n        case 10:\n            break;\n        case 0xb:\n        case 0xc:\n        case 0x85:\n            if (arg_1ch_00[0x18] != 0) goto code_r0x0043d2b3;\n            break;\n        case 0xd:\n            if ((puVar7 < arg_1ch_00[0x1b]) && (*puVar7 == 10)) {\n                puVar7 = puVar10 + 2;\n            }\n            break;\n        default:\n            goto code_r0x0043d057;\n        }\n        break;\n    case 0x43e6f0:\n        if ((uVar6 == 9) || ((uVar6 == 0x20 || (uVar6 == 0xa0)))) goto code_r0x0043ce34;\n        break;\n    case 0x43e712:\n        if ((uVar6 != 9) && ((uVar6 != 0x20 && (uVar6 != 0xa0)))) goto code_r0x0043d2b3;\n        break;\n    case 0x43e734:\n        if ((9 < uVar6) && ((uVar6 < 0xe || (uVar6 == 0x85)))) goto code_r0x0043d057;\n        break;\n    case 0x43e753:\n        if ((uVar6 < 10) || ((0xd < uVar6 && (uVar6 != 0x85)))) goto code_r0x0043ce34;\n        break;\n    case 0x43e76e:\n        if ((*(uVar6 + arg_1ch_00[0xd]) & 4) != 0) goto code_r0x0043d2b3;\n        break;\n    case 0x43e77d:\n        if ((*(uVar6 + arg_1ch_00[0xd]) & 4) == 0) goto code_r0x0043d057;\n        break;\n    case 0x43e78c:\n        if ((*(uVar6 + arg_1ch_00[0xd]) & 1) != 0) goto code_r0x0043ce34;\n        break;\n    case 0x43e79b:\n        if ((*(uVar6 + arg_1ch_00[0xd]) & 1) == 0) goto code_r0x0043d2b3;\n        break;\n    case 0x43e7aa:\n        if ((*(uVar6 + arg_1ch_00[0xd]) & 0x10) != 0) goto code_r0x0043d057;\n        break;\n    case 0x43e7b9:\n        if ((*(uVar6 + arg_1ch_00[0xd]) & 0x10) == 0) goto code_r0x0043ce34;\n    }\n    arg_1ch = arg_1ch + 1;\n    puVar11 = fcn.00436f5e(puVar7, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    puVar10 = puVar7;\n    if (puVar11 != NULL) {\n        return puVar11;\n    }\n    goto code_r0x0043e62e;\ncode_r0x0043e1d0:\n    if (var_ch <= arg_1ch) goto code_r0x0043ce34;\n    arg_8h = puVar10;\n    if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d2eb;\n    if (var_10h == 0xc) {\n        if (arg_1ch_00[6] == 0) {\n            if (((puVar10 <= arg_1ch_00[0x1b] - arg_1ch_00[7]) && (*puVar10 == *(arg_1ch_00 + 0xb))) &&\n               ((arg_1ch_00[7] == 1 || (puVar10[1] == *(arg_1ch_00 + 0x2d))))) goto code_r0x0043ce34;\n        }\n        else {\n            iVar9 = fcn.0042efe8(puVar10, arg_1ch_00[6], arg_1ch_00[0x1b], arg_1ch_00 + 7, var_1ch);\n            if (iVar9 != 0) goto code_r0x0043ce34;\n        }\n    }\n    uVar5 = *puVar10;\n    uVar6 = uVar5;\n    puVar7 = puVar10 + 1;\n    if (0xbf < uVar6) {\n        if ((uVar5 & 0x20) == 0) {\n            uVar6 = (uVar6 & 0x1f) << 6 | *puVar7 & 0x3f;\n            puVar7 = puVar10 + 2;\n        }\n        else if ((uVar5 & 0x10) == 0) {\n            uVar6 = ((uVar6 & 0xf) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f;\n            puVar7 = puVar10 + 3;\n        }\n        else if ((uVar5 & 8) == 0) {\n            uVar6 = (((uVar6 & 7) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f;\n            puVar7 = puVar10 + 4;\n        }\n        else if ((uVar5 & 4) == 0) {\n            uVar6 = ((((uVar6 & 3) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f) << 6 |\n                    puVar10[4] & 0x3f;\n            puVar7 = puVar10 + 5;\n        }\n        else {\n            uVar6 = (((((uVar6 & 1) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f) << 6 |\n                    puVar10[4] & 0x3f) << 6 | puVar10[5] & 0x3f;\n            puVar7 = puVar10 + 6;\n        }\n    }\n    if (0xf < var_10h + -6) {\n        return 0xfffffff2;\n    }\n    // switch table (16 cases) at 0x43eb6e\n    switch(*((var_10h + -6) * 4 + 0x43eb6e)) {\n    case 0x43e183:\n        goto code_r0x0043e183;\n    case 0x43e33a:\n        if (uVar6 < 0xe) {\n            if (uVar6 == 0xd) {\n                if ((puVar7 < arg_1ch_00[0x1b]) && (*puVar7 == 10)) {\n                    puVar7 = puVar7 + 1;\n                }\n            }\n            else if (uVar6 != 10) {\n                if ((10 < uVar6) && (uVar6 < 0xd)) goto code_r0x0043e390;\n                goto code_r0x0043d2b3;\n            }\n        }\n        else {\n            if ((uVar6 != 0x85) && ((uVar6 < 0x2028 || (0x2029 < uVar6)))) goto code_r0x0043d2b3;\ncode_r0x0043e390:\n            if (arg_1ch_00[0x18] != 0) goto code_r0x0043d057;\n        }\n        break;\n    case 0x43e39f:\n        if (uVar6 < 0x180f) {\n            if (uVar6 == 0x180e) goto code_r0x0043ce34;\n            if (uVar6 < 0xa1) {\n                if (((uVar6 == 0xa0) || (uVar6 == 9)) || (uVar6 == 0x20)) goto code_r0x0043ce34;\n            }\n            else if (uVar6 == 0x1680) goto code_r0x0043ce34;\n        }\n        else if (uVar6 < 0x2060) {\n            if ((uVar6 == 0x205f) || ((0x1fff < uVar6 && ((uVar6 < 0x200b || (uVar6 == 0x202f))))))\n            goto code_r0x0043ce34;\n        }\n        else if (uVar6 == 0x3000) goto code_r0x0043ce34;\n        break;\n    case 0x43e423:\n        if (uVar6 < 0x180f) {\n            if (uVar6 != 0x180e) {\n                if (uVar6 < 0xa1) {\n                    if (((uVar6 != 0xa0) && (uVar6 != 9)) && (uVar6 != 0x20)) goto code_r0x0043d2b3;\n                }\n                else if (uVar6 != 0x1680) goto code_r0x0043d2b3;\n            }\n        }\n        else if (uVar6 < 0x2060) {\n            if ((uVar6 != 0x205f) && ((uVar6 < 0x2000 || ((0x200a < uVar6 && (uVar6 != 0x202f))))))\n            goto code_r0x0043d2b3;\n        }\n        else if (uVar6 != 0x3000) goto code_r0x0043d2b3;\n        break;\n    case 0x43e4a7:\n        if (uVar6 < 0x86) {\n            if ((uVar6 == 0x85) || ((9 < uVar6 && (uVar6 < 0xe)))) goto code_r0x0043d057;\n        }\n        else if ((0x2027 < uVar6) && (uVar6 < 0x202a)) goto code_r0x0043d057;\n        break;\n    case 0x43e4e6:\n        if (uVar6 < 0x86) {\n            if ((uVar6 != 0x85) && ((uVar6 < 10 || (0xd < uVar6)))) goto code_r0x0043ce34;\n        }\n        else if ((uVar6 < 0x2028) || (0x2029 < uVar6)) goto code_r0x0043ce34;\n        break;\n    case 0x43e525:\n        if ((uVar6 < 0x100) && ((*(uVar6 + arg_1ch_00[0xd]) & 4) != 0)) goto code_r0x0043d2b3;\n        break;\n    case 0x43e542:\n        if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 4) == 0)) goto code_r0x0043d057;\n        break;\n    case 0x43e55c:\n        if ((uVar6 < 0x100) && ((*(uVar6 + arg_1ch_00[0xd]) & 1) != 0)) goto code_r0x0043ce34;\n        break;\n    case 0x43e572:\n        if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 1) == 0)) goto code_r0x0043d2b3;\n        break;\n    case 0x43e58c:\n        if ((uVar6 < 0x100) && ((*(uVar6 + arg_1ch_00[0xd]) & 0x10) != 0)) goto code_r0x0043d057;\n        break;\n    case 0x43e5a2:\n        if ((0xff < uVar6) || ((*(uVar6 + arg_1ch_00[0xd]) & 0x10) == 0)) goto code_r0x0043ce34;\n    }\n    arg_1ch = arg_1ch + 1;\n    puVar11 = fcn.00436f5e(puVar7, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    puVar10 = puVar7;\n    if (puVar11 != NULL) {\n        return puVar11;\n    }\n    goto code_r0x0043e1d0;\ncode_r0x0043c408:\n    if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n        arg_1ch_00[0x17] = 1;\n        uVar6 = arg_1ch_00[0x1f];\njoined_r0x0043c743:\n        if (1 < uVar6) goto code_r0x0043d30f;\n    }\n    goto code_r0x0043c749;\ncode_r0x0043c4cb:\n    if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n       (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d13b;\ncode_r0x0043c749:\n    if (var_18h == NULL) {\n        if (var_14h <= arg_8h) {\n            var_8h = arg_2ch + 1;\n            do {\n                puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, \n                                       var_8h);\n                arg_8h = arg_8h + -1;\n                if (puVar10 != NULL) {\n                    return puVar10;\n                }\n            } while (var_14h <= arg_8h);\n        }\n        goto code_r0x0043c792;\n    }\n    goto code_r0x00436fae;\ncode_r0x0043b9bd:\n    if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\n        arg_1ch_00[0x17] = 1;\n        uVar6 = arg_1ch_00[0x1f];\njoined_r0x0043c1af:\n        if (1 < uVar6) goto code_r0x0043d13b;\n    }\ncode_r0x0043c2f7:\n    if (var_18h == NULL) {\n        var_8h = arg_2ch + 1;\n        puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n        if (puVar10 != NULL) {\n            return puVar10;\n        }\n        while (arg_8h != var_14h) {\n            uVar5 = arg_8h[-1];\n            arg_8h = arg_8h + -1;\n            while ((uVar5 & 0xc0) == 0x80) {\n                puVar10 = arg_8h + -1;\n                arg_8h = arg_8h + -1;\n                uVar5 = *puVar10;\n            }\n            puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n            if (puVar10 != NULL) {\n                return puVar10;\n            }\n        }\ncode_r0x0043c792:\n        arg_1ch_00[0x27] = arg_14h;\n        return NULL;\n    }\n    goto code_r0x00436fae;\ncode_r0x0043bc5f:\n    arg_8h = arg_8h + var_10h;\n    uVar6 = uVar6 + 1;\n    goto joined_r0x0043bb56;\ncode_r0x0043defe:\n    if (var_ch <= arg_1ch) goto code_r0x0043d2b3;\n    arg_8h = puVar10;\n    if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d324;\n    uVar5 = *puVar10;\n    puVar10 = puVar10 + 1;\n    if (var_4h == *(uVar5 + arg_1ch_00[0xc])) goto code_r0x0043d2b3;\n    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    arg_1ch = arg_1ch + 1;\n    if (puVar7 != NULL) {\n        return puVar7;\n    }\n    goto code_r0x0043defe;\ncode_r0x0043dd81:\n    if (var_ch <= arg_1ch) goto code_r0x0043ce34;\n    arg_8h = puVar10;\n    if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d2eb;\n    uVar5 = *puVar10;\n    uVar6 = uVar5;\n    puVar7 = puVar10 + 1;\n    if (0xbf < uVar6) {\n        if ((uVar5 & 0x20) == 0) {\n            uVar6 = (uVar6 & 0x1f) << 6 | *puVar7 & 0x3f;\n            puVar7 = puVar10 + 2;\n        }\n        else if ((uVar5 & 0x10) == 0) {\n            uVar6 = ((uVar6 & 0xf) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f;\n            puVar7 = puVar10 + 3;\n        }\n        else if ((uVar5 & 8) == 0) {\n            uVar6 = (((uVar6 & 7) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f;\n            puVar7 = puVar10 + 4;\n        }\n        else if ((uVar5 & 4) == 0) {\n            uVar6 = ((((uVar6 & 3) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f) << 6 |\n                    puVar10[4] & 0x3f;\n            puVar7 = puVar10 + 5;\n        }\n        else {\n            uVar6 = (((((uVar6 & 1) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f) << 6 |\n                    puVar10[4] & 0x3f) << 6 | puVar10[5] & 0x3f;\n            puVar7 = puVar10 + 6;\n        }\n    }\n    if (uVar6 < 0x100) {\n        uVar6 = *(uVar6 + arg_1ch_00[0xc]);\n    }\n    if (var_4h == uVar6) goto code_r0x0043ce34;\n    arg_1ch = arg_1ch + 1;\n    puVar11 = fcn.00436f5e(puVar7, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    puVar10 = puVar7;\n    if (puVar11 != NULL) {\n        return puVar11;\n    }\n    goto code_r0x0043dd81;\ncode_r0x0043df5a:\n    if ((arg_1ch_00[0x1f] == 0) || (arg_8h < arg_1ch_00[0x1e] || arg_8h == arg_1ch_00[0x1e])) goto code_r0x0043ce34;\n    arg_1ch_00[0x17] = 1;\n    uVar6 = arg_1ch_00[0x1f];\n    iVar9 = arg_1ch_00[0x1f] - 1;\n    bVar16 = iVar9 == 0;\n    goto code_r0x0043d169;\ncode_r0x0043dfbe:\n    if (var_ch <= arg_1ch) goto code_r0x0043ce34;\n    arg_8h = puVar10;\n    if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d2eb;\n    uVar5 = *puVar10;\n    uVar6 = uVar5;\n    puVar7 = puVar10 + 1;\n    if (0xbf < uVar6) {\n        if ((uVar5 & 0x20) == 0) {\n            uVar6 = (uVar6 & 0x1f) << 6 | *puVar7 & 0x3f;\n            puVar7 = puVar10 + 2;\n        }\n        else if ((uVar5 & 0x10) == 0) {\n            uVar6 = ((uVar6 & 0xf) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f;\n            puVar7 = puVar10 + 3;\n        }\n        else if ((uVar5 & 8) == 0) {\n            uVar6 = (((uVar6 & 7) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f;\n            puVar7 = puVar10 + 4;\n        }\n        else if ((uVar5 & 4) == 0) {\n            uVar6 = ((((uVar6 & 3) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f) << 6 |\n                    puVar10[4] & 0x3f;\n            puVar7 = puVar10 + 5;\n        }\n        else {\n            uVar6 = (((((uVar6 & 1) << 6 | *puVar7 & 0x3f) << 6 | puVar10[2] & 0x3f) << 6 | puVar10[3] & 0x3f) << 6 |\n                    puVar10[4] & 0x3f) << 6 | puVar10[5] & 0x3f;\n            puVar7 = puVar10 + 6;\n        }\n    }\n    if (var_4h == uVar6) goto code_r0x0043ce34;\n    puVar11 = fcn.00436f5e(puVar7, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    puVar10 = puVar7;\n    arg_1ch = arg_1ch + 1;\n    if (puVar11 != NULL) {\n        return puVar11;\n    }\n    goto code_r0x0043dfbe;\ncode_r0x0043e12e:\n    if (var_ch <= arg_1ch) goto code_r0x0043d057;\n    if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d89a;\n    uVar5 = *puVar10;\n    puVar10 = puVar10 + 1;\n    if (var_4h == uVar5) goto code_r0x0043d057;\n    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    arg_1ch = arg_1ch + 1;\n    if (puVar7 != NULL) {\n        return puVar7;\n    }\n    goto code_r0x0043e12e;\ncode_r0x0043db6e:\n    if (var_ch <= arg_1ch) goto code_r0x0043d057;\n    if ((arg_1ch_00[0x1b] - var_10h < arg_8h) || (iVar9 = fcn.00411b83(arg_8h, var_24h, var_10h),  iVar9 != 0)) {\n        if ((arg_1ch_00[0x1f] == 0) ||\n           ((arg_8h < arg_1ch_00[0x1b] || (arg_8h < arg_1ch_00[0x1e] || arg_8h == arg_1ch_00[0x1e]))))\n        goto code_r0x0043d2b3;\n        arg_1ch_00[0x17] = 1;\n        uVar6 = arg_1ch_00[0x1f];\n        goto joined_r0x0043d8b8;\n    }\n    arg_8h = arg_8h + var_10h;\n    arg_1ch = arg_1ch + 1;\n    puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    if (puVar10 != NULL) {\n        return puVar10;\n    }\n    goto code_r0x0043db6e;\ncode_r0x0043dcee:\n    if (var_ch <= arg_1ch) goto code_r0x0043d2b3;\n    arg_8h = puVar10;\n    if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d324;\n    uVar5 = *puVar10;\n    puVar10 = puVar10 + 1;\n    if (var_4h != uVar5) goto code_r0x0043d2b3;\n    arg_1ch = arg_1ch + 1;\n    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    if (puVar7 != NULL) {\n        return puVar7;\n    }\n    goto code_r0x0043dcee;\ncode_r0x0043dc5e:\n    if (var_ch <= arg_1ch) goto code_r0x0043d2b3;\n    arg_8h = puVar10;\n    if (arg_1ch_00[0x1b] <= puVar10) goto code_r0x0043d324;\n    uVar5 = *puVar10;\n    puVar10 = puVar10 + 1;\n    if (var_4h != *(uVar5 + arg_1ch_00[0xc])) goto code_r0x0043d2b3;\n    arg_1ch = arg_1ch + 1;\n    puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    if (puVar7 != NULL) {\n        return puVar7;\n    }\n    goto code_r0x0043dc5e;\ncode_r0x0043d324:\n    if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) {\ncode_r0x0043d163:\n        arg_1ch_00[0x17] = 1;\n        uVar6 = arg_1ch_00[0x1f];\n        uVar13 = arg_1ch_00[0x1f];\n        iVar9 = uVar13 - 1;\n        bVar16 = uVar13 == 1;\ncode_r0x0043d169:\n        if (!bVar16 && SBORROW4(uVar6, 1) == iVar9 < 0) {\ncode_r0x0043d16f:\n            arg_1ch_00[0x27] = arg_14h;\n            return 0xfffffff4;\n        }\n    }\n    goto code_r0x0043ce34;\ncode_r0x0043d2eb:\n    if (arg_1ch_00[0x1f] != 0) {\ncode_r0x0043d2f5:\n        if (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e]) {\ncode_r0x0043d303:\n            arg_1ch_00[0x17] = 1;\n            if (1 < arg_1ch_00[0x1f]) {\ncode_r0x0043d30f:\n                arg_1ch_00[0x27] = arg_14h;\n                return 0xfffffff4;\n            }\n        }\n    }\ncode_r0x0043d057:\n    arg_1ch_00[0x27] = arg_14h;\n    return NULL;\n    while( true ) {\n        if ((var_18h[*puVar10 >> 3] & 1 << (*puVar10 & 7)) == 0) break;\n        arg_1ch = arg_1ch + 1;\n        puVar10 = puVar10 + 1;\n        if (var_ch <= arg_1ch) break;\ncode_r0x0043d6ed:\n        if (arg_1ch_00[0x1b] <= puVar10) {\n            if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= puVar10 && puVar10 != arg_1ch_00[0x1e])) &&\n               (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d30f;\n            break;\n        }\n    }\n    if (arg_8h <= puVar10) {\ncode_r0x0043d73e:\n        var_8h = arg_2ch + 1;\n        do {\n            puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n            if (puVar7 != NULL) {\n                return puVar7;\n            }\n            puVar10 = puVar10 + -1;\n        } while (var_14h <= puVar10);\n    }\ncode_r0x0043d778:\n    arg_1ch_00[0x27] = arg_14h;\n    return NULL;\ncode_r0x0043e183:\n    return 0xfffffff2;\ncode_r0x0043d89a:\n    if ((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= puVar10 && puVar10 != arg_1ch_00[0x1e])) {\n        arg_1ch_00[0x17] = 1;\n        uVar6 = arg_1ch_00[0x1f];\njoined_r0x0043d8b8:\n        if (1 < uVar6) {\ncode_r0x0043d13b:\n            arg_1ch_00[0x27] = arg_14h;\n            return 0xfffffff4;\n        }\n    }\ncode_r0x0043d2b3:\n    arg_1ch_00[0x27] = arg_14h;\n    return NULL;\ncode_r0x0043d8d6:\n    do {\n        var_20h = 1;\n        if (arg_1ch_00[0x1b] <= arg_8h) {\n            if (((arg_1ch_00[0x1f] != 0) && (arg_1ch_00[0x1e] <= arg_8h && arg_8h != arg_1ch_00[0x1e])) &&\n               (arg_1ch_00[0x17] = 1,  1 < arg_1ch_00[0x1f])) goto code_r0x0043d13b;\n            break;\n        }\n        uVar5 = *arg_8h;\n        uVar6 = uVar5;\n        if ((var_1ch != 0) && (0xbf < uVar6)) {\n            if ((uVar5 & 0x20) == 0) {\n                uVar5 = arg_8h[1];\n                uVar6 = uVar6 & 0x1f;\n                var_20h = 2;\ncode_r0x0043d9ee:\n                uVar13 = uVar5 & 0x3f;\n                uVar6 = uVar6 << 6;\ncode_r0x0043d9f4:\n                uVar6 = uVar6 | uVar13;\n            }\n            else if ((uVar5 & 0x10) == 0) {\n                uVar6 = arg_8h[2] & 0x3f | (arg_8h[1] & 0x3f | (uVar6 & 0xf) << 6) << 6;\n                var_20h = 3;\n            }\n            else {\n                if ((uVar5 & 8) == 0) {\n                    uVar13 = ((arg_8h[1] & 0x3f | (uVar6 & 7) << 6) << 6 | arg_8h[2] & 0x3f) << 6;\n                    uVar6 = arg_8h[3] & 0x3f;\n                    var_20h = 4;\n                    goto code_r0x0043d9f4;\n                }\n                if ((uVar5 & 4) != 0) {\n                    uVar5 = arg_8h[5];\n                    uVar6 = arg_8h[4] & 0x3f |\n                            (((arg_8h[1] & 0x3f | (uVar6 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) <<\n                            6;\n                    var_20h = 6;\n                    goto code_r0x0043d9ee;\n                }\n                uVar6 = (arg_8h[3] & 0x3f | ((arg_8h[1] & 0x3f | (uVar6 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6) << 6 |\n                        arg_8h[4] & 0x3f;\n                var_20h = 5;\n            }\n        }\n        iVar9 = fcn.0042e930(uVar6, var_18h);\n        if (iVar9 == 0) break;\n        arg_8h = arg_8h + var_20h;\n        arg_1ch = arg_1ch + 1;\n    } while (arg_1ch < var_ch);\ncode_r0x0043da39:\n    var_8h = arg_2ch + 1;\n    puVar10 = fcn.00436f5e(arg_8h, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n    if (puVar10 != NULL) {\n        return puVar10;\n    }\n    while (puVar10 = arg_8h + -1,  arg_8h != var_14h) {\n        if (var_1ch != 0) {\n            uVar5 = *puVar10;\n            while ((uVar5 & 0xc0) == 0x80) {\n                puVar7 = puVar10 + -1;\n                puVar10 = puVar10 + -1;\n                uVar5 = *puVar7;\n            }\n        }\n        puVar7 = fcn.00436f5e(puVar10, puVar15, arg_10h, arg_14h, arg_18h, arg_1ch_00, arg_20h, arg_24h, 0, var_8h);\n        arg_8h = puVar10;\n        if (puVar7 != NULL) {\n            return puVar7;\n        }\n    }\ncode_r0x0043ce34:\n    arg_1ch_00[0x27] = arg_14h;\n    return NULL;\n}\n",
        "token_count": 71750
    },
    "0043eccf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043eccf(char *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    char *arg_8h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0xffffffff;\n    do {\n        arg_8h_00 = fcn.0042f8a5(arg_8h + 3, arg_ch, 1, 1);\n    // switch table (69 cases) at 0x43ed7b\n        switch(*arg_8h_00) {\n        default:\n            goto code_r0x0043ed2c;\n        case '\\'':\n            arg_8h_00 = arg_8h_00 + 2;\n        case '\\x1c':\n        case '\\x1d':\n        case '!':\n        case '\\\"':\n        case ')':\n            if (arg_10h == 0) {\ncode_r0x0043ed2c:\n                return 0xffffffff;\n            }\n            if (uVar3 < 0) {\n                uVar2 = arg_8h_00[1];\n                if ((*arg_ch & 1) != 0) {\n                    uVar2 = uVar2 | 0x100;\n                }\n            }\n            else {\n                uVar2 = arg_8h_00[1];\njoined_r0x0043ed2a:\n                bVar1 = uVar3 != uVar2;\n                uVar2 = uVar3;\n                if (bVar1) {\n                    return 0xffffffff;\n                }\n            }\n            break;\n        case 'X':\n        case ']':\n        case '^':\n        case '_':\n        case '`':\n            uVar2 = fcn.0043eccf(arg_8h_00, arg_ch, *arg_8h_00 == 'X');\n            if (uVar2 < 0) {\n                return 0xffffffff;\n            }\n            if (-1 < uVar3) goto joined_r0x0043ed2a;\n        }\n        arg_8h = arg_8h + CONCAT11(arg_8h[1], arg_8h[2]);\n        uVar3 = uVar2;\n        if (*arg_8h != 'T') {\n            return uVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 521
    },
    "0043efe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043efe4(uint8_t *arg_8h, int32_t arg_ch, uint8_t *arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    bool bVar14;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar9 = arg_18h;\n    puVar5 = arg_8h;\n    uVar6 = *arg_8h;\n    uVar7 = arg_14h & 8;\n    if (uVar7 != 0) {\ncode_r0x0043f014:\n        uVar4 = *(*arg_10h + *(iVar9 + 0xc));\n        while ((uVar4 & 1) != 0) {\n            puVar13 = arg_10h + 1;\n            arg_10h = arg_10h + 1;\n            uVar4 = *(*puVar13 + *(iVar9 + 0xc));\n        }\n        if (*arg_10h == 0x23) {\n            uVar4 = arg_10h[1];\n            puVar13 = arg_10h + 1;\n            while (arg_10h = puVar13,  uVar4 != 0) {\n                if (*(iVar9 + 0x58) == 0) {\n                    if (((puVar13 <= *(iVar9 + 0x1c) - *(iVar9 + 0x5c)) && (uVar4 == *(iVar9 + 0x60))) &&\n                       ((*(iVar9 + 0x5c) == 1 || (puVar13[1] == *(iVar9 + 0x61))))) goto code_r0x0043f06b;\n                }\n                else if ((puVar13 < *(iVar9 + 0x1c)) &&\n                        (iVar8 = fcn.0042efe8(puVar13, *(iVar9 + 0x58), *(iVar9 + 0x1c), iVar9 + 0x5c, arg_ch), \n                        iVar8 != 0)) {\ncode_r0x0043f06b:\n                    arg_10h = puVar13 + *(iVar9 + 0x5c);\n                    break;\n                }\n                arg_10h = puVar13 + 1;\n                if (arg_ch != 0) {\n                    uVar4 = *arg_10h;\n                    while ((uVar4 & 0xc0) == 0x80) {\n                        puVar13 = arg_10h + 1;\n                        arg_10h = arg_10h + 1;\n                        uVar4 = *puVar13;\n                    }\n                }\n                puVar13 = arg_10h;\n                uVar4 = *arg_10h;\n            }\n            goto code_r0x0043f014;\n        }\n    }\n    uVar4 = *arg_10h;\n    uVar10 = uVar4;\n    if (uVar4 == 0x5c) {\n        arg_8h = NULL;\n        uVar10 = fcn.0042fe8e(&arg_10h, &arg_8h, *(iVar9 + 0x34), arg_14h, 0);\n        puVar13 = arg_10h;\n        if (arg_8h != NULL) {\n            return false;\n        }\ncode_r0x0043f0c2:\n        puVar13 = puVar13 + 1;\n    }\n    else {\n        if ((*(uVar10 + *(iVar9 + 0xc)) & 0x80) != 0) {\n            return false;\n        }\n        puVar13 = arg_10h;\n        if (arg_ch == 0) goto code_r0x0043f0c2;\n        puVar13 = arg_10h + 1;\n        if (0xbf < uVar10) {\n            if ((uVar4 & 0x20) == 0) {\n                uVar10 = (uVar10 & 0x1f) << 6 | *puVar13 & 0x3f;\n                goto code_r0x0043f0c2;\n            }\n            if ((uVar4 & 0x10) == 0) {\n                uVar10 = ((uVar10 & 0xf) << 6 | *puVar13 & 0x3f) << 6 | arg_10h[2] & 0x3f;\n                puVar13 = arg_10h + 3;\n            }\n            else if ((uVar4 & 8) == 0) {\n                uVar10 = ((*puVar13 & 0x3f | (uVar10 & 7) << 6) << 6 | arg_10h[2] & 0x3f) << 6 | arg_10h[3] & 0x3f;\n                puVar13 = arg_10h + 4;\n            }\n            else if ((uVar4 & 4) == 0) {\n                uVar10 = (((*puVar13 & 0x3f | (uVar10 & 3) << 6) << 6 | arg_10h[2] & 0x3f) << 6 | arg_10h[3] & 0x3f) <<\n                         6 | arg_10h[4] & 0x3f;\n                puVar13 = arg_10h + 5;\n            }\n            else {\n                uVar10 = (((((uVar10 & 1) << 6 | *puVar13 & 0x3f) << 6 | arg_10h[2] & 0x3f) << 6 | arg_10h[3] & 0x3f) <<\n                          6 | arg_10h[4] & 0x3f) << 6 | arg_10h[5] & 0x3f;\n                puVar13 = arg_10h + 6;\n            }\n        }\n    }\n    iVar9 = arg_18h;\n    if (uVar7 != 0) {\ncode_r0x0043f0d4:\n        uVar4 = *(*puVar13 + *(iVar9 + 0xc));\n        while ((uVar4 & 1) != 0) {\n            puVar1 = puVar13 + 1;\n            puVar13 = puVar13 + 1;\n            uVar4 = *(*puVar1 + *(iVar9 + 0xc));\n        }\n        if (*puVar13 == 0x23) {\n            puVar1 = puVar13 + 1;\n            puVar13 = puVar13 + 1;\n            uVar4 = *puVar1;\n            while (uVar4 != 0) {\n                if (*(iVar9 + 0x58) == 0) {\n                    piVar2 = iVar9 + 0x5c;\n                    piVar3 = iVar9 + 0x1c;\n                    iVar9 = arg_18h;\n                    if (((puVar13 <= *piVar3 - *piVar2) && (uVar4 == *(arg_18h + 0x60))) &&\n                       ((*piVar2 == 1 || (puVar13[1] == *(arg_18h + 0x61))))) goto code_r0x0043f13b;\n                }\n                else if ((puVar13 < *(iVar9 + 0x1c)) &&\n                        (iVar8 = fcn.0042efe8(puVar13, *(iVar9 + 0x58), *(iVar9 + 0x1c), arg_18h + 0x5c, arg_ch), \n                        iVar9 = arg_18h,  iVar8 != 0)) {\ncode_r0x0043f13b:\n                    puVar13 = puVar13 + *(arg_18h + 0x5c);\n                    iVar9 = arg_18h;\n                    break;\n                }\n                puVar13 = puVar13 + 1;\n                if (arg_ch != 0) {\n                    uVar4 = *puVar13;\n                    while ((uVar4 & 0xc0) == 0x80) {\n                        puVar1 = puVar13 + 1;\n                        puVar13 = puVar13 + 1;\n                        uVar4 = *puVar1;\n                    }\n                }\n                uVar4 = *puVar13;\n            }\n            goto code_r0x0043f0d4;\n        }\n    }\n    if (*puVar13 == 0x2a) {\n        return false;\n    }\n    if (*puVar13 == 0x3f) {\n        return false;\n    }\n    iVar9 = fcn.00416af1(puVar13, 0x48bcfc, 3);\n    if (iVar9 == 0) {\n        return false;\n    }\n    if (-1 < uVar10) {\n        if (0x18 < uVar6 - 6) {\n            return false;\n        }\n    // switch table (25 cases) at 0x43fae4\n        switch(*(*(uVar6 + 0x43fb0e) * 4 + 0x43fae4)) {\n        case 0x43f306:\n            uVar4 = puVar5[1];\n            uVar6 = uVar4;\n            if ((arg_ch != 0) && (0xbf < uVar6)) {\n                if ((uVar4 & 0x20) == 0) {\n                    return ((uVar6 & 0x1f) << 6 | puVar5[2] & 0x3f) != uVar10;\n                }\n                if ((uVar4 & 0x10) == 0) {\n                    return (puVar5[3] & 0x3f | (puVar5[2] & 0x3f | (uVar6 & 0xf) << 6) << 6) != uVar10;\n                }\n                uVar11 = puVar5[3];\n                uVar7 = puVar5[2] & 0x3f;\n                if ((uVar4 & 8) == 0) {\n                    uVar7 = uVar7 | (uVar6 & 7) << 6;\n                    uVar4 = puVar5[4];\n                }\n                else {\n                    uVar12 = uVar11 & 0x3f;\n                    if ((uVar4 & 4) == 0) {\n                        return ((puVar5[4] & 0x3f | ((uVar7 | (uVar6 & 3) << 6) << 6 | uVar12) << 6) << 6 |\n                               puVar5[5] & 0x3f) != uVar10;\n                    }\n                    uVar11 = puVar5[5];\n                    uVar7 = ((uVar7 | (uVar6 & 1) << 6) << 6 | uVar12) << 6 | puVar5[4] & 0x3f;\n                    uVar4 = puVar5[6];\n                }\n                uVar6 = uVar4 & 0x3f | (uVar7 << 6 | uVar11 & 0x3f) << 6;\n            }\n            return uVar6 != uVar10;\n        case 0x43f40b:\n            uVar4 = puVar5[1];\n            uVar6 = uVar4;\n            if ((arg_ch != 0) && (0xbf < uVar6)) {\n                uVar7 = puVar5[2] & 0x3f;\n                if ((uVar4 & 0x20) == 0) {\n                    uVar6 = (uVar6 & 0x1f) << 6;\n                }\n                else {\n                    if ((uVar4 & 0x10) == 0) {\n                        uVar7 = uVar7 | (uVar6 & 0xf) << 6;\n                        uVar6 = puVar5[3];\n                    }\n                    else if ((uVar4 & 8) == 0) {\n                        uVar7 = (uVar7 | (uVar6 & 7) << 6) << 6 | puVar5[3] & 0x3f;\n                        uVar6 = puVar5[4];\n                    }\n                    else if ((uVar4 & 4) == 0) {\n                        uVar7 = ((uVar7 | (uVar6 & 3) << 6) << 6 | puVar5[3] & 0x3f) << 6 | puVar5[4] & 0x3f;\n                        uVar6 = puVar5[5];\n                    }\n                    else {\n                        uVar7 = (((uVar7 | (uVar6 & 1) << 6) << 6 | puVar5[3] & 0x3f) << 6 | puVar5[4] & 0x3f) << 6 |\n                                puVar5[5] & 0x3f;\n                        uVar6 = puVar5[6];\n                    }\n                    uVar7 = uVar7 << 6;\n                    uVar6 = uVar6 & 0x3f;\n                }\n                uVar6 = uVar6 | uVar7;\n            }\n            if (uVar6 == uVar10) {\n                return false;\n            }\n            if (arg_ch == 0) {\n                return uVar6 != *(*(arg_18h + 4) + uVar10);\n            }\n            if (0x7f < uVar10) {\n                return uVar6 != 0xffffffff;\n            }\n            return uVar6 != *(*(arg_18h + 4) + uVar10);\n        case 0x43f528:\n            uVar6 = puVar5[1];\n            if (uVar6 == uVar10) {\n                return true;\n            }\n            if ((arg_14h & 1) == 0) {\n                return false;\n            }\n            if (arg_ch == 0) {\n                return uVar6 == *(*(arg_18h + 4) + uVar10);\n            }\n            if (0x7f < uVar10) {\n                return uVar6 == 0xffffffff;\n            }\n            return uVar6 == *(*(arg_18h + 4) + uVar10);\n        case 0x43f593:\n            if (0x7f < uVar10) {\n                return true;\n            }\n            if ((*(uVar10 + *(arg_18h + 0xc)) & 4) != 0) {\n                return false;\n            }\n            return true;\n        case 0x43f5ad:\n            if (0x7f < uVar10) {\n                return false;\n            }\n            if ((*(uVar10 + *(arg_18h + 0xc)) & 4) == 0) {\n                return false;\n            }\n            return true;\n        case 0x43f5d2:\n            if (0x7f < uVar10) {\n                return true;\n            }\n            if ((*(uVar10 + *(arg_18h + 0xc)) & 1) != 0) {\n                return false;\n            }\n            return true;\n        case 0x43f5ec:\n            if (0x7f < uVar10) {\n                return false;\n            }\n            if ((*(uVar10 + *(arg_18h + 0xc)) & 1) == 0) {\n                return false;\n            }\n            return true;\n        case 0x43f611:\n            if ((uVar10 < 0x80) && ((*(uVar10 + *(arg_18h + 0xc)) & 0x10) != 0)) {\n                return false;\n            }\n            return true;\n        case 0x43f62b:\n            if (0x7f < uVar10) {\n                return false;\n            }\n            if ((*(uVar10 + *(arg_18h + 0xc)) & 0x10) == 0) {\n                return false;\n            }\n            return true;\n        case 0x43f650:\n            if (uVar10 < 0x180f) {\n                if (uVar10 != 0x180e) {\n                    if (uVar10 < 0xa1) {\n                        if (((uVar10 != 0xa0) && (uVar10 != 9)) && (uVar10 != 0x20)) goto code_r0x0043f6cd;\n                    }\n                    else if (uVar10 != 0x1680) {\n                        return uVar6 != 0x12;\n                    }\n                }\n            }\n            else if (uVar10 < 0x2060) {\n                if (uVar10 != 0x205f) {\n                    if (uVar10 < 0x2000) goto code_r0x0043f6cd;\n                    if ((0x200a < uVar10) && (uVar10 != 0x202f)) {\n                        return uVar6 != 0x12;\n                    }\n                }\n            }\n            else if (uVar10 != 0x3000) {\ncode_r0x0043f6cd:\n                return uVar6 != 0x12;\n            }\n            return uVar6 == 0x12;\n        case 0x43fad9:\n            return false;\n        }\n        if (uVar10 < 0x86) {\n            if ((uVar10 == 0x85) || ((9 < uVar10 && (uVar10 < 0xe)))) {\ncode_r0x0043f70f:\n                return uVar6 == 0x14;\n            }\n        }\n        else if ((0x2027 < uVar10) && (uVar10 < 0x202a)) goto code_r0x0043f70f;\n        return uVar6 != 0x14;\n    }\n    if (0x17 < uVar6 - 6) {\n        return false;\n    }\n    // switch table (24 cases) at 0x43fb30\n    switch(*(*(uVar6 + 0x43fb5a) * 4 + 0x43fb30)) {\n    case 0x43f73b:\n        uVar4 = puVar5[1];\n        uVar6 = uVar4;\n        if ((arg_ch != 0) && (0xbf < uVar6)) {\n            if ((uVar4 & 0x20) == 0) {\n                uVar7 = puVar5[2] & 0x3f;\n                uVar6 = (uVar6 & 0x1f) << 6;\n            }\n            else {\n                if ((uVar4 & 0x10) == 0) {\n                    uVar6 = puVar5[3] & 0x3f | (puVar5[2] & 0x3f | (uVar6 & 0xf) << 6) << 6;\n                    goto code_r0x0043f807;\n                }\n                uVar11 = puVar5[3];\n                uVar7 = puVar5[2] & 0x3f;\n                if ((uVar4 & 8) == 0) {\n                    uVar7 = uVar7 | (uVar6 & 7) << 6;\n                    uVar4 = puVar5[4];\n                }\n                else {\n                    uVar12 = uVar11 & 0x3f;\n                    if ((uVar4 & 4) == 0) {\n                        uVar6 = (puVar5[4] & 0x3f | ((uVar7 | (uVar6 & 3) << 6) << 6 | uVar12) << 6) << 6 |\n                                puVar5[5] & 0x3f;\n                        goto code_r0x0043f807;\n                    }\n                    uVar11 = puVar5[5];\n                    uVar7 = ((uVar7 | (uVar6 & 1) << 6) << 6 | uVar12) << 6 | puVar5[4] & 0x3f;\n                    uVar4 = puVar5[6];\n                }\n                uVar7 = (uVar7 << 6 | uVar11 & 0x3f) << 6;\n                uVar6 = uVar4 & 0x3f;\n            }\n            uVar6 = uVar6 | uVar7;\n        }\ncode_r0x0043f807:\n    // switch table (16 cases) at 0x43fb78\n        switch(-uVar10) {\n        case 6:\n            if ((uVar6 < 0x80) && ((*(uVar6 + *(arg_18h + 0xc)) & 4) != 0)) {\n                return true;\n            }\n            break;\n        case 7:\n            if (0x7f < uVar6) {\n                return true;\n            }\n            if ((*(uVar6 + *(arg_18h + 0xc)) & 4) != 0) {\n                return false;\n            }\n            return true;\n        case 8:\n            if ((uVar6 < 0x80) && ((*(uVar6 + *(arg_18h + 0xc)) & 1) != 0)) {\n                return true;\n            }\n            break;\n        case 9:\n            if (0x7f < uVar6) {\n                return true;\n            }\n            if ((*(uVar6 + *(arg_18h + 0xc)) & 1) != 0) {\n                return false;\n            }\n            return true;\n        case 10:\n            if ((uVar6 < 0x80) && ((*(uVar6 + *(arg_18h + 0xc)) & 0x10) != 0)) {\n                return true;\n            }\n            break;\n        case 0xb:\n            if (0x7f < uVar6) {\n                return true;\n            }\n            if ((*(uVar6 + *(arg_18h + 0xc)) & 0x10) != 0) {\n                return false;\n            }\n            return true;\n        case 0x12:\n        case 0x13:\n            if (uVar6 < 0x180f) {\n                if (uVar6 != 0x180e) {\n                    if (uVar6 < 0xa1) {\n                        if (((uVar6 != 0xa0) && (uVar6 != 9)) && (uVar6 != 0x20)) goto code_r0x0043f96d;\n                    }\n                    else if (uVar6 != 0x1680) {\n                        return uVar10 == 0xffffffed;\n                    }\n                }\n            }\n            else if (uVar6 < 0x2060) {\n                if (uVar6 != 0x205f) {\n                    if (uVar6 < 0x2000) goto code_r0x0043f96d;\n                    if ((0x200a < uVar6) && (uVar6 != 0x202f)) {\n                        return uVar10 == 0xffffffed;\n                    }\n                }\n            }\n            else if (uVar6 != 0x3000) {\ncode_r0x0043f96d:\n                return uVar10 == 0xffffffed;\n            }\n            return uVar10 != 0xffffffed;\n        case 0x14:\n        case 0x15:\n            if (uVar6 < 0x86) {\n                if ((uVar6 == 0x85) || ((9 < uVar6 && (uVar6 < 0xe)))) {\ncode_r0x0043f9ac:\n                    return uVar10 != 0xffffffeb;\n                }\n            }\n            else if ((0x2027 < uVar6) && (uVar6 < 0x202a)) goto code_r0x0043f9ac;\n            return uVar10 == 0xffffffeb;\n        }\ncode_r0x0043fad9:\n        return false;\n    case 0x43f9bb:\n        if (uVar10 == 0xfffffffa) {\n            return true;\n        }\n        if (uVar10 == 0xfffffff7) {\n            return true;\n        }\n        bVar14 = uVar10 == 0xfffffff6;\n        goto code_r0x0043f9d0;\n    case 0x43f9df:\n        goto code_r0x0043f9df;\n    case 0x43f9fa:\n        return uVar10 == 0xfffffff9;\n    case 0x43fa09:\n        if (uVar10 == 0xfffffff8) {\n            return true;\n        }\n        if (uVar10 == 0xfffffff9) {\n            return true;\n        }\n        bVar14 = uVar10 == 0xfffffff5;\n        goto code_r0x0043f9e2;\n    case 0x43fa20:\n        if (uVar10 == 0xfffffff7) {\n            return true;\n        }\n        if (uVar10 == 0xffffffed) {\n            return true;\n        }\n        bVar14 = uVar10 == 0xffffffeb;\n        break;\n    case 0x43fa37:\n        if (uVar10 == 0xfffffff8) {\n            return true;\n        }\n        if (uVar10 == 0xffffffee) {\n            return true;\n        }\n        if (uVar10 == 0xfffffff9) {\n            return true;\n        }\n        bVar14 = uVar10 == 0xfffffff5;\n        goto code_r0x0043f9d9;\n    case 0x43fa57:\n        return uVar10 == 0xffffffed;\n    case 0x43fa66:\n        if (uVar10 == 0xffffffec) {\n            return true;\n        }\n        if (uVar10 == 0xfffffff9) {\n            return true;\n        }\n        bVar14 = uVar10 == 0xfffffff5;\n        break;\n    case 0x43fa80:\n        if (uVar10 == 0xfffffff6) {\n            return true;\n        }\n        bVar14 = uVar10 == 0xfffffff7;\ncode_r0x0043f9d0:\n        if (bVar14) {\n            return true;\n        }\n        bVar14 = uVar10 == 0xffffffed;\ncode_r0x0043f9d9:\n        if (bVar14) {\n            return true;\n        }\ncode_r0x0043f9df:\n        bVar14 = uVar10 == 0xffffffeb;\ncode_r0x0043f9e2:\n        if (bVar14) {\n            return true;\n        }\n        bVar14 = uVar10 == 0xffffffef;\n        break;\n    case 0x43fa91:\n        if (uVar10 == 0xfffffff5) {\n            return true;\n        }\n        bVar14 = uVar10 == 0xfffffff9;\n        break;\n    case 0x43fad9:\n        goto code_r0x0043fad9;\n    }\n    if (!bVar14) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 6171
    },
    "0043fc4f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fc4f(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    uint8_t *arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    char *arg_8h_01;\n    \n    for (arg_8h_00 = fcn.0042f8a5(arg_8h + *(*arg_8h + 0x485228), 0, 0, 1); arg_8h_00 < arg_ch;\n        arg_8h_00 = fcn.0042f8a5(arg_8h_00 + *(uVar5 + 0x485228), 0, 0, 1)) {\n        uVar5 = *arg_8h_00;\n        if (uVar5 == 0x58) {\n            do {\n                arg_8h_00 = arg_8h_00 + CONCAT11(arg_8h_00[1], arg_8h_00[2]);\n            } while (*arg_8h_00 == 0x54);\ncode_r0x0043feb3:\n            uVar5 = *arg_8h_00;\n            goto code_r0x0043feb6;\n        }\n        if (((uVar5 == 0x69) || (uVar5 == 0x6a)) || (uVar5 == 0x76)) {\n            arg_8h_00 = arg_8h_00 + *(uVar5 + 0x485228);\n            do {\n                arg_8h_00 = arg_8h_00 + CONCAT11(arg_8h_00[1], arg_8h_00[2]);\n            } while (*arg_8h_00 == 0x54);\n            goto code_r0x0043feb3;\n        }\n        if (uVar5 == 0x52) {\n            arg_8h_01 = CONCAT11(arg_8h_00[1], arg_8h_00[2]) + *(arg_14h + 0x14);\n            if (CONCAT11(arg_8h_01[1], arg_8h_01[2]) == 0) {\n                return 1;\n            }\n            while (iVar3 = fcn.0043fc4f(arg_8h_01, arg_ch, arg_10h, arg_14h),  iVar3 == 0) {\n                arg_8h_01 = arg_8h_01 + CONCAT11(arg_8h_01[1], arg_8h_01[2]);\n                if (*arg_8h_01 != 'T') {\n                    return 0;\n                }\n            }\n            goto code_r0x0043feb6;\n        }\n        if (((uVar5 == 0x5e) || (uVar5 == 0x5f)) || (uVar5 == 0x5d)) {\ncode_r0x0043fe30:\n            uVar4 = CONCAT11(arg_8h_00[1], arg_8h_00[2]);\n            if (uVar4 == 0) {\n                return 1;\n            }\n            if ((uVar5 == 0x60) && (arg_8h_00[uVar4] != 0x54)) {\n                arg_8h_00 = arg_8h_00 + uVar4;\n            }\n            else {\n                bVar1 = false;\n                do {\n                    if ((!bVar1) && (iVar3 = fcn.0043fc4f(arg_8h_00, arg_ch, arg_10h, arg_14h),  iVar3 != 0)) {\n                        bVar1 = true;\n                    }\n                    arg_8h_00 = arg_8h_00 + CONCAT11(arg_8h_00[1], arg_8h_00[2]);\n                } while (*arg_8h_00 == 0x54);\n                if (!bVar1) {\n                    return 0;\n                }\n            }\n            goto code_r0x0043feb3;\n        }\n    // switch table (108 cases) at 0x43fee3\n        switch(uVar5) {\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x10:\n        case 0x16:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x21:\n        case 0x22:\n        case 0x27:\n        case 0x29:\n        case 0x2e:\n        case 0x2f:\n        case 0x34:\n        case 0x36:\n        case 0x3b:\n        case 0x3c:\n        case 0x41:\n        case 0x43:\n            goto code_r0x0043fd20;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n        case 0x14:\n        case 0x15:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x2c:\n        case 0x2d:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x35:\n        case 0x37:\n        case 0x38:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n        case 0x5e:\n        case 0x5f:\n        case 0x60:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6c:\n        case 0x6e:\n        case 0x70:\n            break;\n        case 0x1f:\n        case 0x20:\n        case 0x23:\n        case 0x24:\n        case 0x28:\n        case 0x2a:\n            if ((arg_10h != 0) && (0xbf < arg_8h_00[1])) {\n                arg_8h_00 = arg_8h_00 + *((arg_8h_00[1] & 0x3f) + 0x485318);\n            }\n            break;\n        case 0x25:\n        case 0x26:\n        case 0x2b:\n            if ((arg_10h != 0) && (0xbf < arg_8h_00[3])) {\n                arg_8h_00 = arg_8h_00 + *((arg_8h_00[3] & 0x3f) + 0x485318);\n            }\n            break;\n        case 0x39:\n        case 0x3a:\n        case 0x3d:\n        case 0x3e:\n        case 0x42:\n        case 0x44:\n            uVar2 = arg_8h_00[1];\n            goto code_r0x0043fdaf;\n        case 0x3f:\n        case 0x40:\n        case 0x45:\n            uVar2 = arg_8h_00[3];\ncode_r0x0043fdaf:\n            if ((uVar2 == 0x10) || (uVar2 == 0xf)) {\n                arg_8h_00 = arg_8h_00 + 2;\n            }\n            break;\n        case 0x4e:\n        case 0x4f:\n            puVar6 = arg_8h_00 + 0x21;\n            goto code_r0x0043fd7b;\n        case 0x50:\n            puVar6 = arg_8h_00 + CONCAT11(arg_8h_00[1], arg_8h_00[2]);\n            arg_8h_00 = puVar6;\ncode_r0x0043fd7b:\n    // switch table (8 cases) at 0x43ff7b\n            switch(*puVar6) {\n            case 0x46:\n            case 0x47:\n            case 0x4a:\n            case 0x4b:\n                break;\n            default:\ncode_r0x0043fd20:\n                return 0;\n            case 0x4c:\n            case 0x4d:\n                if (CONCAT11(puVar6[1], puVar6[2]) != 0) {\n                    return 0;\n                }\n            }\n            break;\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n            goto code_r0x0043fed9;\n        case 0x6b:\n        case 0x6d:\n        case 0x6f:\n            arg_8h_00 = arg_8h_00 + arg_8h_00[1];\n            break;\n        case 0x71:\n            arg_8h_00 = arg_8h_00 + arg_8h_00[3];\n            break;\n        default:\n            goto code_r0x0043fe30;\n        }\ncode_r0x0043feb6:\n    }\ncode_r0x0043fed9:\n    return 1;\n}\n",
        "token_count": 2314
    },
    "004400aa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004400aa(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t lpRect;\n    int32_t Y;\n    int32_t nWidth;\n    int32_t nHeight;\n    uint32_t var_ch;\n    uint32_t hWnd;\n    \n    iVar4 = fcn.00431228(0x4a8630, arg_8h);\n    piVar1 = **(*0x4a8690 + iVar4 * 4);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*piVar1, &lpRect);\n    iVar5 = lpRect - piVar1[0xf];\n    iVar4 = Y - piVar1[0x10];\n    if (piVar1[3] == -0x80000000) {\n        arg_8h = 0;\n        var_ch = *0x4a8694;\n        hWnd = 0;\n        if (*0x4a8694 != 0) {\n            do {\n                if (*0x4a8650 <= arg_8h) break;\n                piVar2 = *(*0x4a8690 + hWnd * 4);\n                if (*piVar2 != 0) {\n                    puVar3 = *piVar2;\n                    arg_8h = arg_8h + 1;\n                    if (puVar3[2] == *piVar1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(*puVar3, &lpRect);\n                        nHeight = nHeight - Y;\n                        nWidth = nWidth - lpRect;\n                        Y = Y + iVar4;\n                        lpRect = lpRect + iVar5;\n                        (*_sym.imp.USER32.dll_MoveWindow)(***(*0x4a8690 + hWnd * 4), lpRect, Y, nWidth, nHeight, 1);\n                    }\n                }\n                hWnd = hWnd + 1;\n            } while (hWnd < var_ch);\n        }\n    }\n    piVar1[0xf] = piVar1[0xf] + iVar5;\n    piVar1[0x10] = piVar1[0x10] + iVar4;\n    return;\n}\n",
        "token_count": 506
    },
    "0044018a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044018a(uint arg_8h, uint32_t arg_ch, uint lParam, int32_t wParam)\n\n{\n    *0x4a8658 = fcn.00431228(0x4a8630, arg_8h);\n    if ((arg_ch == 0) || (*(**(*0x4a8690 + *0x4a8658 * 4) + 0x18) == 0)) {\n        *0x4a8658 = -1;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 6, wParam << 0x10 | arg_ch & 0xffff, lParam);\n    return;\n}\n",
        "token_count": 157
    },
    "004401e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004401e4(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t lParam)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar6 = arg_ch;\n    iVar4 = fcn.00431228(0x4a8630, arg_8h);\n    puVar2 = **(*0x4a8690 + iVar4 * 4);\n    iVar4 = puVar2[0x11];\n    arg_ch = puVar2[0x12];\n    if (puVar2[0x68] != 0) {\n        iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n        arg_ch = arg_ch - iVar5;\n    }\n    if ((((0 < iVar4) && (0 < arg_ch)) && (0 < arg_10h)) && ((0 < lParam && (iVar6 != 1)))) {\n        var_18h = 3;\n        if (2 < *0x4a86b4) {\n            do {\n                piVar3 = **(*0x4a86a4 + var_18h * 4);\n                if (((piVar3 != NULL) && (piVar3[1] == puVar2[1])) && (*piVar3 != 0)) {\n                    var_4h = (*(piVar3 + 0x20) * arg_10h) / iVar4;\n                    iVar5 = *(piVar3 + 0x21);\n                    iVar7 = *(piVar3 + 0x86);\n                    iVar6 = (*(piVar3 + 0x82) * lParam) / arg_ch;\n                    var_ch = (iVar5 * arg_10h) / iVar4;\n                    var_8h = (iVar7 * lParam) / arg_ch;\n                    uVar1 = *(piVar3 + 0x7e);\n                    if (uVar1 != 0) {\n                        if (((uVar1 & 0x100) != 0) && (var_ch = iVar5,  (uVar1 & 6) == 0)) {\n                            if ((uVar1 & 8) == 0) {\n                                if (arg_10h / 2 < var_4h) {\n                                    var_4h = (arg_10h - (((iVar4 - *(piVar3 + 0x20)) - iVar5) * arg_10h) / iVar4) -\n                                             iVar5;\n                                }\n                            }\n                            else {\n                                var_4h = (arg_10h - iVar4) / 2 + *(piVar3 + 0x20);\n                            }\n                        }\n                        uVar1 = *(piVar3 + 0x7e);\n                        if (((uVar1 & 0x200) != 0) && (var_8h = iVar7,  (uVar1 & 0x60) == 0)) {\n                            if (uVar1 < '\\0') {\n                                iVar6 = (lParam - arg_ch) / 2 + *(piVar3 + 0x82);\n                            }\n                            else if (lParam / 2 < iVar6) {\n                                iVar6 = (lParam - (((arg_ch - *(piVar3 + 0x82)) - iVar7) * lParam) / arg_ch) - iVar7;\n                            }\n                        }\n                        uVar1 = *(piVar3 + 0x7e);\n                        if ((uVar1 & 2) != 0) {\n                            var_4h = *(piVar3 + 0x20);\n                        }\n                        if ((uVar1 & 4) != 0) {\n                            if ((uVar1 & 2) == 0) {\n                                var_4h = *(piVar3 + 0x20) + ((iVar5 - var_ch) - iVar4) + arg_10h;\n                            }\n                            else {\n                                var_ch = ((iVar5 - var_4h) - iVar4) + *(piVar3 + 0x20) + arg_10h;\n                            }\n                        }\n                        if ((uVar1 & 0x20) != 0) {\n                            iVar6 = *(piVar3 + 0x82);\n                        }\n                        if ((uVar1 & 0x40) != 0) {\n                            if ((uVar1 & 0x20) == 0) {\n                                iVar6 = *(piVar3 + 0x82) + ((iVar7 - var_8h) - arg_ch) + lParam;\n                            }\n                            else {\n                                var_8h = ((iVar7 - iVar6) - arg_ch) + *(piVar3 + 0x82) + lParam;\n                            }\n                        }\n                    }\n                    (*_sym.imp.USER32.dll_MoveWindow)(*piVar3, var_4h, iVar6, var_ch, var_8h, 0);\n                    if (*(piVar3 + 0x22) == '\\0') {\n                        (*_sym.imp.USER32.dll_SendMessageW)(*piVar3, 0x142, 0, 0xffff);\n                    }\n                    else if ((*(piVar3 + 0x22) == '\\x16') && ((*(piVar3 + 0x8a) & 0x20) == 0)) {\n                        (*_sym.imp.USER32.dll_SendMessageW)(*piVar3, 0x469, piVar3[0xc], 0);\n                        if ((*(piVar3 + 0x8b) != 0xff) && (*(piVar3 + 0x8b) != puVar2[0x65])) {\n                            (*_sym.imp.USER32.dll_ShowWindow)(*piVar3, 0);\n                        }\n                    }\n                }\n                var_18h = var_18h + 1;\n            } while (var_18h <= *0x4a86b4);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*puVar2, 0, 1);\n        *(puVar2 + 0x62) = 1;\n        *(puVar2 + 0x3a) = 0;\n        return;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 5, iVar6, arg_10h & 0xffff | lParam << 0x10);\n    return;\n}\n",
        "token_count": 1473
    },
    "00440709": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440709(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(arg_ch + 4);\n    if (*(arg_ch + 0x194) != arg_10h) {\n        iVar4 = 3;\n        if (2 < *(arg_8h + 0x84)) {\n            do {\n                piVar2 = *(*(arg_8h + 0x74) + iVar4 * 4);\n                if ((((*piVar2 != 0) && (puVar3 = *piVar2,  puVar3[1] == iVar1)) && (*(puVar3 + 0x22) != '\\v')) &&\n                   ((*(puVar3 + 0x8b) == *(arg_ch + 0x194) ||\n                    (((*(arg_ch + 0x19c) != '\\0' && (*(puVar3 + 0x8b) != 0xff)) && (*(puVar3 + 0x22) != '\\n')))))) {\n                    (*_sym.imp.USER32.dll_ShowWindow)(*puVar3, 0);\n                    puVar3 = **(*(arg_8h + 0x74) + iVar4 * 4);\n                    if (((*(puVar3 + 0x8a) & 0x40) != 0) && (*(puVar3 + 0x22) == '\\x1a')) {\n                        (*_sym.imp.USER32.dll_EnableWindow)(*puVar3, 0);\n                    }\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 <= *(arg_8h + 0x84));\n        }\n        *(arg_ch + 0x194) = arg_10h;\n    }\n    iVar4 = 3;\n    if (2 < *(arg_8h + 0x84)) {\n        do {\n            piVar2 = *(*(arg_8h + 0x74) + iVar4 * 4);\n            if ((((*piVar2 != 0) && (puVar3 = *piVar2,  puVar3[1] == iVar1)) && (*(puVar3 + 0x22) != '\\v')) &&\n               ((*(puVar3 + 0x8b) == *(arg_ch + 0x194) && ((*(puVar3 + 0x8a) & 0x20) == 0)))) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*puVar3, 0);\n                (*_sym.imp.USER32.dll_ShowWindow)(***(*(arg_8h + 0x74) + iVar4 * 4), 4);\n                puVar3 = **(*(arg_8h + 0x74) + iVar4 * 4);\n                if (((*(puVar3 + 0x8a) & 0x40) != 0) && (*(puVar3 + 0x22) == '\\x1a')) {\n                    (*_sym.imp.USER32.dll_EnableWindow)(*puVar3, 1);\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 <= *(arg_8h + 0x84));\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*(arg_ch + 0x18c), 0x130c, arg_10h, 0);\n    return;\n}\n",
        "token_count": 777
    },
    "0044087e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044087e(uint *arg_8h, int32_t arg_ch, uint arg_10h, int16_t *arg_14h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_1ch;\n    int16_t *var_10h;\n    uint var_4h;\n    \n    if (arg_8h[99] == 0) {\n        return 0;\n    }\n    if (*arg_14h != 0) {\n        arg_8h[100] = arg_8h[100] + 1;\n        var_10h = arg_14h;\n        var_4h = arg_10h;\n        var_1ch = 9;\n        (*_sym.imp.USER32.dll_SendMessageW)(arg_8h[99], 0x133e, arg_8h[100], &var_1ch);\n        uVar1 = arg_8h[100];\n        arg_8h[0x65] = uVar1;\n        *(arg_8h + 0x67) = 1;\n        *(arg_ch + 0x80) = 0xffff;\n        return CONCAT31(uVar1 >> 8, 1);\n    }\n    uVar1 = arg_8h[0x66];\n    if (*(arg_8h + 0xe) != '\\0') {\n        uVar1 = arg_8h[0x65];\n        arg_8h[0x65] = 0xffffffff;\n    }\n    uVar2 = fcn.00440709(0x4a8630, arg_8h, uVar1);\n    *(arg_8h + 0x67) = 0;\n    if (*(arg_8h + 0xe) != '\\0') {\n        uVar2 = (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h, 0, 1);\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 442
    },
    "00440945": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00440945(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 2;\n    }\n    else if (0xf < arg_28h) goto code_r0x00440a08;\n    arg_28h = arg_28h | 2;\ncode_r0x00440a08:\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    if ((arg_2ch < 0) || (*arg_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.00430817(arg_8h, 0, L\"SysAnimate32\", 0, arg_28h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 0);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x467, 0, arg_14h);\n    if (((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(arg_14h),  iVar2 != 0)) &&\n       (iVar2 = (*pcVar1)(*arg_ch, 0x467, iVar2, arg_2ch),  iVar2 == 0)) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n        return 0;\n    }\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 0x300;\n    }\n    return 1;\n}\n",
        "token_count": 512
    },
    "00440a94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440a94(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(***(*0x4a86a4 + arg_8h * 4), 0xf0, 0, 0);\n    if ((iVar2 != 0) || (arg_ch != 0)) {\n        iVar2 = arg_8h;\n        if (2 < arg_8h) {\n            do {\n                piVar1 = *(*0x4a86a4 + iVar2 * 4);\n                if ((*piVar1 == 0) || (*(*piVar1 + 0x88) != '\\x1a')) break;\n                uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(***(*0x4a86a4 + iVar2 * 4), 0xfffffff0);\n                if ((uVar3 & 0x20000) != 0) goto code_r0x00440b0a;\n                iVar2 = iVar2 + -1;\n            } while (2 < iVar2);\n        }\n        iVar2 = iVar2 + 1;\ncode_r0x00440b0a:\n        iVar5 = arg_8h + 1;\n        if (iVar5 <= *0x4a86b4) {\n            do {\n                piVar1 = *(*0x4a86a4 + iVar5 * 4);\n                if (((*piVar1 == 0) || (*(*piVar1 + 0x88) != '\\x1a')) ||\n                   (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(***(*0x4a86a4 + iVar5 * 4), 0xfffffff0), \n                   (uVar3 & 0x20000) != 0)) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 <= *0x4a86b4);\n        }\n        for (iVar4 = iVar2; iVar4 <= iVar5 + -1; iVar4 = iVar4 + 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(***(*0x4a86a4 + iVar4 * 4), 0xf1, 0, 0);\n        }\n        if (arg_ch == 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(***(*0x4a86a4 + arg_8h * 4), 0xf1, 1, 0);\n            return;\n        }\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(***(*0x4a86a4 + iVar2 * 4), 0xfffffff0);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(***(*0x4a86a4 + iVar2 * 4), 0xfffffff0, uVar3 | 0x10000);\n    }\n    return;\n}\n",
        "token_count": 691
    },
    "00440c06": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00440c06(uint arg_8h, uint *arg_ch, uint *arg_10h, int32_t arg_14h, uint arg_18h, uint32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    uVar1 = *arg_ch;\n    if (arg_ch[0x10] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(arg_ch[0x10]);\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n    iVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    iVar4 = (iVar4 * arg_14h * 0x49f49f49 >> 0x20) - iVar4 * arg_14h;\n    uVar3 = (*_sym.imp.GDI32.dll_CreateFontW)\n                      ((iVar4 >> 9) - (iVar4 >> 0x1f), 0, 0, 0, arg_18h, arg_1ch & 2, arg_1ch & 4, arg_1ch & 8, 1, 4, 0\n                       , arg_20h, 0, *arg_10h);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x30, uVar3, 1);\n    if ((*(arg_ch + 0x22) == '\\x01') && (arg_24h != '\\0')) {\n        (*_sym.imp.USER32.dll_MoveWindow)\n                  (*arg_ch, *(arg_ch + 0x20), *(arg_ch + 0x82), *(arg_ch + 0x21), *(arg_ch + 0x86), 0);\n    }\n    if ((*(arg_ch + 0x22) == '\\0') && (arg_24h != '\\0')) {\n        (*pcVar2)(uVar1, 0x142, 0, 0);\n    }\n    arg_ch[0x10] = uVar3;\n    fcn.004311a6(arg_8h, arg_ch, 1);\n    return;\n}\n",
        "token_count": 547
    },
    "00440d74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440d74(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    if (arg_10h != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_10h);\n    }\n    if (*0x4a869c != -1) {\n        puVar1 = **(*0x4a8690 + *0x4a869c * 4);\n        uVar2 = *puVar1;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n        if (((arg_8h == 0xffffffff) ||\n            (iVar4 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, arg_8h),  iVar4 != 0)) &&\n           ((arg_ch == -1 || (iVar4 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, arg_ch),  iVar4 != 0))))\n        {\n            if (*(puVar1 + 0xe) != '\\0') {\n                bVar5 = (arg_8h & 0xc00000) == 0xc00000;\n                if (((uVar3 & 0xc00000) == 0xc00000) != bVar5) {\n                    if (bVar5) {\n                        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)();\n                        puVar1[0x12] = puVar1[0x12] + iVar4;\n                    }\n                    else {\n                        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n                        puVar1[0x12] = puVar1[0x12] - iVar4;\n                    }\n                }\n                (*_sym.imp.USER32.dll_SetWindowPos)(uVar2, 0, 0, 0, 0, 0, 0x47);\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 502
    },
    "00440e61": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440e61(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *arg_ch_00;\n    uint hWnd;\n    \n    if (arg_ch != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_ch);\n    }\n    if (*0x4a869c != -1) {\n        arg_ch_00 = **(*0x4a8690 + *0x4a869c * 4);\n        hWnd = *arg_ch_00;\n        if (((*(arg_ch_00 + 0x3a) != '\\0') && (*(arg_ch_00 + 0x3a) = 0,  -1 < arg_ch_00[100])) &&\n           (*(arg_ch_00 + 0x67) != '\\0')) {\n            fcn.00440709(0x4a8630, arg_ch_00, arg_ch_00[0x66]);\n            *(arg_ch_00 + 0x67) = 0;\n        }\n        if (arg_8h < 0x44) {\n    // switch table (68 cases) at 0x440ff1\n            switch(*(*(arg_8h + 0x441019) * 4 + 0x440ff1)) {\n            case 0x440ee3:\n                if (*(arg_ch_00 + 0xe) != '\\0') {\n                    (*_sym.imp.USER32.dll_ShowWindow)(hWnd, arg_8h);\n                    fcn.004349fb(hWnd);\n                    return 1;\n                }\n                break;\n            case 0x440f07:\n                if (*(arg_ch_00 + 0xe) == '\\0') {\n                    (*_sym.imp.USER32.dll_ShowWindow)(hWnd, arg_8h);\n                    if ((arg_8h != 8) && (arg_8h != 4)) {\n                        fcn.004349fb(hWnd);\n                    }\n                    *(arg_ch_00 + 0xe) = 1;\n                    return 1;\n                }\n                break;\n            case 0x440f35:\n                (*_sym.imp.USER32.dll_ShowWindow)(hWnd, 0);\n                *(arg_ch_00 + 0xe) = 0;\n                return 1;\n            case 0x440f4e:\n                *(arg_ch_00 + 0xe) = 1;\n            case 0x440f52:\n                if (*(arg_ch_00 + 0xe) != '\\0') {\n                    (*_sym.imp.USER32.dll_ShowWindow)(hWnd, 6);\n                    return 1;\n                }\n                break;\n            case 0x440f76:\n                (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 0);\n                return 1;\n            case 0x440f8b:\n                (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n                return 1;\n            case 0x440fa0:\n                *(arg_ch_00 + 0x39) = 1;\n                (*_sym.imp.USER32.dll_LockWindowUpdate)(hWnd);\n                return 1;\n            case 0x440fb7:\n                *(arg_ch_00 + 0x39) = 0;\n                (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n                (*_sym.imp.USER32.dll_InvalidateRect)(*arg_ch_00, 0, 1);\n                return 1;\n            case 0x440fd0:\n                return 1;\n            }\n            return 0;\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 799
    },
    "004410a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004410a6(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint var_8h;\n    int32_t **var_4h;\n    \n    var_4h = NULL;\n    var_8h = *0x4a86b8;\n    fcn.004304c7(&var_4h, &var_8h);\n    while( true ) {\n        cVar2 = fcn.00441fc1(&var_4h, 0);\n        if (cVar2 == '\\0') {\n            return 0;\n        }\n        if (**var_4h == arg_8h) break;\n        fcn.00440543(&var_4h, &var_8h);\n    }\n    piVar1 = *var_4h + 1;\n    *piVar1 = *piVar1 + -1;\n    if ((*var_4h)[1] == 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)((*var_4h)[2]);\n        fcn.004304dc(0x4a86b8, &var_4h);\n    }\n    return 1;\n}\n",
        "token_count": 270
    },
    "00441240": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441240(int32_t arg_8h, uint cAccel, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (arg_10h != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_10h);\n    }\n    if (*0x4a869c != -1) {\n        piVar1 = **(*0x4a8690 + *0x4a869c * 4);\n        if (piVar1[6] != 0) {\n            if (*0x4a8658 == *0x4a869c) {\n                *0x4a8658 = -1;\n            }\n            (*_sym.imp.USER32.dll_DestroyAcceleratorTable)(piVar1[6]);\n            piVar1[6] = 0;\n        }\n        if (arg_8h != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_CreateAcceleratorTableW)(arg_8h, cAccel);\n            piVar1[6] = iVar2;\n            iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            if (*piVar1 == iVar2) {\n                *0x4a8658 = *0x4a869c;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "004412cd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004412cd(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *arg_ch_00;\n    uint uVar2;\n    code *pcVar3;\n    \n    if ((arg_8h != -1) && (arg_ch != -1)) {\n        puVar1 = **(*0x4a8690 + arg_8h * 4);\n        arg_ch_00 = **(*0x4a86a4 + arg_ch * 4);\n        if (puVar1[0x74] != 0) {\n            fcn.00435804(puVar1[0x74], arg_ch_00);\n        }\n        if (**(*0x4a86a4 + arg_ch * 4) == 0) {\n            puVar1[7] = 0xffffffff;\n            return;\n        }\n        uVar2 = *arg_ch_00;\n        puVar1[7] = arg_ch;\n        pcVar3 = _sym.imp.USER32.dll_PostMessageW;\n        (*_sym.imp.USER32.dll_PostMessageW)(*puVar1, 0x28, uVar2, 1);\n        if (*(arg_ch_00 + 0x22) == '\\x02') {\n            (*pcVar3)(uVar2, 0xb1, puVar1[0x70], puVar1[0x71]);\n        }\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0044136e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044136e(int32_t *hWnd, uint lpPoint, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    var_8h = -1;\n    var_ch = -1;\n    (*_sym.imp.USER32.dll_ClientToScreen)(***(*0x4a8690 + *hWnd * 4), &lpPoint);\n    iVar3 = *0x4a8694;\n    iVar5 = 0;\n    if (0 < *0x4a8694) {\n        do {\n            var_10h = **(*0x4a8690 + iVar5 * 4);\n            if ((var_10h != 0) && (iVar6 = 3,  2 < *0x4a86b4)) {\n                do {\n                    piVar1 = *(*0x4a86a4 + iVar6 * 4);\n                    if (((*piVar1 != 0) &&\n                        ((puVar2 = *piVar1,  puVar2[1] == *(var_10h + 4) && ((*(puVar2 + 0x8a) & 0x20) == 0)))) &&\n                       ((*(puVar2 + 0x8b) == 0xff || (*(puVar2 + 0x8b) == *(var_10h + 0x194))))) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(*puVar2, &lpRect);\n                        iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n                        if (iVar4 != 0) {\n                            if (*hWnd != iVar5) {\n                                var_ch = iVar5;\n                            }\n                            if ((*(**(*0x4a86a4 + iVar6 * 4) + 0x8a) & 8) != 0) {\n                                if (*hWnd != iVar5) {\n                                    *hWnd = var_ch;\n                                }\n                                return iVar6;\n                            }\n                            if (var_8h < 0) {\n                                var_8h = iVar6;\n                            }\n                        }\n                    }\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 <= *0x4a86b4);\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar3);\n        if (-1 < var_8h) {\n            if (var_ch < 0) {\n                return var_8h;\n            }\n            *hWnd = var_ch;\n            return var_8h;\n        }\n    }\n    (*_sym.imp.USER32.dll_MessageBeep)(0);\n    return -1;\n}\n",
        "token_count": 658
    },
    "004414bb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004414bb(int32_t arg_8h, int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint uStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t iStack164;\n    uchar *puStack160;\n    int32_t iStack156;\n    uchar *puStack152;\n    uint uStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    int32_t iStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    int32_t iStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    uint uStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint uStack88;\n    int32_t iStack84;\n    uint uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint uStack44;\n    uint32_t uStack36;\n    \n    if (*0x49751c == 0) {\n        uStack52 = *(arg_8h + 0x10);\n        iVar1 = *(arg_8h + 0x18);\n        uVar6 = uStack52 & 6;\n        uStack48 = uStack52 & 0x10;\n        uStack52 = uStack52 & 1;\n        uStack36 = uVar6;\n        if ((uVar6 != 0) || (hWnd[0x12] == -1)) {\n            (*_sym.imp.USER32.dll_GetSysColor)();\n        }\n        iStack84 = 0x441528;\n        iVar4 = iVar1;\n        uStack52 = (*_sym.imp.GDI32.dll_SetTextColor)();\n        iStack84 = hWnd[0x11];\n        if (iStack84 == -1) {\n            iStack84 = 0xf;\n            uStack88 = 0x44153f;\n            (*_sym.imp.USER32.dll_GetSysColorBrush)();\n            uStack88 = 0xf;\n            iStack92 = 0x44154b;\n            iStack92 = (*_sym.imp.USER32.dll_GetSysColor)();\n        }\n        else {\n            uStack88 = 0x441554;\n            (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n            iStack92 = hWnd[0x11];\n        }\n        iStack100 = 0x441566;\n        iStack96 = iVar1;\n        uStack52 = (*_sym.imp.GDI32.dll_SetBkColor)();\n        iStack100 = iVar4;\n        uStack108 = 0x441576;\n        iStack104 = iVar1;\n        iVar4 = iStack100;\n        (*_sym.imp.GDI32.dll_SelectObject)();\n        uStack56 = *(arg_8h + 0x1c);\n        uStack48 = *(arg_8h + 0x24);\n        uStack52 = *(arg_8h + 0x20);\n        uStack44 = *(arg_8h + 0x28);\n        if (iStack84 == 0) {\n            if (iVar4 != 0) {\n                uStack108 = 0xffffffff;\n                iStack112 = 0xffffffff;\n                puStack116 = &stack0xffffffc8;\n                iStack120 = 0x4415ef;\n                (*_sym.imp.USER32.dll_InflateRect)();\n            }\n            uStack108 = 0x10;\n            iStack112 = 4;\n            puStack116 = &stack0xffffffc8;\n            uStack124 = 0x4415ff;\n            iStack120 = iVar1;\n            (*_sym.imp.USER32.dll_DrawFrameControl)();\n        }\n        else {\n            uStack108 = 0xffffffff;\n            iStack112 = -1;\n            puStack116 = &stack0xffffffc8;\n            iStack120 = 0x4415ac;\n            (*_sym.imp.USER32.dll_InflateRect)();\n            iStack120 = 0x10;\n            uStack124 = 0x4415b4;\n            uStack124 = (*_sym.imp.USER32.dll_GetSysColor)();\n            uStack128 = 0x4415bb;\n            uStack128 = (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n            puStack132 = &stack0xffffffb4;\n            iStack140 = 0x4415cc;\n            iStack136 = iVar1;\n            iStack92 = uStack128;\n            (*_sym.imp.USER32.dll_FrameRect)();\n            iStack140 = iStack104;\n            iStack144 = 0x4415d7;\n            (*_sym.imp.GDI32.dll_DeleteObject)();\n        }\n        iStack92 = *(arg_8h + 0x1c);\n        uStack88 = *(arg_8h + 0x20);\n        iStack84 = *(arg_8h + 0x24);\n        if (iStack120 == 0) {\n            if (puStack116 == NULL) {\n                iStack144 = -2;\n                uStack148 = 0xfffffffe;\n            }\n            else {\n                iStack144 = -3;\n                uStack148 = 0xfffffffd;\n            }\n            puStack152 = &stack0xffffffa4;\n            iStack156 = 0x441654;\n            (*_sym.imp.USER32.dll_InflateRect)();\n            iStack104 = iStack104 + -1;\n            iStack100 = iStack100 + -1;\n        }\n        else {\n            iStack144 = -2;\n            uStack148 = 0xfffffffe;\n            puStack152 = &stack0xffffffa4;\n            iStack156 = 0x441631;\n            (*_sym.imp.USER32.dll_InflateRect)();\n        }\n        iStack156 = iStack136;\n        puStack160 = &stack0xffffff98;\n        iStack168 = 0x441672;\n        iStack164 = iVar1;\n        (*_sym.imp.USER32.dll_FillRect)();\n        if ((iStack144 != 0) || (uVar6 != 0)) {\n            puStack116 = puStack116 + 2;\n            iStack112 = iStack112 + 2;\n        }\n        iStack172 = *hWnd;\n        iStack168 = -0x10;\n        iStack144 = 0x105;\n        uStack176 = 0x4416a0;\n        uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n        if ((uVar6 & 0x2000) == 0) {\n            puStack152 = 0x125;\n        }\n        uStack176 = 0;\n        uStack180 = 0;\n        iStack184 = 0xe;\n        iVar4 = (*_sym.imp.USER32.dll_SendMessageW)();\n        iVar2 = (iVar4 + 1) * 2;\n        iStack196 = 0x4416d9;\n        iStack196 = fcn.00411777(-(iVar2 >> 0x20 != 0) | iVar2);\n        iStack200 = *hWnd;\n        uStack204 = 0x4416ee;\n        iStack156 = iStack196;\n        (*_sym.imp.USER32.dll_GetWindowTextW)();\n        iVar4 = iStack168;\n        uStack204 = uStack180;\n        uVar3 = 0xffffffff;\n        (*_sym.imp.USER32.dll_DrawTextW)(iVar1, iStack168, 0xffffffff, &stack0xffffff68);\n        if (iStack184 != 0) {\n            iStack164 = *(arg_8h + 0x24);\n            puStack160 = *(arg_8h + 0x28);\n            iStack172 = *(arg_8h + 0x1c) + 1;\n            iStack168 = *(arg_8h + 0x20) + 1;\n            uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n            (*_sym.imp.GDI32.dll_SetTextColor)(iVar1, uVar5);\n            (*_sym.imp.USER32.dll_DrawTextW)(iVar1, iVar4, 0xffffffff, &stack0xffffff48, uVar3);\n        }\n        if (iStack196 != 0) {\n            iStack172 = *(arg_8h + 0x1c);\n            iStack168 = *(arg_8h + 0x20);\n            iStack164 = *(arg_8h + 0x24);\n            puStack160 = *(arg_8h + 0x28);\n            uVar5 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(0);\n            (*_sym.imp.USER32.dll_FrameRect)(iVar1, &stack0xffffff50, uVar5);\n            (*_sym.imp.GDI32.dll_DeleteObject)(uVar5);\n            (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff40, 0xfffffffc, 0xfffffffc);\n            (*_sym.imp.USER32.dll_DrawFocusRect)(iVar1, &stack0xffffff34);\n        }\n        fcn.0041137c(iVar4);\n        (*_sym.imp.GDI32.dll_SelectObject)(iVar1, uStack180);\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar3);\n        (*_sym.imp.GDI32.dll_SetTextColor)(iVar1, uStack204);\n        (*_sym.imp.GDI32.dll_SetBkColor)(iVar1, iStack196);\n        return 1;\n    }\n    iStack84 = 0x4414dd;\n    uVar3 = fcn.00430f0e(arg_8h, hWnd);\n    return uVar3;\n}\n",
        "token_count": 2201
    },
    "004417f1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004417f1(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (arg_ch < 0) {\n        iVar2 = *(arg_8h + 0x98);\n        if ((iVar2 == -1) || (arg_ch = *(arg_8h + 0x94),  arg_ch == 0xffffffff)) goto code_r0x00441870;\n        *arg_14h = arg_ch;\n    }\n    else {\n        if (((arg_ch < 3) || (*(arg_8h + 0x84) < arg_ch)) || (piVar1 = *(*(arg_8h + 0x74) + arg_ch * 4),  *piVar1 == 0))\n        goto code_r0x00441870;\n        *arg_14h = arg_ch;\n        iVar2 = *(*piVar1 + 4);\n    }\n    *arg_10h = iVar2;\n    arg_ch = *(*(arg_8h + 0x60) + iVar2 * 4);\n    if (((*arg_ch != 0) && (arg_ch = *arg_14h,  2 < arg_ch)) &&\n       ((arg_ch <= *(arg_8h + 0x84) && (**(*(arg_8h + 0x74) + arg_ch * 4) != 0)))) {\n        return CONCAT31(arg_ch >> 8, 1);\n    }\ncode_r0x00441870:\n    return arg_ch & 0xffffff00;\n}\n",
        "token_count": 376
    },
    "00441878": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00441878(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if ((((*0x496630 != -1) && (*0x496630 <= *(arg_8h + 0x84))) &&\n        (ppiVar1 = *(*(arg_8h + 0x74) + *0x496630 * 4),  *ppiVar1 != NULL)) && (**ppiVar1 == arg_ch)) {\n        return *0x496630;\n    }\n    iVar2 = 3;\n    if (2 < *(arg_8h + 0x84)) {\n        puVar3 = *(arg_8h + 0x74) + 0xc;\n        do {\n            if ((**puVar3 != NULL) && (***puVar3 == arg_ch)) {\n                *0x496630 = iVar2;\n                return iVar2;\n            }\n            iVar2 = iVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (iVar2 <= *(arg_8h + 0x84));\n    }\n    return -1;\n}\n",
        "token_count": 272
    },
    "00441ed0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00441ed0(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    \n    *arg_8h = 0x489dd0;\n    arg_8h[2] = *(arg_ch + 8);\n    uVar3 = *(arg_ch + 8);\n    arg_8h[3] = uVar3;\n    if (arg_8h[2] != 0) {\n        uVar2 = fcn.00431cd6(uVar3);\n        arg_8h[3] = uVar2;\n        uVar3 = fcn.00411777(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        uVar2 = 0;\n        arg_8h[1] = uVar3;\n        if (arg_8h[2] != 0) {\n            do {\n                puVar4 = fcn.00411777(8);\n                if (puVar4 == NULL) {\n                    puVar4 = NULL;\n                }\n                else {\n                    puVar1 = *(*(arg_ch + 4) + uVar2 * 4);\n                    *puVar4 = *puVar1;\n                    puVar4[1] = puVar1[1];\n                }\n                *(arg_8h[1] + uVar2 * 4) = puVar4;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < arg_8h[2]);\n        }\n        return arg_8h;\n    }\n    arg_8h[1] = 0;\n    return arg_8h;\n}\n",
        "token_count": 392
    },
    "00442023": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442023(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    \n    uVar3 = arg_ch;\n    arg_8h_00 = arg_8h;\n    arg_8h = 1;\n    arg_ch = 1;\n    (*_sym.imp.WININET.dll_InternetQueryDataAvailable)(uVar3, &arg_ch, 0, 0);\n    if (arg_ch == 0) {\n        arg_ch = 0x400;\n    }\n    do {\n        if (arg_8h == 0) {\ncode_r0x004420b0:\n            if ((*(arg_8h_00 + 8) | *(arg_8h_00 + 0xc)) != 0) {\n                fcn.00441ff0(arg_8h_00, 0, 0, 1);\n                return;\n            }\n            fcn.00441ff0(arg_8h_00, 0x21, 0xdeadbeef, 0);\n            return;\n        }\n        arg_ch_00 = fcn.00431ece(arg_ch);\n        iVar4 = (*_sym.imp.WININET.dll_InternetReadFile)(uVar3, arg_ch_00, arg_ch, &arg_8h);\n        if (iVar4 == 0) {\n            fcn.0041137c(arg_ch_00);\n            fcn.00441ff0(arg_8h_00, 0x20, 0xdeadbeef, 0);\n            return;\n        }\n        if (arg_8h == 0) {\n            fcn.0041137c(arg_ch_00);\n            goto code_r0x004420b0;\n        }\n        fcn.00431e69(arg_8h_00 + 0x44, arg_ch_00, arg_8h);\n        puVar1 = arg_8h_00 + 8;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + arg_8h;\n        *(arg_8h_00 + 0xc) = *(arg_8h_00 + 0xc) + CARRY4(uVar2, arg_8h);\n    } while( true );\n}\n",
        "token_count": 544
    },
    "00442218": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442218(int32_t arg_8h, uint arg_ch)\n\n{\n    if (*(arg_8h + 0x30) != '\\0') {\n        fcn.00442023(arg_8h, arg_ch);\n        return;\n    }\n    fcn.004420ff(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 80
    },
    "00442291": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442291(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char16_t *pcVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 1) {\n        iVar1 = *(arg_8h + 0x8c);\n    }\n    else {\n        iVar1 = *(arg_8h + 0x58);\n    }\n    iVar3 = iVar1;\n    puVar2 = arg_8h + 0xb0;\n    if (arg_ch != 1) {\n        puVar2 = arg_8h + 0x7c;\n    }\n    if (iVar3 == 1) {\n        pcVar5 = NULL;\n        uVar4 = 0;\n    }\n    else if (iVar3 == 2) {\n        uVar4 = *puVar2;\n        pcVar5 = L\"<local>\";\n        iVar3 = 3;\n    }\n    else {\n        pcVar5 = NULL;\n        uVar4 = 0;\n        iVar3 = 0;\n    }\n    iVar3 = (*_sym.imp.WININET.dll_InternetOpenW)(*(arg_8h + 0xc0), iVar3, uVar4, pcVar5, 0);\n    *(arg_8h + 4) = iVar3;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (*(arg_8h + 0xdc) != '\\0') {\n        var_8h = 1;\n        var_4h = 0;\n        (*_sym.imp.WININET.dll_InternetSetOptionW)(0, 0x32, &var_8h, 8);\n    }\n    return 1;\n}\n",
        "token_count": 414
    },
    "004423f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004423f2(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    iVar3 = arg_20h;\n    bVar4 = arg_20h == 0x7fffffff;\n    arg_20h = 0;\n    if (arg_18h < 0) {\n        arg_18h = fcn.00411361(arg_ch);\n    }\n    if (((arg_18h == 0) || (iVar1 = arg_8h[1],  iVar1 == 0)) || (arg_14h == 0)) {\n        return arg_8h[1];\n    }\n    if (arg_14h < 1) {\n        arg_14h = -arg_14h;\n        if ((arg_1ch < 0) || (iVar1 <= arg_1ch)) {\n            arg_1ch = iVar1 - arg_18h;\n        }\n        else {\n            arg_1ch = arg_1ch + (1 - arg_18h);\n        }\n        if (arg_1ch < 0) {\n            return iVar1;\n        }\n        if (iVar3 < 0) {\n            iVar3 = arg_1ch + 1;\n        }\n        if (arg_1ch + 1 < iVar3) {\n            iVar3 = arg_1ch + 1;\n        }\n        iVar3 = arg_1ch - iVar3;\n        for (; iVar3 < arg_1ch; arg_1ch = arg_1ch + iVar1) {\n            if (arg_14h <= arg_20h) {\n                return arg_1ch;\n            }\n            if (arg_10h == 1) {\n                iVar1 = fcn.0040d430();\n            }\n            else {\n                iVar1 = fcn.0040e960(*arg_8h + arg_1ch * 2, arg_ch);\n            }\n            if (iVar1 == 0) {\n                arg_20h = arg_20h + 1;\n                if (arg_20h == arg_14h) break;\n                iVar1 = -arg_18h;\n            }\n            else {\n                iVar1 = -1;\n            }\n        }\n    }\n    else {\n        if (arg_1ch < 0) {\n            arg_1ch = 0;\n        }\n        if (iVar1 <= arg_1ch) {\n            return iVar1;\n        }\n        if (iVar3 < 0) {\n            iVar3 = iVar1 - arg_1ch;\n        }\n        if (iVar1 - arg_1ch < iVar3) {\n            iVar3 = iVar1 - arg_1ch;\n        }\n        iVar1 = arg_1ch - arg_18h;\n        while (arg_1ch < iVar1 + 1 + iVar3) {\n            if (arg_14h <= arg_20h) {\n                return arg_1ch;\n            }\n            if (arg_10h == 1) {\n                iVar2 = fcn.0040d430();\n            }\n            else {\n                iVar2 = fcn.0040e960(*arg_8h + arg_1ch * 2, arg_ch);\n            }\n            if (iVar2 == 0) {\n                arg_20h = arg_20h + 1;\n                if (arg_20h == arg_14h) break;\n                arg_1ch = arg_1ch + arg_18h;\n            }\n            else {\n                arg_1ch = arg_1ch + 1;\n            }\n        }\n    }\n    if (arg_14h <= arg_20h) {\n        return arg_1ch;\n    }\n    if (bVar4) {\n        return arg_20h;\n    }\n    return arg_8h[1];\n}\n",
        "token_count": 898
    },
    "004425ab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.004425ab(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar uVar6;\n    uint lpFindFileData;\n    uint var_22ch;\n    uint var_4h;\n    uchar uVar7;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    uVar7 = 0;\n    uVar6 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(arg_8h, &lpFindFileData);\n    if (iVar4 != -1) {\n        do {\n            iVar5 = fcn.004132dc(&var_22ch, 0x486cfc);\n            uVar6 = uVar7;\n            if ((iVar5 != 0) && (iVar5 = fcn.004132dc(&var_22ch, 0x489b88),  iVar5 != 0)) {\n                cVar3 = fcn.004341ad(&var_22ch, arg_ch, arg_10h);\n                if (cVar3 == '\\0') {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    return 0;\n                }\n                uVar6 = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            uVar7 = uVar6;\n        } while (iVar5 != 0);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_FindClose;\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    if (arg_14h != '\\0') {\n        iVar4 = (*pcVar1)(0x489b80, &lpFindFileData);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n        if (iVar4 != -1) {\n            do {\n                if ((((lpFindFileData & 0x10) != 0) && (iVar5 = fcn.004132dc(&var_22ch, 0x486cfc),  iVar5 != 0)) &&\n                   (iVar5 = fcn.004132dc(&var_22ch, 0x489b88),  iVar5 != 0)) {\n                    (*pcVar1)(&var_22ch);\n                    cVar3 = fcn.004425ab(arg_8h, arg_ch, arg_10h, arg_14h);\n                    if (cVar3 == '\\0') {\n                        (*pcVar2)(iVar4);\n                        return 0;\n                    }\n                    (*pcVar1)(0x489b88);\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            } while (iVar5 != 0);\n        }\n        (*pcVar2)(iVar4);\n        return 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 690
    },
    "004427ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.004427ec(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    int32_t var_18h;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    if ((*0x4974e3 != '\\0') || ((*0x4a8668 != '\\0' && (*(arg_8h + 0xf8) == 0)))) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 1);\n    do {\n        if (iVar2 == 0) {\ncode_r0x0044289e:\n            if (*0x4974e6 == '\\x01') {\n                *0x4974ec = '\\0';\n                *0x4974e6 = '\\0';\n                *(arg_8h + 0xf8) = 1;\n            }\n            if (*(arg_8h + 0xf8) == 1) {\n                return 1;\n            }\n            return -(*0x4974ec != '\\0') & 0xb;\n        }\n        if (var_18h == 0x12) {\n            *(arg_8h + 0xfc) = 1;\n            *(arg_8h + 0xf8) = 1;\n            goto code_r0x0044289e;\n        }\n        iVar2 = fcn.0040d460(&lpMsg);\n        if ((iVar2 == 0) && (iVar2 = fcn.0040d480(&lpMsg),  iVar2 == 0)) {\n            (*_sym.imp.USER32.dll_TranslateMessage)(&lpMsg);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n        }\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0, 0, 1);\n    } while( true );\n}\n",
        "token_count": 445
    },
    "00442a18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00442a18(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    *(arg_8h + 0x44e) = 0;\n    do {\n        arg_ch = arg_ch + -1;\n        if (*(arg_8h + 0x450) == 0) {\n            if (*(arg_8h + 0x14) == 1) {\n                iVar1 = *(arg_8h + 0xc);\n                *(arg_8h + 0x44c) = *(arg_8h + 0x44c) | *(*(arg_8h + 4) + iVar1) << 8;\n                *(arg_8h + 0xc) = iVar1 + 1;\n                *(arg_8h + 0x44c) = *(arg_8h + 0x44c) | *(iVar1 + 1 + *(arg_8h + 4));\n                *(arg_8h + 0xc) = iVar1 + 2;\n            }\n            else {\n                uVar2 = fcn.004325de(arg_8h);\n                *(arg_8h + 0x44c) = *(arg_8h + 0x44c) | (uVar2 & 0xff) << 8;\n                uVar2 = fcn.004325de(arg_8h);\n                *(arg_8h + 0x44c) = *(arg_8h + 0x44c) | uVar2 & 0xff;\n                *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n            }\n            *(arg_8h + 0x450) = 0x10;\n        }\n        *(arg_8h + 0x44c) = *(arg_8h + 0x44c) << 1;\n        *(arg_8h + 0x450) = *(arg_8h + 0x450) + -1;\n    } while (arg_ch != 0);\n    return *(arg_8h + 0x44c) >> 0x10;\n}\n",
        "token_count": 497
    },
    "00442b75": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop",
            "generate random numbers using a Mersenne Twister"
        ],
        "decompiled_code": "\nvoid fcn.00442b75(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    \n    if (*0x4a7f10 == 0) {\n        arg_8h = fcn.00414a63(0);\n        fcn.00432848(arg_8h);\n    }\n    *0x49205c = 0x270;\n    *0x4a753c = 0x4a7540;\n    iVar1 = 0xe3;\n    puVar2 = 0x4a7540;\n    do {\n        puVar3 = puVar2 + 1;\n        iVar1 = iVar1 + -1;\n        *puVar2 = ((*puVar2 ^ puVar2[1]) & 0x7ffffffe ^ *puVar2) >> 1 ^ puVar2[0x18d] ^\n                  -((puVar2[1] & 1) != 0) & 0x9908b0df;\n        puVar2 = puVar3;\n    } while (iVar1 != 0);\n    iVar1 = 0x18c;\n    do {\n        puVar2 = puVar3;\n        puVar3 = puVar2 + 1;\n        iVar1 = iVar1 + -1;\n        *puVar2 = ((*puVar2 ^ puVar2[1]) & 0x7ffffffe ^ *puVar2) >> 1 ^ puVar2[-0xe3] ^\n                  -((puVar2[1] & 1) != 0) & 0x9908b0df;\n    } while (iVar1 != 0);\n    *puVar3 = ((*puVar3 ^ *0x4a7540) & 0x7ffffffe ^ *puVar3) >> 1 ^ puVar2[-0xe2] ^ -((*0x4a7540 & 1) != 0) & 0x9908b0df\n    ;\n    return;\n}\n",
        "token_count": 458
    },
    "00442cb5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00442cb5(double *arg_8h)\n\n{\n    char cVar1;\n    \n    if (*(arg_8h + 1) - 1U < 0xb) {\n    // switch table (11 cases) at 0x442d29\n        switch(*((*(arg_8h + 1) - 1U) * 4 + 0x442d29)) {\n        case 0x442ccb:\n            return *arg_8h;\n        case 0x442cd1:\n            if (*arg_8h != 0) {\n                return true;\n            }\n            break;\n        case 0x442cdc:\n            cVar1 = fcn.004362d6(*(arg_8h + 0xc));\n            if (cVar1 == '\\0') {\n                return true;\n            }\n            break;\n        case 0x442cef:\n            if ((*arg_8h | *(arg_8h + 4)) != 0) {\n                return true;\n            }\n            break;\n        case 0x442cfc:\n            if (*arg_8h != 0.0) {\n                return true;\n            }\n            break;\n        case 0x442d0f:\n            return *arg_8h != 0;\n        case 0x442d1a:\n            if (**arg_8h != 0) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 318
    },
    "00442d6f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.00442d6f(int64_t *arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iStack16;\n    \n    if (*(arg_8h + 1) - 1U < 0xb) {\n    // switch table (11 cases) at 0x442e43\n        switch(*((*(arg_8h + 1) - 1U) * 4 + 0x442e43)) {\n        case 0x442d8f:\n            return *arg_8h;\n        case 0x442d9a:\n            return *arg_8h;\n        case 0x442da3:\n            arg_8h_00 = **(arg_8h + 0xc);\n            if ((*arg_8h_00 == 0x30) && ((arg_8h_00[1] == 0x78 || (arg_8h_00[1] == 0x58)))) {\n                fcn.00433276(arg_8h_00 + 2, &iStack16, 0x10);\n                return iStack16;\n            }\n            iVar2 = fcn.0041333b(arg_8h_00);\n            return iVar2;\n        case 0x442de9:\n            iVar2 = fcn.00432894(*arg_8h, *arg_8h >> 0x20);\n            return iVar2;\n        case 0x442dfc:\n            if (*arg_8h != '\\0') {\n                return 1;\n            }\n            break;\n        case 0x442e0e:\n            piVar1 = *arg_8h;\n            if (*piVar1 < 9) {\n                fcn.00433177(piVar1[1], *piVar1, &iStack16);\n                return iStack16;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 444
    },
    "00442f7e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00442f7e(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t extraout_EDX;\n    \n    cVar1 = fcn.00432b85(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00442f50(arg_8h_00);\n        if (cVar1 == '\\0') {\n            return *(extraout_EDX + 8) == 0;\n        }\n    }\n    return true;\n}\n",
        "token_count": 126
    },
    "0044302b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044302b(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00432c18(arg_8h);\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    iVar2 = *arg_ch;\n    if ((iVar2 == 0) || (*arg_10h == 0)) {\n        if (*arg_14h == 0) {\n            return 0;\n        }\n        if (*arg_18h == 0) {\n            return 0;\n        }\n        fcn.00432bdb(arg_ch);\n        fcn.00432bdb(arg_10h);\n        fcn.00432ba7(*arg_14h, arg_ch, 0);\n        fcn.00432ba7(*arg_18h, arg_10h, 0);\n        iVar2 = *arg_14h;\n    }\n    return iVar2;\n}\n",
        "token_count": 251
    },
    "00443744": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443744(uint arg_8h, uint arg_ch)\n\n{\n    int16_t *var_8h;\n    \n    fcn.00411777(0x10000);\n    fcn.0040f670();\n    (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, var_8h, 0x7fff);\n    if (*var_8h != 0) {\n        fcn.00433b2d(var_8h, arg_ch);\n        fcn.00433b2d(0x484754, arg_ch);\n    }\n    fcn.0040f690();\n    return 1;\n}\n",
        "token_count": 146
    },
    "004438a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004438a7(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    (*_sym.imp.WINMM.dll_timeGetTime)();\n    if (*0x4974ef != '\\0') {\n        while( true ) {\n            iVar2 = fcn.0040c8c0();\n            if ((0xffffffff < iVar2) || ((-1 < iVar2 && (arg_8h[1] <= iVar2)))) break;\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            if (*0x4974ef == '\\0') {\n                return 0;\n            }\n        }\n        *0x4a7538 = 0;\n        (*_sym.imp.USER32.dll_EnumThreadWindows)(*arg_8h, fcn.004342ae, 0);\n        if (*0x4a7538 != 0) {\n            *0x4974ee = 1;\n            iVar1 = (*_sym.imp.USER32.dll_FindWindowExW)(*0x4a7538, 0, L\"BUTTON\", 0);\n            if (iVar1 != 0) {\n                fcn.0044370a(*0x4a7538, 1);\n                (*_sym.imp.USER32.dll_SetActiveWindow)(*0x4a7538);\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0xf5, 0, 0);\n                fcn.0044370a(*0x4a7538, 0);\n                return 0;\n            }\n            (*_sym.imp.USER32.dll_SendMessageW)(*0x4a7538, 0x10, 0, 0);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0xfa);\n            iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*0x4a7538);\n            if (iVar1 != 0) {\n                (*_sym.imp.USER32.dll_EndDialog)(*0x4a7538, 0);\n                return 0;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 459
    },
    "00443a5f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443a5f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    if (*(*0x4a9604 + 0x1c) != '\\0') {\n        uVar1 = fcn.00411361(arg_8h);\n        if (0xf < uVar1) {\n            fcn.00434343(arg_8h, arg_ch, arg_10h);\n            return;\n        }\n    }\n    fcn.00434485(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 138
    },
    "00443f73": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443f73(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    \n    if (0x206 < arg_ch) {\n        return;\n    }\n    arg_8h_00 = *(arg_8h + 0x1b4 + arg_ch * 4);\n    piVar1 = arg_8h + 0x1b4 + arg_ch * 4;\n    if (arg_8h_00 != 0) {\n        fcn.00443f54(arg_8h_00);\n    }\n    *piVar1 = 0;\n    if (arg_ch != *(arg_8h + 0x9d0)) {\n        return;\n    }\n    if (6 < arg_ch) {\n        while (*piVar1 == 0) {\n            arg_ch = arg_ch + -1;\n            piVar1 = piVar1 + -1;\n            if (arg_ch < 7) {\n                *(arg_8h + 0x9d0) = 0;\n                return;\n            }\n        }\n        if (6 < arg_ch) goto code_r0x00443fd8;\n    }\n    arg_ch = 0;\ncode_r0x00443fd8:\n    *(arg_8h + 0x9d0) = arg_ch;\n    return;\n}\n",
        "token_count": 313
    },
    "00443fe5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443fe5(int32_t arg_8h)\n\n{\n    uint *arg_8h_00;\n    int32_t *arg_8h_01;\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 0x1a4) == 0) {\n        *(arg_8h + 0x1a4) = *0x4a7f48;\n    }\n    arg_8h_01 = arg_8h + 0x1a8;\n    fcn.0043479d(arg_8h_01, arg_8h + 0x1ac);\n    arg_8h_00 = arg_8h + 0x4c;\n    cVar1 = fcn.004362d6(arg_8h_00);\n    if (cVar1 == '\\0') {\n        iVar2 = fcn.004347c9(arg_8h, *(arg_8h + 0x14), *arg_8h_00, arg_8h + 0x1ac);\n        *arg_8h_01 = iVar2;\n    }\n    cVar1 = fcn.004362d6(arg_8h_00);\n    if ((cVar1 != '\\0') || (*arg_8h_01 == 0)) {\n        *arg_8h_01 = *(arg_8h + 0x1a4);\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "00444142": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00444142(int32_t arg_8h, char *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint lpKeyState;\n    uint8_t var_f0h;\n    uint8_t var_efh;\n    uint var_eeh;\n    uint var_a5h;\n    uint8_t var_60h;\n    uint var_5fh;\n    \n    if ((((*arg_ch == '\\0') && (arg_ch[1] == '\\0')) && (arg_ch[2] == '\\0')) &&\n       ((arg_ch[3] == '\\0' && (arg_ch[4] == '\\0')))) {\n        return;\n    }\n    if ((*(arg_8h + 0x20) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(arg_8h + 0x20)),  iVar2 == 0)) {\n        if (*arg_ch != '\\0') {\n            fcn.00434d00(arg_8h, 0xa0, *(arg_8h + 0x27), 2);\n        }\n        if (arg_ch[1] != '\\0') {\n            fcn.00434d00(arg_8h, 0xa1, *(arg_8h + 0x28), 2);\n        }\n        if (arg_ch[2] != '\\0') {\n            fcn.00434d00(arg_8h, 0x11, *(arg_8h + 0x24), 2);\n        }\n        if (arg_ch[3] != '\\0') {\n            fcn.00434d00(arg_8h, 0x12, *(arg_8h + 0x25), 2);\n        }\n        if (arg_ch[4] != '\\0') {\n            fcn.00434d00(arg_8h, 0x5b, *(arg_8h + 0x29), 2);\n        }\n        goto code_r0x0044432b;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n    if (iVar2 != 0) {\n        if (*arg_ch != '\\0') {\n            var_f0h = var_f0h ^ 0x80;\n            var_60h = var_60h ^ 0x80;\n        }\n        if (arg_ch[1] != '\\0') {\n            var_f0h = var_f0h ^ 0x80;\n            var_5fh._0_1_ = var_5fh ^ 0x80;\n        }\n        if (arg_ch[2] != '\\0') {\n            var_efh = var_efh ^ 0x80;\n        }\n        if (arg_ch[3] != '\\0') {\n            var_eeh._0_1_ = var_eeh ^ 0x80;\n        }\n        if (arg_ch[4] != '\\0') {\n            var_a5h._0_1_ = var_a5h ^ 0x80;\n        }\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n    }\n    pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n    if ((*arg_ch != '\\0') || (arg_ch[1] != '\\0')) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*(arg_8h + 0x20), 0x101, 0x10, *(arg_8h + 0x26) << 0x10 | 0xc0000001);\n    }\n    if (arg_ch[2] != '\\0') {\n        (*pcVar1)(*(arg_8h + 0x20), 0x101, 0x11, *(arg_8h + 0x24) << 0x10 | 0xc0000001);\n    }\n    if (arg_ch[3] != '\\0') {\n        if ((arg_ch[2] == '\\0') && (*(arg_8h + 0x1c) == '\\0')) {\n            uVar4 = *(arg_8h + 0x20);\n            uVar3 = *(arg_8h + 0x25) << 0x10 | 0xe0000001;\n            uVar5 = 0x105;\n        }\n        else {\n            if (arg_ch[3] == '\\0') goto code_r0x00444289;\n            uVar4 = *(arg_8h + 0x20);\n            uVar3 = *(arg_8h + 0x25) << 0x10 | 0xc0000001;\n            uVar5 = 0x101;\n        }\n        (*pcVar1)(uVar4, uVar5, 0x12, uVar3);\n    }\ncode_r0x00444289:\n    if (arg_ch[4] != '\\0') {\n        (*pcVar1)(*(arg_8h + 0x20), 0x101, 0x5b, *(arg_8h + 0x29) << 0x10 | 0xc0000001);\n        fcn.00434d8c(arg_8h);\n        return;\n    }\ncode_r0x0044432b:\n    fcn.00434d8c(arg_8h);\n    return;\n}\n",
        "token_count": 1214
    },
    "0044433a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044433a(int32_t arg_8h, char *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint lpKeyState;\n    uint8_t var_f0h;\n    uint8_t var_efh;\n    uint var_eeh;\n    uint var_a5h;\n    uint8_t var_60h;\n    uint var_5fh;\n    \n    if ((((*arg_ch == '\\0') && (arg_ch[1] == '\\0')) && (arg_ch[2] == '\\0')) &&\n       ((arg_ch[3] == '\\0' && (arg_ch[4] == '\\0')))) {\n        return;\n    }\n    if ((*(arg_8h + 0x20) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(arg_8h + 0x20)),  iVar2 == 0)) {\n        if (*arg_ch != '\\0') {\n            fcn.00434d00(arg_8h, 0xa0, *(arg_8h + 0x27), 0);\n        }\n        if (arg_ch[1] != '\\0') {\n            fcn.00434d00(arg_8h, 0xa1, *(arg_8h + 0x28), 0);\n        }\n        if (arg_ch[2] != '\\0') {\n            fcn.00434d00(arg_8h, 0x11, *(arg_8h + 0x24), 0);\n        }\n        if (arg_ch[3] != '\\0') {\n            fcn.00434d00(arg_8h, 0x12, *(arg_8h + 0x25), 0);\n        }\n        if (arg_ch[4] != '\\0') {\n            fcn.00434d00(arg_8h, 0x5b, *(arg_8h + 0x29), 0);\n        }\n        goto code_r0x00444517;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n    if (iVar2 != 0) {\n        if (*arg_ch != '\\0') {\n            var_f0h = var_f0h | 0x80;\n            var_60h = var_60h | 0x80;\n        }\n        if (arg_ch[1] != '\\0') {\n            var_f0h = var_f0h | 0x80;\n            var_5fh._0_1_ = var_5fh | 0x80;\n        }\n        if (arg_ch[2] != '\\0') {\n            var_efh = var_efh | 0x80;\n        }\n        if (arg_ch[3] != '\\0') {\n            var_eeh._0_1_ = var_eeh | 0x80;\n        }\n        if (arg_ch[4] != '\\0') {\n            var_a5h._0_1_ = var_a5h | 0x80;\n        }\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n    }\n    pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n    if ((*arg_ch != '\\0') || (arg_ch[1] != '\\0')) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*(arg_8h + 0x20), 0x100, 0x10, *(arg_8h + 0x26) << 0x10 | 1);\n    }\n    if (arg_ch[2] != '\\0') {\n        (*pcVar1)(*(arg_8h + 0x20), 0x100, 0x11, *(arg_8h + 0x24) << 0x10 | 1);\n    }\n    if (arg_ch[3] != '\\0') {\n        if ((arg_ch[2] == '\\0') && (*(arg_8h + 0x1c) == '\\0')) {\n            uVar4 = *(arg_8h + 0x20);\n            uVar3 = *(arg_8h + 0x25) << 0x10 | 0x20000001;\n            uVar5 = 0x104;\n        }\n        else {\n            if (arg_ch[3] == '\\0') goto code_r0x00444478;\n            uVar4 = *(arg_8h + 0x20);\n            uVar3 = *(arg_8h + 0x25) << 0x10 | 1;\n            uVar5 = 0x100;\n        }\n        (*pcVar1)(uVar4, uVar5, 0x12, uVar3);\n    }\ncode_r0x00444478:\n    if (arg_ch[4] != '\\0') {\n        (*pcVar1)(*(arg_8h + 0x20), 0x100, 0x5b, *(arg_8h + 0x29) << 0x10 | 1);\n        fcn.00434d5f(arg_8h);\n        return;\n    }\ncode_r0x00444517:\n    fcn.00434d5f(arg_8h);\n    return;\n}\n",
        "token_count": 1197
    },
    "00444526": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00444526(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint lpKeyState;\n    char var_f0h;\n    uint var_efh;\n    uint var_a5h;\n    uint var_60h;\n    \n    iVar3 = *(arg_8h + 0x20);\n    *arg_ch = 0;\n    *(arg_ch + 1) = 0;\n    pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n    if (iVar3 == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0xa0);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0xa0),  (uVar2 & 0x8000) != 0)) &&\n           (*(arg_8h + 0x1a) == '\\0')) {\n            *arg_ch = 1;\n        }\n        uVar2 = (*pcVar1)(0xa1);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0xa1),  (uVar2 & 0x8000) != 0)) &&\n           (*(arg_8h + 0x1b) == '\\0')) {\n            *(arg_ch + 1) = 1;\n        }\n        uVar2 = (*pcVar1)(0x11);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11),  (uVar2 & 0x8000) != 0)) &&\n           (*(arg_8h + 0x1c) == '\\0')) {\n            *(arg_ch + 2) = 1;\n        }\n        uVar2 = (*pcVar1)(0x12);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x12),  (uVar2 & 0x8000) != 0)) &&\n           (*(arg_8h + 0x1d) == '\\0')) {\n            *(arg_ch + 3) = 1;\n        }\n        uVar2 = (*pcVar1)(0x5b);\n        if (((uVar2 & 0x8000) == 0) && (uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x5b),  (uVar2 & 0x8000) == 0)) {\n            return arg_ch;\n        }\n        if (*(arg_8h + 0x1e) == '\\0') {\n            *(arg_ch + 1) = 1;\n        }\n        return arg_ch;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n    if (iVar3 == 0) {\n        return arg_ch;\n    }\n    if (((var_60h == -0x80) || (var_f0h == -0x80)) && (*(arg_8h + 0x1a) == '\\0')) {\n        *arg_ch = 1;\n    }\n    if ((var_60h._1_1_ == -0x80) && (*(arg_8h + 0x1b) == '\\0')) {\n        *(arg_ch + 1) = 1;\n    }\n    if ((var_efh == -0x80) && (*(arg_8h + 0x1c) == '\\0')) {\n        *(arg_ch + 2) = 1;\n    }\n    if ((var_efh._1_1_ == -0x80) && (*(arg_8h + 0x1d) == '\\0')) {\n        *(arg_ch + 3) = 1;\n    }\n    if (var_a5h == -0x80) {\n        if (*(arg_8h + 0x1e) != '\\0') {\n            return arg_ch;\n        }\n        *(arg_ch + 1) = 1;\n        return arg_ch;\n    }\n    return arg_ch;\n}\n",
        "token_count": 975
    },
    "004446c6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004446c6(char *arg_8h)\n\n{\n    char cVar1;\n    \n    if (arg_8h[10] != '\\0') {\n        return 1;\n    }\n    cVar1 = fcn.00434e5f(arg_8h);\n    if ((cVar1 != '\\0') &&\n       (((((((((cVar1 = *arg_8h,  cVar1 == '-' || (cVar1 == '.')) || (cVar1 == '#')) ||\n             ((cVar1 == '(' || (cVar1 == '\\\"')))) || ((cVar1 == '%' || ((cVar1 == '\\'' || (cVar1 == '$')))))) ||\n           (cVar1 == '&')) ||\n          (((((cVar1 == '!' || (cVar1 == 'o')) || (cVar1 == ']')) ||\n            (((cVar1 == '[' || (cVar1 == '\\\\')) || ((cVar1 == -0x5b || ((cVar1 == -0x5d || (cVar1 == '_')))))))) ||\n           ((cVar1 == -0x5a || (((cVar1 == -0x59 || (cVar1 == -0x58)) || (cVar1 == -0x57)))))))) ||\n         ((((cVar1 == -0x56 || (cVar1 == -0x55)) ||\n           (((cVar1 == -0x54 || ((cVar1 == -0x53 || (cVar1 == -0x52)))) || (cVar1 == -0x51)))) ||\n          ((((cVar1 == -0x50 || (cVar1 == -0x4f)) || (cVar1 == -0x4e)) || ((cVar1 == -0x4d || (cVar1 == -0x4c)))))))) ||\n        ((cVar1 == -0x4b || ((cVar1 == -0x4a || (cVar1 == -0x49)))))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 455
    },
    "00444942": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444942(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_8h;\n    \n    for (iVar4 = 0; (iVar6 = *(arg_ch + iVar4 * 2),  iVar6 == 0x20 || (iVar6 == 9)); iVar4 = iVar4 + 1) {\n    }\n    iVar6 = *(arg_ch + iVar4 * 2);\n    if (iVar6 == 0x22) {\n        bVar2 = true;\n    }\n    else if (iVar6 == 0x27) {\n        bVar2 = true;\n    }\n    else {\n        if (iVar6 != 0x3c) {\n            return 0;\n        }\n        iVar6 = 0x3e;\n        bVar2 = false;\n    }\n    iVar5 = iVar4 + 1;\n    iVar7 = 0;\n    iVar1 = *(arg_ch + 2 + iVar4 * 2);\n    while ((iVar1 != iVar6 && (iVar1 != 0))) {\n        iVar5 = iVar5 + 1;\n        *(arg_10h + iVar7 * 2) = iVar1;\n        iVar7 = iVar7 + 1;\n        iVar1 = *(arg_ch + iVar5 * 2);\n    }\n    if (*(arg_ch + iVar5 * 2) == iVar6) {\n        do {\n            do {\n                iVar6 = *(arg_ch + 2 + iVar5 * 2);\n                iVar5 = iVar5 + 1;\n            } while (iVar6 == 0x20);\n        } while (iVar6 == 9);\n        iVar6 = *(arg_ch + iVar5 * 2);\n        if ((iVar6 == 0) || (iVar6 == 0x3b)) {\n            *(arg_10h + iVar7 * 2) = 0;\n            fcn.00410330();\n            fcn.0040f670();\n            fcn.004448a5(var_8h);\n            fcn.00444901(var_8h);\n            if (bVar2) {\n                cVar3 = fcn.00433fa3(arg_10h);\n                if ((cVar3 == '\\0') && (iVar4 = *(arg_8h + 0x3c) + -1,  -1 < iVar4)) {\n                    while( true ) {\n                        fcn.00411707(arg_10h, *(*(arg_8h + 0x38) + iVar4 * 4));\n                        fcn.004116d6(arg_10h, var_8h);\n                        cVar3 = fcn.00433fa3(arg_10h);\n                        if (cVar3 != '\\0') break;\n                        fcn.00411707(arg_10h, var_8h);\n                        iVar4 = iVar4 + -1;\n                        if (iVar4 < 0) {\n                            fcn.0040f690();\n                            return 1;\n                        }\n                    }\n                }\n            }\n            else {\n                uVar8 = 0;\n                if (*(arg_8h + 0x3c) != 0) {\n                    do {\n                        fcn.00411707(arg_10h, *(*(arg_8h + 0x38) + uVar8 * 4));\n                        fcn.004116d6(arg_10h, var_8h);\n                        cVar3 = fcn.00433fa3(arg_10h);\n                        if (cVar3 != '\\0') break;\n                        fcn.00411707(arg_10h, var_8h);\n                        uVar8 = uVar8 + 1;\n                    } while (uVar8 < *(arg_8h + 0x3c));\n                }\n            }\n            fcn.0040f690();\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 912
    },
    "00444d04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444d04(uint32_t arg_8h, int32_t lpString)\n\n{\n    int16_t *piVar1;\n    uint *puVar2;\n    uint16_t *puVar3;\n    int16_t iVar4;\n    uint16_t uVar5;\n    int64_t iVar6;\n    bool bVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    ushort uVar10;\n    int32_t iVar11;\n    uint uVar12;\n    int32_t iVar13;\n    char16_t **ppcVar14;\n    int32_t iVar15;\n    int32_t *piVar16;\n    int16_t *lpString_00;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int16_t *var_ch;\n    int16_t *var_8h;\n    uint32_t var_4h;\n    \n    iVar9 = arg_8h;\n    iVar11 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    iVar6 = (iVar11 + 1) * 2;\n    uVar12 = fcn.00411777(-(iVar6 >> 0x20 != 0) | iVar6);\n    *(arg_8h + 4) = uVar12;\n    iVar13 = 0;\n    iVar18 = 0;\n    var_4h = 2;\n    if (0 < iVar11) {\n        iVar18 = 0;\n        do {\n            iVar4 = *(lpString + iVar13 * 2);\n            while (iVar4 == 0x20) {\n                iVar13 = iVar13 + 1;\n                iVar4 = *(lpString + iVar13 * 2);\n            }\n            iVar4 = *(lpString + iVar13 * 2);\n            while (iVar4 != 0x20) {\n                iVar13 = iVar13 + 1;\n                *(*(arg_8h + 4) + iVar18 * 2) = iVar4;\n                iVar18 = iVar18 + 1;\n                iVar4 = *(lpString + iVar13 * 2);\n            }\n            var_4h = var_4h + 1;\n            *(*(arg_8h + 4) + iVar18 * 2) = 0x7c;\n            iVar4 = *(lpString + iVar13 * 2);\n            while (iVar4 == 0x20) {\n                iVar13 = iVar13 + 1;\n                iVar4 = *(lpString + iVar13 * 2);\n            }\n            iVar4 = *(lpString + iVar13 * 2);\n            while ((iVar8 = iVar18 + 1,  iVar4 != 0x20 && (iVar4 != 0x28))) {\n                iVar13 = iVar13 + 1;\n                *(*(arg_8h + 4) + iVar8 * 2) = iVar4;\n                iVar18 = iVar8;\n                iVar4 = *(lpString + iVar13 * 2);\n            }\n            *(*(arg_8h + 4) + iVar8 * 2) = 0x3b;\n            iVar18 = iVar18 + 2;\n            iVar4 = *(lpString + iVar13 * 2);\n            while (iVar4 == 0x20) {\n                iVar13 = iVar13 + 1;\n                iVar4 = *(lpString + iVar13 * 2);\n            }\n            if (*(lpString + iVar13 * 2) == 0x28) {\n                iVar13 = iVar13 + 1;\n            }\n            iVar4 = *(lpString + iVar13 * 2);\n            while (iVar4 == 0x20) {\n                iVar13 = iVar13 + 1;\n                iVar4 = *(lpString + iVar13 * 2);\n            }\n            bVar7 = true;\n            do {\n                iVar4 = *(lpString + iVar13 * 2);\n                while (iVar4 == 0x20) {\n                    iVar13 = iVar13 + 1;\n                    iVar4 = *(lpString + iVar13 * 2);\n                }\n                iVar4 = *(lpString + iVar13 * 2);\n                while (iVar4 != 0x3b) {\n                    while (iVar4 == 0x20) {\n                        iVar13 = iVar13 + 1;\n                        iVar4 = *(lpString + iVar13 * 2);\n                    }\n                    iVar4 = *(lpString + iVar13 * 2);\n                    if (iVar4 == 0x29) {\n                        bVar7 = false;\n                        iVar13 = iVar13 + 1;\n                        break;\n                    }\n                    iVar13 = iVar13 + 1;\n                    *(*(arg_8h + 4) + iVar18 * 2) = iVar4;\n                    iVar18 = iVar18 + 1;\n                    iVar4 = *(lpString + iVar13 * 2);\n                }\n                iVar4 = *(lpString + iVar13 * 2);\n                while (iVar4 == 0x20) {\n                    iVar13 = iVar13 + 1;\n                    iVar4 = *(lpString + iVar13 * 2);\n                }\n                uVar10 = 10;\n                if (bVar7) {\n                    uVar10 = 0x3b;\n                }\n                *(*(arg_8h + 4) + iVar18 * 2) = uVar10;\n                iVar18 = iVar18 + 1;\n                if (*(lpString + iVar13 * 2) == 0x3b) {\n                    iVar13 = iVar13 + 1;\n                }\n            } while (bVar7);\n        } while (iVar13 < iVar11);\n    }\n    uVar12 = fcn.00411777(-(var_4h * 4 >> 0x20 != 0) | var_4h * 4);\n    *(arg_8h + 8) = uVar12;\n    ppcVar14 = fcn.00411777(-(var_4h * 0x1c >> 0x20 != 0) | var_4h * 0x1c);\n    *(arg_8h + 0xc) = ppcVar14;\n    *ppcVar14 = L\"IUnknown\";\n    *(*(arg_8h + 0xc) + 4) = 0;\n    *(*(arg_8h + 0xc) + 8) = 0xffffffff;\n    *(*(arg_8h + 0xc) + 0xc) = 0xffffffff;\n    *(*(arg_8h + 0xc) + 0x10) = 4;\n    *(*(arg_8h + 0xc) + 0x14) = 0;\n    *(*(arg_8h + 0xc) + 0x18) = 1;\n    *(*(arg_8h + 0xc) + 0x1a) = 0;\n    *(*(arg_8h + 0xc) + 0x1c) = 0;\n    *(*(arg_8h + 0xc) + 0x20) = 0;\n    *(*(arg_8h + 0xc) + 0x24) = 0;\n    *(*(arg_8h + 0xc) + 0x28) = 0xffffffff;\n    *(*(arg_8h + 0xc) + 0x2c) = 4;\n    *(*(arg_8h + 0xc) + 0x30) = 0;\n    *(*(arg_8h + 0xc) + 0x34) = 2;\n    *(*(arg_8h + 0xc) + 0x36) = 0x13;\n    iVar13 = *(arg_8h + 4);\n    var_8h = NULL;\n    var_10h = 0;\n    if (0 < iVar18) {\n        iVar11 = 0x38;\n        lpString = 8;\n        arg_8h = 0;\n        var_1ch = iVar13;\n        do {\n            iVar4 = *(iVar13 + var_10h * 2);\n            if (iVar4 == 0x7c) {\n                *(iVar13 + var_10h * 2) = 0;\n                var_8h = iVar13 + 2 + var_10h * 2;\n            }\n            else if ((iVar4 == 10) || (iVar4 == 0)) {\n                *(iVar13 + var_10h * 2) = 0;\n                *(iVar11 + *(iVar9 + 0xc)) = var_1ch;\n                iVar8 = arg_8h + 1;\n                *(iVar11 + 8 + *(iVar9 + 0xc)) = iVar8;\n                *(iVar11 + 0xc + *(iVar9 + 0xc)) = arg_8h;\n                *(iVar11 + 0x10 + *(iVar9 + 0xc)) = 4;\n                *(iVar11 + 0x18 + *(iVar9 + 0xc)) = 1;\n                iVar15 = 0;\n                arg_8h = 0;\n                iVar4 = *var_8h;\n                piVar1 = var_8h;\n                while (iVar4 != 0) {\n                    if (*piVar1 == 0x3b) {\n                        if (piVar1[1] == 0) {\n                            *piVar1 = 0;\n                        }\n                        else {\n                            arg_8h = arg_8h + 1;\n                        }\n                    }\n                    iVar15 = iVar15 + 1;\n                    piVar1 = var_8h + iVar15;\n                    iVar4 = var_8h[iVar15];\n                }\n                var_ch = NULL;\n                iVar17 = 0;\n                if (0 < iVar15) {\n                    do {\n                        if (var_8h[iVar17] == 0x3b) {\n                            var_8h[iVar17] = 0;\n                            if (var_8h[iVar17 + 1] != 0) {\n                                var_ch = var_8h + iVar17 + 1;\n                            }\n                            break;\n                        }\n                        iVar17 = iVar17 + 1;\n                    } while (iVar17 < iVar15);\n                }\n                uVar10 = fcn.00435201(var_8h);\n                *(iVar11 + 0x1a + *(iVar9 + 0xc)) = uVar10;\n                *(iVar11 + 0x14 + *(iVar9 + 0xc)) = arg_8h;\n                if (arg_8h != 0) {\n                    uVar12 = fcn.00411777(-(arg_8h * 8 >> 0x20 != 0) | arg_8h * 8);\n                    *(lpString + *(iVar9 + 8)) = uVar12;\n                    if (var_ch != NULL) {\n                        iVar4 = *var_ch;\n                        arg_8h = 0;\n                        var_1ch = 0;\n                        piVar1 = var_ch;\n                        lpString_00 = var_ch;\n                        while (iVar4 != 0) {\n                            if (*piVar1 == 0x3b) {\n                                *piVar1 = 0;\n                                uVar10 = fcn.00435201(lpString_00);\n                                *(*(*(iVar9 + 8) + lpString) + 4 + arg_8h * 8) = uVar10;\n                                piVar16 = *(iVar9 + 8) + lpString;\n                                puVar2 = *piVar16 + arg_8h * 8;\n                                uVar5 = *(puVar2 + 1);\n                                if (((uVar5 & 0x8000) == 0) || ((uVar5 & 0x4000) == 0)) {\n                                    *puVar2 = 0;\n                                }\n                                else {\n                                    puVar3 = *piVar16 + 4 + arg_8h * 8;\n                                    *puVar3 = *puVar3 ^ 0x8000;\n                                    *(*(*(iVar9 + 8) + lpString) + arg_8h * 8) = 0x483f68;\n                                }\n                                lpString_00 = piVar1 + 1;\n                                arg_8h = arg_8h + 1;\n                            }\n                            var_1ch = var_1ch + 1;\n                            piVar1 = var_ch + var_1ch;\n                            iVar4 = var_ch[var_1ch];\n                        }\n                        uVar10 = fcn.00435201(lpString_00);\n                        *(*(*(iVar9 + 8) + lpString) + 4 + arg_8h * 8) = uVar10;\n                        piVar16 = *(iVar9 + 8) + lpString;\n                        puVar2 = *piVar16 + arg_8h * 8;\n                        uVar5 = *(puVar2 + 1);\n                        if (((uVar5 & 0x8000) == 0) || ((uVar5 & 0x4000) == 0)) {\n                            *puVar2 = 0;\n                        }\n                        else {\n                            puVar3 = *piVar16 + 4 + arg_8h * 8;\n                            *puVar3 = *puVar3 ^ 0x8000;\n                            *(*(*(iVar9 + 8) + lpString) + arg_8h * 8) = 0x483f68;\n                        }\n                    }\n                    *(iVar11 + 4 + *(iVar9 + 0xc)) = *(lpString + *(iVar9 + 8));\n                }\n                lpString = lpString + 4;\n                var_1ch = iVar13 + 2 + var_10h * 2;\n                iVar11 = iVar11 + 0x1c;\n                arg_8h = iVar8;\n            }\n            var_10h = var_10h + 1;\n        } while (var_10h < iVar18);\n    }\n    iVar13 = fcn.00411777(8);\n    *(iVar9 + 0x10) = iVar13;\n    *(iVar13 + 4) = var_4h;\n    **(iVar9 + 0x10) = *(iVar9 + 0xc);\n    return;\n}\n",
        "token_count": 3158
    },
    "00445562": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00445562(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.004362d6(arg_8h + 0x24);\n    if (cVar1 != '\\0') {\n        return true;\n    }\n    cVar1 = fcn.004360f5(arg_ch);\n    if (cVar1 != '\\0') {\n        return false;\n    }\n    *(arg_8h + 0xe8) = 0;\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_ch, fcn.0044554e, arg_8h);\n    return *(arg_8h + 0xe8) != '\\0';\n}\n",
        "token_count": 164
    },
    "004455b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004455b8(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (*(arg_8h + 4) == 0) {\n        return 0xffffffff;\n    }\n    fcn.00411361(arg_ch);\n    uVar1 = *(arg_8h + 4);\n    uVar3 = 0;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.0040d430();\n            if (iVar2 == 0) {\n                return uVar3;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 183
    },
    "0044562b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044562b(uint *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.00436226(arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0xc, 0, *arg_ch);\n        if (iVar2 != 0) {\n            if (arg_10h != '\\0') {\n                uVar3 = (*_sym.imp.USER32.dll_GetParent)(*arg_8h, 0, 1);\n                (*_sym.imp.USER32.dll_InvalidateRect)(uVar3);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 189
    },
    "004458d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004458d3(uint *wParam, uint *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint var_8b4h;\n    uint var_b4h;\n    uint var_30h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_8h;\n    \n    puVar1 = wParam;\n    var_8h = fcn.00436540(wParam);\n    fcn.004107b0();\n    arg_10h_00 = fcn.00434990(&var_b4h, 0x28, *wParam);\n    arg_ch_00 = fcn.00434990(&var_b4h, 0x800, *wParam);\n    var_18h = 0x400;\n    var_28h = arg_10h;\n    var_1ch = arg_ch_00;\n    fcn.004348fc(&var_b4h, &var_30h, arg_10h_00, 0x28);\n    wParam = NULL;\n    if (0 < var_8h) {\n        do {\n            (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0x1073, wParam, arg_10h_00);\n            fcn.004348c0(&var_b4h, arg_ch_00, &var_8b4h, 0x800);\n            iVar2 = fcn.0041164b(&var_8b4h, *arg_ch);\n            if (iVar2 == 0) break;\n            wParam = wParam + 1;\n        } while (wParam < var_8h);\n    }\n    if (wParam == var_8h) {\n        fcn.004107d0();\n        return -1;\n    }\n    fcn.004107d0();\n    return wParam;\n}\n",
        "token_count": 445
    },
    "00445a3a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00445a3a(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.004366ec(arg_8h);\n    if (arg_ch == '\\0') {\n        if (cVar1 != '\\x01') {\n            return 1;\n        }\n    }\n    else if (cVar1 != '\\0') {\n        return 1;\n    }\n    fcn.0043677c(arg_8h, 0, 1, 0xffffffff, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 129
    },
    "00445a6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445a6c(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    fcn.004456c1(*arg_8h, 1);\n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    iVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x25, 0);\n    if (arg_ch < 0) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*arg_8h, 0x100, 0x25);\n        pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        iVar2 = (*pcVar1)(0x25, 0);\n        uVar4 = *arg_8h;\n        uVar5 = 0x25;\n    }\n    else {\n        (*_sym.imp.USER32.dll_PostMessageW)(*arg_8h, 0x100, 0x27, iVar2 << 0x10 | 1);\n        pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        iVar2 = (*pcVar1)(0x25, 0);\n        uVar4 = *arg_8h;\n        uVar5 = 0x27;\n    }\n    (*_sym.imp.USER32.dll_PostMessageW)(uVar4, 0x101, uVar5, iVar2 << 0x10 | 0xc0000001);\n    (*pcVar3)(0);\n    fcn.004456c1(*arg_8h, 0);\n    return 1;\n}\n",
        "token_count": 401
    },
    "00445f2d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00445f2d(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h, int32_t arg_24h, uint arg_28h)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t hObj;\n    bool bVar5;\n    uint lpProfileInfo;\n    uint var_4ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t hObject;\n    uint var_5h;\n    \n    hObj = 0;\n    var_5h._0_1_ = 0;\n    hObject = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_1ch = 0;\n    arg_8h_00 = 0;\n    var_18h = 0;\n    fcn.004130e0(&lpProfileInfo, 0, 0x20);\n    lpProfileInfo = 0x20;\n    var_4ch = arg_8h;\n    bVar5 = (arg_14h & 1) != 0;\n    cVar3 = fcn.00436a48(arg_8h, arg_ch, arg_10h, arg_14h, &hObject);\n    if (cVar3 != '\\0') {\n        if ((arg_14h & 2) != 0) {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_DuplicateTokenEx)(hObject, 0, 0, 2, 1, &arg_10h);\n            if (iVar4 == 0) goto code_r0x00446163;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            hObject = arg_10h;\n        }\n        hObj = (*_sym.imp.USER32.dll_OpenWindowStationW)(L\"winsta0\", 0, 0x60000);\n        if ((hObj != 0) && (hObj != -1)) {\n            var_1ch = (*_sym.imp.USER32.dll_GetProcessWindowStation)();\n            iVar4 = (*_sym.imp.USER32.dll_SetProcessWindowStation)(hObj);\n            if ((iVar4 != 0) &&\n               (((var_14h = (*_sym.imp.USER32.dll_OpenDesktopW)(L\"default\", 0, 0, 0x60081),  var_14h != 0 &&\n                 (var_14h != -1)) && (cVar3 = fcn.00436a7a(hObject, &var_10h),  cVar3 != '\\0')))) {\n                var_34h._0_2_ = 0xb00;\n                var_30h = 0xf0000000;\n                var_28h._0_2_ = 0x400;\n                var_24h = 0xf037f;\n                cVar3 = fcn.00445d3e(hObj, var_10h, &var_34h);\n                if (cVar3 != '\\0') {\n                    var_28h._0_2_ = 0;\n                    var_24h = 0xf01ff;\n                    cVar3 = fcn.00445b4f(var_14h, var_10h, &var_28h);\n                    if (cVar3 != '\\0') {\n                        *(arg_24h + 8) = L\"winsta0\\\\default\";\n                        arg_10h = *(arg_24h + 0x2c) & 0x100;\n                        if (arg_18h != 0) {\n                            iVar4 = fcn.00411361(arg_18h);\n                            iVar1 = (iVar4 + 1U) * 2;\n                            arg_8h_00 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n                            fcn.0041315a(arg_8h_00, arg_18h, iVar4 + 1U);\n                        }\n                        uVar2 = arg_10h;\n                        if ((((!bVar5) ||\n                             (iVar4 = (*_sym.imp.USERENV.dll_LoadUserProfileW)(hObject, &lpProfileInfo),  iVar4 != 0))\n                            && (((arg_14h & 4) != 0 ||\n                                (iVar4 = (*_sym.imp.USERENV.dll_CreateEnvironmentBlock)(&var_18h, hObject, 0), \n                                iVar4 != 0)))) &&\n                           (iVar4 = (*_sym.imp.ADVAPI32.dll_CreateProcessAsUserW)\n                                              (hObject, 0, arg_8h_00, 0, 0, uVar2, arg_1ch | 0x400, var_18h, arg_20h, \n                                               arg_24h, arg_28h),  iVar4 != 0)) {\n                            if (bVar5) {\n                                fcn.004369df(arg_28h, &var_38h, &hObject);\n                            }\n                            var_5h._0_1_ = 1;\n                            goto code_r0x00446175;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00446163:\n    if (var_38h != 0) {\n        (*_sym.imp.USERENV.dll_UnloadUserProfile)(hObject, var_38h);\n    }\ncode_r0x00446175:\n    fcn.0043689c(var_10h);\n    if (hObj != 0) {\n        (*_sym.imp.USER32.dll_CloseWindowStation)(hObj);\n    }\n    if (var_14h != 0) {\n        (*_sym.imp.USER32.dll_CloseDesktop)(var_14h);\n    }\n    if (var_1ch != 0) {\n        (*_sym.imp.USER32.dll_SetProcessWindowStation)(var_1ch);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    fcn.0041137c(arg_8h_00);\n    if (var_18h != 0) {\n        var_18h = (*_sym.imp.USERENV.dll_DestroyEnvironmentBlock)(var_18h);\n    }\n    return var_18h & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1490
    },
    "00446243": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00446243(int32_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int32_t *piVar11;\n    uint var_140h;\n    uint var_114h;\n    uint32_t var_ech;\n    uint32_t var_e8h;\n    uint32_t var_e4h;\n    uint32_t var_e0h;\n    uint32_t var_dch;\n    int32_t var_d8h;\n    uint8_t *var_d4h;\n    uint32_t var_d0h;\n    uint32_t var_cch;\n    uint32_t var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    int32_t *var_b8h;\n    int32_t var_b4h;\n    int32_t var_b0h;\n    int32_t var_ach;\n    int32_t var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    int32_t var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    int32_t var_68h;\n    uint32_t var_64h;\n    int32_t var_60h;\n    uint8_t *var_5ch;\n    uint8_t *var_58h;\n    uint8_t *var_54h;\n    int32_t var_50h;\n    uint8_t *var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint8_t *var_14h;\n    uint8_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    var_18h = 0xffffffff;\n    var_e0h = 0xffffffff;\n    var_c8h = 0xffffffff;\n    puVar9 = arg_ch + arg_14h;\n    var_1ch = 0;\n    var_20h = 0;\n    var_dch = 0;\n    var_10h = NULL;\n    var_d4h = puVar9 + -1;\n    if ((arg_18h & 0xe20f5a6f) != 0) {\n        return -3;\n    }\n    if (((arg_8h == NULL) || (arg_ch == NULL)) || ((arg_1ch == NULL && (0 < arg_20h)))) {\n        return -2;\n    }\n    if (arg_20h < 0) {\n        return -0xf;\n    }\n    if ((arg_14h < 0) || (arg_10h < arg_14h)) {\n        return -0x18;\n    }\n    var_a4h = *(arg_8h + 7);\n    var_9ch = *(arg_8h + 6) + arg_8h;\n    var_a0h = *(arg_8h + 0x1a);\n    var_c0h = 10000000;\n    var_bch = 10000000;\n    var_8h = arg_8h[8];\n    var_2ch = 0;\n    if (var_8h == 0) {\n        var_8h = 0x485ab0;\n    }\n    piVar4 = arg_8h;\n    if ((*arg_8h != 0x50435245) && (piVar4 = fcn.00436e40(arg_8h, &var_114h, 0, &var_140h),  piVar4 == NULL)) {\n        return -4;\n    }\n    var_cch = piVar4[2] >> 0x12 & 1;\n    var_d0h = (arg_18h & 0xff | piVar4[2] & 0xffU) >> 4 & 1;\n    var_e4h = *(piVar4 + 3) >> 3 & 1;\n    var_60h = arg_8h + *(piVar4 + 6) + *(piVar4 + 7) * *(piVar4 + 0x1a);\n    var_3ch = arg_14h;\n    arg_8h = arg_ch + arg_10h;\n    var_5ch = arg_ch;\n    var_74h = *(piVar4 + 2) >> 5 & 1;\n    var_80h = piVar4[2] >> 0xb & 1;\n    var_78h = piVar4[2] >> 0x1d & 1;\n    var_7ch = piVar4[2] >> 0x19 & 1;\n    var_88h = (arg_18h & 0x80) != 0;\n    var_84h = arg_18h >> 8 & 1;\n    var_70h = arg_18h >> 10 & 1;\n    var_6ch = arg_18h >> 0x1c & 1;\n    if ((arg_18h & 0x8000000) == 0) {\n        var_48h = arg_18h >> 0xf & 1;\n    }\n    else {\n        var_48h = 2;\n    }\n    var_68h = 0;\n    var_28h = 0;\n    var_30h = 0;\n    var_94h = var_8h;\n    var_90h = var_8h + 0x340;\n    uVar5 = arg_18h & 0x1800000;\n    if (uVar5 == 0) {\n        if ((piVar4[2] & 0x1800000U) == 0) goto code_r0x004464a2;\n        var_64h = piVar4[2] >> 0x17 & 1;\n    }\n    else if (uVar5 == 0x800000) {\n        var_64h = 1;\n    }\n    else {\n        if (uVar5 != 0x1000000) {\n            return -0x17;\n        }\ncode_r0x004464a2:\n        var_64h = 0;\n    }\n    uVar5 = arg_18h;\n    if ((arg_18h & 0x700000) == 0) {\n        uVar5 = piVar4[2];\n    }\n    uVar5 = uVar5 & 0x700000;\n    if (0x300000 < uVar5) {\n        if (uVar5 == 0x400000) {\n            var_ach = 1;\n        }\n        else {\n            if (uVar5 != 0x500000) {\n                return -0x17;\n            }\n            var_ach = 2;\n        }\n        goto code_r0x00446555;\n    }\n    if (uVar5 == 0x300000) {\n        uVar5 = 0xd0a;\n    }\n    else {\n        if (uVar5 != 0) {\n            if (uVar5 == 0x100000) {\n                uVar5 = 0xd;\n                goto code_r0x004464dd;\n            }\n            if (uVar5 != 0x200000) {\n                return -0x17;\n            }\n        }\n        uVar5 = 10;\n    }\ncode_r0x004464dd:\n    var_ach = 0;\n    if (uVar5 < 0x100) {\n        var_a8h = 1;\n        var_98h._0_1_ = uVar5;\n    }\n    else {\n        var_a8h = 2;\n        var_98h._0_1_ = uVar5 >> 8;\n        var_98h._1_1_ = uVar5;\n    }\ncode_r0x00446555:\n    if ((var_48h != 0) && ((*(piVar4 + 3) & 1) != 0)) {\n        return -0xd;\n    }\n    var_58h = arg_8h;\n    var_ch = var_80h;\n    if ((var_80h != 0) && ((arg_18h & 0x2000) == 0)) {\n        iVar6 = fcn.0042ecbb(arg_ch, arg_10h);\n        if (-1 < iVar6) {\n            if ((iVar6 == arg_10h) && (1 < var_48h)) {\n                return -0x19;\n            }\n            return -10;\n        }\n        if (((0 < arg_14h) && (arg_14h < arg_10h)) && ((*puVar9 & 0xc0) == 0x80)) {\n            return -0xb;\n        }\n    }\n    var_ech = piVar4[2] & 7;\n    var_b4h = (arg_20h / 3) * 3;\n    uVar3 = *(piVar4 + 0x12);\n    if ((uVar3 == 0) || (uVar3 < var_b4h / 3)) {\n        var_b8h = arg_1ch;\n    }\n    else {\n        var_b4h = uVar3 * 3 + 3;\n        var_b8h = (**0x491490)(var_b4h * 4);\n        if (var_b8h == NULL) {\n            return -6;\n        }\n        var_1ch = 1;\n    }\n    var_b0h = (var_b4h * 2) / 3;\n    var_8ch = 0;\n    var_40h = 0xffffffff;\n    var_d8h = *(piVar4 + 4) * 2 + 2;\n    if (arg_20h < var_d8h) {\n        var_d8h = var_b4h;\n    }\n    if (var_b8h != NULL) {\n        piVar11 = var_b8h + var_b4h;\n        piVar1 = piVar11 + (1 - var_d8h / 2);\n        while (piVar11 = piVar11 + -1,  piVar1 <= piVar11) {\n            *piVar11 = -1;\n        }\n    }\n    if ((var_d0h == 0) && ((*(piVar4 + 3) & 2) != 0)) {\n        var_18h = *(piVar4 + 5) & 0xff;\n        if ((*(piVar4 + 5) & 0x100) == 0) {\n            var_20h = 0;\n        }\n        else {\n            var_18h = *(var_94h + var_18h);\n            var_20h = 1;\n        }\n    }\n    if ((*(piVar4 + 3) & 4) != 0) {\n        var_e0h = *(piVar4 + 0x16) & 0xff;\n        var_dch = *(piVar4 + 0x16) >> 8 & 1;\n        var_c8h = *(var_8h + 0x100 + var_e0h);\n    }\n    var_e8h = arg_18h & 0x4000000;\n    do {\n        var_14h = arg_8h;\n        if ((var_b8h != NULL) && (var_b8h < var_b8h + var_d8h)) {\n            piVar11 = var_b8h;\n            for (iVar6 = (var_b8h + var_d8h + (-1 - var_b8h) >> 2) + 1; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *piVar11 = -1;\n                piVar11 = piVar11 + 1;\n            }\n        }\n        puVar10 = arg_8h;\n        if (var_cch != 0) {\n            puVar10 = puVar9;\n            if (var_ch == 0) {\n                puVar7 = var_58h;\n                if (puVar9 < var_58h) {\n                    do {\n                        if (var_ach == 0) {\n                            if (((puVar10 <= puVar7 + -var_a8h) && (*puVar10 == var_98h)) &&\n                               ((var_a8h == 1 || (puVar10[1] == var_98h._1_1_)))) break;\n                        }\n                        else {\n                            iVar6 = fcn.0042efe8(puVar10, var_ach, var_58h, &var_a8h, 0);\n                            puVar7 = var_58h;\n                            if (iVar6 != 0) break;\n                        }\n                        puVar10 = puVar10 + 1;\n                    } while (puVar10 < puVar7);\n                }\n            }\n            else if (puVar9 < var_58h) {\n                do {\n                    if (var_ach == 0) {\n                        if (((puVar10 <= var_58h + -var_a8h) && (*puVar10 == var_98h)) &&\n                           ((var_a8h == 1 || (puVar10[1] == var_98h._1_1_)))) break;\n                    }\n                    else {\n                        iVar6 = fcn.0042efe8(puVar10, var_ach, var_58h, &var_a8h, var_ch);\n                        if (iVar6 != 0) break;\n                    }\n                    do {\n                        puVar10 = puVar10 + 1;\n                        if (arg_8h <= puVar10) break;\n                    } while ((*puVar10 & 0xc0) == 0x80);\n                } while (puVar10 < var_58h);\n            }\n        }\n        arg_8h = puVar10;\n        puVar10 = puVar9;\n        if (((piVar4[2] | arg_18h) & 0x4000000) == 0) {\n            if (var_18h < 0) {\n                if ((var_e4h != 0) && (var_5ch + arg_14h < puVar9)) {\n                    if (var_ch == 0) {\n                        for (; puVar10 < arg_8h; puVar10 = puVar10 + 1) {\n                            if (var_ach == 0) {\n                                if (((var_5ch + var_a8h <= puVar10) && (puVar10[-var_a8h] == var_98h)) &&\n                                   ((var_a8h == 1 || ((puVar10 + -var_a8h)[1] == var_98h._1_1_)))) break;\n                            }\n                            else if ((var_5ch < puVar10) &&\n                                    (iVar6 = fcn.0042ee14(puVar10, var_ach, var_5ch, &var_a8h, 0),  iVar6 != 0)) break;\n                        }\n                    }\n                    else if (puVar9 < arg_8h) {\n                        do {\n                            if (var_ach == 0) {\n                                if (((var_5ch + var_a8h <= puVar10) && (puVar10[-var_a8h] == var_98h)) &&\n                                   ((var_a8h == 1 || ((puVar10 + -var_a8h)[1] == var_98h._1_1_)))) break;\n                            }\n                            else if ((var_5ch < puVar10) &&\n                                    (iVar6 = fcn.0042ee14(puVar10, var_ach, var_5ch, &var_a8h, var_ch),  iVar6 != 0))\n                            break;\n                            do {\n                                puVar10 = puVar10 + 1;\n                                if (arg_8h <= puVar10) goto code_r0x00446a1c;\n                            } while ((*puVar10 & 0xc0) == 0x80);\n                            if (arg_8h <= puVar10) break;\n                        } while( true );\n                    }\ncode_r0x00446a1c:\n                    if ((puVar10[-1] == 0xd) &&\n                       ((((var_ach == 1 || (var_ach == 2)) && (puVar10 < arg_8h)) && (*puVar10 == 10)))) {\n                        puVar10 = puVar10 + 1;\n                    }\n                }\n            }\n            else if (var_20h == 0) {\n                for (; (puVar10 = puVar9,  puVar9 < arg_8h && (*puVar9 != var_18h)); puVar9 = puVar9 + 1) {\n                }\n            }\n            else {\n                while ((puVar10 = puVar9,  puVar9 < arg_8h && (*(*puVar9 + var_94h) != var_18h))) {\n                    puVar9 = puVar9 + 1;\n                }\n            }\n        }\n        arg_8h = var_14h;\n        puVar9 = var_d4h;\n        if ((((var_e8h == 0) && (var_48h == 0)) && (-1 < var_e0h)) &&\n           ((var_14h - puVar10 < 1000 && (puVar7 = puVar10 + (-1 < var_18h),  var_d4h < puVar7)))) {\n            if (var_dch == 0) {\n                if (puVar7 < var_14h) {\n                    while (uVar2 = *puVar7,  puVar7 = puVar7 + 1,  uVar2 != var_e0h) {\n                        if (var_14h <= puVar7) {\n                            var_8h = 0;\n                            iVar6 = var_8h;\n                            goto code_r0x00446c49;\n                        }\n                    }\n                    goto code_r0x00446ad1;\n                }\n            }\n            else if (puVar7 < var_14h) {\n                while( true ) {\n                    uVar2 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    if ((uVar2 == var_e0h) || (uVar2 == var_c8h)) break;\n                    if (var_14h <= puVar7) goto code_r0x00446aa9;\n                }\ncode_r0x00446ad1:\n                puVar9 = puVar7 + -1;\n                if (puVar7 + -1 < var_14h) goto code_r0x00446adc;\n            }\ncode_r0x00446aa9:\n            var_8h = 0;\n            iVar6 = var_8h;\n            goto code_r0x00446c49;\n        }\ncode_r0x00446adc:\n        var_d4h = puVar9;\n        var_c4h = 0;\n        var_54h = puVar10;\n        var_4ch = puVar10;\n        var_8h = fcn.00436f5e(puVar10, var_60h, puVar10, 0, 2, &var_c4h, var_ech, 0, 0, 0);\n        if ((var_68h != 0) && (var_10h == NULL)) {\n            var_10h = var_4ch;\n        }\n        if (0 < var_8h) {\ncode_r0x00446c37:\n            if ((var_8h == 1) || (iVar6 = var_8h,  var_8h == -999)) {\n                if (var_1ch != 0) {\n                    if (3 < arg_20h) {\n                        fcn.00411000(arg_1ch + 2, var_b8h + 2, arg_20h * 4 + -8);\n                    }\n                    if (arg_20h < var_44h) {\n                        var_8ch = 1;\n                    }\n                    (**0x491494)(var_b8h);\n                }\n                if (var_8ch == 0) {\n                    var_44h = var_44h / 2;\n                }\n                else {\n                    var_44h = 0;\n                }\n                if (1 < arg_20h) {\n                    *arg_1ch = var_54h - var_5ch;\n                    arg_1ch[1] = var_50h - var_5ch;\n                    return var_44h;\n                }\n                return 0;\n            }\ncode_r0x00446c49:\n            puVar9 = var_10h;\n            if (var_1ch != 0) {\n                (**0x491494)(var_b8h);\n            }\n            if ((iVar6 != 0) && (iVar6 != -0xc)) {\n                return iVar6;\n            }\n            if (puVar9 == NULL) {\n                return -1;\n            }\n            if (1 < arg_20h) {\n                *arg_1ch = puVar9 - arg_ch;\n                arg_1ch[1] = var_14h - arg_ch;\n            }\n            return -0xc;\n        }\n        if (var_8h == 0) {\ncode_r0x00446b4f:\n            puVar9 = puVar10 + 1;\n            if (var_ch != 0) {\n                for (; (puVar9 < var_14h && ((*puVar9 & 0xc0) == 0x80)); puVar9 = puVar9 + 1) {\n                }\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x446d4b\n            switch(var_8h) {\n            default:\n                goto code_r0x00446c37;\n            case -0x3e6:\n                iVar6 = 0;\n                goto code_r0x00446c49;\n            case -0x3e5:\n            case -0x3e3:\n            case -0x3e2:\n                goto code_r0x00446b4f;\n            case -0x3e4:\n                puVar9 = var_54h;\n                if (var_54h == puVar10) goto code_r0x00446b4f;\n            }\n        }\n        var_8h = 0;\n        if (var_cch != 0) {\n            if (var_ach == 0) {\n                if (((puVar10 <= var_58h + -var_a8h) && (*puVar10 == var_98h)) &&\n                   ((iVar6 = var_8h,  var_a8h == 1 || (puVar10[1] == var_98h._1_1_)))) goto code_r0x00446c49;\n            }\n            else if ((puVar10 < var_58h) &&\n                    (iVar8 = fcn.0042efe8(puVar10, var_ach, var_58h, &var_a8h, var_ch),  iVar6 = var_8h,  iVar8 != 0))\n            goto code_r0x00446c49;\n        }\n        iVar6 = var_8h;\n        if ((var_d0h != 0) || (var_14h < puVar9)) goto code_r0x00446c49;\n        if (((((puVar9[-1] == 0xd) && (puVar9 < var_14h)) && (*puVar9 == 10)) && ((*(piVar4 + 3) & 0x20) == 0)) &&\n           (((var_ach == 1 || (var_ach == 2)) || (var_a8h == 2)))) {\n            puVar9 = puVar9 + 1;\n        }\n        var_28h = 0;\n    } while( true );\n}\n",
        "token_count": 5537
    },
    "00446da3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446da3(uint hdc, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    uint lplb;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != -1) && (((*0x4a86f4 != arg_ch || (*0x4a86f0 != arg_18h)) || (*0x4a86f8 != arg_14h)))) {\n        if (*0x4a86e4 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(*0x4a86e4);\n            *0x4a86e4 = 0;\n        }\n        *0x4a86f0 = arg_18h;\n        *0x4a86f4 = arg_ch;\n        *0x4a86f8 = arg_14h;\n        lplb = 0;\n        var_8h = arg_ch;\n        var_4h = 0;\n        if (arg_18h != 1) {\n            arg_14h = arg_14h | 0x10000;\n        }\n        *0x4a86e4 = (*_sym.imp.GDI32.dll_ExtCreatePen)(arg_14h, arg_18h, &lplb, 0, 0);\n        *0x4a86e8 = (*_sym.imp.GDI32.dll_SelectObject)(hdc, *0x4a86e4);\n        if (*0x4a86ec == '\\0') {\n            (*_sym.imp.GDI32.dll_BeginPath)(hdc);\n            *0x4a86ec = '\\x01';\n        }\n    }\n    if ((arg_10h != -1) && (arg_10h != -2)) {\n        uVar1 = fcn.0044112e(arg_10h, 0);\n        (*_sym.imp.GDI32.dll_SelectObject)(hdc, uVar1);\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "00446e7d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446e7d(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    if ((arg_14h & 1) != 0) {\n        fcn.00446da3(arg_8h, 0, 0xffffffff, 0, 1);\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg_8h, arg_ch + -2, arg_10h, 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg_8h, arg_ch + 3, arg_10h);\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg_8h, arg_ch, arg_10h + -2, 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg_8h, arg_ch, arg_10h + 3);\n        if (*0x4a86ec != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)(arg_8h);\n            *0x4a86ec = '\\0';\n        }\n        (*_sym.imp.GDI32.dll_StrokePath)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "00446ef9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446ef9(uint arg_8h, uint arg_ch, uint arg_10h, uint nXEnd, uint nYEnd, uint32_t arg_1ch)\n\n{\n    if ((arg_1ch & 2) != 0) {\n        fcn.00446da3(arg_8h, 0, 0xffffffff, 2, 1);\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg_8h, arg_ch, arg_10h, 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg_8h, nXEnd, nYEnd);\n        if (*0x4a86ec != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)(arg_8h);\n            *0x4a86ec = '\\0';\n        }\n        (*_sym.imp.GDI32.dll_StrokePath)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00446f57": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint32_t __cdecl fcn.00446f57(int32_t *nBottomRect, uint32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t hdc;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t crColor;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *nRightRect;\n    \n    var_18h = arg_ch;\n    hdc = nBottomRect;\n    iVar5 = -2;\n    arg_ch = 0;\n    crColor = 0;\n    var_ch = -2;\n    var_14h = 1;\n    if (var_18h != 0) {\n        do {\n            var_8h = 0;\n            fcn.00446da3(hdc, crColor, iVar5, 0, var_14h);\n            if (0 < *(var_18h + 0xc)) {\n                nRightRect = var_18h + 0x10;\n                nBottomRect = var_18h + 0x14;\n                do {\n                    iVar5 = *nRightRect;\n                    uVar4 = *(var_18h + 0x810 + var_8h);\n                    iVar6 = *nBottomRect;\n                    if (0x10 < uVar4 - 8) goto code_r0x00447158;\n    // switch table (17 cases) at 0x44719f\n                    switch(*(*(uVar4 + 0x4471bb) * 4 + 0x44719f)) {\n                    case 0x446ff0:\n                        if (iVar5 != 0) {\n                            arg_ch = 0x1000000;\n                        }\n                        break;\n                    case 0x447001:\n                        var_14h = iVar5;\n                        break;\n                    case 0x447009:\n                        if (crColor != -1) {\n                            var_18h = hdc;\n                            fcn.0043035c(hdc, var_ch);\n                        }\n                        if (*nRightRect != -1) {\n                            crColor = *nRightRect;\n                        }\n                        if (*nBottomRect != -1) {\n                            var_ch = *nBottomRect;\n                        }\n                        fcn.00446da3(hdc, crColor, var_ch, 0, var_14h);\n                        break;\n                    case 0x44704c:\n                        var_8h = var_8h + 1;\n                        nBottomRect = nBottomRect + 2;\n                        nRightRect = nRightRect + 2;\n                        iVar7 = hdc;\n                        iVar8 = var_ch;\n                        fcn.0043035c(hdc, var_ch);\n                        fcn.00446da3(hdc, crColor, var_ch, 0, var_14h);\n                        goto code_r0x0044714f;\n                    case 0x44708d:\n                        var_8h = var_8h + 1;\n                        nBottomRect = nBottomRect + 2;\n                        nRightRect = nRightRect + 2;\n                        fcn.0043035c(hdc, var_ch);\n                        fcn.00446da3(hdc, crColor, var_ch, 0, var_14h);\n                        (*_sym.imp.GDI32.dll_Ellipse)(hdc, iVar5, iVar6, *nRightRect + iVar5, *nBottomRect + iVar6);\n                        break;\n                    case 0x4470d7:\n                        (*_sym.imp.GDI32.dll_MoveToEx)(hdc, iVar5, iVar6, 0);\n                        piVar1 = nBottomRect + 2;\n                        piVar2 = nRightRect + 2;\n                        var_8h = var_8h + 2;\n                        piVar3 = nRightRect + 4;\n                        nRightRect = nRightRect + 4;\n                        nBottomRect = nBottomRect + 4;\n                        (*_sym.imp.GDI32.dll_AngleArc)(hdc, iVar5, iVar6, *piVar2, *piVar1, *piVar3);\n                        (*_sym.imp.GDI32.dll_LineTo)(hdc, iVar5, iVar6);\n                        (*_sym.imp.GDI32.dll_CloseFigure)(hdc);\n                        break;\n                    case 0x44712f:\n                        (*_sym.imp.GDI32.dll_SetPixel)(hdc, iVar5, iVar6, crColor);\n                        break;\n                    case 0x44713e:\n                        iVar8 = iVar6 + 1 + var_14h;\n                        iVar7 = iVar5 + 1 + var_14h;\n                        iVar6 = iVar6 - var_14h;\n                        iVar5 = iVar5 - var_14h;\ncode_r0x0044714f:\n                        (*_sym.imp.GDI32.dll_Rectangle)(hdc, iVar5, iVar6, iVar7, iVar8);\n                    }\ncode_r0x00447158:\n                    nBottomRect = nBottomRect + 2;\n                    nRightRect = nRightRect + 2;\n                    var_8h = var_8h + 1;\n                    iVar5 = var_ch;\n                } while (var_8h < *(var_18h + 0xc));\n            }\n            var_18h = *(var_18h + 4);\n        } while (var_18h != 0);\n    }\n    uVar4 = fcn.0043035c(hdc, iVar5);\n    return uVar4 & 0xffffff00 | arg_ch >> 0x18;\n}\n",
        "token_count": 1297
    },
    "004474b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004474b4(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t lParam)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpPoint;\n    uint var_4h;\n    \n    iVar4 = fcn.00431228(0x4a8630, arg_8h);\n    puVar2 = **(*0x4a8690 + iVar4 * 4);\n    if (arg_ch == arg_8h) {\n        if (puVar2[0x69] != 0) {\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            (*_sym.imp.USER32.dll_TrackPopupMenuEx)(puVar2[0x69], 0, lpPoint, var_4h, arg_8h, 0);\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.00441878(0x4a8630, arg_ch);\n        if (iVar4 != -1) {\n            iVar3 = **(*0x4a86a4 + iVar4 * 4);\n            cVar1 = *(iVar3 + 0x88);\n            if ((((cVar1 != '\\x0e') && (cVar1 != '\\x0f')) && (cVar1 != '\\x13')) &&\n               ((cVar1 != '\\x10' && (*(iVar3 + 8) != 0)))) {\n                (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n                (*_sym.imp.USER32.dll_TrackPopupMenuEx)\n                          (*(**(*0x4a86a4 + iVar4 * 4) + 8), 0, lpPoint, var_4h, *puVar2, 0);\n                return;\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x7b, arg_ch, arg_10h & 0xffff | lParam << 0x10);\n    return;\n}\n",
        "token_count": 464
    },
    "004475a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004475a8(int32_t arg_8h, uint wParam, uint32_t arg_10h, int32_t lParam)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iStack44;\n    int32_t iStack40;\n    uchar auStack32 [28];\n    \n    iVar6 = 0x4a8630;\n    iVar3 = fcn.00431228(0x4a8630, arg_8h);\n    iVar2 = **(*0x4a8690 + iVar3 * 4);\n    (*_sym.imp.USER32.dll_GetClientRect)(arg_8h);\n    (*_sym.imp.USER32.dll_GetCursorPos)(&stack0xffffffd0);\n    iVar4 = unaff_ESI;\n    iVar7 = unaff_EBX;\n    (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &stack0xffffffc4);\n    if ((((iVar4 <= auStack32) && (auStack32 <= iStack44)) && (iVar7 <= iVar6)) && (iVar6 <= iStack40)) {\n        if (((*(iVar2 + 0x16c) != '\\0') &&\n            (iVar4 = (*_sym.imp.USER32.dll_WindowFromPoint)(unaff_ESI, unaff_EBX),  iVar4 != 0)) &&\n           ((iVar4 != arg_8h &&\n            ((iVar4 = fcn.00441878(0x4a8630, iVar4),  iVar4 != -1 &&\n             (iVar1 = *(**(*0x4a86a4 + iVar4 * 4) + 0x7c),  iVar1 != -1)))))) {\n            fcn.00430d56(iVar1);\n            return 1;\n        }\n        fcn.00430d56(*(**(*0x4a8690 + iVar3 * 4) + 0x10));\n        if (*(iVar2 + 0x14) != 0) {\n            return 1;\n        }\n    }\n    uVar5 = (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x20, wParam, arg_10h & 0xffff | lParam << 0x10);\n    return uVar5;\n}\n",
        "token_count": 552
    },
    "00447a2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447a2c(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h[1] != 0) {\n        iVar1 = fcn.00411777(0xc);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0044798a(iVar1, arg_ch);\n            *(iVar1 + 8) = arg_8h[1];\n            *(arg_8h[1] + 4) = iVar1;\n            arg_8h[2] = arg_8h[2] + 1;\n            arg_8h[1] = iVar1;\n            return;\n        }\n        *0x8 = arg_8h[1];\n        *(arg_8h[1] + 4) = 0;\n        arg_8h[2] = arg_8h[2] + 1;\n        arg_8h[1] = 0;\n        return;\n    }\n    iVar1 = fcn.00411777(0xc);\n    if (iVar1 != 0) {\n        uVar2 = fcn.0044798a(iVar1, arg_ch);\n        arg_8h[2] = arg_8h[2] + 1;\n        *arg_8h = uVar2;\n        arg_8h[1] = uVar2;\n        return;\n    }\n    arg_8h[2] = arg_8h[2] + 1;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return;\n}\n",
        "token_count": 370
    },
    "00447c6d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00447c6d(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint uVar6;\n    \n    iVar3 = arg_ch;\n    if (arg_10h == -1) {\n        if (*(arg_8h + 0x1a4) == 0) {\n            uVar6 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n            *(arg_8h + 0x1a4) = uVar6;\n            *(arg_8h + 0x1a8) = uVar6;\n            *(iVar3 + 8) = uVar6;\n            if (*(arg_8h + 0x1a4) == 0) {\n                return 0;\n            }\n        }\ncode_r0x00447d16:\n        *(iVar3 + 0x8a) = 0;\n        return 1;\n    }\n    cVar5 = fcn.004417f1(0x4a8630, arg_10h, &arg_10h, &arg_ch);\n    iVar4 = arg_ch;\n    if (cVar5 != '\\0') {\n        iVar1 = **(*0x4a86a4 + arg_ch * 4);\n        cVar5 = *(iVar1 + 0x88);\n        iVar2 = **(*0x4a8690 + arg_10h * 4);\n        if ((((cVar5 != '\\x0e') && (cVar5 != '\\x0f')) && (cVar5 != '\\x02')) &&\n           ((cVar5 != '\\x03' && (*(iVar1 + 8) == 0)))) {\n            uVar6 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n            *(iVar3 + 8) = uVar6;\n            *(iVar2 + 0x1a8) = uVar6;\n            *(**(*0x4a86a4 + iVar4 * 4) + 8) = *(iVar3 + 8);\n            if (*(iVar3 + 8) != 0) goto code_r0x00447d16;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 514
    },
    "00447d4a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00447d4a(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char cVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t unaff_EBX;\n    int16_t iStackY8252;\n    uint uStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    int32_t iStackY152;\n    uint uStackY148;\n    uint uStackY144;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x447d57;\n    fcn.00422880();\n    var_4h = unaff_EBX;\n    cVar4 = fcn.004417f1(0x4a8630, arg_14h, &fcn.00447d4a::arg_14h, &fcn.00447d4a::var_4h);\n    iVar3 = var_4h;\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    if (cVar4 != '\\0') {\n        arg_8h_00 = **(*0x4a8690 + arg_14h * 4);\n        uVar1 = ***(*0x4a86a4 + var_4h * 4);\n        *(arg_8h + 0x30) = uVar1;\n        *(arg_8h + 0x8b) = *(**(*0x4a86a4 + var_4h * 4) + 0x8b);\n        (*pcVar2)();\n        iVar6 = (*pcVar2)();\n        *(arg_8h + 0x8c) = iVar6;\n        *(**(*0x4a86a4 + var_4h * 4) + 0x8c) = iVar6;\n        uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n        fcn.004130e0();\n        uVar5 = (*pcVar2)();\n        *(arg_8h + 0x80) = uVar5;\n        arg_14h = 1;\n        fcn.00430c45(&stack0xffffdfc4, &fcn.00447d4a::arg_10h, 0x4a8644);\n        var_4h = (*pcVar2)();\n        if (var_4h != -1) {\n            while( true ) {\n                cVar4 = fcn.00430c45(&stack0xffffdfc4, &fcn.00447d4a::arg_10h, 0x4a8644);\n                if (cVar4 == '\\0') {\n                    if (*(arg_8h + 0x8b) != -1) {\n                        uStackY144 = 0x447f76;\n                        fcn.004311a6(arg_8h_00, **(*0x4a86a4 + iVar3 * 4), 1);\n                    }\n                    return 1;\n                }\n                if (iVar6 < arg_14h) break;\n                if (iStackY8252 != 0) {\n                    uStackY148 = 0x447edd;\n                    uStackY144 = uVar1;\n                    iVar8 = (*pcVar2)();\n                    if (iVar8 == 0) {\n                        return 0;\n                    }\n                }\n                if ((uVar7 & 1) != 0) {\n                    uStackY148 = 0x447ef8;\n                    uStackY144 = uVar1;\n                    arg_ch = (*pcVar2)();\n                    arg_ch = arg_ch + 0xc;\n                    if (0x96 < arg_ch) {\n                        arg_ch = 0x96;\n                    }\n                    uStackY148 = 0;\n                    iStackY152 = arg_14h;\n                    uStackY156 = 0x101d;\n                    uStackY164 = 0x447f1a;\n                    uStackY160 = uVar1;\n                    iVar8 = (*pcVar2)();\n                    if (iVar8 <= arg_ch) {\n                        (*pcVar2)();\n                    }\n                }\n                arg_14h = arg_14h + 1;\n            }\n            uStackY148 = 0x447f49;\n            uStackY144 = uVar1;\n            (*pcVar2)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1173
    },
    "004480a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004480a7(uint *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int16_t *arg_18h, uint item, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint lpmi;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    int16_t *var_10h;\n    \n    iVar4 = arg_14h;\n    iVar1 = arg_ch;\n    lpmi = 0x30;\n    fcn.004130e0(&var_30h, 0, 0x2c);\n    if (iVar4 == -1) {\n        if (arg_8h[0x6a] == 0) {\n            return 0;\n        }\n        *(iVar1 + 8) = arg_8h[0x68];\n    }\n    else {\n        cVar3 = fcn.004417f1(0x4a8630, iVar4, &arg_14h, &arg_ch);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        arg_8h = **(*0x4a8690 + arg_14h * 4);\n        if (arg_8h[0x6a] == 0) {\n            return 0;\n        }\n        *(iVar1 + 8) = *(**(*0x4a86a4 + arg_ch * 4) + 8);\n        if (*(**(*0x4a86a4 + arg_ch * 4) + 0x88) == '\\x0e') {\n            var_30h = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*(iVar1 + 8), iVar4, 0, &lpmi);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(iVar1 + 8) = var_20h;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IsMenu)(*(iVar1 + 8));\n        if (iVar4 == 0) {\n            return 0;\n        }\n    }\n    uVar2 = item;\n    var_30h = 0x13;\n    var_2ch = 0;\n    if (arg_20h == 1) {\n        var_2ch = 0x200;\n    }\n    if (*arg_18h == 0) {\n        var_2ch = 0x800;\n    }\n    else {\n        var_10h = arg_18h;\n    }\n    var_24h = arg_10h;\n    iVar4 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*(iVar1 + 8), item, 1, &lpmi);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x80) = uVar2;\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*arg_8h);\n    return 1;\n}\n",
        "token_count": 704
    },
    "00448333": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00448333(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *hWnd;\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    code *pcVar3;\n    char cVar4;\n    uint *arg_ch_00;\n    uint uVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    int32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    uint uVar8;\n    uint uVar9;\n    uint *in_stack_ffffff48;\n    uint *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uchar *arg_10h;\n    uchar *puVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    uint *puStack148;\n    uint uStack144;\n    uint *puStack140;\n    uchar auStack136 [4];\n    int32_t iStack132;\n    uint uStack128;\n    uchar auStack124 [20];\n    uint uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint uStack92;\n    uint uStack56;\n    \n    puVar13 = &stack0xffffff78;\n    arg_10h = &stack0xffffff84;\n    iVar12 = 0x4a8630;\n    iVar11 = 0x44835d;\n    cVar4 = fcn.004417f1(0x4a8630, arg_8h, arg_10h, puVar13);\n    if (cVar4 == '\\0') {\ncode_r0x00448361:\n        return NULL;\n    }\n    uStack144 = **(*0x4a8690 + puStack140 * 4);\n    hWnd = **(*0x4a86a4 + unaff_EBX * 4);\n    puStack148 = *hWnd;\n    uVar15 = unaff_ESI & 0xffffff | *(hWnd + 0x22) << 0x18;\n    iVar14 = 0;\n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    arg_ch_00 = arg_ch & 0x100;\n    if (arg_ch_00 != NULL) {\n        in_stack_ffffff48 = puStack140;\n        iVar11 = unaff_EBX;\n        fcn.004412cd(puStack140, unaff_EBX);\n        arg_10h = 0x1;\n    }\n    if ((arg_ch & 0x800) != 0) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(uVar15, 0, 0, 0, 0, 0, 0x13);\n        arg_10h = 0x1;\n    }\n    // switch table (18 cases) at 0x44894b\n    switch(puVar13 >> 0x18) {\n    case 9:\n        if ((arg_ch & 7) == 0) {\n            uVar9 = 0;\n            uVar8 = 0;\n            uVar5 = 0x466;\n        }\n        else {\n            if ((arg_ch & 7) != 1) {\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar15, 0x467, 0, 0);\n                break;\n            }\n            uVar9 = 0xffff0000;\n            uVar8 = 0xffffffff;\n            uVar5 = 0x465;\n        }\n        iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(uVar15, uVar5, uVar8, uVar9);\n        if (iVar11 == 0) goto code_r0x00448757;\n        break;\n    default:\n        goto code_r0x00448757;\n    case 0xb:\n        if ((arg_ch & 0x10) == 0) goto code_r0x00448757;\n        uVar7 = *(hWnd + 0x8b);\n        if (*(arg_ch_00 + 0x67) != '\\0') {\n            arg_ch_00[0x65] = arg_ch_00[0x66];\n        }\n        puVar10 = arg_ch_00;\n        fcn.00440709(0x4a8630, arg_ch_00, uVar7);\n        arg_ch_00[0x66] = *(hWnd + 0x8b);\n        arg_ch_00 = puVar10;\n        break;\n    case 0xc:\n        goto code_r0x00448361;\n    case 0xe:\n    case 0xf:\n        uStack144 = 0x30;\n        puStack140 = 0x1;\n        iVar11 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(hWnd[2], unaff_EBX, 0, &stack0xffffff70);\n        if (iVar11 == 0) {\n            return NULL;\n        }\n        if ((arg_ch & 0x20) != 0) {\n            return NULL;\n        }\n        if (arg_ch < '\\0') {\n            in_stack_ffffff48 = 0x3;\n        }\n        if ((arg_ch & 1) != 0) {\n            in_stack_ffffff48 = in_stack_ffffff48 | 8;\n        }\n        if (iVar12 != 0) {\n            in_stack_ffffff48 = in_stack_ffffff48 | 0x80;\n        }\n        if (((puStack148 & 8) != 0) && ((arg_ch & 4) == 0)) {\n            in_stack_ffffff48 = in_stack_ffffff48 | 8;\n        }\n        puVar10 = in_stack_ffffff48;\n        (*_sym.imp.USER32.dll_SetMenuItemInfoW)(hWnd[2], unaff_EBX, 0, &stack0xffffff60);\n        if ((arg_ch & 0x200) == 0) {\n            iVar11 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(hWnd[2], unaff_EBX, 0, &stack0xffffff50);\n            if ((iVar11 != 0) && ((puVar13 & 0x1000) != 0)) {\n                unaff_EBX = -1;\n                goto code_r0x004486c0;\n            }\n        }\n        else {\ncode_r0x004486c0:\n            (*_sym.imp.USER32.dll_SetMenuDefaultItem)(hWnd[2], unaff_EBX, 0);\n        }\n        (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar10);\n        puStack148 = in_stack_ffffff48;\n        break;\n    case 0x11:\n        (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd[0xc], 0xfffffff0);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n        uStack100 = hWnd[3];\n        uStack96 = (-((arg_ch & 1) != 0) & 0x1000) + 0x1000;\n        uStack104 = 8;\n        uStack92 = 0xf010;\n        if ((arg_ch & 0x200) != 0) {\n            uStack96 = uStack96 | 0x10;\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd[0xc], 0x113f, 0, &stack0xffffff98);\n        if ((arg_ch & 0x400) != 0) {\n            (*pcVar3)(hWnd[0xc], 0x1102, 2, hWnd[3]);\n        }\n        if (iVar14 != 0) {\n            uVar5 = fcn.00441878(0x4a8630, hWnd[0xc]);\n            fcn.004412cd(uVar15, uVar5);\n            (*pcVar3)(hWnd[0xc], 0x110b, 9, hWnd[3]);\n        }\n        break;\n    case 0x14:\n        uVar15 = hWnd[0xc];\n        puVar13 = NULL;\n        uStack56 = 1;\n        iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(uVar15, 0x1053, 0xffffffff, &stack0xffffffc8);\n        if (iVar11 == -1) {\n            return NULL;\n        }\n        iVar12 = 8;\n        uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar15, 0xffffffec);\n        if (((uVar6 & 4) != 0) && ((arg_ch & 5) != 0)) {\n            iStack132 = (-(arg_ch != 1) & 0xfffff000) + 0x2000;\n            uStack128 = 0xf000;\n            puVar13 = (*_sym.imp.USER32.dll_SendMessageW)(uVar15, 0x104c, 0, &stack0xffffff70);\n        }\n        if ((arg_ch & 0x2100) == 0) {\n            return puVar13;\n        }\n        if (iVar12 != 0) {\n            iStack132 = -1;\n        }\n        if ((arg_ch & 0x2000) != 0) {\n            iStack132 = 0;\n        }\n        uStack128 = 3;\n        puVar13 = (*_sym.imp.USER32.dll_SendMessageW)(uVar15, 0x102b, iVar11, &stack0xffffff70);\n        return puVar13;\n    case 0x16:\n        iVar12 = 3;\n        if (2 < *0x4a86b4) {\n            do {\n                ppuVar1 = *(*0x4a86a4 + iVar12 * 4);\n                if ((((*ppuVar1 != NULL) && (puVar2 = *ppuVar1,  puVar2[1] == arg_ch_00[1])) &&\n                    (*(puVar2 + 0x22) == '\\x03')) && (*puVar2 == hWnd[0xc])) {\n                    if (((arg_ch & *(hWnd + 0x8a)) == 0) && ((*(hWnd + 0x8a) & 0x10) != 0)) {\n                        puVar10 = **(*0x4a86a4 + iVar12 * 4);\n                        (*_sym.imp.USER32.dll_MoveWindow)\n                                  (*puVar10, *(puVar10 + 0x20), *(puVar10 + 0x82), *(puVar10 + 0x21), *(puVar10 + 0x86)\n                                   , 0);\n                        (*_sym.imp.USER32.dll_SendMessageW)(iVar11, 0x469, hWnd[0xc], 0);\n                    }\n                    break;\n                }\n                iVar12 = iVar12 + 1;\n            } while (iVar12 <= *0x4a86b4);\n        }\n        goto code_r0x00448757;\n    case 0x18:\n        if ((arg_ch & 0x200) == 0) goto code_r0x00448757;\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch_00, 0x401, unaff_EBX, 0);\n        uVar6 = (*_sym.imp.USER32.dll_GetFocus)();\n        if (uVar6 == *hWnd) {\n            fcn.004412cd(puStack148, unaff_EBX);\n        }\n        break;\n    case 0x19:\n        if ((arg_ch & 7) == 0) goto code_r0x00448757;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar15, 0xf1, arg_ch & 3, 0);\n        break;\n    case 0x1a:\n        if ((arg_ch & 7) == 0) goto code_r0x00448757;\n        fcn.00440a94(unaff_EBX, arg_ch & 3);\n    }\n    arg_10h = 0x1;\ncode_r0x00448757:\n    arg_ch = arg_ch & 0x10f8;\n    if (arg_ch != 0) {\n        uVar7 = 0;\n        arg_10h = 0x1;\n        if (arg_ch < '\\0') {\n            uVar7 = 0xc0;\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar15, 0);\n        }\n        if ((arg_ch & 0x40) != 0) {\n            uVar7 = 0xc0;\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar15, 1);\n        }\n        if ((arg_ch & 0x20) != 0) {\n            uVar7 = uVar7 + 0x30;\n        }\n        if ((arg_ch & 0x10) != 0) {\n            uVar7 = uVar7 + 0x30;\n        }\n        if ((arg_ch & 8) != 0) {\n            uVar7 = uVar7 + 8;\n        }\n        if ((arg_ch & 0x1000) != 0) {\n            uVar7 = uVar7 + 8;\n        }\n        *(hWnd + 0x8a) = ~uVar7 & *(hWnd + 0x8a) | arg_ch;\n        pcVar3 = _sym.imp.USER32.dll_ShowWindow;\n        if (((*(hWnd + 0x8b) == 0xff) || (*(hWnd + 0x8b) == arg_ch_00[0x65])) || (arg_ch_00[0x65] == 0xffffffff)) {\n            if ((arg_ch & 0x20) != 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(uVar15, 0);\n            }\n            cVar4 = arg_ch_00 >> 0x18;\n            if (((puStack148 != NULL) && ((*pcVar3)(uVar15),  cVar4 == '\\x1a')) && ((*(hWnd + 0x8a) & 0x40) != 0)) {\n                (*_sym.imp.USER32.dll_EnableWindow)(uVar15);\n            }\n            fcn.004311a6(puStack140, hWnd, 1);\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 3155
    },
    "00448989": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448989(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *hWnd;\n    uint uVar2;\n    code *pcVar3;\n    int32_t arg_8h_00;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t var_8h;\n    uint var_4h;\n    \n    cVar4 = fcn.004417f1(0x4a8630, arg_8h, &arg_8h, &var_8h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    var_4h = **(*0x4a8690 + arg_8h * 4);\n    hWnd = **(*0x4a86a4 + var_8h * 4);\n    uVar1 = *(hWnd + 0x22);\n    uVar2 = *hWnd;\n    arg_8h = arg_8h & 0xffffff | uVar1 << 0x18;\n    fcn.00433146(&arg_ch);\n    if (-1 < hWnd[0x11]) {\n        fcn.004410a6(hWnd[0x11]);\n    }\n    arg_8h_00 = arg_ch;\n    // switch table (9 cases) at 0x448b89\n    switch(uVar1) {\n    case 0:\n        if (arg_ch < 0) {\n            return 0;\n        }\n        hWnd[0x11] = arg_ch;\n        fcn.0044112e(arg_ch, 1);\n        break;\n    default:\n        return 0;\n    case 8:\n        if (arg_ch < 0) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x2001, 0, arg_ch);\n        break;\n    case 0x10:\n        if (arg_ch < 0) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x111d, 0, arg_ch);\n        break;\n    case 0x11:\n    case 0x14:\n        if (arg_ch < 0) {\n            return 0;\n        }\n        hWnd[0x11] = arg_ch;\n        fcn.0044112e(arg_ch, 1);\n        (*_sym.imp.USER32.dll_InvalidateRect)(hWnd[0xc], 0, 1);\n        break;\n    case 0x12:\n        if (arg_ch < -1) {\n            return 0;\n        }\n        hWnd[0x11] = arg_ch;\n        fcn.0044112e(arg_ch, 1);\n        pcVar3 = _sym.imp.USER32.dll_ShowWindow;\n        if ((*(hWnd + 0x8a) & 0x20) == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*hWnd, 0);\n            (*pcVar3)(*hWnd, 5);\n            (*_sym.imp.USER32.dll_SetFocus)(*hWnd);\n        }\n        break;\n    case 0x13:\n        if (arg_ch == -2) {\n            return 0;\n        }\n        if (arg_ch == -0x2000000) {\n            hWnd[0x11] = 0xfe000000;\n            fcn.0044112e(0xfe000000, 1);\n        }\n        else {\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x1001, 0, arg_ch);\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x1026, 0, arg_8h_00);\n            fcn.004311a6(var_4h, hWnd, 1);\n        }\n        break;\n    case 0x18:\n        if (arg_ch < 0) {\n            return 0;\n        }\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, uVar5 | 0xb);\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 0x17:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n        hWnd[0x11] = arg_8h_00;\n        fcn.0044112e(arg_8h_00, 1);\n        fcn.004311a6(var_4h, hWnd, 1);\n    }\n    if ((*0x49751c != 0) && (arg_8h._3_1_ == '\\b')) {\n        return 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 1081
    },
    "00448c34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448c34(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *hWnd;\n    uint uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t var_4h;\n    \n    cVar2 = fcn.004417f1(0x4a8630, arg_8h, &arg_8h, &var_4h);\n    if (cVar2 == '\\0') {\ncode_r0x00448d57:\n        return 0;\n    }\n    arg_8h = **(*0x4a8690 + arg_8h * 4);\n    hWnd = **(*0x4a86a4 + var_4h * 4);\n    uVar1 = *hWnd;\n    cVar2 = *(hWnd + 0x22);\n    fcn.00433146(&arg_ch);\n    // switch table (28 cases) at 0x448d64\n    switch(cVar2) {\n    default:\n        goto code_r0x00448d57;\n    case '\\b':\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x409, 0, arg_ch);\n        break;\n    case '\\x10':\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x111e, 0, arg_ch);\n        break;\n    case '\\x11':\n    case '\\x14':\n        hWnd[0x12] = arg_ch;\n        (*_sym.imp.USER32.dll_InvalidateRect)(hWnd[0xc], 0, 1);\n        break;\n    case '\\x13':\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x1024, 0, arg_ch);\n        break;\n    case '\\x18':\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar1, 0xfffffff0);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xfffffff0, uVar3 | 0xb);\n    case '\\0':\n    case '\\x01':\n    case '\\x02':\n    case '\\x03':\n    case '\\x04':\n    case '\\x17':\n    case '\\x19':\n    case '\\x1a':\n    case '\\x1b':\n        hWnd[0x12] = arg_ch;\n        fcn.004311a6(arg_8h, hWnd, 1);\n    }\n    if ((*0x49751c != 0) && ((((cVar2 == '\\b' || (cVar2 == '\\x04')) || (cVar2 == '\\x1a')) || (cVar2 == '\\x19')))) {\n        return 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 616
    },
    "00448d9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448d9c(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(*0x4a8690 + *0x4a869c * 4);\n    if ((arg_8h & 0x20000) != 0) {\n        fcn.00440bd8(0x4a8630, 0);\n    }\n    if (*(iVar1 + 0x68) == '\\0') {\n        *(iVar1 + 0x68) = 1;\n        arg_8h = arg_8h | 0x20000;\n    }\n    return arg_8h;\n}\n",
        "token_count": 152
    },
    "00448de0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: Msg\n\nuint __cdecl fcn.00448de0(int16_t *arg_8h, int16_t *arg_ch, int16_t *arg_10h)\n\n{\n    int16_t *piVar1;\n    uint *hWnd_00;\n    int16_t *piVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    uint16_t in_FPUControlWord;\n    int16_t aiStackY8456 [4098];\n    uint var_100h;\n    uint var_fch;\n    int16_t *var_f0h;\n    uint var_d8h;\n    int16_t *var_cch;\n    uint var_bch;\n    int16_t *var_b4h;\n    uint var_a4h;\n    uint var_a0h;\n    uint32_t var_9ch;\n    int16_t *var_80h;\n    uint var_7ch;\n    uint var_74h;\n    int16_t *var_68h;\n    uint uStackY96;\n    uint uStackY92;\n    uint var_54h;\n    int32_t iStackY84;\n    uint uStackY80;\n    uint *var_44h;\n    int32_t var_40h;\n    uint *var_3ch;\n    uint var_30h;\n    uint hWnd;\n    uint var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint Msg;\n    uint var_8h;\n    \n    fcn.00422880();\n    var_cch = arg_ch;\n    piVar2 = arg_8h;\n    piVar1 = arg_ch;\n    Msg = 0;\n    var_8h = 0;\n    var_10h = &fcn.00448de0::var_18h;\n    var_14h = &fcn.00448de0::arg_ch;\n    cVar3 = fcn.004417f1(0x4a8630, arg_8h, var_14h, var_10h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    arg_ch = **(*0x4a8690 + arg_ch * 4);\n    hWnd_00 = **(*0x4a86a4 + piVar2 * 4);\n    uStackY92 = *hWnd_00;\n    // switch table (4 cases) at 0x4493ec\n    switch(*(hWnd_00 + 0x22)) {\n    case 0:\n        var_14h = 0x143;\n        Msg = 0x158;\n        var_8h = 0x14e;\n        var_10h = 0x14b;\n        break;\n    case 1:\n        var_14h = 0x180;\n        Msg = 0x1a2;\n        var_8h = 0x186;\n        var_10h = 0x184;\n        break;\n    case 2:\n    case 3:\n        break;\n    default:\n        if ((arg_10h != NULL) && (*arg_10h != 0)) {\n            return 0;\n        }\n    }\n    // switch table (29 cases) at 0x4493fc\n    switch(*(hWnd_00 + 0x22)) {\n    case 0:\n    case 1:\n        if (var_cch == NULL) {\n            return 0xffffffff;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 == -1) {\n            arg_8h = var_cch;\n            if ((*var_cch == *0x4a8644) || (pcVar6 = _sym.imp.USER32.dll_SendMessageW,  *var_cch == 0)) {\n                arg_8h = (*_sym.imp.USER32.dll_CharNextW)();\n                pcVar6 = _sym.imp.USER32.dll_SendMessageW;\n                var_3ch = var_10h;\n                var_44h = 0x448f2a;\n                var_40h = uStackY92;\n                (*_sym.imp.USER32.dll_SendMessageW)();\n            }\n            while( true ) {\n                var_3ch = 0x448f47;\n                cVar3 = fcn.00430c45(&stack0xffffdef8, &fcn.00448de0::arg_8h, 0x4a8644);\n                if (cVar3 == '\\0') break;\n                var_3ch = &stack0xffffdef8;\n                var_40h = 0;\n                var_44h = var_14h;\n                uStackY80 = 0x448f5b;\n                (*pcVar6)();\n            }\n            if (arg_10h != NULL) {\n                var_3ch = arg_10h;\n                var_40h = 0xffffffff;\n                var_44h = Msg;\n                uStackY80 = 0x448f72;\n                iStackY84 = (*pcVar6)();\n                if (iStackY84 != -1) {\n                    uStackY80 = 0;\n                    var_54h = var_8h;\n                    uStackY96 = 0x448f85;\n                    (*pcVar6)();\n                    return 1;\n                }\n                return 1;\n            }\n            return 1;\n        }\n        var_40h = 0x448ee4;\n        var_3ch = uStackY92;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        var_40h = 1;\n        uStackY80 = 0x448ef0;\n        var_44h = hWnd_00;\n        fcn.004311a6(arg_ch, hWnd_00, 1);\n        return 0;\n    case 2:\n    case 3:\n        if ((arg_10h != NULL) && (*arg_10h != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageW)();\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_SetWindowTextW)();\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        *(arg_ch + 0x1c8) = 0xffffffff;\n        return 1;\n    default:\n        if (var_cch == NULL) {\n            return 0xffffffff;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_SetWindowTextW)();\n        if (iVar5 != 0) {\n            fcn.004311a6(arg_ch, hWnd_00, 1);\n            return 1;\n        }\n        return 0;\n    case 5:\n        fcn.00432fc4(var_cch, &fcn.00448de0::var_54h, 1, 1);\n        break;\n    case 6:\n    case 7:\n    case 0x16:\n        return 0xffffffff;\n    case 8:\n        fcn.00413d9d(var_cch);\n        arg_8h = arg_8h & 0xffff | in_FPUControlWord << 0x10;\n        arg_10h = in_FPUControlWord | 0xc00;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        return 1;\n    case 0xb:\n        var_d8h = 1;\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 == 0) {\n            return 0;\n        }\n        if (*(hWnd_00 + 0x8b) != -1) {\n            var_3ch = 0x449302;\n            (*_sym.imp.USER32.dll_InvalidateRect)();\n            return 1;\n        }\n        return 1;\n    case 0xe:\n    case 0xf:\n        var_80h = fcn.00411777(0x208);\n        var_a4h = 0x30;\n        var_a0h = 0x10;\n        var_7ch = 0x104;\n        iVar5 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)();\n        if ((iVar5 != 0) && ((var_9ch & 0x800) == 0)) {\n            var_3ch = hWnd_00[2];\n            var_80h = var_cch;\n            var_40h = 0x44937e;\n            iVar5 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)();\n            if (iVar5 != 0) {\n                (*_sym.imp.USER32.dll_DrawMenuBar)();\n                fcn.0041137c();\n                return 1;\n            }\n        }\n        fcn.0041137c();\n        return 0;\n    case 0x11:\n        var_fch = hWnd_00[3];\n        var_100h = 1;\n        var_f0h = piVar1;\n        break;\n    case 0x12:\n        fcn.00413d9d(var_cch);\n        fcn.00426200();\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        return 1;\n    case 0x13:\n        if (var_cch == NULL) {\n            return 0xffffffff;\n        }\n        fcn.004130e0();\n        arg_8h = var_cch;\n        while( true ) {\n            var_14h = 0x4a8644;\n            cVar3 = fcn.00430c45(&stack0xffffdef8, &fcn.00448de0::arg_8h, 0x4a8644);\n            if (cVar3 == '\\0') break;\n            var_68h = &stack0xffffdef8;\n            var_74h = 4;\n            if ((aiStackY8456[0] != 0) && (iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(),  iVar5 == 0)) {\n                return 0;\n            }\n        }\n        iVar5 = fcn.00411361(var_cch);\n        if ((iVar5 != 0) && (iVar5 = fcn.00411361(var_cch),  var_cch[iVar5 + -1] != *0x4a8644)) {\n            return 1;\n        }\n        var_68h = arg_8h;\n        break;\n    case 0x14:\n        if (var_cch == NULL) {\n            return 0xffffffff;\n        }\n        fcn.004130e0();\n        pcVar6 = _sym.imp.USER32.dll_SendMessageW;\n        var_bch = 1;\n        var_b4h = arg_8h;\n        var_40h = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (var_40h == -1) {\n            return 0;\n        }\n        arg_10h = NULL;\n        arg_8h = var_cch;\n        while( true ) {\n            var_3ch = 0x4491ec;\n            cVar3 = fcn.00430c45(&stack0xffffdef8, &fcn.00448de0::arg_8h, 0x4a8644);\n            if (cVar3 == '\\0') break;\n            var_44h = 0x1;\n            if (aiStackY8456[0] != 0) {\n                var_3ch = &fcn.00448de0::var_44h;\n                var_44h = 0x1074;\n                uStackY80 = 0x449221;\n                iVar5 = (*pcVar6)();\n                if (iVar5 == 0) {\n                    return 0;\n                }\n            }\n            arg_10h = arg_10h + 1;\n        }\n        var_3ch = var_cch;\n        var_40h = 0x449239;\n        iVar5 = fcn.00411361(var_cch);\n        if (iVar5 != 0) {\n            var_3ch = var_cch;\n            var_40h = 0x449246;\n            iVar5 = fcn.00411361(var_cch);\n            if (var_cch[iVar5 + -1] != *0x4a8644) {\n                return 1;\n            }\n        }\n        var_44h = 0x1074;\n        var_3ch = arg_10h;\n        uStackY80 = 0x449277;\n        iVar5 = (*pcVar6)();\n        goto code_r0x004490a4;\n    case 0x15:\n        fcn.00413d9d(var_cch);\n        uVar4 = fcn.00426200();\n        hWnd_00[0x12] = uVar4;\n        return 1;\n    case 0x1c:\n        fcn.00432fc4(var_cch, &fcn.00448de0::var_54h, 1, 1);\n    }\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\ncode_r0x004490a4:\n    if (iVar5 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 3011
    },
    "00449602": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449602(int32_t arg_8h, int32_t hWnd, int32_t arg_10h, int32_t arg_14h, int32_t nHeight)\n\n{\n    uint *arg_8h_00;\n    int32_t *arg_ch;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    iVar6 = hWnd;\n    cVar4 = fcn.004417f1(0x4a8630, arg_8h, &hWnd, &arg_8h);\n    if (cVar4 != '\\0') {\n        arg_8h_00 = **(*0x4a8690 + hWnd * 4);\n        arg_ch = **(*0x4a86a4 + arg_8h * 4);\n        if ((((iVar6 != -1) || (arg_10h != -1)) || (arg_14h != -1)) || (nHeight != -1)) {\n            hWnd = *arg_ch;\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            if (arg_14h == -1) {\n                arg_14h = var_10h - lpRect;\n            }\n            if (nHeight == -1) {\n                nHeight = var_ch - var_14h;\n            }\n            lpPoint = lpRect;\n            var_4h = var_14h;\n            (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h_00, &lpPoint);\n            iVar3 = hWnd;\n            if (iVar6 == -1) {\n                iVar6 = lpPoint;\n            }\n            iVar5 = arg_10h;\n            if (arg_10h == -1) {\n                iVar5 = var_4h;\n            }\n            arg_8h_00[0x16] = iVar6;\n            arg_8h_00[0x17] = iVar5;\n            arg_8h_00[0x18] = arg_14h;\n            arg_8h_00[0x19] = nHeight;\n            if (((*(arg_ch + 0x20) != iVar6) || (*(arg_ch + 0x82) != iVar5)) ||\n               ((*(arg_ch + 0x21) != arg_14h || (*(arg_ch + 0x86) != nHeight)))) {\n                (*_sym.imp.USER32.dll_MoveWindow)(hWnd, iVar6, iVar5, arg_14h, nHeight, 1);\n                fcn.004308aa(arg_8h_00, arg_ch, 1);\n                if ((*(arg_ch + 0x22) == '\\x03') && (nHeight = 3,  2 < *0x4a86b4)) {\n                    do {\n                        piVar1 = *(*0x4a86a4 + nHeight * 4);\n                        if ((*piVar1 != 0) &&\n                           (((puVar2 = *piVar1,  puVar2[1] == arg_8h_00[1] && (*(puVar2 + 0x22) == '\\x16')) &&\n                            (puVar2[0xc] == iVar3)))) {\n                            (*_sym.imp.USER32.dll_SendMessageW)(*puVar2, 0x469, iVar3, 0);\n                        }\n                        nHeight = nHeight + 1;\n                    } while (nHeight <= *0x4a86b4);\n                }\n                fcn.004311a6(arg_8h_00, arg_ch, 1);\n            }\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 873
    },
    "0044979e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044979e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    \n    iVar2 = arg_ch;\n    cVar3 = fcn.004417f1(0x4a8630, arg_8h, &arg_8h, &arg_ch);\n    if (cVar3 != '\\0') {\n        iVar1 = **(*0x4a86a4 + arg_ch * 4);\n        if ((*(iVar1 + 0x7e) != 0) && (iVar2 < 0x400)) {\n            if ((-1 < iVar2) && (iVar2 - 1U < 0x3ff)) {\n                *(iVar1 + 0x7e) = iVar2;\n            }\n            iVar2 = **(*0x4a8690 + arg_8h * 4);\n            if (*(iVar2 + 0x3a) == '\\0') {\n                fcn.004308aa(iVar2, **(*0x4a86a4 + arg_ch * 4), 0);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 275
    },
    "00449c59": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449c59(int32_t arg_8h, uint hdc, uint hDC)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    bool bVar8;\n    uint lpRect;\n    uint nYPos;\n    \n    iVar7 = **(*0x4a8690 + arg_8h * 4);\n    iVar3 = fcn.00441878(0x4a8630, hDC);\n    bVar8 = false;\n    arg_8h_00 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    if (*(iVar7 + 0x4c) != -1) {\n        arg_8h_00 = *(iVar7 + 0x4c);\n    }\n    if (iVar3 == -1) goto code_r0x00449e6e;\n    puVar2 = **(*0x4a86a4 + iVar3 * 4);\n    iVar3 = puVar2[0x11];\n    if ((-1 < iVar3) && (iVar5 = iVar3,  *(puVar2 + 0x22) != '\\x1b')) goto code_r0x00449d99;\n    iVar5 = arg_8h_00;\n    // switch table (28 cases) at 0x449ec1\n    switch(*(puVar2 + 0x22)) {\n    case 0:\n    case 2:\n    case 3:\n        uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar2, 0xfffffff0);\n        if ((uVar4 & 0x8000800) == 0) goto code_r0x00449d80;\n        iVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n        break;\n    case 1:\n    case 0x10:\n    case 0x13:\ncode_r0x00449d80:\n        iVar5 = (*_sym.imp.USER32.dll_GetSysColor)(5);\n        break;\n    default:\n        bVar8 = iVar3 == -2;\n        break;\n    case 6:\n    case 0x1b:\n        bVar8 = true;\n        break;\n    case 7:\n        if (*(puVar2 + 0x8b) != -1) {\n            (*_sym.imp.USER32.dll_GetClientRect)(*(iVar7 + 0x18c), &lpRect);\n            (*_sym.imp.USER32.dll_SendMessageW)(*(iVar7 + 0x18c), 0x1328, 0, &lpRect);\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowDC)(*(iVar7 + 0x18c));\n            iVar5 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, lpRect, nYPos);\n            (*_sym.imp.USER32.dll_ReleaseDC)(*(iVar7 + 0x18c), uVar6);\n            if (iVar5 == -1) {\n                if (*0x49751c != 0) goto code_r0x00449d80;\n                iVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n            }\n            break;\n        }\n        goto code_r0x00449e5f;\n    case 8:\n    case 10:\n    case 0xb:\n    case 0x12:\n    case 0x18:\n        break;\n    }\ncode_r0x00449d99:\n    arg_8h_00 = iVar5;\n    if ((*(puVar2 + 0x8b) != -1) && (puVar2[0x11] == -1)) {\n        cVar1 = *(puVar2 + 0x22);\n        if (cVar1 == '\\x17') {\ncode_r0x00449e5b:\n            bVar8 = true;\n        }\n        else if ((((cVar1 != '\\a') && (cVar1 != '\\x01')) && (cVar1 != '\\x02')) && ((cVar1 != '\\x03' && (cVar1 != '\\0')))\n                ) {\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowDC)(*puVar2);\n            arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, 0, 0);\n            if ((arg_8h_00 == -1) &&\n               ((arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, *(puVar2 + 0x21) + -1, 0),  arg_8h_00 == -1 &&\n                (arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, 0, *(puVar2 + 0x86) + -1),  arg_8h_00 == -1)))) {\n                arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, *(puVar2 + 0x21) + -1, *(puVar2 + 0x86) + -1);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(*puVar2, uVar6);\n            if (arg_8h_00 == -1) goto code_r0x00449e5b;\n        }\n    }\ncode_r0x00449e5f:\n    iVar7 = puVar2[0x12];\n    if (iVar7 == -1) {\n        iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(8);\n    }\n    (*_sym.imp.GDI32.dll_SetTextColor)(hdc, iVar7);\n    if (bVar8) {\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, 1);\n        (*_sym.imp.GDI32.dll_GetStockObject)(5);\n        return;\n    }\ncode_r0x00449e6e:\n    (*_sym.imp.GDI32.dll_SetBkColor)(hdc, arg_8h_00);\n    fcn.0044112e(arg_8h_00, 0);\n    return;\n}\n",
        "token_count": 1385
    },
    "00449ef9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00449ef9(void)\n\n{\n    uint *puVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    arg_ch = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n    if (iVar2 != 0) {\n        iVar3 = fcn.00431228(0x4a8630, arg_ch);\n        if (iVar3 != -1) {\n            iVar3 = **(*0x4a8690 + iVar3 * 4);\n            iVar2 = fcn.00441878(0x4a8630, iVar2);\n            if ((iVar2 != -1) && (**(*0x4a86a4 + iVar2 * 4) != 0)) {\n                *(iVar3 + 0x1c) = iVar2;\n                puVar1 = **(*0x4a86a4 + iVar2 * 4);\n                if (*(puVar1 + 0x22) == '\\x02') {\n                    (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0xb0, iVar3 + 0x1c0, iVar3 + 0x1c4);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "00449f7e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449f7e(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 8) != 0) {\n        *0x4a871c = fcn.0040c8f0();\n        if ((*0x4a871c < 0) || (0x7f < *0x4a871c)) {\n            *0x4a871c = 9;\n        }\n        return 0;\n    }\n    *0x4a871c = 9;\n    return 0;\n}\n",
        "token_count": 124
    },
    "0044a08c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a08c(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h[1] != 0) {\n        iVar1 = fcn.00411777(0xc);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0044a04b(iVar1, arg_ch);\n            *(iVar1 + 8) = arg_8h[1];\n            *(arg_8h[1] + 4) = iVar1;\n            arg_8h[2] = arg_8h[2] + 1;\n            arg_8h[1] = iVar1;\n            return;\n        }\n        *0x8 = arg_8h[1];\n        *(arg_8h[1] + 4) = 0;\n        arg_8h[2] = arg_8h[2] + 1;\n        arg_8h[1] = 0;\n        return;\n    }\n    iVar1 = fcn.00411777(0xc);\n    if (iVar1 != 0) {\n        uVar2 = fcn.0044a04b(iVar1, arg_ch);\n        arg_8h[2] = arg_8h[2] + 1;\n        *arg_8h = uVar2;\n        arg_8h[1] = uVar2;\n        return;\n    }\n    arg_8h[2] = arg_8h[2] + 1;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return;\n}\n",
        "token_count": 372
    },
    "0044a2ed": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a2ed(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h[1] != 0) {\n        iVar1 = fcn.00411777(0xc);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0044a2ac(iVar1, arg_ch);\n            *(iVar1 + 8) = arg_8h[1];\n            *(arg_8h[1] + 4) = iVar1;\n            arg_8h[2] = arg_8h[2] + 1;\n            arg_8h[1] = iVar1;\n            return;\n        }\n        *0x8 = arg_8h[1];\n        *(arg_8h[1] + 4) = 0;\n        arg_8h[2] = arg_8h[2] + 1;\n        arg_8h[1] = 0;\n        return;\n    }\n    iVar1 = fcn.00411777(0xc);\n    if (iVar1 != 0) {\n        uVar2 = fcn.0044a2ac(iVar1, arg_ch);\n        arg_8h[2] = arg_8h[2] + 1;\n        *arg_8h = uVar2;\n        arg_8h[1] = uVar2;\n        return;\n    }\n    arg_8h[2] = arg_8h[2] + 1;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return;\n}\n",
        "token_count": 372
    },
    "0044a489": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044a489(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uint var_2ch;\n    int32_t var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = arg_8h;\n    arg_ch_00 = (*_sym.imp.WININET.dll_InternetOpenUrlW)\n                          (*(arg_8h + 4), *(arg_8h + 0x20), 0, 0, *(arg_8h + 0x54) & 0x80000000, 0);\n    var_8h = _sym.imp.WININET.dll_InternetCloseHandle;\n    var_ch = arg_ch_00;\n    if (arg_ch_00 == 0) {\n        uVar1 = fcn.00441ff0(arg_8h_00, 0x29, 0xdeadbeef, 0);\n        uVar2 = fcn.00431d9a(&var_ch);\n        return uVar2 & 0xffffff00 | uVar1;\n    }\n    fcn.0044223b(arg_8h_00, arg_ch_00, arg_ch);\n    iVar3 = (*_sym.imp.WININET.dll_HttpSendRequestW)(arg_ch_00, 0, 0, 0, 0);\n    if (iVar3 != 0) {\n        iVar3 = fcn.00431e24(arg_ch_00);\n        if (iVar3 == 200) {\n            arg_8h = 0;\n            arg_ch = 0x20;\n            (*_sym.imp.WININET.dll_HttpQueryInfoW)(arg_ch_00, 5, &var_2ch, &arg_ch, &arg_8h);\n            uVar4 = fcn.0041333b(&var_2ch);\n            *(arg_8h_00 + 0x10) = uVar4;\n            *(arg_8h_00 + 0x14) = uVar4 >> 0x20;\n            if (arg_10h != '\\0') {\n                uVar1 = fcn.00442218(arg_8h_00, arg_ch_00);\n                uVar2 = fcn.00431d9a(&var_ch);\n                return uVar2 & 0xffffff00 | uVar1;\n            }\n            uVar1 = fcn.00441ff0(arg_8h_00, 0, 0, 1);\n            uVar2 = fcn.00431d9a(&var_ch);\n            return uVar2 & 0xffffff00 | uVar1;\n        }\n    }\n    uVar1 = fcn.00441ff0(arg_8h_00, 0x2a, 0xdeadbeef, 0);\n    uVar2 = fcn.00431d9a(&var_ch);\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 705
    },
    "0044a5b6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044a5b6(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h != '\\0') {\n        uVar2 = fcn.0044a489(arg_8h, arg_ch, arg_14h);\n        return uVar2;\n    }\n    arg_10h = arg_8h[0x15];\n    iVar3 = (*_sym.imp.WININET.dll_InternetConnectW)\n                      (arg_8h[1], *(arg_ch + 0x10), *(arg_ch + 0x78), *(arg_ch + 0x20), *(arg_ch + 0x30), \n                       *(arg_ch + 0x70), 0, 0);\n    *arg_8h = iVar3;\n    if (iVar3 == 0) {\n        uVar2 = fcn.00441ff0(arg_8h, 0x15, 0xdeadbeef, 0);\n        return uVar2;\n    }\n    iVar3 = (*_sym.imp.WININET.dll_FtpOpenFileW)(iVar3, *(arg_ch + 0x60), 0x80000000, arg_10h);\n    var_4h = _sym.imp.WININET.dll_InternetCloseHandle;\n    var_8h = iVar3;\n    if (iVar3 == 0) {\n        arg_10h_00 = 0xdeadbeef;\n        arg_ch_00 = 0x16;\n    }\n    else {\n        iVar4 = (*_sym.imp.WININET.dll_FtpGetFileSize)(iVar3, &arg_10h);\n        arg_8h[4] = iVar4;\n        arg_8h[5] = arg_10h;\n        if (arg_14h != '\\0') {\n            uVar1 = fcn.00442218(arg_8h, iVar3);\n            uVar2 = fcn.00431d9a(&var_8h);\n            return uVar2 & 0xffffff00 | uVar1;\n        }\n        iVar3 = 1;\n        arg_10h_00 = 0;\n        arg_ch_00 = 0;\n    }\n    uVar1 = fcn.00441ff0(arg_8h, arg_ch_00, arg_10h_00, iVar3);\n    uVar2 = fcn.00431d9a(&var_8h);\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 632
    },
    "0044a6b9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044a6b9(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    uint var_28h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar5 = arg_ch;\n    piVar1 = arg_ch + 0x74;\n    arg_ch = arg_8h[0x15];\n    if (*piVar1 == 4) {\n        arg_ch = arg_ch | 0x800000;\n    }\n    iVar3 = (*_sym.imp.WININET.dll_InternetConnectW)\n                      (arg_8h[1], *(iVar5 + 0x10), *(iVar5 + 0x78), *(iVar5 + 0x20), *(iVar5 + 0x30), *(iVar5 + 0x70), 0\n                       , 0);\n    *arg_8h = iVar3;\n    if (iVar3 == 0) {\n        uVar4 = fcn.00441ff0(arg_8h, 0xb, 0xdeadbeef, 0);\n        return uVar4;\n    }\n    iVar3 = (*_sym.imp.WININET.dll_HttpOpenRequestW)(iVar3, 0, *(iVar5 + 0x60), 0, 0, 0, arg_ch);\n    var_4h = _sym.imp.WININET.dll_InternetCloseHandle;\n    var_8h = iVar3;\n    if (iVar3 == 0) {\n        uVar2 = fcn.00441ff0(arg_8h, 0xc, 0xdeadbeef, 0);\n        uVar4 = fcn.00431d9a(&var_8h);\n        return uVar4 & 0xffffff00 | uVar2;\n    }\n    if (arg_10h != '\\0') {\n        fcn.0044223b(arg_8h, iVar3, iVar5);\n    }\n    if ((arg_ch & 0x1000) != 0) {\n        arg_ch = 4;\n        (*_sym.imp.WININET.dll_InternetQueryOptionW)(iVar3, 0x1f, &arg_10h, &arg_ch);\n        arg_10h = arg_10h | 0x100;\n        (*_sym.imp.WININET.dll_InternetSetOptionW)(iVar3, 0x1f, &arg_10h, 4);\n    }\n    iVar5 = (*_sym.imp.WININET.dll_HttpSendRequestW)(iVar3, 0, 0, 0, 0);\n    if (iVar5 != 0) {\n        iVar5 = fcn.00431e24(iVar3);\n        if (iVar5 == 200) {\n            arg_10h = 0;\n            arg_ch = 0x20;\n            (*_sym.imp.WININET.dll_HttpQueryInfoW)(iVar3, 5, &var_28h, &arg_ch, &arg_10h);\n            uVar6 = fcn.0041333b(&var_28h);\n            arg_8h[4] = uVar6;\n            arg_8h[5] = uVar6 >> 0x20;\n            if (arg_14h != '\\0') {\n                uVar2 = fcn.00442218(arg_8h, iVar3);\n                uVar4 = fcn.00431d9a(&var_8h);\n                return uVar4 & 0xffffff00 | uVar2;\n            }\n            uVar2 = fcn.00441ff0(arg_8h, 0, 0, 1);\n            uVar4 = fcn.00431d9a(&var_8h);\n            return uVar4 & 0xffffff00 | uVar2;\n        }\n    }\n    uVar2 = fcn.00441ff0(arg_8h, 0xd, 0xdeadbeef, 0);\n    uVar4 = fcn.00431d9a(&var_8h);\n    return uVar4 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 971
    },
    "0044ab0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ab0c(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h[1] != 0) {\n        iVar1 = fcn.00411777(0xc);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0044aab7(iVar1, arg_ch);\n            *(iVar1 + 8) = arg_8h[1];\n            *(arg_8h[1] + 4) = iVar1;\n            arg_8h[2] = arg_8h[2] + 1;\n            arg_8h[1] = iVar1;\n            return;\n        }\n        *0x8 = arg_8h[1];\n        *(arg_8h[1] + 4) = 0;\n        arg_8h[2] = arg_8h[2] + 1;\n        arg_8h[1] = 0;\n        return;\n    }\n    iVar1 = fcn.00411777(0xc);\n    if (iVar1 != 0) {\n        uVar2 = fcn.0044aab7(iVar1, arg_ch);\n        arg_8h[2] = arg_8h[2] + 1;\n        *arg_8h = uVar2;\n        arg_8h[1] = uVar2;\n        return;\n    }\n    arg_8h[2] = arg_8h[2] + 1;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return;\n}\n",
        "token_count": 370
    },
    "0044ad31": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ad31(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    uVar1 = *(arg_8h + 0x10);\n    uVar5 = *(arg_8h + 0x43c);\n    while( true ) {\n        if (uVar1 <= uVar5) {\n            fcn.00432635(arg_8h);\n            return 0;\n        }\n        iVar3 = fcn.00442a18(arg_8h, 1);\n        if (iVar3 == 1) {\n            uVar2 = fcn.00442a18(arg_8h, 8);\n            *((*(arg_8h + 0x43c) & 0x1ffff) + *(arg_8h + 0x438)) = uVar2;\n            *(arg_8h + 0x43c) = *(arg_8h + 0x43c) + 1;\n            *(arg_8h + 0x440) = *(arg_8h + 0x440) + 1;\n        }\n        else {\n            iVar4 = fcn.00442a18(arg_8h, 0xf);\n            iVar3 = fcn.0044acb2(arg_8h);\n            uVar5 = *(arg_8h + 0x43c) - iVar4;\n            for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *((*(arg_8h + 0x43c) & 0x1ffff) + *(arg_8h + 0x438)) = *((uVar5 & 0x1ffff) + *(arg_8h + 0x438));\n                *(arg_8h + 0x43c) = *(arg_8h + 0x43c) + 1;\n                *(arg_8h + 0x440) = *(arg_8h + 0x440) + 1;\n                uVar5 = uVar5 + 1;\n            }\n        }\n        fcn.00442ab1(arg_8h);\n        fcn.00432582(arg_8h);\n        if (*(arg_8h + 0x448) != '\\0') break;\n        uVar5 = *(arg_8h + 0x43c);\n    }\n    return 4;\n}\n",
        "token_count": 553
    },
    "0044b110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesRead\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0044b110(int32_t arg_8h)\n\n{\n    uchar *arg_ch;\n    double dVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uchar auStackY65556 [65480];\n    uint uStackY76;\n    uint uStackY72;\n    uchar *puStackY68;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint lpNumberOfBytesRead;\n    \n    fcn.00422880();\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)();\n    *(arg_8h + 0x10) = 0xffff;\n    uVar2 = fcn.00411777(0xffff);\n    *(arg_8h + 8) = uVar2;\n    iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n    while ((iVar3 != 0 && (unaff_ESI != 0))) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        if (*(arg_8h + 0x10) < *(arg_8h + 0xc) + unaff_ESI) {\n            iVar3 = *(arg_8h + 0xc) + unaff_ESI;\n            arg_ch = *(arg_8h + 8);\n            dVar1 = iVar3;\n            if (iVar3 < 0) {\n                dVar1 = dVar1 + *0x48bd70;\n            }\n            var_ch = ROUND(dVar1 * *0x48bda8);\n            *(arg_8h + 0x10) = var_ch;\n            uVar2 = fcn.00411777(var_ch);\n            *(arg_8h + 8) = uVar2;\n            puStackY68 = 0x44b1e1;\n            fcn.00411000(*(arg_8h + 8), arg_ch, *(arg_8h + 0xc));\n            uStackY72 = 0x44b1e7;\n            puStackY68 = arg_ch;\n            fcn.0041137c();\n        }\n        fcn.00411000(*(arg_8h + 0xc) + *(arg_8h + 8), &stack0xfffeffec, unaff_ESI);\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) + unaff_ESI;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n        uStackY72 = *(arg_8h + 0x2c);\n        puStackY68 = &stack0xfffeffec;\n        uStackY76 = 0x44b230;\n        iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)();\n    return 0x1f6;\n}\n",
        "token_count": 667
    },
    "0044b2c2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b2c2(int32_t arg_8h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = arg_8h + 0x30;\n    if (*(arg_8h + 0x30) != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(arg_8h + 0x34, *(arg_8h + 0x34));\n        if (iVar1 != 0x1f6) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg_8h + 0x14);\n            (*_sym.imp.KERNEL32.dll_TerminateThread)(*arg_8h_00, 0x1f6);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*arg_8h_00, 1000);\n            fcn.00432bdb(arg_8h_00);\n            (*_sym.imp.KERNEL32.dll_InterlockedExchange)(arg_8h + 0x34, 0x1f6);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h + 0x14);\n        }\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0044b332": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b332(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = arg_8h;\n    if (*(arg_8h + 0x30) == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0044b252, arg_8h, 0, &arg_8h);\n        *(iVar1 + 0x30) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0044b448": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b448(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.00432c4b(arg_8h);\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0044300a(*(arg_8h + 8));\n            *(arg_8h + 0x20) = uVar2;\n            fcn.0044b332(uVar2);\n        }\n    }\n    if (*(arg_8h + 0x24) == 0) {\n        cVar1 = fcn.00432c2b(arg_8h);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00432c18(arg_8h);\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.0044300a(*(arg_8h + 0x10));\n                *(arg_8h + 0x24) = uVar2;\n                fcn.0044b332(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "0044b613": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044b613(int16_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*arg_8h != 0) {\n        iVar2 = fcn.0041164b(arg_8h, L\"LEFT\");\n        if (iVar2 != 0) {\n            iVar2 = fcn.0041164b(arg_8h, L\"RIGHT\");\n            if (iVar2 == 0) {\n                return 2;\n            }\n            iVar2 = fcn.0041164b(arg_8h, L\"MIDDLE\");\n            if (iVar2 == 0) {\n                return 3;\n            }\n            iVar2 = fcn.0041164b(arg_8h, L\"MAIN\");\n            if (iVar2 != 0) {\n                iVar2 = fcn.0041164b(arg_8h, L\"PRIMARY\");\n                if (iVar2 != 0) {\n                    iVar2 = fcn.0041164b(arg_8h, L\"MENU\");\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.0041164b(arg_8h, L\"SECONDARY\");\n                        if (iVar2 != 0) {\n                            return 0;\n                        }\n                    }\n                    cVar1 = fcn.0040f3a0();\n                    return 2 - (cVar1 != '\\0');\n                }\n            }\n            cVar1 = fcn.0040f3a0();\n            return (cVar1 != '\\0') + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 354
    },
    "0044b9ae": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044b9ae(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint32_t unaff_ESI;\n    uint8_t in_stack_0000083c;\n    \n    fcn.00422880();\n    uVar6 = 0;\n    fcn.004102f0();\n    fcn.004102f0();\n    fcn.00433eb1(&stack0x00000424, &stack0x00000634);\n    cVar3 = fcn.00433f41(&stack0x00000424);\n    if (cVar3 != '\\0') {\n        fcn.004116d6(&stack0x00000424, L\"\\\\*.*\");\n    }\n    cVar3 = fcn.00433f41(&stack0x00000634);\n    if (cVar3 != '\\0') {\n        fcn.004116d6(&stack0x00000634, L\"\\\\*.*\");\n    }\n    fcn.00413bbe(&stack0x00000424, &stack0xfffffffc, &stack0x00000a94, &stack0x00000ea4, &stack0x00000c9c);\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_CopyFileW;\n    uVar5 = unaff_ESI & 0xff000000 | 0x10000;\n    uVar2 = 0;\n    if (iVar4 != -1) {\n        while (uVar6 = uVar2,  uVar5 >> 0x10 == '\\x01') {\n            if ((in_stack_0000083c & 0x10) == 0) {\n                fcn.00433d2d(&stack0x00000868, &stack0x00000e9c, &stack0x00000c94, &stack0x0000062c, &stack0x0000020c);\n                fcn.00411707(&stack0xfffffffc, &stack0xfffffff4);\n                fcn.004116d6(&stack0xfffffffc, &stack0x00000a8c);\n                fcn.004116d6(&stack0xfffffffc, &stack0x00000868);\n                cVar3 = fcn.00433fa3(&stack0x0000020c);\n                if (cVar3 == '\\0') {\ncode_r0x0044bb60:\n                    if (arg_14h == '\\x01') {\n                        if (uVar5 >> 0x18 == '\\0') {\n                            iVar4 = (*_sym.imp.KERNEL32.dll_MoveFileW)();\n                        }\n                        else {\n                            iVar4 = (*pcVar1)();\n                            if (iVar4 == 0) goto code_r0x0044bbb9;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                        }\n                    }\n                    else {\n                        iVar4 = (*pcVar1)();\n                    }\n                }\n                else {\n                    if (arg_10h == '\\0') goto code_r0x0044bbb9;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n                    if (iVar4 != 0) {\n                        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                        goto code_r0x0044bb60;\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_MoveFileW)();\n                }\n                if (iVar4 == 0) {\ncode_r0x0044bbb9:\n                    uVar5 = (*_sym.imp.KERNEL32.dll_FindClose)();\n                    return uVar5 & 0xffffff00;\n                }\n                uVar6 = 1;\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)();\n            uVar2 = uVar6;\n            if (iVar4 == 0) {\n                uVar5 = uVar5 & 0xff00ffff;\n            }\n        }\n    }\n    uVar5 = (*_sym.imp.KERNEL32.dll_FindClose)();\n    return uVar5 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 957
    },
    "0044bf3a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044bf3a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(arg_8h + 0x9d0);\n    if (iVar1 < 0x206) {\n        iVar1 = fcn.00411777(0x18);\n        if (iVar1 == 0) {\n            puVar2 = NULL;\n        }\n        else {\n            puVar2 = fcn.0044bf24(iVar1);\n        }\n        if (*(arg_8h + 0x9d0) == 0) {\n            *(arg_8h + 0x9d0) = 7;\n            iVar4 = *(arg_8h + 0x9d0);\n        }\n        else {\n            iVar4 = *(arg_8h + 0x9d0) + 1;\n            *(arg_8h + 0x9d0) = iVar4;\n        }\ncode_r0x0044bfd0:\n        *(arg_8h + 0x1b4 + iVar4 * 4) = puVar2;\n        *(puVar2 + 1) = 0xff;\n        *puVar2 = 0;\n        return iVar4;\n    }\n    iVar4 = 7;\n    if (6 < iVar1) {\n        piVar3 = arg_8h + 0x1d0;\n        do {\n            if (*piVar3 == 0) break;\n            iVar4 = iVar4 + 1;\n            piVar3 = piVar3 + 1;\n        } while (iVar4 <= iVar1);\n        if (iVar4 <= iVar1) {\n            iVar1 = fcn.00411777(0x18);\n            if (iVar1 == 0) {\n                puVar2 = NULL;\n            }\n            else {\n                puVar2 = fcn.0044bf24(iVar1);\n            }\n            goto code_r0x0044bfd0;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 469
    },
    "0044bfeb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0044bfeb(uint32_t arg_8h, uint8_t *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint32_t arg_8h_00;\n    uint8_t *arg_8h_01;\n    char cVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint lpKeyState;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    arg_8h_01 = arg_ch;\n    arg_8h_00 = arg_8h;\n    piVar1 = arg_8h + 0x20;\n    uVar2 = *arg_ch;\n    uVar3 = arg_ch[7];\n    uVar4 = *(arg_ch + 8);\n    uVar5 = uVar2;\n    arg_ch = arg_ch & 0xffffff00 | uVar5;\n    arg_8h = arg_8h & 0xffffff00 | uVar3;\n    if ((((*piVar1 == 0) || (uVar2 == 0x14)) || (uVar2 == 0x90)) || (uVar2 == 0x91)) {\n        cVar6 = fcn.00434e5f(arg_8h_01);\n        if (cVar6 != '\\0') {\n            cVar6 = fcn.004446c6(arg_8h_01);\n            if (cVar6 != '\\x01') {\n                fcn.00434d00(arg_8h_00, arg_ch, arg_8h, 2);\n                fcn.00434d8c(arg_8h_00);\n                return;\n            }\n            fcn.00434d00(arg_8h_00, arg_ch, arg_8h, 3);\n            fcn.00434d8c(arg_8h_00);\n            return;\n        }\n        var_1ch = 1;\n        var_18h._0_2_ = 0;\n        var_14h = 6;\n        var_10h = 0;\n        var_ch = 0;\n        var_18h._2_2_ = uVar4;\n        (*_sym.imp.USER32.dll_SendInput)(1, &var_1ch, 0x1c);\n    }\n    else {\n        cVar6 = fcn.00434e5f(arg_8h_01);\n        if (cVar6 != '\\0') {\n            iVar7 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n            if (iVar7 != 0) {\n                *(&lpKeyState + uVar5) = *(&lpKeyState + uVar5) ^ 0x80;\n                (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n            }\n            uVar8 = uVar3 << 0x10;\n            uVar9 = uVar8 | 0xc0000001;\n            cVar6 = fcn.004446c6(arg_8h_01);\n            if (cVar6 == '\\x01') {\n                uVar9 = uVar8 | 0xc1000001;\n            }\n            if ((((*(arg_8h_00 + 0x17) != '\\0') || (*(arg_8h_00 + 0x1d) != '\\0')) || (uVar2 == 0x12)) &&\n               ((*(arg_8h_00 + 0x16) == '\\0' && (*(arg_8h_00 + 0x1c) == '\\0')))) {\n                (*_sym.imp.USER32.dll_PostMessageW)(*(arg_8h_00 + 0x20), 0x105, uVar5, uVar9 | 0x20000000);\n                fcn.00434d8c(arg_8h_00);\n                return;\n            }\n            (*_sym.imp.USER32.dll_PostMessageW)(*(arg_8h_00 + 0x20), 0x101, uVar5, uVar9);\n            fcn.00434d8c(arg_8h_00);\n            return;\n        }\n    }\n    fcn.00434d8c(arg_8h_00);\n    return;\n}\n",
        "token_count": 1184
    },
    "0044c185": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0044c185(uint32_t arg_8h, uint8_t *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint8_t *arg_8h_01;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint lpKeyState;\n    uint var_20h;\n    ushort var_1ch;\n    uint var_1ah;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    arg_8h_01 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar5 = *(arg_8h + 0x20);\n    var_4h = *(arg_ch + 8);\n    uVar1 = *arg_ch;\n    uVar2 = arg_ch[7];\n    uVar3 = uVar1;\n    arg_ch = arg_ch & 0xffffff00 | uVar3;\n    arg_8h = arg_8h & 0xffffff00 | uVar2;\n    if ((((iVar5 == 0) || (uVar1 == 0x14)) || (uVar1 == 0x90)) || (uVar1 == 0x91)) {\n        cVar4 = fcn.00434e5f(arg_8h_01);\n        if (cVar4 == '\\0') {\n            var_1ah._0_2_ = var_4h;\n            var_20h = 1;\n            var_1ch = 0;\n            stack0xffffffe4 = 4;\n            var_14h = 0;\n            var_10h = 0;\n            (*_sym.imp.USER32.dll_SendInput)(1, &var_20h, 0x1c);\n            fcn.00434d5f(arg_8h_00);\n            return;\n        }\n        cVar4 = fcn.004446c6(arg_8h_01);\n        if (cVar4 != '\\x01') {\n            fcn.00434d00(arg_8h_00, arg_ch, arg_8h, 0);\n            fcn.00434d5f(arg_8h_00);\n            return;\n        }\n        fcn.00434d00(arg_8h_00, arg_ch, arg_8h, 1);\n        fcn.00434d5f(arg_8h_00);\n        return;\n    }\n    cVar4 = fcn.00434e5f(arg_8h_01);\n    if (cVar4 == '\\0') {\n        (*_sym.imp.USER32.dll_PostMessageW)(iVar5, 0x102, var_4h & 0xffff, 1);\n        fcn.00434d5f(arg_8h_00);\n        return;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n    if (iVar5 != 0) {\n        *(&lpKeyState + uVar3) = *(&lpKeyState + uVar3) | 0x80;\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n    }\n    uVar6 = uVar2 << 0x10;\n    uVar7 = uVar6 | 1;\n    cVar4 = fcn.004446c6(arg_8h_01);\n    if (cVar4 == '\\x01') {\n        uVar7 = uVar6 | 0x1000001;\n    }\n    if ((((*(arg_8h_00 + 0x17) != '\\0') || (*(arg_8h_00 + 0x1d) != '\\0')) || (uVar1 == 0x12)) &&\n       ((*(arg_8h_00 + 0x16) == '\\0' && (*(arg_8h_00 + 0x1c) == '\\0')))) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*(arg_8h_00 + 0x20), 0x104, uVar3, uVar7 | 0x20000000);\n        fcn.00434d5f(arg_8h_00);\n        return;\n    }\n    (*_sym.imp.USER32.dll_PostMessageW)(*(arg_8h_00 + 0x20), 0x100, uVar3, uVar7);\n    fcn.00434d5f(arg_8h_00);\n    return;\n}\n",
        "token_count": 1220
    },
    "0044c678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c678(uint *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *arg_10h_00;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_10h_00 = arg_ch;\n    while( true ) {\n        if (arg_8h[9] == 0) {\n            return 0;\n        }\n        if (*(arg_8h + 4) == '\\0') {\n            return 0;\n        }\n        if (arg_10h_00[1] == -1) {\n            if (*arg_10h_00 == -1) {\n                return 0;\n            }\n            var_10h = 0xffffffff;\n            var_ch = 0xffffffff;\n            fcn.00444cb2(arg_8h, &var_10h, arg_10h_00);\n        }\n        if (arg_8h[10] < arg_10h_00[1]) break;\n        iVar2 = fcn.00446243(arg_8h[9], *arg_8h, arg_8h[10], arg_10h_00[1], arg_8h[0x10] | arg_8h[0xe], arg_8h[0xb], \n                             arg_8h[0xc]);\n        arg_8h[0xd] = iVar2;\n        if (0 < iVar2) {\n            piVar1 = arg_8h[0xb];\n            var_4h = piVar1[1];\n            var_8h = 0xffffffff;\n            arg_8h[0xe] = 0;\n            if ((arg_10h != '\\0') && (*piVar1 == piVar1[1])) {\n                if (*piVar1 == arg_8h[10]) {\n                    var_4h = arg_8h[10] + 1;\n                }\n                else {\n                    arg_8h[0xe] = 0x10000010;\n                }\n            }\n            fcn.00444c53(arg_8h, arg_10h_00, &var_8h);\n            fcn.00435085(arg_10h_00, &var_8h);\n            return arg_8h[0xd];\n        }\n        if (iVar2 != -1) {\n            return 0;\n        }\n        if (arg_8h[0xe] == 0) {\n            return 0;\n        }\n        arg_8h[0xe] = 0;\n        puVar3 = fcn.0044c5bb(arg_8h, arg_10h_00[1]);\n        arg_ch = arg_ch & 0xffffff00 | *puVar3;\n        var_8h = 0xffffffff;\n        var_4h = fcn.00435056(arg_ch);\n        var_4h = var_4h + arg_10h_00[1];\n        fcn.00444c53(arg_8h, arg_10h_00, &var_8h);\n        fcn.00435085(arg_10h_00, &var_8h);\n    }\n    return 0;\n}\n",
        "token_count": 747
    },
    "0044c7aa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c7aa(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_8h[9] != 0) && (*(arg_8h + 4) != '\\0')) {\n        iVar1 = fcn.00446243(arg_8h[9], *arg_8h, arg_8h[10], 0, arg_8h[0x10], arg_8h[0xb], arg_8h[0xc]);\n        arg_8h[0xd] = iVar1;\n        if (0 < iVar1) {\n            arg_8h[0xd] = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "0044c99f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c99f(uint *hWnd, int32_t *lpRect, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetWindowRect)(*hWnd, lpRect);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (arg_10h != '\\0') {\n        iVar1 = fcn.0044567b(hWnd);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        lpPoint = *lpRect;\n        var_4h = lpRect[1];\n        iVar3 = lpRect[2] - lpPoint;\n        iVar2 = lpRect[3] - var_4h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(iVar1, &lpPoint);\n        lpRect[3] = iVar2 + var_4h;\n        *lpRect = lpPoint;\n        lpRect[1] = var_4h;\n        lpRect[2] = iVar3 + lpPoint;\n    }\n    return 1;\n}\n",
        "token_count": 272
    },
    "004501c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lParam\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.004501c0(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint arg_18h_00;\n    int32_t iVar3;\n    uint32_t arg_ch_00;\n    int32_t iVar4;\n    ushort auStackY8228 [4050];\n    uint uStackY128;\n    int32_t iStackY124;\n    uint uStackY120;\n    int32_t iStackY116;\n    uint *puStackY112;\n    int32_t iStackY108;\n    int32_t lParam;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uchar *var_14h;\n    uint var_ch;\n    \n    fcn.00422880();\n    arg_ch_00 = arg_2ch;\n    iVar4 = -1;\n    arg_2ch = arg_2ch & 0xffffff;\n    uVar2 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar2 = 0xc;\n    }\n    var_14h = 0x4501f4;\n    arg_18h_00 = fcn.00448d9c(uVar2 | 0x10001);\n    if (arg_ch_00 == 0xffffffff) {\n        arg_ch_00 = 0x220;\n    }\n    if ((arg_ch_00 & 0x10) != 0) {\n        arg_2ch = CONCAT13(1, arg_2ch);\n        arg_ch_00 = arg_ch_00 ^ 0x10;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    var_14h = NULL;\n    var_18h = arg_10h;\n    var_1ch = arg_24h;\n    lParam = arg_20h;\n    iVar3 = fcn.00430817(arg_8h, arg_ch_00, L\"SysListView32\", 0x483f68, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, \n                         arg_10h, 0);\n    *arg_ch = iVar3;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (arg_2ch._3_1_ != '\\0') {\n        (*_sym.imp.USER32.dll_SendMessageW)();\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)();\n    if (*(arg_8h + 0x18c) != 0) {\n        iStackY108 = *arg_ch;\n        puStackY112 = 0x4502ab;\n        (*_sym.imp.USER32.dll_SetWindowPos)();\n    }\n    var_14h = &stack0xffffdfdc;\n    lParam = 0xf;\n    var_1ch = 0;\n    arg_24h = arg_14h;\n    while( true ) {\n        cVar1 = fcn.00430c45(&stack0xffffdfdc, &fcn.004501c0::arg_24h, 0x4a8644);\n        if (cVar1 == '\\0') break;\n        iVar3 = fcn.00411361(&stack0xffffdfdc);\n        iStackY108 = 0x450308;\n        fcn.004116d6(&stack0xffffdfdc, L\"-----\");\n        iStackY108 = *arg_ch;\n        puStackY112 = 0x450322;\n        var_18h = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (0x96 < var_18h) {\n            var_18h = 0x96;\n        }\n        iStackY124 = *arg_ch;\n        puStackY112 = &fcn.004501c0::lParam;\n        iVar4 = iVar4 + 1;\n        uStackY120 = 0x1061;\n        *(&stack0xffffdfdc + iVar3 * 2) = 0;\n        uStackY128 = 0x450354;\n        iStackY116 = iVar4;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n    }\n    *(arg_ch + 0x23) = iVar4;\n    *(arg_ch + 0x8e) = 0xffff;\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 1;\n    }\n    return 1;\n}\n",
        "token_count": 1162
    },
    "00450387": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450387(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h\n            , uint32_t arg_24h, int32_t arg_28h)\n\n{\n    unkbyte3 Var1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    uVar2 = arg_24h;\n    if (arg_24h == 0xffffffff) {\n        uVar2 = 0x37;\n    }\n    uVar2 = fcn.00448d9c(uVar2 | 0x10000);\n    bVar4 = (uVar2 & 0x100) != 0;\n    if (bVar4) {\n        uVar2 = uVar2 ^ 0x100;\n    }\n    if (arg_28h == -1) {\n        arg_28h = 0;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 0x96;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    iVar3 = fcn.00430817(arg_8h, arg_28h, L\"SysTreeView32\", 0x483f68, uVar2, arg_14h, arg_18h, arg_1ch, arg_20h, arg_10h\n                         , 0);\n    *arg_ch = iVar3;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (*(arg_8h + 0x18c) != 0) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(iVar3, 0, 0, 0, 0, 0, 0x13);\n    }\n    *(arg_8h + 0x1b0) = *arg_ch;\n    if (bVar4) {\n        *(arg_ch + 0x22) = 0x10;\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_ch, 0xfffffff0);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch, 0xfffffff0, uVar2 | 0x100);\n    }\n    if (*(arg_8h + 0x38) != '\\0') {\n        iVar3 = *(arg_8h + 0x1c);\n        fcn.004417f1(0x4a8630, arg_10h, &arg_20h, &arg_1ch);\n        fcn.004412cd(arg_20h, arg_1ch);\n        if (iVar3 != -1) {\n            fcn.004412cd(arg_20h, iVar3);\n        }\n    }\n    Var1 = 0xffffff;\n    *(arg_8h + 0x1b8) = 0xffffffff;\n    *(arg_8h + 0x1bc) = 0xffffffff;\n    if (*0x4a8638 == 0) {\n        Var1 = 0;\n        *(arg_ch + 0x7e) = 1;\n    }\n    return CONCAT31(Var1, 1);\n}\n",
        "token_count": 739
    },
    "004504c9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004504c9(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint X, uint Y, int32_t arg_1ch, int32_t arg_20h, \n            uint32_t arg_24h, int32_t arg_28h)\n\n{\n    uint arg_18h;\n    int32_t iVar1;\n    \n    if (*(arg_8h + 0x18c) == 0) {\n        if (arg_24h == 0xffffffff) {\n            arg_24h = 0;\n        }\n        arg_18h = fcn.00448d9c(arg_24h | 0x4010000);\n        if (arg_28h == -1) {\n            arg_28h = 0;\n        }\n        if (arg_1ch == -1) {\n            arg_1ch = 0x96;\n        }\n        if (arg_20h == -1) {\n            arg_20h = 0x96;\n        }\n        iVar1 = fcn.00430817(arg_8h, arg_28h, L\"SysTabControl32\", 0x483f68, arg_18h, X, Y, arg_1ch, arg_20h, arg_10h, 1)\n        ;\n        *arg_ch = iVar1;\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar1, 0xffffffff, X, Y, arg_1ch, arg_20h, 0x20);\n            *(arg_8h + 0x18c) = *arg_ch;\n            *(arg_8h + 400) = 0xffffffff;\n            *(arg_8h + 0x194) = 0xffffffff;\n            *(arg_8h + 0x198) = 0;\n            *(arg_8h + 0x19c) = 1;\n            if (*0x4a8638 == 0) {\n                *(arg_ch + 0x7e) = 0x300;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 479
    },
    "0045069c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0045069c(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    code *pcVar1;\n    uint32_t arg_18h_00;\n    int32_t iVar2;\n    \n    if (arg_24h == -1) {\n        arg_24h = 1;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_24h);\n    if (arg_28h == -1) {\n        arg_28h = 0;\n    }\n    iVar2 = fcn.00430817(arg_8h, arg_28h, L\"msctls_trackbar32\", 0, arg_18h_00, arg_14h, arg_18h, arg_1ch, arg_20h, \n                         arg_10h, 0);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x405, 0, 0);\n    if ((arg_18h_00 & 1) != 0) {\n        (*pcVar1)(*arg_ch, 0x406, 0, 0x640000);\n        (*pcVar1)(*arg_ch, 0x414, 10, 0);\n    }\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 1;\n    }\n    return 1;\n}\n",
        "token_count": 401
    },
    "0045074c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0045074c(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    code *pcVar1;\n    uint arg_18h_00;\n    int32_t iVar2;\n    \n    if (arg_24h == -1) {\n        arg_24h = 0;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_24h);\n    if (arg_28h == -1) {\n        arg_28h = 0;\n    }\n    iVar2 = fcn.00430817(arg_8h, arg_28h, L\"Msctls_Progress32\", 0, arg_18h_00, arg_14h, arg_18h, arg_1ch, arg_20h, \n                         arg_10h, 0);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x2001, 0, 0xff000000);\n    (*pcVar1)(*arg_ch, 0x409, 0, 0xff000000);\n    (*pcVar1)(*arg_ch, 0x402, 0, 0);\n    (*pcVar1)(*arg_ch, 0x401, 0, 0x640000);\n    (*pcVar1)(*arg_ch, 0x404, 1, 0);\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 1;\n    }\n    return 1;\n}\n",
        "token_count": 426
    },
    "00450811": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450811(uint *arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint X, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = arg_2ch;\n    uVar1 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar1 = 0x100;\n    }\n    uVar2 = fcn.00448d9c(uVar1 | 0xe);\n    if (iVar4 == -1) {\n        iVar4 = 0;\n    }\n    iVar4 = fcn.00430817(arg_8h, iVar4, L\"static\", 0, uVar2, X, arg_1ch, 0, 0, arg_10h, 0);\n    *arg_ch = iVar4;\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 0x300;\n    }\n    iVar4 = fcn.004306bc(arg_ch, arg_14h, &arg_20h, &arg_24h);\n    if (iVar4 != 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*arg_ch, X, arg_1ch, arg_20h, arg_24h, 0);\n        uVar2 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(0);\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0x173, 0, 0);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar2, uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_GetPixel)(uVar2, 0, 0);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar2);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_8h, 0xffffffec);\n        if ((uVar1 & 0x80000) != 0) {\n            (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)(*arg_8h, uVar3, 0, 1);\n        }\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n    return 0;\n}\n",
        "token_count": 638
    },
    "0045093b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0045093b(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint arg_18h_00;\n    int32_t iVar2;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0;\n    }\n    iVar2 = fcn.00430817(arg_8h, arg_2ch, L\"SysMonthCal32\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         1);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if ((arg_20h == 0) || (arg_24h == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x1009, 0, &var_10h);\n        (*_sym.imp.USER32.dll_SetWindowPos)(*arg_ch, 0, arg_18h, arg_1ch, var_8h, var_4h, 4);\n    }\n    fcn.00432fc4(arg_14h, &var_20h, 1, 1);\n    (*pcVar1)(*arg_ch, 0x1002, 0, &var_20h);\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 0x300;\n    }\n    return 1;\n}\n",
        "token_count": 547
    },
    "00450a2d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450a2d(uint arg_8h, uint32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint arg_18h_00;\n    uint32_t uVar1;\n    uint var_10h;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 4;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x14;\n    }\n    uVar1 = fcn.00430817(arg_8h, arg_2ch, L\"SysDateTimePick32\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, \n                         arg_10h, 1);\n    *arg_ch = uVar1;\n    if (uVar1 == 0) {\n        return 0;\n    }\n    fcn.00432fc4(arg_14h, &var_10h, uVar1 & 0xffffff00 | (arg_18h_00 & 8) != 8, 1);\n    (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0x1002, 0, &var_10h);\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 0x200;\n    }\n    return 1;\n}\n",
        "token_count": 443
    },
    "00450b00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450b00(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0xa00002;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 0x10001);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar1 = fcn.00430817(arg_8h, arg_2ch, L\"Listbox\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*arg_14h != 0) {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0x180, 0, arg_14h);\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0x186, 0, 0);\n    }\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 1;\n    }\n    (*_sym.imp.USER32.dll_MoveWindow)(*arg_ch, arg_18h, arg_1ch, arg_20h, arg_24h, 0);\n    return 1;\n}\n",
        "token_count": 460
    },
    "00450bd6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450bd6(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint arg_18h_00;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x200042;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.00430817(arg_8h, arg_2ch, L\"Combobox\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 1);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (*arg_14h != 0) {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x143, 0, arg_14h);\n        (*pcVar1)(*arg_ch, 0x14e, 0, 0);\n    }\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 0x200;\n    }\n    return 1;\n}\n",
        "token_count": 442
    },
    "00450c95": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450c95(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 9);\n    if (*(arg_8h + 0x69) == '\\0') {\n        arg_18h_00 = arg_18h_00 | 0x10000;\n        *(arg_8h + 0x69) = 1;\n    }\n    if (arg_2ch == -1) {\n        arg_2ch = 0;\n    }\n    iVar1 = fcn.00430817(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 1\n                        );\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n    arg_ch[0x12] = iVar1;\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 0x200;\n    }\n    return 1;\n}\n",
        "token_count": 389
    },
    "00450d29": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450d29(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 3;\n    }\n    if ((arg_28h & 7) == 0) {\n        arg_28h = arg_28h | 3;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0;\n    }\n    iVar1 = fcn.00430817(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 1\n                        );\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n    arg_ch[0x12] = iVar1;\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 0x200;\n    }\n    return 1;\n}\n",
        "token_count": 363
    },
    "00450db7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450db7(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 0x20007);\n    if (arg_2ch == -1) {\n        arg_2ch = 0;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar1 = fcn.00430817(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 1\n                        );\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n    arg_ch[0x12] = iVar1;\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 1;\n    }\n    return 1;\n}\n",
        "token_count": 381
    },
    "00450e52": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450e52(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x80;\n    }\n    if ((arg_28h & 0x800) == 0) {\n        arg_28h = arg_28h | 0x10000;\n    }\n    else {\n        arg_28h = arg_28h & 0xfffffffb;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x14;\n    }\n    iVar1 = fcn.00430817(arg_8h, arg_2ch, L\"edit\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 0x200;\n    }\n    return 1;\n}\n",
        "token_count": 406
    },
    "00450ef1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450ef1(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x3010c0;\n    }\n    if ((arg_28h & 0x800) == 0) {\n        arg_28h = arg_28h | 0x10004;\n    }\n    else {\n        arg_28h = arg_28h | 4;\n    }\n    uVar1 = fcn.00448d9c(arg_28h);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.00430817(arg_8h, arg_2ch, L\"edit\", arg_14h, uVar1, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthW)(iVar2);\n    (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0xb1, uVar1, uVar1);\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 1;\n    }\n    return 1;\n}\n",
        "token_count": 444
    },
    "00450fb1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00450fb1(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 0x100);\n    if (arg_2ch == -1) {\n        arg_2ch = 0;\n    }\n    iVar1 = fcn.00430817(arg_8h, arg_2ch, L\"static\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 1\n                        );\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n    arg_ch[0x12] = iVar1;\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 1;\n    }\n    return 1;\n}\n",
        "token_count": 328
    },
    "00451035": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00451035(uint *arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 0x10000);\n    bVar2 = (arg_18h_00 & 1) != 0;\n    if (bVar2) {\n        arg_18h_00 = arg_18h_00 ^ 1;\n    }\n    if (arg_2ch == -1) {\n        arg_2ch = 0x100;\n    }\n    iVar1 = fcn.00430817(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, 1\n                        );\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (bVar2) {\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x401, arg_10h, 0);\n    }\n    if (*0x4a8638 == 0) {\n        *(arg_ch + 0x7e) = 0x300;\n    }\n    return 1;\n}\n",
        "token_count": 398
    },
    "0045135a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045135a(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    \n    if (*(arg_8h + 0x2c) != 0) {\n        arg_ch_00 = **(arg_8h + 0x30);\n        fcn.0045131d(arg_ch, arg_ch_00);\n        fcn.004346f1(arg_8h + 0x2c);\n        if (arg_ch_00 != 0) {\n            fcn.0044792a(arg_ch_00);\n        }\n        *0x4a9550 = 0;\n        return 1;\n    }\n    if (*(arg_8h + 0xc) == '\\0') {\n        if ((*0x4a879c == 0) && (*0x4a9550 < 100)) {\n            *0x4a9550 = *0x4a9550 + 1;\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "0045154b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045154b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t **ppiVar2;\n    \n    iVar1 = arg_ch * 4;\n    arg_8h_00 = **(iVar1 + *(arg_8h + 0x74));\n    if (arg_8h_00 != 0) {\n        fcn.0045152e(arg_8h_00);\n    }\n    **(iVar1 + *(arg_8h + 0x74)) = 0;\n    *(arg_8h + 0x80) = *(arg_8h + 0x80) + -1;\n    if (arg_ch == *(arg_8h + 0x84)) {\n        if (2 < arg_ch) {\n            ppiVar2 = *(arg_8h + 0x74) + iVar1;\n            do {\n                if (**ppiVar2 != 0) break;\n                arg_ch = arg_ch + -1;\n                ppiVar2 = ppiVar2 + -1;\n            } while (2 < arg_ch);\n        }\n        *(arg_8h + 0x84) = arg_ch;\n    }\n    if (3 < *(arg_8h + 0x78)) {\n        do {\n            if (**(*(arg_8h + 0x74) + -4 + *(arg_8h + 0x78) * 4) != 0) {\n                return;\n            }\n            fcn.00430603(arg_8h + 0x70);\n        } while (3 < *(arg_8h + 0x78));\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "00451712": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00451712(int32_t arg_8h, uint32_t arg_ch, uint16_t *arg_10h, int32_t pbstr, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_44h;\n    int32_t var_34h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    \n    puVar3 = arg_10h;\n    piVar2 = *0x4a7f1c;\n    var_24h = 0;\n    var_1ch = 1;\n    var_18h = 0;\n    arg_10h = arg_ch;\n    if ((*0x4a7f19 == '\\0') || (*0x4a7f1c == NULL)) {\n        fcn.00403f40(arg_ch, 0);\n        if (arg_18h != '\\0') {\n            fcn.004091e0();\n            return 1;\n        }\n    }\n    else {\n        *(*0x4a7f1c + 0x12) = 3;\n        piVar2[0x14] = arg_ch;\n        *(piVar2 + 0x2a) = 3;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        piVar2 = *0x4a7f1c;\n        (*0x4a7f1c)[0x2c] = iVar4;\n        *(piVar2 + 0x2e) = 3;\n        uVar6 = fcn.00434e8d(*(arg_8h + 0xf4));\n        iVar4 = uVar6 >> 0x20;\n        *(iVar4 + 0xc0) = uVar6;\n        pcVar1 = _sym.imp.OLEAUT32.dll_VariantCopyInd;\n        if (puVar3 != NULL) {\n            var_ch = *(puVar3 + 2);\n            var_14h._0_2_ = 8;\n            (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(iVar4 + 0x78, &var_14h);\n            var_ch = *(puVar3 + 4);\n            (*pcVar1)(*0x4a7f1c + 0x1a, &var_14h);\n            var_ch = *(puVar3 + 6);\n            (*pcVar1)(*0x4a7f1c + 0x22, &var_14h);\n            piVar2 = *0x4a7f1c;\n            *(*0x4a7f1c + 0x26) = 3;\n            piVar2[0x28] = *(puVar3 + 8);\n            *(piVar2 + 0x32) = 3;\n            uVar5 = *puVar3;\n            if (*puVar3 == 0) {\n                uVar5 = *(puVar3 + 0xe);\n            }\n            piVar2[0x34] = uVar5;\n            if (uVar5 != 0) {\n                arg_10h = uVar5;\n            }\n        }\n        fcn.0040bf10();\n        if (pbstr == 0) {\n            arg_8h_00 = fcn.0044abde(&var_44h, arg_10h);\n            fcn.0040e410(arg_8h_00);\n            fcn.00402260();\n            pbstr = var_34h;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*0x4a7f1c + 0x16);\n        *(*0x4a7f1c + 0x16) = 8;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(pbstr);\n        piVar2 = *0x4a7f1c;\n        (*0x4a7f1c)[0x18] = iVar4;\n        (**(*piVar2 + 0x20))();\n        fcn.00403f40(arg_ch, 0);\n        fcn.00402260();\n    }\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 1003
    },
    "00451e50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451e50(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h[1] != 0) {\n        iVar1 = fcn.00411777(0xc);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00451d6d(iVar1, arg_ch);\n            *(iVar1 + 8) = arg_8h[1];\n            *(arg_8h[1] + 4) = iVar1;\n            arg_8h[2] = arg_8h[2] + 1;\n            arg_8h[1] = iVar1;\n            return;\n        }\n        *0x8 = arg_8h[1];\n        *(arg_8h[1] + 4) = 0;\n        arg_8h[2] = arg_8h[2] + 1;\n        arg_8h[1] = 0;\n        return;\n    }\n    iVar1 = fcn.00411777(0xc);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00451d6d(iVar1, arg_ch);\n        arg_8h[2] = arg_8h[2] + 1;\n        *arg_8h = uVar2;\n        arg_8h[1] = uVar2;\n        return;\n    }\n    arg_8h[2] = arg_8h[2] + 1;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return;\n}\n",
        "token_count": 371
    },
    "00451ed9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451ed9(int32_t arg_8h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.004423ce(arg_8h + 0xd4);\n    if ((cVar1 != '\\0') && (*(arg_8h + 0x18) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 88
    },
    "00451f07": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00451f07(uint hFindFile, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint lpFindFileData;\n    int32_t var_25ch;\n    uint32_t var_258h;\n    uint var_24ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint lpFileName;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.00401c30();\n    var_24h = lpFileName;\n    *var_4h = *var_4h + 1;\n    var_18h = var_4h;\n    var_20h = var_ch;\n    var_1ch = var_8h;\n    fcn.0040d510();\n    uVar2 = 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    uVar1 = 1;\n    if (iVar3 != -1) {\n        do {\n            while( true ) {\n                uVar2 = uVar1;\n                iVar4 = fcn.004427ec(var_14h);\n                if (iVar4 == 1) {\n                    uVar2 = 0;\n                    goto code_r0x00452070;\n                }\n                if (iVar4 != 0xb) break;\n                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                uVar1 = uVar2;\n            }\n            iVar4 = fcn.004132dc(&var_24ch, 0x486cfc);\n            if ((iVar4 != 0) && (iVar4 = fcn.004132dc(&var_24ch, 0x489b88),  iVar4 != 0)) {\n                fcn.0040e410(&var_24h);\n                fcn.0040d510();\n                if ((lpFindFileData & 0x10) == 0) {\n                    uVar5 = *arg_ch;\n                    *arg_ch = *arg_ch + var_258h;\n                    arg_ch[1] = arg_ch[1] + var_25ch + CARRY4(uVar5, var_258h);\n                    if (arg_18h != '\\0') {\n                        uVar5 = *arg_10h;\n                        *arg_10h = *arg_10h + 1;\n                        arg_10h[1] = arg_10h[1] + (0xfffffffe < uVar5);\n                    }\n                }\n                else {\n                    if (arg_18h != '\\0') {\n                        uVar5 = *arg_14h;\n                        *arg_14h = *arg_14h + 1;\n                        arg_14h[1] = arg_14h[1] + (0xfffffffe < uVar5);\n                    }\n                    if (arg_1ch != '\\0') {\n                        fcn.0040d510();\n                        uVar2 = fcn.00451f07(lpFileName, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n                        if (uVar2 == 0) break;\n                    }\n                }\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n            uVar1 = uVar2;\n        } while (iVar4 != 0);\n    }\ncode_r0x00452070:\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n    fcn.00402260();\n    uVar5 = fcn.00402260();\n    return uVar5 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 908
    },
    "00452c26": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00452c26(ulong *arg_8h)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    ushort *arg_ch;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_94h;\n    uint var_10h;\n    \n    if (*(arg_8h + 1) == 4) {\n        return;\n    }\n    uVar3 = *(arg_8h + 1) - 1;\n    if (uVar3 < 0xb) {\n    // switch table (11 cases) at 0x452dfa\n        switch(*(uVar3 * 4 + 0x452dfa)) {\n        case 0x452c52:\n            fcn.004131fc(*arg_8h, &var_94h, 10);\n            break;\n        case 0x452c6b:\n            fcn.004132a9(*arg_8h, *(arg_8h + 4), &var_94h, 10);\n            break;\n        case 0x452c88:\n            fcn.0041343b(&var_94h, 0x487118, *arg_8h);\n            break;\n        case 0x452ca9:\n            fcn.0041343b(&var_94h, L\"0x%p\", *arg_8h);\n            break;\n        case 0x452cc5:\n            if (*arg_8h == '\\0') {\n                fcn.00411707(&var_94h, L\"False\");\n            }\n            else {\n                fcn.00411707(&var_94h, L\"True\");\n            }\n            break;\n        case 0x452cfc:\n            puVar4 = fcn.0044b068(*arg_8h, &var_10h);\n            fcn.00411707(&var_94h, *puVar4);\n            fcn.00402260();\n            break;\n        case 0x452d27:\n            iVar2 = (**arg_8h * 4 + 6) * 2;\n            arg_ch = fcn.00411777(-(iVar2 >> 0x20 != 0) | iVar2);\n            piVar1 = *arg_8h;\n            if (*piVar1 == 0) {\n                *arg_ch = 0;\n            }\n            else {\n                fcn.004333b0(piVar1[1], arg_ch, *piVar1);\n            }\n            fcn.00404030();\n            iVar5 = fcn.00411777(0x10);\n            if (iVar5 == 0) {\n                *(arg_8h + 0xc) = 0;\n                fcn.0041137c();\n                return;\n            }\n            uVar6 = fcn.00401c30();\n            *(arg_8h + 0xc) = uVar6;\n            fcn.0041137c();\n            return;\n        case 0x452db3:\n            goto code_r0x00452db3;\n        }\n    }\n    else {\ncode_r0x00452db3:\n        var_94h._0_2_ = 0;\n    }\n    fcn.00404030();\n    iVar5 = fcn.00411777(0x10);\n    if (iVar5 == 0) {\n        *(arg_8h + 0xc) = 0;\n        return;\n    }\n    uVar6 = fcn.00401c30();\n    *(arg_8h + 0xc) = uVar6;\n    return;\n}\n",
        "token_count": 815
    },
    "00452e26": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452e26(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 8) == 4) {\n        return *(*(arg_8h + 0xc) + 4);\n    }\n    if (*(arg_8h + 0xc) == 0) {\n        fcn.00452c26(arg_8h);\n        return *(*(arg_8h + 0xc) + 4);\n    }\n    return *(*(arg_8h + 0xc) + 4);\n}\n",
        "token_count": 122
    },
    "00452e60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452e60(int32_t arg_8h)\n\n{\n    if ((*(arg_8h + 8) != 4) && (*(arg_8h + 0xc) == 0)) {\n        fcn.00452c26(arg_8h);\n    }\n    return *(arg_8h + 0xc);\n}\n",
        "token_count": 80
    },
    "00452e81": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452e81(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 8) == 4) {\n        return **(arg_8h + 0xc);\n    }\n    if (*(arg_8h + 0xc) == 0) {\n        fcn.00452c26(arg_8h);\n        return **(arg_8h + 0xc);\n    }\n    return **(arg_8h + 0xc);\n}\n",
        "token_count": 110
    },
    "00453083": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00453083(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint arg_ch_00;\n    \n    cVar1 = fcn.0044357d(arg_ch);\n    if (cVar1 == '\\0') {\n        iVar2 = fcn.0040c8f0();\n        *arg_10h = iVar2;\n    }\n    else {\n        iVar2 = *arg_8h;\n        *arg_10h = 0;\n        if (0 < iVar2) {\n            do {\n                arg_ch_00 = arg_ch;\n                arg_8h_00 = fcn.00452e81(arg_ch);\n                iVar2 = fcn.0041164b(arg_8h_00, arg_ch_00);\n                if (iVar2 == 0) break;\n                *arg_10h = *arg_10h + 1;\n            } while (*arg_10h < *arg_8h);\n        }\n    }\n    iVar2 = *arg_10h;\n    if ((iVar2 < *arg_8h) && (-1 < iVar2)) {\n        return *(iVar2 * 0x20 + arg_8h[1]) + arg_8h[2];\n    }\n    *arg_14h = 2;\n    return 0;\n}\n",
        "token_count": 329
    },
    "0045318c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045318c(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    \n    if (*(arg_8h + 9) != '\\0') {\n        puVar1 = arg_8h[1];\n        *puVar1 = *arg_ch;\n        puVar1[1] = arg_ch[1];\n        *arg_8h = *arg_8h + 1;\n        *(arg_8h + 9) = 0;\n        return;\n    }\n    arg_8h_00 = fcn.00411777(0xc);\n    if (arg_8h_00 != 0) {\n        fcn.00452f87(arg_8h_00, arg_ch);\n        *(arg_8h_00 + 8) = arg_8h[1];\n        *arg_8h = *arg_8h + 1;\n        arg_8h[1] = arg_8h_00;\n        return;\n    }\n    *0x8 = arg_8h[1];\n    *arg_8h = *arg_8h + 1;\n    arg_8h[1] = 0;\n    return;\n}\n",
        "token_count": 283
    },
    "0045363b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045363b(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *arg_8h_00;\n    \n    if (*(arg_8h + 0x8c) != 0) {\n        arg_8h_00 = **(arg_8h + 0x90);\n        *arg_ch = *arg_8h_00;\n        fcn.0040e410(arg_8h_00 + 1);\n        fcn.004346f1(arg_8h + 0x8c);\n        fcn.0044792a(arg_8h_00);\n        *0x4a953c = 0;\n        return 1;\n    }\n    if (*(arg_8h + 0xa0) == '\\0') {\n        if ((*0x4a865c == 0) && (*0x4a953c < 100)) {\n            *0x4a953c = *0x4a953c + 1;\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    }\n    return 0;\n}\n",
        "token_count": 266
    },
    "004536cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpKeyState\n// WARNING: Variable defined which should be unmapped: var_fah\n\nvoid __cdecl fcn.004536cc(int32_t arg_8h, char *arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar5;\n    uint noname_3;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint noname_4;\n    uint *arg_8h_00;\n    uint lpKeyState;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uchar var_fch [2];\n    uint var_fah;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uint var_b1h;\n    uint var_6bh;\n    uint var_ch;\n    \n    if (*arg_ch != '\\0') {\n        *(arg_8h + 0x14) = 1;\n    }\n    if (arg_ch[2] != '\\0') {\n        *(arg_8h + 0x16) = 1;\n    }\n    if (arg_ch[3] != '\\0') {\n        *(arg_8h + 0x17) = 1;\n    }\n    if ((*(arg_8h + 0x14) != '\\0') && (*(arg_8h + 0x1a) != '\\0')) {\n        *(arg_8h + 0x14) = 0;\n    }\n    if ((*(arg_8h + 0x15) != '\\0') && (*(arg_8h + 0x1b) != '\\0')) {\n        *(arg_8h + 0x15) = 0;\n    }\n    if ((*(arg_8h + 0x16) != '\\0') && (*(arg_8h + 0x1c) != '\\0')) {\n        *(arg_8h + 0x16) = 0;\n    }\n    if ((*(arg_8h + 0x17) != '\\0') && (*(arg_8h + 0x1d) != '\\0')) {\n        *(arg_8h + 0x17) = 0;\n    }\n    if ((*(arg_8h + 0x18) != '\\0') && (*(arg_8h + 0x1e) != '\\0')) {\n        *(arg_8h + 0x18) = 0;\n    }\n    if (*(arg_8h + 0x20) == 0) {\n        arg_8h_00 = &var_ch;\n        fcn.00444794(arg_8h_00);\n        pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n        noname_4 = 0xa0;\n        uVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)();\n        pcVar2 = _sym.imp.USER32.dll_GetKeyState;\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0xa0),  (uVar3 & 0x8000) != 0)) &&\n           (*(arg_8h + 0x1a) == '\\0')) {\n            uVar9 = 0xa0;\n            puVar5 = &var_ch;\n            fcn.0044c3e8(puVar5, 0xa0);\n            fcn.0044bfeb(arg_8h, &var_ch, puVar5, uVar9, noname_4, arg_8h_00, unaff_EDI, unaff_EBX, unaff_ESI, \n                         lpKeyState, in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04\n                         , in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18\n                         , in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c\n                         , in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40\n                         , in_stack_ffffff44);\n        }\n        uVar9 = 0xa1;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0xa1),  (uVar3 & 0x8000) != 0)) && (*(arg_8h + 0x1b) == '\\0')\n           ) {\n            uVar8 = 0xa1;\n            puVar5 = &var_ch;\n            fcn.0044c3e8(puVar5, 0xa1);\n            fcn.0044bfeb(arg_8h, &var_ch, puVar5, uVar8, uVar9, noname_4, arg_8h_00, unaff_EDI, unaff_EBX, unaff_ESI, \n                         lpKeyState, in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04\n                         , in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18\n                         , in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c\n                         , in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40\n                        );\n        }\n        uVar8 = 0x11;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x11),  (uVar3 & 0x8000) != 0)) && (*(arg_8h + 0x1c) == '\\0')\n           ) {\n            uVar7 = 0x11;\n            puVar5 = &var_ch;\n            fcn.0044c3e8(puVar5, 0x11);\n            fcn.0044bfeb(arg_8h, &var_ch, puVar5, uVar7, uVar8, uVar9, noname_4, arg_8h_00, unaff_EDI, unaff_EBX, \n                         unaff_ESI, lpKeyState, in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, \n                         stack0xffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, \n                         in_stack_ffffff18, in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, \n                         in_stack_ffffff2c, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c);\n        }\n        uVar7 = 0x12;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x12),  (uVar3 & 0x8000) != 0)) && (*(arg_8h + 0x1d) == '\\0')\n           ) {\n            uVar6 = 0x12;\n            puVar5 = &var_ch;\n            fcn.0044c3e8(puVar5, 0x12);\n            fcn.0044bfeb(arg_8h, &var_ch, puVar5, uVar6, uVar7, uVar8, uVar9, noname_4, arg_8h_00, unaff_EDI, unaff_EBX\n                         , unaff_ESI, lpKeyState, in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, \n                         stack0xffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, \n                         in_stack_ffffff18, in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, \n                         in_stack_ffffff2c, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38);\n        }\n        uVar6 = 0x5b;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x5b),  (uVar3 & 0x8000) != 0)) && (*(arg_8h + 0x1e) == '\\0')\n           ) {\n            noname_3 = 0x5b;\n            puVar5 = &var_ch;\n            fcn.0044c3e8(puVar5, 0x5b);\n            fcn.0044bfeb(arg_8h, &var_ch, puVar5, noname_3, uVar6, uVar7, uVar8, uVar9, noname_4, arg_8h_00, unaff_EDI, \n                         unaff_EBX, unaff_ESI, lpKeyState, in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, \n                         _var_fch, stack0xffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, \n                         in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, \n                         in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, in_stack_ffffff34);\n        }\n    }\n    else {\n        iVar4 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2477
    },
    "00453a89": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl fcn.00453a89(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uchar auStackY8232 [8168];\n    uint uStackY64;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.00422880();\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    (*_sym.imp.USER32.dll_LoadStringW)();\n    fcn.00401c30();\n    if (*(arg_8h + 3) != '\\0') {\n        uStackY64 = 0x453aee;\n        fcn.00413c6e(0x4846b8, arg_ch);\n        fcn.00402260();\n        return;\n    }\n    if (arg_ch == 0) {\n        fcn.0041343b(&stack0xffffdfd8, L\"Line %d:\\n\\n\", arg_10h);\n    }\n    else {\n        fcn.0041343b(&stack0xffffdfd8, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_10h);\n    }\n    fcn.00401c30();\n    fcn.0040d510();\n    fcn.0040d510();\n    fcn.0040d510();\n    fcn.0040d510();\n    (*_sym.imp.USER32.dll_MessageBoxW)();\n    fcn.00402260();\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 356
    },
    "00453d62": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00453d62(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, ulong *arg_18h, uint *arg_1ch, \n            uint *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *arg_8h_00;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    float10 fVar10;\n    ulong uVar11;\n    uint var_10h;\n    code *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puVar3 = arg_18h;\n    iVar1 = arg_8h;\n    iVar9 = 0;\n    *arg_20h = 0;\n    *arg_1ch = 0;\n    fcn.004091e0();\n    *(arg_18h + 1) = 1;\n    *arg_18h = 1;\n    iVar6 = *(arg_8h + 8);\n    arg_18h = NULL;\n    var_ch = NULL;\n    if (iVar6 < 1) {\n        return 6;\n    }\n    do {\n        if (arg_18h != NULL) goto code_r0x00453e89;\n        piVar4 = *(*(iVar1 + 4) + iVar9 * 4);\n        if ((*piVar4 != 0) && (var_4h = 0,  0 < *(*piVar4 + 4))) {\n            arg_8h = 0;\n            do {\n                iVar5 = fcn.0042366c(arg_ch, *(*(*piVar4 + 8) + arg_8h));\n                if (iVar5 == 0) {\n                    iVar5 = *(**(*(iVar1 + 4) + iVar9 * 4) + 8);\n                    iVar2 = var_4h * 0xc;\n                    if ((arg_10h < *(iVar5 + 4 + iVar2)) || (*(iVar5 + 8 + iVar2) < arg_10h)) {\n                        return 7;\n                    }\n                    piVar4 = *(*(iVar1 + 4) + iVar9 * 4);\n                    arg_18h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(**piVar4, *(*(*piVar4 + 8) + iVar2));\n                    var_ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(***(*(iVar1 + 4) + iVar9 * 4), \"AU3_FreeVar\");\n                    break;\n                }\n                piVar4 = *(*(iVar1 + 4) + iVar9 * 4);\n                arg_8h = arg_8h + 0xc;\n                var_4h = var_4h + 1;\n            } while (var_4h < *(*piVar4 + 4));\n        }\n        iVar9 = iVar9 + 1;\n    } while (iVar9 < iVar6);\n    if (arg_18h == NULL) {\n        return 6;\n    }\ncode_r0x00453e89:\n    arg_8h_00 = fcn.0041376b(arg_10h << 4);\n    arg_ch = 0;\n    piVar4 = arg_8h_00;\n    if (0 < arg_10h) {\n        do {\n            uVar8 = *(*(*(arg_14h + 4) + arg_ch * 4) + 8) - 2;\n            if (5 < uVar8) {\ncode_r0x00453f62:\n                *piVar4 = 1;\n                iVar6 = fcn.0040c8f0();\n                goto code_r0x00453f73;\n            }\n    // switch table (6 cases) at 0x454086\n            switch(*(uVar8 * 4 + 0x454086)) {\n            case 0x453ed1:\n                *piVar4 = 4;\n                fcn.00452e81(*(*(arg_14h + 4) + arg_ch * 4));\n                uVar7 = fcn.0040f8c0();\n                iVar6 = fcn.004136e0(uVar7);\n                iVar6 = fcn.0041376b(iVar6 + 1);\n                piVar4[2] = iVar6;\n                if (iVar6 != 0) {\n                    fcn.00413800(iVar6, uVar7);\n                }\n                fcn.0041137c(uVar7);\n                break;\n            case 0x453f21:\n                *piVar4 = 3;\n                fVar10 = fcn.0040bd40();\n                *(piVar4 + 2) = fVar10;\n                break;\n            case 0x453f37:\n                *piVar4 = 2;\n                uVar11 = fcn.00442d6f(*(*(arg_14h + 4) + arg_ch * 4));\n                iVar6 = uVar11;\n                piVar4[3] = uVar11 >> 0x20;\n                goto code_r0x00453f73;\n            case 0x453f4e:\n                *piVar4 = 5;\n                iVar6 = fcn.0044b01e(*(*(arg_14h + 4) + arg_ch * 4));\ncode_r0x00453f73:\n                piVar4[2] = iVar6;\n                break;\n            case 0x453f62:\n                goto code_r0x00453f62;\n            }\n            arg_ch = arg_ch + 1;\n            piVar4 = piVar4 + 4;\n        } while (arg_ch < arg_10h);\n    }\n    var_8h = NULL;\n    (*arg_18h)(arg_10h, arg_8h_00, &var_8h, arg_1ch, arg_20h);\n    if (var_8h == NULL) {\n        return 0;\n    }\n    if (3 < *var_8h - 2U) {\n        iVar6 = var_8h[2];\n        fcn.004091e0();\n        *(puVar3 + 1) = 1;\n        goto code_r0x0045403e;\n    }\n    // switch table (4 cases) at 0x45409e\n    switch(*((*var_8h - 2U) * 4 + 0x45409e)) {\n    case 0x453fc3:\n        iVar6 = var_8h[2];\n        iVar1 = var_8h[3];\n        fcn.004091e0();\n        *(puVar3 + 1) = 2;\n        *(puVar3 + 4) = iVar1;\n        break;\n    case 0x453fe0:\n        uVar11 = *(var_8h + 2);\n        fcn.004091e0();\n        *(puVar3 + 1) = 3;\n        *puVar3 = uVar11;\n        goto code_r0x00454040;\n    case 0x453ff9:\n        iVar6 = var_8h[2];\n        fcn.004091e0();\n        *(puVar3 + 1) = 7;\n        break;\n    case 0x45400a:\n        uVar7 = fcn.00432f4e(var_8h[2], 0xffffffff);\n        fcn.0040e8e0();\n        fcn.0041137c(uVar7);\n        goto code_r0x00454040;\n    }\ncode_r0x0045403e:\n    *puVar3 = iVar6;\ncode_r0x00454040:\n    piVar4 = arg_8h_00;\n    if (0 < arg_10h) {\n        do {\n            if (*piVar4 == 4) {\n                fcn.004138f8(piVar4[2]);\n            }\n            arg_10h = arg_10h + -1;\n            piVar4 = piVar4 + 4;\n        } while (arg_10h != 0);\n    }\n    fcn.004138f8(arg_8h_00);\n    if (var_ch != NULL) {\n        (*var_ch)(var_8h);\n    }\n    return 0;\n}\n",
        "token_count": 1879
    },
    "004540ae": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004540ae(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uElapse;\n    int32_t var_4h;\n    \n    piVar3 = arg_8h;\n    uVar5 = (*_sym.imp.USER32.dll_LoadIconW)(*0x497520, 99);\n    (*_sym.imp.USER32.dll_SendMessageW)(arg_8h[0x15], 0x80, 0, uVar5);\n    pcVar1 = _sym.imp.USER32.dll_SetWindowTextW;\n    if (arg_8h[10] != 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextW)(arg_8h[0x15], arg_8h[9]);\n    }\n    pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n    if (arg_8h[0x12] != 0) {\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h[0x15], 0x3ea);\n        (*pcVar1)(uVar5, arg_8h[0x11]);\n    }\n    if (arg_8h[0xe] != 0) {\n        uVar5 = (*pcVar2)(arg_8h[0x15], 0x3e9);\n        (*pcVar1)(uVar5, arg_8h[0xd]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageW;\n    if (*(arg_8h + 8) != 0) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageW)(arg_8h[0x15], 0x3e9, 0xcc, *(arg_8h + 8), 0);\n    }\n    if (0 < arg_8h[5]) {\n        (*pcVar1)(arg_8h[0x15], 0x3e9, 0xc5, arg_8h[5], 0);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h[0x15], &lpRect);\n    fcn.004357dc(&lpRect);\n    arg_8h = lpRect;\n    if (piVar3[2] != -0x80000000) {\n        arg_8h = piVar3[2];\n    }\n    iVar6 = var_14h;\n    if (piVar3[3] != -0x80000000) {\n        iVar6 = piVar3[3];\n    }\n    _uElapse = CONCAT44(iVar6, uElapse);\n    iVar6 = var_10h - lpRect;\n    if (0 < *piVar3) {\n        iVar6 = *piVar3;\n    }\n    iVar7 = var_ch - var_14h;\n    if (0 < piVar3[1]) {\n        iVar7 = piVar3[1];\n    }\n    cVar4 = fcn.0044ca16(piVar3 + 9, 0x483f68);\n    if (cVar4 != '\\0') {\n        (*_sym.imp.USER32.dll_SetWindowTextW)(piVar3[0x15], piVar3[9]);\n    }\n    uVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&lpRect);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar5);\n    fcn.004357dc(&lpRect);\n    if ((*(piVar3 + 4) & 0x40) != 0) {\n        arg_8h = ((var_10h - iVar6) - lpRect) / 2;\n    }\n    if ((*(piVar3 + 4) & 0x80) == 0) {\n    }\n    else {\n        var_4h = ((var_ch - iVar7) - var_14h) / 2;\n    }\n    (*_sym.imp.USER32.dll_MoveWindow)(piVar3[0x15], arg_8h, var_4h, iVar6, iVar7, 0);\n    (*_sym.imp.USER32.dll_GetClientRect)(piVar3[0x15], &lpRect);\n    fcn.004357dc(&lpRect);\n    (*_sym.imp.USER32.dll_PostMessageW)(piVar3[0x15], 5, 0, ((var_ch - var_14h) * 0x10000 - lpRect) + var_10h);\n    if (0.0 < *(piVar3 + 6)) {\n        _uElapse = ROUND(*(piVar3 + 6) * *0x48bd98);\n        iVar6 = (*_sym.imp.USER32.dll_SetTimer)(piVar3[0x15], 0x40a, uElapse, 0);\n        piVar3[0x16] = iVar6;\n    }\n    return 1;\n}\n",
        "token_count": 1160
    },
    "004543b1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004543b1(uint32_t arg_8h, uint32_t arg_ch, char **arg_10h, char **arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h, uint32_t *arg_2ch, uint arg_30h, int32_t arg_34h, \n            int32_t *arg_38h)\n\n{\n    int32_t arg_24h_00;\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t iStack88;\n    char *pcStack84;\n    uint32_t uStack80;\n    char *pcStack76;\n    char *pcStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    char *pcStack60;\n    int32_t iStack56;\n    uint32_t uStack52;\n    ushort *puStack48;\n    uint32_t uStack44;\n    int32_t iStack40;\n    uint32_t uStack36;\n    char *pcStack32;\n    char *pcStack28;\n    uint uStack24;\n    uint16_t uStack20;\n    ushort uStack18;\n    uint uStack16;\n    char *pcStack12;\n    \n    arg_24h_00 = arg_34h;\n    pcStack84 = *arg_14h;\n    pcStack72 = *arg_10h;\n    puStack48 = NULL;\n    uStack44 = 0;\n    uStack36 = *(arg_34h + 0x44);\n    uStack16 = arg_30h;\n    iStack88 = arg_24h + 6;\n    uStack80 = 0xfffffffe;\n    uStack64 = 0xfffffffe;\n    if (*pcStack72 == '_') {\n        uStack20 = CONCAT11(pcStack72[3], pcStack72[4]);\n        uStack44 = uStack20;\n        uStack24 = *(arg_34h + 0x20);\n        uStack18 = 0;\n        *(arg_34h + 0x20) = &uStack24;\n    }\n    pcStack32 = pcStack72 + 1;\n    *pcStack32 = '\\0';\n    pcStack28 = pcStack72 + 2;\n    *pcStack28 = '\\0';\n    iStack56 = *(arg_34h + 0x34);\n    pcStack76 = pcStack72 + arg_24h + 3;\n    pcStack60 = pcStack72;\n    iStack40 = iStack56;\n    pcStack12 = pcStack72;\n    do {\n        piVar7 = arg_38h;\n        if (arg_20h != 0) {\n            *(arg_24h_00 + 0x34) = iStack40;\n        }\n        if ((arg_8h & 7) != arg_ch) {\n            *pcStack76 = '\\x19';\n            pcStack76[1] = arg_8h & 7;\n            pcStack76 = pcStack76 + 2;\n            iStack88 = iStack88 + 2;\n        }\n        if (arg_1ch != 0) {\n            *pcStack76 = '\\\\';\n            puStack48 = pcStack76 + 1;\n            *puStack48 = 0;\n            pcStack76 = pcStack76 + 3;\n            iStack88 = iStack88 + 3;\n        }\n        iVar3 = fcn.0044cae7(&arg_8h, &pcStack76, &pcStack84, arg_18h, &uStack52, &uStack68, &uStack16, arg_24h_00, \n                             -(arg_38h != NULL) & &iStack88);\n        pcVar1 = pcStack76;\n        if (iVar3 == 0) goto code_r0x00454627;\n        if (uStack36 != *(arg_24h_00 + 0x44)) {\n            arg_ch = *(arg_24h_00 + 0x44) & 7;\n        }\n        if (iStack56 < *(arg_24h_00 + 0x34)) {\n            iStack56 = *(arg_24h_00 + 0x34);\n        }\n        if (piVar7 == NULL) {\n            if (*pcStack72 == 'T') {\n                if (uStack64 < 0) {\ncode_r0x00454555:\n                    if ((-1 < uStack52) && (uStack68 < 0)) {\n                        uStack68 = uStack52;\n                    }\n                }\n                else if (uStack64 != uStack52) {\n                    if (uStack80 < 0) {\n                        uStack80 = uStack64;\n                    }\n                    uStack64 = 0xffffffff;\n                    goto code_r0x00454555;\n                }\n                if (((uStack68 ^ uStack80) & 0xfffffdff) == 0) {\n                    uStack80 = uStack80 | uStack68;\n                }\n                else {\n                    uStack80 = 0xffffffff;\n                }\n            }\n            else {\n                uStack64 = uStack52;\n                uStack80 = uStack68;\n            }\n            if (arg_1ch != 0) {\n                *pcStack76 = '\\0';\n                iVar3 = fcn.0042f58d(pcStack72, arg_8h, 0, arg_24h_00);\n                if (iVar3 == -3) {\n                    *(arg_24h_00 + 0x54) = 1;\n                }\n                else {\n                    if (iVar3 < 0) {\n                        *arg_18h = (-(iVar3 != -2) & 0xfffffff5) + 0x24;\ncode_r0x00454627:\n                        *arg_14h = pcStack84;\n                        return 0;\n                    }\n                    *puStack48 = iVar3 >> 8;\n                    *(puStack48 + 1) = iVar3;\n                }\n            }\n        }\n        if (*pcStack84 != '|') {\n            if (piVar7 == NULL) {\n                pcVar4 = pcStack72;\n                uVar5 = pcVar1 - pcStack72;\n                do {\n                    uVar6 = CONCAT11(pcVar4[1], pcVar4[2]);\n                    pcVar4[2] = uVar5;\n                    pcVar4[1] = uVar5 >> 8;\n                    pcVar4 = pcVar4 + -uVar6;\n                    uVar5 = uVar6;\n                    piVar7 = arg_38h;\n                } while (uVar6 != 0);\n            }\n            *pcVar1 = 'U';\n            pcVar1[1] = pcVar1 - pcStack60 >> 8;\n            pcVar1[2] = pcVar1 - pcStack60;\n            pcVar4 = pcVar1 + 3;\n            if (0 < uStack44) {\n                if (*(*(arg_24h_00 + 0x20) + 6) == 0) {\n                    *(arg_24h_00 + 0x20) = **(arg_24h_00 + 0x20);\n                }\n                else {\n                    fcn.00416790(pcStack60 + 3, pcStack60, pcVar4 - pcStack60);\n                    pcVar4 = pcVar1 + 6;\n                    *pcStack60 = ']';\n                    cVar2 = pcVar4 - pcStack60 >> 8;\n                    *pcStack32 = cVar2;\n                    pcStack60._0_1_ = pcVar4 - pcStack60;\n                    *pcStack28 = pcStack60;\n                    *pcVar4 = 'U';\n                    pcVar1[7] = cVar2;\n                    pcVar1[8] = pcStack60;\n                    pcVar4 = pcVar1 + 9;\n                    iStack88 = iStack88 + 6;\n                    *(arg_24h_00 + 0x20) = **(arg_24h_00 + 0x20);\n                }\n            }\n            if (((arg_8h & 7) != arg_ch) && (*pcStack84 == ')')) {\n                *pcVar4 = '\\x19';\n                pcVar4[1] = arg_ch;\n                pcVar4 = pcVar4 + 2;\n                iStack88 = iStack88 + 2;\n            }\n            *(arg_24h_00 + 0x34) = iStack56;\n            *arg_10h = pcVar4;\n            *arg_14h = pcStack84;\n            *arg_28h = uStack64;\n            *arg_2ch = uStack80;\n            if (piVar7 != NULL) {\n                if (0x7fffffeb - *piVar7 < iStack88) {\n                    *arg_18h = 0x14;\n                    return 0;\n                }\n                *piVar7 = *piVar7 + iStack88;\n            }\n            return 1;\n        }\n        if (piVar7 == NULL) {\n            *pcVar1 = 'T';\n            pcVar1[1] = pcVar1 - pcStack72 >> 8;\n            pcVar1[2] = pcVar1 - pcStack72;\n            pcStack72 = pcVar1;\n            pcStack12 = pcVar1;\n            pcStack76 = pcVar1 + 3;\n            pcStack84 = pcStack84 + 1;\n        }\n        else {\n            iStack88 = iStack88 + 3;\n            pcStack84 = pcStack84 + 1;\n            pcStack76 = *arg_10h + arg_24h + 3;\n        }\n    } while( true );\n}\n",
        "token_count": 2199
    },
    "00454771": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454771(int32_t arg_8h, uint hDlg, uint wParam, uint lParam)\n\n{\n    int32_t arg_10h;\n    \n    arg_10h = **(*0x4a8690 + arg_8h * 4);\n    if (*(arg_10h + 0x188) != '\\0') {\n        fcn.004513d8(0x4a8630, 0xfffffff4, arg_10h, 0, 0);\n    }\n    *(arg_10h + 0x188) = 0;\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x232, wParam, lParam);\n    return;\n}\n",
        "token_count": 160
    },
    "004548a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004548a8(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_10h + 0x1d0) != 0) {\n        fcn.004542ca(arg_ch);\n        iVar1 = fcn.0043596f(arg_10h, arg_8h + 0x70, *(arg_8h + 0x84));\n        if (iVar1 == 0) {\n            if (*(arg_10h + 0x1d0) != 0) {\n                fcn.0044055f(*(arg_10h + 0x1d0));\n            }\n            *(arg_10h + 0x1d0) = 0;\n        }\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00454902": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454902(uint *hLibModule, int32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    bool bVar11;\n    uint uVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    char16_t *pcVar16;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar3 = fcn.0040c8f0();\n    bVar11 = false;\n    uVar4 = fcn.00411361(arg_ch);\n    if (4 < uVar4) {\n        pcVar16 = L\".icl\";\n        iVar5 = fcn.00411361(arg_ch);\n        iVar5 = fcn.0041164b(arg_ch + -8 + iVar5 * 2, pcVar16);\n        bVar11 = iVar5 == 0;\n        pcVar16 = L\".exe\";\n        iVar5 = fcn.00411361(arg_ch);\n        iVar5 = fcn.0041164b(arg_ch + -8 + iVar5 * 2, pcVar16);\n        pcVar16 = L\".dll\";\n        iVar6 = fcn.00411361(arg_ch);\n        iVar6 = fcn.0041164b(arg_ch + -8 + iVar6 * 2, pcVar16);\n        if ((iVar6 == 0) || (iVar5 == 0)) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg_ch, 0, 0x32);\n            if (iVar5 == 0) goto code_r0x00454a9e;\n            cVar2 = fcn.0044357d(&arg_10h);\n            if (cVar2 == '\\0') {\n                if (0 < uVar3) {\n                    var_4h = (*_sym.imp.USER32.dll_LoadImageW)\n                                       (iVar5, uVar3 & 0xffff, 1, *(hLibModule + 0x21), *(hLibModule + 0x86), 0);\n                }\n                if (var_4h == 0) {\n                    iVar9 = *(hLibModule + 0x86);\n                    iVar10 = *(hLibModule + 0x21);\n                    iVar8 = 0;\n                    uVar7 = 1;\n                    puVar13 = &arg_10h;\n                    iVar6 = fcn.00452e81(puVar13);\n                    goto code_r0x00454a8b;\n                }\n            }\n            else {\n                iVar6 = *(hLibModule + 0x86);\n                iVar8 = *(hLibModule + 0x21);\n                uVar15 = 0;\n                uVar12 = 1;\n                puVar13 = &arg_10h;\n                uVar7 = fcn.00452e81(puVar13);\n                iVar8 = (*_sym.imp.USER32.dll_LoadImageW)(iVar5, uVar7, puVar13, uVar12, iVar8, iVar6, uVar15);\n                var_4h = iVar8;\n                if (iVar8 == 0) {\n                    iVar9 = *(hLibModule + 0x86);\n                    iVar10 = *(hLibModule + 0x21);\n                    puVar13 = uVar3 & 0xffff;\n                    uVar7 = 1;\n                    iVar6 = iVar5;\ncode_r0x00454a8b:\n                    var_4h = (*_sym.imp.USER32.dll_LoadImageW)(iVar6, puVar13, uVar7, iVar10, iVar9, iVar8);\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n            goto code_r0x00454a9e;\n        }\n        if (bVar11) goto code_r0x00454a9e;\n    }\n    var_4h = (*_sym.imp.USER32.dll_LoadImageW)(0, arg_ch, 1, *(hLibModule + 0x21), *(hLibModule + 0x86), 0x2010);\ncode_r0x00454a9e:\n    if (((var_4h == 0) && (cVar2 = fcn.00453140(&arg_10h),  cVar2 != '\\0')) && ((uVar3 < 1 || (bVar11)))) {\n        if (uVar3 < 0) {\n            uVar3 = -uVar3 - 1;\n        }\n        if (*(hLibModule + 0x21) < 0x11) {\n            puVar14 = &var_4h;\n            puVar13 = NULL;\n        }\n        else {\n            puVar14 = NULL;\n            puVar13 = &var_4h;\n        }\n        (*_sym.imp.SHELL32.dll_ExtractIconExW)(arg_ch, uVar3, puVar13, puVar14, 1);\n    }\n    if (hLibModule[0x19] != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(hLibModule[0x19]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    uVar7 = *hLibModule;\n    hLibModule[0x19] = var_4h;\n    (*pcVar1)(uVar7, 0x170, var_4h, 0);\n    (*pcVar1)(uVar7, 100, 0x172, 1);\n    (*_sym.imp.USER32.dll_MoveWindow)\n              (uVar7, *(hLibModule + 0x20), *(hLibModule + 0x82), *(hLibModule + 0x21), *(hLibModule + 0x86), 1);\n    if (var_4h != 0) {\n        fcn.004091e0();\n        return 1;\n    }\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 1374
    },
    "00454b71": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454b71(int32_t uPosition)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    uint *arg_10h;\n    int32_t **arg_ch;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t **ppiVar6;\n    uint *puVar7;\n    char cVar8;\n    uint32_t arg_10h_00;\n    int32_t **ppiVar9;\n    int32_t in_ECX;\n    int32_t iVar10;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t *arg_10h_01;\n    int32_t iVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    int32_t iStack88;\n    uchar auStack84 [12];\n    uint uStack72;\n    uint auStack68 [4];\n    int32_t iStack52;\n    \n    arg_10h_01 = &iStack88;\n    iVar10 = uPosition;\n    cVar8 = fcn.004417f1(in_ECX, uPosition, arg_10h_01, auStack84);\n    if (cVar8 == '\\0') {\n        return 0;\n    }\n    arg_10h = **(*(in_ECX + 0x60) + unaff_EDI * 4);\n    arg_ch = **(*(in_ECX + 0x74) + unaff_ESI * 4);\n    // switch table (28 cases) at 0x455205\n    switch(*(arg_ch + 0x22)) {\n    case '\\x02':\n    case '\\x03':\n        if ((0 < arg_10h[0x72]) && (uPosition == arg_10h[0x72])) {\n            arg_10h[0x72] = 0;\n        }\n        ppiVar9 = *arg_ch;\n        goto code_r0x0045519d;\n    default:\n        goto code_r0x0045519a;\n    case '\\n':\n        for (piVar12 = *(in_ECX + 0x84); 2 < piVar12; piVar12 = piVar12 + -1) {\n            piVar5 = *(*(in_ECX + 0x74) + piVar12 * 4);\n            if ((*piVar5 != 0) && (*(*piVar5 + 0x88) == '\\v')) {\n                fcn.00454b71(piVar12);\n                piVar12 = arg_10h_01;\n                arg_10h_01 = piVar12;\n            }\n        }\n        arg_10h[99] = 0;\n        arg_10h[100] = 0xffffffff;\n        arg_10h[0x65] = 0xffffffff;\n        arg_10h[0x66] = 0;\n        *(arg_10h + 0x67) = 0;\n        (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n        if (arg_ch[0xf] != NULL) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_ch[0xf]);\n        }\n        break;\n    case '\\v':\n        arg_10h_00 = arg_10h[0x65];\n        (*_sym.imp.USER32.dll_SendMessageW)(arg_10h[99], 0x1308, *(arg_ch + 0x8b), 0);\n        iVar10 = fcn.00441878(in_ECX, arg_10h[99]);\n        iVar10 = *(**(*(in_ECX + 0x74) + iVar10 * 4) + 0x3c);\n        if ((iVar10 != 0) && (*(arg_ch + 0x20) != -1)) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Remove)(iVar10, *(arg_ch + 0x20));\n        }\n        iVar10 = 3;\n        if (2 < *(in_ECX + 0x84)) {\n            do {\n                piVar12 = *(*(in_ECX + 0x74) + iVar10 * 4);\n                if (*piVar12 != 0) {\n                    iVar13 = *piVar12;\n                    uVar2 = *(iVar13 + 0x8b);\n                    if (uVar2 != 0xff) {\n                        if ((uVar2 == *(arg_ch + 0x8b)) && (*(iVar13 + 0x88) != '\\v')) {\n                            fcn.00454b71(iVar10);\n                        }\n                        else {\n                            if (*(arg_ch + 0x8b) < uVar2) {\n                                *(iVar13 + 0x8b) = *(iVar13 + 0x8b) + -1;\n                            }\n                            iVar13 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                            if ((((*(iVar13 + 0x88) == '\\v') && (-1 < *(arg_ch + 0x20))) &&\n                                (iVar3 = *(iVar13 + 0x80),  -1 < iVar3)) && (*(arg_ch + 0x20) < iVar3)) {\n                                piVar1 = **(*(in_ECX + 0x74) + iVar10 * 4) + 0x80;\n                                *piVar1 = *piVar1 + -1;\n                                uStack72 = 2;\n                                ppiVar9 = *(in_ECX + 0x74) + iVar10 * 4;\n                                iStack52 = *(**ppiVar9 + 0x80);\n                                (*_sym.imp.USER32.dll_SendMessageW)(arg_10h[99], 0x133d, *(**ppiVar9 + 0x8b), &uStack72)\n                                ;\n                            }\n                        }\n                    }\n                }\n                iVar10 = iVar10 + 1;\n            } while (iVar10 <= *(in_ECX + 0x84));\n        }\n        if (*(arg_ch + 0x8b) == arg_10h_00) {\n            if (arg_10h_00 == arg_10h[100]) {\ncode_r0x00454f79:\n                arg_10h_00 = arg_10h_00 - 1;\n            }\n        }\n        else {\n            arg_10h[0x65] = 0xffffffff;\n            if (*(arg_ch + 0x8b) < arg_10h_00) goto code_r0x00454f79;\n        }\n        *(arg_ch + 0x8b) = 0xff;\n        fcn.00440709(in_ECX, arg_10h, arg_10h_00);\n        arg_10h[100] = arg_10h[100] + -1;\n        arg_10h[0x66] = 0;\n        break;\n    case '\\f':\n        iVar13 = 3;\n        if (2 < *(in_ECX + 0x84)) {\n            do {\n                piVar12 = *(*(in_ECX + 0x74) + iVar13 * 4);\n                if ((*piVar12 != 0) && (iVar11 = *piVar12,  *(iVar11 + 8) == arg_ch[2])) {\n                    if ((*(iVar11 + 0x88) == '\\x0f') || (*(iVar11 + 0x88) == '\\x0e')) {\n                        fcn.0045154b(in_ECX, iVar13);\n                        iVar13 = iVar10;\n                        iVar10 = iVar13;\n                    }\n                    else {\n                        *(iVar11 + 8) = 0;\n                    }\n                }\n                iVar13 = iVar13 + 1;\n            } while (iVar13 <= *(in_ECX + 0x84));\n        }\n        if (arg_ch[2] == arg_10h[0x69]) {\n            (*_sym.imp.USER32.dll_DestroyMenu)(arg_10h[0x69]);\n            arg_10h[0x69] = 0;\n        }\n        else {\n            (*_sym.imp.USER32.dll_DestroyMenu)(arg_ch[2]);\n        }\n        break;\n    case '\\x0e':\n    case '\\x0f':\n        if (*(arg_ch + 0x22) == '\\x0e') {\n            uStack72 = 0x30;\n            fcn.004130e0(auStack68, 0, 0x2c);\n            auStack68[0] = 4;\n            iVar13 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(arg_ch[2], uPosition, 0, &uStack72);\n            if (((iVar13 != 0) && (iStack52 != 0)) && (iVar11 = 3,  iVar13 = iStack52,  2 < *(in_ECX + 0x84))) {\n                do {\n                    piVar12 = *(*(in_ECX + 0x74) + iVar11 * 4);\n                    if (((*piVar12 != 0) && (iVar4 = *piVar12,  *(iVar4 + 8) == iVar13)) && (*(iVar4 + 0x88) == '\\x0f'))\n                    {\n                        fcn.0045154b(in_ECX, iVar11);\n                        iVar11 = iVar10;\n                        iVar10 = iVar11;\n                    }\n                    iVar11 = iVar11 + 1;\n                } while (iVar11 <= *(in_ECX + 0x84));\n            }\n        }\n        iVar10 = (*_sym.imp.USER32.dll_DeleteMenu)(arg_ch[2], uPosition, 0);\n        if (iVar10 == 0) {\n            (*_sym.imp.USER32.dll_DeleteMenu)(arg_10h[0x68], uPosition, 0);\n        }\n        if ((arg_10h[0x68] != 0) && (iVar10 = (*_sym.imp.USER32.dll_GetMenuItemCount)(arg_10h[0x68]),  iVar10 == 0)) {\n            (*_sym.imp.USER32.dll_SetMenu)(*arg_10h, 0);\n            (*_sym.imp.USER32.dll_DestroyMenu)(arg_10h[0x68]);\n            arg_10h[0x68] = 0;\n        }\n        (*_sym.imp.USER32.dll_DrawMenuBar)(*arg_10h);\n        break;\n    case '\\x10':\n        if (arg_ch[0xf] != NULL) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_ch[0xf]);\n        }\n        iVar13 = 3;\n        if (2 < *(in_ECX + 0x84)) {\n            do {\n                piVar12 = *(*(in_ECX + 0x74) + iVar13 * 4);\n                if (((*piVar12 != 0) && (iVar11 = *piVar12,  *(iVar11 + 0x30) == *arg_ch)) &&\n                   (*(iVar11 + 0x88) == '\\x11')) {\n                    fcn.0045154b(in_ECX, iVar13);\n                    iVar13 = iVar10;\n                    iVar10 = iVar13;\n                }\n                iVar13 = iVar13 + 1;\n            } while (iVar13 <= *(in_ECX + 0x84));\n        }\n        goto code_r0x0045519a;\n    case '\\x11':\n        (*_sym.imp.USER32.dll_SendMessageW)(arg_ch[0xc], 0x1101, 0, arg_ch[3]);\n        break;\n    case '\\x13':\n        if (arg_ch[0xd] != NULL) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_ch[0xd]);\n        }\n        if (arg_ch[0xe] != NULL) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_ch[0xe]);\n        }\n        piVar12 = 0x3;\n        if (2 < *(in_ECX + 0x84)) {\n            do {\n                piVar5 = *(*(in_ECX + 0x74) + piVar12 * 4);\n                if (((*piVar5 != 0) && (iVar10 = *piVar5,  *(iVar10 + 4) == arg_10h[1])) &&\n                   ((*(iVar10 + 0x88) == '\\x14' && (*(iVar10 + 0x30) == *arg_ch)))) {\n                    fcn.00454b71(piVar12);\n                    piVar12 = arg_10h_01;\n                    arg_10h_01 = piVar12;\n                }\n                piVar12 = piVar12 + 1;\n            } while (piVar12 <= *(in_ECX + 0x84));\n        }\n        ppiVar9 = *arg_ch;\n        goto code_r0x0045519d;\n    case '\\x14':\n        iStack88 = uPosition;\n        iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(arg_ch[0xc], 0x1053, 0xffffffff, &stack0xffffffa0);\n        if (iVar10 == -1) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(arg_ch[0xc], 0x1008, iVar10, 0);\n        break;\n    case '\\x16':\n        iVar10 = 3;\n        if (2 < *(in_ECX + 0x84)) {\n            ppiVar9 = *(in_ECX + 0x74) + 0xc;\n            do {\n                if ((((**ppiVar9 != 0) && (ppiVar6 = **ppiVar9,  ppiVar6[1] == arg_10h[1])) &&\n                    (*(ppiVar6 + 0x22) == '\\x03')) && (*ppiVar6 == arg_ch[0xc])) {\n                    puVar7 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                    (*_sym.imp.USER32.dll_MoveWindow)\n                              (*puVar7, *(puVar7 + 0x20), *(puVar7 + 0x82), *(puVar7 + 0x21), *(puVar7 + 0x86), 0);\n                    break;\n                }\n                iVar10 = iVar10 + 1;\n                ppiVar9 = ppiVar9 + 1;\n            } while (iVar10 <= *(in_ECX + 0x84));\n        }\ncode_r0x0045519a:\n        ppiVar9 = *arg_ch;\n        goto code_r0x0045519d;\n    case '\\x1b':\n        ppiVar9 = arg_ch;\n        fcn.00430622(arg_10h, arg_ch);\ncode_r0x0045519d:\n        (*_sym.imp.USER32.dll_DestroyWindow)(ppiVar9);\n        break;\n    case '\\x1d':\n        fcn.004548a8(in_ECX, arg_ch, arg_10h);\n    }\n    if (arg_ch[0x10] != NULL) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(arg_ch[0x10]);\n    }\n    if (arg_ch[0x18] != NULL) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(arg_ch[0x18]);\n    }\n    if (arg_ch[0x19] != NULL) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(arg_ch[0x19]);\n    }\n    if (arg_ch[0x13] != NULL) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(arg_ch[0x13]);\n    }\n    if (arg_10h_01 == arg_10h[7]) {\n        arg_10h[7] = 0xffffffff;\n    }\n    fcn.0045154b(in_ECX, arg_10h_01);\n    return 1;\n}\n",
        "token_count": 3493
    },
    "00455255": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455255(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    cVar3 = fcn.004417f1(0x4a8630, arg_8h, &arg_8h, &var_4h);\n    iVar6 = *0x4a86a4;\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    arg_8h = **(*0x4a8690 + arg_8h * 4);\n    puVar1 = **(*0x4a86a4 + var_4h * 4);\n    cVar3 = *(puVar1 + 0x22);\n    if ((((((cVar3 == '\\x0e') || (cVar3 == '\\x0f')) || (cVar3 == '\\f')) || ((cVar3 == '\\t' || (cVar3 == '\\x14')))) ||\n        ((cVar3 == '\\x11' || ((cVar3 == '\\x1d' || (cVar3 == '\\x1b')))))) || (cVar3 == '\\x15')) {\n        return 0;\n    }\n    var_3ch = -(arg_1ch != '\\0') & 2 | 0x11;\n    var_40h = 0x2c;\n    var_38h = *puVar1;\n    var_20h = *0x4a8684;\n    var_34h = *puVar1;\n    var_1ch = arg_ch;\n    if (*(puVar1 + 0x22) == '\\v') {\n        iVar4 = fcn.00441878(0x4a8630, *(arg_8h + 0x18c));\n        iVar6 = **(iVar6 + iVar4 * 4);\n        iVar5 = *(iVar6 + 0x4c);\n        if (iVar5 != 0) {\n            if (*(iVar6 + 0x54) == 0) goto code_r0x00455405;\n            (*_sym.imp.USER32.dll_DestroyWindow)(iVar5);\n        }\n        iVar5 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (8, L\"tooltips_class32\", 0, -(arg_18h != '\\0') & 0x40 | 0x80000003, 0x80000000, 0x80000000, \n                           0x80000000, 0x80000000, *(arg_8h + 0x18c), 0, *0x4a8684, 0);\n        if (iVar5 != 0) {\n            *(**(*0x4a86a4 + iVar4 * 4) + 0x4c) = iVar5;\n            fcn.00402170();\n            var_38h = *(arg_8h + 0x18c);\n            var_34h = *(arg_8h + 0x18c);\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar5, 0x432, 0, &var_40h);\ncode_r0x00455405:\n            (*_sym.imp.USER32.dll_SendMessageW)(*(arg_8h + 0x18c), 0x132e, iVar5, 0);\n            puVar1[0x13] = iVar5;\n            fcn.00402170();\n            return 1;\n        }\n    }\n    else {\n        if (puVar1[0x13] != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(puVar1[0x13]);\n        }\n        iVar6 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (8, L\"tooltips_class32\", 0, -(arg_18h != '\\0') & 0x40 | 0x80000003, 0x80000000, 0x80000000, \n                           0x80000000, 0x80000000, *puVar1, 0, *0x4a8684, 0);\n        if (iVar6 != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x432, 0, &var_40h);\n            puVar1[0x13] = iVar6;\n            fcn.00402170();\n            uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&var_14h);\n            (*_sym.imp.USER32.dll_GetWindowRect)(uVar7);\n            pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x418, 0, var_ch);\n            if (arg_10h != 0) {\n                (*pcVar2)(iVar6, 0x421, arg_14h, arg_10h);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1232
    },
    "004554fe": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004554fe(uint arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    ushort *puVar1;\n    uchar uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    char cVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    code *pcVar12;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint var_84h;\n    uint var_80h;\n    uint var_78h;\n    uint32_t var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5eh;\n    uint var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_ch;\n    \n    puVar6 = arg_ch;\n    cVar7 = fcn.004417f1(0x4a8630, arg_8h, &var_68h, &arg_ch);\n    if (cVar7 == '\\0') goto code_r0x00455527;\n    puVar3 = **(*0x4a86a4 + arg_ch * 4);\n    uVar2 = *(puVar3 + 0x22);\n    uVar4 = *puVar3;\n    *puVar6 = 0xffffffff;\n    pcVar12 = _sym.imp.USER32.dll_SendMessageW;\n    // switch table (29 cases) at 0x455bf6\n    switch(uVar2) {\n    case 0:\n        iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x147, 0, 0);\n        pcVar12 = _sym.imp.USER32.dll_SendMessageW;\n        if (iVar10 != -1) {\n            iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x149, iVar10, 0);\n            iVar5 = (iVar11 + 1) * 2;\n            iVar11 = fcn.00411777(-(iVar5 >> 0x20 != 0) | iVar5);\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x148, iVar10, iVar11);\n            return iVar11;\n        }\n        break;\n    case 1:\n        iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x188, 0, 0);\n        if (iVar10 != -1) {\n            iVar11 = (*pcVar12)(uVar4, 0x18a, iVar10, 0);\n            iVar5 = (iVar11 + 1) * 2;\n            arg_10h = fcn.00411777(-(iVar5 >> 0x20 != 0) | iVar5);\n            (*pcVar12)(uVar4, 0x189, iVar10, arg_10h);\n            return arg_10h;\n        }\n        break;\n    case 8:\n        uVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x408, 0, 0);\n        *puVar6 = uVar8;\n        return 0;\n    case 10:\n        uVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x130b, 0, 0);\n        *puVar6 = uVar8;\n        if (arg_10h != '\\0') {\n            var_84h = 8;\n            (*pcVar12)(uVar4, 0x133c, uVar8, &var_84h);\n            *puVar6 = var_6ch;\n        }\n        return 0;\n    case 0xe:\n    case 0xf:\n        iVar10 = (*_sym.imp.USER32.dll_IsMenu)(puVar3[2]);\n        if (iVar10 == 0) {\n            return 0;\n        }\n        iVar10 = fcn.00411777(0x208);\n        var_b4h = 0x30;\n        if (arg_10h == '\\0') {\n            var_b0h = 1;\n            iVar11 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(puVar3[2], arg_8h, 0, &var_b4h);\n            if (iVar11 != 0) {\n                fcn.0041137c(iVar10);\n                uVar8 = (-((var_a8h & 3) != 0) & 0x40) + 0x40;\n                *puVar6 = var_a8h;\n                if ((var_a8h & 0x8080) != 0) {\n                    uVar8 = uVar8 | 0x100;\n                }\n                if ((var_a8h & 8) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                else {\n                    uVar8 = uVar8 | 1;\n                }\n                if ((var_a8h & 0x1000) != 0) {\n                    uVar8 = uVar8 | 0x200;\n                }\n                *puVar6 = uVar8;\n                return 0;\n            }\n            goto code_r0x00455675;\n        }\n        var_b0h = 0x10;\n        var_8ch = 0x104;\n        var_90h = iVar10;\n        iVar11 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)();\n        if (iVar11 != 0) {\n            return iVar10;\n        }\n        *puVar6 = 0;\n        goto code_r0x00455795;\n    case 0x10:\n        *puVar6 = 0;\n        var_50h = (*pcVar12)(uVar4, 0x110a, 9, 0);\n        if (var_50h != 0) {\n            var_54h = 4;\n            if (arg_10h != '\\0') {\n                iVar10 = fcn.00411777(0x2000);\n                var_54h = 1;\n                var_40h = 0xfff;\n                var_44h = iVar10;\n                iVar11 = (*pcVar12)(uVar4, 0x113e, 0, &var_54h);\n                if (iVar11 != 0) {\n                    return iVar10;\n                }\n                fcn.0041137c(iVar10);\n                return 0;\n            }\n            iVar10 = (*pcVar12)(uVar4, 0x113e, 0, &var_54h);\n            if (iVar10 != 0) {\n                *puVar6 = var_30h;\n            }\n        }\n        return 0;\n    case 0x11:\n        uVar4 = puVar3[0xc];\n        var_50h = puVar3[3];\n        *puVar6 = 0;\n        uVar8 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar4, 0xfffffff0);\n        var_54h = 8;\n        var_48h = 0xf000;\n        if (arg_10h == '\\0') {\n            iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(puVar3[0xc], 0x113e, 0, &var_54h);\n            if (iVar10 != 0) {\n                if ((uVar8 & 0x100) != 0) {\n                    *puVar6 = (-(var_4ch >> 0xc != 1) & 0xfffffffd) + 4;\n                }\n                if ((var_4ch & 2) != 0) {\n                    *puVar6 = *puVar6 | 0x100;\n                }\n                if ((var_4ch & 0x20) != 0) {\n                    *puVar6 = *puVar6 | 0x400;\n                }\n                if ((var_4ch & 0x10) != 0) {\n                    *puVar6 = *puVar6 | 0x200;\n                }\n            }\n            return 0;\n        }\n        iVar10 = fcn.00411777(0x2000);\n        var_54h = 1;\n        var_40h = 0xfff;\n        var_44h = iVar10;\n        iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(puVar3[0xc], 0x113e, 0, &var_54h);\n        if (iVar11 != 0) {\n            return iVar10;\n        }\ncode_r0x00455795:\n        fcn.0041137c(iVar10);\n        return 0;\n    case 0x12:\n        uVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x400, 0, 0);\n        *puVar6 = uVar8;\n        return 0;\n    case 0x13:\n        uVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x100c, 0xffffffff, 2);\n        *puVar6 = uVar8;\n        fcn.004130e0(&var_2ch, 0, 0x28);\n        var_28h = *puVar6;\n        var_2ch = 4;\n        iVar10 = (*pcVar12)(uVar4, 0x104b, 0, &var_2ch);\n        *puVar6 = -(iVar10 != 0) & var_ch;\n        return 0;\n    case 0x14:\n        uVar4 = puVar3[0xc];\n        *puVar6 = 0xffffffff;\n        arg_ch = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar4, 0xffffffec);\n        fcn.004130e0(&var_2ch, 0, 0x28);\n        pcVar12 = _sym.imp.USER32.dll_SendMessageW;\n        var_80h = 1;\n        var_78h = arg_8h;\n        var_28h = (*_sym.imp.USER32.dll_SendMessageW)(puVar3[0xc], 0x1053, 0xffffffff, &var_80h);\n        if (var_28h == -1) {\n            return 0;\n        }\n        if (((arg_ch & 4) != 0) && (arg_10h != '\\0')) {\n            var_2ch = 8;\n            var_1ch = 0xf000;\n            iVar10 = (*pcVar12)(puVar3[0xc], 0x104b, 0, &var_2ch);\n            if (iVar10 != 0) {\n                *puVar6 = (-(var_20h >> 0xc != 1) & 0xfffffffd) + 4;\n            }\n            return 0;\n        }\n        iVar10 = fcn.00411777(0x2000);\n        iVar11 = 0;\n        var_2ch = 1;\n        var_14h = 0xfff;\n        arg_10h = iVar10;\n        if (0 < *(puVar3 + 0x23)) {\n            do {\n                var_24h = iVar11;\n                var_18h = iVar10;\n                (*_sym.imp.USER32.dll_SendMessageW)(puVar3[0xc], 0x104b, 0, &var_2ch);\n                var_14h = fcn.00411361(iVar10);\n                iVar10 = arg_10h;\n                var_14h = 0xffe - var_14h;\n                if (var_14h < 1) {\n                    return arg_10h;\n                }\n                iVar9 = fcn.00411361(arg_10h);\n                puVar1 = iVar10 + iVar9 * 2;\n                *puVar1 = *0x4a8644;\n                puVar1[1] = 0;\n                iVar10 = (*_sym.imp.USER32.dll_CharNextW)(puVar1);\n                iVar11 = iVar11 + 1;\n            } while (iVar11 < *(puVar3 + 0x23));\n        }\n        var_24h = iVar11;\n        var_18h = iVar10;\n        (*_sym.imp.USER32.dll_SendMessageW)(puVar3[0xc], 0x104b, 0, &var_2ch);\n        return arg_10h;\n    case 0x15:\n        cVar7 = fcn.0044357d(puVar3 + 0x1a);\n        if (cVar7 == '\\0') {\n            uVar8 = fcn.0040c8f0();\n            *puVar6 = uVar8;\n            return 0;\n        }\n        iVar10 = fcn.00452e81(puVar3 + 0x1a);\n        return iVar10;\n    case 0x19:\n    case 0x1a:\n        if (arg_10h == '\\0') {\n            uVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0xf0, 0, 0);\n            *puVar6 = uVar8;\n            if (uVar8 == 0) {\n                *puVar6 = 4;\n            }\n            return 0;\n        }\n        iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0xe);\n        iVar5 = (iVar10 + 1U) * 2;\n        arg_10h = fcn.00411777(-(iVar5 >> 0x20 != 0) | iVar5);\n        iVar10 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar4, arg_10h, iVar10 + 1U);\n        if (iVar10 != 0) {\n            return arg_10h;\n        }\n        *puVar6 = 0;\n        iVar10 = arg_10h;\ncode_r0x00455675:\n        fcn.0041137c(iVar10);\n        return 0;\n    case 0x1c:\n        iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x1001, 0, &var_64h);\n        if (iVar10 != 0) {\n            iVar10 = fcn.00411777(0x16);\n            (*_sym.imp.USER32.dll_wsprintfW)(iVar10, L\"%d/%02d/%02d\", var_64h, var_64h._2_2_, var_5eh);\n            return iVar10;\n        }\n    case 0xc:\ncode_r0x00455527:\n        *puVar6 = 0;\n        return 0;\n    }\n    iVar10 = (*pcVar12)(uVar4, 0xe, 0, 0);\n    iVar5 = (iVar10 + 1U) * 2;\n    iVar11 = fcn.00411777(-(iVar5 >> 0x20 != 0) | iVar5);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(uVar4, iVar11, iVar10 + 1U);\n    return iVar11;\n}\n",
        "token_count": 3513
    },
    "00455c4f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00455c4f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t var_4h;\n    \n    iVar4 = arg_10h;\n    iVar7 = arg_8h;\n    if (arg_18h != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_18h);\n    }\n    if (*0x4a869c != -1) {\n        if (iVar7 != 0) {\n            fcn.00402170();\n        }\n        puVar1 = **(*0x4a8690 + *0x4a869c * 4);\n        arg_18h = *puVar1;\n        var_4h = 1;\n        if (iVar4 != 0) {\n            arg_8h = (*_sym.imp.USER32.dll_LoadImageW)(0, iVar4, 1, 0x10, 0x10, 0x10);\n            uVar5 = arg_14h;\n            if (arg_8h == 0) {\n                uVar5 = fcn.004335e8(arg_14h);\n                (*_sym.imp.SHELL32.dll_ExtractIconExW)(iVar4, uVar5, 0, &arg_8h, 1);\n            }\n            arg_10h = (*_sym.imp.USER32.dll_LoadImageW)(0, iVar4, 1, 0, 0, 0x50);\n            if (arg_10h == 0) {\n                uVar8 = 1;\n                puVar6 = &arg_10h;\n                iVar7 = arg_10h;\n                uVar5 = fcn.004335e8(uVar5);\n                (*_sym.imp.SHELL32.dll_ExtractIconExW)(iVar4, uVar5, puVar6, iVar7, uVar8);\n            }\n            pcVar3 = _sym.imp.USER32.dll_DestroyIcon;\n            pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n            if (arg_8h != 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(arg_18h, 0x80, 0, arg_8h);\n                if (puVar1[8] != 0) {\n                    (*pcVar3)(puVar1[8]);\n                }\n                puVar1[8] = arg_8h;\n            }\n            if (arg_10h != 0) {\n                (*pcVar2)(arg_18h, 0x80, 1, arg_10h);\n                if (puVar1[9] != 0) {\n                    (*pcVar3)(puVar1[9]);\n                }\n                puVar1[9] = arg_10h;\n            }\n            if ((arg_8h == 0) && (arg_10h == 0)) {\n                var_4h = arg_10h;\n            }\n        }\n        if (arg_ch != -1) {\n            fcn.00433146(&arg_ch);\n            if (-1 < puVar1[0x13]) {\n                fcn.004410a6(puVar1[0x13]);\n            }\n            puVar1[0x13] = arg_ch;\n            fcn.0044112e(arg_ch, 1);\n        }\n        if (arg_1ch != -1) {\n            puVar1[0x14] = arg_1ch;\n        }\n        if (arg_20h != -1) {\n            puVar1[0x15] = arg_20h;\n        }\n        if (*(puVar1 + 0xe) != '\\0') {\n            (*_sym.imp.USER32.dll_InvalidateRect)(arg_18h, 0, 1);\n        }\n        return var_4h;\n    }\n    return 0;\n}\n",
        "token_count": 951
    },
    "00455e06": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455e06(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *lpPoint;\n    uint *var_4h;\n    \n    puVar5 = *arg_ch;\n    puVar7 = &lpPoint;\n    (*_sym.imp.USER32.dll_GetCursorPos)();\n    puVar6 = &lpPoint;\n    arg_ch[0x5c] = lpPoint;\n    arg_ch[0x5d] = var_4h;\n    (*_sym.imp.USER32.dll_ScreenToClient)();\n    if ((lpPoint != arg_ch[0x5e]) || (var_4h != arg_ch[0x5f])) {\n        arg_ch[0x5e] = lpPoint;\n        arg_ch[0x5f] = var_4h;\n        if (0 < arg_10h) {\n            fcn.004513d8(arg_8h, 0xfffffff5, arg_ch, lpPoint, var_4h);\n        }\n    }\n    uVar4 = *(arg_8h + 0x18);\n    uVar1 = (*_sym.imp.USER32.dll_GetAsyncKeyState)();\n    uVar3 = (uVar1 & 0xffff) >> 0xf;\n    uVar1 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(*(arg_8h + 0x1c));\n    uVar1 = (uVar1 & 0xffff) >> 0xf;\n    if (((uVar3 == arg_ch[0x60]) || (arg_10h < 1)) || (*(arg_ch + 0x6b) == '\\0')) goto code_r0x00455f10;\n    if (uVar3 == 0) {\n        fcn.004513d8(arg_8h, 0xfffffff8, arg_ch, lpPoint, var_4h);\n        if (*(arg_ch + 0x62) != '\\0') {\n            uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_ch, 0xfffffff0);\n            puVar5 = arg_ch;\n            puVar6 = lpPoint;\n            puVar7 = var_4h;\n            if ((uVar2 & 0x1000000) == 0) {\n                uVar4 = 0xfffffff4;\n            }\n            else {\n                uVar4 = 0xfffffffa;\n            }\n            goto code_r0x00455f00;\n        }\n    }\n    else {\ncode_r0x00455f00:\n        fcn.004513d8(arg_8h, uVar4, puVar5, puVar6, puVar7);\n    }\n    *(arg_ch + 0x62) = 0;\ncode_r0x00455f10:\n    if (arg_10h != 0) {\n        arg_ch[0x60] = uVar3;\n    }\n    if ((uVar1 != arg_ch[0x61]) && (0 < arg_10h)) {\n        if (uVar1 == 0) {\n            uVar4 = 0xfffffff6;\n        }\n        else {\n            uVar4 = 0xfffffff7;\n        }\n        fcn.004513d8(arg_8h, uVar4, arg_ch, lpPoint, var_4h);\n    }\n    if (arg_10h != 0) {\n        arg_ch[0x61] = uVar1;\n    }\n    return;\n}\n",
        "token_count": 820
    },
    "00455f64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00455f64(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    if (*0x4a86b0 == *0x4a86a8) {\n        if (*0x4a86b4 == 0xffff) {\n            return -1;\n        }\n        iVar1 = fcn.00411777(0x98);\n        if (iVar1 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.004515dd(iVar1);\n        }\n        var_4h = iVar2;\n        fcn.0040df70(&var_4h);\n        iVar1 = *0x4a86b4 + 1;\n        *0x4a86b4 = iVar1;\n    }\n    else {\n        iVar1 = 3;\n        if (3 < *0x4a86a8) {\n            do {\n                if (**(*0x4a86a4 + iVar1 * 4) == 0) break;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < *0x4a86a8);\n        }\n        iVar2 = fcn.00411777(0x98);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.004515dd(iVar2);\n        }\n    }\n    *0x4a86b0 = *0x4a86b0 + 1;\n    **(*0x4a86a4 + iVar1 * 4) = iVar2;\n    *(iVar2 + 4) = *(arg_8h + 4);\n    return iVar1;\n}\n",
        "token_count": 399
    },
    "004568bf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004568bf(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.00452e81(arg_8h);\n    iVar3 = 1;\n    if ((((arg_8h_00 != NULL) && (*arg_8h_00 != 0)) && (iVar2 = fcn.004132dc(arg_8h_00, 0x48b658),  iVar2 != 0)) &&\n       (iVar2 = fcn.004132dc(arg_8h_00, 0x48b65c),  iVar2 != 0)) {\n        uVar1 = *arg_8h_00;\n        do {\n            if (uVar1 == 0) {\n                return 1;\n            }\n            if (iVar3 == 1) {\n    // switch table (15 cases) at 0x456963\n                switch(*arg_8h_00) {\n                case 0x2b:\n                case 0x2d:\n                    arg_8h_00 = arg_8h_00 + 1;\n                case 0x30:\n                case 0x31:\n                case 0x32:\n                case 0x33:\n                case 0x34:\n                case 0x35:\n                case 0x36:\n                case 0x37:\n                case 0x38:\n                case 0x39:\n                    iVar3 = 2;\n                    break;\n                default:\n                    goto code_r0x0045695b;\n                }\n            }\n            else if (iVar3 == 2) {\n                iVar2 = fcn.00413983(*arg_8h_00);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                arg_8h_00 = arg_8h_00 + 1;\n            }\n            uVar1 = *arg_8h_00;\n        } while( true );\n    }\ncode_r0x0045695b:\n    return 0;\n}\n",
        "token_count": 474
    },
    "004569ad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456a89)\n// WARNING: Removing unreachable block (ram,0x00456a8f)\n// WARNING: Removing unreachable block (ram,0x00456a94)\n\nuint32_t __cdecl fcn.004569ad(uint arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    arg_8h_00 = fcn.00452e81(arg_8h);\n    piVar1 = arg_8h_00;\n    if ((((arg_8h_00 != NULL) && (*arg_8h_00 != 0)) && (piVar1 = fcn.004132dc(arg_8h_00, 0x486cfc),  piVar1 != NULL)) &&\n       ((piVar1 = fcn.004132dc(arg_8h_00, 0x48b648),  piVar1 != NULL &&\n        (piVar1 = fcn.004132dc(arg_8h_00, 0x48b650),  piVar1 != NULL)))) {\n        if (*arg_8h_00 == 0) {\n            return 0;\n        }\n    // WARNING: Could not recover jumptable at 0x00456a28. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x456aad\n        uVar2 = (**0x456aad)();\n        return uVar2;\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 356
    },
    "004570ca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004570ca(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = fcn.0040c8f0();\n    iVar2 = iVar2 + -1;\n    if (((-1 < iVar2) && (iVar2 < *(in_ECX + 0x1a0))) && (piVar1 = *(*(in_ECX + 0x19c) + iVar2 * 4),  *piVar1 != 0)) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(*(*piVar1 + 0x10), 0, 0x8000);\n        arg_8h_00 = **(*(in_ECX + 0x19c) + iVar2 * 4);\n        if (arg_8h_00 != 0) {\n            fcn.0044ac43(arg_8h_00);\n        }\n        **(*(in_ECX + 0x19c) + iVar2 * 4) = 0;\n        return 0;\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 297
    },
    "00457155": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457155(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = fcn.0040c8f0();\n    iVar2 = iVar2 + -1;\n    if (((-1 < iVar2) && (iVar2 < *(in_ECX + 400))) && (piVar1 = *(*(in_ECX + 0x18c) + iVar2 * 4),  *piVar1 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar1);\n        **(*(in_ECX + 0x18c) + iVar2 * 4) = 0;\n        return 0;\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 208
    },
    "004571c1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004571c1(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t **ppiVar4;\n    uint32_t uVar5;\n    \n    uVar3 = fcn.00452e81(**(arg_8h + 4));\n    arg_8h = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(uVar3);\n    piVar2 = arg_ch;\n    if (arg_8h == 0) {\n        fcn.004091e0();\n        *piVar2 = -1;\n        piVar2[2] = 1;\n        return 0;\n    }\n    uVar1 = *(in_ECX + 400);\n    uVar5 = 0;\n    if (uVar1 != 0) {\n        ppiVar4 = *(in_ECX + 0x18c);\n        do {\n            if (**ppiVar4 == 0) break;\n            uVar5 = uVar5 + 1;\n            ppiVar4 = ppiVar4 + 1;\n        } while (uVar5 < uVar1);\n    }\n    if (uVar5 == uVar1) {\n        fcn.00431f64(in_ECX + 0x188, &arg_8h);\n    }\n    else {\n        **(*(in_ECX + 0x18c) + uVar5 * 4) = arg_8h;\n    }\n    piVar2 = arg_ch;\n    fcn.004091e0();\n    *piVar2 = uVar5 + 1;\n    piVar2[2] = 1;\n    return 0;\n}\n",
        "token_count": 396
    },
    "004574ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004574ea(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint *arg_10h;\n    int32_t iVar3;\n    \n    puVar1 = arg_ch;\n    fcn.004091e0();\n    puVar1[2] = 1;\n    *puVar1 = 0;\n    fcn.00403f40(1, 0);\n    uVar2 = **(arg_8h + 4);\n    iVar3 = &arg_ch + 3;\n    arg_10h = &arg_8h;\n    arg_8h_00 = fcn.00452e81(uVar2);\n    fcn.00443a5f(arg_8h_00, uVar2, arg_10h);\n    if ((arg_ch._3_1_ == '\\0') ||\n       (arg_ch = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x200, 0, arg_8h, iVar3),  arg_ch == NULL)) {\n        return 0;\n    }\n    uVar2 = fcn.0040c8f0();\n    // switch table (6 cases) at 0x4575de\n    switch(uVar2) {\n    case 0:\n        uVar2 = 0x40;\n        break;\n    case 1:\n        uVar2 = 0x4000;\n        break;\n    case 2:\n        uVar2 = 0x20;\n        break;\n    case 3:\n        uVar2 = 0x8000;\n        break;\n    case 4:\n        uVar2 = 0x80;\n        break;\n    case 5:\n        uVar2 = 0x100;\n        break;\n    default:\n        goto code_r0x004575c9;\n    }\n    (*_sym.imp.KERNEL32.dll_SetPriorityClass)(arg_ch, uVar2);\n    fcn.004091e0();\n    puVar1[2] = 1;\n    *puVar1 = 1;\n    fcn.00403f40(0, 0);\ncode_r0x004575c9:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_ch);\n    return 0;\n}\n",
        "token_count": 512
    },
    "00457664": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457664(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint pExecInfo;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040bf10();\n    iVar6 = 0;\n    var_4h = 0;\n    var_8h = 1;\n    fcn.004130e0(&pExecInfo, 0, 0x3c);\n    if (1 < arg_14h) {\n        piVar3 = fcn.00452e81(*(*(arg_10h + 4) + 4));\n        if (*piVar3 != 0) {\n            fcn.00452e81(*(*(arg_10h + 4) + 4));\n            iVar6 = fcn.00410330();\n        }\n    }\n    if (2 < arg_14h) {\n        fcn.00452e81(*(*(arg_10h + 4) + 8));\n        var_4h = fcn.00410330();\n    }\n    if (3 < arg_14h) {\n        piVar3 = fcn.00452e81(*(*(arg_10h + 4) + 0xc));\n        if (*piVar3 != 0) {\n            uVar4 = *(*(arg_10h + 4) + 0xc);\n            cVar2 = fcn.0044aa8e(uVar4);\n            if (cVar2 == '\\0') {\n                uVar4 = fcn.00452e60(uVar4);\n                fcn.0040e410(uVar4);\n            }\n        }\n    }\n    if (4 < arg_14h) {\n        var_8h = fcn.0040c8f0();\n        var_8h = var_8h & 0xffff;\n    }\n    fcn.004130e0(&pExecInfo, 0, 0x3c);\n    pExecInfo = 0x3c;\n    var_50h = 0x40;\n    var_4ch = 0;\n    var_48h = var_18h;\n    var_44h = fcn.00452e81(**(arg_10h + 4));\n    iVar1 = var_4h;\n    var_3ch = var_4h;\n    var_38h = var_8h;\n    var_40h = iVar6;\n    iVar5 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    if (iVar6 != 0) {\n        fcn.0041137c(iVar6);\n    }\n    if (iVar1 != 0) {\n        fcn.0041137c(iVar1);\n    }\n    if (iVar5 == 0) {\n        fcn.00403f40(1, 0);\n        fcn.004091e0();\n        arg_18h[2] = 1;\n        *arg_18h = 0;\n    }\n    else {\n        if (arg_ch != '\\0') {\n            *(arg_8h + 0x450) = var_1ch;\n            fcn.00402260();\n            return 0;\n        }\n        fcn.004091e0();\n        arg_18h[2] = 1;\n        *arg_18h = 1;\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(var_1ch);\n            fcn.00402260();\n            return 0;\n        }\n    }\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 940
    },
    "00457850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x004578b9)\n// WARNING: Removing unreachable block (ram,0x004578ca)\n// WARNING: Removing unreachable block (ram,0x004578d0)\n\nuint __cdecl fcn.00457850(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_1h;\n    \n    arg_8h_01 = **(arg_8h + 4);\n    puVar3 = &var_1h;\n    puVar2 = &arg_8h;\n    arg_8h_00 = fcn.00452e81(arg_8h_01);\n    cVar1 = fcn.00443a5f(arg_8h_00, arg_8h_01, puVar2);\n    puVar2 = arg_ch;\n    if (cVar1 != '\\0') {\n        fcn.004091e0(puVar3);\n        puVar2[2] = 1;\n        *puVar2 = 0;\n        return 0;\n    }\n    fcn.004091e0(puVar3);\n    puVar2[2] = 1;\n    *puVar2 = 0;\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 338
    },
    "00457977": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00457977(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ushort uStackY8240;\n    uint lpName;\n    uint uStackY32;\n    uint var_18h;\n    uchar *puStackY24;\n    uint var_8h;\n    \n    fcn.00422880();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    iVar4 = 0;\n    puStackY24 = 0x4579a2;\n    puVar3 = fcn.00452e81(arg_8h);\n    uVar1 = *puVar3;\n    bVar2 = false;\n    if (uVar1 != 0) {\n        do {\n            iVar5 = iVar4 + 1;\n            if (uVar1 == 0x25) {\n                if (puVar3[iVar5] == 0x25) {\n                    bVar2 = true;\n                    var_18h = 0x4579d4;\n                    fcn.004032d0(0x25);\n                    iVar5 = iVar4 + 2;\n                }\n                else {\n                    puStackY24 = 0x4579e7;\n                    fcn.00402170();\n                    uVar1 = puVar3[iVar5];\n                    while ((uVar1 != 0x25 && (uVar1 != 0))) {\n                        puStackY24 = 0x457a08;\n                        fcn.004032d0(uVar1);\n                        iVar4 = iVar5 + 1;\n                        iVar5 = iVar5 + 1;\n                        uVar1 = puVar3[iVar4];\n                    }\n                    if (puVar3[iVar5] == 0) {\n                        fcn.0040d510();\n                        puStackY24 = 0x457ad3;\n                        fcn.0040bff0(&fcn.00457977::lpName);\n                        goto code_r0x00457a96;\n                    }\n                    puStackY24 = &stack0xffffdfd0;\n                    iVar5 = iVar5 + 1;\n                    uStackY8240 = 0;\n                    uStackY32 = 0x457a3e;\n                    var_18h = lpName;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)();\n                    if (iVar4 == 0) {\n                        bVar2 = true;\n                        puStackY24 = 0x457a63;\n                        fcn.0040d510();\n                        var_18h = 0x457a6f;\n                        fcn.0040bff0(&fcn.00457977::lpName);\n                        var_18h = 0x457a77;\n                        fcn.0040d510();\n                    }\n                    else {\n                        puStackY24 = 0x457a50;\n                        fcn.0040d510();\n                        bVar2 = true;\n                    }\n                }\n            }\n            else {\n                var_18h = 0x457a85;\n                fcn.004032d0(uVar1);\n            }\n            uVar1 = puVar3[iVar5];\n            iVar4 = iVar5;\n        } while (uVar1 != 0);\n        if (bVar2) {\ncode_r0x00457a96:\n            puStackY24 = 0x457aa1;\n            fcn.0040e870();\n        }\n    }\n    puStackY24 = 0x457aa9;\n    fcn.00402260();\n    puStackY24 = 0x457ab1;\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 829
    },
    "00458e84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458e84(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *piVar5;\n    \n    uVar1 = *(arg_8h + 8);\n    if (*0x49750c != 0) {\n        iVar3 = fcn.0040c8f0();\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        if (-1 < iVar3) {\n            iVar3 = fcn.0040c8f0();\n            if (iVar3 < 0x65) {\n                uVar4 = fcn.0040c8f0(0);\n                (*pcVar2)(*0x49750c, 0x402, uVar4);\n            }\n        }\n        if (1 < uVar1) {\n            piVar5 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n            if (*piVar5 != 0) {\n                uVar4 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n                (*pcVar2)(*0x497504, 0xc, 0, uVar4);\n            }\n            if (2 < uVar1) {\n                uVar4 = fcn.00452e81(*(*(arg_8h + 4) + 8));\n                (*pcVar2)(*0x497508, 0xc, 0, uVar4);\n            }\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 363
    },
    "004597b3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004597b3(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t unaff_EBX;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t arg_8h_00;\n    uchar *puStack60;\n    uint uStack44;\n    uchar auStack16 [12];\n    \n    puStack60 = auStack16;\n    (*_sym.imp.USER32.dll_GetCursorPos)();\n    arg_8h_00 = **(arg_8h + 4);\n    iVar4 = 1;\n    uVar2 = fcn.00452e81(arg_8h_00);\n    iVar3 = fcn.0044b613(uVar2);\n    if (iVar3 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    if (unaff_EBX != 2) {\n        if (1 < unaff_EBX) {\n            cVar1 = fcn.0044aa8e(*(*(arg_8h + 4) + 4));\n            if (cVar1 == '\\0') {\n                fcn.0040c8f0();\n            }\n            cVar1 = fcn.0044aa8e(*(*(arg_8h + 4) + 8));\n            if (cVar1 == '\\0') {\n                fcn.0040c8f0();\n            }\n            cVar1 = fcn.0044aa8e(*(*(arg_8h + 4) + 4));\n            if ((cVar1 == '\\0') || (cVar1 = fcn.0044aa8e(*(*(arg_8h + 4) + 8)),  cVar1 == '\\0')) {\n                puStack60 = 0x1;\n            }\n        }\n        if ((arg_8h_00 < 4) || (iVar4 = fcn.0040c8f0(),  0 < iVar4)) {\n            if (4 < arg_8h_00) {\n                uStack44 = fcn.0040c8f0();\n            }\n            if (puStack60 != NULL) {\n                fcn.00441ce9(in_ECX, unaff_ESI, unaff_EDI, uStack44, 1);\n            }\n            if (0 < iVar4) {\n                do {\n                    uVar2 = fcn.00452e81(**(arg_8h + 4));\n                    fcn.0044b753(uVar2);\n                    fcn.0043374b(*(in_ECX + 0x110));\n                    uVar2 = fcn.00452e81(**(arg_8h + 4));\n                    fcn.0044b6ef(uVar2);\n                    fcn.0043374b(*(in_ECX + 0x10c));\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        }\n        return 0;\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    fcn.00403f40(5, 0);\n    return 0;\n}\n",
        "token_count": 755
    },
    "00459e95": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459e95(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    if (*(in_ECX + 0x460) != 0) {\n        if (arg_8h[2] == 0) {\n            *(**(in_ECX + 0x45c) + 0x11) = 1;\n        }\n        else {\n            iVar3 = fcn.00452e60(*arg_8h[1]);\n            **(iVar3 + 0xc) = **(iVar3 + 0xc) + 1;\n            fcn.00410d60();\n            arg_8h = *(in_ECX + 0x458);\n            while( true ) {\n                piVar1 = arg_8h;\n                cVar2 = fcn.00441fc1(&arg_8h, 0);\n                if (cVar2 == '\\0') break;\n                iVar3 = *piVar1;\n                cVar2 = fcn.0040df20();\n                if (cVar2 != '\\0') {\n                    *(iVar3 + 0x11) = 1;\n                    break;\n                }\n                fcn.00440543(&arg_8h, &var_8h);\n            }\n            fcn.00402260();\n        }\n        arg_8h = *(in_ECX + 0x458);\n        iVar3 = var_4h;\n        while( true ) {\n            cVar2 = fcn.00441fc1(&arg_8h, 0);\n            if (cVar2 == '\\0') break;\n            if (*(*arg_8h + 0x11) == '\\0') {\n                iVar3 = iVar3 + 1;\n            }\n            fcn.00440543(&arg_8h, &var_8h);\n        }\n    }\n    piVar1 = arg_ch;\n    fcn.004091e0();\n    *piVar1 = iVar3;\n    piVar1[2] = 1;\n    return 0;\n}\n",
        "token_count": 538
    },
    "0045aeeb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045aeeb(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = **(arg_8h + 4);\n    cVar1 = fcn.0044aa8e(uVar3);\n    if (cVar1 == '\\0') {\n        iVar2 = fcn.00452e60(uVar3);\n        if (*(iVar2 + 4) != 0) {\n            uVar3 = fcn.00452e60(**(arg_8h + 4));\n            fcn.0040e410(uVar3);\n            return 0;\n        }\n    }\n    fcn.00402170();\n    return 0;\n}\n",
        "token_count": 170
    },
    "0045b7aa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b7aa(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0;\n    if (*(arg_8h + 8) != 0) {\n        arg_ch_00 = fcn.0044b01e(**(arg_8h + 4));\n    }\n    if (*0x4a8650 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    fcn.00440bd8(0x4a8630, arg_ch_00);\n    return 0;\n}\n",
        "token_count": 160
    },
    "0045bd64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bd64(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    \n    uVar1 = 0;\n    arg_8h_00 = 5;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044b01e(*(*(arg_8h + 4) + 4));\n    }\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.0040c8f0();\n    }\n    uVar1 = fcn.00440e61(arg_8h_00, uVar1);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 197
    },
    "0045be08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045be08(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.0040c8f0();\n    iVar3 = iVar3 + -1;\n    *arg_ch = iVar3;\n    if (-1 < iVar3) {\n        cVar2 = fcn.00453140(arg_10h);\n        if ((((cVar2 != '\\0') && (iVar3 < *(arg_8h + 0x180))) &&\n            (ppiVar1 = *(*(arg_8h + 0x17c) + iVar3 * 4),  *ppiVar1 != NULL)) &&\n           ((arg_14h == -1 || (**ppiVar1 == arg_14h)))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 219
    },
    "0045be67": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045be67(int32_t arg_8h, uint *arg_ch)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint uVar9;\n    uint var_220h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    bVar1 = false;\n    if (3 < *(arg_8h + 8)) {\n        iVar3 = fcn.0040c8f0();\n        bVar1 = 0 < iVar3;\n    }\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.004102f0();\n    fcn.00411777(0xfffe);\n    fcn.0040f670();\n    uVar6 = *(*(arg_8h + 4) + 4);\n    puVar7 = &var_220h;\n    uVar9 = 0x7fff;\n    uVar5 = var_ch;\n    uVar4 = fcn.00452e81(uVar6);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(uVar4, uVar6, uVar5, uVar9, puVar7);\n    if (iVar3 != 0) {\n        uVar6 = *(*(arg_8h + 4) + 8);\n        puVar8 = &var_220h;\n        uVar4 = 3;\n        puVar7 = &var_14h;\n        uVar5 = fcn.00452e81(uVar6);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(uVar5, uVar6, puVar7, uVar4, puVar8);\n        if ((iVar3 != 0) && (!bVar1)) {\n            fcn.00403f40(1, 0);\n            fcn.0040f690();\n            return 0;\n        }\n        uVar6 = *(*(arg_8h + 4) + 8);\n        puVar7 = &var_220h;\n        uVar5 = fcn.00452e81(uVar6);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionW)(uVar5, uVar6, var_ch, puVar7);\n        uVar6 = *(*(arg_8h + 4) + 4);\n        puVar7 = &var_220h;\n        uVar9 = 0;\n        uVar4 = 0;\n        uVar5 = fcn.00452e81(uVar6);\n        pcVar2 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(uVar5, uVar6, uVar4, uVar9, puVar7);\n        (*pcVar2)(0, 0, 0, &var_220h);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 751
    },
    "0045c066": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c066(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t arg_14h;\n    uint uVar8;\n    uint uVar9;\n    uint uStack36;\n    uint32_t uStack32;\n    int32_t iStack24;\n    \n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.0040c8f0();\n        uStack32 = (uVar2 & 1) != 0;\n        uVar2 = fcn.0040c8f0();\n        if ((uVar2 & 8) != 0) {\n            fcn.0040bf10();\n            uVar3 = fcn.00411777(8);\n            uVar2 = fcn.00411777(0x202);\n            uVar9 = 0;\n            uVar7 = *(*(arg_8h + 4) + 4);\n            uVar8 = 0;\n            uVar6 = uVar3;\n            arg_14h = uVar2;\n            uVar4 = fcn.00452e81(uVar7);\n            fcn.00413bbe(uVar4, uVar7, uVar6, arg_14h, uVar8);\n            fcn.0040d510(uVar9);\n            fcn.0040d510();\n            if (((iStack24 != 0) && (cVar1 = fcn.00433fa3(uVar2),  cVar1 == '\\0')) &&\n               (cVar1 = fcn.00433b76(uVar2),  cVar1 == '\\0')) {\n                fcn.004091e0();\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n                uVar2 = uStack32;\n            }\n            fcn.0041137c(uVar3);\n            fcn.0041137c(uVar2);\n            iVar5 = fcn.0040c8f0();\n            if (iVar5 == 0) {\n                fcn.00402260();\n                return 0;\n            }\n            fcn.00402260();\n        }\n    }\n    uVar7 = (*(arg_8h + 4))[1];\n    uVar6 = **(arg_8h + 4);\n    uVar8 = 1;\n    uVar3 = fcn.00452e81(uVar7);\n    uVar4 = fcn.00452e81(uVar6);\n    cVar1 = fcn.0044b9ae(uVar4, uVar6, uVar3, uVar7);\n    if (cVar1 == '\\0') {\n        fcn.004091e0(uStack36, uVar8);\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 677
    },
    "0045c1d6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045c1d6(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    uint uVar6;\n    uchar *arg_10h;\n    uchar *arg_14h;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uStack556;\n    int32_t iStack552;\n    uchar auStack536 [8];\n    uchar auStack528 [524];\n    \n    uVar3 = uStack556;\n    uStack556 = uStack556 & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.0040c8f0();\n        if ((uVar2 & 1) != 0) {\n            uStack556 = CONCAT31(SUB43(uVar3, 1), 1);\n        }\n        uVar3 = fcn.0040c8f0();\n        if ((uVar3 & 8) != 0) {\n            uVar6 = *(*(arg_8h + 4) + 4);\n            uVar9 = 0;\n            uVar7 = 0;\n            arg_14h = auStack528;\n            arg_10h = auStack536;\n            uVar4 = fcn.00452e81(uVar6);\n            fcn.00413bbe(uVar4, uVar6, arg_10h, arg_14h, uVar7);\n            fcn.00401c30(uVar9);\n            fcn.0040d510();\n            if (iStack552 != 0) {\n                cVar1 = fcn.00433fa3(uStack556);\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.00433b76(uStack556);\n                    if (cVar1 == '\\0') {\n                        fcn.004091e0();\n                        arg_ch[2] = 1;\n                        *arg_ch = 0;\n                    }\n                }\n            }\n            iVar5 = fcn.0040c8f0();\n            if (iVar5 == 0) {\n                fcn.00402260();\n                return 0;\n            }\n            fcn.00402260();\n        }\n    }\n    uVar6 = (*(arg_8h + 4))[1];\n    uVar4 = **(arg_8h + 4);\n    uVar8 = 0;\n    uVar7 = fcn.00452e81(uVar6);\n    uVar9 = fcn.00452e81(uVar4);\n    cVar1 = fcn.0044b9ae(uVar9, uVar4, uVar7, uVar6);\n    if (cVar1 == '\\0') {\n        fcn.004091e0(unaff_EBX, uVar8);\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 694
    },
    "0045c5b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c5b4(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    int32_t **ppiVar6;\n    uint32_t uVar7;\n    uint unaff_ESI;\n    uchar *puVar8;\n    uchar auStack600 [32];\n    uchar auStack568 [564];\n    \n    uVar5 = **(arg_8h + 4);\n    puVar8 = auStack600;\n    uVar2 = fcn.00452e81(uVar5);\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uVar2, uVar5, puVar8);\n    if (iVar3 == -1) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = -1;\n        return 0;\n    }\n    do {\n        iVar4 = fcn.004132dc(auStack568, 0x489b88);\n        if (iVar4 != 0) {\n            iVar4 = fcn.004132dc(auStack568, 0x486cfc);\n            if (iVar4 != 0) {\n                uVar1 = *(in_ECX + 0x180);\n                uVar7 = 0;\n                if (uVar1 == 0) goto code_r0x0045c697;\n                ppiVar6 = *(in_ECX + 0x17c);\n                break;\n            }\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &stack0xfffffd9c);\n        if (iVar4 == 0) {\n            fcn.00403f40(1, 0);\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = -1;\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            return 0;\n        }\n    } while( true );\n    while( true ) {\n        uVar7 = uVar7 + 1;\n        ppiVar6 = ppiVar6 + 1;\n        if (uVar1 <= uVar7) break;\n        if (**ppiVar6 == 0) break;\n    }\ncode_r0x0045c697:\n    if (uVar7 == uVar1) {\n        fcn.00411777(0x14);\n        fcn.00431f64(in_ECX + 0x178, &stack0xfffffd98);\n    }\n    else {\n        uVar5 = fcn.00411777(0x14);\n        **(*(in_ECX + 0x17c) + uVar7 * 4) = uVar5;\n    }\n    ***(*(in_ECX + 0x17c) + uVar7 * 4) = 1;\n    *(**(*(in_ECX + 0x17c) + uVar7 * 4) + 8) = iVar3;\n    uVar5 = fcn.00410330();\n    *(**(*(in_ECX + 0x17c) + uVar7 * 4) + 0xc) = uVar5;\n    *(**(*(in_ECX + 0x17c) + uVar7 * 4) + 0x10) = unaff_ESI;\n    fcn.004091e0();\n    *arg_ch = uVar7 + 1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 808
    },
    "0045c7d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045c7d8(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint arg_ch_00;\n    uint32_t uVar8;\n    uint arg_8h_00;\n    uint var_c3ch;\n    uint var_a38h;\n    uint var_834h;\n    uint var_628h;\n    uint var_41ch;\n    uint var_214h;\n    uint var_210h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar8 = arg_8h;\n    var_4h = 0;\n    var_8h = 0;\n    piVar5 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n    bVar2 = true;\n    if (*(arg_8h + 8) < 3) {\ncode_r0x0045c81d:\n        arg_8h = arg_8h & 0xffffff00;\n    }\n    else {\n        iVar6 = fcn.0040c8f0();\n        arg_8h = CONCAT31(arg_8h._1_3_, 1);\n        if (iVar6 != 1) goto code_r0x0045c81d;\n    }\n    iVar1 = *piVar5;\n    while (iVar1 != 0) {\n        if (*piVar5 == 0x2b) {\n            piVar5 = piVar5 + 1;\n            bVar2 = true;\n        }\n        else if (*piVar5 == 0x2d) {\n            piVar5 = piVar5 + 1;\n            bVar2 = false;\n        }\n        iVar1 = *piVar5;\n        if ((iVar1 == 0x52) || (iVar1 == 0x72)) {\n            uVar7 = 1;\n        }\n        else if ((iVar1 == 0x41) || (iVar1 == 0x61)) {\n            uVar7 = 0x20;\n        }\n        else if ((iVar1 == 0x53) || (iVar1 == 0x73)) {\n            uVar7 = 4;\n        }\n        else if ((iVar1 == 0x48) || (iVar1 == 0x68)) {\n            uVar7 = 2;\n        }\n        else if ((iVar1 == 0x4e) || (iVar1 == 0x6e)) {\n            uVar7 = 0x80;\n        }\n        else if ((iVar1 == 0x4f) || (iVar1 == 0x6f)) {\n            uVar7 = 0x1000;\n        }\n        else {\n            if ((iVar1 != 0x54) && (iVar1 != 0x74)) goto code_r0x0045c985;\n            uVar7 = 0x100;\n        }\n        if (bVar2) {\n            var_4h = var_4h | uVar7;\n        }\n        else {\n            var_8h = var_8h | uVar7;\n        }\n        piVar5 = piVar5 + 1;\n        iVar1 = *piVar5;\n    }\n    arg_8h_00 = **(uVar8 + 4);\n    arg_ch_00 = fcn.00452e81(arg_8h_00);\n    fcn.0041315a(&var_41ch, arg_ch_00, arg_8h_00);\n    var_214h._0_2_ = 0;\n    fcn.00410460();\n    fcn.004102f0();\n    fcn.00413bbe(&var_41ch, &var_834h, &var_a38h, &var_210h, &var_c3ch);\n    fcn.004116d6(&var_834h, &var_a38h);\n    fcn.004116d6(&var_210h, &var_c3ch);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &var_628h);\n    pcVar3 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n    iVar6 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&var_834h);\n    if (iVar6 != 0) {\n        cVar4 = fcn.00433f41(&var_210h);\n        if (cVar4 != '\\0') {\n            uVar8 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(&var_210h);\n            iVar6 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(&var_210h, (uVar8 | var_4h) & ~var_8h);\n            if (iVar6 == 0) {\n                (*pcVar3)(&var_628h);\n                goto code_r0x0045c985;\n            }\n            if (arg_8h == '\\0') {\n                (*pcVar3)(&var_628h);\n                return 0;\n            }\n            (*pcVar3)(&var_210h);\n            fcn.00411707(&var_210h, 0x489b80);\n        }\n        cVar4 = fcn.0043204d(&var_210h, var_4h, var_8h, arg_8h);\n        if (cVar4 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n        }\n        (*pcVar3)(&var_628h);\n        return 0;\n    }\ncode_r0x0045c985:\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 1341
    },
    "0045cc69": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045cc69(int32_t arg_8h, uint *arg_ch)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint var_4h;\n    \n    bVar1 = false;\n    if (2 < *(arg_8h + 8)) {\n        iVar4 = fcn.0040c8f0();\n        if (iVar4 == 1) {\n            bVar1 = true;\n        }\n    }\n    uVar5 = fcn.00452e81(**(arg_8h + 4));\n    cVar3 = fcn.00433f41(uVar5);\n    if (cVar3 != '\\0') {\n        uVar5 = **(arg_8h + 4);\n        uVar6 = fcn.00452e81((*(arg_8h + 4))[1]);\n        uVar7 = fcn.00452e81(uVar5);\n        uVar5 = fcn.004321af(uVar7, uVar5, uVar6);\n        fcn.004091e0();\n        *arg_ch = uVar5;\n        arg_ch[2] = 1;\n        return 0;\n    }\n    uVar5 = **(arg_8h + 4);\n    uVar6 = (*(arg_8h + 4))[1];\n    uVar9 = 0;\n    uVar7 = fcn.00452e81(uVar5);\n    uVar8 = fcn.00452e81(uVar6);\n    pcVar2 = _sym.imp.KERNEL32.dll_CreateHardLinkW;\n    uVar5 = (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(uVar8, uVar6, uVar7, uVar5, uVar9);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = uVar5;\n    iVar4 = fcn.0040c8f0();\n    if (iVar4 == 0) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar4 == 0xb7) && (bVar1)) {\n            uVar5 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)(uVar5);\n            uVar5 = **(arg_8h + 4);\n            uVar6 = (*(arg_8h + 4))[1];\n            uVar9 = 0;\n            uVar7 = fcn.00452e81(uVar5);\n            uVar8 = fcn.00452e81(uVar6);\n            uVar5 = (*pcVar2)(uVar8, uVar6, uVar7, uVar5, uVar9);\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = uVar5;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 701
    },
    "0045d0d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045d0d3(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    puVar1 = fcn.00452e60(**(arg_8h + 4));\n    uVar4 = *puVar1;\n    iVar3 = puVar1[1];\n    *puVar1[3] = *puVar1[3] + 1;\n    piVar2 = fcn.00402150();\n    if (*piVar2 != 0x5c) {\n        fcn.004032d0(0x5c);\n    }\n    arg_8h = 0;\n    if (iVar3 == 3) {\n        piVar2 = fcn.00402150();\n        if (*piVar2 == 0x3a) {\n            piVar2 = fcn.00402150();\n            if (*piVar2 == 0x5c) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)(uVar4, &var_18h, &var_14h, &var_10h, &var_ch);\n                if (iVar3 == 0) {\n                    arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (0x15 < arg_8h) {\n                        fcn.0040e8e0();\n                        if (arg_8h != 0) {\n                            fcn.00403f40(1, 0);\n                        }\n                        fcn.00402260();\n                        (*_sym.imp.KERNEL32.dll_SetErrorMode)(var_8h);\n                        return 0;\n                    }\n                }\n                goto code_r0x0045d187;\n            }\n        }\n    }\n    arg_8h = 3;\ncode_r0x0045d187:\n    // WARNING: Could not recover jumptable at 0x0045d191. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (**(*(arg_8h + 0x45d233) * 4 + 0x45d21f))();\n    return uVar4;\n}\n",
        "token_count": 585
    },
    "0045d706": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0045d706(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    int32_t *piVar5;\n    uint unaff_EDI;\n    uint32_t uVar6;\n    uint var_1654h;\n    uint var_654h;\n    ushort var_44ch;\n    uint var_44ah;\n    int16_t var_244h;\n    uint var_242h;\n    uint uStackY68;\n    int32_t *piStackY64;\n    int32_t *var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    code *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = 0x45d713;\n    fcn.00422880();\n    iVar4 = arg_8h;\n    piVar5 = *(arg_8h + 8);\n    var_14h = NULL;\n    var_18h = &fcn.0045d706::var_242h;\n    var_244h = 0;\n    var_1ch = 0x45d73d;\n    arg_8h = piVar5;\n    var_ch = unaff_EDI;\n    var_4h = unaff_EBX;\n    fcn.004130e0();\n    var_1ch = 0x206;\n    var_20h = NULL;\n    var_24h = &fcn.0045d706::var_44ah;\n    var_44ch = 0;\n    var_28h = 0x45d758;\n    fcn.004130e0();\n    var_10h = 0;\n    uVar6 = 0x200;\n    var_8h = NULL;\n    var_14h = 0x45d76f;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    var_14h = &fcn.0045d706::var_4h;\n    var_18h = 0x45d779;\n    iVar1 = (*_sym.imp.SHELL32.dll_SHGetMalloc)();\n    if (iVar1 < 0) {\n        var_18h = 0x45d783;\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n        var_18h = 0x45d790;\n        fcn.0040e8e0();\n        piVar5 = arg_8h;\n    }\n    if (0x4 < piVar5) {\n        var_18h = *(*(iVar4 + 4) + 0x10);\n        var_1ch = 0x45d7a4;\n        var_8h = fcn.0044b01e(var_18h);\n    }\n    if (0x3 < piVar5) {\n        var_18h = *(*(iVar4 + 4) + 0xc);\n        var_1ch = 0x45d7b8;\n        var_1ch = fcn.00452e81(var_18h);\n        var_20h = &stack0xfffffbb0;\n        var_24h = 0x45d7c5;\n        fcn.00411707(var_20h, var_1ch);\n    }\n    if (0x2 < piVar5) {\n        var_18h = 0x45d7d8;\n        uVar2 = fcn.0040c8f0();\n        if ((uVar2 & 1) != 0) {\n            uVar6 = 0x40;\n        }\n        var_18h = 0x45d7ec;\n        uVar2 = fcn.0040c8f0();\n        if ((uVar2 & 2) != 0) {\n            uVar6 = uVar6 | 0x40;\n        }\n        var_18h = 0x45d7fe;\n        uVar2 = fcn.0040c8f0();\n        if ((uVar2 & 4) != 0) {\n            uVar6 = uVar6 | 0x10;\n        }\n    }\n    var_18h = *(*(iVar4 + 4) + 4);\n    var_1ch = 0x45d811;\n    piVar3 = fcn.00452e81(var_18h);\n    if (*piVar3 == 0) {\n        var_2ch = NULL;\n    }\n    else {\n        var_1ch = &fcn.0045d706::arg_8h;\n        var_20h = 0x45d822;\n        iVar1 = (*_sym.imp.SHELL32.dll_SHGetDesktopFolder)();\n        if (iVar1 == 0) {\n            var_ch = 0;\n            var_1ch = *(*(iVar4 + 4) + 4);\n            var_20h = 0x45d835;\n            var_20h = fcn.00452e81(var_1ch);\n            var_24h = &fcn.0045d706::var_654h;\n            var_28h = 0x45d842;\n            fcn.00411707(var_24h, var_20h);\n            var_20h = &fcn.0045d706::var_38h;\n            var_24h = &fcn.0045d706::var_ch;\n            var_28h = &fcn.0045d706::var_34h;\n            var_2ch = &fcn.0045d706::var_654h;\n            var_30h = NULL;\n            var_34h = 0;\n            var_38h = arg_8h;\n            piStackY64 = 0x45d865;\n            (**(*arg_8h + 0xc))();\n            piStackY64 = arg_8h;\n            uStackY68 = 0x45d870;\n            (**(*arg_8h + 8))();\n            var_2ch = var_ch;\n        }\n    }\n    var_28h = &stack0xfffffdb8;\n    var_30h = var_8h;\n    var_1ch = **(iVar4 + 4);\n    var_20h = 0x45d895;\n    var_20h = fcn.00452e81(var_1ch);\n    var_24h = &fcn.0045d706::var_1654h;\n    var_28h = 0x45d8a2;\n    fcn.00411707(var_24h, var_20h);\n    var_18h = &stack0xfffffbb0;\n    var_1ch = fcn.0043231e;\n    var_14h = NULL;\n    var_24h = 0x45d8ce;\n    var_20h = uVar6;\n    iVar4 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)();\n    if (iVar4 == 0) {\n        var_24h = NULL;\n        var_28h = 0x1;\n        var_2ch = 0x45d920;\n        fcn.00403f40(1, 0);\n    }\n    else {\n        var_24h = 0x45d8e2;\n        fcn.0040e8e0();\n        var_24h = &stack0xfffffdb8;\n        var_2ch = 0x45d8f0;\n        var_28h = iVar4;\n        (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)();\n        var_30h = var_4h;\n        var_34h = 0x45d8fc;\n        var_2ch = iVar4;\n        (**(*var_4h + 0x14))();\n        if (var_244h == 0) goto code_r0x0045d92d;\n    }\n    var_2ch = 0x45d92d;\n    fcn.0040e8e0();\ncode_r0x0045d92d:\n    var_2ch = var_4h;\n    var_30h = 0x45d938;\n    (**(*var_4h + 8))();\n    var_30h = 0x45d93e;\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return 0;\n}\n",
        "token_count": 2074
    },
    "0045d9dd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045d9dd(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t *arg_8h_00;\n    int32_t iVar4;\n    uint arg_ch_00;\n    uint arg_8h_01;\n    uint uVar5;\n    uint arg_10h;\n    uint uStack3188;\n    uchar auStack3184 [8];\n    uchar auStack3176 [4];\n    uchar auStack3172 [16];\n    uchar auStack3156 [500];\n    uchar auStack2656 [520];\n    ushort uStack2136;\n    uchar auStack2128 [4];\n    uchar auStack2124 [16];\n    uchar auStack2108 [500];\n    uchar auStack1608 [8];\n    uchar auStack1600 [528];\n    uchar auStack1072 [520];\n    uchar auStack552 [548];\n    \n    uVar1 = *(arg_8h + 8);\n    arg_8h_00 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n    arg_10h = 0;\n    if (2 < uVar1) {\n        iVar4 = fcn.0040c8f0();\n        if (-1 < iVar4) {\n            iVar4 = fcn.0040c8f0();\n            if (iVar4 < 3) {\n                arg_10h = fcn.0040c8f0();\n            }\n        }\n    }\n    if (uVar1 < 4) {\ncode_r0x0045da59:\n        uStack3188 = uStack3188 & 0xffffff00;\n    }\n    else {\n        iVar4 = fcn.0040c8f0();\n        uStack3188 = CONCAT31(uStack3188._1_3_, 1);\n        if (iVar4 != 1) goto code_r0x0045da59;\n    }\n    if (*arg_8h_00 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)(auStack3172);\n    }\n    else {\n        cVar3 = fcn.00432fc4(arg_8h_00, auStack3172, 1, 0);\n        if (cVar3 == '\\0') goto code_r0x0045da7a;\n    }\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(auStack3172, auStack3184);\n    (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&stack0xfffff388, &stack0xfffff388);\n    arg_8h_01 = **(arg_8h + 4);\n    uVar5 = 0x104;\n    arg_ch_00 = fcn.00452e81(arg_8h_01);\n    fcn.0041315a(auStack2656, arg_ch_00, arg_8h_01);\n    uStack2136 = 0;\n    fcn.00410460(uVar5);\n    fcn.004102f0();\n    fcn.00413bbe(auStack2656, auStack1600, auStack1072, auStack3176, auStack552);\n    fcn.004116d6(auStack1600, auStack1072);\n    fcn.004116d6(auStack3176, auStack552);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, auStack2128);\n    pcVar2 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n    iVar4 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(auStack1608);\n    if (iVar4 != 0) {\n        cVar3 = fcn.00433f41(auStack3156);\n        if (cVar3 != '\\0') {\n            cVar3 = fcn.004341ad(auStack3156, auStack3184, arg_10h);\n            if (cVar3 == '\\0') {\n                (*pcVar2)(auStack2108);\n                goto code_r0x0045da7a;\n            }\n            if (uStack3188 == '\\0') {\n                (*pcVar2)(auStack2108);\n                return 0;\n            }\n            (*pcVar2)(auStack3156);\n            fcn.00411707(auStack3156, 0x489b80);\n        }\n        cVar3 = fcn.004425ab(auStack3156, auStack3184, arg_10h, uStack3188);\n        if (cVar3 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n        }\n        (*pcVar2)(auStack2124);\n        return 0;\n    }\ncode_r0x0045da7a:\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 1129
    },
    "0045dc37": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045dc37(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char cVar4;\n    int32_t in_ECX;\n    \n    cVar4 = fcn.0045be08(in_ECX, &arg_8h, **(arg_8h + 4), 0xffffffff);\n    puVar3 = arg_ch;\n    iVar2 = arg_8h;\n    if (cVar4 == '\\0') {\n        fcn.004091e0();\n        puVar3[2] = 1;\n        *puVar3 = 0;\n        return 0;\n    }\n    piVar1 = **(*(in_ECX + 0x17c) + arg_8h * 4);\n    if (*piVar1 == 0) {\n        if (piVar1[1] != 0) {\n            fcn.0044aa71(piVar1[1]);\n        }\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(piVar1[2]);\n        fcn.0041137c(*(**(*(in_ECX + 0x17c) + iVar2 * 4) + 0xc));\n    }\n    fcn.0041137c(**(*(in_ECX + 0x17c) + iVar2 * 4));\n    **(*(in_ECX + 0x17c) + iVar2 * 4) = 0;\n    return 0;\n}\n",
        "token_count": 345
    },
    "0045dfef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: lpCaption\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045dfef(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t arg_ch_00;\n    uchar auStackY8276 [8176];\n    uint uStackY100;\n    uint lpCaption;\n    uint arg_8h_00;\n    uint var_3ch;\n    uint var_2ch;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    int32_t var_1ch;\n    uint var_18h;\n    uchar *lpText;\n    uint uStack20;\n    uint var_4h;\n    \n    fcn.00422880();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if ((*0x4974e2 == '\\0') && (*(arg_8h + 0xf8) != 1)) {\n        uStack20 = 0xfff;\n        lpText = &stack0xffffdfac;\n        var_18h = 0x66;\n        var_1ch = *0x497520;\n        uStack36 = 0x45e039;\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        puStack40 = &stack0xffffdfac;\n        uStack36 = 0x45e047;\n        fcn.00401c30();\n        uStack36 = 0xfff;\n        uStack44 = 0x72;\n        var_2ch = *0x497520;\n        (*pcVar1)();\n        fcn.00401c30();\n        arg_8h_00 = *(arg_8h + 0xf4);\n        iVar2 = fcn.00434ec1(arg_8h_00);\n        uVar3 = fcn.00434e8d(arg_8h_00);\n        var_3ch = 0x45e083;\n        var_18h = uVar3;\n        var_3ch = fcn.00434f12(arg_8h_00);\n        arg_ch_00 = fcn.00434eeb(var_3ch);\n        if (arg_ch_00 != 0) {\n            arg_8h_00 = uVar3;\n        }\n        var_1ch = arg_ch_00;\n        fcn.0041343b(&stack0xffffdfac, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_8h_00);\n        fcn.00401c30();\n        if (iVar2 != 0) {\n            fcn.0040d510();\n            fcn.0040d510();\n        }\n        fcn.0040bf10();\n        if (arg_ch != 0) {\n            fcn.00402170();\n            fcn.0040d510();\n            fcn.0040bff0(&fcn.0045dfef::var_2ch);\n            fcn.0040d510();\n            arg_ch_00 = var_1ch;\n        }\n        fcn.0040d510();\n        fcn.0040bff0(&fcn.0045dfef::var_3ch);\n        if (*0x4974e8 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else if (arg_ch_00 == 0) {\n            fcn.00413c6e(L\"%s (%d) : ==> %s:\\n\", *(arg_8h + 200));\n        }\n        else {\n            uStackY100 = 0x45e15f;\n            fcn.00413c6e(L\"%s (%d) : ==> %s:\\n%s\\n%s\\n\", arg_ch_00);\n        }\n        *0x4974f4 = (-(*(arg_8h + 0x118) != '\\0') & 0x7ffff071) + 1;\n        *(arg_8h + 0xf8) = 1;\n        fcn.00402260();\n        fcn.00402260();\n        fcn.00402260();\n        fcn.00402260();\n    }\n    return;\n}\n",
        "token_count": 956
    },
    "0045e1ee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.0045e1ee(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    uint arg_10h_00;\n    uint arg_8h_01;\n    int32_t arg_ch_00;\n    uchar auStackY8280 [8172];\n    uint uStackY108;\n    uint lpCaption;\n    int32_t var_40h;\n    uint var_30h;\n    uint uStack48;\n    int32_t iStack44;\n    uchar *puStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uchar *lpText;\n    uint uStack20;\n    \n    fcn.00422880();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if ((*0x4974e2 == '\\0') && (*(arg_8h + 0xf8) != 1)) {\n        uStack20 = 0xfff;\n        lpText = &stack0xffffdfa8;\n        var_18h = 0x66;\n        var_1ch = *0x497520;\n        var_20h = 0x45e238;\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        puStack40 = &stack0xffffdfa8;\n        var_20h = 0x45e246;\n        fcn.00401c30();\n        var_20h = 0xfff;\n        iStack44 = arg_ch;\n        uStack48 = *0x497520;\n        var_30h = 0x45e259;\n        (*pcVar1)();\n        var_30h = 0x45e261;\n        fcn.00401c30();\n        arg_8h_00 = *(arg_8h + 0xf4);\n        var_30h = arg_8h_00;\n        var_20h = fcn.00434ec1(arg_8h_00);\n        arg_10h_00 = fcn.00434e8d(arg_8h_00);\n        var_18h = arg_10h_00;\n        arg_8h_01 = fcn.00434f12(arg_8h_00);\n        var_40h = 0x45e28a;\n        arg_ch_00 = fcn.00434eeb(arg_8h_01);\n        var_40h = arg_ch_00;\n        if (arg_ch_00 == 0) {\n            arg_10h_00 = arg_8h_00;\n            var_40h = *(arg_8h + 200);\n        }\n        var_1ch = arg_ch_00;\n        fcn.0041343b(&stack0xffffdfa8, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_10h_00);\n        var_40h = 0x45e2c4;\n        fcn.00401c30();\n        if (var_20h != 0) {\n            var_40h = 0x45e2d5;\n            fcn.0040d510();\n            var_40h = 0x45e2e2;\n            fcn.0040d510();\n        }\n        var_40h = 0x45e2ea;\n        fcn.0040bf10();\n        if (-1 < arg_10h) {\n            var_40h = 0x45e2fb;\n            fcn.00402170();\n            var_40h = arg_10h;\n            fcn.0040c8a0(&fcn.0045e1ee::var_30h, arg_10h);\n            fcn.0040d510();\n            fcn.0040bff0(&fcn.0045e1ee::var_30h);\n            fcn.0040d510();\n            arg_ch_00 = var_1ch;\n        }\n        fcn.0040d510();\n        fcn.0040bff0(&fcn.0045e1ee::var_40h);\n        if (*0x4974e8 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else if (arg_ch_00 == 0) {\n            fcn.00413c6e(L\"%s (%d) : ==> %s:\\n\", *(arg_8h + 200));\n        }\n        else {\n            uStackY108 = 0x45e36f;\n            fcn.00413c6e(L\"%s (%d) : ==> %s:\\n%s\\n%s\\n\", arg_ch_00);\n        }\n        *(arg_8h + 0xf8) = 1;\n        if (*(arg_8h + 0x118) == '\\0') {\n            *0x4974f4 = 1;\n        }\n        else {\n            *0x4974f4 = arg_ch + 0x7ffff000;\n        }\n        fcn.00402260();\n        fcn.00402260();\n        fcn.00402260();\n        fcn.00402260();\n    }\n    return;\n}\n",
        "token_count": 1180
    },
    "0045e4c6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045e4c6(double *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_50h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    double dStack12;\n    \n    uVar2 = *arg_ch;\n    if (uVar2 < 0x4003) {\n        if (uVar2 == 0x4002) {\n            if (arg_ch[2] == NULL) {\n                return 1;\n            }\n            uVar2 = *arg_ch[2];\n        }\n        else {\n            if (0x15 < uVar2) {\n                return 0;\n            }\n    // switch table (22 cases) at 0x45e91a\n            switch(*(uVar2 * 4 + 0x45e91a)) {\n            case 0x45e4f9:\n                *(arg_8h + 1) = 8;\n                uVar4 = fcn.00411777(0x10);\n                *arg_8h = uVar4;\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar4);\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*arg_8h, arg_ch);\n                if (iVar3 < 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_8h);\n                    fcn.0041137c(*arg_8h);\n                    *arg_8h = 0;\n                }\n                return 1;\n            case 0x45e546:\n                uVar2 = *(arg_ch + 2);\n                break;\n            case 0x45e565:\n                uVar2 = *(arg_ch + 2);\n                break;\n            case 0x45e56b:\n                uVar2 = *(arg_ch + 2);\n                break;\n            case 0x45e571:\n                uVar2 = *(arg_ch + 2);\n                break;\n            case 0x45e577:\n                uVar2 = arg_ch[2];\n                break;\n            case 0x45e57c:\n                uVar4 = arg_ch[2];\n                var_4h = arg_ch[3];\ncode_r0x0045e582:\n                fcn.004091e0();\n                *(arg_8h + 1) = 2;\n                *(arg_8h + 4) = var_4h;\n                *arg_8h = uVar4;\n                return 1;\n            case 0x45e5a6:\n                var_4h = arg_ch[3];\n                uVar4 = arg_ch[2];\n                fcn.004091e0();\n                *(arg_8h + 4) = var_4h;\n                *(arg_8h + 1) = 2;\n                *arg_8h = uVar4;\n                return 1;\n            case 0x45e5d0:\n                dStack12 = arg_ch[2];\n                fcn.004091e0();\n                *(arg_8h + 1) = 3;\n                *arg_8h = dStack12;\n                return 1;\n            case 0x45e5f4:\n                dStack12 = *(arg_ch + 2);\n                fcn.004091e0();\n                *(arg_8h + 1) = 3;\n                *arg_8h = dStack12;\n                return 1;\n            case 0x45e618:\n                dStack12 = *(arg_ch + 2) / *0x48bde8;\n                fcn.004091e0();\n                *arg_8h = dStack12;\n                *(arg_8h + 1) = 3;\n                return 1;\n            case 0x45e642:\n                goto code_r0x0045e642;\n            case 0x45e690:\n                arg_ch = arg_ch & 0xffffff00 | *(arg_ch + 2) != 0;\n                fcn.00452b3e(arg_8h, arg_ch);\n                return 1;\n            case 0x45e6b0:\n                (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*(arg_ch + 2), &var_20h);\n                fcn.0041343b(&var_50h, L\"%4d%02d%02d%02d%02d%02d\", var_20h);\n                fcn.0040e8e0();\n                return 1;\n            case 0x45e705:\n                var_2ch = arg_ch[1];\n                var_28h = arg_ch[2];\n                var_30h = *arg_ch;\n                var_24h = arg_ch[3];\n                (*_sym.imp.OLEAUT32.dll_VarDateFromI1)();\n                dStack12 = _var_10h;\n                fcn.004091e0();\n                *arg_8h = dStack12;\n                *(arg_8h + 1) = 3;\n                return 1;\n            case 0x45e74e:\n                fcn.0040e8e0();\n                return 1;\n            case 0x45e90f:\n                goto code_r0x0045e90f;\n            }\n        }\n        goto code_r0x0045e54a;\n    }\n    if (0x12 < uVar2 - 0x4003) {\ncode_r0x0045e90f:\n        return 0;\n    }\n    // switch table (19 cases) at 0x45e972\n    switch(*((uVar2 - 0x4003) * 4 + 0x45e972)) {\n    case 0x45e642:\ncode_r0x0045e642:\n        if (arg_ch[2] != 0) {\n            iVar3 = fcn.00411777(0x10);\n            if (iVar3 == 0) {\n                *(arg_8h + 0xc) = 0;\n                *(arg_8h + 1) = 4;\n                return 1;\n            }\n            uVar4 = fcn.00401c30();\n            *(arg_8h + 0xc) = uVar4;\n            *(arg_8h + 1) = 4;\n            return 1;\n        }\n        break;\n    case 0x45e78b:\n        if (arg_ch[2] != 0) {\n            *(arg_8h + 1) = 8;\n            uVar4 = fcn.00411777(0x10);\n            *arg_8h = uVar4;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar4);\n            **arg_8h = 9;\n            *(*arg_8h + 8) = *arg_ch[2];\n            (**(**(*arg_8h + 8) + 4))();\n        }\n        return 1;\n    case 0x45e7d7:\n        if (arg_ch[2] == NULL) {\n            return 1;\n        }\n        uVar2 = *arg_ch[2];\n        goto code_r0x0045e54a;\n    case 0x45e7ea:\n        if (arg_ch[2] == NULL) {\n            return 1;\n        }\n        uVar2 = *arg_ch[2];\n        goto code_r0x0045e54a;\n    case 0x45e7fd:\n        if (arg_ch[2] == NULL) {\n            return 1;\n        }\n        uVar2 = *arg_ch[2];\ncode_r0x0045e54a:\n        fcn.004091e0();\n        *(arg_8h + 1) = 1;\n        *arg_8h = uVar2;\n        break;\n    case 0x45e810:\n        if (arg_ch[2] == NULL) {\n            return 1;\n        }\n        uVar2 = *arg_ch[2];\n        goto code_r0x0045e54a;\n    case 0x45e822:\n        puVar1 = arg_ch[2];\n        if (puVar1 != NULL) {\n            var_4h = puVar1[1];\n            uVar4 = *puVar1;\n            fcn.004091e0();\n            *(arg_8h + 1) = 2;\n            *(arg_8h + 4) = var_4h;\n            *arg_8h = uVar4;\n            return 1;\n        }\n        break;\n    case 0x45e856:\n        puVar1 = arg_ch[2];\n        if (puVar1 != NULL) {\n            uVar4 = *puVar1;\n            var_4h = puVar1[1];\n            goto code_r0x0045e582;\n        }\n        break;\n    case 0x45e86b:\n        if (arg_ch[2] != NULL) {\n            dStack12 = *arg_ch[2];\n            fcn.004091e0();\n            *(arg_8h + 1) = 3;\n            *arg_8h = dStack12;\n            return 1;\n        }\n        break;\n    case 0x45e899:\n        if (arg_ch[2] != NULL) {\n            dStack12 = *arg_ch[2];\n            fcn.004091e0();\n            *(arg_8h + 1) = 3;\n            *arg_8h = dStack12;\n            return 1;\n        }\n        break;\n    case 0x45e8c7:\n        if (arg_ch[2] != NULL) {\n            arg_ch = arg_ch & 0xffffff00 | *arg_ch[2] != 0;\n            fcn.00452b3e(arg_8h, arg_ch);\n            return 1;\n        }\n        break;\n    case 0x45e8f1:\n        if (arg_ch[2] != 0) {\n            fcn.0046795f(arg_ch[2]);\n            return 1;\n        }\n        break;\n    case 0x45e90f:\n        goto code_r0x0045e90f;\n    }\n    return 1;\n}\n",
        "token_count": 2339
    },
    "0045ea70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ea70(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 8) == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(arg_8h + 4);\n        if (*(arg_8h + 4) != 0) {\n            return uVar1;\n        }\n        fcn.0045ea53(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 114
    },
    "0045ea9b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0045ea9b(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint32_t *arg_14h, int32_t **arg_18h, int32_t *arg_1ch, \n            int32_t **arg_20h)\n\n{\n    uchar *arg_ch_00;\n    uint32_t arg_ch_01;\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    uchar *unaff_ESI;\n    uchar *puVar8;\n    int32_t *unaff_EDI;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t *in_stack_ffffffd0;\n    int32_t *piVar13;\n    int32_t *arg_8h_00;\n    uint uStack24;\n    uint uStack8;\n    \n    uVar10 = 0;\n    piVar12 = NULL;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    if (*arg_14h < arg_ch[1]) {\n        do {\n            while( true ) {\n                uVar6 = *arg_14h;\n                unaff_EDI = arg_ch;\n                piVar1 = fcn.004362b4(arg_ch, uVar6);\n                if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n                *arg_14h = uVar6 + 1;\n            }\n            if (arg_ch[1] <= uVar6) break;\n            fcn.00402170();\n            piVar13 = in_stack_ffffffd0;\n            while( true ) {\n                puVar2 = fcn.004362b4(arg_ch, *arg_14h);\n                iVar3 = fcn.004133d8(*puVar2);\n                if ((iVar3 == 0) && (piVar1 = fcn.004362b4(arg_ch, *arg_14h),  *piVar1 != 0x5f)) break;\n                uVar10 = *arg_14h;\n                *arg_14h = uVar10 + 1;\n                piVar13 = arg_ch;\n                puVar2 = fcn.004362b4(arg_ch, uVar10);\n                fcn.004032d0(*puVar2);\n            }\n            fcn.00402170();\n            while( true ) {\n                uVar6 = *arg_14h;\n                arg_8h_00 = arg_ch;\n                piVar1 = fcn.004362b4(arg_ch, uVar6);\n                if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n                *arg_14h = uVar6 + 1;\n            }\n            piVar1 = fcn.004362b4(arg_ch, uVar6);\n            if (*piVar1 != 0x5b) {\n                do {\n                    puVar2 = fcn.004362b4(arg_ch, *arg_14h);\n                    iVar3 = fcn.004133d8(*puVar2);\n                    if (iVar3 == 0) {\n                        uVar6 = *arg_14h;\n                        piVar1 = fcn.004362b4(arg_ch, uVar6);\n                        if (*piVar1 != 0x5f) break;\n                    }\n                    uVar10 = *arg_14h;\n                    *arg_14h = uVar10 + 1;\n                    piVar12 = arg_ch;\n                    puVar2 = fcn.004362b4(arg_ch, uVar10);\n                    fcn.004032d0(*puVar2);\n                } while( true );\n            }\n            while( true ) {\n                arg_ch_00 = *arg_14h;\n                puVar8 = arg_ch_00;\n                piVar4 = arg_ch;\n                piVar1 = fcn.004362b4(arg_ch, arg_ch_00);\n                if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n                *arg_14h = arg_ch_00 + 1;\n            }\n            piVar11 = arg_ch;\n            piVar1 = fcn.004362b4(arg_ch, arg_ch_00);\n            if (*piVar1 == 0x5b) {\n                *arg_14h = arg_ch_00 + 1;\n                fcn.00402170();\n                while( true ) {\n                    puVar2 = fcn.004362b4(arg_ch, *arg_14h);\n                    iVar3 = fcn.0041339c(*puVar2);\n                    if (iVar3 == 0) break;\n                    uVar10 = *arg_14h;\n                    *arg_14h = uVar10 + 1;\n                    puVar2 = fcn.004362b4(arg_ch, uVar10);\n                    fcn.004032d0(*puVar2);\n                }\n                piVar4 = fcn.00413330(uStack24);\n                if (0 < piVar4) {\n                    uVar10 = *arg_14h;\n                    unaff_ESI = 0x45ec83;\n                    piVar11 = arg_ch;\n                    piVar1 = fcn.004362b4(arg_ch, uVar10);\n                    if (*piVar1 == 0x5d) {\n                        *arg_14h = uVar10 + 1;\n                        goto code_r0x0045ec90;\n                    }\n                }\ncode_r0x0045eef2:\n                fcn.00443532(piVar12);\ncode_r0x0045eef7:\n                fcn.00402260();\n                fcn.00402260();\n                fcn.00402260();\n                return 2;\n            }\ncode_r0x0045ec90:\n            arg_ch_01 = *arg_14h;\n            unaff_EDI = arg_ch;\n            uVar10 = arg_ch_01;\n            piVar1 = fcn.004362b4(arg_ch, arg_ch_01);\n            if (*piVar1 == 0x3b) {\n                *arg_14h = arg_ch_01 + 1;\n            }\n            else if (arg_ch_01 < arg_ch[1]) {\n                fcn.00402260();\n                fcn.00402260();\n                fcn.00402260();\n                return 1;\n            }\n            iVar3 = 0;\n            puVar7 = 0x492558;\n            do {\n                if (iVar3 != 0) goto code_r0x0045ed13;\n                unaff_ESI = 0x45eccf;\n                iVar5 = fcn.004132dc(puVar7 + -6, uStack8);\n                if (iVar5 == 0) {\n                    uVar6 = *puVar7;\n                    if (((uVar6 & 0x31) != 0) && (0 < piVar4)) {\n                        uVar6 = uVar6 | 4;\n                    }\n                    piVar13 = puVar7[-1];\n                    iVar3 = 1;\n                }\n                puVar7 = puVar7 + 7;\n            } while (puVar7 < 0x4928d8);\n            if (iVar3 == 0) goto code_r0x0045eef2;\ncode_r0x0045ed13:\n            if (uVar6 == 0x100) {\n                *piVar12 = *piVar12 + -1;\n                if (piVar13 == NULL) break;\n                unaff_ESI = &stack0xffffffbc;\n                unaff_EDI = 0x1;\n                iVar3 = fcn.0045ea9b(1, arg_ch, arg_10h, 0x1, unaff_ESI, &stack0xffffffc4, &stack0xffffffd4);\n                if (iVar3 != 0) {\n                    fcn.00402260();\n                    fcn.00402260();\n                    fcn.00402260();\n                    return iVar3;\n                }\n                in_stack_ffffffd0 = piVar13;\n                if (*arg_20h < piVar11) {\n                    *arg_20h = piVar11;\n                }\n            }\n            else if (uVar6 == 0x80) {\n                iVar3 = fcn.00413330(arg_8h_00);\n                *arg_10h = iVar3;\n                in_stack_ffffffd0 = piVar13;\n                if (iVar3 == 0) {\n                    *arg_10h = 8;\n                }\n                else if ((((iVar3 != 1) && (iVar3 != 2)) && (iVar3 != 4)) && (iVar3 != 8)) {\n                    if (iVar3 != 0x10) goto code_r0x0045eef7;\n                    *piVar12 = *piVar12 + -1;\n                    goto code_r0x0045ee71;\n                }\n                *piVar12 = *piVar12 + -1;\n            }\n            else {\n                iVar3 = *arg_10h;\n                iVar9 = 0x45eded;\n                unaff_ESI = puVar8;\n                in_stack_ffffffd0 = piVar13;\n                iVar5 = fcn.00432e8f(puVar8, piVar13, iVar3);\n                puVar8 = puVar8 + iVar5;\n                *(iVar9 * 0x20 + *(uVar10 + 4)) = puVar8;\n                *(iVar9 * 0x20 + 4 + *(uVar10 + 4)) = piVar13;\n                *(iVar9 * 0x20 + 8 + *(uVar10 + 4)) = piVar12;\n                unaff_EDI = &stack0xffffffcc;\n                fcn.0040e410(unaff_EDI);\n                uVar10 = uVar10 + puVar8 * piVar13;\n                *(iVar3 * 0x20 + 0x1c + unaff_EDI[1]) = uVar10;\n                if (*arg_20h < piVar13) {\n                    *arg_20h = piVar13;\n                }\n            }\ncode_r0x0045ee71:\n        } while (*arg_14h < arg_ch[1]);\n    }\n    if (arg_8h != '\\0') {\n        iVar3 = *arg_1ch;\n        iVar5 = fcn.00432e8f(iVar3, *arg_20h, *arg_10h);\n        piVar12 = *arg_18h;\n        iVar5 = iVar5 + iVar3;\n        if (piVar12 < unaff_EDI) {\n            iVar3 = piVar12 << 5;\n            do {\n                *(*(unaff_ESI + 4) + iVar3) = *(*(unaff_ESI + 4) + iVar3) + iVar5;\n                piVar13 = iVar3 + 0x1c + *(unaff_ESI + 4);\n                *piVar13 = *piVar13 + iVar5;\n                piVar12 = piVar12 + 1;\n                iVar3 = iVar3 + 0x20;\n            } while (piVar12 < unaff_EDI);\n        }\n        uVar10 = *(unaff_EDI * 0x20 + -4 + *(unaff_ESI + 4));\n    }\n    iVar3 = fcn.00432e8f(uVar10, *arg_20h, *arg_10h);\n    *arg_1ch = iVar3 + uVar10;\n    *arg_18h = unaff_EDI;\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 2652
    },
    "0045f024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045f024(int16_t *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_218h;\n    uint var_10h;\n    \n    fcn.0040bf10();\n    fcn.00402170();\n    fcn.004032d0(0x22);\n    fcn.0040d510();\n    fcn.004032d0(0x22);\n    fcn.0040d510();\n    pcVar1 = _sym.imp.WINMM.dll_mciSendStringW;\n    (*_sym.imp.WINMM.dll_mciSendStringW)(L\"status PlayMe mode\", &var_218h, 0x100, 0);\n    if (var_218h != 0) {\n        (*pcVar1)(L\"close PlayMe\", 0, 0, 0);\n    }\n    if (*arg_8h != 0) {\n        iVar2 = (*pcVar1)(var_10h, 0, 0, 0);\n        if (iVar2 == 0) {\n            if (arg_ch != '\\0') {\n                (*pcVar1)(L\"play PlayMe wait\", 0, 0, 0);\n                (*pcVar1)(L\"close PlayMe\", 0, 0, 0);\n                fcn.00402260();\n                return;\n            }\n            (*pcVar1)(L\"play PlayMe\", 0, 0, 0);\n        }\n    }\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 362
    },
    "0045f5bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0045f5bd(int32_t *arg_8h, uint arg_ch, int16_t *arg_10h, int32_t arg_14h, int32_t item, int32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t arg_ch_00;\n    int32_t iVar3;\n    uint lpmi;\n    uint32_t var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t hMenu;\n    int32_t var_10h;\n    int16_t *var_ch;\n    \n    if (arg_14h != -1) {\n        if (arg_14h < 7) {\n            return 0;\n        }\n        if (0x206 < arg_14h) {\n            return 0;\n        }\n    }\n    arg_ch_00 = fcn.0044bf3a(arg_8h);\n    if (arg_ch_00 == -1) {\n        return 0;\n    }\n    piVar1 = arg_8h[arg_ch_00 + 0x6d];\n    lpmi = 0x30;\n    fcn.004130e0(&var_2ch, 0, 0x2c);\n    iVar3 = arg_14h;\n    if (arg_14h == -1) {\n        *piVar1 = *arg_8h;\n    }\n    else {\n        arg_14h = -1;\n        cVar2 = fcn.0043475c(arg_8h, iVar3, &arg_14h);\n        if (cVar2 == '\\0') {\ncode_r0x0045f756:\n            fcn.00443f73(arg_8h, arg_ch_00);\n            return 0;\n        }\n        var_2ch = 4;\n        iVar3 = *arg_8h[arg_14h + 0x6d];\n        *piVar1 = iVar3;\n        iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, arg_14h, 0, &lpmi);\n        if (iVar3 == 0) goto code_r0x0045f756;\n        *piVar1 = hMenu;\n        iVar3 = (*_sym.imp.USER32.dll_IsMenu)(hMenu);\n        if (iVar3 == 0) goto code_r0x0045f756;\n    }\n    *(piVar1 + 5) = 0;\n    var_2ch = 0x32;\n    var_28h = 0;\n    var_ch = arg_10h;\n    var_20h = arg_ch_00;\n    var_10h = arg_ch_00;\n    if (arg_ch == 0) {\n        if (*arg_10h == 0) {\n            var_28h = 0x800;\n        }\n        else if (arg_1ch == 1) {\n            var_28h = 0x200;\n            *(piVar1 + 5) = 1;\n        }\n        *(piVar1 + 1) = 0;\n    }\n    else if (arg_ch == 1) {\n        iVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n        if (iVar3 == 0) goto code_r0x0045f6b2;\n        var_2ch = var_2ch | 4;\n        *(piVar1 + 1) = 1;\n        hMenu = iVar3;\n    }\n    if ((((*(arg_8h + 1) != '\\0') && (*(arg_8h + 2) != '\\0')) && (6 < arg_ch_00)) &&\n       ((*piVar1 == *arg_8h &&\n        ((iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*arg_8h),  item == -1 || (iVar3 + -4 < item + 1)))))) {\n        item = iVar3 + -4;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*piVar1, item, 1, &lpmi);\n    if (iVar3 != 0) {\n        arg_8h[0x275] = arg_ch_00;\n        return arg_ch_00;\n    }\ncode_r0x0045f6b2:\n    fcn.0045f452(arg_ch_00);\n    return 0;\n}\n",
        "token_count": 976
    },
    "0045f768": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f768(uint *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_34h;\n    int32_t first;\n    uint var_ch;\n    int32_t check;\n    \n    uVar3 = arg_ch;\n    var_40h = 0x30;\n    fcn.004130e0(&var_3ch, 0, 0x2c);\n    var_3ch = 1;\n    arg_ch = -1;\n    cVar4 = fcn.0043475c(arg_8h, uVar3 & 0xffff, &arg_ch);\n    iVar5 = arg_ch;\n    if (cVar4 != '\\0') {\n        if (arg_ch == 3) {\n            *0x4974e6 = 1;\n            *0x4974f0 = 2;\n            return 1;\n        }\n        if (arg_ch == 4) {\n            iVar5 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*arg_8h, 4, 0, &var_40h);\n            if (iVar5 != 0) {\n                *0x4974ec = (var_34h & 8) == 0;\n                if (*0x4974ec) {\n                    var_34h = var_34h | 8;\n                }\n                else {\n                    var_34h = var_34h ^ 8;\n                }\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*arg_8h, 4, 0, &var_40h);\n                fcn.00401a60();\n                (*_sym.imp.KERNEL32.dll_Sleep)(500);\n                return 1;\n            }\n        }\n        else if (((uVar3 >> 0x10 == 0) && (arg_10h == 0)) && (*0x4974ec == uVar3 >> 0x10)) {\n            uVar1 = *arg_8h[arg_ch + 0x6d];\n            if ((*(arg_8h + 7) == '\\0') || (*(arg_8h[arg_ch + 0x6d] + 5) == '\\0')) {\n                if (*(arg_8h + 5) != '\\0') {\n                    (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar1, arg_ch, 0, &var_40h);\n                    if ((var_34h & 8) != 0) {\n                        var_34h = var_34h ^ 8;\n                        (*_sym.imp.USER32.dll_SetMenuItemInfoW)(uVar1, iVar5, 0, &var_40h);\n                        fcn.004535e4(arg_8h, iVar5);\n                        return 1;\n                    }\n                    var_34h = var_34h | 8;\n                    (*_sym.imp.USER32.dll_SetMenuItemInfoW)(uVar1, iVar5, 0, &var_40h);\n                    fcn.004535e4(arg_8h, iVar5);\n                    return 1;\n                }\n            }\n            else {\n                arg_10h = -1;\n                iVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(uVar1);\n                if (*(arg_8h + 1) != '\\0') {\n                    iVar5 = iVar5 + -4;\n                }\n                iVar7 = 0;\n                iVar6 = arg_10h;\n                if (0 < iVar5) {\n                    do {\n                        iVar6 = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar7);\n                        iVar2 = iVar7;\n                        if (iVar6 == arg_ch) goto joined_r0x0045f8cd;\n                        iVar7 = iVar7 + 1;\n                    } while (iVar7 < iVar5);\n                }\n                iVar2 = iVar7;\n                if (iVar6 == arg_ch) {\njoined_r0x0045f8cd:\n                    do {\n                        first = iVar2;\n                        check = iVar7;\n                        iVar2 = first + -1;\n                        iVar6 = check;\n                        if (iVar2 < 0) break;\n                        arg_10h = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar2);\n                        cVar4 = fcn.0043475c(arg_8h, arg_10h, &var_ch);\n                        iVar7 = check;\n                    } while ((cVar4 == '\\0') || (iVar6 = check,  *(arg_8h[arg_10h + 0x6d] + 5) != '\\0'));\n                    do {\n                        iVar7 = iVar6;\n                        iVar6 = iVar7 + 1;\n                        if (iVar5 <= iVar6) break;\n                        arg_10h = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar6);\n                        cVar4 = fcn.0043475c(arg_8h, arg_10h, &var_ch);\n                    } while ((cVar4 == '\\0') || (*(arg_8h[arg_10h + 0x6d] + 5) != '\\0'));\n                    (*_sym.imp.USER32.dll_CheckMenuRadioItem)(uVar1, first, iVar7, check, 0x400);\n                }\n            }\n            fcn.004535e4(arg_8h, arg_ch);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1253
    },
    "0045f9d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045f9d3(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    \n    fcn.00403600();\n    uVar3 = 0;\n    while( true ) {\n        puVar2 = fcn.004362b4(arg_ch, *arg_14h);\n        uVar1 = *puVar2;\n        if ((uVar1 == 0) || (uVar3 != 0)) break;\n        if (uVar1 == arg_8h) {\n            *arg_14h = *arg_14h + 1;\n            uVar3 = 1;\n        }\n        else {\n            fcn.004032d0(uVar1);\n            *arg_14h = *arg_14h + 1;\n        }\n    }\n    if (arg_8h == 0) {\n        return CONCAT31(uVar1 >> 8, 1);\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 259
    },
    "0045fa2f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_12h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045fa2f(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uint unaff_EBX;\n    int32_t iVar8;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint uVar9;\n    uint *puVar10;\n    int32_t noname_4;\n    uint noname_5;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint *arg_8h_00;\n    uint var_5ch;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint var_3ch;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint var_2ch;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint in_stack_ffffffe4;\n    uchar auStack24 [2];\n    uint var_12h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    iVar8 = 0;\n    arg_8h_00 = &var_1ch;\n    var_ch = 0;\n    bVar1 = false;\n    _auStack8 = auStack8 & 0xff;\n    fcn.00444794(arg_8h_00);\n    var_8h = 1;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    arg_14h = &var_ch;\n    arg_10h = &var_3ch;\n    noname_4 = 0x20;\n    noname_5 = arg_ch;\n    cVar2 = fcn.0045f9d3(0x20, arg_ch, arg_10h, arg_14h);\n    iVar4 = var_ch;\n    if (cVar2 != '\\0') {\n        while ((piVar3 = fcn.004362b4(arg_ch, iVar4),  *piVar3 == 0x20 ||\n               (piVar3 = fcn.004362b4(arg_ch, iVar4),  *piVar3 == 9))) {\n            iVar4 = iVar4 + 1;\n        }\n        noname_4 = 0;\n        var_ch = iVar4;\n        fcn.0045f9d3(0, arg_ch, &var_2ch, &var_ch);\n        uVar9 = var_2ch;\n        iVar4 = fcn.0041164b(var_2ch, 0x485028);\n        if (iVar4 == 0) {\n            _auStack8 = CONCAT13(1, auStack8);\n        }\n        else {\n            iVar4 = fcn.0041164b(uVar9, L\"DOWN\");\n            if (iVar4 == 0) {\n                bVar1 = true;\n            }\n            else {\n                iVar4 = fcn.0041164b(uVar9, 0x48516c);\n                if (iVar4 == 0) {\n                    auStack8 = CONCAT12(1, auStack8._0_2_);\n                    _auStack8 = _auStack8 & 0xff000000 | auStack8;\n                }\n                else {\n                    iVar4 = fcn.0041164b(uVar9, 0x485174);\n                    if (iVar4 == 0) {\n                        auStack8._0_2_ = CONCAT11(1, auStack8[0]);\n                        _auStack8 = _auStack8 & 0xffff0000 | auStack8._0_2_;\n                    }\n                    else {\n                        piVar3 = fcn.00402150();\n                        if ((*piVar3 == 0x30) &&\n                           ((piVar3 = fcn.00402150(),  *piVar3 == 0x78 || (piVar3 = fcn.00402150(),  *piVar3 == 0x58))))\n                        {\n                            fcn.0040c8a0(&var_2ch, 0);\n                            fcn.004440a8(&var_2ch, &var_8h);\n                            piVar3 = fcn.00402150();\n                            if (*piVar3 == 0x30) {\n                                uVar9 = 0x48517c;\n                            }\n                            else {\n                                uVar9 = 0x485184;\n                            }\n                            fcn.00434b4c(&var_5ch, uVar9, var_8h);\n                            fcn.00402170();\n                            iVar8 = 0;\n                        }\n                        else {\n                            var_8h = fcn.00413330(var_2ch);\n                            if (var_8h < 1) {\n                                var_8h = 1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    do {\n        iVar4 = fcn.0041164b(*(iVar8 * 4 + 0x492968), var_3ch);\n        if (iVar4 == 0) break;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x62);\n    if (iVar8 == 0x62) {\n        puVar5 = fcn.00402150();\n        uVar6 = *puVar5;\n        puVar10 = &var_1ch;\n        fcn.0044c367(puVar10, uVar6);\n        if (bVar1) {\n            fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar6, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, unaff_EDI, \n                         unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, var_3ch, \n                         in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, var_2ch, in_stack_ffffffd4, \n                         in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, _auStack24);\n            goto code_r0x0046005f;\n        }\n        if (var_1h == '\\0') {\n            puVar5 = fcn.00402150();\n            fcn.00453965(arg_8h, *puVar5, var_8h);\n            goto code_r0x0046005f;\n        }\n        goto code_r0x0046005a;\n    }\n    if (*(iVar8 + 0x492af0) == '\\0') {\n        uVar6 = str._f_b_b..__reepqrstuvwxyz________t__[iVar8];\n        puVar10 = &var_1ch;\n        fcn.0044c3e8(puVar10, uVar6);\n        if (bVar1) {\ncode_r0x0045fc78:\n            fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar6, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, unaff_EDI, \n                         unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, var_3ch, \n                         in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, var_2ch, in_stack_ffffffd4, \n                         in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, _auStack24);\n            goto code_r0x0046005f;\n        }\n        if (var_1h == '\\0') {\n            if (auStack8[2] == '\\0') {\n                if (auStack8[1] == '\\0') {\n                    fcn.00453902(arg_8h, str._f_b_b..__reepqrstuvwxyz________t__[iVar8], var_8h);\n                }\n                else {\n                    fcn.00434db8(arg_8h, str._f_b_b..__reepqrstuvwxyz________t__[iVar8], 0);\n                }\n            }\n            else {\n                fcn.00434db8(arg_8h, str._f_b_b..__reepqrstuvwxyz________t__[iVar8], 1);\n            }\n            goto code_r0x0046005f;\n        }\n        goto code_r0x0046005a;\n    }\n    // switch table (15 cases) at 0x46007b\n    switch(str._f_b_b..__reepqrstuvwxyz________t__[iVar8]) {\n    case '\\0':\n        if (*(arg_8h + 0x1c) == '\\0') {\n            uVar9 = 0x11;\n            puVar10 = &var_1ch;\n            fcn.0044c3e8(puVar10, 0x11);\n            *(arg_8h + 0x1c) = 1;\n            fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar9, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, unaff_EDI, \n                         unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, var_3ch, \n                         in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, var_2ch, in_stack_ffffffd4, \n                         in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, _auStack24);\n        }\n        goto code_r0x0046005f;\n    case '\\x01':\n        if (*(arg_8h + 0x1c) == '\\0') goto code_r0x0046005f;\n        fcn.0044c3e8(&var_1ch, 0x11);\n        *(arg_8h + 0x1c) = 0;\n        break;\n    case '\\x02':\n        if (*(arg_8h + 0x1d) == '\\0') {\n            uVar9 = 0x12;\n            puVar10 = &var_1ch;\n            fcn.0044c3e8(puVar10, 0x12);\n            *(arg_8h + 0x1d) = 1;\n            fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar9, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, unaff_EDI, \n                         unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, var_3ch, \n                         in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, var_2ch, in_stack_ffffffd4, \n                         in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, _auStack24);\n        }\n        goto code_r0x0046005f;\n    case '\\x03':\n        if (*(arg_8h + 0x1d) == '\\0') goto code_r0x0046005f;\n        fcn.0044c3e8(&var_1ch, 0x12);\n        *(arg_8h + 0x1d) = 0;\n        break;\n    case '\\x04':\n        if (*(arg_8h + 0x1a) == '\\0') {\n            uVar9 = 0x10;\n            puVar10 = &var_1ch;\n            fcn.0044c3e8(puVar10, 0x10);\n            *(arg_8h + 0x1a) = 1;\n            fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar9, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, unaff_EDI, \n                         unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, var_3ch, \n                         in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, var_2ch, in_stack_ffffffd4, \n                         in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, _auStack24);\n        }\n        goto code_r0x0046005f;\n    case '\\x05':\n        if (*(arg_8h + 0x1a) == '\\0') goto code_r0x0046005f;\n        fcn.0044c3e8(&var_1ch, 0x10);\n        *(arg_8h + 0x1a) = 0;\n        break;\n    case '\\x06':\n        if (*(arg_8h + 0x1e) == '\\0') {\n            uVar9 = 0x5b;\n            puVar10 = &var_1ch;\n            fcn.0044c3e8(puVar10, 0x5b);\n            *(arg_8h + 0x1e) = 1;\n            fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar9, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, unaff_EDI, \n                         unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, var_3ch, \n                         in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, var_2ch, in_stack_ffffffd4, \n                         in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, _auStack24);\n        }\n        goto code_r0x0046005f;\n    case '\\a':\n        if (*(arg_8h + 0x1e) == '\\0') goto code_r0x0046005f;\n        fcn.0044c3e8(&var_1ch, 0x5b);\n        *(arg_8h + 0x1e) = 0;\n        break;\n    case '\\b':\n        if (*(arg_8h + 0x1f) == '\\0') {\n            uVar9 = 0x5c;\n            puVar10 = &var_1ch;\n            fcn.0044c3e8(puVar10, 0x5c);\n            *(arg_8h + 0x1f) = 1;\n            fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar9, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, unaff_EDI, \n                         unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, var_3ch, \n                         in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, var_2ch, in_stack_ffffffd4, \n                         in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, _auStack24);\n        }\n        goto code_r0x0046005f;\n    case '\\t':\n        if (*(arg_8h + 0x1f) == '\\0') goto code_r0x0046005f;\n        fcn.0044c3e8(&var_1ch, 0x5c);\n        *(arg_8h + 0x1f) = 0;\n        break;\n    case '\\n':\n        if (*(arg_8h + 0x20) != 0) {\n            fcn.00453965(arg_8h, var_8h, 1);\n            goto code_r0x0046005f;\n        }\n        if (*(arg_8h + 0x1d) == '\\0') {\n            uVar9 = 0x12;\n            puVar10 = &var_1ch;\n            fcn.0044c3e8(puVar10, 0x12);\n            fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar9, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, unaff_EDI, \n                         unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, var_3ch, \n                         in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, var_2ch, in_stack_ffffffd4, \n                         in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, _auStack24);\n        }\n        while (piVar3 = fcn.00402150(),  *piVar3 != 0) {\n            pcVar7 = fcn.00402150();\n            fcn.0044c3e8(&var_1ch, *pcVar7 + 0x30);\n            noname_4 = arg_8h;\n            fcn.0044c348(arg_8h, &var_1ch);\n        }\n        if (*(arg_8h + 0x1d) != '\\0') goto code_r0x0046005f;\n        fcn.0044c3e8(&var_1ch, 0x12);\n        break;\n    case '\\v':\n        uVar6 = 0xd;\n        puVar10 = &var_1ch;\n        fcn.0044c3e8(puVar10, 0xd);\n        _auStack24 = CONCAT12(1, auStack24);\n        _auStack24 = _auStack24 & 0xff000000 | _auStack24;\n        if (bVar1) goto code_r0x0045fc78;\n        if (var_1h == '\\0') {\n            fcn.0044c348(arg_8h, &var_1ch);\n            goto code_r0x0046005f;\n        }\n        break;\n    case '\\f':\n        uVar9 = 0x12;\n        puVar10 = &var_1ch;\n        fcn.0044c3e8(puVar10, 0x12);\n        if (bVar1) {\n            if (*(arg_8h + 0x1d) == '\\0') {\n                *(arg_8h + 0x1d) = 1;\n                fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar9, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, \n                             unaff_EDI, unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, \n                             in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, \n                             in_stack_ffffffbc, var_3ch, in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, \n                             var_2ch, in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, \n                             in_stack_ffffffe4, _auStack24);\n            }\n            goto code_r0x0046005f;\n        }\n        if (var_1h == '\\0') {\n            fcn.0044c348(arg_8h, &var_1ch);\n            goto code_r0x0046005f;\n        }\n        if (*(arg_8h + 0x1d) == '\\0') goto code_r0x0046005f;\n        *(arg_8h + 0x1d) = 0;\n        break;\n    case '\\r':\n        uVar9 = 0xa0;\n        puVar10 = &var_1ch;\n        fcn.0044c3e8(puVar10, 0xa0);\n        if (bVar1) {\n            if (*(arg_8h + 0x1a) == '\\0') {\n                *(arg_8h + 0x1a) = 1;\n                fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar9, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, \n                             unaff_EDI, unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, \n                             in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, \n                             in_stack_ffffffbc, var_3ch, in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, \n                             var_2ch, in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, \n                             in_stack_ffffffe4, _auStack24);\n            }\n            goto code_r0x0046005f;\n        }\n        if (var_1h == '\\0') {\ncode_r0x0045fe8e:\n            fcn.0044c348(arg_8h, &var_1ch);\n            goto code_r0x0046005f;\n        }\n        if (*(arg_8h + 0x1a) == '\\0') goto code_r0x0046005f;\n        *(arg_8h + 0x1a) = 0;\n        break;\n    case '\\x0e':\n        uVar9 = 0xa1;\n        puVar10 = &var_1ch;\n        fcn.0044c3e8(puVar10, 0xa1);\n        if (bVar1) {\n            if (*(arg_8h + 0x1b) == '\\0') {\n                *(arg_8h + 0x1b) = 1;\n                fcn.0044c185(arg_8h, &var_1ch, puVar10, uVar9, noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, \n                             unaff_EDI, unaff_ESI, unaff_EBX, var_5ch, in_stack_ffffffa4, in_stack_ffffffa8, \n                             in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, \n                             in_stack_ffffffbc, var_3ch, in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, \n                             var_2ch, in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, \n                             in_stack_ffffffe4, _auStack24);\n            }\n            goto code_r0x0046005f;\n        }\n        if (var_1h == '\\0') goto code_r0x0045fe8e;\n        if (*(arg_8h + 0x1b) == '\\0') goto code_r0x0046005f;\n        *(arg_8h + 0x1b) = 0;\n        break;\n    default:\n        goto code_r0x0046005f;\n    }\ncode_r0x0046005a:\n    fcn.0044bfeb(noname_4, noname_5, arg_10h, arg_14h, arg_8h_00, unaff_EDI, unaff_ESI, unaff_EBX, var_5ch, \n                 in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, \n                 in_stack_ffffffb8, in_stack_ffffffbc, var_3ch, in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc\n                 , var_2ch, in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, var_1ch, in_stack_ffffffe4, \n                 _auStack24, stack0xffffffec, var_ch, var_8h, _auStack8);\ncode_r0x0046005f:\n    fcn.00402260();\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 6103
    },
    "0046028a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.0046028a(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint arg_10h_00;\n    uint arg_8h_00;\n    int32_t arg_ch_00;\n    uchar auStackY8272 [8156];\n    uint uStackY116;\n    uint var_48h;\n    int32_t var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_18h;\n    uchar *var_14h;\n    uint uStack20;\n    \n    fcn.00422880();\n    if (0 < arg_8h) {\n        uStack20 = 0xfff;\n        var_14h = &stack0xffffdfb0;\n        var_18h = *0x4a9130;\n        uStack32 = 0;\n        uStack36 = 0x4602c0;\n        uStack36 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        uStack40 = 0x4602c7;\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        uStack40 = 0x4602d5;\n        fcn.00401c30();\n        uStack40 = 0xfff;\n        uStack48 = arg_ch;\n        uStack52 = 0;\n        uStack56 = 0x4602e7;\n        var_28h = &stack0xffffdfb0;\n        uStack56 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        var_38h = 0x4602ee;\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        var_38h = 0x4602f6;\n        fcn.00401c30();\n        var_38h = arg_8h;\n        fcn.00434ec1(arg_8h);\n        arg_10h_00 = fcn.00434e8d(arg_8h);\n        var_18h = arg_10h_00;\n        arg_8h_00 = fcn.00434f12(arg_8h);\n        arg_ch_00 = fcn.00434eeb(arg_8h_00);\n        if (arg_ch_00 == 0) {\n            fcn.0041343b(&stack0xffffdfb0, L\"Line %d:\\n\\n\", arg_10h_00);\n        }\n        else {\n            fcn.0041343b(&stack0xffffdfb0, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_10h_00);\n        }\n        fcn.00401c30();\n        fcn.0040d510();\n        fcn.0040d510();\n        fcn.0040bf10();\n        if (-1 < arg_10h) {\n            fcn.00402170();\n            fcn.0040c8a0(&fcn.0046028a::var_28h, arg_10h);\n            fcn.0040d510();\n            fcn.0040bff0(&fcn.0046028a::var_28h);\n            fcn.0040d510();\n        }\n        fcn.0040d510();\n        fcn.0040bff0(&fcn.0046028a::var_38h);\n        if (*0x4a90eb == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else {\n            uStackY116 = 0x4603f7;\n            fcn.00413c6e(L\"%s (%d) : ==> %s: \\n%s \\n%s\\n\", arg_ch_00);\n        }\n        fcn.00402260();\n        fcn.00402260();\n        fcn.00402260();\n        fcn.00402260();\n    }\n    return;\n}\n",
        "token_count": 910
    },
    "004604bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004604bc(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    int16_t *piVar5;\n    uint16_t *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint var_14h;\n    \n    fcn.0040bf10();\n    iVar1 = *arg_ch;\n    iVar7 = iVar1 + 1;\n    *arg_ch = iVar7;\n    if (*(arg_8h + 4) <= iVar7) {\n        *arg_ch = iVar1;\n        fcn.00402260();\n        return 0xffffffff;\n    }\n    if (arg_10h == '\\0') {\ncode_r0x00460502:\n        bVar3 = false;\n    }\n    else {\n        piVar5 = fcn.004362b4(arg_8h, iVar7);\n        if (*piVar5 != 0x7b) goto code_r0x00460502;\n        bVar3 = true;\n        *arg_ch = iVar1 + 2;\n    }\n    fcn.00402170();\n    bVar2 = false;\n    bVar4 = false;\n    if (*arg_ch < *(arg_8h + 4)) {\n        do {\n            bVar2 = bVar4;\n            puVar6 = fcn.004362b4(arg_8h, *arg_ch);\n            iVar7 = fcn.00413983(*puVar6);\n            if (iVar7 == 0) break;\n            iVar7 = *arg_ch;\n            bVar2 = true;\n            *arg_ch = iVar7 + 1;\n            puVar6 = fcn.004362b4(arg_8h, iVar7);\n            fcn.004032d0(*puVar6);\n            bVar4 = true;\n        } while (*arg_ch < *(arg_8h + 4));\n    }\n    uVar8 = fcn.00413330(var_14h);\n    if (bVar2) {\n        if (!bVar3) {\ncode_r0x00460588:\n            fcn.00402260();\n            return uVar8;\n        }\n        iVar7 = *arg_ch;\n        if (iVar7 != *(arg_8h + 4)) {\n            piVar5 = fcn.004362b4(arg_8h, iVar7);\n            if (*piVar5 == 0x7d) {\n                *arg_ch = iVar7 + 1;\n                goto code_r0x00460588;\n            }\n        }\n    }\n    *arg_ch = iVar1;\n    fcn.00402260();\n    return 0xffffffff;\n}\n",
        "token_count": 610
    },
    "00460612": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00460612(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpString;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(arg_8h + 0x54), 0x3e9);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(iVar1, &lpString, 0x100);\n        if (((*(arg_8h + 0x10) & 1) != 0) && (lpString == 0)) {\n            (*_sym.imp.USER32.dll_MessageBeep)(0);\n            return;\n        }\n        if (0.0 < *(arg_8h + 0x18)) {\n            (*_sym.imp.USER32.dll_KillTimer)(*(arg_8h + 0x54), 0x40a);\n        }\n        fcn.00402170();\n        (*_sym.imp.USER32.dll_EndDialog)(*(arg_8h + 0x54), 1);\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00460752": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00460752(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    int32_t *arg_ch_00;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *extraout_EDX;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = arg_14h;\n    ppiVar1 = arg_8h + 3;\n    arg_14h = 0x80004005;\n    *arg_8h = 0;\n    *ppiVar1 = NULL;\n    arg_8h[10] = 0;\n    arg_8h[0xc] = 0;\n    arg_8h[0xd] = 0;\n    *(arg_8h + 0xf) = 0;\n    arg_8h[2] = 0;\n    if ((((arg_10h == NULL) || (iVar4 == 0)) || (arg_18h == NULL)) || (arg_ch == 0)) {\n        return arg_8h;\n    }\n    *arg_18h = 0;\n    arg_8h[4] = *(iVar4 + 0x80);\n    arg_8h[6] = *(iVar4 + 0x84) + *(iVar4 + 0x80);\n    arg_8h[5] = *(iVar4 + 0x82);\n    arg_8h[7] = *(iVar4 + 0x86) + *(iVar4 + 0x82);\n    arg_8h[1] = iVar4;\n    *arg_8h = arg_ch;\n    cVar2 = fcn.004329dd(arg_10h);\n    arg_ch_00 = arg_14h;\n    if ((cVar2 == '\\0') ||\n       (arg_ch_00 = (****(*extraout_EDX + 8))(*(*extraout_EDX + 8), 0x4818d0, ppiVar1),  arg_ch_00 < 0)) {\n        fcn.00451712(0x4a8178, arg_ch_00, 0, 0, 0);\n        return arg_8h;\n    }\n    puVar3 = fcn.00411777(0xc);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        *puVar3 = 0x4842c8;\n        puVar3[2] = arg_8h;\n        puVar3[1] = 1;\n    }\n    arg_8h[10] = puVar3;\n    puVar3 = fcn.00411777(8);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        *puVar3 = 0x484344;\n        puVar3[1] = arg_8h;\n    }\n    arg_8h[0xc] = puVar3;\n    puVar3 = fcn.00411777(0xc);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        *puVar3 = 0x484380;\n        puVar3[1] = arg_8h;\n        puVar3[2] = 0;\n    }\n    arg_8h[0xb] = puVar3;\n    puVar3 = fcn.00411777(8);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        *puVar3 = 0x4843a8;\n        puVar3[1] = arg_8h;\n    }\n    arg_8h[0xd] = puVar3;\n    (**(**ppiVar1 + 0x14))(*ppiVar1, L\"Container\", 0x48429c);\n    var_8h = *(iVar4 + 0x84);\n    var_4h = *(iVar4 + 0x86);\n    fcn.0044c8d4(&var_8h, &var_10h);\n    (**(**ppiVar1 + 0x44))(*ppiVar1, 1, &var_10h);\n    (**(**ppiVar1 + 0xc))(*ppiVar1, arg_8h[10]);\n    (**(**ppiVar1 + 0x4c))(*ppiVar1, arg_8h[0xd], arg_8h + 0xe);\n    iVar4 = (****ppiVar1)(*ppiVar1, 0x481930, &arg_14h);\n    if (-1 < iVar4) {\n        (**(*arg_14h + 0x1c))(arg_14h, 1, 2, arg_8h[0xd]);\n        (**(*arg_14h + 8))(arg_14h);\n    }\n    (*_sym.imp.ole32.dll_OleSetContainedObject)(*ppiVar1, 1);\n    (**(**ppiVar1 + 0x2c))(*ppiVar1, 0xffffffff, 0, arg_8h[10], 0xffffffff, *(*arg_8h + 0x14), arg_8h + 4);\n    arg_ch = 5;\n    do {\n        iVar4 = (**(**ppiVar1 + 0x38))(*ppiVar1);\n        arg_ch = arg_ch + -1;\n        if (iVar4 == 0) break;\n    } while (arg_ch != 0);\n    if (iVar4 < 0) {\n        fcn.0044527a(arg_8h);\n        fcn.00451712(0x4a8178, iVar4, 0, 0, 1);\n        return arg_8h;\n    }\n    iVar4 = (****ppiVar1)(*ppiVar1, 0x481910, &arg_10h);\n    if (-1 < iVar4) {\n        iVar4 = (**(*arg_10h + 0xc))(arg_10h, arg_8h + 2);\n        (**(*arg_10h + 8))(arg_10h);\n        if (-1 < iVar4) {\n            *arg_18h = arg_8h[2];\n            return arg_8h;\n        }\n    }\n    fcn.0044527a(arg_8h);\n    fcn.00451712(0x4a8178, iVar4, 0, 0, 1);\n    return arg_8h;\n}\n",
        "token_count": 1489
    },
    "00460a25": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00460a25(int32_t arg_8h, uint hWnd)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint arg_ch;\n    bool bVar5;\n    uint32_t uStack2092;\n    uint32_t uStack2088;\n    int32_t iStack2084;\n    int32_t iStack2080;\n    int32_t iStack2076;\n    int32_t iStack2072;\n    uint32_t uStack2068;\n    uchar auStack2064 [12];\n    uchar auStack2052 [2048];\n    \n    arg_ch = hWnd;\n    bVar5 = (*(arg_8h + 8) & 0x40) != 0;\n    uStack2088 = bVar5;\n    uStack2092 = bVar5;\n    if ((*(arg_8h + 8) & 8) != 0) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, auStack2064, 0x400);\n        iVar2 = fcn.004132dc(*(arg_8h + 0xbc), auStack2064);\n        if (iVar2 == 0) {\n            uStack2088 = bVar5 + 1;\n        }\n        uStack2092 = uStack2092 + 1;\n    }\n    if ((*(arg_8h + 8) & 1) != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(arg_ch, auStack2064, 0x400);\n        if (*(arg_8h + 0xc) == '\\0') {\n            uVar3 = fcn.00411361(auStack2064);\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(auStack2064, uVar3);\n        }\n        iVar2 = *(arg_8h + 0x10);\n        uStack2068 = uStack2088;\n        if (iVar2 == 1) {\n            iVar2 = fcn.00413402(*(arg_8h + 0x14), auStack2064, *(arg_8h + 0x18));\njoined_r0x00460b1d:\n            if (iVar2 == 0) {\ncode_r0x00460b1f:\n                uStack2088 = uStack2088 + 1;\n            }\n        }\n        else if (iVar2 == 2) {\n            iVar2 = fcn.0041366c(auStack2064, *(arg_8h + 0x14));\n            if (iVar2 != 0) goto code_r0x00460b1f;\n        }\n        else if (iVar2 == 3) {\n            iVar2 = fcn.004132dc(auStack2064, *(arg_8h + 0x14));\n            goto joined_r0x00460b1d;\n        }\n        if ((*(arg_8h + 8) & 0x18) == 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_ch, auStack2064, 0x400);\n            iVar2 = fcn.004132dc(L\"ThumbnailClass\", auStack2064);\n            if (iVar2 == 0) {\n                uStack2088 = uStack2068;\n            }\n        }\n        uStack2092 = uStack2092 + 1;\n    }\n    if ((*(arg_8h + 8) & 2) == 0) goto code_r0x00460bd9;\n    (*_sym.imp.USER32.dll_GetWindowTextW)(arg_ch, auStack2064, 0x400);\n    fcn.00401c30();\n    fcn.004605cb(arg_8h + 0x34, &iStack2072);\n    fcn.00402260();\n    cVar1 = fcn.0044c7aa(arg_8h + 0x34);\n    if (cVar1 != '\\0') {\n        if ((*(arg_8h + 8) & 0x18) == 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, auStack2052, 0x400);\n            iVar2 = fcn.004132dc(L\"ThumbnailClass\", auStack2052);\n            if (iVar2 == 0) goto code_r0x00460bce;\n        }\n        uStack2088 = uStack2088 + 1;\n    }\ncode_r0x00460bce:\n    uStack2092 = uStack2092 + 1;\n    arg_ch = hWnd;\ncode_r0x00460bd9:\n    if ((*(arg_8h + 8) & 0x10) != 0) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_ch, auStack2064, 0x400);\n        fcn.00401c30();\n        fcn.004605cb(arg_8h + 0x78, &iStack2072);\n        fcn.00402260();\n        cVar1 = fcn.0044c7aa(arg_8h + 0x78);\n        if (cVar1 != '\\0') {\n            uStack2088 = uStack2088 + 1;\n        }\n        uStack2092 = uStack2092 + 1;\n        arg_ch = hWnd;\n    }\n    if ((*(arg_8h + 8) & 4) != 0) {\n        if ((uStack2088 == uStack2092) && (cVar1 = fcn.00445562(arg_8h, arg_ch),  cVar1 != '\\0')) {\n            uStack2088 = uStack2088 + 1;\n        }\n        uStack2092 = uStack2092 + 1;\n    }\n    uVar4 = *(arg_8h + 8);\n    if ((uVar4 & 0x780) != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(arg_ch, &iStack2084);\n        uVar4 = *(arg_8h + 8);\n        if (uVar4 < '\\0') {\n            if (*(arg_8h + 0xd4) == iStack2084) {\n                uStack2088 = uStack2088 + 1;\n            }\n            uStack2092 = uStack2092 + 1;\n        }\n        if ((uVar4 & 0x100) != 0) {\n            if (*(arg_8h + 0xd8) == iStack2080) {\n                uStack2088 = uStack2088 + 1;\n            }\n            uStack2092 = uStack2092 + 1;\n        }\n        if ((uVar4 & 0x200) != 0) {\n            if (*(arg_8h + 0xdc) == iStack2076 - iStack2084) {\n                uStack2088 = uStack2088 + 1;\n            }\n            uStack2092 = uStack2092 + 1;\n        }\n        if ((uVar4 & 0x400) != 0) {\n            if (*(arg_8h + 0xe0) == iStack2072 - iStack2080) {\n                uStack2088 = uStack2088 + 1;\n            }\n            uStack2092 = uStack2092 + 1;\n        }\n    }\n    if ((uVar4 & 0x20) != 0) {\n        if ((uStack2088 == uStack2092) &&\n           (*(arg_8h + 0xd0) = *(arg_8h + 0xd0) + 1,  *(arg_8h + 0xd0) == *(arg_8h + 0xcc))) {\n            uStack2088 = uStack2088 + 1;\n        }\n        uStack2092 = uStack2092 + 1;\n    }\n    if (uStack2088 == uStack2092) {\n        fcn.00431f64(arg_8h + 0xec, &hWnd);\n        *(arg_8h + 0xe4) = *(arg_8h + 0xe4) + 1;\n        return *(arg_8h + 4) == '\\0';\n    }\n    return true;\n}\n",
        "token_count": 1827
    },
    "00460d32": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460d32(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    uint var_14h;\n    \n    fcn.0040bf10();\n    while( true ) {\n        piVar1 = fcn.00402150();\n        if (*piVar1 == 0) break;\n        piVar1 = fcn.00402150();\n        if (*piVar1 == 0x3b) {\n            fcn.004032d0(0x3b);\n        }\n        puVar2 = fcn.00402150();\n        fcn.004032d0(*puVar2);\n    }\n    fcn.0040e410(&var_14h);\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 178
    },
    "0046104f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046104f(int32_t arg_8h, uint hWnd)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    int32_t iVar7;\n    int32_t iStack2612;\n    int32_t iStack2608;\n    int32_t iStack2604;\n    int32_t iStack2600;\n    uint16_t auStack2596 [4];\n    uchar auStack2588 [4];\n    uchar auStack2584 [492];\n    ushort uStack2092;\n    uchar auStack2088 [12];\n    uchar auStack2076 [2072];\n    \n    iVar7 = 0;\n    iVar6 = 0;\n    iStack2608 = 0;\n    iStack2612 = 0;\n    if ((*(arg_8h + 0x88) & 8) == 0) {\n        if ((*(arg_8h + 0x88) & 0x400) != 0) {\n            iVar6 = arg_8h + 8;\n            iVar2 = fcn.00434990(iVar6, 0x202, hWnd);\n            iVar7 = unaff_ESI;\n            if (iVar2 != 0) {\n                iVar7 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                                  (hWnd, *(arg_8h + 4), 0x101, iVar2, 2, 5000, &stack0xfffff5c0);\n                if ((iVar7 != 0) && (unaff_EBX != 0)) {\n                    fcn.004348c0(iVar6, iVar2, auStack2588, 0x202);\n                    uStack2092 = 0;\n                    fcn.004132dc(&iStack2604, *(arg_8h + 0xac));\n                }\n                fcn.00434938(iVar6, iVar2);\n                iVar7 = unaff_ESI;\n            }\n            unaff_EDI = 1;\n            iVar6 = 1;\n            unaff_ESI = iVar7;\n        }\n        if ((*(arg_8h + 0x88) & 0x10) != 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, auStack2076, 0x400);\n            fcn.00401c30();\n            fcn.004605cb(arg_8h + 0xec, &iStack2600);\n            fcn.00402260();\n            cVar1 = fcn.0044c7aa(arg_8h + 0xec);\n            iVar7 = unaff_ESI;\n            if (cVar1 != '\\0') {\n                iVar7 = unaff_ESI + 1;\n            }\n            iVar6 = unaff_EDI + 1;\n            unaff_ESI = iVar7;\n        }\n        uVar5 = *(arg_8h + 0x88);\n        if ((uVar5 & 0x20) == 0) {\n            if (((uVar5 & 0xc0) != 0) || ((uVar5 & 0x300) != 0)) {\n                (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &iStack2612);\n                uVar4 = (*_sym.imp.USER32.dll_GetParent)(hWnd, &stack0xfffff5bc);\n                (*_sym.imp.USER32.dll_ScreenToClient)(uVar4);\n                uVar5 = *(arg_8h + 0x88);\n                if ((uVar5 & 0x40) != 0) {\n                    if (*(arg_8h + 0xdc) == unaff_ESI) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar6 = iVar6 + 1;\n                }\n                if (uVar5 < '\\0') {\n                    if (*(arg_8h + 0xe0) == unaff_EBX) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar6 = iVar6 + 1;\n                }\n                if ((uVar5 & 0x100) != 0) {\n                    if (*(arg_8h + 0xe4) == iStack2604 - iStack2612) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar6 = iVar6 + 1;\n                }\n                if ((uVar5 & 0x200) != 0) {\n                    if (*(arg_8h + 0xe8) == iStack2600 - iStack2608) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar6 = iVar6 + 1;\n                }\n            }\n            if ((uVar5 & 1) != 0) {\n                (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, auStack2076, 0x100);\n                iVar2 = fcn.004132dc(*(arg_8h + 0x8c), auStack2076);\n                if (iVar2 == 0) {\n                    iVar7 = iVar7 + 1;\n                }\n                iVar6 = iVar6 + 1;\n            }\n            if ((*(arg_8h + 0x88) & 4) != 0) {\n                (*_sym.imp.USER32.dll_GetWindowTextW)(hWnd, auStack2076, 0x400);\n                iVar2 = fcn.004132dc(*(arg_8h + 0xbc), auStack2088);\n                if (iVar2 == 0) {\n                    iVar7 = iVar7 + 1;\n                }\n                iVar6 = iVar6 + 1;\n            }\n            if ((*(arg_8h + 0x88) & 2) != 0) {\n                if ((iVar7 == iVar6) &&\n                   (*(arg_8h + 0x130) = *(arg_8h + 0x130) + 1,  *(arg_8h + 0x130) == *(arg_8h + 0xd0))) {\n                    iVar7 = iVar7 + 1;\n                }\n                iVar6 = iVar6 + 1;\n            }\n            if (iVar7 == iVar6) {\n                *(arg_8h + 0xd8) = hWnd;\n                return 0;\n            }\n        }\n        else {\n            iVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n            if (*(arg_8h + 0xcc) == iVar6) {\n                *(arg_8h + 0xd8) = hWnd;\n                return 0;\n            }\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, auStack2584);\n        iVar2 = fcn.00411361(auStack2596);\n        iVar6 = 0;\n        iVar7 = iVar2;\n        if (iVar2 != 0) {\n            while ((iVar7 = iVar7 + -1,  -1 < iVar7 && (iVar3 = fcn.0041339c(auStack2596[iVar7]),  iVar3 != 0))) {\n                iVar6 = iVar6 + 1;\n            }\n        }\n        if ((((iVar2 < *(arg_8h + 0x134)) && (iVar6 < *(arg_8h + 0x138))) &&\n            (iVar2 == (*(arg_8h + 0x134) - *(arg_8h + 0x138)) + iVar6)) &&\n           (iVar6 = fcn.00413402(*(arg_8h + 0x9c), auStack2596, iVar2),  iVar6 == 0)) {\n            *(arg_8h + 0x130) = *(arg_8h + 0x130) + 1;\n            fcn.0041343b(auStack2076, L\"%s%u\", auStack2596);\n            iVar6 = fcn.004132dc(auStack2076, *(arg_8h + 0x9c));\n            if (iVar6 == 0) {\n                *(arg_8h + 0xd8) = hWnd;\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1838
    },
    "0046173c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046173c(uint *arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    bool bVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t arg_ch_00;\n    uint var_18h;\n    int32_t var_8h;\n    \n    arg_ch_00 = arg_ch;\n    bVar1 = false;\n    fcn.0040bf10();\n    piVar2 = fcn.00402150();\n    if (*piVar2 == 0x23) {\n        piVar2 = fcn.00402150();\n        if (*piVar2 != 0x23) {\n            fcn.0040c8a0(arg_10h, 0);\n            bVar1 = true;\n            goto code_r0x0046179b;\n        }\n    }\n    piVar2 = fcn.00402150();\n    if (*piVar2 == 0x23) {\n        fcn.0040c8a0(arg_10h, 0);\n    }\ncode_r0x0046179b:\n    var_8h = fcn.00413330(*arg_10h);\n    for (arg_ch = 0; (!bVar1 || (var_8h != arg_ch)); arg_ch = arg_ch + 1) {\n        fcn.0046165b(arg_8h, arg_ch_00, &var_18h);\n        iVar3 = fcn.004457dd(arg_10h, &var_18h, 0);\n        if (iVar3 == 0) break;\n        arg_ch_00 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x110a, 1, arg_ch_00);\n        if (arg_ch_00 == 0) break;\n    }\n    fcn.00402260();\n    return arg_ch_00;\n}\n",
        "token_count": 428
    },
    "00461964": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461964(uint *hWnd, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_24h;\n    \n    iVar2 = fcn.00436540(hWnd);\n    fcn.00402170();\n    if (arg_ch == '\\0') {\n        iVar4 = 0;\n        if (0 < iVar2) {\n            while( true ) {\n                iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x102c, iVar4, 2);\n                if (iVar3 != 0) break;\n                iVar4 = iVar4 + 1;\n                if (iVar2 <= iVar4) {\n                    return 1;\n                }\n            }\n            fcn.004131fc(iVar4, &var_24h, 10);\n            fcn.00402170();\n        }\n    }\n    else {\n        iVar4 = 0;\n        if (0 < iVar2) {\n            do {\n                iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x102c, iVar4, 2);\n                if (iVar3 != 0) {\n                    fcn.004131fc(iVar4, &var_24h, 10);\n                    cVar1 = fcn.004362d6(arg_10h);\n                    if (cVar1 == '\\0') {\n                        fcn.0040d510();\n                    }\n                    fcn.0040d510();\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2);\n            return 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 382
    },
    "0046238c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0046238c(char *arg_8h, uint32_t arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint *arg_ch_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint *arg_34h;\n    int32_t iVar10;\n    uint var_1088h;\n    uint var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint *var_78h;\n    uint *var_74h;\n    char *var_70h;\n    char *var_6ch;\n    uint var_68h;\n    uint *var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    char *var_14h;\n    uint *var_10h;\n    uint8_t *var_ch;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x461c51;\n    fcn.00422880();\n    iVar10 = 0;\n    var_ch = 0x1;\n    var_4h = 0;\n    var_8h = arg_8h;\n    if (arg_10h == NULL) {\n        return NULL;\n    }\n    *arg_10h = 0;\n    if (arg_14h == NULL) {\n        var_4h = 0x10;\n        goto code_r0x00462295;\n    }\n    *arg_14h = 0;\n    var_88h = 0x485ab0;\n    var_84h = 0x485bb0;\n    var_80h = 0x485cb0;\n    var_7ch = 0x485df0;\n    if ((arg_ch & 0xd8038580) == 0) {\n        cVar2 = *arg_8h;\n        uVar9 = arg_ch;\n        do {\n            if ((cVar2 != '(') || (arg_8h[iVar10 + 1] != '*')) goto code_r0x00461e71;\n            var_10h = 0x5;\n            var_18h = arg_8h + iVar10 + 2;\n            var_14h = \"UTF8)\";\n            var_1ch = 0x461cf5;\n            iVar3 = fcn.00416af1(var_18h, \"UTF8)\", 5);\n            if (iVar3 == 0) {\n                iVar10 = iVar10 + 7;\n                uVar9 = uVar9 | 0x800;\n            }\n            else {\n                var_10h = 0x4;\n                var_18h = arg_8h + iVar10 + 2;\n                var_14h = \"UCP)\";\n                var_1ch = 0x461d1e;\n                iVar3 = fcn.00416af1(var_18h, \"UCP)\", 4);\n                if (iVar3 == 0) {\n                    iVar10 = iVar10 + 6;\n                    uVar9 = uVar9 | 0x20000000;\n                }\n                else {\n                    var_10h = 0xd;\n                    var_18h = arg_8h + iVar10 + 2;\n                    var_14h = \"NO_START_OPT)\";\n                    var_1ch = 0x461d47;\n                    iVar3 = fcn.00416af1(var_18h, \"NO_START_OPT)\", 0xd);\n                    if (iVar3 == 0) {\n                        iVar10 = iVar10 + 0xf;\n                        uVar9 = uVar9 | 0x4000000;\n                    }\n                    else {\n                        var_10h = 0x3;\n                        var_18h = arg_8h + iVar10 + 2;\n                        var_14h = 0x48bd28;\n                        var_1ch = 0x461d70;\n                        iVar3 = fcn.00416af1(var_18h, 0x48bd28, 3);\n                        if (iVar3 == 0) {\n                            iVar10 = iVar10 + 5;\n                            uVar4 = 0x100000;\n                            uVar9 = uVar9 & 0xff8fffff;\n                        }\n                        else {\n                            var_10h = 0x3;\n                            var_18h = arg_8h + iVar10 + 2;\n                            var_14h = 0x48bd2c;\n                            var_1ch = 0x461d9e;\n                            iVar3 = fcn.00416af1(var_18h, 0x48bd2c, 3);\n                            if (iVar3 == 0) {\n                                iVar10 = iVar10 + 5;\n                                uVar4 = 0x200000;\n                                uVar9 = uVar9 & 0xff8fffff;\n                            }\n                            else {\n                                var_10h = 0x5;\n                                var_18h = arg_8h + iVar10 + 2;\n                                var_14h = \"CRLF)\";\n                                var_1ch = 0x461dcc;\n                                iVar3 = fcn.00416af1(var_18h, \"CRLF)\", 5);\n                                if (iVar3 == 0) {\n                                    iVar10 = iVar10 + 7;\n                                    uVar4 = 0x300000;\n                                    uVar9 = uVar9 & 0xff8fffff;\n                                }\n                                else {\n                                    var_10h = 0x4;\n                                    var_18h = arg_8h + iVar10 + 2;\n                                    var_14h = \"ANY)\";\n                                    var_1ch = 0x461df7;\n                                    iVar3 = fcn.00416af1(var_18h, \"ANY)\", 4);\n                                    if (iVar3 == 0) {\n                                        iVar10 = iVar10 + 6;\n                                        uVar4 = 0x400000;\n                                        uVar9 = uVar9 & 0xff8fffff;\n                                    }\n                                    else {\n                                        var_10h = 0x8;\n                                        var_18h = arg_8h + iVar10 + 2;\n                                        var_14h = \"ANYCRLF)\";\n                                        var_1ch = 0x461e22;\n                                        iVar3 = fcn.00416af1(var_18h, \"ANYCRLF)\", 8);\n                                        if (iVar3 == 0) {\n                                            iVar10 = iVar10 + 10;\n                                            uVar4 = 0x500000;\n                                            uVar9 = uVar9 & 0xff8fffff;\n                                        }\n                                        else {\n                                            var_10h = 0xc;\n                                            var_18h = arg_8h + iVar10 + 2;\n                                            var_14h = \"BSR_ANYCRLF)\";\n                                            var_1ch = 0x461e4d;\n                                            iVar3 = fcn.00416af1(var_18h, \"BSR_ANYCRLF)\", 0xc);\n                                            if (iVar3 == 0) {\n                                                uVar4 = 0x800000;\n                                            }\n                                            else {\n                                                var_10h = 0xc;\n                                                var_18h = arg_8h + iVar10 + 2;\n                                                var_14h = \"BSR_UNICODE)\";\n                                                var_1ch = 0x461ebf;\n                                                iVar3 = fcn.00416af1(var_18h, \"BSR_UNICODE)\", 0xc);\n                                                if (iVar3 != 0) goto code_r0x00461e71;\n                                                uVar4 = 0x1000000;\n                                            }\n                                            iVar10 = iVar10 + 0xe;\n                                            uVar9 = uVar9 & 0xfe7fffff;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        uVar9 = uVar9 | uVar4;\n                    }\n                }\n            }\n            cVar2 = arg_8h[iVar10];\n        } while( true );\n    }\n    var_4h = 0x11;\ncode_r0x0046228a:\n    *arg_14h = var_8h - arg_8h;\ncode_r0x00462295:\n    var_10h = var_4h;\n    var_14h = 0x46229e;\n    uVar8 = fcn.00430333(var_4h);\n    *arg_10h = uVar8;\n    return NULL;\ncode_r0x00461e71:\n    if ((uVar9 & 0x800) == 0) {\n        var_18h = NULL;\n    }\n    else {\n        var_18h = 0x1;\n        if ((uVar9 & 0x2000) == 0) {\n            var_10h = 0xffffffff;\n            var_14h = arg_8h;\n            var_18h = 0x461e93;\n            iVar3 = fcn.0042ecbb(arg_8h, 0xffffffff);\n            *arg_14h = iVar3;\n            if (-1 < iVar3) {\n                var_4h = 0x2c;\n                goto code_r0x00462295;\n            }\n        }\n    }\n    if ((uVar9 & 0x20000000) == 0) {\n        uVar4 = uVar9 & 0x1800000;\n        if (((uVar4 == 0) || (uVar4 == 0x800000)) || (uVar4 == 0x1000000)) {\n            uVar4 = uVar9 & 0x700000;\n            if (uVar4 < 0x300001) {\n                if (uVar4 == 0x300000) {\n                    uVar4 = 0xd0a;\n                }\n                else {\n                    if (uVar4 != 0) {\n                        if (uVar4 == 0x100000) {\n                            uVar4 = 0xd;\n                            goto code_r0x00461f36;\n                        }\n                        if (uVar4 != 0x200000) goto code_r0x00461efe;\n                    }\n                    uVar4 = 10;\n                }\ncode_r0x00461f36:\n                var_30h = NULL;\n                if (uVar4 < 0x100) {\n                    var_2ch = 1;\n                    var_28h = var_28h & 0xffffff00 | uVar4 & 0xff;\n                }\n                else {\n                    var_2ch = 2;\n                    var_28h._0_2_ = CONCAT11(uVar4, uVar4 >> 8);\n                    var_28h = var_28h & 0xffff0000 | var_28h;\n                }\n            }\n            else if (uVar4 == 0x400000) {\n                var_30h = 0x1;\n            }\n            else {\n                if (uVar4 != 0x500000) goto code_r0x00461efe;\n                var_30h = 0x2;\n            }\n            var_78h = &fcn.0046238c::var_1088h;\n            var_10h = arg_8h;\n            var_4ch = 0;\n            var_48h = 0;\n            var_50h = 0;\n            var_54h = 0;\n            var_5ch = 0;\n            var_58h = 0;\n            var_60h = 0;\n            var_70h = arg_8h;\n            var_14h = 0x461fb6;\n            var_74h = var_78h;\n            var_64h = var_78h;\n            iVar3 = fcn.004136e0();\n            var_6ch = arg_8h + iVar3;\n            var_10h = arg_8h + iVar10;\n            var_18h = &fcn.0046238c::var_88h;\n            var_1ch = NULL;\n            var_14h = &fcn.0046238c::var_1088h;\n            var_20h = &fcn.0046238c::var_1ch;\n            var_28h = 0;\n            var_2ch = 0;\n            var_30h = NULL;\n            var_34h = &fcn.0046238c::var_4h;\n            var_38h = &fcn.0046238c::var_8h;\n            var_3ch = 0;\n            var_40h = 0;\n            var_68h = 0;\n            var_1088h._0_1_ = 0x5e;\n            var_48h = 0x462013;\n            var_44h = uVar9;\n            var_8h = var_10h;\n            fcn.004543b1(uVar9, 0, 0, var_38h, var_34h, 0, 0, 0, &fcn.0046238c::var_20h, var_20h, 0, var_18h, var_14h);\n            if (var_4h == 0) {\n                if (var_ch < 0x10001) {\n                    puVar1 = var_ch + (var_58h + 3) * var_5ch + 0x28;\n                    var_14h = 0x46204a;\n                    var_10h = puVar1;\n                    puVar5 = (**0x491490)();\n                    if (puVar5 == NULL) {\n                        var_4h = 0x15;\n                    }\n                    else {\n                        puVar5[1] = puVar1;\n                        *puVar5 = 0x50435245;\n                        puVar5[2] = var_44h;\n                        *(puVar5 + 3) = var_40h;\n                        *(puVar5 + 0xe) = 0;\n                        puVar5[5] = 0;\n                        *(puVar5 + 6) = 0x28;\n                        *(puVar5 + 0x1a) = var_58h;\n                        *(puVar5 + 7) = var_5ch;\n                        puVar5[8] = 0;\n                        puVar5[9] = 0;\n                        *(puVar5 + 0x1e) = 0;\n                        var_50h = var_54h;\n                        var_54h = 0;\n                        var_5ch = 0;\n                        var_60h = *(puVar5 + 6) + puVar5;\n                        var_10h = NULL;\n                        var_18h = NULL;\n                        var_64h = &fcn.0046238c::var_1088h;\n                        var_1ch = &fcn.0046238c::var_1ch;\n                        var_20h = &fcn.0046238c::var_20h;\n                        var_28h = 0;\n                        arg_34h = *(puVar5 + 7) * *(puVar5 + 0x1a) + var_60h;\n                        var_2ch = 0;\n                        var_68h = 0;\n                        var_30h = &fcn.0046238c::var_4h;\n                        var_8h = NULL;\n                        *arg_34h = 0x5e;\n                        var_40h = puVar5[2];\n                        var_34h = &fcn.0046238c::var_8h;\n                        var_38h = &fcn.0046238c::var_14h;\n                        var_3ch = var_40h & 7;\n                        var_44h = 0x46211b;\n                        var_74h = arg_34h;\n                        var_14h = arg_34h;\n                        fcn.004543b1(var_40h, var_3ch, var_38h, var_34h, var_30h, 0, 0, 0, var_20h, var_1ch, 0, arg_34h\n                                     , 0);\n                        *(puVar5 + 4) = var_54h;\n                        *(puVar5 + 0x12) = var_4ch;\n                        *(puVar5 + 3) = var_40h;\n                        if (var_38h != NULL) {\n                            var_1ch = 0xffffffff;\n                        }\n                        if ((var_4h == 0) && (*var_8h != '\\0')) {\n                            var_4h = 0x16;\n                        }\n                        *var_14h = 0;\n                        puVar6 = var_14h + (1 - arg_34h);\n                        puVar7 = var_64h;\n                        var_14h = var_18h;\n                        if (var_ch < puVar6) {\n                            var_4h = 0x17;\n                        }\n                        else {\n                            while (var_64h = puVar7,  var_18h = var_14h,  var_4h == 0) {\n                                if (puVar7 <= &fcn.0046238c::var_1088h) {\n                                    if (*(puVar5 + 4) <= *(puVar5 + 0x12) && *(puVar5 + 0x12) != *(puVar5 + 4)) {\n                                        var_4h = 0xf;\n                                    }\n                                    break;\n                                }\n                                var_64h = puVar7 + -2;\n                                uVar9 = CONCAT11(*var_64h, *(puVar7 + -1));\n                                var_10h = CONCAT11(*(uVar9 + arg_34h), *(uVar9 + 1 + arg_34h));\n                                var_1ch = 0x4621af;\n                                var_18h = arg_34h;\n                                iVar10 = fcn.0042f43d(arg_34h, var_14h, var_10h);\n                                if (iVar10 == 0) {\n                                    var_4h = 0x35;\n                                    break;\n                                }\n                                *(var_10h + arg_34h) = iVar10 - arg_34h >> 8;\n                                *(var_10h + 1U + arg_34h) = iVar10 - arg_34h;\n                                puVar7 = var_64h;\n                                var_14h = var_18h;\n                            }\n                        }\n                        puVar7 = var_18h;\n                        if (var_34h != NULL) {\n                            var_10h = 0xffffffff;\n                            var_14h = var_18h;\n                            var_1ch = 0x4621ff;\n                            var_18h = arg_34h;\n                            puVar7 = fcn.0042f43d(arg_34h, puVar7, 0xffffffff);\n                            while (puVar7 != NULL) {\n                                if (CONCAT11(*(puVar7 + 1), *(puVar7 + 2)) == 0) {\n                                    var_ch = (CONCAT11(*(puVar7 + -2), *(puVar7 + -1)) - 3) + puVar7;\n                                    var_10h = *var_ch;\n                                    *var_ch = 0;\n                                    var_18h = puVar5[2];\n                                    var_14h = 0x1;\n                                    var_20h = 0x462247;\n                                    var_1ch = puVar7;\n                                    iVar10 = fcn.0042f58d(puVar7, var_18h, 1, var_10h);\n                                    *var_ch = var_10h;\n                                    if (iVar10 < 0) {\n                                        var_4h = (-(iVar10 != -2) & 0xfffffff5) + 0x24;\n                                        goto code_r0x00462280;\n                                    }\n                                    *(puVar7 + 1) = iVar10 >> 8;\n                                    *(puVar7 + 2) = iVar10;\n                                }\n                                arg_ch_00 = var_18h;\n                                var_10h = 0xffffffff;\n                                var_14h = var_18h;\n                                var_18h = puVar7 + 3;\n                                var_1ch = 0x462270;\n                                puVar7 = fcn.0042f43d(var_18h, arg_ch_00, 0xffffffff);\n                            }\n                        }\n                        if (var_4h == 0) {\n                            arg_8h = puVar5[2];\n                            if ((arg_8h & 0x10) == 0) {\n                                var_10h = var_48h;\n                                var_14h = NULL;\n                                var_18h = &fcn.0046238c::arg_8h;\n                                var_20h = 0x4622db;\n                                var_1ch = arg_34h;\n                                iVar10 = fcn.0043eeff(arg_34h, var_18h, 0, var_48h);\n                                if (iVar10 == 0) {\n                                    uVar9 = var_20h;\n                                    if (var_20h < 0) {\n                                        var_10h = NULL;\n                                        var_14h = &fcn.0046238c::arg_8h;\n                                        var_1ch = 0x4622fb;\n                                        var_18h = arg_34h;\n                                        uVar9 = fcn.0043eccf(arg_34h, var_14h, 0);\n                                        if (uVar9 < 0) {\n                                            var_10h = var_48h;\n                                            var_14h = NULL;\n                                            var_1ch = 0x462338;\n                                            var_18h = arg_34h;\n                                            iVar10 = fcn.0043edd0(arg_34h, 0, var_48h);\n                                            if (iVar10 != 0) {\n                                                *(puVar5 + 3) = *(puVar5 + 3) | 8;\n                                            }\n                                            goto code_r0x00462344;\n                                        }\n                                    }\n                                    uVar4 = uVar9 & 0xff;\n                                    if (((uVar9 & 0x100) != 0) && (*(var_84h + uVar4) == uVar4)) {\n                                        uVar9 = uVar4;\n                                    }\n                                    *(puVar5 + 3) = *(puVar5 + 3) | 2;\n                                    *(puVar5 + 5) = uVar9;\n                                }\n                                else {\n                                    puVar5[2] = puVar5[2] | 0x10;\n                                }\n                            }\ncode_r0x00462344:\n                            if ((-1 < var_1ch) && (((*(puVar5 + 2) & 0x10) == 0 || ((var_1ch & 0x200) != 0)))) {\n                                if (((var_1ch & 0x100) != 0) && (*(var_84h + (var_1ch & 0xff)) == (var_1ch & 0xff))) {\n                                    var_1ch = var_1ch & 0xfffffeff;\n                                }\n                                *(puVar5 + 3) = *(puVar5 + 3) | 4;\n                                *(puVar5 + 0x16) = var_1ch;\n                            }\n                            return puVar5;\n                        }\ncode_r0x00462280:\n                        var_14h = 0x462287;\n                        var_10h = puVar5;\n                        (**0x491494)();\n                    }\n                }\n                else {\n                    var_4h = 0x14;\n                }\n            }\n        }\n        else {\ncode_r0x00461efe:\n            var_4h = 0x38;\n        }\n    }\n    else {\n        var_4h = 0x43;\n    }\n    goto code_r0x0046228a;\n}\n",
        "token_count": 5711
    },
    "004623c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004623c4(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00431228(0x4a8630, arg_8h);\n    fcn.00455e06(0x4a8630, **(*0x4a8690 + iVar1 * 4), 1);\n    if (arg_18h != 0) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x201, arg_14h, arg_10h << 0x10 | arg_ch & 0xffff);\n        return;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x204, arg_14h, arg_10h << 0x10 | arg_ch & 0xffff);\n    return;\n}\n",
        "token_count": 222
    },
    "0046280a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046280a(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint arg_14h;\n    \n    if ((*0x4974ea != '\\0') && (*0x4974e9 == '\\0')) {\n        if (*(arg_8h + 8) != 0) {\n            arg_8h_00 = **(arg_8h + 4);\n            arg_14h = 0;\n            arg_ch_00 = fcn.00452e60(arg_8h_00);\n            fcn.00460e76(0x4a876c, arg_ch_00, arg_8h_00, arg_14h);\n            fcn.00401a60();\n            return 0;\n        }\n        fcn.00402170();\n        fcn.00401a60();\n        return 0;\n    }\n    fcn.00403f40(1, 0);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 257
    },
    "004631a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004631a8(code **arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    uint *arg_ch_00;\n    uint uVar2;\n    uint var_10h;\n    \n    arg_8h_01 = &arg_10h;\n    fcn.00410d60();\n    uVar2 = 0x48b4b0;\n    arg_ch_00 = &var_10h;\n    *arg_ch = 0;\n    arg_8h_00 = fcn.00463170(arg_8h_01, arg_ch_00);\n    cVar1 = fcn.004456fa(arg_8h_00, arg_8h_01);\n    fcn.00402260(arg_ch_00, uVar2);\n    if (cVar1 != '\\0') {\n        fcn.0040e850();\n        if (*(*0x4a9604 + 0x2a) != '\\0') {\n            *arg_ch = 0x100;\n        }\n    }\n    cVar1 = fcn.004456fa(&arg_10h, L\"HKEY_LOCAL_MACHINE\");\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004456fa(&arg_10h, L\"HKLM\");\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004456fa(&arg_10h, L\"HKEY_CLASSES_ROOT\");\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.004456fa(&arg_10h, L\"HKCR\");\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.004456fa(&arg_10h, L\"HKEY_CURRENT_CONFIG\");\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.004456fa(&arg_10h, L\"HKCC\");\n                        if (cVar1 == '\\0') {\n                            cVar1 = fcn.004456fa(&arg_10h, L\"HKEY_CURRENT_USER\");\n                            if (cVar1 == '\\0') {\n                                cVar1 = fcn.004456fa(&arg_10h, L\"HKCU\");\n                                if (cVar1 == '\\0') {\n                                    cVar1 = fcn.004456fa(&arg_10h, L\"HKEY_USERS\");\n                                    if (cVar1 == '\\0') {\n                                        cVar1 = fcn.004456fa(&arg_10h, 0x48b598);\n                                        if (cVar1 == '\\0') {\n                                            fcn.00402260();\n                                            return 0;\n                                        }\n                                    }\n                                    *arg_8h = 0x80000003;\n                                    fcn.00402260();\n                                    return 1;\n                                }\n                            }\n                            *arg_8h = 0x80000001;\n                            fcn.00402260();\n                            return 1;\n                        }\n                    }\n                    *arg_8h = 0x80000005;\n                    fcn.00402260();\n                    return 1;\n                }\n            }\n            *arg_8h = 0x80000000;\n            fcn.00402260();\n            return 1;\n        }\n    }\n    *arg_8h = reloc.WSOCK32.dll_bind;\n    fcn.00402260();\n    return 1;\n}\n",
        "token_count": 763
    },
    "004634e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004634e2(uint *arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4e8h;\n    uint var_4e4h;\n    uint var_4e0h;\n    uint var_4dch;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    uint var_4bch;\n    char16_t var_4b8h;\n    uint var_4b6h;\n    uint var_4b2h;\n    uint var_4aeh;\n    uint var_4aah;\n    uint var_4a6h;\n    uint var_4a2h;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_484h;\n    uint var_480h;\n    uint var_47ch;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_462h;\n    uint var_45eh;\n    uint var_45ah;\n    uint var_456h;\n    uint var_452h;\n    uint var_44ch;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ah;\n    uint var_436h;\n    uint var_432h;\n    uint var_42eh;\n    uint var_42ah;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    ushort var_418h;\n    uint var_416h;\n    uint var_412h;\n    uint var_40eh;\n    uint var_40ah;\n    uint var_406h;\n    uint var_402h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint var_3f0h;\n    uint var_3ech;\n    uint var_3e8h;\n    uint var_3e4h;\n    uint var_3e0h;\n    uint var_3dch;\n    uint var_3d8h;\n    uint var_3d4h;\n    uint var_3d0h;\n    uint var_3cch;\n    uint var_3c8h;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint var_3bch;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    uint var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint var_37ch;\n    uint var_378h;\n    uint var_374h;\n    uint var_36eh;\n    uint var_36ah;\n    uint var_366h;\n    uint var_362h;\n    uint var_35ch;\n    uint var_358h;\n    uint var_354h;\n    uint var_350h;\n    uint var_34ah;\n    uint var_346h;\n    uint var_342h;\n    uint var_33eh;\n    uint var_33ah;\n    uint var_334h;\n    uint var_330h;\n    uint var_32ch;\n    ushort var_328h;\n    uint var_326h;\n    uint var_322h;\n    uint var_31eh;\n    uint var_31ah;\n    uint var_316h;\n    uint var_312h;\n    uint var_30ch;\n    uint var_308h;\n    uint var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_27eh;\n    uint var_27ah;\n    uint var_276h;\n    uint var_272h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    char16_t var_238h;\n    uint var_236h;\n    uint var_232h;\n    uint var_22eh;\n    uint var_22ah;\n    uint var_226h;\n    uint var_222h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    char16_t var_20ch;\n    uint var_20ah;\n    uint var_206h;\n    uint var_202h;\n    uint var_1feh;\n    uint var_1fah;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    ushort var_1bch;\n    uint var_1bah;\n    uint var_1b6h;\n    uint var_1b2h;\n    uint var_1aeh;\n    uint var_1aah;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    ushort var_194h;\n    uint var_192h;\n    uint var_18eh;\n    uint var_18ah;\n    uint var_186h;\n    uint var_182h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_13eh;\n    uint var_13ah;\n    uint var_136h;\n    uint var_132h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_eah;\n    uint var_e6h;\n    uint var_e2h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c2h;\n    uint var_beh;\n    uint var_bah;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    \n    var_4e8h = *0x484528;\n    var_4e0h = 0;\n    var_4dch = 0;\n    var_4d8h = 0;\n    var_4d4h = 0;\n    var_4d0h = 0;\n    var_4cch = 0;\n    var_4bch = str.wstr._4_4_;\n    var_4b6h = 0;\n    var_4b2h = 0;\n    var_4aeh = 0;\n    var_4aah = 0;\n    var_4a6h = 0;\n    var_4a2h._0_2_ = 0;\n    var_494h = *0x48458c;\n    var_490h = 0;\n    var_48ch = 0;\n    var_488h = 0;\n    var_484h = 0;\n    var_480h = 0;\n    var_47ch = 0;\n    var_468h._0_2_ = *0x4845f0;\n    var_4e4h = *0x48452c;\n    var_4b8h = str.wstr[4];\n    var_4c0h = str.wstr._0_4_;\n    stack0xfffffb96 = 0;\n    var_462h = 0;\n    var_45eh = 0;\n    var_45ah = 0;\n    var_456h = 0;\n    var_452h._0_2_ = 0;\n    var_440h._0_2_ = *0x4845a4;\n    var_498h = *0x484588;\n    var_470h = *0x4845e8;\n    var_46ch = *0x4845ec;\n    iVar3 = 0;\n    var_448h = *0x48459c;\n    var_444h = *0x4845a0;\n    stack0xfffffbbe = 0;\n    var_43ah = 0;\n    var_436h = 0;\n    var_432h = 0;\n    var_42eh = 0;\n    var_42ah._0_2_ = 0;\n    var_4c8h = 6;\n    var_4c4h = 4;\n    stack0xfffffb5c = 7;\n    var_49ch = 4;\n    var_478h = 4;\n    var_474h = 4;\n    stack0xfffffbac = 4;\n    var_44ch = 4;\n    stack0xfffffbd4 = 5;\n    var_424h = 4;\n    var_420h = *0x484590;\n    var_41ch = *0x484594;\n    var_418h = *0x484598;\n    var_416h = 0;\n    var_412h = 0;\n    var_40eh = 0;\n    var_40ah = 0;\n    var_406h = 0;\n    var_402h._0_2_ = 0;\n    var_3f8h = *0x4845a8;\n    var_3f0h = *0x4845b0;\n    var_3ech = 0;\n    var_3e8h = 0;\n    var_3e4h = 0;\n    var_3e0h = 0;\n    var_3dch = 0;\n    var_3cch = *0x4845b8;\n    var_3c4h = 0;\n    var_3c0h = 0;\n    var_3bch = 0;\n    var_3b8h = 0;\n    var_3b4h = 0;\n    var_3f4h = *0x4845ac;\n    var_3a8h = str.short._0_4_;\n    var_3d0h = *0x4845b4;\n    var_39ch = 0;\n    var_398h = 0;\n    var_394h = 0;\n    var_390h = 0;\n    var_38ch = 0;\n    var_3c8h = *0x4845bc;\n    var_380h = *0x4845cc;\n    var_374h._0_2_ = *0x4845d8;\n    var_3a0h = str.short._8_4_;\n    var_3d8h = 5;\n    var_3b0h = 5;\n    var_378h = *0x4845d4;\n    var_3a4h = str.short._4_4_;\n    stack0xfffffc8a = 0;\n    var_36eh = 0;\n    var_36ah = 0;\n    var_366h = 0;\n    var_362h._0_2_ = 0;\n    var_358h = *0x4845c0;\n    var_350h._0_2_ = *0x4845c8;\n    var_37ch = *0x4845d0;\n    var_354h = *0x4845c4;\n    stack0xfffffbfc = 4;\n    var_3fch = 4;\n    var_3d4h = 4;\n    var_3ach = 4;\n    var_388h = 2;\n    var_384h = 4;\n    stack0xfffffc9c = 3;\n    var_35ch = 4;\n    stack0xfffffcae = 0;\n    var_34ah = 0;\n    var_346h = 0;\n    var_342h = 0;\n    var_328h = *0x48460c;\n    var_33eh = 0;\n    var_33ah._0_2_ = 0;\n    var_330h = *0x484604;\n    var_326h = 0;\n    var_322h = 0;\n    var_31eh = 0;\n    var_31ah = 0;\n    var_316h = 0;\n    var_312h._0_2_ = 0;\n    var_308h = *0x48b4a4;\n    var_300h = *0x48b4ac;\n    var_2fch = 0;\n    var_2f8h = 0;\n    var_2f4h = 0;\n    var_2f0h = 0;\n    var_2ech = 0;\n    stack0xfffffcc4 = 3;\n    var_2dch = *0x4845f8;\n    var_32ch = *0x484608;\n    var_2d4h = *0x484600;\n    stack0xfffffcec = 1;\n    var_304h = *0x48b4a8;\n    var_2e8h = 1;\n    var_2c0h = 1;\n    var_2d0h = 0;\n    var_2cch = 0;\n    var_2c8h = 0;\n    var_2c4h = 0;\n    var_2e0h = *0x4845f4;\n    var_2b8h = str.float._0_4_;\n    var_2b0h = str.float._8_4_;\n    var_2d8h = *0x4845fc;\n    var_290h = str.double._0_4_;\n    var_284h._0_2_ = str.double[6];\n    var_2ach = 0;\n    var_2a8h = 0;\n    var_2a4h = 0;\n    var_2a0h = 0;\n    var_29ch = 0;\n    var_2b4h = str.float._4_4_;\n    var_288h = str.double._8_4_;\n    var_28ch = str.double._4_4_;\n    var_334h = 4;\n    var_30ch = 4;\n    var_2e4h = 4;\n    var_2bch = 4;\n    var_298h = 9;\n    var_294h = 4;\n    stack0xfffffd7a = 0;\n    var_27eh = 0;\n    var_27ah = 0;\n    var_276h = 0;\n    var_272h._0_2_ = 0;\n    stack0xfffffd8c = 10;\n    var_26ch = 8;\n    var_264h = *0x48450c;\n    var_260h = 0;\n    var_25ch = 0;\n    var_258h = 0;\n    var_254h = 0;\n    var_250h = 0;\n    var_24ch = 0;\n    var_23ch = str.hwnd._4_4_;\n    var_236h = 0;\n    var_232h = 0;\n    var_22eh = 0;\n    var_22ah = 0;\n    var_226h = 0;\n    var_222h._0_2_ = 0;\n    var_268h = *0x484508;\n    var_218h = str.handle._0_4_;\n    var_240h = str.hwnd._0_4_;\n    var_238h = str.hwnd[4];\n    var_210h = str.handle._8_4_;\n    var_20ah = 0;\n    var_206h = 0;\n    var_202h = 0;\n    var_1feh = 0;\n    var_1fah._0_2_ = 0;\n    var_214h = str.handle._4_4_;\n    var_20ch = str.handle[6];\n    var_1f0h = *0x4844b8;\n    var_1e8h = *0x4844c0;\n    var_1e0h = 0;\n    var_1dch = 0;\n    var_1d8h = 0;\n    var_1d4h = 0;\n    var_1ech = *0x4844bc;\n    var_1c8h = *0x4844a8;\n    var_1e4h = *0x4844c4;\n    var_1c0h = *0x4844b0;\n    var_1c4h = *0x4844ac;\n    var_1bch = *0x4844b4;\n    var_1bah = 0;\n    var_1b6h = 0;\n    var_1b2h = 0;\n    var_1aeh = 0;\n    var_1aah._0_2_ = 0;\n    var_1a0h = *0x48445c;\n    var_248h = 8;\n    var_244h = 4;\n    stack0xfffffddc = 8;\n    var_21ch = 4;\n    stack0xfffffe04 = 8;\n    var_1f4h = 4;\n    var_1d0h = 0xb;\n    var_1cch = 4;\n    stack0xfffffe54 = 0xb;\n    var_1a4h = 4;\n    var_19ch = *0x484460;\n    var_198h = *0x484464;\n    var_192h = 0;\n    var_18eh = 0;\n    var_18ah = 0;\n    var_186h = 0;\n    var_182h._0_2_ = 0;\n    var_178h = *0x48456c;\n    var_174h = *0x484570;\n    var_170h = *0x484574;\n    var_16ch = 0;\n    var_168h = 0;\n    var_164h = 0;\n    var_160h = 0;\n    var_15ch = 0;\n    var_150h = *0x48455c;\n    var_14ch = *0x484560;\n    var_148h = *0x484564;\n    var_144h._0_2_ = *0x484568;\n    var_194h = *0x484468;\n    stack0xfffffeba = 0;\n    var_13eh = 0;\n    var_13ah = 0;\n    var_136h = 0;\n    var_132h._0_2_ = 0;\n    var_154h = 8;\n    var_12ch = 8;\n    var_124h = str.int_ptr._4_4_;\n    var_128h = str.int_ptr._0_4_;\n    var_11ch = str.int_ptr._12_4_;\n    var_120h = str.int_ptr._8_4_;\n    var_118h = 0;\n    var_114h = 0;\n    var_110h = 0;\n    var_10ch = 0;\n    var_100h = *0x484494;\n    var_fch = *0x484498;\n    var_f8h = *0x48449c;\n    var_f0h._0_2_ = *0x4844a4;\n    var_f4h = *0x4844a0;\n    stack0xffffff0e = 0;\n    var_eah = 0;\n    var_e6h = 0;\n    var_e2h._0_2_ = 0;\n    var_d8h = *0x4844c8;\n    var_d4h = *0x4844cc;\n    stack0xfffffe7c = 0xc;\n    var_17ch = 4;\n    var_158h = 0xd;\n    stack0xfffffecc = 0xe;\n    var_108h = 0xb;\n    var_104h = 4;\n    stack0xffffff1c = 0xc;\n    var_dch = 4;\n    var_d0h = *0x4844d0;\n    var_cch = *0x4844d4;\n    var_c8h._0_2_ = *0x4844d8;\n    stack0xffffff36 = 0;\n    var_c2h = 0;\n    var_beh = 0;\n    var_bah._0_2_ = 0;\n    var_ach = *0x484484;\n    var_a4h = *0x48448c;\n    var_b0h = *0x484480;\n    var_9ch = 0;\n    var_98h = 0;\n    var_94h = 0;\n    var_a8h = *0x484488;\n    var_88h = *0x48446c;\n    var_a0h = *0x484490;\n    var_80h = *0x484474;\n    var_84h = *0x484470;\n    var_78h = *0x48447c;\n    var_7ch = *0x484478;\n    var_90h = 0xc;\n    var_74h = 0;\n    var_70h = 0;\n    var_6ch = 0;\n    var_68h = 0xc;\n    var_60h = str.idispatch._0_4_;\n    var_5ch = str.idispatch._4_4_;\n    var_58h = str.idispatch._8_4_;\n    var_54h = str.idispatch._12_4_;\n    stack0xffffff44 = 0xb;\n    var_b4h = 4;\n    var_8ch = 4;\n    var_64h = 4;\n    var_50h = str.idispatch._16_4_;\n    var_4ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0xf;\n    var_3ch = 4;\n    var_38h._0_2_ = 0;\n    stack0xffffffc6 = 0;\n    var_32h = 0;\n    var_2eh = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    var_22h = 0;\n    var_1eh = 0;\n    var_1ah._0_2_ = 0;\n    stack0xffffffe4 = 0;\n    var_14h = 0;\n    fcn.0040bf10();\n    arg_ch[3] = 0;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[5] = 0;\n    arg_ch[2] = 4;\n    while ((piVar1 = fcn.00402150(),  *piVar1 != 0 && (piVar1 = fcn.00402150(),  *piVar1 != 0x3b))) {\n        iVar3 = iVar3 + 1;\n    }\n    if (iVar3 == 0) goto code_r0x00464059;\n    fcn.00460e76(&var_10h, arg_8h, 0, iVar3);\n    fcn.00402150();\n    fcn.0040c8a0(arg_8h, 0);\n    if (var_ch == 0) {\ncode_r0x00463fdf:\n        arg_8h = &var_4e8h;\n        arg_ch[3] = 0;\n        iVar3 = 0;\n    }\n    else {\n        piVar1 = fcn.00402150();\n        if (*piVar1 != 0x2a) goto code_r0x00463fdf;\n        arg_ch[3] = 1;\n        fcn.0040c8a0(&var_10h, var_ch + -1);\n        arg_8h = &var_4e8h;\n        iVar3 = 0;\n    }\n    while (*arg_8h != 0) {\n        iVar2 = fcn.0041164b(arg_8h, var_10h);\n        if (iVar2 == 0) {\n            arg_ch[2] = (&var_4c8h)[iVar3 * 10];\n            if (arg_ch[3] == 1) {\n                arg_ch[4] = 4;\n            }\n            else {\n                arg_ch[4] = (&var_4c4h)[iVar3 * 10];\n            }\n            if (-1 < iVar3) {\n                fcn.00402260();\n                return 1;\n            }\n            break;\n        }\n        arg_8h = arg_8h + 10;\n        iVar3 = iVar3 + 1;\n        if (iVar3 < 0) {\n            fcn.00402260();\n            return 0;\n        }\n    }\ncode_r0x00464059:\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 6566
    },
    "004641ae": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004641ae(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint lpProcName;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    puVar3 = fcn.00452e60(*(*(arg_10h + 4) + 8));\n    var_18h = *puVar3;\n    var_14h = puVar3[1];\n    var_10h = puVar3[2];\n    var_ch = puVar3[3];\n    *var_ch = *var_ch + 1;\n    uVar4 = **(arg_10h + 4);\n    bVar1 = false;\n    cVar2 = fcn.0044357d(uVar4);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.0040c8f0();\n        if (0 < iVar5) {\n            iVar5 = *(arg_8h + 400);\n            iVar6 = fcn.0040c8f0();\n            if (iVar6 <= iVar5) {\n                iVar5 = fcn.0040c8f0();\n                iVar5 = **(*(arg_8h + 0x18c) + -4 + iVar5 * 4);\n                goto code_r0x00464242;\n            }\n        }\n    }\n    else {\n        uVar4 = fcn.00452e81(uVar4);\n        iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(uVar4);\n        bVar1 = true;\ncode_r0x00464242:\n        if (iVar5 != 0) {\n            var_8h = *(*(arg_10h + 4) + 8);\n            cVar2 = fcn.0044357d(var_8h);\n            if (cVar2 == '\\0') {\n                uVar4 = fcn.0040c8f0();\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, uVar4);\n                *arg_ch = iVar6;\n            }\n            else {\n                fcn.0040d610();\n                fcn.004581ef(&var_18h, &lpProcName);\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, lpProcName);\n                *arg_ch = iVar6;\n                fcn.00401350();\n            }\n            if (*arg_ch != 0) {\ncode_r0x0046432c:\n                fcn.00402260();\n                return iVar5;\n            }\n            cVar2 = fcn.0044357d(*(*(arg_10h + 4) + 8));\n            if (cVar2 != '\\0') {\n                fcn.004032d0(0x41);\n                fcn.0040d610();\n                fcn.004581ef(&var_18h, &lpProcName);\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, lpProcName);\n                *arg_ch = iVar6;\n                fcn.00401350();\n            }\n            if (*arg_ch != 0) goto code_r0x0046432c;\n            if (bVar1) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n            }\n            uVar4 = 3;\n            goto code_r0x0046424f;\n        }\n    }\n    uVar4 = 1;\ncode_r0x0046424f:\n    fcn.00403f40(uVar4, 0);\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 860
    },
    "0046484a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046484a(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint in_ECX;\n    uint uVar7;\n    uchar *arg_10h;\n    uchar *puVar8;\n    uint uStack60;\n    uchar auStack56 [3];\n    uchar uStack53;\n    uint uStack52;\n    uchar auStack48 [4];\n    uint uStack44;\n    uchar auStack40 [4];\n    uint uStack36;\n    uint uStack32;\n    uchar auStack24 [20];\n    \n    uVar7 = **(arg_8h + 4);\n    puVar8 = &uStack53;\n    arg_10h = auStack48;\n    uStack53 = 0;\n    uVar4 = fcn.00452e81(uVar7);\n    cVar3 = fcn.00443a5f(uVar4, uVar7, arg_10h);\n    if (cVar3 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(4, 0);\n        return 0;\n    }\n    if (uStack60._3_1_ != '\\0') {\n        uVar7 = 0;\n        iVar5 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, uStack52, puVar8);\n        pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n        if (iVar5 != 0) {\ncode_r0x004649ca:\n            iVar6 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar5, 0);\n            if (iVar6 == 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n                fcn.00403f80(uVar4, uVar7);\n                fcn.00403f40(3, 0);\n                fcn.004091e0();\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n            return 0;\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar5 == 5) {\n            uVar4 = 0;\n            uVar7 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)(0x28, 0, auStack40);\n            iVar5 = (*_sym.imp.ADVAPI32.dll_OpenThreadToken)(uVar7);\n            if (iVar5 == 0) {\n                uVar7 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, auStack56);\n                iVar5 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar7);\n                if (iVar5 == 0) {\n                    fcn.0045e1ee(in_ECX, 0x89, 0xffffffff);\n                    return 1;\n                }\n            }\n            uStack44 = 1;\n            uStack32 = 2;\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, L\"SeDebugPrivilege\", auStack40);\n            pcVar1 = _sym.imp.ADVAPI32.dll_AdjustTokenPrivileges;\n            uStack60 = 0x10;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(uVar4, 0, auStack56, 0x10, auStack40, &uStack60);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            iVar5 = (*pcVar2)();\n            if (iVar5 == 0) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, uStack36);\n                uVar4 = 0;\n                uVar7 = uStack44;\n                (*pcVar1)(uStack52, 0, auStack24, uStack44, 0, 0);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\n                if (iVar5 == 0) {\n                    return 0;\n                }\n                goto code_r0x004649ca;\n            }\n            fcn.00403f80(iVar5, 0);\n            uVar7 = 2;\n        }\n        else {\n            fcn.00403f80(iVar5, 0);\n            uVar7 = 1;\n        }\n        fcn.00403f40(uVar7, 0);\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 1071
    },
    "004653fe": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004653fe(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint *puVar3;\n    uint8_t *puVar4;\n    ushort *puVar5;\n    uint uVar6;\n    uint32_t *arg_8h_00;\n    char cVar7;\n    ushort uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    ushort *puVar11;\n    int32_t arg_8h_01;\n    int32_t in_ECX;\n    uint32_t uVar12;\n    int32_t unaff_EBX;\n    uint32_t *puVar13;\n    int32_t iVar14;\n    bool bVar15;\n    uint in_stack_fffffe28;\n    int32_t iStack444;\n    uint32_t uStack440;\n    uint32_t *puStack436;\n    int16_t *piStack432;\n    int32_t iStack428;\n    uint uStack420;\n    uint32_t *apuStack412 [3];\n    int32_t iStack400;\n    char16_t *pcStack396;\n    char16_t *pcStack392;\n    int32_t iStack388;\n    uint uStack384;\n    char16_t *pcStack380;\n    int32_t iStack376;\n    uint uStack372;\n    char16_t *pcStack368;\n    uint uStack364;\n    uint uStack360;\n    char16_t *pcStack356;\n    uint uStack352;\n    char16_t *pcStack348;\n    char16_t *pcStack344;\n    uint uStack340;\n    char16_t *pcStack336;\n    char16_t *pcStack332;\n    uint uStack328;\n    char16_t *pcStack324;\n    char16_t *pcStack320;\n    uint uStack316;\n    uint uStack312;\n    char16_t *pcStack308;\n    uint uStack304;\n    char16_t *pcStack300;\n    char16_t *pcStack296;\n    int32_t iStack292;\n    char16_t *pcStack288;\n    char16_t *pcStack284;\n    int32_t iStack280;\n    char16_t *pcStack276;\n    char16_t *pcStack272;\n    int32_t iStack268;\n    char16_t *pcStack264;\n    char16_t *pcStack260;\n    int32_t iStack256;\n    char16_t *pcStack252;\n    char16_t *pcStack248;\n    int32_t iStack244;\n    uint uStack240;\n    char16_t *pcStack236;\n    int32_t iStack232;\n    char16_t *pcStack228;\n    char16_t *pcStack224;\n    int32_t iStack220;\n    uint uStack216;\n    char16_t *pcStack212;\n    int32_t iStack208;\n    uint uStack204;\n    char16_t *pcStack200;\n    int32_t iStack196;\n    char16_t *pcStack192;\n    char16_t *pcStack188;\n    int32_t iStack184;\n    char16_t *pcStack180;\n    char16_t *pcStack176;\n    int32_t iStack172;\n    uint uStack168;\n    char16_t *pcStack164;\n    int32_t iStack160;\n    char16_t *pcStack156;\n    char16_t *pcStack152;\n    uint uStack148;\n    uint uStack144;\n    char16_t *pcStack140;\n    uint uStack136;\n    uint uStack132;\n    char16_t *pcStack128;\n    uint uStack124;\n    char16_t *pcStack120;\n    char16_t *pcStack116;\n    uint uStack112;\n    char16_t *pcStack108;\n    char16_t *pcStack104;\n    uint uStack100;\n    uint uStack96;\n    char16_t *pcStack92;\n    int32_t iStack88;\n    uint uStack84;\n    char16_t *pcStack80;\n    int32_t iStack76;\n    uint uStack72;\n    char16_t *pcStack68;\n    int32_t iStack64;\n    char16_t *pcStack60;\n    char16_t *pcStack56;\n    uint uStack52;\n    char16_t *pcStack48;\n    char16_t *pcStack44;\n    int32_t iStack40;\n    char16_t *pcStack36;\n    \n    iStack428 = *(arg_8h + 8);\n    iStack428 = fcn.00452e81(**(arg_8h + 4));\n    fcn.0040d530();\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    iStack292 = in_ECX + 0x10c;\n    iStack280 = in_ECX + 0x110;\n    iStack388 = in_ECX + 0xfd;\n    iStack256 = in_ECX + 0x100;\n    pcStack288 = L\"d10m0\";\n    pcStack276 = L\"d10m0\";\n    iStack400 = in_ECX + 0x108;\n    iStack376 = in_ECX + 0xfe;\n    iStack268 = in_ECX + 0x114;\n    iStack244 = in_ECX + 0xff;\n    pcStack396 = L\"d1r0,2\";\n    pcStack348 = L\"d1r0,2\";\n    pcStack252 = L\"d1r0,2\";\n    pcStack228 = L\"d1r0,2\";\n    iStack232 = in_ECX + 0x104;\n    iStack220 = in_ECX + 0x91;\n    apuStack412[2] = 0x489e3c;\n    pcStack392 = L\"ExpandEnvStrings\";\n    uStack384 = 0x489e90;\n    pcStack380 = L\"ExpandVarStrings\";\n    uStack372 = 0x489e90;\n    pcStack368 = L\"GUICloseOnESC\";\n    uStack364 = 0x4a8630;\n    uStack360 = 0x489ed8;\n    pcStack356 = L\"GUICoordMode\";\n    uStack352 = 0x4a8634;\n    pcStack344 = L\"GUIDataSeparatorChar\";\n    uStack340 = 0x4a8644;\n    pcStack336 = L\"d124c\";\n    pcStack332 = L\"GUIEventOptions\";\n    uStack328 = 0x4a8640;\n    pcStack324 = L\"d0r0,3\";\n    pcStack320 = L\"GUIOnEventMode\";\n    uStack316 = 0x4a863c;\n    uStack312 = 0x489e90;\n    pcStack308 = L\"GUIResizeMode\";\n    uStack304 = 0x4a8638;\n    pcStack300 = L\"d0r0,1023\";\n    pcStack296 = L\"MouseClickDelay\";\n    pcStack284 = L\"MouseClickDownDelay\";\n    pcStack272 = L\"MouseClickDragDelay\";\n    pcStack264 = L\"d250m0\";\n    pcStack260 = L\"MouseCoordMode\";\n    pcStack248 = L\"MustDeclareVars\";\n    uStack240 = 0x489e90;\n    pcStack236 = L\"PixelCoordMode\";\n    pcStack224 = L\"SendAttachMode\";\n    uStack216 = 0x489e90;\n    iStack208 = in_ECX + 0x90;\n    iStack196 = in_ECX + 0x88;\n    pcStack192 = L\"d5m0\";\n    pcStack180 = L\"d5m0\";\n    iStack172 = in_ECX + 0x118;\n    iStack160 = in_ECX + 0x478;\n    uStack204 = 0x489ed8;\n    uStack144 = 0x489ed8;\n    iStack76 = in_ECX + 0x2dd;\n    iStack88 = in_ECX + 0x2dc;\n    iStack64 = in_ECX + 0x2d8;\n    iStack184 = in_ECX + 0x8c;\n    pcStack36 = L\"d250m0\";\n    puVar3 = *(arg_8h + 4);\n    uStack168 = 0x489e90;\n    uStack132 = 0x489e90;\n    uStack96 = 0x489e90;\n    uStack84 = 0x489e90;\n    uStack72 = 0x489e90;\n    iStack40 = in_ECX + 0x2f4;\n    pcStack212 = L\"SendCapsLockMode\";\n    pcStack200 = L\"SendKeyDelay\";\n    pcStack188 = L\"SendKeyDownDelay\";\n    pcStack176 = L\"SetExitCode\";\n    pcStack164 = L\"TCPTimeout\";\n    pcStack156 = L\"d100m0\";\n    pcStack152 = L\"TrayAutoPause\";\n    uStack148 = 0x4a8716;\n    pcStack140 = L\"TrayIconDebug\";\n    uStack136 = 0x4974e9;\n    pcStack128 = L\"TrayIconHide\";\n    uStack124 = 0;\n    pcStack120 = L\"d0#1\";\n    pcStack116 = L\"TrayMenuMode\";\n    uStack112 = 0;\n    pcStack108 = L\"d0#2\";\n    pcStack104 = L\"TrayOnEventMode\";\n    uStack100 = 0x4a87b0;\n    pcStack92 = L\"WinDetectHiddenText\";\n    pcStack80 = L\"WinSearchChildren\";\n    pcStack68 = L\"WinTextMatchMode\";\n    pcStack60 = L\"d1r1,2\";\n    pcStack56 = L\"WinTitleMatchMode\";\n    uStack52 = 0;\n    pcStack48 = L\"d1#3\";\n    pcStack44 = L\"WinWaitDelay\";\n    cVar7 = fcn.0044357d(*puVar3);\n    if ((cVar7 != '\\0') && (*piStack432 != 0x2a)) {\n        puVar13 = puStack436;\n        if (puStack436 != 0x1) {\n            cVar7 = fcn.0044aa8e(puVar3[1]);\n            if (cVar7 == '\\0') {\n                unaff_EBX = fcn.0040c8f0();\n                puVar13 = puStack436;\n            }\n            else {\n                unaff_EBX = 0;\n                puVar13 = puStack436;\n            }\n        }\ncode_r0x0046584e:\n        puStack436 = puVar13;\n        iStack444 = 0;\n        piStack432 = 0x1e;\n        do {\n            iVar14 = piStack432 + iStack444 >> 1;\n            iVar9 = fcn.0041164b(puStack436, apuStack412[iVar14 * 3]);\n            if (iVar9 < 0) {\n                piStack432 = iVar14 + -1;\n            }\n            else {\n                if (iVar9 < 1) goto code_r0x004658a2;\n                iStack444 = iVar14 + 1;\n            }\n            if (piStack432 < iStack444) goto code_r0x00465e52;\n        } while( true );\n    }\ncode_r0x00465e57:\n    fcn.00403f40(1, in_stack_fffffe28);\ncode_r0x00465e60:\n    fcn.004091e0();\n    return 0;\ncode_r0x004658a2:\n    if (piStack432 < iStack444) {\ncode_r0x00465e52:\n        in_stack_fffffe28 = 0;\n        goto code_r0x00465e57;\n    }\n    arg_8h_01 = iVar14 * 0xc;\n    iVar9 = 0;\n    puVar13 = apuStack412[iVar14 * 3 + 2];\n    puStack436 = puVar13;\n    if (*puVar13 == 100) {\n        iVar9 = 1;\n        fcn.00433492(puVar13, &stack0xfffffe38, &iStack444);\n        fcn.004091e0();\n        uStack420 = 1;\n        iStack428 = iStack444;\n    }\n    else if (*puVar13 == 0x44) {\n        fcn.00411361(puVar13);\n        fcn.004013c0();\n        iVar9 = 2;\n        uVar1 = *(puVar13 + 1);\n        while ((uVar1 != 0 && (uVar1 != 0x27))) {\n            fcn.004032d0(uVar1);\n            iVar14 = iVar9 + 1;\n            iVar9 = iVar9 + 1;\n            uVar1 = *(puVar13 + iVar14 * 2);\n        }\n        iVar9 = iVar9 + 1;\n        fcn.0040e8e0();\n        fcn.00402260();\n        puVar13 = puStack436;\n    }\n    uVar12 = iVar9 + 1;\n    // switch table (84 cases) at 0x465e76\n    switch(*(puVar13 + iVar9 * 2)) {\n    case 0x23:\n        fcn.00433492(puStack436, &stack0xfffffe38, &iStack444);\n        uVar10 = *0x4a8728;\n        if (iStack444 == 1) {\n            bVar15 = *0x4974ea == '\\0';\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = bVar15;\n            if (1 < uStack440) {\n                cVar7 = fcn.0044aa8e(*(*(arg_8h + 4) + 4));\n                if (cVar7 != '\\0') {\n                    arg_8h_01 = fcn.0040c8f0();\n                }\n                if (arg_8h_01 == 0) {\n                    fcn.0040e430();\n                }\n                else {\n                    fcn.00401000();\n                }\n            }\n        }\n        else if (iStack444 == 2) {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = uVar10;\n            if (1 < uStack440) {\n                uVar6 = *(*(arg_8h + 4) + 4);\n                cVar7 = fcn.0044aa8e(uVar6);\n                if (cVar7 == '\\0') {\n                    cVar7 = fcn.0044aa8e(uVar6);\n                    if (cVar7 != '\\0') {\n                        uVar12 = fcn.0040c8f0();\n                    }\n                    *0x4a8714 = 0x101;\n                    *0x4a8717 = 1;\n                    bVar15 = (uVar12 & 1) != 0;\n                    if (bVar15) {\n                        *0x4a8714 = 0x100;\n                    }\n                    *0x4a8728 = bVar15;\n                    if ((uVar12 & 2) != 0) {\n                        *0x4a8728 = *0x4a8728 | 2;\n                        *0x4a8714 = *0x4a8714 & 0xff;\n                    }\n                    bVar15 = (uVar12 & 4) != 0;\n                    if (bVar15) {\n                        *0x4a8728 = *0x4a8728 | 4;\n                    }\n                    *0x4a871a = !bVar15;\n                    if ((uVar12 & 8) != 0) {\n                        *0x4a8728 = *0x4a8728 | 8;\n                        *0x4a8717 = 0;\n                    }\n                }\n            }\n        }\n        else {\n            if (iStack444 != 3) goto code_r0x00465e52;\n            uVar10 = *(in_ECX + 0x2d4);\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = uVar10;\n            if (1 < uStack440) {\n                cVar7 = fcn.0044aa8e(*(*(arg_8h + 4) + 4));\n                if (cVar7 != '\\0') {\n                    arg_8h_01 = fcn.0040c8f0();\n                }\n                iVar9 = fcn.0041365d(arg_8h_01);\n                if (3 < iVar9 - 1U) goto code_r0x00465e3e;\n                *(in_ECX + 0x2d4) = arg_8h_01;\n            }\n        }\n        break;\n    default:\n        goto code_r0x00465e52;\n    case 0x53:\n        fcn.0040e8e0();\n        if (1 < uStack440) {\n            uVar6 = *(*(arg_8h + 4) + 4);\n            cVar7 = fcn.0044aa8e(uVar6);\n            if (cVar7 == '\\0') {\n                fcn.00452e81(uVar6);\n                fcn.00402170();\n            }\n            else {\n                fcn.00452e81(&piStack432);\n                fcn.00402170();\n            }\n        }\n        break;\n    case 0x62:\n        puVar4 = *(apuStack412 + arg_8h_01 + 4);\n        uVar10 = *puVar4;\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = uVar10;\n        if (1 < uStack440) {\n            cVar7 = fcn.0044aa8e(*(*(arg_8h + 4) + 4));\n            if (cVar7 == '\\0') {\n                *puVar4 = uVar10 != 0;\n            }\n            else {\n                iVar9 = fcn.0040c8f0();\n                *puVar4 = iVar9 != 0;\n            }\n        }\n        break;\n    case 99:\n        puVar5 = *(apuStack412 + arg_8h_01 + 4);\n        fcn.0040e8e0();\n        if (1 < uStack440) {\n            uVar6 = *(*(arg_8h + 4) + 4);\n            cVar7 = fcn.0044aa8e(uVar6);\n            if (cVar7 == '\\0') {\n                puVar11 = fcn.00452e81(uVar6);\n                *puVar5 = *puVar11;\n            }\n            else {\n                uVar8 = fcn.0040c8f0();\n                *puVar5 = uVar8;\n            }\n        }\n        break;\n    case 0x69:\n        puVar13 = *(apuStack412 + arg_8h_01 + 4);\n        uVar10 = *puVar13;\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = uVar10;\n        if (1 < uStack440) {\n            cVar7 = fcn.0044aa8e(*(*(arg_8h + 4) + 4));\n            if (cVar7 == '\\0') {\n                *puVar13 = uVar10;\n            }\n            else {\n                uVar10 = fcn.0040c8f0();\n                *puVar13 = uVar10;\n            }\n        }\n        break;\n    case 0x6d:\n        puVar13 = *(apuStack412 + arg_8h_01 + 4);\n        uVar10 = *puVar13;\n        fcn.004091e0();\n        *arg_ch = uVar10;\n        arg_ch[2] = 1;\n        fcn.00433492(puStack436, &stack0xfffffe38, &iStack444);\n        if (1 < uStack440) {\n            cVar7 = fcn.0044aa8e(*(*(arg_8h + 4) + 4));\n            if (cVar7 == '\\0') {\n                if (uVar10 < unaff_EBX) {\n                    cVar7 = fcn.00453140(&piStack432);\n                    if (cVar7 == '\\0') {\ncode_r0x00465e3e:\n                        in_stack_fffffe28 = 0;\n                        goto code_r0x00465e57;\n                    }\n                    uVar10 = fcn.0040c8f0();\n                    *puVar13 = uVar10;\n                }\n                else {\n                    *puVar13 = uVar10;\n                }\n            }\n            else {\n                uVar10 = fcn.0040c8f0();\n                *puVar13 = uVar10;\n            }\n        }\n        break;\n    case 0x72:\n        puVar13 = *(apuStack412 + arg_8h_01 + 4);\n        uVar10 = *puVar13;\n        fcn.004091e0();\n        arg_8h_00 = puStack436;\n        arg_ch[2] = 1;\n        *arg_ch = uVar10;\n        fcn.00433492(puStack436, &stack0xfffffe38, &iStack444);\n        uVar12 = uVar12 + 1;\n        fcn.00433492(arg_8h_00, &stack0xfffffe38, &piStack432);\n        if (1 < uStack440) {\n            cVar7 = fcn.0044aa8e(*(*(arg_8h + 4) + 4));\n            if (cVar7 == '\\0') {\n                if ((uVar10 < unaff_EBX) || (puStack436 < uVar10)) {\n                    cVar7 = fcn.00453140(&piStack432);\n                    if (cVar7 == '\\0') goto code_r0x00465e47;\n                    uVar10 = fcn.0040c8f0();\n                    *puVar13 = uVar10;\n                }\n                else {\n                    *puVar13 = uVar10;\n                }\n            }\n            else {\n                uVar10 = fcn.0040c8f0();\n                *puVar13 = uVar10;\n            }\n        }\n        break;\n    case 0x76:\n        break;\n    }\n    puVar13 = puStack436 + uVar12 * 2;\n    iVar2 = *puVar13;\n    if (iVar2 == 0) goto code_r0x00465e60;\n    if (iVar2 != 0x2a) goto code_r0x00465e47;\n    goto code_r0x0046584e;\ncode_r0x00465e47:\n    in_stack_fffffe28 = 0;\n    goto code_r0x00465e57;\n}\n",
        "token_count": 5125
    },
    "00465eee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465eee(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int32_t *arg_ch_00;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint uStack68;\n    uchar *puStack64;\n    uchar auStack60 [4];\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    int32_t *piStack44;\n    \n    puVar2 = fcn.00452e60(**(arg_8h + 4));\n    uStack56 = *puVar2;\n    uStack52 = puVar2[1];\n    uStack48 = puVar2[2];\n    piStack44 = puVar2[3];\n    *piStack44 = *piStack44 + 1;\n    fcn.00410d60();\n    iVar6 = in_ECX;\n    cVar1 = fcn.00464ac0(in_ECX, uStack56, &stack0xffffffb8, &uStack68, &puStack64, auStack60);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00402260();\n        return 0;\n    }\n    if ((*(arg_8h + 8) == 2) && (iVar3 = fcn.0040c8f0(),  0 < iVar3)) {\n        fcn.0040c8f0();\n    }\n    arg_ch_00 = &stack0xffffffa8;\n    iVar3 = in_ECX + 0x458;\n    puStack64 = &stack0xffffffa0;\n    fcn.004304c7(puStack64, arg_ch_00);\n    while( true ) {\n        cVar1 = fcn.00441fc1(&stack0xffffff98, 0);\n        if (cVar1 == '\\0') {\n            fcn.0044b08e(&stack0xffffffb0);\n            uStack68 = uStack68._2_2_ << 0x10;\n            fcn.0040e410(&stack0xffffff9c);\n            uStack68 = (*_sym.imp.WINMM.dll_timeGetTime)();\n            fcn.0044a2ed(iVar3, &stack0xffffffac);\n            fcn.00402260();\n            fcn.00402260();\n            return 0;\n        }\n        iVar3 = *arg_ch_00;\n        piVar5 = arg_ch_00;\n        cVar1 = fcn.0040df20();\n        if (cVar1 != '\\0') break;\n        puStack64 = &stack0xffffff90;\n        iVar3 = iVar6;\n        fcn.00440543(puStack64, &stack0xffffff98);\n        arg_ch_00 = piVar5;\n        iVar6 = iVar3;\n    }\n    *(iVar3 + 0x11) = 0;\n    *(*arg_ch_00 + 0x18) = iVar6;\n    iVar6 = *arg_ch_00;\n    if (*(iVar6 + 0x10) == '\\0') {\n        uVar4 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        *(iVar6 + 0x14) = uVar4;\n    }\n    fcn.00403f80(1, 0);\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 796
    },
    "0046633a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046633a(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    if ((*(arg_8h + 0xd0) != '\\0') && (arg_ch != '\\0')) {\n        fcn.00431f2e(arg_8h + 0xd4);\n        fcn.004153c4(fcn.00466328, 0, arg_8h);\n        return *(arg_8h + 0x18) == 0;\n    }\n    uVar1 = fcn.004661fd(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 149
    },
    "00467186": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467186(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t in_ECX;\n    int32_t **ppiVar5;\n    uint unaff_EDI;\n    uint32_t uVar6;\n    uchar *arg_10h;\n    uchar *arg_14h;\n    uint arg_18h;\n    uint uVar7;\n    uint32_t uStack560;\n    int32_t iStack552;\n    uchar auStack536 [8];\n    uchar auStack528 [524];\n    \n    uStack560 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uStack560 = fcn.0040c8f0();\n    }\n    if (((uStack560 & 8) != 0) && ((uStack560 & 3) != 0)) {\n        uVar4 = **(arg_8h + 4);\n        uVar7 = 0;\n        arg_18h = 0;\n        arg_14h = auStack528;\n        arg_10h = auStack536;\n        arg_8h_00 = fcn.00452e81(uVar4);\n        fcn.00413bbe(arg_8h_00, uVar4, arg_10h, arg_14h, arg_18h);\n        fcn.00401c30(uVar7);\n        fcn.0040d510();\n        if (iStack552 != 0) {\n            cVar2 = fcn.00433fa3(in_ECX);\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.00433b76(in_ECX);\n                if (cVar2 == '\\0') {\n                    fcn.004091e0();\n                    arg_ch[2] = 1;\n                    *arg_ch = -1;\n                }\n            }\n        }\n        iVar3 = fcn.0040c8f0();\n        if (iVar3 == -1) {\n            fcn.00402260();\n            return 0;\n        }\n        fcn.00402260();\n        in_ECX = uStack560;\n    }\n    iVar3 = fcn.00411777(0x38);\n    if (iVar3 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = fcn.0040dd00();\n    }\n    uVar4 = fcn.00452e60(**(arg_8h + 4));\n    cVar2 = fcn.0040e1b0(uVar4);\n    if (cVar2 == '\\0') {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00403f80(uVar4, 0);\n        if (iVar3 != 0) {\n            fcn.0044aa71(iVar3);\n        }\n        fcn.004091e0();\n        *arg_ch = -1;\n        arg_ch[2] = 1;\n        return 0;\n    }\n    uVar1 = *(in_ECX + 0x180);\n    uVar6 = 0;\n    if (uVar1 != 0) {\n        ppiVar5 = *(in_ECX + 0x17c);\n        do {\n            if (**ppiVar5 == 0) break;\n            uVar6 = uVar6 + 1;\n            ppiVar5 = ppiVar5 + 1;\n        } while (uVar6 < uVar1);\n    }\n    if (uVar6 == uVar1) {\n        fcn.00411777(0x14);\n        fcn.00431f64(in_ECX + 0x178, &stack0xfffffdc4);\n    }\n    else {\n        uVar4 = fcn.00411777(0x14);\n        **(*(in_ECX + 0x17c) + uVar6 * 4) = uVar4;\n    }\n    ***(*(in_ECX + 0x17c) + uVar6 * 4) = 0;\n    *(**(*(in_ECX + 0x17c) + uVar6 * 4) + 4) = unaff_EDI;\n    fcn.004091e0();\n    *arg_ch = uVar6 + 1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 993
    },
    "004679fe": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004679fe(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint arg_10h_00;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg_8h + 0x14);\n    uVar1 = *(arg_8h + 0xc);\n    if (arg_10h != '\\0') {\n        fcn.00452ba7(arg_ch, *(arg_8h + 0xc));\n        arg_10h_00 = *(arg_8h + 8);\n        arg_8h_00 = fcn.004679dc(arg_ch);\n        fcn.00411000(arg_8h_00, arg_ch, arg_10h_00);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h + 0x14);\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "00467ab5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467ab5(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x20) != 0) {\n        uVar1 = fcn.004679fe(*(in_ECX + 0x20), arg_8h, arg_ch);\n        return uVar1;\n    }\n    if (arg_ch != '\\0') {\n        fcn.0040e8e0();\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "00467b19": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00467b19(uint arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, uint arg_24h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *arg_ch_00;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    uint *in_stack_ffffffcc;\n    uint uVar7;\n    uint var_10h;\n    \n    if (((arg_ch & 4) == 0) || (arg_1ch != -1)) {\n        fcn.0040bf10();\n        if (arg_20h == '\\0') {\n            if ((arg_ch & 1) == 0) {\n                fcn.00411000(&arg_20h, arg_10h, 2);\n                uVar6 = arg_20h;\n            }\n            else {\n                fcn.00411000(&arg_20h + 3, arg_10h, 1);\n                uVar6 = arg_20h._3_1_;\n            }\n            fcn.004434a2(&var_10h, uVar6);\n            fcn.0040e870();\n            fcn.00402260();\n            return 0;\n        }\n        cVar2 = fcn.00453140(arg_8h);\n        if (cVar2 == '\\0') {\n            puVar5 = fcn.00452e81(arg_8h);\n            arg_ch_00 = *puVar5;\n            in_stack_ffffffcc = &var_10h;\n        }\n        else {\n            fcn.0040c8f0();\n            arg_ch_00 = &var_10h;\n        }\n        fcn.004434a2(in_stack_ffffffcc, arg_ch_00);\n        fcn.0040e870();\n        puVar5 = fcn.00402150();\n        if ((arg_ch & 1) != 0) {\n            arg_20h = arg_20h & 0xffffff | *puVar5 << 0x18;\n            fcn.00411000(arg_10h, &arg_20h + 3, 1);\n            fcn.00402260();\n            return 0;\n        }\n        arg_20h = *puVar5;\n        fcn.00411000(arg_10h, &arg_20h, 2);\n        fcn.00402260();\n        return 0;\n    }\n    uVar6 = arg_14h - arg_18h;\n    if (arg_20h == '\\0') {\n        if ((arg_ch & 1) != 0) {\n            iVar3 = fcn.00411777(uVar6 + 1);\n            fcn.00411000(iVar3, arg_10h, uVar6);\n            *(iVar3 + uVar6) = 0;\n            uVar4 = fcn.00432f4e(iVar3, uVar6 + 1);\n            fcn.0040e8e0();\n            fcn.0041137c(uVar4);\n            fcn.0041137c(iVar3);\n            return 0;\n        }\n        iVar1 = ((uVar6 >> 1) + 1) * 2;\n        iVar3 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.00411000(iVar3, arg_10h, uVar6 & 0xfffffffe);\n        *((uVar6 & 0xfffffffe) + iVar3) = 0;\n        fcn.0040e8e0();\n        fcn.0041137c(iVar3);\n        return 0;\n    }\n    fcn.0040bf10();\n    if ((arg_ch & 1) != 0) {\n        arg_20h = uVar6;\n        iVar3 = fcn.00452e26(arg_8h);\n        if (iVar3 < uVar6) {\n            iVar3 = fcn.00452e26(arg_8h);\n            arg_20h = iVar3 + 1;\n        }\n        uVar7 = 0;\n        uVar4 = fcn.00452e60(arg_8h);\n        fcn.00460e76(&var_10h, uVar4, arg_8h, uVar7);\n        fcn.0040e870();\n        uVar4 = fcn.0040f8c0();\n        fcn.00411000(arg_10h, uVar4, arg_20h);\n        fcn.0041137c(uVar4);\n        fcn.00402260();\n        return 0;\n    }\n    uVar6 = uVar6 >> 1;\n    iVar3 = fcn.00452e26(arg_8h);\n    if (iVar3 < uVar6) {\n        iVar3 = fcn.00452e26(arg_8h);\n        uVar6 = iVar3 + 1;\n    }\n    uVar7 = 0;\n    uVar4 = fcn.00452e60(arg_8h);\n    fcn.00460e76(&var_10h, uVar4, arg_8h, uVar7);\n    fcn.0040e870();\n    fcn.00411000(arg_10h, var_10h, uVar6 * 2);\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1242
    },
    "0046817a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046817a(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch_00;\n    uint arg_10h;\n    uint uVar3;\n    uint var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar3 = 0x8000;\n    var_4h._0_1_ = *0x4974e7;\n    uVar2 = fcn.004142e9(arg_8h);\n    arg_ch_00 = fcn.004141fe(uVar2, uVar3);\n    var_8h = arg_ch_00;\n    cVar1 = fcn.00443aa7(arg_ch);\n    if (cVar1 == '\\0') {\n        fcn.0040d610();\n        uVar2 = fcn.00452e60(arg_ch);\n        fcn.004581ef(uVar2, &var_1ch);\n        var_ch = fcn.004144e0(arg_8h, 0x486e88, var_1ch);\n        if (var_4h != '\\0') {\n            uVar2 = fcn.00452e81(arg_ch);\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(uVar2);\n        }\n        fcn.00401350();\n        uVar2 = var_ch;\n        arg_ch_00 = var_8h;\n    }\n    else {\n        uVar2 = fcn.00442e6f(arg_ch);\n        arg_10h = 1;\n        uVar3 = fcn.004679dc(arg_ch);\n        uVar2 = fcn.00414466(uVar3, arg_ch, arg_10h, uVar2);\n    }\n    fcn.00414776(arg_8h);\n    if (arg_ch_00 == -1) {\n        arg_ch_00 = 0x4000;\n    }\n    uVar3 = fcn.004142e9(arg_8h);\n    fcn.004141fe(uVar3, arg_ch_00);\n    return uVar2;\n}\n",
        "token_count": 493
    },
    "0046868d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0046868d(uint32_t arg_8h, uint32_t *arg_ch, uchar *arg_10h, uchar *arg_14h, uchar *arg_18h, uchar *arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint32_t in_EAX;\n    int16_t *piVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    int32_t arg_ch_00;\n    int32_t iVar7;\n    uint var_10h;\n    \n    iVar4 = arg_8h;\n    arg_ch_00 = 0;\n    iVar7 = 0;\n    arg_8h = 0x1000000;\n    if (*(iVar4 + 4) == 0) {\ncode_r0x004687a8:\n        return in_EAX & 0xffffff00;\n    }\n    *arg_1ch = 0;\n    *arg_18h = 0;\n    *arg_14h = 0;\n    *arg_10h = 0;\n    *arg_ch = 0;\ncode_r0x004686cd:\n    while( true ) {\n        piVar3 = fcn.004362b4(iVar4, arg_ch_00);\n        iVar2 = *piVar3;\n        if (iVar2 != 0x2b) break;\ncode_r0x004686f0:\n        *arg_10h = 1;\n        arg_ch_00 = arg_ch_00 + 1;\n    }\n    if (((iVar2 == 0x5e) || (iVar2 == 0x21)) || (iVar2 == 0x23)) {\n        if (iVar2 == 0x2b) goto code_r0x004686f0;\n        if (iVar2 == 0x5e) {\n            *arg_14h = 1;\n            arg_ch_00 = arg_ch_00 + 1;\n        }\n        else if (iVar2 == 0x21) {\n            *arg_18h = 1;\n            arg_ch_00 = arg_ch_00 + 1;\n        }\n        else {\n            if (iVar2 == 0x23) {\n                *arg_1ch = 1;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n        }\n        goto code_r0x004686cd;\n    }\n    arg_1ch = arg_ch_00 + 1;\n    piVar3 = fcn.004362b4(iVar4, arg_ch_00);\n    if (*piVar3 != 0x7b) {\n        iVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(*piVar3);\n        in_EAX = iVar2;\n        *arg_ch = in_EAX;\n        if (in_EAX == 0xffffffff) goto code_r0x004687a8;\n        if ((in_EAX & 0x200) != 0) {\n            *arg_14h = 1;\n        }\n        if ((in_EAX & 0x400) != 0) {\n            *arg_18h = 1;\n        }\n        if ((in_EAX & 0x100) != 0) {\n            *arg_10h = 1;\n        }\n        goto code_r0x0046884a;\n    }\n    fcn.004013c0();\n    cVar1 = fcn.0045f9d3(0x7d, iVar4, &var_10h, &arg_1ch);\n    if (cVar1 == '\\0') {\ncode_r0x004687ed:\n        arg_8h = 0;\n        fcn.00402260();\n    }\n    else {\n        do {\n            iVar4 = fcn.0041164b(*(iVar7 * 4 + 0x492968), var_10h);\n            if (iVar4 == 0) break;\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < 0x62);\n        if (iVar7 == 0x62) {\n            puVar5 = fcn.00402150();\n            iVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(*puVar5);\n            uVar6 = iVar2;\n            *arg_ch = uVar6;\n            if (uVar6 == 0xffffffff) {\n                in_EAX = fcn.00402260();\n                goto code_r0x004687a8;\n            }\n            if ((uVar6 & 0x200) != 0) {\n                *arg_14h = 1;\n            }\n            if ((uVar6 & 0x400) != 0) {\n                *arg_18h = 1;\n            }\n            if ((uVar6 & 0x100) != 0) {\n                *arg_10h = 1;\n                fcn.00402260();\n                goto code_r0x0046884a;\n            }\n        }\n        else {\n            if (*(iVar7 + 0x492af0) != '\\0') goto code_r0x004687ed;\n            *arg_ch = str._f_b_b..__reepqrstuvwxyz________t__[iVar7];\n        }\n        fcn.00402260();\n    }\ncode_r0x0046884a:\n    *arg_ch = *arg_ch & 0xff;\n    return arg_ch & 0xffffff00 | arg_8h >> 0x18;\n}\n",
        "token_count": 1206
    },
    "004688d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004688d0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    if ((*(arg_8h + 0x24) != 0) && (*(arg_8h + 0x10) != '\\0')) {\n        fcn.004019e0();\n        iVar1 = fcn.0044c678(arg_8h, arg_ch, 1);\n        if (0 < iVar1) {\n            fcn.0040bf10();\n            arg_ch = 0;\n            if (0 < iVar1) {\n                do {\n                    fcn.0046885f(arg_8h, arg_ch, &var_14h);\n                    fcn.0040da60();\n                    arg_ch = arg_ch + 1;\n                } while (arg_ch < iVar1);\n            }\n            fcn.00402260();\n            return iVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 228
    },
    "00468a32": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468a32(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    \n    arg_8h_00 = *0x4a7f00;\n    if (arg_ch < 0x111) {\n        if (arg_ch == 0x110) {\n            if (*(*0x4a7f00 + 0x54) == 0) {\n                *(*0x4a7f00 + 0x54) = arg_8h;\n            }\n            uVar1 = fcn.004540ae(arg_8h_00);\n            return uVar1;\n        }\n        if (arg_ch == 5) {\n            fcn.0043561d(*0x4a7f00, arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n            return 1;\n        }\n        if (arg_ch == 0x24) {\n            *(arg_14h + 0x18) = 0xbe;\n            *(arg_14h + 0x1c) = 0x72;\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 1) {\n            fcn.00460612(*0x4a7f00);\n            return 1;\n        }\n        if ((arg_10h & 0xffff) == 2) {\n            fcn.004605eb(*0x4a7f00);\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x113) {\n        fcn.004606a2(*0x4a7f00, arg_10h);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 428
    },
    "00468b40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00468b40(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if (((*(arg_8h + 0x14) != 0) && (iVar1 = fcn.00411777(0x40),  iVar1 != 0)) &&\n       (iVar1 = fcn.00460752(iVar1, arg_8h, arg_ch, arg_10h, arg_14h),  iVar1 != 0)) {\n        if (arg_14h != 0) {\n            return iVar1;\n        }\n        fcn.0044c8b7(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 172
    },
    "00468d2e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468d2e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t arg_8h_00;\n    char cVar3;\n    int16_t *piVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint16_t *puVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar1 = arg_10h;\n    arg_8h_00 = arg_8h;\n    *(arg_8h + 0x88) = 0;\n    *(arg_8h + 0xd8) = 0;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    cVar3 = fcn.004362d6(iVar1);\n    iVar8 = arg_ch;\n    if (cVar3 == '\\0') {\n        piVar4 = fcn.004362b4(iVar1, 0);\n        if (*piVar4 == 0x5b) {\n            iVar8 = *(iVar1 + 4);\n            piVar4 = fcn.004362b4(iVar1, iVar8 + -1);\n            if (*piVar4 == 0x5d) {\n                arg_10h = iVar8 + -2;\n                arg_8h = 1;\ncode_r0x00468dbf:\n                do {\n                    while( true ) {\n                        while( true ) {\n                            cVar3 = fcn.0046146c(iVar1, &var_1ch, &var_2ch, &arg_8h, arg_10h);\n                            if (cVar3 == '\\0') goto code_r0x00469046;\n                            cVar3 = fcn.004456fa(&var_1ch, L\"CLASS\");\n                            if (cVar3 == '\\0') break;\n                            *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 1;\n                            fcn.0040e410(&var_2ch);\n                        }\n                        cVar3 = fcn.004456fa(&var_1ch, L\"CLASSNN\");\n                        if (cVar3 == '\\0') break;\n                        *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 8;\n                        fcn.0040e410(&var_2ch);\n                    }\n                    cVar3 = fcn.004456fa(&var_1ch, L\"REGEXPCLASS\");\n                    if (cVar3 == '\\0') {\n                        cVar3 = fcn.004456fa(&var_1ch, 0x484110);\n                        if (cVar3 != '\\0') {\n                            *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 0x20;\n                            uVar6 = fcn.00413330(var_2ch);\n                            *(arg_8h_00 + 0xcc) = uVar6;\n                            goto code_r0x00468dbf;\n                        }\n                        cVar3 = fcn.004456fa(&var_1ch, L\"NAME\");\n                        if (cVar3 != '\\0') {\n                            *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 0x400;\n                            fcn.0040e410(&var_2ch);\n                            goto code_r0x00468dbf;\n                        }\n                        cVar3 = fcn.004456fa(&var_1ch, L\"XYWH\");\n                        if (cVar3 != '\\0') {\n                            *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 0x40;\n                            uVar6 = fcn.00413330(var_2ch);\n                            *(arg_8h_00 + 0xdc) = uVar6;\n                            goto code_r0x00468dbf;\n                        }\n                        cVar3 = fcn.004456fa(&var_1ch, L\"YWH\");\n                        if (cVar3 != '\\0') {\n                            *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 0x80;\n                            uVar6 = fcn.00413330(var_2ch);\n                            *(arg_8h_00 + 0xe0) = uVar6;\n                            goto code_r0x00468dbf;\n                        }\n                        cVar3 = fcn.004456fa(&var_1ch, L\"WH\");\n                        if (cVar3 != '\\0') {\n                            *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 0x100;\n                            uVar6 = fcn.00413330(var_2ch);\n                            *(arg_8h_00 + 0xe4) = uVar6;\n                            goto code_r0x00468dbf;\n                        }\n                        cVar3 = fcn.004456fa(&var_1ch, L\"H\");\n                        if (cVar3 != '\\0') {\n                            *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 0x200;\n                            uVar6 = fcn.00413330(var_2ch);\n                            *(arg_8h_00 + 0xe8) = uVar6;\n                            goto code_r0x00468dbf;\n                        }\n                        cVar3 = fcn.004456fa(&var_1ch, 0x484134);\n                        if (cVar3 != '\\0') {\n                            *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 2;\n                            uVar6 = fcn.00413330(var_2ch);\n                            *(arg_8h_00 + 0xd0) = uVar6;\n                            goto code_r0x00468dbf;\n                        }\n                        cVar3 = fcn.004456fa(&var_1ch, L\"TEXT\");\n                        if (cVar3 != '\\0') {\n                            *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 4;\n                            fcn.0040e410(&var_2ch);\n                            goto code_r0x00468dbf;\n                        }\n                        cVar3 = fcn.0044ca16(&var_1ch, 0x483f68);\n                        bVar9 = cVar3 == '\\0';\n                    }\n                    else {\n                        *(arg_8h_00 + 0x88) = *(arg_8h_00 + 0x88) | 0x10;\n                        fcn.00401070();\n                        piVar5 = fcn.0046895c(arg_8h_00 + 0xec, &var_ch, &var_2ch);\n                        bVar9 = *piVar5 == 0;\n                    }\n                } while (bVar9);\n                goto code_r0x00468e75;\n            }\n        }\ncode_r0x00469046:\n        if (*(arg_8h_00 + 0x88) == 0) {\n            *(arg_8h_00 + 0x88) = 8;\n            fcn.0040e410(iVar1);\n        }\n        if ((*(arg_8h_00 + 0x88) & 8) != 0) {\n            iVar1 = *(arg_8h_00 + 0xa0);\n            *(arg_8h_00 + 0x134) = iVar1;\n            *(arg_8h_00 + 0x138) = 0;\n            if (iVar1 != 0) {\n                while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n                    puVar7 = fcn.00402150();\n                    iVar8 = fcn.0041339c(*puVar7);\n                    if (iVar8 == 0) break;\n                    *(arg_8h_00 + 0x138) = *(arg_8h_00 + 0x138) + 1;\n                }\n            }\n        }\n        pcVar2 = _sym.imp.USER32.dll_EnumChildWindows;\n        *(arg_8h_00 + 0x130) = 0;\n        (*pcVar2)(arg_ch, fcn.004613fb, arg_8h_00);\n        if ((*(arg_8h_00 + 0xd8) == 0) && ((*(arg_8h_00 + 0x88) & 8) != 0)) {\n            *(arg_8h_00 + 0x130) = 0;\n            *(arg_8h_00 + 0x88) = 4;\n            fcn.0040e410(arg_8h_00 + 0x9c);\n            (*pcVar2)(arg_ch, fcn.004613fb, arg_8h_00);\n        }\n        iVar8 = *(arg_8h_00 + 0xd8);\n        if (*(arg_8h_00 + 0xd8) == 0) {\ncode_r0x00468e75:\n            fcn.00402260();\n            fcn.00402260();\n            return 0;\n        }\n    }\n    fcn.0044ca32(arg_8h_00, iVar8);\n    fcn.00402260();\n    fcn.00402260();\n    return 1;\n}\n",
        "token_count": 2181
    },
    "004691e7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004691e7(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0046180b(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar3 = 2;\n    if (arg_10h == '\\0') {\n        uVar3 = 1;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x1102, uVar3, iVar1);\n    return uVar2 & 0xffffff00 | uVar2 != 0;\n}\n",
        "token_count": 172
    },
    "0046922d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046922d(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint *in_ECX;\n    uint var_b4h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint *var_8h;\n    \n    var_28h = *arg_10h;\n    var_20h = arg_10h[2];\n    var_24h = arg_10h[1];\n    var_1ch = arg_10h[3];\n    *var_1ch = *var_1ch + 1;\n    arg_18h = 0;\n    var_8h = in_ECX;\n    fcn.0040bf10();\n    if (arg_8h != 0) {\n        do {\n            arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 4, arg_8h);\n            if (arg_8h_00 != 0) {\n                cVar1 = fcn.004362d6(arg_10h);\n                if (cVar1 == '\\0') {\n                    fcn.0040d510();\n                    in_ECX = var_8h;\n                }\n                if (arg_14h == '\\0') {\n                    fcn.0046165b(in_ECX, arg_8h, &var_18h);\n                    fcn.0040bff0(&var_18h);\n                }\n                else {\n                    fcn.004131fc(arg_18h, &var_b4h, 10);\n                    fcn.004032d0(0x23);\n                    fcn.0040d510();\n                    in_ECX = var_8h;\n                }\n                cVar1 = fcn.0046922d(arg_8h_00, arg_ch, arg_10h, arg_14h, 0);\n                if (cVar1 != '\\0') goto code_r0x004693bc;\n                fcn.0040e410(&var_28h);\n            }\n            if (arg_8h == arg_ch) {\n                cVar1 = fcn.004362d6(arg_10h);\n                if (cVar1 == '\\0') {\n                    fcn.0040d510();\n                    in_ECX = var_8h;\n                }\n                if (arg_14h == '\\0') {\n                    fcn.0046165b(in_ECX, arg_8h, &var_18h);\n                    fcn.0040bff0(&var_18h);\n                }\n                else {\n                    fcn.004131fc(arg_18h, &var_b4h, 10);\n                    fcn.004032d0(0x23);\n                    fcn.0040d510();\n                }\ncode_r0x004693bc:\n                fcn.00402260();\n                fcn.00402260();\n                return 1;\n            }\n            arg_8h = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 1, arg_8h);\n            arg_18h = arg_18h + 1;\n        } while (arg_8h != 0);\n    }\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 790
    },
    "004694e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004694e2(uint *arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint var_10h;\n    \n    puVar3 = arg_8h;\n    fcn.00401c30();\n    cVar4 = fcn.00468ce4(arg_8h, &var_10h);\n    fcn.00402260();\n    if (cVar4 == '\\0') {\n        fcn.00401c30();\n        cVar4 = fcn.00468ce4(arg_8h, &var_10h);\n        fcn.00402260();\n        if (cVar4 == '\\0') {\n            return 0;\n        }\n        uVar7 = 0x18c;\n        arg_8h = 0x2;\n    }\n    else {\n        uVar7 = 0x14d;\n        arg_8h = 0x9;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar3, uVar7, 0xffffffff, *arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_GetDlgCtrlID;\n    if (iVar5 == -1) {\n        return 0;\n    }\n    uVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*puVar3, *puVar3);\n    uVar7 = (*_sym.imp.USER32.dll_GetParent)(*puVar3, 0x111, uVar6 & 0xffff | 0x10000);\n    (*pcVar2)(uVar7);\n    uVar6 = (*pcVar1)(*puVar3, *puVar3);\n    uVar7 = (*_sym.imp.USER32.dll_GetParent)(*puVar3, 0x111, uVar6 & 0xffff | arg_8h << 0x10);\n    (*pcVar2)(uVar7);\n    return 1;\n}\n",
        "token_count": 480
    },
    "004695ca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004695ca(uint *arg_8h, uint arg_ch)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint Msg;\n    \n    puVar3 = arg_8h;\n    fcn.00401c30();\n    cVar4 = fcn.00468ce4(arg_8h, &var_14h);\n    fcn.00402260();\n    if (cVar4 == '\\0') {\n        fcn.00401c30();\n        cVar4 = fcn.00468ce4(arg_8h, &var_14h);\n        fcn.00402260();\n        if (cVar4 == '\\0') {\n            return 0;\n        }\n        uVar5 = 0x188;\n        arg_8h = 0x18a;\n        Msg = 0x189;\n    }\n    else {\n        uVar5 = 0x147;\n        arg_8h = 0x149;\n        Msg = 0x148;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar3, uVar5, 0, 0);\n    if ((iVar6 != -1) && (iVar7 = (*pcVar2)(*puVar3, arg_8h, iVar6, 0),  iVar7 != -1)) {\n        iVar1 = (iVar7 + 0x101) * 2;\n        uVar5 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar3, Msg, iVar6, uVar5);\n        if (iVar6 != -1) {\n            fcn.00402170();\n            fcn.0041137c(uVar5);\n            return 1;\n        }\n        fcn.00402170();\n        fcn.0041137c(uVar5);\n    }\n    return 0;\n}\n",
        "token_count": 489
    },
    "004696e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004696e2(uint *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint var_10h;\n    \n    puVar3 = arg_8h;\n    fcn.00401c30();\n    cVar4 = fcn.00468ce4(arg_8h, &var_10h);\n    fcn.00402260();\n    if (cVar4 == '\\0') {\n        fcn.00401c30();\n        cVar4 = fcn.00468ce4(arg_8h, &var_10h);\n        fcn.00402260();\n        if (cVar4 == '\\0') {\n            return 0;\n        }\n        uVar5 = 0x186;\n        arg_8h = 0x2;\n    }\n    else {\n        uVar5 = 0x14e;\n        arg_8h = 0x9;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar3, uVar5, arg_ch, 0);\n    pcVar1 = _sym.imp.USER32.dll_GetDlgCtrlID;\n    if (iVar6 == -1) {\n        return 0;\n    }\n    uVar7 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*puVar3, *puVar3);\n    uVar5 = (*_sym.imp.USER32.dll_GetParent)(*puVar3, 0x111, uVar7 & 0xffff | 0x10000);\n    (*pcVar2)(uVar5);\n    uVar7 = (*pcVar1)(*puVar3, *puVar3);\n    uVar5 = (*_sym.imp.USER32.dll_GetParent)(*puVar3, 0x111, uVar7 & 0xffff | arg_8h << 0x10);\n    (*pcVar2)(uVar5);\n    return 1;\n}\n",
        "token_count": 476
    },
    "004697c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004697c8(uint *arg_8h, uint *lParam, uint32_t *arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_14h;\n    \n    fcn.00401c30();\n    cVar1 = fcn.00468ce4(arg_8h, &var_14h);\n    fcn.00402260();\n    if (cVar1 == '\\0') {\n        fcn.00401c30();\n        cVar1 = fcn.00468ce4(arg_8h, &var_14h);\n        uVar2 = fcn.00402260();\n        if (cVar1 == '\\0') {\n            return uVar2 & 0xffffff00;\n        }\n        uVar3 = 0x1a2;\n    }\n    else {\n        uVar3 = 0x158;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, uVar3, 0xffffffff, *lParam);\n    *arg_10h = uVar2;\n    return uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n}\n",
        "token_count": 275
    },
    "00469859": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00469859(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_10h;\n    \n    fcn.00401c30();\n    cVar1 = fcn.00468ce4(arg_8h, &var_10h);\n    fcn.00402260();\n    if (cVar1 == '\\0') {\n        fcn.00401c30();\n        cVar1 = fcn.00468ce4(arg_8h, &var_10h);\n        uVar3 = fcn.00402260();\n        if (cVar1 == '\\0') {\n            return uVar3 & 0xffffff00;\n        }\n        uVar2 = 0x182;\n    }\n    else {\n        uVar2 = 0x144;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, uVar2, arg_ch, 0);\n    return uVar3 & 0xffffff00 | uVar3 != 0;\n}\n",
        "token_count": 248
    },
    "004698e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004698e2(uint *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_10h;\n    \n    fcn.00401c30();\n    cVar1 = fcn.00468ce4(arg_8h, &var_10h);\n    fcn.00402260();\n    if (cVar1 == '\\0') {\n        fcn.00401c30();\n        cVar1 = fcn.00468ce4(arg_8h, &var_10h);\n        uVar2 = fcn.00402260();\n        if (cVar1 == '\\0') {\n            return uVar2 & 0xffffff00;\n        }\n        uVar3 = 0x180;\n    }\n    else {\n        uVar3 = 0x143;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, uVar3, 0, *arg_ch);\n    return uVar2 & 0xffffff00 | uVar2 != 0;\n}\n",
        "token_count": 251
    },
    "0046996d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046996d(uint hDlg, uint32_t arg_ch, int32_t lParam, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t unaff_EBX;\n    int32_t unaff_EDI;\n    int32_t in_stack_ffffff98;\n    int32_t iVar11;\n    int32_t iVar12;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    uint uStack52;\n    uint uStack48;\n    \n    iVar11 = 0x469987;\n    iStack72 = fcn.00431228(0x4a8630, hDlg);\n    iVar8 = **(*0x4a8690 + iStack72 * 4);\n    if (arg_ch == 2) {\n        if (*0x4a8630 == '\\0') {\n            return;\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(hDlg, 0x112, 0xf060, 0);\n        return;\n    }\n    if (arg_ch == 1) {\n        iStack72 = (*_sym.imp.USER32.dll_GetFocus)();\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iStack72);\n        fcn.004499ad(uVar5, &stack0xffffffb4);\n        uVar6 = fcn.0041365d(*(iVar8 + 0x1c8));\n        if (uVar5 != uVar6) {\n            return;\n        }\n        *(iVar8 + 0x1c8) = 0;\n        if (arg_14h != 0) {\n            return;\n        }\n        if (lParam != 0) {\n            return;\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(hDlg, 0x111, uVar5 & 0xffff, 0);\n        return;\n    }\n    uVar5 = arg_ch;\n    if (arg_14h == 0) {\n        if (lParam == 0) goto code_r0x00469aaa;\n    }\n    else if ((arg_14h == 1) && (lParam == 0)) {\n        arg_14h = 0;\n        goto code_r0x00469aaa;\n    }\n    in_stack_ffffff98 = 0x4a8630;\n    iVar11 = lParam;\n    unaff_EDI = fcn.00441878(0x4a8630, lParam);\n    uVar5 = unaff_EBX;\n    if (unaff_EDI == -1) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x111, arg_14h << 0x10 | arg_ch & 0xffff, lParam);\n        return;\n    }\ncode_r0x00469aaa:\n    cVar4 = fcn.004417f1(0x4a8630, unaff_EDI, &stack0xffffffb0, &stack0xffffffac);\n    if (cVar4 == '\\0') {\n        iVar11 = *(iVar8 + 0x1c8);\n        if (iVar11 != 0) {\n            *(iVar8 + 0x1c8) = 0;\n            fcn.0046243e(iVar11, 0);\n        }\n    }\n    else {\n        if (*(**(*0x4a86a4 + iVar11 * 4) + 0x88) == '\\x0f') {\n            uVar7 = fcn.00411777(0x208);\n            uVar1 = *(**(*0x4a86a4 + iVar11 * 4) + 8);\n            fcn.004130e0(&stack0xffffffac, 0, 0x2c);\n            uStack48 = 0x104;\n            uStack52 = uVar7;\n            iVar8 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar1, in_stack_ffffff98, 0, &stack0xffffffa8);\n            if ((iVar8 != 0) && ((uVar5 & 0x200) != 0)) {\n                iVar12 = -1;\n                iVar11 = (*_sym.imp.USER32.dll_GetMenuItemCount)(uVar1);\n                iVar8 = 0;\n                if (0 < iVar11) {\n                    do {\n                        iVar12 = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar8);\n                        iVar2 = iVar8;\n                        if (iVar12 == in_stack_ffffff98) goto joined_r0x00469bc1;\n                        iVar8 = iVar8 + 1;\n                    } while (iVar8 < iVar11);\n                }\n                iVar2 = iVar8;\n                if (iVar12 == in_stack_ffffff98) {\njoined_r0x00469bc1:\n                    do {\n                        iVar12 = iVar2;\n                        iVar2 = iVar12 + -1;\n                        uVar3 = uVar7;\n                        iVar9 = iVar8;\n                        if (iVar2 < 0) break;\n                        iVar9 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar1, iVar2, 1, &stack0xffffffa8);\n                    } while ((iVar9 == 0) || (uVar3 = uVar7,  iVar9 = iVar8,  (uVar5 & 0x200) != 0));\n                    do {\n                        iVar2 = iVar9;\n                        uStack52 = uVar3;\n                        iVar9 = iVar2 + 1;\n                        if (iVar11 <= iVar9) break;\n                        iVar10 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar1, iVar9, 1, &stack0xffffffa8);\n                        uVar3 = uStack52;\n                    } while ((iVar10 == 0) || ((uVar5 & 0x200) != 0));\n                    (*_sym.imp.USER32.dll_CheckMenuRadioItem)(uVar1, iVar12, iVar2, iVar8, 0x400);\n                }\n            }\n            fcn.0041137c(uVar7);\n        }\n        cVar4 = fcn.0046243e(in_stack_ffffff98, arg_14h);\n        if (cVar4 != '\\0') {\n            return;\n        }\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x111, arg_14h << 0x10 | arg_ch & 0xffff, lParam);\n    return;\n}\n",
        "token_count": 1475
    },
    "00469c7d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469c7d(uint hDlg, uint arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t nIDButton;\n    \n    nIDButton = fcn.00441878(0x4a8630, arg_ch);\n    if (nIDButton != -1) {\n        if (arg_10h == 8) {\n            if (*(**(*0x4a86a4 + nIDButton * 4) + 0x88) != '\\x12') goto code_r0x00469cf1;\n        }\n        else if ((arg_10h != 4) || (*(**(*0x4a86a4 + nIDButton * 4) + 0x88) != '\\x16')) goto code_r0x00469cf1;\n        cVar1 = fcn.0046243e(nIDButton, arg_10h);\n        if (cVar1 != '\\0') {\n            return;\n        }\n    }\ncode_r0x00469cf1:\n    if (arg_18h != 0) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x114);\n        return;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x115, arg_14h << 0x10 | arg_10h & 0xffff, arg_ch);\n    return;\n}\n",
        "token_count": 333
    },
    "00469d1a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00469d1a(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, uint32_t arg_24h, uint32_t arg_28h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (arg_10h != 0) {\n        if (arg_24h == 0xffffffff) {\n            arg_24h = 0;\n        }\n        if (arg_28h == 0xffffffff) {\n            arg_28h = 0;\n        }\n        if (arg_1ch == -1) {\n            arg_1ch = 0x96;\n        }\n        if (arg_20h == -1) {\n            arg_20h = 0x96;\n        }\n        *(arg_ch + 0x20) = arg_14h;\n        *(arg_ch + 0x21) = arg_1ch;\n        *(arg_ch + 0x82) = arg_18h;\n        *(arg_ch + 0x86) = arg_20h;\n        if (*(arg_8h + 0x1d0) == 0) {\n            iVar2 = fcn.00411777(0x1c);\n            if (iVar2 == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.004542ee(iVar2, ***(*0x4a8690 + *0x4a869c * 4));\n            }\n            *(arg_8h + 0x1d0) = uVar3;\n        }\n        iVar2 = fcn.00468b40(*(arg_8h + 0x1d0), arg_10h, arg_ch, arg_ch);\n        arg_ch[0x1e] = iVar2;\n        if (*arg_ch != 0) {\n            if (*0x4a8638 == 0) {\n                *(arg_ch + 0x7e) = 0x300;\n            }\n            pcVar1 = _sym.imp.USER32.dll_SetWindowLongW;\n            (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch, 0xfffffff0, arg_24h | 0x50010000);\n            (*pcVar1)(*arg_ch, 0xffffffec, arg_28h | 0x10000);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 575
    },
    "00469ece": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469ece(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = 1;\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.0040c8f0();\n    }\n    fcn.00468361(arg_8h_00);\n    return;\n}\n",
        "token_count": 94
    },
    "0046a759": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a759(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.0040c8f0();\n    fcn.00449fdf(&var_4h, in_ECX + 0x468);\n    cVar1 = fcn.0040f360(0);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(2, 0);\n        return 0;\n    }\n    if (*(arg_8h + 8) < 2) {\n        fcn.00432bdb(*var_4h + 0x18);\n    }\n    else {\n        cVar1 = fcn.00432bf8(*var_4h);\n        if (cVar1 == '\\0') {\n            fcn.00403f40(1, 0);\n        }\n        else {\n            uVar2 = *(*(arg_8h + 4) + 4);\n            cVar1 = fcn.00443aa7(uVar2);\n            if (cVar1 == '\\0') {\n                fcn.00452e81(uVar2);\n                uVar2 = fcn.0040f8c0();\n                uVar3 = fcn.004136e0(uVar2);\n            }\n            else {\n                uVar2 = fcn.004679dc(uVar2);\n                uVar3 = fcn.00442e6f(*(*(arg_8h + 4) + 4));\n            }\n            uVar3 = fcn.004432ab(*var_4h, uVar2, uVar3);\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = uVar3;\n            if (cVar1 == '\\0') {\n                fcn.0041137c(uVar2);\n            }\n        }\n    }\n    cVar1 = fcn.0044b40c(*var_4h);\n    if (cVar1 == '\\0') {\n        fcn.00456e82(in_ECX + 0x468, &var_4h);\n    }\n    return 0;\n}\n",
        "token_count": 517
    },
    "0046a8a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a8a6(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    int32_t in_ECX;\n    uint uVar6;\n    uint uVar7;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040e8e0();\n    uVar1 = *(arg_8h + 8);\n    if (uVar1 == 0) {\n        cVar2 = '\\0';\n    }\n    else {\n        cVar2 = fcn.00442cb5(**(arg_8h + 4));\n    }\n    if (uVar1 < 2) {\n        cVar3 = '\\0';\n    }\n    else {\n        cVar3 = fcn.00442cb5(*(*(arg_8h + 4) + 4));\n    }\n    if (*(in_ECX + 0x474) != 0) {\n        cVar4 = fcn.0044b26f(*(in_ECX + 0x474));\n        if (cVar4 != '\\0') {\n            if (cVar2 == '\\0') {\n                arg_8h_00 = fcn.00467a51(*(in_ECX + 0x474), arg_ch);\n            }\n            else {\n                arg_8h_00 = fcn.004679fe(*(in_ECX + 0x474), arg_ch, 1);\n            }\n            if (cVar3 == '\\0') {\n                fcn.0040bf10();\n                uVar7 = arg_8h_00;\n                uVar5 = fcn.004679dc(arg_ch);\n                uVar5 = fcn.00432f4e(uVar5, arg_ch);\n                uVar6 = 0;\n                fcn.00403e20(0);\n                fcn.0041137c(uVar5, uVar6, uVar7);\n                fcn.0040e870();\n                fcn.00402260();\n            }\n            fcn.00403f80(arg_8h_00, 0);\n            return 0;\n        }\n        fcn.00432cb4(*(in_ECX + 0x474));\n        *(in_ECX + 0x474) = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    fcn.00403f40(2, 0);\n    return 0;\n}\n",
        "token_count": 577
    },
    "0046a9f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046a9f2(int32_t arg_8h, int32_t arg_ch, uint arg_10h, code *arg_14h, code *arg_18h, code *arg_1ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    float10 fVar6;\n    uint var_1ch;\n    uint var_ch;\n    uint *var_4h;\n    double dStack12;\n    \n    fcn.0040e8e0();\n    fVar6 = fcn.0040bd40();\n    dStack12 = fVar6;\n    uVar1 = *(arg_ch + 8);\n    if (uVar1 < 2) {\n        cVar2 = '\\0';\n    }\n    else {\n        cVar2 = fcn.00442cb5(*(*(arg_ch + 4) + 4));\n    }\n    if (uVar1 < 3) {\n        cVar3 = '\\0';\n    }\n    else {\n        cVar3 = fcn.00442cb5(*(*(arg_ch + 4) + 8));\n    }\n    fcn.00449fdf(&var_4h, arg_8h + 0x468);\n    cVar4 = fcn.0040f360(0);\n    if (cVar4 != '\\0') {\n        cVar4 = (*arg_1ch)();\n        if (cVar4 == '\\0') {\n            fcn.00403f40(1, 0);\n        }\n        else {\n            if (cVar2 == '\\0') {\n                arg_8h_00 = (*arg_18h)(arg_10h);\n            }\n            else {\n                arg_8h_00 = (*arg_14h)(arg_10h, 1);\n            }\n            if (cVar3 == '\\0') {\n                fcn.0040bf10();\n                uVar5 = fcn.004679dc(arg_10h);\n                uVar5 = fcn.00432f4e(uVar5, arg_10h);\n                fcn.00403e20(0);\n                fcn.0041137c(uVar5);\n                fcn.0040e870();\n                fcn.00402260();\n            }\n            fcn.00403f80(arg_8h_00, 0);\n        }\n        cVar2 = fcn.0044b40c(*var_4h);\n        if (cVar2 == '\\0') {\n            fcn.00456e82(arg_8h + 0x468, &var_4h);\n        }\n        return 0;\n    }\n    fcn.00403f40(2, 0);\n    return 0;\n}\n",
        "token_count": 637
    },
    "0046af79": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046af79(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    uint unaff_ESI;\n    int32_t *piVar7;\n    uchar *puVar8;\n    uchar *arg_8h_00;\n    uint uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint32_t uVar12;\n    uchar *arg_8h_01;\n    int32_t iStack164;\n    int32_t *piStack160;\n    int32_t *piStack156;\n    uint in_stack_ffffff74;\n    uint in_stack_ffffff78;\n    uint uStack128;\n    uint uStack104;\n    int32_t *piStack96;\n    int32_t *piStack92;\n    uint uStack88;\n    uchar auStack76 [16];\n    uchar auStack60 [16];\n    uchar auStack44 [40];\n    \n    uStack88 = *(arg_8h + 8);\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    uStack128 = 0x46afc8;\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.00401c30();\n    arg_8h_00 = &stack0xffffffd4;\n    piStack156 = 0x46afe8;\n    fcn.0046338d(arg_8h_00, &stack0xffffffb4, &stack0xffffffc4, in_stack_ffffff74, in_stack_ffffff78);\n    iStack164 = 0;\n    piStack156 = piStack92;\n    piStack160 = piStack96;\n    *piStack92 = *piStack92 + 1;\n    arg_8h_01 = &stack0xffffff80;\n    cVar1 = fcn.004631a8(arg_8h_01, &stack0xffffff84, uStack104);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(2, 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        puVar8 = &stack0xffffffa0;\n        cVar1 = fcn.004362d6(puVar8);\n        piVar7 = piStack156;\n        if ((cVar1 == '\\0') &&\n           (iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(0, piStack156, &stack0xffffff60),  piVar7 = piStack160\n           ,  iVar3 != 0)) {\n            fcn.00403f80(iVar3, 0);\n            fcn.00403f40(3, 0);\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n        }\n        else {\n            puVar11 = &stack0xffffff5c;\n            uVar6 = arg_8h_00 | 0x2001f;\n            puVar10 = NULL;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(piVar7, unaff_ESI, 0, uVar6, puVar11);\n            if (iVar3 == 0) {\n                if (iStack164 == 1) {\n                    uVar2 = fcn.00441994(puVar8, arg_8h_00);\n                    uVar12 = puVar11 & 0xffffff | uVar2 << 0x18;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar8);\n                    if (arg_8h_01 >> 0x18 == '\\0') {\n                        fcn.00403f40(0xfffffffe, 0);\n                        fcn.004091e0();\n                        arg_ch[2] = 1;\n                        *arg_ch = 2;\n                    }\n                    else {\n                        puVar8 = &stack0xffffff68;\n                        cVar1 = fcn.004312d0(puVar8);\n                        if (cVar1 == '\\0') {\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(piVar7, uStack128, puVar8, uVar6, uVar12);\n                        }\n                        else {\n                            uVar9 = 0;\n                            puVar8 = &stack0xffffff64;\n                            uVar4 = uStack128;\n                            pcVar5 = fcn.00441971(puVar8);\n                            iVar3 = (*pcVar5)(puVar8, piVar7, uVar4, arg_8h_00, uVar9);\n                        }\n                        if (iVar3 != 0) {\n                            fcn.00403f80(iVar3, 0);\n                            fcn.00403f40(0xfffffffe, 0);\n                            fcn.004091e0();\n                            arg_ch[2] = 1;\n                            *arg_ch = 2;\n                        }\n                        fcn.00431858(&stack0xffffff64);\n                    }\n                }\n                else if (iStack164 == 2) {\n                    uVar4 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(puVar11, uVar4);\n                    if (iVar3 != 0) {\n                        if (iVar3 == 2) {\n                            fcn.004091e0();\n                            *arg_ch = 0;\n                        }\n                        else {\n                            fcn.00403f80(iVar3, 0);\n                            fcn.00403f40(0xfffffffe, 0);\n                            fcn.004091e0();\n                            *arg_ch = 2;\n                        }\n                        arg_ch[2] = 1;\n                    }\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar10);\n                }\n            }\n            else {\n                fcn.00403f80(iVar3, 0);\n                fcn.00403f40(1, 0);\n                fcn.004091e0();\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n                arg_8h_01 = puVar10;\n            }\n            if (arg_8h_01 != NULL) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(arg_8h_01);\n            }\n        }\n    }\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1514
    },
    "0046c402": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046c402(uint arg_8h, uint lpszProgID, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *ppv)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t *arg_10h_00;\n    char16_t *pbstr;\n    uint uVar4;\n    uint var_b8h;\n    uint lpclsid;\n    uint pServerInfo;\n    uint pv;\n    uint *var_90h;\n    uint var_88h;\n    uint var_84h;\n    uint var_78h;\n    int32_t *var_70h;\n    uint var_64h;\n    uint var_60h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint pResults;\n    int32_t *pProxy;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint dwAuthnSvc;\n    uint dwAuthzSvc;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    puVar1 = ppv;\n    ppv = NULL;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    dwAuthnSvc = 0;\n    dwAuthzSvc = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = NULL;\n    var_4h = 0;\n    fcn.004091e0();\n    bVar3 = *0x4a7f1a == '\\0';\n    puVar1[2] = 1;\n    *puVar1 = 0;\n    if (bVar3) {\n        (*_sym.imp.ole32.dll_OleInitialize)(0);\n        *0x4a7f1a = '\\x01';\n    }\n    iVar2 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(lpszProgID, &lpclsid);\n    if (iVar2 < 0) {\n        iVar2 = (*_sym.imp.ole32.dll_CLSIDFromString)(lpszProgID, &lpclsid);\n        if (iVar2 < 0) {\n            uVar4 = 0;\n            pbstr = NULL;\n            arg_10h_00 = NULL;\n            goto code_r0x0046c4a9;\n        }\n    }\n    var_78h._0_2_ = 9;\n    if (arg_10h == 0) {\n        iVar2 = (*_sym.imp.ole32.dll_CoCreateInstance)(&lpclsid, 0, 5, 0x481990, &ppv);\n        if (-1 < iVar2) {\n            fcn.004316bb(ppv);\n            iVar2 = (***ppv)(ppv, 0x4819a0, &var_70h);\n            (**(*ppv + 8))(ppv);\ncode_r0x0046c531:\n            if (-1 < iVar2) {\n                fcn.0046795f(&var_78h);\n                (**(*var_70h + 8))(var_70h);\n                fcn.00402260();\n                fcn.00402260();\n                fcn.00402260();\n                return 0;\n            }\n        }\n    }\n    else {\n        iVar2 = fcn.00458058(lpszProgID, arg_10h, &lpclsid, arg_14h, arg_18h);\n        if (-1 < iVar2) {\n            (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 2, 3, 0, 0, 0);\n            fcn.004130e0(&pServerInfo, 0, 0x10);\n            fcn.0043171c(arg_10h, &pv);\n            if (arg_14h == 0) {\n                var_90h = NULL;\n            }\n            else {\n                var_3ch = 1;\n                fcn.00402170();\n                iVar2 = fcn.00431ff2(&var_2ch, 0x4846b4);\n                if (iVar2 == -1) {\n                    var_4ch = 0;\n                    var_48h = 0;\n                    var_54h = var_2ch;\n                    var_50h = var_28h;\n                }\n                else {\n                    uVar4 = fcn.00464b13(&var_2ch, &var_b8h, iVar2);\n                    fcn.0040e410(uVar4);\n                    fcn.00402260();\n                    var_4ch = var_64h;\n                    var_48h = var_60h;\n                    uVar4 = fcn.00460f20(&var_2ch, &var_b8h, iVar2 + 1, 0xffffffff);\n                    fcn.0040e410(uVar4);\n                    fcn.00402260();\n                    var_54h = var_88h;\n                    var_50h = var_84h;\n                }\n                if (arg_18h == 0) {\n                    var_44h = 0;\n                    var_40h = 0;\n                }\n                else {\n                    var_44h = arg_18h;\n                    var_40h = fcn.00411361(arg_18h);\n                }\n                var_8h = &var_54h;\n                var_90h = &dwAuthnSvc;\n                dwAuthzSvc = 0;\n                var_4h = 0;\n                var_14h = 0;\n                var_10h = 2;\n                dwAuthnSvc = 9;\n                var_ch = 3;\n            }\n            var_70h = NULL;\n            fcn.004130e0(&pResults, 0, 0xc);\n            pProxy = var_70h;\n            pResults = 0x4819a0;\n            var_30h = 0;\n            iVar2 = (*_sym.imp.ole32.dll_CoCreateInstanceEx)(&lpclsid, 0, 0x15, &pServerInfo, 1, &pResults);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n            if ((-1 < iVar2) && (iVar2 = var_30h,  -1 < var_30h)) {\n                if (var_90h != NULL) {\n                    iVar2 = (*_sym.imp.ole32.dll_CoSetProxyBlanket)\n                                      (pProxy, dwAuthnSvc, dwAuthzSvc, var_14h, var_10h, var_ch, &var_54h, 0x800);\n                }\n                var_70h = pProxy;\n                var_78h._0_2_ = 9;\n                if (pProxy == NULL) {\n                    uVar4 = 1;\n                    pbstr = L\"NULL Pointer assignment\";\n                    iVar2 = 1;\n                    arg_10h_00 = pProxy;\n                    goto code_r0x0046c4a9;\n                }\n                goto code_r0x0046c531;\n            }\n        }\n    }\n    uVar4 = 0;\n    pbstr = NULL;\n    arg_10h_00 = NULL;\ncode_r0x0046c4a9:\n    uVar4 = fcn.00451712(arg_8h, iVar2, arg_10h_00, pbstr, uVar4);\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return uVar4;\n}\n",
        "token_count": 1777
    },
    "0046c796": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c796(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint in_ECX;\n    uchar *puVar5;\n    int32_t *piVar6;\n    int32_t *piStack124;\n    int32_t *piStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    int32_t *piStack100;\n    ushort uStack96;\n    uchar auStack92 [16];\n    int32_t *piStack76;\n    uchar auStack64 [4];\n    uint uStack60;\n    int32_t *piStack56;\n    uchar auStack52 [8];\n    ushort uStack44;\n    int32_t aiStack36 [2];\n    uchar auStack28 [24];\n    \n    uStack104 = *(arg_8h + 8);\n    piStack120 = fcn.00452e81(**(arg_8h + 4));\n    fcn.0040bf10();\n    piStack100 = *0x48a490;\n    uStack96 = *0x48a494;\n    fcn.0040bf10();\n    piStack124 = NULL;\n    uStack116 = 0;\n    fcn.0040e8e0();\n    if (*0x4a7f1a == '\\0') {\n        (*_sym.imp.ole32.dll_OleInitialize)(0);\n        *0x4a7f1a = '\\x01';\n    }\n    piVar6 = piStack120;\n    iVar2 = fcn.00411361(piStack120);\n    if (iVar2 == 0) {\n        if (iStack108 == 2) {\n            uVar3 = *(*(arg_8h + 4) + 4);\n            puVar5 = auStack28;\n            uVar4 = fcn.00452e81(uVar3);\n            iVar2 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(uVar4, uVar3, puVar5);\n            if (iVar2 < 0) goto code_r0x0046c8d3;\n        }\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayAllocDescriptor)(auStack28, 0, &puStack112);\n        if (-1 < iVar2) {\n            uStack60 = CONCAT22(uStack60._2_2_, 9);\n            iVar2 = (***puStack112)(puStack112, 0x4819a0, auStack52);\n            (**(*piStack124 + 8))(piStack124);\n            if (-1 < iVar2) {\n                fcn.0046795f(&uStack60);\n                piVar6 = piStack56;\n                goto code_r0x0046ca24;\n            }\n        }\n    }\n    else {\n        cVar1 = fcn.00433fa3(piVar6);\n        if (cVar1 != '\\0') {\n            fcn.00402170();\n            while (iVar2 = fcn.00431ff2(auStack92, &piStack100),  iVar2 != -1) {\n                uVar3 = fcn.00464b13(&piStack100, auStack52, iVar2 + 1);\n                fcn.0040bff0(uVar3);\n                fcn.00402260();\n                fcn.004032d0(0x5c);\n                fcn.0040c8a0(&piStack120, 0);\n            }\n            cVar1 = fcn.004362d6(&piStack100);\n            piVar6 = piStack76;\n            if (cVar1 == '\\0') {\n                fcn.0040bff0(&uStack104);\n                piVar6 = piStack76;\n            }\n        }\n        iVar2 = (*_sym.imp.ole32.dll_CreateBindCtx)(0, &piStack124);\n        if (-1 < iVar2) {\n            iVar2 = (*_sym.imp.ole32.dll_MkParseDisplayName)(piStack124, piVar6, &uStack104, &uStack116);\n            if (iVar2 < 0) {\n                piVar6 = NULL;\n                fcn.00451712(in_ECX, iVar2, 0, 0, 0);\n            }\n            else {\n                uStack44 = 9;\n                piVar6 = aiStack36;\n                iVar2 = (**(*piStack100 + 0x20))(piStack100, iStack108, 0, 0x4819a0);\n                if (iVar2 < 0) {\n                    fcn.00451712(in_ECX, iVar2, 0, 0, 0);\n                }\n                (**(*piStack120 + 8))(piStack120);\n                if (piStack56 != NULL) {\n                    fcn.0046795f(auStack64);\n                    (**(*uStack60 + 8))(uStack60);\n                }\n            }\ncode_r0x0046ca24:\n            (**(*piVar6 + 8))(piVar6);\n            fcn.00402260();\n            fcn.00402260();\n            return 0;\n        }\n    }\ncode_r0x0046c8d3:\n    uVar3 = fcn.00451712(in_ECX, iVar2, 0, 0, 0);\n    fcn.00402260();\n    fcn.00402260();\n    return uVar3;\n}\n",
        "token_count": 1218
    },
    "0046cdd9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046cdd9(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint arg_ch_00;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t **ppiVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t **var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    char var_1h;\n    \n    var_18h = *(arg_8h + 8);\n    var_ch = 0;\n    if (1 < var_18h) {\n        uVar3 = *(*(arg_8h + 4) + 4);\n        arg_1ch = &var_10h;\n        arg_18h = &var_1ch;\n        arg_14h = &var_20h;\n        arg_ch_00 = fcn.00452e81(uVar3);\n        cVar2 = fcn.00464ac0(in_ECX, arg_ch_00, uVar3, arg_14h, arg_18h, arg_1ch);\n        if (cVar2 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            fcn.00403f40(1, 0);\n            return 0;\n        }\n    }\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.00401c30();\n    cVar2 = fcn.0046868d(&var_30h, &var_10h, &var_5h + 2, &var_5h + 3, &var_5h + 1, &var_5h);\n    var_1h = cVar2 == '\\0';\n    fcn.00402260();\n    if (var_1h == '\\0') {\n        if ((var_10h == 0x13) && (var_5h._3_1_ != '\\0')) {\n            var_10h = 3;\n        }\n        if (var_5h._2_1_ != '\\0') {\n            var_ch = 4;\n        }\n        if (var_5h._3_1_ != '\\0') {\n            var_ch = var_ch | 2;\n        }\n        if (var_5h._1_1_ != '\\0') {\n            var_ch = var_ch | 1;\n        }\n        if (var_5h != '\\0') {\n            var_ch = var_ch | 8;\n        }\n        uVar1 = *(in_ECX + 0x1b0);\n        uVar6 = var_10h << 0x10 | var_ch;\n        uVar7 = 0;\n        if (uVar1 != 0) {\n            var_14h = *(in_ECX + 0x1ac);\n            do {\n                if ((**var_14h != 0) && (*(**var_14h + 4) == uVar6)) {\n                    if (var_18h != 1) {\n                        uVar3 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n                        fcn.0040e410(uVar3);\n                        return 0;\n                    }\n                    (*_sym.imp.USER32.dll_UnregisterHotKey)(*0x497518, **(*(in_ECX + 0x1ac))[uVar7]);\n                    iVar8 = **(*(in_ECX + 0x1ac) + uVar7 * 4);\n                    if (iVar8 != 0) {\n                        fcn.00442900(iVar8);\n                    }\n                    **(*(in_ECX + 0x1ac) + uVar7 * 4) = 0;\n                    return 0;\n                }\n                var_14h = var_14h + 1;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 < uVar1);\n        }\n        if (var_18h != 1) {\n            uVar7 = 0;\n            if (uVar1 != 0) {\n                ppiVar5 = *(in_ECX + 0x1ac);\n                do {\n                    if (**ppiVar5 == 0) break;\n                    uVar7 = uVar7 + 1;\n                    ppiVar5 = ppiVar5 + 1;\n                } while (uVar7 < uVar1);\n            }\n            iVar8 = 0x28;\n            if (uVar7 == uVar1) {\n                iVar8 = fcn.00411777(0x28);\n                if (iVar8 == 0) {\n                    var_18h = 0;\n                }\n                else {\n                    var_18h = fcn.0044a3e6(iVar8);\n                }\n                iVar8 = in_ECX + 0x1a8;\n                fcn.00431f64(iVar8, &var_18h);\n            }\n            else {\n                iVar4 = fcn.00411777(0x28);\n                if (iVar4 == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = fcn.0044a3e6(iVar4);\n                    iVar8 = iVar4;\n                }\n                **(*(in_ECX + 0x1ac) + uVar7 * 4) = uVar3;\n            }\n            ***(*(in_ECX + 0x1ac) + uVar7 * 4) = uVar7;\n            *(**(*(in_ECX + 0x1ac) + uVar7 * 4) + 4) = uVar6;\n            uVar3 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n            fcn.0040e410(uVar3);\n            uVar3 = fcn.00452e60(**(arg_8h + 4));\n            fcn.0040e410(uVar3);\n            iVar4 = (*_sym.imp.USER32.dll_RegisterHotKey)\n                              (*0x497518, ***(*(in_ECX + 0x1ac) + uVar7 * 4), var_ch, var_10h);\n            if (iVar4 != 0) {\n                return 0;\n            }\n            iVar4 = **(*(in_ECX + 0x1ac) + uVar7 * 4);\n            if (iVar4 != 0) {\n                fcn.00442900(iVar4);\n            }\n            **(*(in_ECX + 0x1ac) + uVar7 * 4) = 0;\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n            fcn.00403f80(uVar3, iVar8);\n        }\n    }\n    else if (var_10h == -1) {\n        fcn.00403f40(1, 0);\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 1671
    },
    "0046d8e5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d8e5(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint arg_14h;\n    uint arg_ch_00;\n    uint uVar2;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    char cVar3;\n    uint uVar4;\n    uchar auStack380 [112];\n    uint uStack268;\n    \n    if (1 < *(arg_8h + 8)) {\n        if (2 < *(arg_8h + 8)) {\n            fcn.0040c8f0();\n        }\n        if (3 < *(arg_8h + 8)) {\n            fcn.00442cb5(*(*(arg_8h + 4) + 0xc));\n        }\n        uVar2 = (*(arg_8h + 4))[1];\n        uVar4 = **(arg_8h + 4);\n        fcn.0044a957(&stack0xfffffe84, in_ECX + 0x10);\n        arg_14h = fcn.00452e81(uVar2);\n        arg_ch_00 = fcn.00452e81(uVar4);\n        uVar2 = fcn.0044a998(&stack0xffffff04, arg_ch_00, uVar4, arg_14h, uVar2, unaff_ESI);\n        fcn.00451e50(in_ECX + 4, uVar2);\n        fcn.0044a8b5(&stack0xfffffe70);\n        piVar1 = *(in_ECX + 8);\n        fcn.0046633a(*piVar1, 1);\n        cVar3 = '\\0';\n        fcn.00403f40(*(*piVar1 + 0x18), 0);\n        fcn.00403f80(*(*piVar1 + 0x1c), 0);\n        if (cVar3 == '\\0') {\n            uVar2 = *(*piVar1 + 8);\n            uVar4 = *(*piVar1 + 0xc);\n        }\n        else {\n            uVar2 = *(*piVar1 + 0xd8);\n            uVar4 = 0;\n        }\n        fcn.004091e0();\n        arg_ch[2] = 2;\n        *arg_ch = uVar2;\n        arg_ch[1] = uVar4;\n        if (cVar3 == '\\0') {\n            fcn.00451e12(in_ECX + 4);\n        }\n        return 0;\n    }\n    uStack268 = 0x46d911;\n    fcn.00403f40(1, 0);\n    uStack268 = 0x46d919;\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 642
    },
    "0046da49": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046da49(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint arg_10h;\n    uint arg_14h;\n    uint *arg_14h_00;\n    uint *puVar6;\n    uint *arg_18h;\n    uint var_a38h;\n    uint var_834h;\n    uint var_628h;\n    int16_t iStack1066;\n    uint var_424h;\n    uint var_218h;\n    uint var_14h;\n    uint var_ch;\n    \n    uVar1 = arg_8h;\n    if ((*(arg_8h + 8) == 3) && (iVar3 = fcn.0040c8f0(),  iVar3 != 0)) {\n        arg_8h = CONCAT31(arg_8h._1_3_, 1);\n    }\n    else {\n        arg_8h = arg_8h & 0xffffff00;\n    }\n    uVar4 = **(uVar1 + 4);\n    uVar5 = fcn.00452e60(uVar4);\n    cVar2 = fcn.004456fa(uVar5, uVar4);\n    if (cVar2 != '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0xb4) == 2) {\n        uVar4 = fcn.00452e81(**(uVar1 + 4));\n        fcn.00411707(&var_218h, uVar4);\n        iVar3 = fcn.00413fcf(&var_218h, 0x5c);\n        if (iVar3 == 0) {\n            fcn.00411707(&var_218h, *(in_ECX + 0xd8));\n            fcn.004116d6(&var_218h, 0x4846b4);\n            uVar4 = fcn.00452e81(**(uVar1 + 4));\n            fcn.004116d6(&var_218h, uVar4);\n        }\n        uVar4 = fcn.00452e81(*(*(uVar1 + 4) + 4));\n        fcn.00411707(&var_424h, uVar4);\n        cVar2 = fcn.00433f41(&var_424h);\n        if (cVar2 != '\\0') {\n            puVar6 = &var_424h;\n            iVar3 = fcn.00411361(puVar6);\n            if ((&iStack1066)[iVar3] != 0x5c) goto code_r0x0046db6b;\n        }\n        uVar4 = *(*(uVar1 + 4) + 4);\n        puVar6 = NULL;\n        uVar5 = fcn.00452e81(uVar4);\n        cVar2 = fcn.0044b9ae(&var_218h, uVar5, uVar4, arg_8h);\n        if (cVar2 != '\\0') {\n            return 0;\n        }\ncode_r0x0046db6b:\n        fcn.004091e0(puVar6);\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    puVar6 = fcn.0040f930(*(in_ECX + 200));\n    if (puVar6 != NULL) {\n        fcn.00403f80(puVar6, 0);\n        goto code_r0x0046db6b;\n    }\n    uVar4 = *(*(uVar1 + 4) + 4);\n    arg_18h = &var_218h;\n    arg_14h_00 = &var_a38h;\n    puVar6 = &var_14h;\n    uVar5 = fcn.00452e81(uVar4);\n    fcn.00413bbe(uVar5, uVar4, puVar6, arg_14h_00, arg_18h);\n    if ((var_218h == 0) && (var_628h == 0)) {\n        fcn.00411707(&var_218h, 0x4871a8);\n        fcn.00411707(&var_628h, 0x489d84);\n    }\n    fcn.00411707(&var_424h, &var_14h);\n    fcn.004116d6(&var_424h, &var_a38h);\n    fcn.004116d6(&var_424h, &var_218h);\n    fcn.004116d6(&var_424h, &var_628h);\n    uVar4 = **(uVar1 + 4);\n    puVar6 = &var_424h;\n    arg_14h = 0x4871a8;\n    arg_10h = 0x4871a8;\n    uVar5 = fcn.00452e81(uVar4);\n    fcn.00433d2d(uVar5, uVar4, arg_10h, arg_14h, puVar6);\n    cVar2 = fcn.00433fa3(&var_834h);\n    if (cVar2 == '\\x01') {\n        if (arg_8h == '\\x01') {\ncode_r0x0046dcaa:\n            uVar4 = fcn.00452e81(**(uVar1 + 4));\n            iVar3 = fcn.0045253c(&var_ch, uVar4);\n            if (iVar3 == 0) goto code_r0x0046dcee;\n            fcn.00403f80(iVar3, 0);\n        }\n    }\n    else if (cVar2 == '\\0') goto code_r0x0046dcaa;\n    fcn.004091e0();\n    *arg_ch = 0;\n    arg_ch[2] = 1;\ncode_r0x0046dcee:\n    fcn.0043241f(&var_ch);\n    return 0;\n}\n",
        "token_count": 1384
    },
    "0046e028": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e028(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t arg_8h_00;\n    int16_t *piVar5;\n    uint arg_10h_00;\n    \n    uVar4 = **(arg_ch + 4);\n    cVar2 = fcn.0044357d(uVar4);\n    if (cVar2 == '\\0') {\n        iVar3 = 0;\n        cVar2 = fcn.0045be08(arg_8h, &stack0xffffffe0, uVar4, 0);\n        if ((cVar2 == '\\0') || (iVar3 = *(**(*(arg_8h + 0x17c) + iVar3 * 4) + 4),  (*(iVar3 + 0x28) & 3) == 0))\n        goto code_r0x0046e088;\n    }\n    else {\n        iVar3 = fcn.00411777(0x38);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0040dd00();\n        }\n        uVar4 = fcn.00452e60(**(arg_ch + 4));\n        cVar2 = fcn.0040e1b0(uVar4);\n        if (cVar2 == '\\0') {\n            if (iVar3 != 0) {\n                fcn.0044aa71(iVar3);\n            }\ncode_r0x0046e088:\n            fcn.004091e0();\n            arg_10h[2] = 1;\n            *arg_10h = 0;\n            return 0;\n        }\n    }\n    uVar4 = *(*(arg_ch + 4) + 4);\n    cVar2 = fcn.00443aa7(uVar4);\n    if ((cVar2 != '\\0') || ((*(iVar3 + 0x28) & 0x10) != 0)) {\n        uVar4 = fcn.004679dc(uVar4);\n        arg_10h_00 = fcn.00442e6f(*(*(arg_ch + 4) + 4));\n        cVar2 = fcn.00443d04(iVar3, uVar4, arg_10h_00);\n        if (cVar2 == '\\0') {\n            fcn.004091e0();\n            arg_10h[2] = 1;\n            *arg_10h = 0;\n        }\n        goto code_r0x0046e18d;\n    }\n    arg_8h_00 = fcn.00452e60(uVar4);\n    if (arg_14h != '\\0') {\n        iVar1 = *(arg_8h_00 + 4);\n        if (iVar1 == 0) {\ncode_r0x0046e126:\n            fcn.004013c0();\n            fcn.0040e410(arg_8h_00);\n            fcn.0040d510();\n            fcn.004682e3(iVar3, &stack0xffffffc8);\n            fcn.00402260();\n            goto code_r0x0046e18d;\n        }\n        piVar5 = fcn.004362b4(arg_8h_00, iVar1 + -1);\n        if (*piVar5 != 0xd) {\n            piVar5 = fcn.004362b4(arg_8h_00, iVar1 + -1);\n            if (*piVar5 != 10) goto code_r0x0046e126;\n        }\n    }\n    fcn.004682e3(iVar3, arg_8h_00);\ncode_r0x0046e18d:\n    cVar2 = fcn.0044357d(**(arg_ch + 4));\n    if (cVar2 != '\\0') {\n        fcn.0040dcc0();\n        *(iVar3 + 0x2c) = 0;\n        *(iVar3 + 0x30) = 0;\n        fcn.0044aa71(iVar3);\n    }\n    return 0;\n}\n",
        "token_count": 956
    },
    "0046e1ed": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e1ed(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t extraout_ECX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.00432c18(in_ECX);\n    if (cVar1 == '\\0') {\n        if (*(extraout_ECX + 0x24) != 0) {\n            uVar2 = fcn.004679fe(*(extraout_ECX + 0x24), arg_8h, arg_ch);\n            return uVar2;\n        }\n        if (arg_ch != '\\0') {\n            fcn.0040e8e0();\n        }\n        return 0;\n    }\n    if (*(extraout_ECX + 0x20) != 0) {\n        uVar2 = fcn.004679fe(*(extraout_ECX + 0x20), unaff_retaddr, arg_8h);\n        return uVar2;\n    }\n    if (arg_8h != '\\0') {\n        fcn.0040e8e0();\n    }\n    return 0;\n}\n",
        "token_count": 260
    },
    "0046e372": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nint32_t __cdecl fcn.0046e372(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t arg_8h_00;\n    int16_t *piVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_28h;\n    uint var_18h;\n    int32_t var_8h;\n    \n    arg_8h_00 = arg_ch;\n    fcn.0040bf10();\n    iVar6 = 0;\n    arg_ch = 0;\n    var_8h = 0;\n    fcn.00402170();\n    iVar4 = *(arg_8h_00 + 4);\n    iVar7 = iVar6;\n    if (0 < iVar4) {\n        do {\n            piVar2 = fcn.004362b4(arg_8h_00, iVar7);\n            if (*piVar2 == 0x5c) {\n                iVar6 = iVar7 + 1;\n                arg_ch = iVar6;\n                if (iVar6 != iVar4) {\n                    var_28h = arg_8h_00;\n                    piVar2 = fcn.004362b4(arg_8h_00, iVar6);\n                    if (*piVar2 != 0x5c) {\n                        var_28h = arg_8h_00;\n                        piVar2 = fcn.004362b4(arg_8h_00, iVar6);\n                        if (*piVar2 != 0x24) {\n                            puVar3 = fcn.004362b4(arg_8h_00, iVar6);\n                            iVar4 = fcn.00413983(*puVar3);\n                            if (iVar4 != 0) {\n                                arg_ch = iVar7;\n                                uVar5 = fcn.004604bc(arg_8h_00, &arg_ch, 0);\n                                fcn.0046885f(arg_8h, uVar5, &var_18h);\n                                fcn.0040bff0(&var_18h);\n                                var_8h = var_8h + 1;\n                                iVar6 = arg_ch;\n                            }\n                            goto code_r0x0046e4a7;\n                        }\n                    }\ncode_r0x0046e490:\n                    iVar7 = iVar6 + 1;\n                    arg_ch = iVar7;\n                    puVar3 = fcn.004362b4(arg_8h_00, iVar6);\n                    uVar1 = *puVar3;\n                    goto code_r0x0046e49f;\n                }\n            }\n            else {\n                var_28h = arg_8h_00;\n                piVar2 = fcn.004362b4(arg_8h_00, iVar7);\n                iVar6 = iVar7;\n                if (*piVar2 != 0x24) goto code_r0x0046e490;\n                iVar6 = fcn.004604bc(arg_8h_00, &arg_ch, 1);\n                iVar4 = arg_ch;\n                if (-1 < iVar6) {\n                    fcn.0046885f(arg_8h, iVar6, &var_18h);\n                    fcn.0040bff0(&var_18h);\n                    var_8h = var_8h + 1;\n                    iVar6 = arg_ch;\n                    goto code_r0x0046e4a7;\n                }\n                iVar7 = arg_ch + 1;\n                arg_ch = iVar7;\n                puVar3 = fcn.004362b4(arg_8h_00, iVar4);\n                uVar1 = *puVar3;\ncode_r0x0046e49f:\n                fcn.004032d0(uVar1);\n                iVar6 = iVar7;\n            }\ncode_r0x0046e4a7:\n            iVar4 = *(arg_8h_00 + 4);\n            iVar7 = iVar6;\n        } while (iVar6 < iVar4);\n    }\n    uVar5 = fcn.00460f20(arg_8h_00, &var_28h, iVar6, 0xffffffff);\n    fcn.0040bff0(uVar5);\n    fcn.00402260();\n    if (var_8h == 0) {\n        var_8h = 1;\n    }\n    fcn.00402260();\n    return var_8h;\n}\n",
        "token_count": 1008
    },
    "0046e4f1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046e4f1(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_40h;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_8h;\n    if ((*(arg_8h + 0x24) != 0) && (cVar1 = fcn.004362d6(arg_8h),  cVar1 == '\\0')) {\n        arg_8h = 0;\n        fcn.0040c8a0(arg_14h, 0);\n        bVar4 = arg_10h == 0;\n        fcn.0040bf10();\n        fcn.0040bf10();\n        fcn.0040d610();\n        var_8h = 0xffffffff;\n        var_4h = 0;\n        var_ch = 0;\n        while (((iVar3 = var_ch,  bVar4 || (arg_10h != 0)) && (iVar2 = fcn.0044c678(arg_8h_00, &var_8h, 1),  iVar2 != 0)\n               )) {\n            fcn.0044c5e5(&var_20h, arg_8h_00, iVar3, **(arg_8h_00 + 0x2c) - iVar3);\n            fcn.0046043a(&var_20h, &var_30h);\n            fcn.0040bff0(&var_30h);\n            iVar3 = fcn.0046e372(arg_8h_00, arg_ch, &var_40h);\n            arg_8h = arg_8h + iVar3;\n            fcn.0040bff0(&var_40h);\n            arg_10h = arg_10h + -1;\n            fcn.00435085(&var_10h, &var_8h);\n        }\n        fcn.0044c5e5(&var_20h, arg_8h_00, iVar3, *(arg_8h_00 + 0x28) - iVar3);\n        fcn.0046043a(&var_20h, &var_30h);\n        fcn.0040bff0(&var_30h);\n        fcn.00401350();\n        fcn.00402260();\n        fcn.00402260();\n        return arg_8h;\n    }\n    return 0;\n}\n",
        "token_count": 626
    },
    "0046e631": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0046e631(int32_t *arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint uStack80;\n    int32_t *piStack76;\n    uchar auStack60 [12];\n    uchar auStack48 [4];\n    uchar auStack44 [40];\n    \n    fcn.00410c00();\n    piStack76 = arg_8h + 0x3b;\n    fcn.00410c00();\n    *(arg_8h + 1) = arg_24h;\n    *(arg_8h + 5) = arg_20h;\n    fcn.0040e410(arg_ch);\n    fcn.0040e410(arg_10h);\n    fcn.00402170();\n    arg_8h[4] = arg_18h;\n    arg_8h[0x33] = 1;\n    *(arg_8h + 3) = 1;\n    arg_8h[2] = 0;\n    arg_8h[0x34] = 0;\n    arg_8h[0x39] = 0;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    iVar8 = 0x46e6d7;\n    fcn.0040bf10();\n    iVar6 = arg_8h[4];\n    if (iVar6 < 0) {\n        iVar8 = fcn.0041365d(iVar6);\n        arg_8h[4] = iVar8;\n        *(arg_8h + 3) = 0;\n        iVar8 = iVar6;\n    }\n    if (arg_8h[4] == 4) {\n        fcn.00468b85(unaff_ESI);\n        arg_8h[4] = 1;\n        iVar8 = unaff_ESI;\n    }\n    cVar1 = fcn.004362d6(unaff_EDI);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.004362d6(arg_8h + 9),  cVar1 != '\\0')) {\n        uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        fcn.0044ca32(arg_8h, uVar2);\n        puVar7 = &stack0xffffff88;\ncode_r0x0046e73a:\n        fcn.00431f64(arg_14h, puVar7);\n        fcn.00402260();\n        fcn.00402260();\n        fcn.00402260();\n        return 1;\n    }\n    piVar3 = fcn.00402150();\n    if ((*piVar3 != 0x5b) || (piVar3 = fcn.00402150(),  *piVar3 != 0x5d)) {\ncode_r0x0046eb9c:\n        cVar1 = fcn.004362d6(&stack0xffffffd4);\n        if (cVar1 == '\\0') {\n            fcn.0040e410(&stack0xffffffd0);\n        }\n        if (arg_8h[2] == 0) {\n            arg_8h[2] = 1;\n        }\n        arg_8h[2] = arg_8h[2] | 4;\n        if (*(arg_8h + 3) == '\\0') {\n            fcn.00410d60();\n        }\n        if (((*(arg_8h + 2) & 1) != 0) && (*(arg_8h + 3) == '\\0')) {\n            fcn.00410d60();\n        }\n        if (arg_1ch == '\\0') {\n            (*_sym.imp.USER32.dll_EnumWindows)(fcn.00460d1e, arg_8h);\n        }\n        else {\n            uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            (*_sym.imp.USER32.dll_EnumChildWindows)(uVar2);\n        }\n        fcn.004453f9(arg_14h, iVar8);\n        fcn.00410c00();\n        if (0 < arg_8h[0x39]) {\n            fcn.0044ca32(arg_8h, ***(arg_14h + 4));\n        }\n        iVar6 = arg_8h[0x39];\n        fcn.00402260();\n        fcn.00402260();\n        fcn.00402260();\n        return iVar6;\n    }\n    iVar6 = arg_8h[6];\n    while( true ) {\n        puVar7 = &stack0xffffffc4;\n        uVar2 = arg_10h;\n        cVar1 = fcn.0046146c(arg_10h, &stack0xffffffb4, puVar7, &stack0xffffff94, iVar6 + -2);\n        if (cVar1 == '\\0') goto code_r0x0046eb9c;\n        cVar1 = fcn.004456fa(&stack0xffffffa0, L\"LAST\");\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.004456fa(&stack0xffffffa0, L\"ACTIVE\");\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.004456fa(&stack0xffffffb0, 0x483f68);\n            if (cVar1 != '\\0') {\n                arg_10h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x0046eb0f:\n                fcn.0044ca32(arg_8h, arg_10h);\n                puVar7 = &stack0xffffff90;\n                goto code_r0x0046e73a;\n            }\n            goto code_r0x0046ea71;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffa0, 0x484234);\n        if (cVar1 != '\\0') {\n            fcn.004331e4(uStack80, &stack0xffffff84);\n            iVar6 = (*_sym.imp.USER32.dll_IsWindow)(arg_10h);\n            if (iVar6 == 0) goto code_r0x0046eac8;\n            goto code_r0x0046eb0f;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffa0, L\"REGEXPTITLE\");\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004456fa(&stack0xffffffa0, L\"CLASS\");\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.004456fa(&stack0xffffffa0, L\"REGEXPCLASS\");\n                if (cVar1 != '\\0') {\n                    arg_8h[2] = arg_8h[2] | 0x10;\n                    piVar4 = arg_8h + 0x1e;\n                    fcn.00401070();\n                    puVar7 = &stack0xffffff98;\n                    goto code_r0x0046e84c;\n                }\n                cVar1 = fcn.004456fa(&stack0xffffffa0, L\"XYWH\");\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.004456fa(&stack0xffffffa0, L\"YWH\");\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.004456fa(&stack0xffffffa0, L\"WH\");\n                        if (cVar1 == '\\0') {\n                            cVar1 = fcn.004456fa(&stack0xffffffa0, L\"H\");\n                            if (cVar1 == '\\0') {\n                                cVar1 = fcn.004456fa(&stack0xffffffa0, 0x484134);\n                                if (cVar1 == '\\0') {\n                                    cVar1 = fcn.004456fa(&stack0xffffffa0, 0x48421c);\n                                    if (cVar1 == '\\0') {\n                                        cVar1 = fcn.004456fa(&stack0xffffffa0, L\"TITLE\");\n                                        if (cVar1 == '\\0') {\n                                            cVar1 = fcn.0044ca16(&stack0xffffffa0, 0x483f68);\n                                            arg_10h = uVar2;\n                                            if (cVar1 != '\\0') {\ncode_r0x0046ea71:\n                                                fcn.00402260();\n                                                fcn.00402260();\n                                                fcn.00402260();\n                                                return -1;\n                                            }\n                                        }\n                                        else {\n                                            if ((arg_8h[2] & 2U) != 0) {\n                                                fcn.00402260();\n                                                fcn.00402260();\n                                                fcn.00402260();\n                                                return -4;\n                                            }\n                                            arg_8h[2] = arg_8h[2] | 1;\n                                            fcn.0040e410(&stack0xffffffb0);\n                                            arg_10h = uVar2;\n                                        }\n                                    }\n                                    else {\n                                        cVar1 = fcn.004456fa(&stack0xffffffb0, 0x483f68);\n                                        if (cVar1 == '\\0') goto code_r0x0046ea71;\n                                        arg_8h[2] = arg_8h[2] | 0x40;\n                                        arg_10h = uVar2;\n                                    }\n                                }\n                                else {\n                                    arg_8h[2] = arg_8h[2] | 0x20;\n                                    iVar5 = fcn.00413330(uStack80);\n                                    arg_8h[0x33] = iVar5;\n                                    arg_10h = uVar2;\n                                }\n                            }\n                            else {\n                                arg_8h[2] = arg_8h[2] | 0x400;\n                                iVar5 = fcn.00413330(uStack80);\n                                arg_8h[0x38] = iVar5;\n                                arg_10h = uVar2;\n                            }\n                        }\n                        else {\n                            arg_8h[2] = arg_8h[2] | 0x200;\n                            iVar5 = fcn.00413330(uStack80);\n                            arg_8h[0x37] = iVar5;\n                            arg_10h = uVar2;\n                        }\n                    }\n                    else {\n                        arg_8h[2] = arg_8h[2] | 0x100;\n                        iVar5 = fcn.00413330(uStack80);\n                        arg_8h[0x36] = iVar5;\n                        arg_10h = uVar2;\n                    }\n                }\n                else {\n                    arg_8h[2] = arg_8h[2] | 0x80;\n                    iVar5 = fcn.00413330(uStack80);\n                    arg_8h[0x35] = iVar5;\n                    arg_10h = uVar2;\n                }\n            }\n            else {\n                arg_8h[2] = arg_8h[2] | 8;\n                fcn.0040e410(&stack0xffffffb0);\n                arg_10h = uVar2;\n            }\n        }\n        else {\n            if ((arg_8h[2] & 1U) != 0) {\n                fcn.00402260();\n                fcn.00402260();\n                fcn.00402260();\n                return -3;\n            }\n            piVar4 = arg_8h + 0xd;\n            arg_8h[2] = arg_8h[2] | 2;\n            fcn.00401070();\n            puVar7 = &stack0xffffff90;\ncode_r0x0046e84c:\n            piVar4 = fcn.0046895c(piVar4, puVar7, &stack0xffffffb0);\n            arg_10h = uVar2;\n            if (*piVar4 != 0) {\n                fcn.00402260();\n                fcn.00402260();\n                fcn.00402260();\n                return -2;\n            }\n        }\n    }\n    cVar1 = fcn.004456fa(&stack0xffffffb0, 0x483f68);\n    if (cVar1 != '\\0') {\n        if (*arg_8h == 0) {\ncode_r0x0046eac8:\n            fcn.00402260();\n            fcn.00402260();\n            fcn.00402260();\n            return 0;\n        }\n        goto code_r0x0046e73a;\n    }\n    goto code_r0x0046ea71;\n}\n",
        "token_count": 2882
    },
    "0046ed10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ed10(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint unaff_EBX;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint auStack112 [2];\n    uchar auStack104 [12];\n    uchar auStack92 [88];\n    \n    fcn.0040d5d0();\n    arg_8h_01 = **(arg_8h + 4);\n    uVar1 = fcn.00452e60(arg_8h_01);\n    fcn.00452e60(*(*(arg_8h + 4) + 4));\n    arg_8h_00 = *(*(arg_8h + 4) + 8);\n    auStack112[0] = fcn.00452e60(arg_8h_00);\n    if (3 < *(arg_8h + 8)) {\n        fcn.0040c8f0();\n    }\n    fcn.0046895c(auStack92, &stack0xffffff88, unaff_EBX);\n    if (arg_8h_01 != 0) {\n        fcn.0040e870();\n        fcn.00403f40(2, 0);\n        fcn.00403f80(arg_8h_00 + 1, 0);\n        fcn.00401380();\n        return 0;\n    }\n    fcn.004605cb(auStack104, uVar1);\n    fcn.004013c0();\n    uVar1 = fcn.0046e4f1(auStack112, arg_8h_01, unaff_EBX, &stack0xffffff80);\n    fcn.0040e870();\n    fcn.00403f80(uVar1, 0);\n    fcn.00402260();\n    fcn.00401380();\n    return 0;\n}\n",
        "token_count": 431
    },
    "0046ee85": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ee85(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint arg_ch_00;\n    int16_t *piVar7;\n    int32_t in_ECX;\n    uint32_t uVar8;\n    int32_t arg_ch_01;\n    int32_t iVar9;\n    uint unaff_EDI;\n    uint arg_8h_00;\n    int32_t iVar10;\n    uint32_t arg_8h_01;\n    int32_t **ppiVar11;\n    uint32_t uVar12;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t *piStack44;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t *piStack20;\n    \n    iVar4 = fcn.00411777(0x340);\n    if (iVar4 == 0) {\n        iStack52 = 0;\n    }\n    else {\n        iStack56 = fcn.0044a115(iVar4);\n    }\n    iVar2 = iStack56;\n    iVar4 = *(*(arg_8h + 4) + 4);\n    arg_ch_01 = iStack56 + 0x10;\n    puVar5 = fcn.00452e60(iVar4);\n    uStack32 = *puVar5;\n    uStack28 = puVar5[1];\n    uStack24 = puVar5[2];\n    piStack20 = puVar5[3];\n    *piStack20 = *piStack20 + 1;\n    fcn.0045316c(&uStack32);\n    arg_8h_01 = *(*(arg_8h + 4) + 8);\n    piVar6 = fcn.00452e60(arg_8h_01);\n    iStack56 = *piVar6;\n    iStack52 = piVar6[1];\n    iStack48 = piVar6[2];\n    piStack44 = piVar6[3];\n    *piStack44 = *piStack44 + 1;\n    fcn.0045316c(&iStack56);\n    uVar1 = *(in_ECX + 0x1a0);\n    uVar8 = 0;\n    uVar12 = 0;\n    if (uVar1 != 0) {\n        ppiVar11 = *(in_ECX + 0x19c);\n        do {\n            uVar12 = uVar8;\n            if (**ppiVar11 == 0) break;\n            ppiVar11 = ppiVar11 + 1;\n            uVar8 = uVar8 + 1;\n            uVar12 = uVar8;\n        } while (uVar8 < uVar1);\n    }\n    if (uVar12 == uVar1) {\n        fcn.00431f64(in_ECX + 0x198, &stack0xffffffb8);\n    }\n    else {\n        **(*(in_ECX + 0x19c) + uVar12 * 4) = unaff_EDI;\n    }\n    arg_8h_00 = **(arg_8h + 4);\n    arg_ch_00 = fcn.00452e60(arg_8h_00);\n    cVar3 = fcn.0046bc34(in_ECX, arg_ch_00, arg_8h_00);\n    if (cVar3 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(3, 0);\n    }\n    else {\n        cVar3 = fcn.0046407c(&stack0xffffffbc, arg_ch_01);\n        if (cVar3 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            fcn.00403f40(1, 0);\n        }\n        else {\n            iVar10 = 0;\n            while (piVar7 = fcn.00402150(),  *piVar7 != 0) {\n                piVar7 = fcn.00402150();\n                if (*piVar7 == 0x3b) {\n                    iVar10 = iVar10 + 1;\n                }\n            }\n            if ((1 < arg_8h_01) && (piVar7 = fcn.00402150(),  *piVar7 != 0x3b)) {\n                iVar10 = iVar10 + 1;\n            }\n            iVar9 = 0;\n            *(iVar2 + 0x1c) = iVar10;\n            *(iVar2 + 0x18) = 0;\n            if (0 < iVar10) {\n                piVar6 = iVar2 + 0x50;\n                do {\n                    cVar3 = fcn.004634e2(&stack0xffffffac, piVar6 + -4);\n                    if (cVar3 == '\\0') {\n                        fcn.004091e0();\n                        arg_ch[2] = 1;\n                        *arg_ch = 0;\n                        fcn.00403f40(2, 0);\n                        goto code_r0x0046f151;\n                    }\n                    *(iVar2 + 0x18) = *(iVar2 + 0x18) + *piVar6;\n                    iVar9 = iVar9 + 1;\n                    piVar6 = piVar6 + 6;\n                } while (iVar9 < iVar10);\n            }\n            iVar9 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x60, 0x3000, 0x40);\n            fcn.00411000(iVar9, fcn.00410f82, 0x60);\n            *(**(*(iVar4 + 0x19c) + iVar10 * 4) + 0x10) = iVar9;\n            *(iVar9 + 0x51) = 0x47cb7f;\n            *(iVar9 + 10) = arg_ch_00;\n            *(iVar9 + 0x12) = arg_ch_01;\n            if ((*(iVar2 + 0x1c) == 0) || (*(iVar2 + 0x14) == 1)) {\n                *(iVar9 + 0x5d) = 0xc3;\n            }\n            else {\n                *(iVar9 + 0x5d) = 0xc2;\n                *(iVar9 + 0x5e) = *(iVar2 + 0x18);\n            }\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = iVar10 + 1;\n        }\n    }\ncode_r0x0046f151:\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1560
    },
    "0046f447": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f447(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    int32_t in_stack_ffffffbc;\n    char cVar5;\n    uchar *arg_ch_00;\n    uchar auStack32 [28];\n    \n    iVar4 = 0;\n    fcn.0040e8e0();\n    if (*(arg_8h + 8) == 2) {\n        iVar4 = fcn.0040c8f0();\n        if (iVar4 == -1) {\n            iVar4 = 0x7fffffff;\n        }\n        else if (iVar4 < 1) goto code_r0x0046f4ae;\n    }\n    uVar3 = **(arg_8h + 4);\n    cVar1 = fcn.0044357d(uVar3);\n    if (cVar1 == '\\0') {\n        arg_ch_00 = &stack0xffffffe0;\n        in_stack_ffffffbc = in_ECX;\n        cVar1 = fcn.0045be08(in_ECX, arg_ch_00, uVar3, 0);\n        if (cVar1 == '\\0') {\ncode_r0x0046f4ae:\n            fcn.00403f40(1, 0);\n            return 0;\n        }\n        iVar2 = *(**(*(in_ECX + 0x17c) + unaff_EDI * 4) + 4);\n    }\n    else {\n        iVar2 = fcn.00411777(0x38);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.0040dd00();\n        }\n        uVar3 = fcn.00452e60(**(arg_8h + 4));\n        arg_ch_00 = 0x46f4e6;\n        cVar1 = fcn.0040e1b0(uVar3);\n        if (cVar1 == '\\0') {\n            if (iVar2 != 0) {\n                fcn.0044aa71(iVar2);\n            }\n            fcn.00403f40(1, 0);\n            return 0;\n        }\n    }\n    fcn.004013c0();\n    if (iVar4 == 0) {\n        cVar1 = fcn.0046e2ba(iVar2, &stack0xffffffd4);\n        if (cVar1 == '\\0') {\n            fcn.00403f40(0xffffffff, 0);\n            goto code_r0x0046f5b3;\n        }\n    }\n    else {\n        fcn.0040e3f0();\n        if (0 < iVar4) {\n            do {\n                cVar1 = fcn.0046e2ba(iVar2, &stack0xffffffd4);\n                cVar5 = in_stack_ffffffbc >> 0x18;\n                if (cVar1 == '\\0') {\n                    if (iVar4 == 0x7fffffff) break;\n                    fcn.00403f40(0xffffffff, 0);\n                    in_stack_ffffffbc = 0x1000000;\n                }\n                cVar5 = in_stack_ffffffbc >> 0x18;\n                arg_ch_00 = arg_ch_00 + 1;\n            } while (arg_ch_00 < iVar4);\n            if (cVar5 != '\\0') goto code_r0x0046f5b3;\n        }\n    }\n    fcn.0040e870();\ncode_r0x0046f5b3:\n    cVar1 = fcn.0044357d(**(arg_8h + 4));\n    if (cVar1 != '\\0') {\n        fcn.0040dcc0();\n        *(iVar2 + 0x2c) = 0;\n        *(iVar2 + 0x30) = 0;\n        fcn.0044aa71(iVar2);\n    }\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 923
    },
    "0046f754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f754(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 9) != '\\0') {\n        iVar1 = arg_8h[1];\n        iVar2 = *(iVar1 + 8);\n        if (iVar1 != 0) {\n            fcn.0046f733(iVar1);\n        }\n        arg_8h[1] = iVar2;\n        *(arg_8h + 9) = 0;\n    }\n    if (*(arg_8h + 2) != '\\0') {\n        *arg_8h = *arg_8h + -1;\n        *(arg_8h + 9) = 1;\n        return;\n    }\n    iVar1 = arg_8h[1];\n    iVar2 = *(iVar1 + 8);\n    if (iVar1 != 0) {\n        fcn.0046f733(iVar1);\n    }\n    *arg_8h = *arg_8h + -1;\n    arg_8h[1] = iVar2;\n    *(arg_8h + 9) = 0;\n    return;\n}\n",
        "token_count": 269
    },
    "0046fabb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046fabb(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t arg_ch;\n    \n    iVar1 = **(*0x4a8690 + arg_8h * 4);\n    fcn.00430622(iVar1, 0);\n    if (*(iVar1 + 0x18) != 0) {\n        (*_sym.imp.USER32.dll_DestroyAcceleratorTable)(*(iVar1 + 0x18));\n    }\n    arg_ch = 3;\n    if (2 < *0x4a86b4) {\n        do {\n            piVar2 = *(*0x4a86a4 + arg_ch * 4);\n            if ((*piVar2 != 0) && (iVar3 = *piVar2,  *(iVar3 + 4) == *(iVar1 + 4))) {\n    // switch table (20 cases) at 0x46fcd7\n                switch(*(iVar3 + 0x88)) {\n                case 10:\n                case 0x10:\n                    if (*(iVar3 + 0x3c) != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*(iVar3 + 0x3c));\n                    }\n                    break;\n                case 0x13:\n                    if (*(iVar3 + 0x34) != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*(iVar3 + 0x34));\n                    }\n                    iVar3 = *(**(*0x4a86a4 + arg_ch * 4) + 0x38);\n                    if (iVar3 != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(iVar3);\n                    }\n                    break;\n                case 0x1b:\n                    fcn.00430622(iVar1, iVar3);\n                    break;\n                case 0x1d:\n                    fcn.004548a8(0x4a8630, iVar3, iVar1);\n                }\n                iVar3 = *(**(*0x4a86a4 + arg_ch * 4) + 0x60);\n                if (iVar3 != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(iVar3);\n                }\n                iVar3 = *(**(*0x4a86a4 + arg_ch * 4) + 100);\n                if (iVar3 != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(iVar3);\n                }\n                iVar3 = *(**(*0x4a86a4 + arg_ch * 4) + 0x40);\n                if (iVar3 != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(iVar3);\n                }\n                iVar3 = *(**(*0x4a86a4 + arg_ch * 4) + 0x4c);\n                if (iVar3 != 0) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(iVar3);\n                }\n                fcn.0045154b(0x4a8630, arg_ch);\n            }\n            arg_ch = arg_ch + 1;\n        } while (arg_ch <= *0x4a86b4);\n    }\n    if (*(iVar1 + 0x20) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(iVar1 + 0x20));\n    }\n    if (*(iVar1 + 0x24) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(iVar1 + 0x24));\n    }\n    iVar1 = **(*0x4a8690 + arg_8h * 4);\n    if (iVar1 != 0) {\n        fcn.0046f8ae(iVar1);\n    }\n    **(*0x4a8690 + arg_8h * 4) = 0;\n    *0x4a8650 = *0x4a8650 + -1;\n    if (arg_8h == *0x4a869c) {\n        *0x4a869c = -1;\n    }\n    if (*0x4a8650 == 1) {\n        *0x4a869c = 0;\n        if (0 < *0x4a8694) {\n            do {\n                if (**(*0x4a8690 + *0x4a869c * 4) != 0) break;\n                *0x4a869c = *0x4a869c + 1;\n            } while (*0x4a869c < *0x4a8694);\n        }\n    }\n    else if (*0x4a8650 == 0) {\n        (*_sym.imp.USER32.dll_KillTimer)(0, *0x4a8654);\n        *0x4a8654 = 0;\n    }\n    while ((*0x4a8694 != 0 && (**(*0x4a8690 + -4 + *0x4a8694 * 4) == 0))) {\n        fcn.00430603(0x4a868c);\n    }\n    return;\n}\n",
        "token_count": 1140
    },
    "0046fe20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046fe20(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int64_t iVar1;\n    int16_t *piVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0045316c(&arg_10h);\n    puVar9 = arg_8h;\n    fcn.00443532(arg_8h);\n    var_8h = 0;\n    if (arg_14h == 0) {\n        fcn.00402260();\n        return 1;\n    }\n    var_4h = 0;\n    *puVar9 = 0;\n    while( true ) {\n        piVar2 = fcn.00402150();\n        if (*piVar2 == 0) break;\n        var_4h = var_4h + 1;\n        piVar2 = fcn.00402150();\n        if (*piVar2 == 0x3b) {\n            *puVar9 = *puVar9 + 1;\n        }\n    }\n    if (1 < arg_14h) {\n        piVar2 = fcn.00402150();\n        if (*piVar2 != 0x3b) {\n            *puVar9 = *puVar9 + 1;\n        }\n    }\n    uVar7 = *puVar9;\n    iVar1 = uVar7 * 0x20;\n    uVar8 = -(iVar1 >> 0x20 != 0) | iVar1;\n    puVar3 = fcn.00411777(-(0xfffffffb < uVar8) | uVar8 + 4);\n    if (puVar3 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        puVar4 = puVar3 + 1;\n        *puVar3 = uVar7;\n        fcn.00410e40(0x20);\n        puVar9 = arg_8h;\n    }\n    puVar9[1] = puVar4;\n    var_4h = 0;\n    var_ch = 0;\n    arg_8h = 0xffffffff;\n    var_10h = 8;\n    iVar5 = fcn.0045ea9b(0, &arg_10h, &var_10h, &var_4h, &var_ch, &var_8h, &arg_8h);\n    uVar7 = var_8h;\n    if (iVar5 != 0) {\n        fcn.00402260();\n        return iVar5;\n    }\n    puVar9[3] = var_8h;\n    if (arg_ch == 0) {\n        puVar6 = fcn.00411777(4);\n        if (puVar6 == NULL) {\n            puVar6 = NULL;\n        }\n        else {\n            *puVar6 = 1;\n        }\n        puVar9[4] = puVar6;\n        uVar7 = fcn.00411777(uVar7);\n        puVar9[2] = uVar7;\n        fcn.004130e0(uVar7, 0, puVar9[3]);\n        fcn.00402260();\n        return 0;\n    }\n    puVar9[4] = 0;\n    puVar9[2] = arg_ch;\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 833
    },
    "00470208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470208(uint arg_8h, uint32_t arg_ch, int32_t lParam, uint wParam, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint arg_10h;\n    uint32_t arg_8h_00;\n    \n    iVar4 = fcn.00431228(0x4a8630, arg_8h);\n    fcn.00455e06(0x4a8630, **(*0x4a8690 + iVar4 * 4), 1);\n    if (arg_18h == 0) {\n        if (*0x4a86e0 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_DragLeave)(0);\n            (*_sym.imp.COMCTL32.dll_ImageList_EndDrag)();\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            arg_8h_00 = arg_ch;\n            iVar4 = fcn.0044136e(&stack0xffffffc8, arg_ch, lParam);\n            if ((iVar4 != -1) && (iVar4 != *0x4a86e0)) {\n                puVar2 = **(*0x4a86a4 + iVar4 * 4);\n                if ((*(puVar2 + 0x8a) & 8) != 0) {\n                    uVar3 = *puVar2;\n                    arg_10h = 0;\n                    fcn.004554fe(*0x4a86e0, &stack0xffffffbc, 0);\n                    uVar5 = fcn.004554fe(arg_8h_00, &stack0xffffffb0, 0);\n                    cVar1 = *(**(*0x4a86a4 + iVar4 * 4) + 0x88);\n                    if ((cVar1 == '\\x02') || (cVar1 == '\\x03')) {\n                        (*_sym.imp.USER32.dll_SetWindowTextW)(uVar3, uVar5);\n                        (*_sym.imp.USER32.dll_SendMessageW)(uVar3, 0xb1, 0, 0xffffffff);\n                    }\n                    fcn.0041137c(uVar5);\n                    fcn.004091e0();\n                    fcn.00401c30();\n                    fcn.00401990();\n                    fcn.00402260();\n                    fcn.0040e8e0();\n                    fcn.00401c30();\n                    fcn.00401990();\n                    fcn.00402260();\n                    fcn.004513d8(0x4a8630, 0xfffffff3, arg_10h, 0, 0);\n                    fcn.004091e0();\n                }\n                *0x4a86e0 = 0;\n            }\n        }\n        (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x202, wParam, arg_ch & 0xffff | lParam << 0x10);\n        return;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x205, wParam, arg_ch & 0xffff | lParam << 0x10);\n    return;\n}\n",
        "token_count": 720
    },
    "00470470": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00470470(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint arg_18h_00;\n    int32_t iVar2;\n    uint in_stack_ffffffb0;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x100;\n    }\n    arg_18h_00 = fcn.00448d9c(arg_28h | 0x10003);\n    if (arg_2ch == -1) {\n        arg_2ch = 0;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x20;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x20;\n    }\n    iVar2 = fcn.00430817(arg_8h, arg_2ch, L\"static\", 0, arg_18h_00, arg_18h, arg_1ch, 0, 0, arg_10h, 0);\n    *arg_ch = iVar2;\n    if (iVar2 != 0) {\n        *(arg_ch + 0x21) = arg_20h;\n        *(arg_ch + 0x86) = arg_24h;\n        if (*arg_14h != 0) {\n            *(arg_ch + 0x20) = arg_18h;\n            *(arg_ch + 0x82) = arg_1ch;\n            fcn.0040bc00();\n            cVar1 = fcn.00454902(arg_ch, arg_14h, in_stack_ffffffb0);\n            if (cVar1 == '\\0') {\n                (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n                goto code_r0x00470531;\n            }\n        }\n        if (*0x4a8638 == 0) {\n            *(arg_ch + 0x7e) = 0x300;\n        }\n        fcn.004091e0();\n        return 1;\n    }\ncode_r0x00470531:\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 547
    },
    "00470565": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00470565(uint32_t arg_8h, uint32_t lpszFile, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint arg_ch;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    code *pcVar9;\n    ulong uVar10;\n    uint in_stack_ffffff38;\n    uint var_94h;\n    uint32_t var_90h;\n    uint var_8ch;\n    int32_t var_78h;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_38h;\n    uint var_30h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t phiconLarge;\n    int32_t var_14h;\n    uint32_t nIconIndex;\n    int32_t var_ch;\n    int32_t phiconSmall;\n    \n    var_14h = fcn.0040c8f0();\n    cVar2 = fcn.004417f1(0x4a8630, arg_8h, &arg_8h, &nIconIndex);\n    uVar4 = nIconIndex;\n    if (cVar2 == '\\0') goto code_r0x00470c27;\n    var_ch = **(*0x4a8690 + arg_8h * 4);\n    piVar1 = **(*0x4a86a4 + nIconIndex * 4);\n    iVar7 = *piVar1;\n    arg_8h = arg_8h & 0xffffff | *(piVar1 + 0x22) << 0x18;\n    uVar10 = fcn.004335e8(var_14h);\n    nIconIndex = uVar10;\n    // switch table (21 cases) at 0x470c3d\n    switch(uVar10 >> 0x20 & 0xff) {\n    case 6:\n        (*_sym.imp.USER32.dll_GetWindowRect)(iVar7, &var_28h);\n        arg_8h = var_20h - var_28h;\n        arg_10h = var_1ch - var_24h;\n        iVar7 = fcn.004306bc(piVar1, lpszFile, &arg_8h, &arg_10h);\n        if (iVar7 != 0) {\n            fcn.004311a6(var_ch, piVar1, 0);\n            fcn.004091e0();\n            return 1;\n        }\n        break;\n    case 7:\n        fcn.0040bc00();\n        cVar2 = fcn.00454902(piVar1, lpszFile, in_stack_ffffff38);\n        if (cVar2 != '\\0') {\n            fcn.004311a6(var_ch, piVar1, 0);\n            fcn.004091e0();\n            return 1;\n        }\n        break;\n    case 0xb:\n        iVar7 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, 0, &phiconSmall, 1);\n        if (iVar7 < 1) break;\n        arg_ch = *(var_ch + 0x18c);\n        arg_10h = fcn.00441878(0x4a8630, arg_ch);\n        iVar7 = *(**(*0x4a86a4 + arg_10h * 4) + 0x3c);\n        if (iVar7 == 0) {\n            iVar7 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n            *(**(*0x4a86a4 + arg_10h * 4) + 0x3c) = iVar7;\n            (*_sym.imp.USER32.dll_SendMessageW)(arg_ch, 0x1303, 0, iVar7);\n            if (iVar7 == 0) goto code_r0x00470c0b;\n        }\n        uVar8 = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar7, *(piVar1 + 0x20), phiconSmall);\n        var_44h = 2;\n        var_30h = uVar8;\n        (*_sym.imp.USER32.dll_SendMessageW)(arg_ch, 0x133d, *(piVar1 + 0x8b), &var_44h);\n        *(piVar1 + 0x20) = uVar8;\n        goto code_r0x00470c0b;\n    case 0x10:\n    case 0x11:\n        iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, 0, &phiconSmall, 1);\n        if (iVar3 < 1) break;\n        if (arg_8h._3_1_ == '\\x10') {\n            nIconIndex = 3;\n            lpszFile = *0x4a86b4;\n            uVar6 = uVar4;\n        }\n        else {\n            iVar7 = piVar1[0xc];\n            uVar6 = fcn.00441878(0x4a8630, iVar7);\n            lpszFile = uVar4;\n            nIconIndex = uVar4;\n        }\n        iVar3 = *(**(*0x4a86a4 + uVar6 * 4) + 0x3c);\n        pcVar9 = _sym.imp.USER32.dll_SendMessageW;\n        if (iVar3 == 0) {\n            iVar3 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n            pcVar9 = _sym.imp.USER32.dll_SendMessageW;\n            *(**(*0x4a86a4 + uVar6 * 4) + 0x3c) = iVar3;\n            (*pcVar9)(iVar7, 0x1109, 0, iVar3);\n            if (iVar3 != 0) goto code_r0x00470a70;\n        }\n        else {\ncode_r0x00470a70:\n            var_14h = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar3, 0xffffffff, phiconSmall);\n            if (arg_8h._3_1_ == '\\x10') {\n                if ((arg_10h & 2) != 0) {\n                    *(var_ch + 0x1b8) = var_14h;\n                }\n                if ((arg_10h & 4) != 0) {\n                    *(var_ch + 0x1bc) = var_14h;\n                }\n            }\n            uVar4 = nIconIndex;\n            if (nIconIndex <= lpszFile) {\n                do {\n                    piVar1 = *(*0x4a86a4 + uVar4 * 4);\n                    if ((((*piVar1 != 0) && (iVar3 = *piVar1,  *(iVar3 + 4) == *(var_ch + 4))) &&\n                        (*(iVar3 + 0x88) == '\\x11')) && (*(iVar3 + 0x30) == iVar7)) {\n                        var_68h = *(iVar3 + 0xc);\n                        var_6ch = 0x32;\n                        (*pcVar9)(iVar7, 0x113e, 0, &var_6ch);\n                        if ((arg_10h & 2) != 0) {\n                            var_50h = var_14h;\n                        }\n                        if ((arg_10h & 4) != 0) {\n                            var_54h = var_14h;\n                        }\n                        (*pcVar9)(iVar7, 0x113f, 0, &var_6ch);\n                    }\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 <= lpszFile);\n            }\n        }\n        (*_sym.imp.USER32.dll_GetClientRect)(iVar7, &var_38h);\n        (*_sym.imp.USER32.dll_RedrawWindow)(iVar7, &var_38h, 0, 0);\ncode_r0x00470c0b:\n        (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\ncode_r0x00470c11:\n        fcn.004091e0();\n        return 1;\n    case 0x13:\n    case 0x14:\n        iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, &phiconLarge, &phiconSmall, 1);\n        if (((0 < iVar3) ||\n            ((*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, 0xffffffff, &phiconLarge, &phiconSmall, 1), \n            phiconLarge != 0)) || (phiconSmall != 0)) {\n            if (arg_8h._3_1_ == '\\x13') {\n                arg_10h = uVar4;\n                nIconIndex = 0;\n                uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x1004, 0, 0);\n            }\n            else {\n                iVar7 = piVar1[0xc];\n                arg_10h = fcn.00441878(0x4a8630, iVar7);\n                var_40h = 1;\n                var_38h = uVar4;\n                uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x1053, 0xffffffff, &var_40h);\n                nIconIndex = uVar4;\n                if (uVar4 == 0xffffffff) break;\n            }\n            iVar3 = **(*0x4a86a4 + arg_10h * 4);\n            iVar5 = *(iVar3 + 0x34);\n            var_ch = *(iVar3 + 0x38);\n            lpszFile = uVar4;\n            if (iVar5 == 0) {\n                iVar5 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 0, 1);\n                *(**(*0x4a86a4 + arg_10h * 4) + 0x34) = iVar5;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x1003, 1, iVar5);\n            }\n            if (var_ch == 0) {\n                var_ch = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x20, 0x20, 0x21, 0, 1);\n                *(**(*0x4a86a4 + arg_10h * 4) + 0x38) = var_ch;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x1003, 0, var_ch);\n            }\n            pcVar9 = _sym.imp.COMCTL32.dll_ImageList_ReplaceIcon;\n            if ((iVar5 != 0) && (var_ch != 0)) {\n                var_14h = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar5, 0xffffffff, phiconSmall);\n                (*pcVar9)(var_ch, 0xffffffff, phiconLarge);\n                if (arg_8h._3_1_ == '\\x13') {\n                    piVar1[0x25] = var_14h;\n                }\n                uVar4 = nIconIndex;\n                pcVar9 = _sym.imp.USER32.dll_SendMessageW;\n                if (nIconIndex <= lpszFile) {\n                    do {\n                        pcVar9 = _sym.imp.USER32.dll_SendMessageW;\n                        var_94h = 2;\n                        var_8ch = 0;\n                        var_90h = uVar4;\n                        (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x104b, 0, &var_94h);\n                        if ((var_78h == -2) || (arg_8h._3_1_ == '\\x14')) {\n                            var_78h = var_14h;\n                            (*pcVar9)(iVar7, 0x104c, 0, &var_94h);\n                        }\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 <= lpszFile);\n                }\n                (*pcVar9)(iVar7, 0x1015, nIconIndex, lpszFile);\n            }\n            pcVar9 = _sym.imp.USER32.dll_DestroyIcon;\n            (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\n            (*pcVar9)(phiconLarge);\n            fcn.004091e0();\n            return 1;\n        }\n        break;\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n        cVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar7, 0xfffffff0);\n        if (cVar2 < '\\0') {\n            iVar3 = (*_sym.imp.USER32.dll_LoadImageW)(0, lpszFile, 0, 0, 0, 0x2010);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0xf7, 0, iVar3);\n                if (piVar1[0x18] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(piVar1[0x18]);\n                }\n                if (piVar1[0x19] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(piVar1[0x19]);\n                }\n                piVar1[0x18] = iVar3;\n                piVar1[0x19] = 0;\n                fcn.004091e0();\n                return 1;\n            }\n            break;\n        }\n        if ((var_14h != -1) || (arg_8h._3_1_ != '\\x18')) {\n            iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, &phiconLarge, &phiconSmall, 1);\n            if (0 < iVar3) {\n                iVar3 = phiconSmall;\n                if (arg_10h != 0) {\n                    iVar3 = phiconLarge;\n                    phiconLarge = phiconSmall;\n                }\n                (*_sym.imp.USER32.dll_DestroyIcon)(phiconLarge);\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0xf7, 1, iVar3);\n                iVar7 = piVar1[0x18];\n                goto joined_r0x004706fe;\n            }\n            break;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_LoadImageW)(0, lpszFile, 1, 0, 0, 0x2010);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0xf7, 1, iVar3);\n            iVar7 = piVar1[0x18];\njoined_r0x004706fe:\n            if (iVar7 != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(iVar7);\n            }\n            if (piVar1[0x19] != 0) {\n                (*_sym.imp.USER32.dll_DestroyIcon)(piVar1[0x19]);\n            }\n            piVar1[0x18] = 0;\n            piVar1[0x19] = iVar3;\n            fcn.004091e0();\n            return 1;\n        }\n        goto code_r0x00470c11;\n    }\ncode_r0x00470c27:\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 3603
    },
    "00470ce0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00470ce0(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h, int32_t hWnd)\n\n{\n    int32_t *arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_24h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar3 = arg_1ch;\n    iVar5 = arg_10h;\n    iVar1 = fcn.00411777(0x1d4);\n    if (iVar1 == 0) {\n        arg_10h = NULL;\n    }\n    else {\n        arg_10h = fcn.0046f8cb(iVar1);\n    }\n    var_4h = *0x4a8694;\n    if (*0x4a8650 == *0x4a8694) {\n        arg_1ch = *0x4a8694;\n        fcn.00431f64(0x4a868c, &arg_10h);\n        iVar1 = var_4h;\n    }\n    else {\n        iVar1 = 0;\n        arg_1ch = 0;\n        if (0 < *0x4a8694) {\n            do {\n                arg_1ch = iVar1;\n                if (**(*0x4a8690 + iVar1 * 4) == 0) break;\n                iVar1 = iVar1 + 1;\n                arg_1ch = iVar1;\n            } while (iVar1 < *0x4a8694);\n        }\n    }\n    arg_ch_00 = arg_10h;\n    **(*0x4a8690 + iVar1 * 4) = arg_10h;\n    *(**(*0x4a8690 + iVar1 * 4) + 4) = iVar1;\n    if (uVar3 == 0xffffffff) {\n        uVar3 = 0x80ca0000;\n    }\n    uVar4 = uVar3 | 0x4000000;\n    if ((uVar3 & 0x10000) != 0) {\n        uVar4 = uVar3 | 0x4080000;\n    }\n    if ((uVar4 & 0x40000) != 0) {\n        uVar4 = uVar4 | 0x80000;\n    }\n    if (arg_20h == 0xffffffff) {\n        arg_20h = 0;\n    }\n    if ((arg_20h & 0x40) != 0) {\n        if (hWnd == 0) {\n            if (iVar1 != var_4h) {\n                **(*0x4a8690 + iVar1 * 4) = 0;\n                return 0;\n            }\n            goto code_r0x00470dc5;\n        }\n        arg_20h = arg_20h ^ 0x40;\n        arg_10h[3] = 0x40;\n        iVar1 = fcn.00431228(0x4a8630, hWnd);\n        if (-1 < iVar1) {\n            *(**(*0x4a8690 + iVar1 * 4) + 0xc) = 0x80000000;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        (*_sym.imp.USER32.dll_GetClientRect)(hWnd, &var_24h);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        arg_ch = arg_ch + ((var_ch - var_1ch) - iVar1);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n        iVar5 = iVar5 + ((var_8h - var_18h) - iVar1);\n        if ((uVar4 & 0xc00000) == 0xc00000) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n            iVar5 = iVar5 + iVar1;\n        }\n    }\n    if (arg_14h == -1) {\n        arg_14h = 400;\n    }\n    if (arg_18h == -1) {\n        arg_18h = 400;\n    }\n    if (arg_ch == -1) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        arg_ch = (((lpRect - arg_14h) + var_ch) - iVar1) / 2;\n    }\n    if (iVar5 == -1) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n        iVar5 = (((var_10h - arg_18h) + var_8h) - iVar5) / 2;\n        if ((uVar4 & 0x400000) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n            iVar5 = iVar5 - iVar1 / 2;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, arg_14h, arg_18h);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, uVar4, 0, arg_20h);\n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (arg_20h, L\"AutoIt v3 GUI\", arg_8h, uVar4, arg_ch, iVar5, var_ch - lpRect, var_8h - var_10h, hWnd\n                       , 0, *0x4a8684, 0);\n    *arg_ch_00 = iVar1;\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongW)(iVar1, 0xffffffeb, arg_1ch);\n        arg_ch_00[2] = hWnd;\n        arg_ch_00[0xf] = arg_ch;\n        arg_ch_00[0x10] = iVar5;\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_ch_00, &lpRect);\n        arg_ch_00[0x11] = var_ch - lpRect;\n        arg_ch_00[0x12] = var_8h - var_10h;\n        uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11, 0);\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch_00, 0x30, uVar2);\n        fcn.00455e06(0x4a8630, arg_ch_00, 0xffffffff);\n        if (*0x4a8654 == 0) {\n            *0x4a8654 = (*_sym.imp.USER32.dll_SetTimer)(0, 0, 0x28, 0x462393);\n        }\n        *0x4a8650 = *0x4a8650 + 1;\n        *0x4a869c = arg_1ch;\n        fcn.00440bd8(0x4a8630, 0);\n        if ((uVar4 & 0x10000000) != 0) {\n            if ((arg_14h == 0) || (arg_18h == 0)) {\n                fcn.0044105d(*arg_ch_00);\n                return 0;\n            }\n            fcn.00440e61(4, 0);\n        }\n        return *arg_ch_00;\n    }\n    if (arg_1ch != var_4h) {\n        **(*0x4a8690 + arg_1ch * 4) = 0;\n        return 0;\n    }\ncode_r0x00470dc5:\n    fcn.00430603(0x4a868c);\n    return 0;\n}\n",
        "token_count": 1870
    },
    "00472042": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00472042(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_20h;\n    int32_t var_10h;\n    uint var_ch;\n    uint16_t *var_8h;\n    int32_t var_4h;\n    \n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    puVar3 = fcn.00452e81(arg_ch);\n    uVar1 = *puVar3;\n    bVar2 = false;\n    var_ch = 0;\n    var_50h = 0;\n    var_48h = 1;\n    var_44h = 0;\n    iVar4 = 0;\n    var_8h = puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar5 = iVar4 + 1;\n            if (uVar1 == 0x24) {\n                if (puVar3[iVar5] == 0x24) {\n                    bVar2 = true;\n                    fcn.004032d0(0x24);\n                    iVar5 = iVar4 + 2;\n                }\n                else {\n                    fcn.00402170();\n                    uVar1 = puVar3[iVar5];\n                    while ((uVar1 != 0x24 && (uVar1 != 0))) {\n                        fcn.004032d0(uVar1);\n                        iVar4 = iVar5 + 1;\n                        iVar5 = iVar5 + 1;\n                        uVar1 = puVar3[iVar4];\n                    }\n                    if (puVar3[iVar5] == 0) {\n                        fcn.0040d510();\n                        fcn.0040bff0(&var_30h);\n                        goto code_r0x00472272;\n                    }\n                    var_4h = iVar5 + 1;\n                    fcn.0040e410(&var_30h);\n                    fcn.00410d60();\n                    fcn.0040c560(&var_10h, &var_ch);\n                    if (var_10h == 0) {\n                        bVar2 = true;\n                        fcn.0040d510();\n                        fcn.0040bff0(&var_30h);\n                        fcn.0040d510();\n                        puVar3 = var_8h;\n                        iVar5 = var_4h;\n                    }\n                    else {\n                        fcn.00452e81(var_10h);\n                        fcn.0040d510();\n                        bVar2 = true;\n                        puVar3 = var_8h;\n                        iVar5 = var_4h;\n                    }\n                }\n            }\n            else if (uVar1 == 0x40) {\n                if (puVar3[iVar5] == 0x40) {\n                    bVar2 = true;\n                    fcn.004032d0(0x40);\n                    iVar5 = iVar4 + 2;\n                }\n                else {\n                    fcn.00402170();\n                    uVar1 = puVar3[iVar5];\n                    while ((uVar1 != 0x40 && (uVar1 != 0))) {\n                        fcn.004032d0(uVar1);\n                        iVar4 = iVar5 + 1;\n                        iVar5 = iVar5 + 1;\n                        uVar1 = puVar3[iVar4];\n                    }\n                    if (puVar3[iVar5] == 0) {\n                        fcn.0040d510();\n                        fcn.0040bff0(&var_30h);\n                        goto code_r0x00472272;\n                    }\n                    var_4h = iVar5 + 1;\n                    fcn.0040e410(&var_30h);\n                    fcn.00410d60();\n                    *var_34h = *var_34h + 1;\n                    iVar4 = fcn.004711f2(arg_8h, &var_50h, var_40h);\n                    if (iVar4 == 0) {\n                        arg_8h_00 = fcn.00452e60(&var_50h);\n                        fcn.0040bff0(arg_8h_00);\n                        bVar2 = true;\n                        puVar3 = var_8h;\n                        iVar5 = iVar5 + 1;\n                    }\n                    else {\n                        bVar2 = true;\n                        fcn.0040d510();\n                        fcn.0040bff0(&var_30h);\n                        fcn.0040d510();\n                        puVar3 = var_8h;\n                        iVar5 = var_4h;\n                    }\n                }\n            }\n            else {\n                fcn.004032d0(uVar1);\n            }\n            uVar1 = puVar3[iVar5];\n            iVar4 = iVar5;\n        } while (uVar1 != 0);\n        if (bVar2) {\ncode_r0x00472272:\n            fcn.0040e870();\n        }\n    }\n    fcn.004091e0();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 1212
    },
    "0047304d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0047304d(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_EDX;\n    ushort auStack24 [2];\n    uchar auStack20 [4];\n    uint uStack16;\n    \n    if (*(arg_8h + 8) != '\\0') {\n        return 0x80020001;\n    }\n    if (*(arg_8h + 0x2c) != '\\0') {\n        if (arg_ch - 1U < 0xb) {\n    // switch table (11 cases) at 0x473269\n            switch(*((arg_ch - 1U) * 4 + 0x473269)) {\n            case 0x473083:\n                *(arg_8h + 0x40) = 1;\n                auStack24[0] = 8;\n                uStack16 = 0x483f68;\n                if (arg_1ch[2] != 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n                }\n                uVar4 = fcn.00472ef4(arg_8h, auStack24, arg_1ch);\n                return uVar4;\n            case 0x4730c3:\n                fcn.00432ccb(arg_8h);\n                return 0;\n            case 0x4730d3:\n                fcn.00432d2e(arg_18h, arg_8h + 0x48, *arg_1ch, arg_20h);\n                return 0;\n            case 0x4730f4:\n                fcn.00432d2e(arg_18h, arg_8h + 0x78, *arg_1ch, arg_20h);\n                return 0;\n            case 0x473115:\n                arg_8h = arg_8h + 0x68;\n                break;\n            case 0x47311d:\n                fcn.00432d2e(arg_18h, arg_8h + 0x58, *arg_1ch, arg_20h);\n                return 0;\n            case 0x47313e:\n                fcn.00432d2e(arg_18h, arg_8h + 0x88, *arg_1ch, arg_20h);\n                return 0;\n            case 0x473162:\n                arg_8h = arg_8h + 0x98;\n                break;\n            case 0x47316a:\n                fcn.00432d2e(arg_18h, arg_8h + 0xa8, *arg_1ch, arg_20h);\n                return 0;\n            case 0x47318e:\n                fcn.00432d2e(arg_18h, arg_8h + 0xb8, *arg_1ch, arg_20h);\n                return 0;\n            case 0x4731b2:\n                arg_8h = arg_8h + 200;\n            }\n            fcn.00432d2e(arg_18h, arg_8h, *arg_1ch, arg_20h);\n        }\n        return 0;\n    }\n    if (arg_ch == 0xc) {\n        if (*(arg_8h + 0x10) != NULL) {\n            (**(**(arg_8h + 0x10) + 0x18))();\n            (**(**(arg_8h + 0x10) + 8))(*(arg_8h + 0x10));\n            *(arg_8h + 0x10) = 0;\n        }\n    }\n    else {\n        cVar2 = fcn.004329dd(arg_8h + 0x18);\n        if (cVar2 != '\\0') {\n            piVar1 = *(arg_8h + 0x28);\n            if (piVar1 != NULL) {\n                iVar3 = (**(*piVar1 + 0x1c))(piVar1, extraout_EDX, auStack20, 1);\n                if (-1 < iVar3) {\n                    uVar4 = fcn.00472ef4(arg_8h, &stack0xffffffd0, arg_1ch);\n                    return uVar4;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1015
    },
    "00473295": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00473295(uint32_t arg_8h, int16_t *arg_ch, int32_t hDC, uint hgdiobj, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t arg_28h, uint arg_2ch)\n\n{\n    uint *arg_ch_00;\n    char cVar1;\n    int32_t arg_10h;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint in_stack_ffffff98;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = *0x4a869c;\n    if (arg_8h - 0xc < 9) {\n    // switch table (9 cases) at 0x473991\n        switch(*(*(arg_8h + 0x47398d) * 4 + 0x473991)) {\n        case 0x4732bd:\n            if ((hDC != -1) &&\n               (cVar1 = fcn.004417f1(0x4a8630, hDC, &fcn.00473295::var_14h, &fcn.00473295::var_1ch),  cVar1 != '\\0')) {\n                iVar4 = var_14h;\n            }\n        }\n    }\n    if (iVar4 == -1) goto code_r0x004732e7;\n    iVar4 = **(*0x4a8690 + iVar4 * 4);\n    arg_10h = fcn.00455f64(iVar4);\n    var_14h = arg_10h;\n    if (arg_10h == -1) goto code_r0x004732e7;\n    arg_ch_00 = **(*0x4a86a4 + arg_10h * 4);\n    if (((arg_8h == 0xe) || (arg_8h == 0xf)) || (arg_8h == 0xc)) {\n        *(arg_ch_00 + 0x8a) = 0;\n    }\n    else {\n        *(arg_ch_00 + 0x8a) = 0x50;\n        *(arg_ch_00 + 0x7e) = *0x4a8638;\n    }\n    var_8h = arg_18h;\n    var_4h = arg_1ch;\n    var_1ch = arg_28h & 2;\n    var_10h = hDC;\n    var_ch = hgdiobj;\n    if (var_1ch == 0) {\n        fcn.00430bcd(hDC, hgdiobj, arg_18h, arg_1ch, iVar4);\n        var_10h = *(iVar4 + 0x58);\n        var_8h = *(iVar4 + 0x60);\n        var_ch = *(iVar4 + 0x5c);\n        var_4h = *(iVar4 + 100);\n    }\n    else {\n        *(arg_ch_00 + 0x7e) = 0;\n    }\n    if (0x1d < arg_8h) {\ncode_r0x0047396f:\n        fcn.0045154b(0x4a8630, arg_10h);\n        fcn.004091e0();\n        return -1;\n    }\n    // switch table (30 cases) at 0x4739a5\n    switch(*(arg_8h * 4 + 0x4739a5)) {\n    case 0x4733bb:\n        cVar1 = fcn.00450bd6(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x4733de:\n        cVar1 = fcn.00450b00(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x473401:\n        cVar1 = fcn.00450ef1(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x473424:\n        cVar1 = fcn.00450e52(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x473447:\n        cVar1 = fcn.00450db7(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x47346a:\n        cVar1 = fcn.00450a2d(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x47348d:\n        cVar1 = fcn.0045093b(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x4734b0:\n        cVar1 = fcn.00450811(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, arg_18h, arg_1ch, arg_20h, arg_24h);\n        break;\n    case 0x4734d2:\n        fcn.0040bc00();\n        cVar1 = fcn.00470470(iVar4, arg_ch_00, var_14h, arg_ch, var_10h, var_ch, arg_18h, arg_1ch, arg_20h, arg_24h, \n                             in_stack_ffffff98);\n        arg_10h = var_14h;\n        break;\n    case 0x47350e:\n        cVar1 = fcn.0045074c(iVar4, arg_ch_00, arg_10h, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x47352d:\n        cVar1 = fcn.0045069c(iVar4, arg_ch_00, arg_10h, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x47354c:\n        uVar2 = fcn.0040c8f0();\n        cVar1 = fcn.00440945(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, uVar2);\n        break;\n    case 0x47357a:\n        cVar1 = fcn.004505a8(iVar4, arg_ch_00, arg_10h, arg_ch, hDC);\n        break;\n    case 0x47358f:\n        cVar1 = fcn.004504c9(iVar4, arg_ch_00, arg_10h, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x4735ae:\n        cVar1 = fcn.0044087e(iVar4, arg_ch_00, arg_10h, arg_ch);\n        break;\n    case 0x4735bf:\n        cVar1 = fcn.004481f2(iVar4, arg_ch_00, arg_10h, hDC, arg_ch, hgdiobj);\n        break;\n    case 0x4735d8:\n        cVar1 = fcn.00447c6d(iVar4, arg_ch_00, hDC);\n        break;\n    case 0x4735e8:\n        cVar1 = fcn.004480a7(iVar4, arg_ch_00, arg_10h, hDC, arg_ch, hgdiobj, arg_18h);\n        break;\n    case 0x473605:\n        cVar1 = fcn.00450387(iVar4, arg_ch_00, arg_10h, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x473624:\n        cVar1 = fcn.00447f81(arg_ch_00, arg_10h, arg_ch, hDC);\n        break;\n    case 0x473638:\n        cVar1 = fcn.0044057c(iVar4, arg_ch_00, arg_10h, hDC, hgdiobj, arg_18h, arg_1ch, arg_20h, arg_24h);\n        break;\n    case 0x47365d:\n        cVar1 = fcn.00450fb1(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x473680:\n        cVar1 = fcn.00451035(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x4736a3:\n        cVar1 = fcn.00450d29(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x4736c3:\n        cVar1 = fcn.00450c95(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x4736e3:\n        cVar1 = fcn.004501c0(iVar4, arg_ch_00, arg_10h, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x473703:\n        cVar1 = fcn.00447d4a(arg_ch_00, arg_10h, arg_ch, hDC);\n        break;\n    case 0x473714:\n        cVar1 = fcn.00469d1a(iVar4, arg_ch_00, arg_ch, var_10h, var_ch, var_8h, var_4h, arg_20h, arg_24h);\n        break;\n    case 0x47376d:\n        goto code_r0x0047376d;\n    case 0x47396f:\n        goto code_r0x0047396f;\n    }\n    if (cVar1 == '\\0') {\n        fcn.0045154b(0x4a8630, arg_10h);\n        if ((arg_8h == 0xb) && (*arg_ch == 0)) {\n            fcn.004091e0();\n            return 1;\n        }\ncode_r0x004732e7:\n        fcn.004091e0();\n        return 0;\n    }\ncode_r0x0047376d:\n    *(arg_ch_00 + 0x22) = arg_8h;\n    *(arg_ch_00 + 0x89) = arg_28h;\n    *0x4a86c8 = *0x4a869c;\n    *0x4a86c4 = arg_10h;\n    if (((arg_28h & 1) == 0) &&\n       (((cVar1 = fcn.004362d6(iVar4 + 0x6c),  cVar1 == '\\0' || (*(iVar4 + 0x7c) != 0x55)) ||\n        ((*(iVar4 + 0x80) != 400 || ((*(iVar4 + 0x84) != 0 || (*(iVar4 + 0x88) != 2)))))))) {\n        fcn.00440c06(iVar4, arg_ch_00, iVar4 + 0x6c, *(iVar4 + 0x7c), *(iVar4 + 0x80), *(iVar4 + 0x84), *(iVar4 + 0x88)\n                     , 0);\n    }\n    if (((arg_28h & 4) != 0) || ((arg_18h != -1 && (arg_1ch != -1)))) goto code_r0x00473903;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(*arg_ch_00);\n    arg_20h = 0;\n    arg_24h = 0;\n    uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch_00, 0x31, 0, 0);\n    uVar3 = (*_sym.imp.GDI32.dll_SelectObject)(uVar2, uVar3);\n    fcn.004435e4(uVar2, arg_ch, &fcn.00473295::var_18h);\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar2, uVar3);\n    (*_sym.imp.USER32.dll_ReleaseDC)(*arg_ch_00, uVar2);\n    if (3 < arg_8h - 0x17) goto code_r0x004738ad;\n    // switch table (4 cases) at 0x473a1d\n    switch(*((arg_8h - 0x17) * 4 + 0x473a1d)) {\n    case 0x473877:\n        goto code_r0x004738a4;\n    case 0x47387c:\n        arg_20h = var_14h + 4;\n        arg_24h = var_18h;\n        break;\n    case 0x47388d:\n        arg_24h = var_18h + 0xc;\n        arg_20h = var_14h;\n        break;\n    case 0x47389e:\n        var_18h = var_18h + 8;\ncode_r0x004738a4:\n        arg_20h = var_14h;\n        arg_24h = var_18h;\n    }\ncode_r0x004738ad:\n    if ((arg_1ch == -1) && ((*(iVar4 + 100) == -1 || (*0x4a8634 != 2)))) {\n        *(iVar4 + 100) = arg_20h + 8;\n    }\n    if ((arg_18h == -1) && ((*(iVar4 + 0x60) == -1 || (*0x4a8634 != 2)))) {\n        *(iVar4 + 0x60) = arg_24h + 8;\n    }\n    (*_sym.imp.USER32.dll_MoveWindow)(*arg_ch_00, *(iVar4 + 0x58), *(iVar4 + 0x5c), *(iVar4 + 0x60), *(iVar4 + 100), 1);\ncode_r0x00473903:\n    if (var_1ch == 0) {\n        fcn.004308aa(iVar4, arg_ch_00, 0);\n    }\n    if (*(iVar4 + 0x19c) != '\\0') {\n        if (*(iVar4 + 0x194) == -1) {\n            *(arg_ch_00 + 0x8b) = *(iVar4 + 400);\n        }\n        else {\n            *(arg_ch_00 + 0x8b) = *(iVar4 + 0x194);\n        }\n    }\n    if (*(iVar4 + 0x50) != -1) {\n        fcn.00448c34(arg_10h, *(iVar4 + 0x50));\n    }\n    if (*(iVar4 + 0x54) != -1) {\n        fcn.00448989(arg_10h, *(iVar4 + 0x54));\n    }\n    fcn.004091e0();\n    return arg_10h;\n}\n",
        "token_count": 3822
    },
    "00473ed9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473ed9(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *arg_10h;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t iVar8;\n    int32_t unaff_ESI;\n    uint32_t arg_ch_00;\n    int32_t iVar9;\n    char cVar10;\n    uint uVar11;\n    uint32_t uVar12;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack56;\n    uint16_t *puStack52;\n    uint32_t uStack48;\n    \n    uVar4 = **(arg_8h + 4);\n    iVar1 = fcn.00452e81(uVar4);\n    iVar8 = **(arg_8h + 4);\n    iVar2 = fcn.00452e26(iVar8);\n    uVar11 = *(*(arg_8h + 4) + 4);\n    fcn.00452e81(uVar11);\n    iVar9 = *(*(arg_8h + 4) + 4);\n    arg_10h = fcn.00452e26(iVar9);\n    fcn.004013c0();\n    uStack48 = 0;\n    uVar4 = uVar4 & 0xffffff;\n    if ((2 < *(arg_8h + 8)) && (uStack48 = fcn.0040c8f0(),  (uStack48 & 2) != 0)) {\n        uStack48 = uStack48 & 1;\n        uVar4 = CONCAT13(1, uVar4);\n    }\n    cVar10 = uVar11 >> 0x18;\n    if (arg_10h == NULL) {\n        uVar11 = 0;\n        fcn.0040ea00(1);\n        if (uVar4 >> 0x18 == '\\0') {\n            piVar3 = fcn.0040d1a0(0, 1);\n            iVar2 = unaff_EBX;\n            fcn.004091e0();\n            piVar3[2] = 1;\n            *piVar3 = iVar2;\n        }\n        if (0 < iVar2) {\n            do {\n                fcn.00403e20(uVar11);\n                fcn.0040d1a0(0, 1);\n                fcn.0040e870();\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < unaff_ESI);\n            fcn.00402260();\n            return 0;\n        }\n    }\n    else {\n        if (uStack48 == 0) {\n            iVar5 = 0;\n            iStack56 = 0;\n            if (iVar2 < 1) goto code_r0x00474129;\n            do {\n                iVar7 = fcn.00431276(puStack52, *(iVar1 + iStack56 * 2), arg_10h);\n                cVar10 = uVar11 >> 0x18;\n                if (iVar7 != 0) {\n                    iVar5 = iVar5 + 1;\n                }\n                iStack56 = iStack56 + 1;\n            } while (iStack56 < iVar2);\n        }\n        else {\n            if (uStack48 != 1) goto code_r0x00474129;\n            while (0 < iVar2) {\n                iVar5 = fcn.00431276(iVar1, *puStack52, iVar2);\n                cVar10 = uVar11 >> 0x18;\n                if ((iVar5 == 0) || (iVar2 = iVar2 - ((iVar5 - iVar1 >> 1) + arg_10h),  iVar2 < 0)) break;\n                iVar1 = fcn.00413402(iVar5, puStack52, arg_10h);\n                cVar10 = uVar11 >> 0x18;\n                if (iVar1 == 0) {\n                    iVar1 = iVar5 + arg_10h * 2;\n                }\n                else {\n                    iVar1 = iVar5 + 2;\n                    iVar2 = iVar2 + -1 + arg_10h;\n                }\n            }\n            fcn.00452e81(**(arg_8h + 4));\n            iVar5 = fcn.00452e26(**(arg_8h + 4));\n        }\n        if (iVar8 < 1) {\ncode_r0x00474129:\n            if (cVar10 == '\\0') {\n                fcn.0040ea00(1);\n                puVar6 = fcn.0040d1a0(0, 1);\n                fcn.004091e0();\n                puVar6[2] = 1;\n                *puVar6 = 1;\n                fcn.0040d1a0(0, 1);\n                fcn.00452e26(**(arg_8h + 4));\n                fcn.00403e20(0);\n            }\n            else {\n                fcn.0040ea00(1);\n                fcn.00452e26(**(arg_8h + 4));\n                fcn.00403e20(0);\n                fcn.0040d1a0(0, 1);\n            }\n            fcn.0040e870();\n            fcn.00403f40(1 - iVar9, 0);\n            fcn.00402260();\n            return 0;\n        }\n        iVar8 = iVar8 + 1;\n        if (cVar10 == '\\0') {\n            fcn.0040ea00(1);\n            piVar3 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            piVar3[2] = 1;\n            *piVar3 = iVar8;\n        }\n        else {\n            fcn.0040ea00(1);\n        }\n        uVar12 = cVar10 == '\\0';\n        iVar1 = 0;\n        iStack64 = 0;\n        fcn.00402170();\n        if (0 < iVar8) {\n            do {\n                if (iStack56 == 0) {\n                    arg_ch_00 = *(uVar4 + iStack64 * 2);\n                    iVar2 = fcn.00431276(arg_10h, arg_ch_00, iStack68);\n                    if ((iVar2 == 0) && (iStack64 != iVar5)) {\n                        fcn.004032d0(arg_ch_00);\n                    }\n                    else {\n                        fcn.0040d1a0(0, 1);\n                        uVar12 = uVar12 + 1;\n                        fcn.0040e870();\n                        fcn.00402170();\n                        iVar1 = iVar1 + 1;\n                    }\n                    iStack64 = iStack64 + 1;\n                }\n                else if (iStack56 == 1) {\n                    while (iVar1 = iVar5,  iVar2 = fcn.00431276(uVar4, *arg_10h, iVar5),  iVar2 != 0) {\n                        iVar5 = iVar5 - ((iVar2 - uVar4 >> 1) + iStack68);\n                        iVar1 = iVar5;\n                        if (iVar5 < 0) {\n                            iVar9 = iVar2 + (iStack68 + iVar5) * 2;\n                            goto code_r0x00474315;\n                        }\n                        iVar9 = iVar2;\n                        iVar7 = fcn.004135bf(iVar2, arg_10h, iStack68);\n                        if (iVar7 == 0) goto code_r0x00474315;\n                        uVar4 = iVar2 + 2;\n                        iVar5 = iVar5 + -1 + iStack68;\n                    }\n                    iVar9 = uVar4 + iVar5 * 2;\ncode_r0x00474315:\n                    fcn.00403e20(0);\n                    fcn.0040d1a0(0, 1);\n                    iVar5 = iVar1 + 1;\n                    fcn.0040e870();\n                    iVar1 = uVar12 + iVar9 * 2;\n                }\n            } while (iVar1 < iVar8);\n        }\n    }\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1870
    },
    "00474719": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474719(uint arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *unaff_EDI;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iStack860;\n    int32_t iStack856;\n    int32_t iStack852;\n    int32_t *piStack848;\n    int32_t *piStack844;\n    int32_t iStack840;\n    int32_t aiStack836 [2];\n    uint uStack828;\n    int32_t iStack824;\n    int32_t aiStack816 [203];\n    \n    iStack860 = 0;\n    iVar5 = arg_14h != '\\0';\n    iVar3 = *(*(arg_ch + 4) + iVar5 * -4 + 4);\n    piVar2 = fcn.00452e60(iVar3);\n    iStack860 = *piVar2;\n    iStack856 = piVar2[1];\n    iStack852 = piVar2[2];\n    piStack848 = piVar2[3];\n    *piStack848 = *piStack848 + 1;\n    iVar7 = *(arg_ch + 8) + -3 + iVar5;\n    aiStack816[0] = iVar7 / 2;\n    if (aiStack816[0] * 2 != iVar7) {\n        aiStack816[0] = iVar7;\n        fcn.004091e0();\n        arg_10h[2] = 1;\n        *arg_10h = 0;\n        fcn.00403f40(4, 0);\n        fcn.00402260();\n        return 0;\n    }\n    cVar1 = fcn.0046407c(&iStack860, &uStack828);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_10h[2] = 1;\n        *arg_10h = 0;\n        fcn.00403f40(2, 0);\n        fcn.00402260();\n        return 0;\n    }\n    uStack828 = 0;\n    iVar7 = 0;\n    if (0 < iStack824) {\n        iVar6 = (3 - iVar5) * 4;\n        do {\n            piVar2 = fcn.00452e60(*(iVar6 + *(arg_ch + 4)));\n            iStack856 = *piVar2;\n            iStack852 = piVar2[1];\n            piStack848 = piVar2[2];\n            piStack844 = piVar2[3];\n            *piStack844 = *piStack844 + 1;\n            cVar1 = fcn.004634e2(&iStack856, iVar7 + -0x10);\n            if (cVar1 == '\\0') {\n                fcn.004091e0();\n                arg_10h[2] = 1;\n                *arg_10h = 0;\n                fcn.00403f40(1, 0);\n                fcn.00402260();\n                fcn.00402260();\n                return 0;\n            }\n            iStack840 = iStack840 + *unaff_EDI;\n            fcn.00402260();\n            unaff_EDI = unaff_EDI + 6;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < aiStack836[0]);\n    }\n    if (arg_14h == '\\0') {\n        iVar7 = arg_ch;\n        iVar3 = fcn.004641ae(arg_8h, aiStack836, arg_ch);\n        if (iVar3 == 0) {\n            fcn.004091e0();\n            arg_10h[2] = 1;\n            *arg_10h = 0;\n            fcn.00402260();\n            return 0;\n        }\n    }\n    else {\n        iVar7 = *(*(arg_ch + 4) + 4);\n        iStack840 = fcn.0044b01e(iVar7);\n    }\n    iVar3 = arg_ch;\n    fcn.0045725e(&piStack848, arg_ch, 4 - iVar5);\n    iVar5 = fcn.00410e9c(&iStack860);\n    if (iVar5 == 0) {\n        fcn.0045e1ee(arg_8h, 0x67, 0xffffffff);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar4);\n    }\n    fcn.0040ea00(1);\n    if (piStack848 == 0x1) {\n        uVar4 = fcn.0040d1a0(0, 1);\n        fcn.0046bd0c(&iStack840, uVar4);\n    }\n    if (0 < iStack852) {\n        piVar2 = aiStack816;\n        do {\n            uVar4 = fcn.0040d1a0(0, 1);\n            fcn.0046bd0c(piVar2, uVar4);\n        } while (iVar3 < iStack860);\n    }\n    if (arg_14h == '\\0') {\n        cVar1 = fcn.0044357d(**(arg_ch + 4));\n        if (cVar1 != '\\0') {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar7);\n        }\n    }\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1263
    },
    "00474a69": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00474a69(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    double *pdVar3;\n    uint *puVar4;\n    int32_t aiStackY12384 [2560];\n    uint var_85ch;\n    uint var_658h;\n    uint var_454h;\n    uint var_250h;\n    uint var_248h;\n    uint var_22ch;\n    uint uStackY72;\n    uint var_24h;\n    uint var_14h;\n    double dVar5;\n    int32_t var_4h;\n    \n    fcn.00422880();\n    var_4h = 0;\n    fcn.0040bf10();\n    var_14h = 0x474a9f;\n    fcn.00410e40(0x14);\n    var_14h = 0;\n    var_250h = 0x22c;\n    (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)();\n    (*_sym.imp.KERNEL32.dll_Process32FirstW)();\n    puVar4 = &stack0xffffcfa0;\n    do {\n        fcn.00413bbe(&fcn.00474a69::var_22ch, &fcn.00474a69::var_14h, &fcn.00474a69::var_85ch, &fcn.00474a69::var_454h, \n                     &fcn.00474a69::var_658h);\n        fcn.004116d6(&fcn.00474a69::var_454h, &fcn.00474a69::var_658h);\n        if (*(arg_8h + 8) == 0) {\ncode_r0x00474b2c:\n            fcn.00402170();\n            var_4h = var_4h + 1;\n            *puVar4 = var_248h;\n            puVar4 = puVar4 + 5;\n        }\n        else {\n            arg_ch_00 = fcn.00452e81(**(arg_8h + 4));\n            iVar1 = fcn.0041164b(&fcn.00474a69::var_454h, arg_ch_00);\n            if (iVar1 == 0) goto code_r0x00474b2c;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_Process32NextW)();\n        if (iVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            fcn.0040ea00(2);\n            uStackY72 = 0x474b85;\n            piVar2 = fcn.0040d1a0(0, 2);\n            fcn.004091e0();\n            piVar2[2] = 1;\n            *piVar2 = var_4h;\n            if (0 < var_4h) {\n                arg_8h = &stack0xffffcfa0;\n                do {\n                    fcn.0040d1a0(0, 2);\n                    fcn.0040e8e0();\n                    pdVar3 = fcn.0040d1a0(0, 2);\n                    dVar5 = *arg_8h;\n                    if (*arg_8h < 0) {\n                        dVar5 = dVar5 + *0x48bd70;\n                    }\n                    fcn.004091e0();\n                    arg_8h = arg_8h + 5;\n                    *pdVar3 = dVar5;\n                    var_4h = var_4h + -1;\n                    *(pdVar3 + 1) = 3;\n                } while (var_4h != 0);\n            }\n            fcn.00410dc0(&stack0xffffcfa0, 0x14, 0x200, 0x441ab3);\n            fcn.00402260();\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 922
    },
    "00474c4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474c4c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t unaff_EBX;\n    int32_t iVar6;\n    uchar *arg_10h;\n    uint uVar7;\n    uchar auStack92 [4];\n    uint uStack88;\n    uint32_t uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    \n    uVar1 = *(arg_8h + 8);\n    uStack84 = uVar1;\n    fcn.004091e0();\n    iVar6 = 0;\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    if (1 < uVar1) {\n        iVar6 = fcn.0040c8f0();\n    }\n    fcn.0040d530();\n    if (uStack84 != 0) {\n        fcn.00409120(**(arg_8h + 4));\n    }\n    uStack88 = 0xffffffff;\n    iVar3 = fcn.00442e6f(&uStack76);\n    if (iVar3 < 1) {\ncode_r0x00474cf2:\n        unaff_EBX = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    }\n    else {\n        arg_10h = auStack92;\n        puVar5 = &uStack80;\n        uVar4 = fcn.00452e81(puVar5);\n        cVar2 = fcn.00443a5f(uVar4, puVar5, arg_10h);\n        if (cVar2 == '\\0') goto code_r0x00474ef8;\n        if (unaff_EBX == -1) goto code_r0x00474cf2;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x410, 0, unaff_EBX);\n    if (iVar6 == 0) {\n        uVar7 = uVar4;\n        iVar6 = (*_sym.imp.PSAPI.DLL_GetProcessMemoryInfo)(uVar4, &uStack80, 0x28);\n        if (iVar6 != 0) {\n            fcn.0040ea00(1);\n            puVar5 = fcn.0040d1a0(0, 1);\n            uVar4 = 0;\n            fcn.004091e0();\n            puVar5[2] = 2;\n            *puVar5 = uStack68;\n            puVar5[1] = uVar4;\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[1] = 0;\n            uStack40 = uStack72;\n            uVar4 = uVar7;\ncode_r0x00474ee8:\n            puVar5[2] = 2;\n            *puVar5 = uStack40;\n        }\n    }\n    else if (iVar6 == 1) {\n        uVar7 = uVar4;\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetProcessIoCounters)(uVar4, &uStack80);\n        if (iVar6 != 0) {\n            fcn.0040ea00(1);\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[2] = 2;\n            *puVar5 = uStack80;\n            puVar5[1] = uStack76;\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[2] = 2;\n            *puVar5 = uStack72;\n            puVar5[1] = uStack68;\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[2] = 2;\n            *puVar5 = uStack64;\n            puVar5[1] = uStack60;\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[2] = 2;\n            *puVar5 = uStack56;\n            puVar5[1] = uStack52;\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[2] = 2;\n            *puVar5 = uStack48;\n            puVar5[1] = uStack44;\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[1] = uStack36;\n            uVar4 = uVar7;\n            goto code_r0x00474ee8;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\ncode_r0x00474ef8:\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 1227
    },
    "0047519b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047519b(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_18h;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint in_ECX;\n    uint *unaff_ESI;\n    int32_t *unaff_EDI;\n    uint arg_24h;\n    uint arg_28h;\n    uchar *arg_10h;\n    uint *puVar7;\n    uchar *puVar8;\n    uchar auStack108 [4];\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    int32_t *piStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [4];\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uint auStack56 [2];\n    uint uStack48;\n    uint uStack44;\n    \n    auStack56[0] = 0;\n    uStack44 = 0;\n    uStack92 = 0;\n    uStack96 = 0;\n    uStack76 = 0;\n    uStack80 = 0;\n    uStack84 = 0;\n    uStack104 = 0;\n    uStack100 = 0;\n    piStack88 = NULL;\n    uStack48 = 1;\n    fcn.0040e8e0();\n    iVar3 = **(arg_8h + 4);\n    if (*(iVar3 + 8) == 8) {\n        fcn.00409120(iVar3);\n        cVar1 = fcn.004329dd(auStack56);\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.00451712(in_ECX, 2, 0, L\"First parameter must be of type \\'Object\\'.\", 1);\n            fcn.00431416(&stack0xffffff8c);\n            fcn.00431416(&stack0xffffff7c);\n            fcn.00431416(&stack0xffffff74);\n            fcn.00431416(&stack0xffffff84);\n            fcn.00431416(&stack0xffffff84);\n            fcn.00431416(&stack0xffffff84);\n            fcn.00431416(&stack0xffffff6c);\n            fcn.00431416(&stack0xffffff6c);\n            fcn.004091e0();\n            return uVar2;\n        }\n        puVar8 = auStack108;\n        fcn.00441c31(puVar8, *(iStack64 + 8));\n        iVar6 = (***unaff_ESI)();\n        if (iVar6 < 0) {\n            uVar2 = fcn.00451712(in_ECX, iVar6, 0, 0, 1);\n            fcn.00431416(&stack0xffffff78);\n            fcn.00431416(&stack0xffffff68);\n            fcn.00431416(&stack0xffffff60);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff58);\n            fcn.00431416(&stack0xffffff58);\n            fcn.004091e0();\n            return uVar2;\n        }\n        puVar7 = &uStack68;\n        if (*(arg_8h + 8) == 3) {\n            uVar2 = *(*(arg_8h + 4) + 8);\n            arg_10h = &stack0xffffff7c;\n            fcn.00452e81(uVar2);\n        }\n        else {\n            arg_10h = &stack0xffffff7c;\n            uVar2 = 0;\n        }\n        iVar6 = fcn.0043142e(unaff_ESI, uVar2, arg_10h, puVar7);\n        if (iVar6 < 0) {\ncode_r0x0047564b:\n            uVar2 = fcn.00451712(in_ECX, iVar6, 0, 0, 1);\n            fcn.00431416(&stack0xffffff78);\n            fcn.00431416(&stack0xffffff68);\n            fcn.00431416(&stack0xffffff60);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff58);\n            fcn.00431416(&stack0xffffff58);\n            fcn.004091e0();\n            return uVar2;\n        }\n        iVar6 = (**(*unaff_EDI + 0x10))();\n        if (iVar6 < 0) goto code_r0x0047564b;\n        iVar6 = fcn.00411777(0xd8);\n        if (iVar6 == 0) {\ncode_r0x00475739:\n            uVar2 = fcn.00451712(in_ECX, 10, 0, L\"Failed to create the Event Object.\", 1);\n            fcn.00431416(&stack0xffffff78);\n            fcn.00431416(&stack0xffffff68);\n            fcn.00431416(&stack0xffffff60);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff58);\n            fcn.00431416(&stack0xffffff58);\n            fcn.004091e0();\n            return uVar2;\n        }\n        uVar2 = *(*(arg_8h + 4) + 4);\n        uVar4 = fcn.00452e81(uVar2);\n        piVar5 = fcn.0046fcff(iVar6, iVar3, &piStack88, puVar8, uVar4, uVar2, uStack68, iStack64, uStack60);\n        if (piVar5 == NULL) goto code_r0x00475739;\n        iVar3 = (**(*piVar5 + 0x1c))();\n        if (iVar3 < 0) {\n            (**(*piVar5 + 8))();\n            uVar2 = fcn.00451712(in_ECX, iVar3, 0, 0, 1);\n            fcn.00431416(&stack0xffffff48);\n            fcn.00431416(&stack0xffffff38);\n            fcn.00431416(&stack0xffffff30);\n            fcn.00431416(&stack0xffffff40);\n            fcn.00431416(&stack0xffffff40);\n            fcn.00431416(&stack0xffffff40);\n            fcn.00431416(&stack0xffffff28);\n            fcn.00431416(&stack0xffffff28);\n            fcn.004091e0();\n            return uVar2;\n        }\n    }\n    else {\n        uVar2 = fcn.00452e81(iVar3);\n        iVar3 = fcn.004132dc(uVar2, iVar3);\n        if (iVar3 != 0) {\n            uVar2 = fcn.00451712(in_ECX, 1, 0, L\"Incorrect Parameter format\", 0);\n            fcn.00431416(&stack0xffffff90);\n            fcn.00431416(&stack0xffffff80);\n            fcn.00431416(&stack0xffffff78);\n            fcn.00431416(&stack0xffffff88);\n            fcn.00431416(&stack0xffffff88);\n            fcn.00431416(&stack0xffffff88);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff70);\n            fcn.004091e0();\n            return uVar2;\n        }\n        if (*(arg_8h + 8) == 1) {\n            if ((*0x4a7f19 != '\\0') && (*0x4a7f1c != NULL)) {\n                fcn.0040e8e0();\n            }\n            goto code_r0x0047548d;\n        }\n        if ((*0x4a7f19 != '\\0') && (*0x4a7f1c != NULL)) {\n            uVar2 = fcn.00451712(in_ECX, 2, 0, L\"Can\\'t install a new Errorhandler when one is still active.\", 1);\n            fcn.00431416(&stack0xffffff90);\n            fcn.00431416(&stack0xffffff80);\n            fcn.00431416(&stack0xffffff78);\n            fcn.00431416(&stack0xffffff88);\n            fcn.00431416(&stack0xffffff88);\n            fcn.00431416(&stack0xffffff88);\n            fcn.00431416(&stack0xffffff70);\n            fcn.00431416(&stack0xffffff70);\n            fcn.004091e0();\n            return uVar2;\n        }\n        uVar2 = *(*(arg_8h + 4) + 4);\n        puVar8 = auStack72;\n        puVar7 = &uStack68;\n        piVar5 = &iStack64;\n        uVar4 = fcn.00452e81(uVar2);\n        cVar1 = fcn.00464ac0(in_ECX, uVar4, uVar2, piVar5, puVar7, puVar8);\n        if (cVar1 == '\\0') {\n            fcn.00403f40(1, 0);\n            goto code_r0x0047548d;\n        }\n        iVar3 = fcn.00411777(0xd8);\n        if (iVar3 == 0) {\ncode_r0x004753df:\n            uVar2 = fcn.00451712(in_ECX, 0x13, 0, L\"Failed to create the Error Handler\", 1);\n            fcn.00431416(&stack0xffffff4c);\n            fcn.00431416(&stack0xffffff3c);\n            fcn.00431416(&stack0xffffff34);\n            fcn.00431416(&stack0xffffff44);\n            fcn.00431416(&stack0xffffff44);\n            fcn.00431416(&stack0xffffff44);\n            fcn.00431416(&stack0xffffff2c);\n            fcn.00431416(&stack0xffffff2c);\n            fcn.004091e0();\n            return uVar2;\n        }\n        uVar2 = *(*(arg_8h + 4) + 4);\n        uVar4 = *0x4819a0;\n        arg_24h = *0x4819a4;\n        arg_28h = *0x4819a8;\n        arg_18h = fcn.00452e81(uVar2);\n        piVar5 = fcn.0046fcff(iVar3, 0, 0, 0, arg_18h, uVar2, uVar4, arg_24h, arg_28h);\n        if (piVar5 == NULL) goto code_r0x004753df;\n        *0x4a7f19 = '\\x01';\n        *0x4a7f1c = piVar5;\n    }\n    uStack96 = CONCAT22(uStack96._2_2_, 9);\n    piStack88 = piVar5;\n    fcn.0046795f(&uStack96);\n    (**(*piVar5 + 8))();\n    *0x4a7f18 = 1;\ncode_r0x0047548d:\n    fcn.00431416(&stack0xffffff80);\n    fcn.00431416(&stack0xffffff70);\n    fcn.00431416(&stack0xffffff68);\n    fcn.00431416(&stack0xffffff78);\n    fcn.00431416(&stack0xffffff78);\n    fcn.00431416(&stack0xffffff78);\n    fcn.00431416(&stack0xffffff60);\n    fcn.00431416(&stack0xffffff60);\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 2727
    },
    "00475c44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475c44(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    int32_t unaff_EBX;\n    uint *puVar12;\n    uint uVar13;\n    uchar uVar14;\n    uchar uStack399;\n    uint uVar15;\n    uint uVar16;\n    uchar auStack352 [4];\n    uchar auStack348 [4];\n    uint uStack344;\n    uint auStack340 [2];\n    ushort uStack332;\n    uint uStack330;\n    uint uStack326;\n    uint uStack322;\n    ushort uStack318;\n    uint uStack300;\n    uint uStack296;\n    uint auStack292 [5];\n    uint uStack272;\n    int32_t iStack268;\n    \n    auStack340[0] = fcn.0040c8f0();\n    fcn.0040e8e0();\n    iVar3 = fcn.0040d1a0(1, 1);\n    if (iVar3 == 0) {\n        fcn.00403f40(0xffffffff, 0);\n        return 0;\n    }\n    iVar3 = fcn.0040c8f0();\n    if (iVar3 != 0x2b594d1) {\n        fcn.00403f40(0xfffffffe, 0);\n        return 0;\n    }\n    uStack344 = fcn.0040d1a0(1, 1);\n    iVar3 = fcn.0040c8f0();\n    uStack332 = 0;\n    uStack330 = 0;\n    uStack326 = 0;\n    uStack322 = 0;\n    uStack318 = 0;\n    uStack300 = 0x10;\n    if (iVar3 == -1) {\n        fcn.00403f40(0xffffffff, 0);\n        return 0;\n    }\n    uVar16 = 0;\n    uVar15 = 0;\n    uStack296 = 0;\n    auStack292[0] = 100000;\n    uStack272 = 1;\n    iStack268 = iVar3;\n    iVar4 = (*_sym.imp.WSOCK32.dll_select)(0, &uStack272);\n    if (iVar4 == -1) {\n        uVar16 = 0;\n        uVar15 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00403f40(uVar15, uVar16);\n        return 0;\n    }\n    uVar5 = fcn.00411777(unaff_EBX + 1);\n    iVar4 = iVar3;\n    iVar6 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(iVar3, auStack292);\n    if (iVar6 == 0) {\n        fcn.0041137c(uVar16);\n        return 0;\n    }\n    uVar1 = &uStack330 + 2;\n    uVar14 = uVar1;\n    uStack399 = uVar1 >> 8;\n    uVar13 = 0;\n    puVar7 = (*_sym.imp.WSOCK32.dll_recvfrom)(iVar3, uVar16, uVar5, 0, 0x98);\n    if (puVar7 == 0xffffffff) {\n        uVar16 = 0;\n        uVar15 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00403f40(uVar15, uVar16);\n        return 0;\n    }\n    uVar2 = 0;\n    if (*(arg_8h + 8) < 3) {\ncode_r0x00475f28:\n        puVar12 = uVar1 & 0xffff0000 | CONCAT11(uStack399, uVar14);\n        *(puVar12 + puVar7) = 0;\n        puVar11 = fcn.004136e0(puVar12);\n        if (puVar11 == puVar7) {\n            fcn.004013c0();\n            puVar7 = auStack340;\n            fcn.00444bc2(puVar7, puVar12);\n            fcn.00403da0(auStack348, &stack0xfffffe88);\n            fcn.00401350();\n            fcn.0040e870();\n            fcn.00402260();\n            goto code_r0x00475f10;\n        }\n        if (uVar2 == 0) goto code_r0x00475f00;\n    }\n    else {\n        puVar12 = puVar7;\n        uVar8 = fcn.0040c8f0();\n        uVar8 = uVar8 & 1;\n        uVar2 = fcn.0040c8f0();\n        uVar2 = uVar2 & 2;\n        if (uVar2 != 0) {\n            fcn.0040ea00(1);\n            fcn.0040d1a0(0, 1);\n            uVar15 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(uVar15);\n            fcn.00444bc2(&stack0xfffffe8c, uVar15);\n            fcn.004660b1(&stack0xfffffe84, auStack352);\n            fcn.0040e870();\n            fcn.00402260();\n            puVar9 = fcn.0040d1a0(0, 1);\n            uVar10 = (*_sym.imp.WSOCK32.dll_ntohs)(CONCAT11(uStack399, uVar14) << 0x10);\n            fcn.004091e0();\n            *puVar9 = uVar10 & 0xffff;\n            puVar9[2] = 1;\n            iVar4 = fcn.0040d1a0(0, 1);\n            puVar7 = puVar12;\n            fcn.00401350();\n        }\n        if (uVar8 == 0) goto code_r0x00475f28;\n        if (uVar2 == 0) {\n            puVar12 = uVar1 & 0xffff0000 | CONCAT11(uStack399, uVar14);\ncode_r0x00475f00:\n            iVar4 = arg_ch;\n        }\n        else {\n            puVar12 = uVar1 & 0xffff0000 | CONCAT11(uStack399, uVar14);\n        }\n    }\n    puVar11 = puVar7;\n    uVar15 = fcn.00452ba7(iVar4, puVar7);\n    fcn.00411000(uVar15, iVar4, puVar7);\n    puVar7 = puVar12;\n    puVar12 = puVar11;\ncode_r0x00475f10:\n    fcn.0041137c(uVar13, puVar7, puVar12);\n    return 0;\n}\n",
        "token_count": 1586
    },
    "00476232": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00476232(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_8h);\n    arg_10h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.004318a3(*(in_ECX + 0x100), &var_10h, arg_10h);\n    var_8h = var_8h - var_10h;\n    var_4h = var_4h - var_ch;\n    if (*(arg_8h + 8) == 0) {\n        fcn.0040ea00(1);\n        piVar2 = fcn.0040d1a0(0, 1);\n        iVar4 = var_8h;\n        fcn.004091e0();\n        piVar2[2] = 1;\n        *piVar2 = iVar4;\n        piVar2 = fcn.0040d1a0(0, 1);\n        iVar4 = var_4h;\n        fcn.004091e0();\n        *piVar2 = iVar4;\n        piVar2[2] = 1;\n        return 0;\n    }\n    cVar1 = fcn.00453140(**(arg_8h + 4));\n    if (cVar1 == '\\0') {\n        fcn.00403f40(1, 0);\n    }\n    else {\n        iVar3 = fcn.0040c8f0();\n        iVar4 = var_8h;\n        if ((iVar3 == 0) || (iVar3 = fcn.0040c8f0(),  iVar4 = var_4h,  iVar3 == 1)) {\n            fcn.004091e0();\n            *arg_ch = iVar4;\n            arg_ch[2] = 1;\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 506
    },
    "0047660c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047660c(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint uVar6;\n    uint *puVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar8 = arg_8h;\n    if (*(arg_8h + 8) == 0) {\n        arg_8h = *(in_ECX + 4);\n        iVar8 = 0;\n        while( true ) {\n            puVar7 = &fcn.0047660c::arg_8h;\n            uVar10 = 0x47663d;\n            cVar4 = fcn.00441fc1(puVar7, 0);\n            if (cVar4 == '\\0') break;\n            cVar4 = fcn.004423ce(*arg_8h + 0xd4);\n            if (cVar4 == '\\0') {\n                iVar8 = iVar8 + 1;\n            }\n            fcn.00440543(&fcn.0047660c::arg_8h, &fcn.0047660c::var_4h);\n        }\n        goto code_r0x004768ac;\n    }\n    var_4h = fcn.0040c8f0();\n    arg_8h = *(in_ECX + 4);\n    while ((piVar2 = arg_8h,  cVar4 = fcn.00441fc1(&fcn.0047660c::arg_8h, 0),  cVar4 != '\\0' &&\n           (*(*piVar2 + 0xd8) != var_4h))) {\n        fcn.00440543(&fcn.0047660c::arg_8h, &fcn.0047660c::var_8h);\n    }\n    puVar7 = &fcn.0047660c::arg_8h;\n    uVar10 = 0;\n    cVar4 = fcn.00441fc1(puVar7, 0);\n    if (cVar4 == '\\0') {\n        uVar10 = 1;\ncode_r0x004768e3:\n        fcn.00403f40(uVar10, 0);\n        fcn.0040e8e0();\n        return 0;\n    }\n    if (1 < *(iVar8 + 8)) {\n        uVar6 = fcn.0040c8f0();\n        piVar3 = arg_ch;\n    // switch table (6 cases) at 0x476904\n        switch(uVar6) {\n        case 0:\n            iVar8 = *(*piVar2 + 8);\n            iVar1 = *(*piVar2 + 0xc);\n            fcn.004091e0();\n            piVar3[2] = 2;\n            *piVar3 = iVar8;\n            piVar3[1] = iVar1;\n            return 0;\n        case 1:\n            iVar8 = *(*piVar2 + 0x10);\n            iVar1 = *(*piVar2 + 0x14);\n            fcn.004091e0();\n            piVar3[2] = 2;\n            *piVar3 = iVar8;\n            piVar3[1] = iVar1;\n            return 0;\n        case 2:\n            uVar5 = fcn.004423ce(*piVar2 + 0xd4);\n            arg_8h = arg_8h & 0xffffff00 | uVar5;\n            fcn.00452b3e(arg_ch, arg_8h);\n            return 0;\n        case 3:\n            uVar5 = fcn.00451ed9(*piVar2);\n            arg_8h = arg_8h & 0xffffff00 | uVar5;\n            fcn.00452b3e(arg_ch, arg_8h);\n            return 0;\n        case 4:\n            iVar8 = *(*piVar2 + 0x18);\n            break;\n        case 5:\n            iVar8 = *(*piVar2 + 0x1c);\n            break;\n        case 0xbad1abe1:\n            uVar10 = 2;\n            goto code_r0x004768e3;\n        default:\n            goto code_r0x004766e3;\n        }\ncode_r0x004768ac:\n        piVar2 = arg_ch;\n        fcn.004091e0(puVar7, uVar10);\n        piVar2[2] = 1;\n        *piVar2 = iVar8;\n        return 0;\n    }\ncode_r0x004766e3:\n    fcn.0040ea00(1);\n    uVar10 = *(*piVar2 + 8);\n    var_8h = *(*piVar2 + 0xc);\n    puVar7 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    puVar7[2] = 2;\n    *puVar7 = uVar10;\n    puVar7[1] = var_8h;\n    uVar10 = *(*piVar2 + 0x10);\n    var_8h = *(*piVar2 + 0x14);\n    puVar7 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    puVar7[2] = 2;\n    *puVar7 = uVar10;\n    puVar7[1] = var_8h;\n    uVar5 = fcn.004423ce(*piVar2 + 0xd4);\n    arg_ch = arg_ch & 0xffffff00 | uVar5;\n    uVar9 = arg_ch;\n    uVar10 = fcn.0040d1a0(0, 1);\n    fcn.00452b3e(uVar10, uVar9);\n    uVar5 = fcn.00451ed9(*piVar2);\n    arg_ch = arg_ch & 0xffffff00 | uVar5;\n    uVar9 = arg_ch;\n    uVar10 = fcn.0040d1a0(0, 1);\n    fcn.00452b3e(uVar10, uVar9);\n    arg_ch = *(*piVar2 + 0x18);\n    puVar7 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    puVar7[2] = 1;\n    *puVar7 = arg_ch;\n    uVar10 = *(*piVar2 + 0x1c);\n    puVar7 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    puVar7[2] = 1;\n    *puVar7 = uVar10;\n    return 0;\n}\n",
        "token_count": 1570
    },
    "00476a2d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00476a2d(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar *arg_8h_00;\n    uint arg_8h_01;\n    uint *puVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint unaff_EDI;\n    uchar *arg_1ch;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint in_stack_ffffffa4;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uchar auStack44 [40];\n    \n    iVar4 = 0;\n    uStack64 = 0;\n    if (1 < *(arg_8h + 8)) {\n        in_stack_ffffffa4 = *(*(arg_8h + 4) + 4);\n        uStack68 = fcn.0044b01e(in_stack_ffffffa4);\n    }\n    uVar2 = **(arg_8h + 4);\n    uVar6 = uVar2;\n    cVar1 = fcn.00442714(uVar2);\n    if (cVar1 != '\\0') {\n        puVar5 = 0x1;\n        uVar2 = fcn.004329a8(uVar2, 1);\n        uStack68 = uVar2;\n        arg_8h_00 = fcn.00411777(-(uVar2 * 6 >> 0x20 != 0) | uVar2 * 6);\n        if (0 < uVar2) {\n            do {\n                uVar2 = uVar6;\n                arg_8h_01 = fcn.0040d1a0(1, 2);\n                puVar3 = fcn.00452e60(arg_8h_01);\n                uStack60 = *puVar3;\n                uStack56 = puVar3[1];\n                uStack52 = puVar3[2];\n                piStack48 = puVar3[3];\n                *piStack48 = *piStack48 + 1;\n                fcn.0040d1a0(1, 2);\n                uStack64 = fcn.0040c8f0();\n                arg_8h_00 = auStack44;\n                fcn.00401c30();\n                arg_1ch = &stack0xffffffab;\n                cVar1 = fcn.0046868d(arg_8h_00, &uStack68, &stack0xffffffa8, &stack0xffffffa9, &stack0xffffffaa, arg_1ch\n                                    );\n                cVar1 = cVar1 == '\\0';\n                fcn.00402260();\n                if (cVar1 != '\\0') {\n                    fcn.0041137c(arg_8h_00);\n                    fcn.004091e0();\n                    arg_ch[2] = 1;\n                    *arg_ch = 0;\n                    fcn.00402260();\n                    return 0;\n                }\n                *puVar5 = 1;\n                if (arg_1ch != '\\0') {\n                    *puVar5 = 5;\n                }\n                if (arg_1ch >> 8 != '\\0') {\n                    *puVar5 = *puVar5 | 8;\n                }\n                if (arg_1ch >> 0x10 != '\\0') {\n                    *puVar5 = *puVar5 | 0x10;\n                }\n                *(puVar5 + 4) = unaff_EDI;\n                *(puVar5 + 2) = in_stack_ffffffa4;\n                fcn.00402260();\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 6;\n                uVar6 = uVar2;\n            } while (iVar4 < uVar2);\n        }\n        fcn.00441240(arg_8h_00, uVar2, unaff_EBX);\n        fcn.0041137c(unaff_EDI);\n        return 0;\n    }\n    fcn.00441240(0, 0, uStack72);\n    return 0;\n}\n",
        "token_count": 949
    },
    "00477e12": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00477e12(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t arg_ch_00;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t arg_ch_01;\n    int32_t arg_8h_00;\n    int32_t iStack564;\n    int32_t aiStack540 [134];\n    \n    fcn.00452e81(**(arg_8h + 4));\n    fcn.004102f0();\n    fcn.00411777(0xfffe);\n    fcn.0040f670();\n    piVar4 = aiStack540;\n    *(iStack564 + 2) = 10;\n    arg_10h = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionNamesW)(iStack564, 0x7fff);\n    iVar3 = 0;\n    if ((arg_10h != 0) && (*(iStack564 + 2) != 10)) {\n        piVar1 = fcn.00411777(0xc);\n        if (piVar1 == NULL) {\n            piVar1 = NULL;\n        }\n        else {\n            *piVar1 = 0;\n            piVar1[1] = 0;\n            piVar1[2] = 0;\n        }\n        arg_ch_01 = 0;\n        *piVar1 = 0;\n        if (0 < arg_10h) {\n            do {\n                piVar2 = piVar1;\n                if (*(iStack564 + iVar3 * 2) == 0) {\n                    piVar1[1] = iVar3;\n                    arg_ch_01 = arg_ch_01 + 1;\n                    *(iStack564 + iVar3 * 2) = 0xd;\n                    piVar2 = fcn.00411777(0xc);\n                    if (piVar2 == NULL) {\n                        piVar2 = NULL;\n                    }\n                    else {\n                        *piVar2 = 0;\n                        piVar2[1] = 0;\n                        piVar2[2] = 0;\n                    }\n                    piVar1[2] = piVar2;\n                    *piVar2 = iVar3 + 1;\n                }\n                iVar3 = iVar3 + 1;\n                piVar1 = piVar2;\n            } while (iVar3 < arg_10h);\n        }\n        fcn.0040ea00(1);\n        iVar3 = arg_ch;\n        fcn.004773ca(arg_ch, arg_ch_01);\n        fcn.0040bf10();\n        if (0 < arg_ch_01) {\n            do {\n                fcn.0040c8a0(&stack0xfffffdc0, 0);\n                arg_8h_00 = *piVar4;\n                fcn.00403e20(arg_8h_00);\n                arg_ch_00 = iVar3 + 1;\n                iVar3 = arg_ch;\n                fcn.004773a2(arg_ch, arg_ch_00, arg_10h);\n                piVar1 = piVar4[2];\n                fcn.0041137c(piVar4);\n                piVar4 = piVar1;\n            } while (arg_8h_00 < arg_ch_01);\n        }\n        fcn.00402260();\n        fcn.0040f690();\n        return 0;\n    }\n    fcn.00403f40(1, 0);\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 797
    },
    "00478261": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478261(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint uStack596;\n    uchar auStack584 [4];\n    int32_t iStack580;\n    \n    fcn.00452e81(**(arg_8h + 4));\n    fcn.004102f0();\n    fcn.00411777(0xfffe);\n    fcn.0040f670();\n    uVar4 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n    puVar5 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(uVar4);\n    if (puVar5 != NULL) {\n        piVar6 = fcn.00411777(0x14);\n        if (piVar6 == NULL) {\n            piVar6 = NULL;\n        }\n        else {\n            *piVar6 = 0;\n            piVar6[1] = 0;\n            piVar6[2] = 0;\n            piVar6[3] = 0;\n            piVar6[4] = 0;\n        }\n        iVar8 = 0;\n        *piVar6 = 0;\n        bVar3 = false;\n        iVar9 = 0;\n        iVar11 = 0;\n        if (0 < puVar5) {\n            do {\n                iVar1 = *(iStack580 + iVar9 * 2);\n                if ((iVar1 == 0x3b) && (*piVar6 == iVar9)) {\n                    bVar3 = true;\n                }\n                else if ((iVar1 != 0x3d) || ((piVar6[1] != 0 || (bVar3)))) {\n                    if (iVar1 == 0) {\n                        *(iStack580 + iVar9 * 2) = 0xd;\n                        if ((piVar6[2] == 0) || (bVar3)) {\n                            piVar6[3] = 0;\n                            piVar6[2] = 0;\n                            piVar6[1] = 0;\ncode_r0x004783b6:\n                            *piVar6 = iVar9 + 1;\n                        }\n                        else {\n                            iVar8 = iVar8 + 1;\n                            piVar6[3] = iVar9;\n                            iVar11 = iVar8;\n                            if (*(iStack580 + 2 + iVar9 * 2) != 0) {\n                                piVar7 = fcn.00411777(0x14);\n                                iVar11 = iVar8;\n                                if (piVar7 == NULL) {\n                                    piVar6[4] = 0;\n                                    piVar6 = NULL;\n                                }\n                                else {\n                                    *piVar7 = 0;\n                                    piVar7[1] = 0;\n                                    piVar7[2] = 0;\n                                    piVar7[3] = 0;\n                                    piVar7[4] = 0;\n                                    piVar6[4] = piVar7;\n                                    piVar6 = piVar7;\n                                }\n                                goto code_r0x004783b6;\n                            }\n                        }\n                        bVar3 = false;\n                        if (*(iStack580 + 2 + iVar9 * 2) == 0) break;\n                    }\n                }\n                else {\n                    piVar6[1] = iVar9;\n                    piVar6[2] = iVar9 + 1;\n                }\n                iVar9 = iVar9 + 1;\n            } while (iVar9 < puVar5);\n            if (0 < iVar8) {\n                fcn.0040ea00(2);\n                uVar4 = arg_ch;\n                fcn.00477425(arg_ch, iVar11);\n                fcn.0040bf10();\n                fcn.0040bf10();\n                if (0 < iVar11) {\n                    iVar11 = 1;\n                    do {\n                        fcn.0040c8a0(auStack584, 0);\n                        fcn.00403e20(*puVar5);\n                        fcn.004773f9(arg_ch, iVar11, 0, uStack596);\n                        fcn.0040c8a0(&stack0xfffffd8c, 0);\n                        iVar8 = puVar5[2];\n                        fcn.00403e20(iVar8);\n                        uVar10 = arg_ch;\n                        fcn.004773f9(arg_ch, iVar11, 1, uVar4);\n                        puVar2 = puVar5[4];\n                        fcn.0041137c(puVar5);\n                        iVar11 = iVar11 + 1;\n                        puVar5 = puVar2;\n                        uVar4 = uVar10;\n                    } while (iVar8 != 1);\n                }\n                fcn.00402260();\n                fcn.00402260();\n                fcn.0040f690();\n                return 0;\n            }\n        }\n    }\n    fcn.00403f40(1, 0);\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 1168
    },
    "004784f5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004784f5(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h[2] == 5) && (*arg_8h != 0)) {\n        fcn.0040e9e0();\n        uVar1 = (*arg_8h)[2];\n        *arg_ch = **arg_8h;\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 107
    },
    "00478524": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00478524(uint32_t *arg_8h, int32_t **arg_ch)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    ppiVar1 = arg_ch;\n    uVar3 = *arg_8h;\n    iVar4 = *(uVar3 + 0x20c);\n    if ((iVar4 != 0) && (iVar4 == (*arg_ch)[0x83])) {\n        iVar5 = 0;\n        if (0 < iVar4) {\n            iVar4 = 0x10c;\n            do {\n                *(iVar4 + uVar3) = 0;\n                *(iVar4 + *arg_ch) = 0;\n                uVar3 = *arg_8h;\n                iVar5 = iVar5 + 1;\n                iVar4 = iVar4 + 4;\n            } while (iVar5 < *(uVar3 + 0x20c));\n        }\n        do {\n            iVar4 = fcn.0040d290();\n            if (((-1 < iVar4) && (iVar4 = *(**ppiVar1 + iVar4 * 4),  iVar4 != 0)) &&\n               (iVar5 = fcn.0040d1a0(0, 0),  iVar5 != 0)) {\n                fcn.00409120(iVar4);\n            }\n            uVar3 = *arg_8h;\n            arg_ch = NULL;\n            if (0 < *(uVar3 + 0x20c)) {\n                iVar4 = 0x10c;\n                do {\n                    *(iVar4 + uVar3) = *(iVar4 + uVar3) + 1;\n                    *(*ppiVar1 + iVar4) = *(*ppiVar1 + iVar4) + 1;\n                    cVar2 = fcn.0040d2e0();\n                    if ((cVar2 != '\\0') && (cVar2 = fcn.0040d2e0(),  cVar2 != '\\0')) break;\n                    *(iVar4 + *arg_8h) = 0;\n                    *(iVar4 + *ppiVar1) = 0;\n                    uVar3 = *arg_8h;\n                    arg_ch = arg_ch + 1;\n                    iVar4 = iVar4 + 4;\n                } while (arg_ch < *(uVar3 + 0x20c));\n            }\n            uVar3 = *arg_8h;\n        } while (arg_ch < *(uVar3 + 0x20c));\n    }\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 586
    },
    "0047866a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047866a(int32_t *arg_8h, ushort *psa)\n\n{\n    ushort *psa_00;\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint arg_ch;\n    uint extraout_ECX;\n    float10 fVar7;\n    ulong uVar8;\n    uint pvargSrc;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t pvarDest;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    psa_00 = psa;\n    if (psa != NULL) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(psa);\n        if (arg_8h == NULL) {\n            *psa_00 = 10;\n            *(psa_00 + 4) = 0x80020004;\n            return 0;\n        }\n        if (10 < arg_8h[2] - 1U) {\n            return 1;\n        }\n    // switch table (11 cases) at 0x4789de\n        switch(*((arg_8h[2] - 1U) * 4 + 0x4789de)) {\n        case 0x4786ba:\n            *psa_00 = 0xb;\n            uVar2 = fcn.00442cb5(arg_8h);\n            psa_00[4] = uVar2 & 0xff;\n            return 0;\n        case 0x4786d8:\n            *psa_00 = 3;\n            uVar5 = fcn.0040c8f0();\n            *(psa_00 + 4) = uVar5;\n            return 0;\n        case 0x4786f3:\n            *psa_00 = 5;\n            fVar7 = fcn.0040bd40();\n            *(psa_00 + 4) = fVar7;\n            return 0;\n        case 0x47870e:\n            *psa_00 = 0x14;\n            uVar8 = fcn.00442d6f(arg_8h);\n            *(psa_00 + 4) = uVar8;\n            *(psa_00 + 6) = uVar8 >> 0x20;\n            return 0;\n        case 0x47872b:\n            *psa_00 = 0x13;\n            uVar5 = fcn.0044b01e(arg_8h);\n            *(psa_00 + 4) = uVar5;\n            return 0;\n        case 0x478745:\n            *psa_00 = 8;\n            uVar5 = fcn.00452e81(arg_8h);\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar5);\n            *(psa_00 + 4) = uVar5;\n            return 0;\n        case 0x4788ab:\n            if (*arg_8h == 0) {\n                return 0;\n            }\n            (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(psa_00, *arg_8h);\n            return 0;\n        case 0x4788dd:\n            cVar1 = fcn.0044aa8e(arg_8h);\n            if (cVar1 != '\\0') {\n                var_20h = 0;\n                var_18h = 1;\n                var_14h = 0;\n                fcn.004091e0();\n                var_18h = 6;\n                var_20h = 0;\n                uVar5 = fcn.0047866a(&var_20h, psa_00);\n                fcn.004091e0();\n                return uVar5;\n            }\n        case 0x4788c6:\n            uVar5 = fcn.00432acf(arg_8h);\n            uVar5 = fcn.0047866a(uVar5, arg_8h);\n            return uVar5;\n        case 0x478920:\n            iVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayCreateEx)(0x11, 1, &psa);\n            if (iVar4 < 0) {\n                return 1;\n            }\n            *(psa + 10) = 0;\n            uVar5 = fcn.00442e6f(arg_8h);\n            *(psa + 8) = uVar5;\n            psa[1] = 0x80;\n            *(psa + 2) = 1;\n            iVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyDescriptor)(psa);\n            if (-1 < iVar4) {\n                iVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(psa, &var_ch);\n                if (-1 < iVar4) {\n                    uVar6 = fcn.00442e6f(arg_8h);\n                    uVar5 = extraout_ECX;\n                    arg_ch = fcn.004679dc(arg_8h);\n                    fcn.00411000(var_ch, arg_ch, uVar5);\n                    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa, uVar6);\n                    *psa_00 = 0x2011;\n                    *(psa_00 + 4) = psa;\n                    return 0;\n                }\n                (*_sym.imp.OLEAUT32.dll_SafeArrayRedim)(psa);\n            }\n            (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyData)(psa);\n            return 1;\n        }\n        iVar4 = fcn.004329a8(arg_8h, 0);\n        var_8h = iVar4;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayCreateEx)(0xc, iVar4, &psa);\n        if (iVar3 < 0) {\n            return 1;\n        }\n        iVar3 = 0;\n        if (0 < iVar4) {\n            do {\n                iVar4 = iVar3 + 1;\n                *(psa + iVar3 * 4 + 10) = 0;\n                uVar8 = fcn.004329a8(arg_8h, iVar4);\n                *(psa + (uVar8 >> 0x20) * 4 + 8) = uVar8;\n                iVar3 = iVar4;\n            } while (iVar4 < var_8h);\n        }\n        psa[1] = 0x880;\n        *(psa + 2) = 0x10;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyDescriptor)(psa);\n        if (-1 < iVar4) {\n            iVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(psa, &pvarDest);\n            var_8h = fcn.004784f5(arg_8h, &var_ch);\n            if (-1 < iVar4) {\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargSrc);\n                iVar3 = 0;\n                if (0 < var_8h) {\n                    var_4h = 0;\n                    do {\n                        if ((*(var_ch + iVar3 * 4) != 0) &&\n                           (iVar4 = fcn.0047866a(*(var_ch + iVar3 * 4), &pvargSrc),  iVar4 != 0)) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargSrc);\n                            iVar4 = -0x7fff0001;\n                            break;\n                        }\n                        iVar4 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(var_4h + pvarDest, &pvargSrc);\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargSrc);\n                        var_4h = var_4h + 0x10;\n                        iVar3 = iVar3 + 1;\n                    } while (iVar3 < var_8h);\n                }\n                (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n                if (-1 < iVar4) goto code_r0x00478894;\n            }\n            (*_sym.imp.OLEAUT32.dll_SafeArrayRedim)(psa);\n            if (-1 < iVar4) {\ncode_r0x00478894:\n                *(psa_00 + 4) = psa;\n                *psa_00 = 0x200c;\n                return 0;\n            }\n        }\n        (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyData)(psa);\n    }\n    return 1;\n}\n",
        "token_count": 1962
    },
    "0047b727": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b727(int32_t hWnd, uint wParam, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint *arg_ch;\n    int32_t *piVar2;\n    code *pcVar3;\n    code *pcVar4;\n    char cVar5;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint32_t unaff_EBX;\n    uint unaff_EDI;\n    char cVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint uStack156;\n    uint8_t auStack152 [4];\n    uint32_t uStack148;\n    uint32_t uStack144;\n    uint uStack140;\n    uint8_t uStack136;\n    uint32_t uStack124;\n    uint uStack120;\n    uint32_t uStack116;\n    uint uStack104;\n    int32_t iStack100;\n    uint uStack92;\n    uint uStack84;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack32;\n    \n    cVar5 = unaff_EDI >> 0x18;\n    iVar9 = hWnd;\n    uStack144 = fcn.00431228(0x4a8630, hWnd);\n    pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n    pcVar3 = _sym.imp.USER32.dll_GetKeyState;\n    uVar7 = arg_10h[2];\n    arg_ch = **(*0x4a8690 + uStack144 * 4);\n    if (0xfffffe6e < uVar7) {\n        if (uVar7 < 0xfffffff1) {\n            if (uVar7 == 0xfffffff0) {\n                (*_sym.imp.USER32.dll_ReleaseCapture)();\n            }\n            else if (uVar7 + 0x140 < 0xd5) {\n    // switch table (213 cases) at 0x47c0cb\n                switch(*(*(uVar7 + 0x47c21b) * 4 + 0x47c0cb)) {\n                case 0x47b9e3:\n                    (*_sym.imp.USER32.dll_InvalidateRect)(*arg_10h, 0);\n                    break;\n                case 0x47b9f5:\n                    uVar7 = arg_10h[1];\n                    cVar5 = fcn.004417f1(0x4a8630, uVar7, &uStack144, &uStack156);\n                    if (cVar5 != '\\0') {\n                        *(**(*0x4a86a4 + iVar9 * 4) + 0x8e) = *(arg_10h + 4);\n                        fcn.0046243e(arg_10h[1], 0);\n                        if (*(**(*0x4a86a4 + iVar9 * 4) + 0x24) != 0) {\n                            *0x4a866c = uVar7;\n                            fcn.0040e410(**(*0x4a86a4 + iVar9 * 4) + 0x20);\n                            *0x4a8680 = *(**(*0x4a86a4 + iVar9 * 4) + 0x90);\n                            (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1030, arg_10h[4], 0x47d4e5);\n                        }\n                    }\n                    break;\n                case 0x47ba9a:\n                    (*_sym.imp.COMCTL32.dll_ImageList_SetDragCursorImage)(*0x4a86dc, 0, 0);\n                    (*_sym.imp.COMCTL32.dll_ImageList_BeginDrag)(*0x4a86dc, 0, 0xfffffff8, 0xfffffff0);\n                    (*_sym.imp.USER32.dll_SetCapture)(hWnd);\n                    *0x4a86e0 = wParam;\n                    fcn.004091e0();\n                    fcn.00401c30();\n                    fcn.00401990();\n                    fcn.00402260();\n                    (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, arg_10h + 8);\n                    (*_sym.imp.COMCTL32.dll_ImageList_DragEnter)(0, arg_10h[8], arg_10h[9]);\n                    fcn.004091e0();\n                }\n            }\n            goto code_r0x0047b7fc;\n        }\n        if (uVar7 == 0xfffffff4) {\n            uVar7 = *arg_10h;\n            iVar11 = fcn.00441878(0x4a8630, uVar7);\n            iVar9 = *0x4a86a4;\n            if (iVar11 != -1) {\n                iVar11 = **(*0x4a86a4 + iVar11 * 4);\n                cVar5 = *(iVar11 + 0x88);\n                if ((cVar5 == '\\x10') || (cVar5 == '\\x13')) {\n                    if (arg_10h[3] == 1) {\n                        return 0x20;\n                    }\n                    if (arg_10h[3] == 0x10001) {\n                        cVar12 = *(iVar11 + 0x44) == -0x2000000;\n                        cVar5 = fcn.004417f1(0x4a8630, arg_10h[0xb], auStack152, &stack0xffffff5c);\n                        if ((cVar5 != '\\0') &&\n                           (uVar14 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(**(iVar9 + uVar7 * 4) + 0x30), 0xfffffff0)\n                           ,  (uVar14 & 0x8000000) == 0)) {\n                            if (((*(arg_10h + 10) & 0x11) != 0) && (*(**(*0x4a86a4 + uVar7 * 4) + 0x88) != '\\x14'))\n                            goto code_r0x0047b7fc;\n                            uVar14 = *(**(*0x4a86a4 + uVar7 * 4) + 0x48);\n                            if (uVar14 != 0xffffffff) {\n                                arg_10h[0xc] = uVar14;\n                            }\n                            uVar7 = *(**(*0x4a86a4 + uVar7 * 4) + 0x44);\n                            if ((-1 < uVar7) && ((cVar12 == '\\0' || ((*(arg_10h + 9) & 1) != 0)))) {\n                                arg_10h[0xd] = uVar7;\n                            }\n                        }\n                        return 0;\n                    }\n                }\n            }\n            goto code_r0x0047b7fc;\n        }\n        if (uVar7 == 0xfffffffb) {\n            unaff_EBX = unaff_EBX & 0xffffff;\n            fcn.00455e06(0x4a8630, arg_ch, 1);\n            (*_sym.imp.USER32.dll_GetCursorPos)(&stack0xffffff5c);\n            (*_sym.imp.USER32.dll_ScreenToClient)(*arg_10h, &stack0xffffff58);\n            uVar7 = *arg_10h;\n            uVar14 = fcn.00441878(0x4a8630, uVar7);\n            if (uVar14 == 0xffffffff) {\n                uVar7 = (*_sym.imp.USER32.dll_GetParent)(*arg_10h);\n                uVar14 = fcn.00441878(0x4a8630, uVar7);\n                if (uVar14 == 0xffffffff) goto code_r0x0047b7fc;\n                cVar5 = '\\x01';\n            }\n            cVar12 = *(**(*0x4a86a4 + uVar14 * 4) + 0x88);\n            uStack148 = uVar14;\n            if (cVar12 == '\\x10') {\n                uVar13 = 0x1111;\n                uStack140 = uStack156;\n                uStack144 = unaff_EBX;\n                uVar10 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1111, 0, &uStack144);\n                if (uVar10 != 0) {\n                    uStack120 = 4;\n                    uStack116 = uVar10;\n                    (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x113e, 0, &uStack120);\n                    if (((auStack152[0] & 0x46) != 0) &&\n                       ((cVar5 = fcn.004417f1(0x4a8630, uStack84, &stack0xffffff58, &stack0xffffff4c),  cVar5 == '\\0' ||\n                        (uVar14 = uVar13,  *(**(*0x4a86a4 + uVar13 * 4) + 8) == 0)))) {\n                        uVar14 = uVar7;\n                    }\n                }\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, &stack0xffffff50);\n                iVar9 = *(**(*0x4a86a4 + uVar14 * 4) + 8);\n                if (iVar9 != 0) {\n                    (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar9, 0x80, unaff_EBX, uStack156, *arg_ch, 0);\n                    return 1;\n                }\n            }\n            else if (cVar12 == '\\x13') {\n                uStack120 = uStack156;\n                uVar10 = uVar14;\n                uStack124 = unaff_EBX;\n                iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1012, 0, &uStack124);\n                if ((-1 < iVar9) && (cVar5 == '\\0')) {\n                    uStack64 = 4;\n                    iStack60 = iVar9;\n                    iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x104b, 0, &uStack64);\n                    if (iVar9 == 0) goto code_r0x0047b7fc;\n                    if (((uStack116 & 0xe) != 0) &&\n                       (((cVar5 = fcn.004417f1(0x4a8630, uStack32, auStack152, &stack0xffffff5c),  cVar5 == '\\0' ||\n                         (piVar2 = *(*0x4a86a4 + uVar7 * 4),  *piVar2 == 0)) || (uVar14 = uVar7,  *(*piVar2 + 8) == 0)))\n                       ) {\n                        uVar14 = uVar10;\n                    }\n                }\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, &stack0xffffff60);\n                iVar9 = *(**(*0x4a86a4 + uVar14 * 4) + 8);\n                if (iVar9 != 0) {\n                    (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar9, 0, unaff_EBX, uStack156, *arg_ch, 0);\n                }\n            }\n            goto code_r0x0047b7fc;\n        }\n        if (uVar7 != 0xfffffffe) goto code_r0x0047b7fc;\n        fcn.00455e06(0x4a8630, arg_ch, 1);\n        (*_sym.imp.USER32.dll_GetCursorPos)(&stack0xffffff5c);\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_10h, &stack0xffffff58);\n        uVar7 = *arg_10h;\n        uVar14 = 0x4a8630;\n        iVar9 = fcn.00441878(0x4a8630, uVar7);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n        if ((iVar9 == -1) || (uVar1 = *(**(*0x4a86a4 + iVar9 * 4) + 0x88),  uVar1 < 0x10)) goto code_r0x0047b7fc;\n        if (uVar1 < 0x12) {\n            uStack140 = uStack156;\n            uStack144 = unaff_EBX;\n            iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1111, 0, &uStack144);\n            if (iVar9 != 0) {\n                uStack104 = 0xc;\n                uStack92 = 0xf000;\n                iStack100 = iVar9;\n                (*pcVar3)(*arg_10h, 0x113e, 0, &uStack104);\n                if ((uStack136 & 0x46) != 0) {\n                    (*pcVar3)(*arg_10h, 0x110b, 9, 0);\n                    (*pcVar3)(*arg_10h, 0x110b, 9, uStack148);\n                }\n            }\n            goto code_r0x0047b7fc;\n        }\n        if (uVar1 != 0x13) goto code_r0x0047b7fc;\n        uStack120 = uStack156;\n        uStack124 = unaff_EBX;\n        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1012, 0, &uStack124);\n        if (iVar9 == -1) goto code_r0x0047b7fc;\n        uStack64 = 4;\n        iStack60 = iVar9;\n        (*pcVar3)(*arg_10h, 0x104b, 0, &uStack64);\n        uVar10 = uStack116 & 0xe;\njoined_r0x0047bc24:\n        if (uVar10 == 0) goto code_r0x0047b7fc;\n        goto code_r0x0047b7f7;\n    }\n    if (uVar7 == 0xfffffe6e) {\ncode_r0x0047b953:\n        uVar7 = 0;\n        uVar14 = 9;\n        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x110a);\n        if (iVar9 == 0) goto code_r0x0047b7fc;\n        uStack104 = 4;\n        iStack100 = iVar9;\n        iVar9 = (*pcVar4)(*arg_10h, 0x113e, 0, &uStack104);\n        if (((iVar9 == 0) || (arg_10h[0xd] == arg_10h[0x17])) || (arg_10h[3] == 0x1000)) goto code_r0x0047b7fc;\n        uVar10 = arg_10h[3] - 1;\n        goto joined_r0x0047bc24;\n    }\n    if (0xfffffdd9 < uVar7) {\n        if (0x8a < uVar7 + 0x226) goto code_r0x0047b7fc;\n    // switch table (139 cases) at 0x47c02b\n        switch(*(*(uVar7 + 0x47c265) * 4 + 0x47c02b)) {\n        case 0x47b830:\n            iVar6 = (*_sym.imp.USER32.dll_GetKeyState)();\n            if ((-1 < iVar6) || (iVar6 = (*pcVar3)(9),  -1 < iVar6)) break;\n            iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x130b, 0, 0);\n            iVar6 = (*pcVar3)(0x10);\n            if (iVar6 < 0) {\n                uVar7 = iVar9 - 1;\n            }\n            else {\n                uVar7 = iVar9 + 1;\n            }\n            goto code_r0x0047b7f3;\n        case 0x47b86d:\n            uVar10 = *arg_10h;\n            uVar7 = 0xfffffff0;\n            uVar14 = uVar10;\n            uVar13 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n            pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n            if ((((uVar13 & 0x100) == 0) || (*(arg_10h + 3) != 0x20)) ||\n               (iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uVar10, 0x110a, 9, 0),  iVar9 == 0)) break;\n            uStack104 = 4;\n            iStack100 = iVar9;\n            uVar10 = (*pcVar3)(uVar10, 0x113e, 0, &uStack104);\n            goto joined_r0x0047bc24;\n        case 0x47b8d7:\n            if ((arg_ch[99] != 0) && (iVar9 = 3,  2 < *0x4a86b4)) {\n                do {\n                    piVar2 = *(*0x4a86a4 + iVar9 * 4);\n                    if ((*piVar2 != 0) && (*(*piVar2 + 0x8b) == arg_10h[1])) {\n                        if (iVar9 <= *0x4a86b4) {\n                            fcn.0041315a(arg_10h + 4, *(**(*0x4a86a4 + iVar9 * 4) + 0x50), 0x4f);\n                            *(arg_10h + 0xae) = 0;\n                            return 1;\n                        }\n                        break;\n                    }\n                    iVar9 = iVar9 + 1;\n                } while (iVar9 <= *0x4a86b4);\n            }\n            break;\n        case 0x47b953:\n            goto code_r0x0047b953;\n        }\n        goto code_r0x0047b7fc;\n    }\n    if (uVar7 == 0xfffffdd9) {\n        uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x130b, 0);\ncode_r0x0047b7f3:\n        uVar14 = arg_10h[1];\n        goto code_r0x0047b7f7;\n    }\n    if (0xd < uVar7 + 0x2f7) goto code_r0x0047b7fc;\n    // switch table (14 cases) at 0x47c007\n    switch(*(*(uVar7 + 0x47c312) * 4 + 0x47c007)) {\n    case 0x47b791:\n        *(arg_ch + 0x19d) = 1;\n        break;\n    case 0x47b79a:\n        *(arg_ch + 0x19e) = 1;\n        if (*(arg_ch + 0x19d) != '\\0') break;\n        *(arg_ch + 0x19e) = 0;\n        uVar7 = arg_10h[2];\n        uVar14 = arg_10h[1];\n        goto code_r0x0047b7f7;\n    case 0x47b7bb:\n        if (*(arg_ch + 0x19e) == '\\x01') {\n            fcn.0046243e(arg_10h[1], uVar7);\n        }\n        *(arg_ch + 0x19d) = 0;\n        break;\n    case 0x47b7d9:\n        uVar14 = arg_10h[1];\ncode_r0x0047b7f7:\n        fcn.0046243e(uVar14, uVar7);\n    }\ncode_r0x0047b7fc:\n    uVar8 = (*_sym.imp.USER32.dll_DefDlgProcW)(hWnd, 0x4e, wParam, arg_10h);\n    return uVar8;\n}\n",
        "token_count": 4537
    },
    "0047c1b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047c1b0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = *(arg_8h + 0x16c);\n    if (arg_10h != '\\0') {\n        fcn.0046f7aa(arg_ch);\n    }\n    arg_ch_00 = fcn.00472d85(arg_8h);\n    *(arg_8h + 0x454) = 0;\n    *(arg_8h + 0xf8) = 0;\n    fcn.00409480(arg_ch);\n    iVar4 = fcn.00403f70();\n    uVar2 = *(iVar4 + 0x10);\n    if (arg_14h != NULL) {\n        if (uVar2 == 0) {\n            fcn.004091e0();\n            arg_14h[2] = 1;\n            *arg_14h = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00403f70();\n            fcn.00409120(arg_8h_00);\n        }\n    }\n    uVar5 = fcn.00472cce(arg_8h, arg_ch_00);\n    if (arg_10h != '\\0') {\n        uVar5 = fcn.0046f754(0x4a7f34);\n    }\n    uVar1 = *(arg_8h + 0x16c);\n    while (uVar3 < uVar1) {\n        uVar5 = fcn.0040ca30();\n        uVar1 = *(arg_8h + 0x16c);\n    }\n    return uVar5 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 465
    },
    "0047d4ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t ** __cdecl fcn.0047d4ec(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t **arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint arg_10h_00;\n    uint32_t arg_18h;\n    char cVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    uint32_t **ppuVar5;\n    int32_t iVar6;\n    int16_t iVar7;\n    \n    ppuVar5 = arg_14h;\n    arg_18h = arg_10h;\n    arg_10h_00 = arg_8h;\n    arg_10h = fcn.00431228(0x4a8630, arg_8h);\n    if ((arg_10h != -1) || (arg_ch == 1)) {\n        if ((*0x4a8704 != 0) && ((*0x4a8668 == '\\0' || (*0x4a8708 != arg_ch)))) {\n            arg_14h = *0x4a86fc;\n            while (cVar2 = fcn.00441fc1(&fcn.0047d4ec::arg_14h, 0),  cVar2 != '\\0') {\n                if (**arg_14h == arg_ch) {\n                    *0x4a8708 = arg_ch;\n                    *0x4a8668 = 1;\n                    puVar1 = *arg_14h;\n                    arg_14h = NULL;\n                    iVar6 = fcn.0047d2c1(puVar1 + 1, &fcn.0047d4ec::arg_14h, arg_10h_00, arg_ch, arg_18h, ppuVar5);\n                    *0x4a8668 = '\\0';\n                    *0x4a8708 = 0xffffffff;\n                    if (iVar6 == 1) {\n                        *0x4a8668 = 0;\n                        *0x4a8708 = 0xffffffff;\n                        return arg_14h;\n                    }\n                    iVar6 = fcn.00431228(0x4a8630, arg_10h_00);\n                    if (iVar6 == -1) {\n                        return NULL;\n                    }\n                    break;\n                }\n                fcn.00440543(&fcn.0047d4ec::arg_14h, &fcn.0047d4ec::arg_8h);\n            }\n        }\n        iVar7 = ppuVar5;\n        iVar3 = ppuVar5 >> 0x10;\n        if (arg_ch < 0x112) {\n            if (arg_ch == 0x111) {\n                fcn.0046996d(arg_10h_00, arg_18h & 0xffff, ppuVar5, arg_18h >> 0x10);\n                return NULL;\n            }\n            if (arg_ch - 1 < 0x84) {\n    // switch table (132 cases) at 0x47d928\n                switch(*(*(arg_ch + 0x47d95f) * 4 + 0x47d928)) {\n                case 0x47d61b:\n                    ppuVar5 = fcn.0047b727(arg_10h_00, arg_18h, ppuVar5);\n                    return ppuVar5;\n                case 0x47d62b:\n                    fcn.00470446(arg_10h_00);\n                    return NULL;\n                case 0x47d63b:\n                    fcn.004401e4(arg_10h_00, arg_18h, iVar7, iVar3);\n                    return NULL;\n                case 0x47d659:\n                    fcn.0044018a(arg_10h_00, arg_18h & 0xffff, ppuVar5, arg_18h >> 0x10);\n                    return NULL;\n                case 0x47d674:\n                    fcn.004400aa(arg_10h_00);\n                    return NULL;\n                case 0x47d684:\n                    fcn.004477b0(arg_10h_00);\n                    return NULL;\n                case 0x47d694:\n                    fcn.004476c4(arg_10h_00, ppuVar5);\n                    return NULL;\n                case 0x47d6a5:\n                    ppuVar5 = fcn.00430438(arg_10h_00, iVar7, iVar3);\n                    return ppuVar5;\n                case 0x47d6c0:\n                    fcn.00447756(arg_10h_00, arg_18h);\n                    return NULL;\n                case 0x47d6d1:\n                    ppuVar5 = fcn.004475a8(arg_10h_00, arg_18h, ppuVar5 & 0xffff, ppuVar5 >> 0x10);\n                    return ppuVar5;\n                case 0x47d6ea:\n                    fcn.004474b4(arg_10h_00, arg_18h, ppuVar5 & 0xffff, ppuVar5 >> 0x10);\n                    return NULL;\n                case 0x47d705:\n                    fcn.00440066(arg_10h, arg_10h_00, arg_18h, ppuVar5);\n                    return NULL;\n                case 0x47d91c:\n                    return NULL;\n                }\n            }\n        }\n        else if (arg_ch < 0x212) {\n            if (arg_ch == 0x211) {\n                fcn.00440034(arg_10h, arg_10h_00, arg_18h, ppuVar5);\n                return NULL;\n            }\n            if (arg_ch - 0x112 < 0xf4) {\n    // switch table (244 cases) at 0x47d9e4\n                iVar4 = arg_18h >> 0x10;\n                switch(*(*(arg_ch + 0x47d906) * 4 + 0x47d9e4)) {\n                case 0x47d764:\n                    ppuVar5 = fcn.00447791(arg_10h_00, arg_18h);\n                    return ppuVar5;\n                case 0x47d773:\n                    ppuVar5 = fcn.0044ff6b(arg_10h_00, arg_18h, ppuVar5, 1);\n                    return ppuVar5;\n                case 0x47d785:\n                    ppuVar5 = fcn.0044ff6b(arg_10h_00, arg_18h, ppuVar5, 6);\n                    return ppuVar5;\n                case 0x47d797:\n                    ppuVar5 = fcn.0044ff6b(arg_10h_00, arg_18h, ppuVar5, 2);\n                    return ppuVar5;\n                case 0x47d7a9:\n                    fcn.004547bf(arg_10h_00, arg_18h, iVar7, iVar3);\n                    return NULL;\n                case 0x47d7c7:\n                    fcn.00469c7d(arg_10h_00, ppuVar5, arg_18h & 0xffff, iVar4, 1);\n                    return NULL;\n                case 0x47d7e7:\n                    fcn.00469c7d(arg_10h_00, ppuVar5, arg_18h & 0xffff, iVar4, 0);\n                    return NULL;\n                case 0x47d807:\n                    fcn.00470428(arg_10h_00, iVar7, iVar3, arg_18h);\n                    return NULL;\n                case 0x47d825:\n                    fcn.0047040a(arg_10h_00, iVar7, iVar3, arg_18h);\n                    return NULL;\n                case 0x47d843:\n                    fcn.004623c4(arg_10h_00, iVar7, iVar3, arg_18h, 0);\n                    return NULL;\n                case 0x47d863:\n                    fcn.004623c4(arg_10h_00, iVar7, iVar3, arg_18h, 1);\n                    return NULL;\n                case 0x47d883:\n                    fcn.004303d9(arg_10h_00, iVar7, iVar3, arg_18h);\n                    return NULL;\n                }\n            }\n        }\n        else if (arg_ch < 0x234) {\n            if (arg_ch == 0x233) {\n                fcn.0046ffad(arg_10h_00, arg_18h);\n                return NULL;\n            }\n            if (arg_ch == 0x212) {\n                fcn.00440002(arg_10h, arg_10h_00, arg_18h, ppuVar5);\n                return NULL;\n            }\n            if (arg_ch == 0x232) {\n                fcn.00454771(arg_10h, arg_10h_00, arg_18h, ppuVar5);\n                return NULL;\n            }\n        }\n        else if (arg_ch == 0x31a) {\n            fcn.00447472(arg_10h_00, arg_18h, ppuVar5);\n            return NULL;\n        }\n    }\n    ppuVar5 = (*_sym.imp.USER32.dll_DefDlgProcW)(arg_10h_00, arg_ch, arg_18h, ppuVar5);\n    return ppuVar5;\n}\n",
        "token_count": 2126
    },
    "0047dbb2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047dbb2(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t *arg_ch_00;\n    int32_t iVar4;\n    uint in_stack_ffffffac;\n    int32_t arg_10h_00;\n    uint var_38h;\n    int32_t var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_ch_00 = arg_10h;\n    arg_8h_00 = arg_ch;\n    var_28h = 0;\n    var_20h = 1;\n    var_1ch = 0;\n    var_18h = 0;\n    var_10h = 1;\n    var_ch = 0;\n    fcn.004091e0();\n    var_20h = 1;\n    var_28h = 1;\n    fcn.004091e0();\n    var_10h = 1;\n    var_18h = 0;\n    arg_10h = 0xb;\n    arg_10h_00 = 0x47dc13;\n    fcn.0040bf10();\n    *arg_ch_00 = *arg_ch_00 + 1;\n    iVar4 = *arg_ch_00;\n    piVar2 = *(*(arg_8h_00 + 4) + iVar4 * 4);\n    if ((*(piVar2 + 2) == 0) && (*piVar2 == 0x10)) {\n        *arg_ch_00 = iVar4 + 1;\n        iVar1 = *(*(*(arg_8h_00 + 4) + (iVar4 + 1) * 4) + 8);\n        if (iVar1 == 0x49) {\ncode_r0x0047dc4e:\n            arg_10h = 0xb;\n        }\n        else if (iVar1 == 0x4a) {\n            arg_10h = 0xc;\n        }\n        else {\n            if (iVar1 != 0x4c) {\n                *arg_ch_00 = iVar4;\n                goto code_r0x0047dc4e;\n            }\n            fcn.004091e0();\n            var_10h = 1;\n            var_18h = 1;\n            arg_10h = 0xd;\n        }\n        *arg_ch_00 = *arg_ch_00 + 1;\n        piVar2 = *(*(arg_8h_00 + 4) + *arg_ch_00 * 4);\n        if (*(piVar2 + 2) != 5) {\n            arg_10h_00 = *(piVar2 + 10);\n            in_stack_ffffffac = 0x9d;\n            goto code_r0x0047dde5;\n        }\n        arg_ch = *piVar2;\n        arg_10h_00 = 0x47dc73;\n        fcn.004091e0();\n        *arg_ch_00 = *arg_ch_00 + 1;\n        iVar4 = *arg_ch_00;\n        var_20h = 1;\n        var_28h = arg_ch;\n    }\n    iVar3 = *(arg_8h_00 + 4);\n    iVar1 = *(*(iVar3 + iVar4 * 4) + 8);\n    while (iVar1 == 0x33) {\n        fcn.0040e410(**(iVar3 + iVar4 * 4));\n        *arg_ch_00 = *arg_ch_00 + 1;\n        if (*(*(*(arg_8h_00 + 4) + *arg_ch_00 * 4) + 8) == 0x41) {\n            *arg_ch_00 = *arg_ch_00 + 1;\n            iVar4 = fcn.0040aa20(arg_8h_00, arg_ch_00, &fcn.0047dbb2::var_18h, 0xffffffff);\n            if (iVar4 != 0) break;\n        }\n        fcn.0040c560(&fcn.0047dbb2::arg_ch, &fcn.0047dbb2::var_4h);\n        if (arg_ch != 0) break;\n        fcn.00401990();\n        if (arg_10h == 0xb) {\n            fcn.0040b7b0(&fcn.0047dbb2::var_18h);\n        }\n        else if (arg_10h == 0xc) {\n            fcn.004529ac(&fcn.0047dbb2::var_18h, &fcn.0047dbb2::var_28h);\n        }\n        else if (arg_10h == 0xd) {\n            fcn.0040be20();\n        }\n        iVar4 = *(*(arg_8h_00 + 4) + *arg_ch_00 * 4);\n        if (*(iVar4 + 8) == 0x7f) goto code_r0x0047ddea;\n        if (*(iVar4 + 8) != 0x40) break;\n        iVar4 = *arg_ch_00 + 1;\n        *arg_ch_00 = iVar4;\n        iVar3 = *(arg_8h_00 + 4);\n        iVar1 = *(*(iVar3 + iVar4 * 4) + 8);\n    }\ncode_r0x0047dde5:\n    fcn.0045e1ee(arg_8h, in_stack_ffffffac, arg_10h_00);\ncode_r0x0047ddea:\n    fcn.00402260();\n    fcn.004091e0();\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 1327
    },
    "0047e914": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1e8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047e914(uint arg_8h, uint32_t **arg_ch, uint32_t **arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int16_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    ulong uVar11;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint32_t **arg_ch_00;\n    uint32_t **arg_8h_00;\n    uint *var_1e8h;\n    uint var_168h;\n    int32_t var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint32_t *var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint32_t **var_8h;\n    uint32_t **var_4h;\n    \n    var_4ch = 0;\n    var_38h = NULL;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    *arg_10h = *arg_10h + 1;\n    var_20h = 0;\n    var_18h = 1;\n    var_14h = 0;\n    piVar7 = arg_ch[1][*arg_10h];\n    var_68h = 0;\n    var_4h = NULL;\n    if (*(piVar7 + 2) == 0) {\n        if ((*piVar7 != 0x1c) && (*piVar7 != 0x1d)) goto code_r0x0047eef1;\n        *arg_10h = *arg_10h + 1;\n    }\n    puVar1 = arg_ch[1];\n    iVar4 = *(puVar1[*arg_10h] + 8);\njoined_r0x0047e995:\n    if (iVar4 != 0x33) goto code_r0x0047eee9;\n    arg_8h_00 = *puVar1[*arg_10h];\n    var_dh._0_1_ = '\\x01';\n    fcn.0040e410(arg_8h_00);\n    arg_ch_00 = &fcn.0047e914::var_38h;\n    fcn.0040c560(&fcn.0047e914::var_68h, arg_ch_00);\n    if (var_68h == 0) {\n        arg_14h_00 = 10;\n        arg_10h_00 = 8;\n        puVar10 = &fcn.0047e914::var_1e8h;\n        uVar5 = fcn.004435c5();\n        fcn.004157f1(uVar5, puVar10, arg_10h_00, arg_14h_00);\n        fcn.00402170();\n        fcn.004032d0(0x2e);\n        fcn.0040bff0(*arg_ch[1][*arg_10h]);\n        fcn.0040c560(&fcn.0047e914::var_4h, &fcn.0047e914::var_38h);\n        if (var_4h == NULL) {\n            fcn.0040e8e0();\n            fcn.00401990();\n            fcn.0040c560(&fcn.0047e914::var_4h, &fcn.0047e914::var_38h);\n            if (var_4h == NULL) goto code_r0x0047efee;\n            var_dh._0_1_ = '\\0';\n        }\n        cVar3 = fcn.00432ee2(0x4a7f34);\n        if (cVar3 == '\\0') {\n            uVar5 = 1;\n        }\n        else {\n            uVar5 = 2;\n        }\n        var_1e8h = 0x47ea9b;\n        fcn.0045efbf(&fcn.0047e914::var_30h, var_4h, 0x400, uVar5);\n        var_1e8h = &fcn.0047e914::var_38h;\n        fcn.0040c560(&fcn.0047e914::var_68h, var_1e8h);\n    }\n    else if ((var_38h != 0x400) || (var_4h = fcn.00432acf(var_68h),  var_4h == NULL)) goto code_r0x0047efee;\n    *arg_10h = *arg_10h + 1;\n    if (*(arg_ch[1][*arg_10h] + 8) == 0x4e) {\n        iVar8 = 0;\n        do {\n            *arg_10h = *arg_10h + 1;\n            var_8h = *(arg_ch[1][*arg_10h] + 10);\n            var_1e8h = &fcn.0047e914::var_20h;\n            iVar6 = fcn.0040aa20(arg_ch, arg_10h, var_1e8h, 0xffffffff);\n            if (((iVar6 != 0) || (iVar6 = fcn.0040c8f0(),  iVar6 < 1)) || (*(arg_ch[1][*arg_10h] + 8) != 0x4f))\n            goto code_r0x0047efee;\n            *arg_10h = *arg_10h + 1;\n            uVar5 = fcn.0040c8f0();\n            puVar1 = *arg_10h;\n            (&fcn.0047e914::var_168h)[iVar8] = uVar5;\n            iVar8 = iVar8 + 1;\n            var_4ch = iVar8;\n        } while (*(arg_ch[1][puVar1] + 8) == 0x4e);\n        if (0 < iVar8) {\n            cVar3 = fcn.00442714(var_4h);\n            if (cVar3 != '\\0') {\n                arg_ch_00 = 0x47eb7e;\n                iVar6 = fcn.004329a8(var_4h, 0);\n                if (iVar6 == iVar8) {\n                    iVar6 = 0;\n                    if (0 < iVar8) {\n                        do {\n                            iVar6 = iVar6 + 1;\n                            uVar11 = fcn.004329a8(var_4h, iVar6);\n                            iVar8 = uVar11 >> 0x20;\n                            if (uVar11 != (&fcn.0047e914::var_168h)[iVar8]) {\n                                if (iVar8 < var_4ch) {\n                                    fcn.0045e408(&fcn.0047e914::var_20h);\n                                    iVar8 = 0;\n                                    goto code_r0x0047ebd4;\n                                }\n                                break;\n                            }\n                        } while (iVar6 < var_4ch);\n                    }\n                    goto code_r0x0047ec6f;\n                }\n            }\n            fcn.0045e408(var_4h);\n            stack0xfffffff0 = 0;\n            if (0 < iVar8) {\n                do {\n                    cVar3 = fcn.0040d260();\n                    arg_8h_00 = var_8h;\n                    if (cVar3 == '\\0') goto code_r0x0047efee;\n                    *NULL = stack0xfffffff0 + 1;\n                } while (*NULL < var_4ch);\n            }\n            arg_8h_00 = NULL;\n            arg_ch_00 = 0x47ec64;\n            cVar3 = fcn.0040ea00(0);\n            if (cVar3 != '\\0') goto code_r0x0047ec6f;\n            arg_ch_00 = 0x82;\n            arg_8h_00 = var_8h;\n        }\n        goto code_r0x0047efee;\n    }\n    goto code_r0x0047ec6f;\n    while (iVar8 = iVar8 + 1,  iVar8 < var_4ch) {\ncode_r0x0047ebd4:\n        cVar3 = fcn.0040d260();\n        if (cVar3 == '\\0') {\n            var_1e8h = 0x7d;\n            goto code_r0x0047efee;\n        }\n    }\n    var_1e8h = 0x47ebfa;\n    cVar3 = fcn.0040ea00(0);\n    if (cVar3 != '\\0') {\n        var_1e8h = 0x82;\n        goto code_r0x0047efee;\n    }\n    var_1e8h = &fcn.0047e914::var_20h;\n    fcn.00478524(var_1e8h, var_4h);\n    fcn.00409120(&fcn.0047e914::var_20h);\ncode_r0x0047ec6f:\n    if (*(arg_ch[1][*arg_10h] + 8) == 0x41) {\n        puVar9 = *arg_10h + 1;\n        *arg_10h = puVar9;\n        puVar1 = arg_ch[1];\n        uVar2 = puVar1[puVar9];\n        var_8h = *(uVar2 + 10);\n        if (var_dh == '\\0') {\n            if (*(uVar2 + 8) == 0x4e) {\n                cVar3 = fcn.00442714(var_4h);\n                if (cVar3 == '\\0') goto code_r0x0047efee;\n                stack0xfffffff0 = 0;\n                var_34h = puVar9;\n                if (puVar9 < arg_ch[2]) {\n                    var_8h = arg_ch[1] + puVar9;\n                    do {\n                        var_50h = *var_8h;\n                        var_64h = *(var_50h + 2);\n                        if ((*(var_50h + 2) == 0x33) && (cVar3 = fcn.0040df20(),  cVar3 != '\\0')) goto code_r0x0047efee;\n                        iVar4 = var_64h;\n                        if ((iVar4 == 0x4e) || (iVar4 == 0x47)) {\n                            unique0x00007a00 = stack0xfffffff0 + 1;\n                        }\n                        else if ((iVar4 == 0x4f) || (iVar4 == 0x48)) {\n                            unique0x00007a00 = stack0xfffffff0 + -1;\n                        }\n                        else if (((iVar4 == 0x40) && (stack0xfffffff0 == 0)) || (iVar4 == 0x7f)) break;\n                        var_8h = var_8h + 1;\n                        var_34h = var_34h + 1;\n                    } while (var_34h < arg_ch[2]);\n                }\n                if (0 < var_4ch) {\n                    puVar10 = &fcn.0047e914::var_168h;\n                    for (iVar8 = var_4ch; iVar8 != 0; iVar8 = iVar8 + -1) {\n                        *puVar10 = 0;\n                        puVar10 = puVar10 + 1;\n                    }\n                }\n                arg_ch_00 = arg_10h;\n                arg_8h_00 = var_4h;\n                cVar3 = fcn.0047e771(arg_ch, arg_10h, var_4h, &fcn.0047e914::var_168h, 1);\n                if (cVar3 == '\\0') goto code_r0x0047eff3;\n            }\n            else {\n                cVar3 = fcn.00442714(var_4h);\n                if (cVar3 != '\\0') goto code_r0x0047efee;\n                stack0xfffffff0 = 0;\n                var_34h = puVar9;\n                if (puVar9 < arg_ch[2]) {\n                    var_50h = arg_ch[1] + puVar9;\n                    do {\n                        var_64h = *var_50h;\n                        iVar4 = *(var_64h + 8);\n                        if (iVar4 == 0x7f) break;\n                        if ((iVar4 == 0x4e) || (iVar4 == 0x47)) {\n                            unique0x00007a80 = stack0xfffffff0 + 1;\n                        }\n                        else if ((iVar4 == 0x4f) || (iVar4 == 0x48)) {\n                            unique0x00007a80 = stack0xfffffff0 + -1;\n                        }\n                        else {\n                            if ((iVar4 == 0x40) && (stack0xfffffff0 == 0)) break;\n                            if ((iVar4 == 0x33) && (cVar3 = fcn.0040df20(),  cVar3 != '\\0')) goto code_r0x0047efee;\n                        }\n                        var_50h = var_50h + 1;\n                        var_34h = var_34h + 1;\n                    } while (var_34h < arg_ch[2]);\n                }\n                arg_ch_00 = arg_ch;\n                arg_8h_00 = arg_10h;\n                iVar8 = fcn.0040aa20(arg_ch, arg_10h, &fcn.0047e914::var_20h, 0xffffffff);\n                if (iVar8 != 0) goto code_r0x0047efee;\n                fcn.00409120(&fcn.0047e914::var_20h);\n            }\n        }\n        else {\n            iVar8 = 0;\n            iVar4 = *(uVar2 + 8);\n            while (iVar4 != 0x7f) {\n    // switch table (9 cases) at 0x47f01c\n                switch(*(puVar1[puVar9] + 8)) {\n                case 0x47:\n                case 0x4e:\n                    iVar8 = iVar8 + 1;\n                    break;\n                case 0x48:\n                case 0x4f:\n                    iVar8 = iVar8 + -1;\n                }\n                puVar9 = puVar9 + 1;\n                *arg_10h = puVar9;\n                if ((iVar8 == 0) && (*(arg_ch[1][puVar9] + 8) == 0x40)) break;\n                puVar1 = arg_ch[1];\n                iVar4 = *(puVar1[puVar9] + 8);\n            }\n        }\n    }\n    if (*(arg_ch[1][*arg_10h] + 8) == 0x7f) goto code_r0x0047eff3;\n    if (*(arg_ch[1][*arg_10h] + 8) != 0x40) goto code_r0x0047efee;\n    *arg_10h = *arg_10h + 1;\n    puVar1 = arg_ch[1];\n    iVar4 = *(puVar1[*arg_10h] + 8);\n    goto joined_r0x0047e995;\ncode_r0x0047eee9:\n    piVar7 = arg_ch[1][*arg_10h];\ncode_r0x0047eef1:\n    arg_ch_00 = 0x7f;\n    arg_8h_00 = *(piVar7 + 10);\ncode_r0x0047efee:\n    fcn.0045e1ee(arg_8h, arg_ch_00, arg_8h_00);\ncode_r0x0047eff3:\n    fcn.004091e0();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 3697
    },
    "0047f031": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_148h\n\nvoid __cdecl fcn.0047f031(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t *arg_8h_00;\n    uint *var_148h;\n    uint uStack328;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    *arg_10h = *arg_10h + 1;\n    var_20h = 0;\n    var_18h = 1;\n    var_14h = 0;\n    piVar2 = *(arg_ch[1] + *arg_10h * 4);\n    var_3ch = 0;\n    var_44h = 0;\n    if ((*(piVar2 + 2) == 0) && (*piVar2 == 0x2a)) {\n        fcn.0047dbb2(arg_8h, arg_ch, arg_10h, arg_14h);\n        fcn.004091e0();\n        return;\n    }\n    fcn.0040bf10();\n    iVar7 = arg_ch[1];\n    iVar1 = *(*(iVar7 + *arg_10h * 4) + 8);\n    do {\n        if (iVar1 != 0x33) {\n            uVar8 = *arg_10h;\ncode_r0x0047f3e3:\n            arg_8h_00 = *(*(arg_ch[1] + uVar8 * 4) + 10);\n            puVar9 = 0x7f;\ncode_r0x0047f4e1:\n            fcn.0045e1ee(arg_8h, puVar9, arg_8h_00);\ncode_r0x0047f4e6:\n            fcn.00402260();\n            fcn.004091e0();\n            return;\n        }\n        arg_8h_00 = **(iVar7 + *arg_10h * 4);\n        fcn.0040e410(arg_8h_00);\n        puVar9 = &fcn.0047f031::var_44h;\n        fcn.0040c560(&fcn.0047f031::var_ch, puVar9);\n        if (var_ch != 0) goto code_r0x0047f4e1;\n        fcn.0040e8e0();\n        fcn.00401990();\n        fcn.0040c560(&fcn.0047f031::var_ch, &fcn.0047f031::var_44h);\n        *arg_10h = *arg_10h + 1;\n        if (*(*(arg_ch[1] + *arg_10h * 4) + 8) == 0x4e) {\n            iVar7 = 0;\n            do {\n                *arg_10h = *arg_10h + 1;\n                var_8h = *(*(arg_ch[1] + *arg_10h * 4) + 10);\n                uStack328 = 0xffffffff;\n                var_148h = &fcn.0047f031::var_20h;\n                iVar5 = fcn.0040aa20(arg_ch, arg_10h, var_148h, 0xffffffff);\n                if (((iVar5 != 0) || (iVar5 = fcn.0040c8f0(),  iVar5 < 1)) ||\n                   (*(*(arg_ch[1] + *arg_10h * 4) + 8) != 0x4f)) goto code_r0x0047f4e1;\n                *arg_10h = *arg_10h + 1;\n                uVar6 = fcn.0040c8f0();\n                uVar8 = *arg_10h;\n                (&fcn.0047f031::var_148h)[iVar7] = uVar6;\n                iVar7 = iVar7 + 1;\n                var_3ch = iVar7;\n            } while (*(*(arg_ch[1] + uVar8 * 4) + 8) == 0x4e);\n            if (iVar7 < 1) goto code_r0x0047f4e1;\n            fcn.0045e408(var_ch);\n            var_4h = 0;\n            if (0 < iVar7) {\n                do {\n                    cVar3 = fcn.0040d260();\n                    if (cVar3 == '\\0') goto code_r0x0047f4e1;\n                    var_4h = var_4h + 1;\n                } while (var_4h < var_3ch);\n            }\n            arg_8h_00 = 0x47f1d8;\n            cVar3 = fcn.0040ea00(0);\n            if (cVar3 == '\\0') {\n                arg_8h_00 = 0x82;\n                goto code_r0x0047f4e1;\n            }\n        }\n        if (*(*(arg_ch[1] + *arg_10h * 4) + 8) != 0x41) goto code_r0x0047f4e1;\n        uVar8 = *arg_10h + 1;\n        *arg_10h = uVar8;\n        iVar7 = *(arg_ch[1] + uVar8 * 4);\n        var_8h = *(iVar7 + 10);\n        if (*(iVar7 + 8) == 0x4e) {\n            cVar3 = fcn.00442714(var_ch);\n            if (cVar3 == '\\0') goto code_r0x0047f4e1;\n            var_4h = 0;\n            var_38h = uVar8;\n            if (uVar8 < arg_ch[2]) {\n                var_8h = arg_ch[1] + uVar8 * 4;\n                do {\n                    var_40h = *var_8h;\n                    uVar4 = *(var_40h + 8);\n                    var_34h = uVar4;\n                    var_38h = uVar8;\n                    if (uVar4 == 0x33) {\n                        cVar3 = fcn.0040df20();\n                        if (cVar3 != '\\0') goto code_r0x0047f4e1;\n                        uVar4 = var_34h;\n                    }\n                    if ((uVar4 == 0x4e) || (uVar4 == 0x47)) {\n                        var_4h = var_4h + 1;\n                    }\n                    else if ((uVar4 == 0x4f) || (uVar4 == 0x48)) {\n                        var_4h = var_4h + -1;\n                    }\n                    else if (((uVar4 == 0x40) && (var_4h == 0)) || (uVar4 == 0x7f)) break;\n                    var_8h = var_8h + 1;\n                    uVar8 = var_38h + 1;\n                    var_38h = uVar8;\n                } while (uVar8 < arg_ch[2]);\n            }\n            if (0 < var_3ch) {\n                puVar9 = &fcn.0047f031::var_148h;\n                for (iVar7 = var_3ch; iVar7 != 0; iVar7 = iVar7 + -1) {\n                    *puVar9 = 0;\n                    puVar9 = puVar9 + 1;\n                }\n            }\n            cVar3 = fcn.0047e771(arg_ch, arg_10h, var_ch, &fcn.0047f031::var_148h, 1);\n            if (cVar3 == '\\0') goto code_r0x0047f4e6;\n        }\n        else {\n            cVar3 = fcn.00442714(var_ch);\n            if (cVar3 != '\\0') goto code_r0x0047f4e1;\n            var_4h = 0;\n            var_38h = uVar8;\n            if (uVar8 < arg_ch[2]) {\n                var_34h = arg_ch[1] + uVar8 * 4;\n                do {\n                    var_40h = *var_34h;\n                    iVar1 = *(var_40h + 8);\n                    if (iVar1 == 0x7f) break;\n                    if ((iVar1 == 0x4e) || (iVar1 == 0x47)) {\n                        var_4h = var_4h + 1;\n                    }\n                    else if ((iVar1 == 0x4f) || (iVar1 == 0x48)) {\n                        var_4h = var_4h + -1;\n                    }\n                    else {\n                        if ((iVar1 == 0x40) && (var_4h == 0)) break;\n                        if ((iVar1 == 0x33) && (cVar3 = fcn.0040df20(),  cVar3 != '\\0')) goto code_r0x0047f4e1;\n                    }\n                    var_34h = var_34h + 1;\n                    var_38h = var_38h + 1;\n                } while (var_38h < arg_ch[2]);\n            }\n            puVar9 = arg_ch;\n            arg_8h_00 = arg_10h;\n            iVar7 = fcn.0040aa20(arg_ch, arg_10h, &fcn.0047f031::var_20h, 0xffffffff);\n            if (iVar7 != 0) goto code_r0x0047f4e1;\n            fcn.00409120(&fcn.0047f031::var_20h);\n        }\n        uVar8 = *arg_10h;\n        iVar1 = *(*(arg_ch[1] + uVar8 * 4) + 8);\n        if (iVar1 == 0x7f) goto code_r0x0047f4e6;\n        if (iVar1 != 0x40) goto code_r0x0047f3e3;\n        *arg_10h = uVar8 + 1;\n        iVar7 = arg_ch[1];\n        iVar1 = *(*(iVar7 + *arg_10h * 4) + 8);\n    } while( true );\n}\n",
        "token_count": 2448
    },
    "0047f4ff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_160h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047f4ff(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint32_t **arg_8h_00;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t arg_14h_00;\n    int32_t iVar7;\n    uint *puVar8;\n    ulong uVar9;\n    uint32_t **in_stack_fffffe80;\n    uint32_t **arg_ch_00;\n    uint32_t **ppuVar10;\n    uint var_160h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t *var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t *var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint32_t **var_10h;\n    int32_t var_ch;\n    uint32_t **var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    var_1h._0_1_ = arg_14h >> 2 & 1;\n    *arg_10h = *arg_10h + 1;\n    var_18h = 1;\n    var_30h = 1;\n    var_20h = 0;\n    var_14h = 0;\n    piVar1 = *(*(arg_ch + 4) + *arg_10h * 4);\n    arg_14h_00 = arg_14h & 3;\n    var_58h = 0;\n    var_24h = NULL;\n    var_2h = '\\0';\n    var_38h = 0;\n    var_2ch = 0;\n    if (*(piVar1 + 2) == 0) {\n        iVar4 = *piVar1;\n        if (iVar4 == 0x1e) {\n            fcn.0047f031(arg_8h, arg_ch, arg_10h, arg_14h_00);\n            goto code_r0x0047fbc0;\n        }\n        if (iVar4 == 0x1f) {\n            fcn.0047e914(arg_8h, arg_ch, arg_10h, arg_14h_00);\n            goto code_r0x0047fbc0;\n        }\n        if (iVar4 == 0x2a) {\n            fcn.0047dbb2(arg_8h, arg_ch, arg_10h, arg_14h_00);\n            goto code_r0x0047fbc0;\n        }\n    }\n    fcn.0040bf10();\n    iVar4 = *(arg_ch + 4);\n    iVar3 = *(*(iVar4 + *arg_10h * 4) + 8);\n    while (iVar3 == 0x33) {\n        fcn.0040e410(**(iVar4 + *arg_10h * 4));\n        ppuVar10 = 0x47f5d3;\n        fcn.0040c560(&fcn.0047f4ff::var_10h, &fcn.0047f4ff::var_24h);\n        if (var_10h == NULL) {\n            if (var_1h != 0) {\n                arg_ch_00 = 0x79;\n                ppuVar10 = *(*(*(arg_ch + 4) + *arg_10h * 4) + 10);\n                goto code_r0x0047fbb3;\n            }\n            fcn.0040e8e0();\n            fcn.00401990();\n            ppuVar10 = &fcn.0047f4ff::var_24h;\n            in_stack_fffffe80 = &fcn.0047f4ff::var_10h;\n            fcn.0040c560(in_stack_fffffe80, ppuVar10);\n            if (var_2h != '\\0') goto code_r0x0047f618;\n        }\n        else {\n            if ((var_24h & 0x100) != 0) {\n                ppuVar10 = *(*(*(arg_ch + 4) + *arg_10h * 4) + 10);\n                arg_ch_00 = 0xae;\n                goto code_r0x0047fbb3;\n            }\n            if ((var_24h & 0x400) != 0) {\n                arg_ch_00 = 0x9c;\n                ppuVar10 = *(*(*(arg_ch + 4) + *arg_10h * 4) + 10);\n                goto code_r0x0047fbb3;\n            }\n            var_2h = '\\x01';\ncode_r0x0047f618:\n            if ((((arg_14h & 1) != 0) &&\n                (cVar2 = fcn.004531f4(&fcn.0047f4ff::var_48h, &fcn.0047f4ff::var_24h, arg_14h_00),  cVar2 != '\\0')) &&\n               (arg_ch_00 = in_stack_fffffe80,  (var_24h & 0x200) != 0)) goto code_r0x0047fbb3;\n        }\n        if (((((arg_14h & 2) != 0) && (fcn.0040c560(&fcn.0047f4ff::var_5ch, &fcn.0047f4ff::var_24h),  var_5ch != 0)) &&\n            (arg_ch_00 = in_stack_fffffe80,  (var_24h & 0x200) != 0)) ||\n           ((var_1h != 0 && (cVar2 = fcn.00442714(var_10h),  arg_ch_00 = in_stack_fffffe80,  cVar2 == '\\0'))))\n        goto code_r0x0047fbb3;\n        *arg_10h = *arg_10h + 1;\n        if (*(*(*(arg_ch + 4) + *arg_10h * 4) + 8) == 0x4e) {\n            if (var_1h == 0) {\n                var_2h = '\\0';\n                arg_ch_00 = in_stack_fffffe80;\n            }\n            else {\n                fcn.00409120(var_10h);\n                arg_ch_00 = in_stack_fffffe80;\n            }\n            iVar4 = *(*(arg_ch + 4) + *arg_10h * 4);\n            var_8h = *(iVar4 + 10);\n            iVar7 = 0;\n            if (*(iVar4 + 8) != 0x4e) goto code_r0x0047fbb3;\n            do {\n                *arg_10h = *arg_10h + 1;\n                var_8h = *(*(*(arg_ch + 4) + *arg_10h * 4) + 10);\n                iVar4 = fcn.0040aa20(arg_ch, arg_10h, &fcn.0047f4ff::var_20h, 0xffffffff);\n                if (iVar4 != 0) {\n                    arg_ch_00 = 0x7b;\n                    ppuVar10 = var_8h;\n                    goto code_r0x0047fbb3;\n                }\n                iVar4 = fcn.0040c8f0();\n                ppuVar10 = var_8h;\n                if (iVar4 < 1) {\n                    arg_ch_00 = 0x7b;\n                    goto code_r0x0047fbb3;\n                }\n                if ((*(*(*(arg_ch + 4) + *arg_10h * 4) + 8) != 0x4f) || (0x40 < iVar7)) {\n                    arg_ch_00 = 0x7b;\n                    goto code_r0x0047fbb3;\n                }\n                *arg_10h = *arg_10h + 1;\n                ppuVar10 = 0x47f754;\n                uVar5 = fcn.0040c8f0();\n                iVar4 = *(arg_ch + 4);\n                (&fcn.0047f4ff::var_160h)[iVar7] = uVar5;\n                iVar7 = iVar7 + 1;\n                var_58h = iVar7;\n            } while (*(*(iVar4 + *arg_10h * 4) + 8) == 0x4e);\n            if (iVar7 < 1) goto code_r0x0047fbb3;\n            ppuVar10 = var_10h;\n            fcn.0045e408(var_10h);\n            var_ch = 0;\n            if (0 < iVar7) {\n                do {\n                    cVar2 = fcn.0040d260();\n                    if (cVar2 == '\\0') {\n                        arg_ch_00 = 0x7d;\n                        goto code_r0x0047fbb3;\n                    }\n                    var_ch = var_ch + 1;\n                } while (var_ch < iVar7);\n            }\n            arg_8h_00 = var_10h;\n            in_stack_fffffe80 = NULL;\n            cVar2 = fcn.0040ea00(0);\n            arg_ch_00 = var_8h;\n            if (cVar2 == '\\0') goto code_r0x0047fbb3;\n            if (var_1h != 0) {\n                in_stack_fffffe80 = NULL;\n                uVar9 = fcn.004329a8(&fcn.0047f4ff::var_38h, 0);\n                if (0 < uVar9) {\n                    fcn.00478524(arg_8h_00, uVar9 >> 0x20);\n                }\n            }\n        }\n        arg_ch_00 = in_stack_fffffe80;\n        if (*(*(*(arg_ch + 4) + *arg_10h * 4) + 8) == 0x41) {\n            uVar6 = *arg_10h + 1;\n            *arg_10h = uVar6;\n            var_8h = *(*(*(arg_ch + 4) + uVar6 * 4) + 10);\n            if (var_2h != '\\0') {\n                fcn.0040e8e0();\n                fcn.00409120(&fcn.0047f4ff::var_20h);\n                arg_ch_00 = in_stack_fffffe80;\n            }\n            uVar6 = *arg_10h;\n            if (*(*(*(arg_ch + 4) + uVar6 * 4) + 8) == 0x4e) {\n                if (var_1h != 0) goto code_r0x0047fbb3;\n                cVar2 = fcn.00442714(var_10h);\n                if (cVar2 == '\\0') {\n                    arg_ch_00 = 0x7c;\n                    goto code_r0x0047fbb3;\n                }\n                if ((*(arg_8h + 0xff) != '\\0') && (var_ch = 0,  var_50h = uVar6,  uVar6 < *(arg_ch + 8))) {\n                    var_8h = *(arg_ch + 4) + uVar6 * 4;\n                    do {\n                        var_4ch = *var_8h;\n                        var_54h = *(var_4ch + 2);\n                        if ((*(var_4ch + 2) == 0x33) && (cVar2 = fcn.0040df20(),  cVar2 != '\\0')) {\n                            arg_ch_00 = 0xb1;\n                            goto code_r0x0047fbb3;\n                        }\n                        iVar3 = var_54h;\n                        if ((iVar3 == 0x4e) || (iVar3 == 0x47)) {\n                            var_ch = var_ch + 1;\n                        }\n                        else if ((iVar3 == 0x4f) || (iVar3 == 0x48)) {\n                            var_ch = var_ch + -1;\n                        }\n                        else if (((iVar3 == 0x40) && (var_ch == 0)) || (iVar3 == 0x7f)) break;\n                        var_8h = var_8h + 1;\n                        var_50h = var_50h + 1;\n                    } while (var_50h < *(arg_ch + 8));\n                }\n                if (0 < var_58h) {\n                    puVar8 = &fcn.0047f4ff::var_160h;\n                    for (iVar4 = var_58h; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar8 = 0;\n                        puVar8 = puVar8 + 1;\n                    }\n                }\n                cVar2 = fcn.0047e771(arg_ch, arg_10h, var_10h, &fcn.0047f4ff::var_160h, 1);\n                if (cVar2 == '\\0') goto code_r0x0047fbb8;\n            }\n            else {\n                cVar2 = fcn.00442714(var_10h);\n                if (cVar2 != '\\0') goto code_r0x0047fbb3;\n                if ((*(arg_8h + 0xff) != '\\0') && (var_ch = 0,  var_50h = uVar6,  uVar6 < *(arg_ch + 8))) {\n                    var_4ch = *(arg_ch + 4) + uVar6 * 4;\n                    do {\n                        var_54h = *var_4ch;\n                        iVar3 = *(var_54h + 8);\n                        if ((iVar3 == 0x33) && (cVar2 = fcn.0040df20(),  cVar2 != '\\0')) goto code_r0x0047fbb3;\n                        if ((iVar3 == 0x4e) || (iVar3 == 0x47)) {\n                            var_ch = var_ch + 1;\n                        }\n                        else if ((iVar3 == 0x4f) || (iVar3 == 0x48)) {\n                            var_ch = var_ch + -1;\n                        }\n                        else if (((iVar3 == 0x40) && (var_ch == 0)) || (iVar3 == 0x7f)) break;\n                        var_4ch = var_4ch + 1;\n                        var_50h = var_50h + 1;\n                    } while (var_50h < *(arg_ch + 8));\n                }\n                iVar4 = fcn.0040aa20(arg_ch, arg_10h, &fcn.0047f4ff::var_20h, 0xffffffff);\n                if (iVar4 != 0) goto code_r0x0047fbb3;\n                fcn.00409120(&fcn.0047f4ff::var_20h);\n            }\n        }\n        iVar3 = *(*(*(arg_ch + 4) + *arg_10h * 4) + 8);\n        if (iVar3 == 0x7f) goto code_r0x0047fbb8;\n        if (iVar3 != 0x40) {\n            arg_ch_00 = 0x7f;\n            goto code_r0x0047fbb3;\n        }\n        *arg_10h = *arg_10h + 1;\n        iVar4 = *(arg_ch + 4);\n        in_stack_fffffe80 = arg_ch_00;\n        iVar3 = *(*(iVar4 + *arg_10h * 4) + 8);\n    }\n    arg_ch_00 = 0x7f;\n    ppuVar10 = *(*(*(arg_ch + 4) + *arg_10h * 4) + 10);\ncode_r0x0047fbb3:\n    fcn.0045e1ee(arg_8h, arg_ch_00, ppuVar10);\ncode_r0x0047fbb8:\n    fcn.00402260();\ncode_r0x0047fbc0:\n    fcn.004091e0();\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 3749
    },
    "0047fbd9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fbd9(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.00457664(in_ECX, 1, arg_8h, *(arg_8h + 8), arg_ch);\n    iVar1 = fcn.00403f70();\n    if (*(iVar1 + 0x14) == 0) {\n        *(in_ECX + 0xf8) = 7;\n        fcn.00409480(0);\n        arg_8h_00 = fcn.00403f70();\n        fcn.00409120(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 172
    },
    "0047fc37": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fc37(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.0046433f(in_ECX, 1, 1, arg_8h, arg_ch);\n    iVar1 = fcn.00403f70();\n    if (*(iVar1 + 0x14) == 0) {\n        *(in_ECX + 0xf8) = 7;\n        fcn.00409480(0);\n        arg_8h_00 = fcn.00403f70();\n        fcn.00409120(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "0047fc93": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fc93(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.0046433f(in_ECX, 1, 0, arg_8h, arg_ch);\n    iVar1 = fcn.00403f70();\n    if (*(iVar1 + 0x14) == 0) {\n        *(in_ECX + 0xf8) = 7;\n        fcn.00409480(0);\n        arg_8h_00 = fcn.00403f70();\n        fcn.00409120(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "0047fcef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fcef(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    cVar2 = fcn.004578f3(in_ECX, arg_8h, *(arg_8h + 8));\n    if (cVar2 != '\\0') {\n        arg_8h = arg_8h & 0xffffff;\n        cVar2 = fcn.00443a5f(*(in_ECX + 0x438), &var_4h, &arg_8h + 3);\n        if (cVar2 != '\\0') {\n            if (arg_8h._3_1_ != '\\0') {\n                uVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x400, 0, var_4h);\n                *(in_ECX + 0x454) = uVar3;\n                arg_8h = 1;\n                fcn.0040d6b0();\n                *(in_ECX + 0xf8) = 9;\n                fcn.00409480(0);\n                uVar3 = fcn.00403f70();\n                fcn.00409120(uVar3);\n                return 0;\n            }\n            fcn.00403f80(0xcccccccc, 0);\n            return 0;\n        }\n    }\n    puVar1 = arg_ch;\n    fcn.004091e0();\n    puVar1[2] = 1;\n    *puVar1 = 0;\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 397
    },
    "00401b70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401b70(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t unaff_EBX;\n    uint var_38h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_28h = *0x4974f4;\n    var_20h = 1;\n    var_1ch = 0;\n    fcn.00401c30();\n    fcn.004040c0(&var_28h, 1);\n    fcn.00402260();\n    uVar1 = *0x4974f0;\n    fcn.004091e0();\n    var_28h = uVar1;\n    var_20h = 1;\n    fcn.00401c30();\n    fcn.004040c0(&var_28h, 1);\n    fcn.00402260();\n    var_4h = *(unaff_EBX + 300);\n    *0x4974ec = 0;\n    *(unaff_EBX + 0xf8) = 0;\n    while (var_4h != NULL) {\n        cVar2 = fcn.00464ac0(unaff_EBX, **var_4h, &var_8h, &var_14h, &var_10h, &var_ch);\n        if (cVar2 == '\\x01') {\n            fcn.0046f7ee(unaff_EBX, var_8h + 1, 1);\n        }\n        fcn.0044278c(&var_4h, &var_18h);\n    }\n    *(unaff_EBX + 0xf8) = 1;\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 434
    },
    "00402170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.00402170(void)\n\n{\n    int32_t *piVar1;\n    uint *in_EAX;\n    uint uVar2;\n    int32_t unaff_EBX;\n    uint32_t uVar3;\n    \n    if (unaff_EBX != 0) {\n        uVar2 = fcn.00411361(unaff_EBX);\n        piVar1 = in_EAX[3];\n        in_EAX[1] = uVar2;\n        if (*piVar1 < 2) {\n            fcn.00403e80();\n        }\n        else {\n            *piVar1 = *piVar1 + -1;\n            fcn.004013a0();\n            if (in_EAX[1] == -1) {\n                uVar3 = 8;\n            }\n            else {\n                uVar3 = in_EAX[1] + 8 & 0xfffffff8;\n            }\n            in_EAX[2] = uVar3;\n            uVar2 = fcn.00411777(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            *in_EAX = uVar2;\n        }\n        fcn.00411000(*in_EAX, unaff_EBX, in_EAX[1] * 2 + 2);\n        return;\n    }\n    fcn.0040c8a0(in_EAX, 0);\n    return;\n}\n",
        "token_count": 315
    },
    "004029a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.004029a0(void)\n\n{\n    int32_t *piVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint arg_8h;\n    \n    piVar1 = in_EAX[3];\n    if (*piVar1 < 2) {\n        return;\n    }\n    *piVar1 = *piVar1 + -1;\n    fcn.004013a0();\n    uVar2 = fcn.00446220(in_EAX[1] + 1);\n    in_EAX[2] = uVar2;\n    arg_8h = fcn.00411777(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n    fcn.00411000(arg_8h, *in_EAX, in_EAX[1] * 2 + 2);\n    *in_EAX = arg_8h;\n    return;\n}\n",
        "token_count": 208
    },
    "004032d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004032d0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    \n    piVar1 = in_EAX[3];\n    if (*piVar1 < 2) {\n        fcn.004031b0();\n    }\n    else {\n        *piVar1 = *piVar1 + -1;\n        fcn.004013a0();\n        uVar2 = fcn.00446220(in_EAX[1] + 2);\n        in_EAX[2] = uVar2;\n        arg_8h_00 = fcn.00411777(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n        fcn.00411000(arg_8h_00, *in_EAX, in_EAX[1] * 2 + 2);\n        *in_EAX = arg_8h_00;\n    }\n    *(*in_EAX + in_EAX[1] * 2) = arg_8h;\n    in_EAX[1] = in_EAX[1] + 1;\n    *(*in_EAX + in_EAX[1] * 2) = 0;\n    return;\n}\n",
        "token_count": 297
    },
    "00403600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.00403600(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    ushort *puVar3;\n    uint *unaff_ESI;\n    \n    piVar1 = unaff_ESI[3];\n    if (*piVar1 < 2) {\n        unaff_ESI[1] = 0;\n        **unaff_ESI = 0;\n        return;\n    }\n    *piVar1 = *piVar1 + -1;\n    puVar2 = fcn.00411777(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = 1;\n    }\n    unaff_ESI[3] = puVar2;\n    unaff_ESI[2] = 8;\n    puVar3 = fcn.00411777(0x10);\n    *unaff_ESI = puVar3;\n    unaff_ESI[1] = 0;\n    *puVar3 = 0;\n    return;\n}\n",
        "token_count": 231
    },
    "00403e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e20(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t unaff_EBX;\n    \n    if (((in_EAX != 0) && (in_EAX != -1)) && (unaff_EBX != 0)) {\n        piVar1 = in_ECX[3];\n        if (*piVar1 < 2) {\n            fcn.00403e80();\n        }\n        else {\n            *piVar1 = *piVar1 + -1;\n            fcn.004013a0();\n            uVar2 = fcn.00446220(in_EAX + 1);\n            in_ECX[2] = uVar2;\n            iVar3 = fcn.00411777(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            *in_ECX = iVar3;\n        }\n        in_ECX[1] = in_EAX;\n        fcn.00411000(*in_ECX, unaff_EBX + arg_8h * 2, in_EAX * 2);\n        *(in_EAX * 2 + *in_ECX) = 0;\n        return;\n    }\n    fcn.0040c8a0(in_ECX, 0);\n    return;\n}\n",
        "token_count": 323
    },
    "00403ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ee0(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint *in_EAX;\n    \n    piVar1 = param_1[3];\n    if (*piVar1 < 2) {\n        param_1[1] = in_EAX[1];\n        fcn.00403e80();\n        fcn.00411000(*param_1, *in_EAX, param_1[1] * 2 + 2);\n        return;\n    }\n    *piVar1 = *piVar1 + -1;\n    param_1[1] = in_EAX[1];\n    param_1[2] = in_EAX[2];\n    *param_1 = *in_EAX;\n    piVar1 = in_EAX[3];\n    param_1[3] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 209
    },
    "0040b7b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\ndouble * __cdecl fcn.0040b7b0(double *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t arg_8h_00;\n    uint uVar5;\n    uint arg_ch;\n    uint extraout_ECX;\n    int32_t iVar6;\n    float10 fVar7;\n    ulong uVar8;\n    uint arg_10h;\n    \n    if (*(arg_8h + 1) == 1) {\n        if (in_EAX[2] == 1) {\n            uVar3 = *in_EAX;\n            uVar1 = *arg_8h;\n            iVar6 = (uVar3 >> 0x1f) + (uVar1 >> 0x1f) + CARRY4(uVar3, uVar1);\n            if (uVar3 + uVar1 >> 0x1f == iVar6) {\n                *arg_8h = uVar3 + uVar1;\n            }\n            else {\n                *(arg_8h + 1) = 2;\n                *arg_8h = uVar3 + uVar1;\n                *(arg_8h + 4) = iVar6;\n            }\n            goto code_r0x0040b7fe;\n        }\n        if (in_EAX[2] == 2) {\n            uVar3 = *arg_8h;\n            uVar1 = *in_EAX;\n            uVar2 = in_EAX[1];\n            *arg_8h = uVar3 + *in_EAX;\n            *(arg_8h + 4) = (uVar3 >> 0x1f) + uVar2 + CARRY4(uVar3, uVar1);\n            *(arg_8h + 1) = 2;\n            goto code_r0x0040b7fe;\n        }\n        fVar7 = fcn.0040bd40();\n        fcn.004091e0();\n        *arg_8h = fVar7;\n        *(arg_8h + 1) = 3;\n        goto code_r0x0040b83d;\n    }\n    uVar3 = *(arg_8h + 1) - 2;\n    if (9 < uVar3) goto code_r0x0040b7fe;\n    // switch table (10 cases) at 0x40b85c\n    switch(*(uVar3 * 4 + 0x40b85c)) {\n    case 0x40b7fe:\n        goto code_r0x0040b7fe;\n    case 0x40b83d:\n        break;\n    case 0x428680:\n        if ((in_EAX[2] == 1) || (in_EAX[2] == 2)) {\n            uVar8 = fcn.00442d6f(in_EAX);\n            uVar3 = *arg_8h;\n            *arg_8h = *arg_8h + uVar8;\n            *(arg_8h + 4) = *(arg_8h + 4) + (uVar8 >> 0x20) + CARRY4(uVar3, uVar8);\n            goto code_r0x0040b7fe;\n        }\n    default:\n        fcn.0045297a(arg_8h);\n        break;\n    case 0x4286a8:\n        if (in_EAX[2] == 0xb) {\n            iVar4 = fcn.00442e6f(in_EAX);\n            iVar6 = **arg_8h;\n            arg_8h_00 = fcn.00411777(iVar4 + iVar6);\n            fcn.00411000(arg_8h_00, (*arg_8h)[1], **arg_8h);\n            uVar5 = fcn.00442e6f(in_EAX);\n            arg_10h = extraout_ECX;\n            arg_ch = fcn.004679dc(in_EAX);\n            fcn.00411000(**arg_8h + arg_8h_00, arg_ch, arg_10h);\n            fcn.0041137c(*(*arg_8h + 4), uVar5);\n            *(*arg_8h + 4) = arg_8h_00;\n            **arg_8h = iVar4 + iVar6;\n            goto code_r0x0040b7fe;\n        }\n        fcn.0045297a(arg_8h);\n        break;\n    case 0x428723:\n        iVar6 = *arg_8h;\n        if (in_EAX[2] == 1) {\n            iVar4 = fcn.0040c8f0();\n            *arg_8h = iVar6 + iVar4;\n        }\n        else {\n            iVar4 = fcn.00442d6f(in_EAX);\n            *arg_8h = iVar6 + iVar4;\n        }\n        goto code_r0x0040b7fe;\n    }\ncode_r0x0040b83d:\n    fVar7 = fcn.0040bd40();\n    *arg_8h = fVar7 + *arg_8h;\ncode_r0x0040b7fe:\n    if (*(arg_8h + 0xc) != 0) {\n        fcn.00442ef7(*(arg_8h + 0xc));\n        *(arg_8h + 0xc) = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1234
    },
    "0040bc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040bc00(void)\n\n{\n    int32_t *piVar1;\n    ulong *in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong *unaff_EBX;\n    uint *puVar5;\n    uint *puVar6;\n    \n    uVar4 = *(in_EAX + 1);\n    *(unaff_EBX + 1) = uVar4;\n    *(unaff_EBX + 0xc) = 0;\n    // switch table (12 cases) at 0x40bc74\n    switch(uVar4) {\n    case 2:\n        *unaff_EBX = *in_EAX;\n        *(unaff_EBX + 4) = *(in_EAX + 4);\n        return;\n    case 3:\n        *unaff_EBX = *in_EAX;\n        return;\n    case 4:\n        puVar2 = fcn.00411777(0x10);\n        if (puVar2 == NULL) {\n            *(unaff_EBX + 0xc) = 0;\n            return;\n        }\n        puVar5 = *(in_EAX + 0xc);\n        *puVar2 = *puVar5;\n        puVar2[1] = puVar5[1];\n        puVar2[2] = puVar5[2];\n        piVar1 = puVar5[3];\n        puVar2[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n        *(unaff_EBX + 0xc) = puVar2;\n        return;\n    case 5:\n        puVar2 = fcn.00411777(0x214);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            puVar5 = *in_EAX;\n            puVar6 = puVar2;\n            for (iVar3 = 0x85; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n        }\n        *unaff_EBX = puVar2;\n        if (puVar2[1] != 0) {\n            *puVar2[1] = *puVar2[1] + 1;\n            return;\n        }\n        break;\n    case 6:\n        *unaff_EBX = *in_EAX;\n        return;\n    case 7:\n        *unaff_EBX = *in_EAX;\n        break;\n    case 8:\n        if (*in_EAX != 0) {\n            uVar4 = fcn.00411777(0x10);\n            *unaff_EBX = uVar4;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar4);\n            iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*unaff_EBX, *in_EAX);\n            if (iVar3 < 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*unaff_EBX);\n                fcn.0041137c(*unaff_EBX);\n                *unaff_EBX = 0;\n                return;\n            }\n        }\n        break;\n    case 9:\n        *unaff_EBX = *in_EAX;\n        return;\n    case 10:\n        iVar3 = fcn.00411777(0x18);\n        if (iVar3 != 0) {\n            uVar4 = fcn.0044b52a(iVar3, *in_EAX);\n            *unaff_EBX = uVar4;\n            return;\n        }\n        goto code_r0x00428ef2;\n    case 0xb:\n        puVar2 = fcn.00411777(8);\n        *unaff_EBX = puVar2;\n        *puVar2 = **in_EAX;\n        if (**unaff_EBX == 0) {\n            uVar4 = fcn.00411777(1);\n            *(*unaff_EBX + 4) = uVar4;\n            **(*unaff_EBX + 4) = 0;\n            return;\n        }\n        uVar4 = fcn.00411777(**unaff_EBX);\n        *(*unaff_EBX + 4) = uVar4;\n        fcn.00411000((*unaff_EBX)[1], *(*in_EAX + 4), **unaff_EBX);\n        return;\n    case 0xc:\n        iVar3 = fcn.00411777(0x14);\n        if (iVar3 != 0) {\n            uVar4 = fcn.0046fa03(iVar3, *in_EAX);\n            *unaff_EBX = uVar4;\n            return;\n        }\ncode_r0x00428ef2:\n        *unaff_EBX = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 1091
    },
    "0040bda0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bda0(uint arg_8h)\n\n{\n    double *in_EAX;\n    float10 fVar1;\n    \n    // switch table (10 cases) at 0x40be08\n    switch(*(in_EAX + 1)) {\n    default:\n        if (*(in_EAX + 1) != 3) {\n            fVar1 = fcn.0040bd40();\n            fcn.004091e0();\n            *in_EAX = fVar1;\n            *(in_EAX + 1) = 3;\n        }\n    case 3:\n        fVar1 = fcn.0040bd40();\n        *in_EAX = *in_EAX / fVar1;\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 10:\n        if (*(in_EAX + 0xc) != 0) {\n            fcn.00442ef7(*(in_EAX + 0xc));\n            *(in_EAX + 0xc) = 0;\n        }\n        return;\n    }\n}\n",
        "token_count": 239
    },
    "0040be20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040be20(void)\n\n{\n    int64_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    double *unaff_ESI;\n    float10 fVar5;\n    ulong uVar6;\n    \n    // switch table (10 cases) at 0x40be90\n    switch(*(unaff_ESI + 1)) {\n    case 2:\n        if ((in_EAX[2] == 1) || (in_EAX[2] == 2)) {\n            uVar6 = fcn.00442d6f(in_EAX);\n            uVar6 = fcn.00420aa0(uVar6, *unaff_ESI, *(unaff_ESI + 4));\n            *(unaff_ESI + 4) = uVar6 >> 0x20;\n            *unaff_ESI = uVar6;\n            goto code_r0x0040be5c;\n        }\n        break;\n    case 3:\n        goto code_r0x0040be82;\n    case 4:\n    case 9:\n    case 0xb:\n        break;\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 10:\n        goto code_r0x0040be5c;\n    default:\n        if (in_EAX[2] == 1) {\n            iVar3 = *unaff_ESI * *in_EAX;\n            iVar1 = *unaff_ESI * *in_EAX;\n            iVar4 = iVar1 >> 0x20;\n            iVar2 = iVar1;\n            if ((iVar3 - iVar2 == 0) && (iVar3 >> 0x1f == iVar4)) {\n                *unaff_ESI = iVar3;\n            }\n            else {\n                *(unaff_ESI + 1) = 2;\n                *unaff_ESI = iVar2;\n                *(unaff_ESI + 4) = iVar4;\n            }\n            goto code_r0x0040be5c;\n        }\n        if (in_EAX[2] == 2) {\n            uVar6 = fcn.00420aa0(*unaff_ESI, *unaff_ESI >> 0x1f, *in_EAX, in_EAX[1]);\n            *(unaff_ESI + 1) = 2;\n            *(unaff_ESI + 4) = uVar6 >> 0x20;\n            *unaff_ESI = uVar6;\n            goto code_r0x0040be5c;\n        }\n    }\n    fcn.0045297a(unaff_ESI);\ncode_r0x0040be82:\n    fVar5 = fcn.0040bd40();\n    *unaff_ESI = fVar5 * *unaff_ESI;\ncode_r0x0040be5c:\n    if (*(unaff_ESI + 0xc) != 0) {\n        fcn.00442ef7(*(unaff_ESI + 0xc));\n        *(unaff_ESI + 0xc) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 697
    },
    "0040c020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c020(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t unaff_EBX;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (uVar4 = arg_8h[1],  unaff_EBX < uVar4)) {\n        if ((in_EAX == -1) || (uVar4 < unaff_EBX + in_EAX)) {\n            in_EAX = uVar4 - unaff_EBX;\n        }\n        piVar1 = in_ECX[3];\n        if (*piVar1 < 2) {\n            fcn.004031b0();\n        }\n        else {\n            *piVar1 = *piVar1 + -1;\n            puVar2 = fcn.00411777(4);\n            if (puVar2 == NULL) {\n                puVar2 = NULL;\n            }\n            else {\n                *puVar2 = 1;\n            }\n            in_ECX[3] = puVar2;\n            iVar3 = in_ECX[1] + 1 + in_EAX;\n            in_ECX[2] = iVar3;\n            if (iVar3 == 0) {\n                uVar4 = 8;\n            }\n            else {\n                uVar4 = iVar3 + 7U & 0xfffffff8;\n            }\n            in_ECX[2] = uVar4;\n            iVar3 = fcn.00411777(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n            fcn.00411000(iVar3, *in_ECX, in_ECX[1] * 2 + 2);\n            *in_ECX = iVar3;\n        }\n        fcn.00411000(*in_ECX + in_ECX[1] * 2, *arg_8h + unaff_EBX * 2, in_EAX * 2);\n        in_ECX[1] = in_ECX[1] + in_EAX;\n        *(*in_ECX + in_ECX[1] * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 517
    },
    "0040c8f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040c8f0(int32_t **param_1)\n\n{\n    int16_t *arg_8h;\n    int32_t *piVar1;\n    int32_t *var_8h;\n    \n    if (param_1[2] != 0x1) {\n    // switch table (10 cases) at 0x426950\n        switch(param_1[2]) {\n        case 0x2:\n        case 0x7:\n            break;\n        case 0x3:\n            piVar1 = fcn.00426200();\n            return piVar1;\n        case 0x4:\n            arg_8h = *param_1[3];\n            if ((*arg_8h == 0x30) && ((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)))) {\n                fcn.00433276(arg_8h + 2, &var_8h, 8);\n                return var_8h;\n            }\n            piVar1 = fcn.00413330(arg_8h);\n            return piVar1;\n        default:\n            return NULL;\n        case 0x9:\n            return *param_1 != '\\0';\n        case 0xa:\n            return (*param_1)[1];\n        case 0xb:\n            piVar1 = *param_1;\n            if (4 < *piVar1) {\n                return NULL;\n            }\n            fcn.00433177(piVar1[1], *piVar1, &var_8h);\n            return var_8h;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 370
    },
    "0040c910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00427849)\n\nuint32_t fcn.0040c910(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_10h;\n    uint arg_8h;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    float10 fVar4;\n    float10 fVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar1 = *((*(unaff_ESI + 8) + *(in_EAX + 8) * 0xc) * 4 + 0x4921e8);\n    if (iVar1 == 1) {\ncode_r0x0040c932:\n        iVar1 = fcn.0040c8f0();\n        uVar2 = fcn.0040c8f0();\n        return uVar2 & 0xffffff00 | iVar1 < uVar2;\n    }\n    if (iVar1 == 3) {\n        fVar4 = fcn.0040bd40();\n        fVar5 = fcn.0040bd40();\n        if (((fVar5 < fVar4) << 8 | (fVar5 == fVar4) << 0xe) != 0) {\n            return 0;\n        }\ncode_r0x00427851:\n        uVar2 = 1;\n    }\n    else {\n    // switch table (8 cases) at 0x42787b\n        switch(iVar1 - 2U) {\n        case 0:\n            iVar6 = fcn.00442d6f(in_EAX);\n            iVar7 = fcn.00442d6f(unaff_ESI);\n            if (iVar7 <= iVar6) {\n                return 0;\n            }\n            goto code_r0x00427851;\n        default:\n            uVar2 = iVar1 - 2U & 0xffffff00;\n            break;\n        case 2:\n            arg_10h = fcn.00452e60(unaff_ESI);\n            arg_8h = fcn.00452e60(in_EAX);\n            uVar2 = fcn.004457dd(arg_8h, in_EAX, arg_10h);\n            uVar2 = uVar2 & 0xffffff00 | uVar2 < 0;\n            break;\n        case 5:\n            uVar2 = fcn.0044b01e(in_EAX);\n            uVar3 = fcn.0044b01e(unaff_ESI);\n            uVar2 = uVar2 < uVar3;\n            break;\n        case 7:\n            goto code_r0x0040c932;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 605
    },
    "0040d4b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0040d4b0(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t arg_8h;\n    uint unaff_EBX;\n    uint var_4h;\n    \n    iVar2 = fcn.00411361(unaff_EBX);\n    piVar1 = in_EAX[3];\n    if (*piVar1 < 2) {\n        fcn.004031b0();\n    }\n    else {\n        *piVar1 = *piVar1 + -1;\n        fcn.004013a0();\n        uVar3 = fcn.00446220(in_EAX[1] + 1 + iVar2);\n        in_EAX[2] = uVar3;\n        arg_8h = fcn.00411777(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n        fcn.00411000(arg_8h, *in_EAX, in_EAX[1] * 2 + 2);\n        *in_EAX = arg_8h;\n    }\n    fcn.00411000(*in_EAX + in_EAX[1] * 2, unaff_EBX, iVar2 * 2);\n    in_EAX[1] = in_EAX[1] + iVar2;\n    *(*in_EAX + in_EAX[1] * 2) = 0;\n    return;\n}\n",
        "token_count": 335
    },
    "0040d510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0040d510(void)\n\n{\n    int32_t *piVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_8h;\n    uint unaff_EDI;\n    \n    piVar1 = in_EAX[3];\n    if (1 < *piVar1) {\n        *piVar1 = *piVar1 + -1;\n        fcn.004013a0();\n        iVar2 = fcn.00411361(unaff_EDI);\n        uVar3 = fcn.00446220(in_EAX[1] + 1 + iVar2);\n        in_EAX[2] = uVar3;\n        arg_8h = fcn.00411777(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n        fcn.00411000(arg_8h, *in_EAX, in_EAX[1] * 2 + 2);\n        *in_EAX = arg_8h;\n    }\n    fcn.0040d4b0();\n    return;\n}\n",
        "token_count": 248
    },
    "0040e300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e300(uint32_t liDistanceToMove, int32_t lpNewFilePointer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *unaff_ESI;\n    int32_t iVar4;\n    bool bVar5;\n    ulong uVar6;\n    uint32_t var_8h;\n    \n    if ((unaff_ESI[2] != 0) && ((arg_10h == 1 || (arg_10h == 0)))) {\n        if (arg_10h == 1) {\n            var_8h = unaff_ESI[4] + liDistanceToMove;\n            iVar1 = unaff_ESI[5] + lpNewFilePointer + CARRY4(unaff_ESI[4], liDistanceToMove);\n        }\n        else {\n            var_8h = liDistanceToMove;\n            iVar1 = lpNewFilePointer;\n        }\n        uVar3 = unaff_ESI[3];\n        uVar2 = unaff_ESI[4] - uVar3;\n        iVar4 = (unaff_ESI[5] - (uVar3 >> 0x1f)) - (unaff_ESI[4] < uVar3);\n        if ((iVar4 <= iVar1) && ((iVar4 < iVar1 || (uVar2 <= var_8h)))) {\n            uVar3 = unaff_ESI[2];\n            iVar4 = ((uVar3 >> 0x1f) + iVar4 + CARRY4(uVar3, uVar2)) - (uVar3 + uVar2 == 0);\n            if ((iVar1 <= iVar4) && ((iVar1 < iVar4 || (var_8h <= (uVar3 + uVar2) - 1)))) {\n                uVar2 = var_8h - uVar2;\n                unaff_ESI[3] = uVar2;\n                unaff_ESI[4] = var_8h;\n                unaff_ESI[5] = iVar1;\n                goto code_r0x0040e370;\n            }\n        }\n    }\n    unaff_ESI[2] = 0;\n    unaff_ESI[3] = 0;\n    if (arg_10h == 1) {\n        uVar6 = fcn.0040e3c0(unaff_ESI);\n        uVar3 = unaff_ESI[4] - uVar6;\n        bVar5 = CARRY4(liDistanceToMove, uVar3);\n        liDistanceToMove = liDistanceToMove + uVar3;\n        lpNewFilePointer = lpNewFilePointer + ((unaff_ESI[5] - (uVar6 >> 0x20)) - (unaff_ESI[4] < uVar6)) + bVar5;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(*unaff_ESI, liDistanceToMove, lpNewFilePointer, 0, arg_10h);\n    uVar6 = fcn.0040e3c0(unaff_ESI);\n    uVar2 = uVar6;\n    unaff_ESI[4] = uVar2;\n    unaff_ESI[5] = uVar6 >> 0x20;\n    if (iVar1 == 0) {\n        return uVar2 & 0xffffff00;\n    }\ncode_r0x0040e370:\n    return CONCAT31(uVar2 >> 8, 1);\n}\n",
        "token_count": 780
    },
    "0040e6d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e6d0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t *unaff_EDI;\n    uint lpVersionInformation;\n    int32_t var_158h;\n    int32_t var_154h;\n    int32_t var_150h;\n    uint var_148h;\n    uint var_44h;\n    uint lpSystemInfo;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040bf10();\n    *(unaff_EDI + 0x2e) = 0;\n    lpVersionInformation = 0x11c;\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    unaff_EDI[2] = var_150h;\n    *unaff_EDI = var_158h;\n    unaff_EDI[1] = var_154h;\n    fcn.00402170();\n    fcn.0040e830();\n    fcn.0040e850();\n    *(unaff_EDI + 0x2a) = 0;\n    unaff_EDI[7] = 0;\n    unaff_EDI[8] = 0;\n    unaff_EDI[9] = 0;\n    *(unaff_EDI + 10) = 0;\n    if (*unaff_EDI == 5) {\n        iVar1 = unaff_EDI[1];\n        if (iVar1 == 0) {\n            *(unaff_EDI + 7) = 0x101;\n        }\n        else if (iVar1 == 1) {\n            *(unaff_EDI + 0x1d) = 1;\n            *(unaff_EDI + 0x1e) = 0x101;\n        }\n        else if (iVar1 == 2) {\n            *(unaff_EDI + 0x1d) = 1;\n            *(unaff_EDI + 0x1f) = 1;\n            *(unaff_EDI + 0x21) = 1;\n            if (var_44h._2_1_ == '\\x01') {\n                *(unaff_EDI + 0x1e) = 1;\n            }\n            else {\n                *(unaff_EDI + 8) = 1;\n            }\n        }\n        *(unaff_EDI + 0x2e) = var_44h >> 6 & 1;\n    }\n    else if (*unaff_EDI == 6) {\n        *(unaff_EDI + 0x1d) = 1;\n        *(unaff_EDI + 0x1f) = 1;\n        *(unaff_EDI + 0x21) = 1;\n        if (unaff_EDI[1] == 0) {\n            if (var_44h._2_1_ == '\\x01') {\n                *(unaff_EDI + 0x22) = 0x101;\n            }\n            else {\n                *(unaff_EDI + 0x23) = 1;\n                *(unaff_EDI + 9) = 0x101;\n            }\n        }\n        else if (unaff_EDI[1] == 1) {\n            *(unaff_EDI + 0x23) = 1;\n            *(unaff_EDI + 0x25) = 1;\n            if (var_44h._2_1_ == '\\x01') {\n                *(unaff_EDI + 0x26) = 0x101;\n            }\n            else {\n                *(unaff_EDI + 0x27) = 1;\n                *(unaff_EDI + 10) = 0x101;\n            }\n        }\n    }\n    var_10h = 0;\n    var_8h = 0;\n    fcn.0040f130();\n    if (var_8h != 0) {\n        var_4h = 0;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n        pcVar3 = fcn.0040f0f0(uVar2);\n        (*pcVar3)();\n        if (var_4h == 1) {\n            *(unaff_EDI + 0x2a) = 1;\n        }\n    }\n    lpSystemInfo = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_34h = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    if (*(unaff_EDI + 0x2a) == '\\0') {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        pcVar3 = _sym.imp.KERNEL32.dll_FreeLibrary;\n    }\n    else {\n        var_1ch = 0;\n        var_14h = 0;\n        fcn.0040f1a0();\n        if (var_14h == 0) {\n            (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        }\n        else {\n            pcVar3 = fcn.0040f160(&lpSystemInfo);\n            (*pcVar3)();\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_FreeLibrary;\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(var_1ch);\n        }\n    }\n    *(unaff_EDI + 0xb) = lpSystemInfo;\n    if (var_10h != 0) {\n        (*pcVar3)(var_10h);\n    }\n    return;\n}\n",
        "token_count": 1373
    },
    "0040e960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e960(uint32_t arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint uVar4;\n    \n    iVar2 = arg_8h;\n    if (in_EAX == 2) {\n        uVar3 = 0;\n        arg_8h = 0;\n        if (in_EDX <= in_ECX) {\n            in_EDX = in_ECX;\n        }\n        if (in_EDX != 0) {\n            iVar2 = iVar2 - arg_ch;\n            do {\n                uVar1 = *(iVar2 + arg_ch);\n                in_EDX = in_EDX - 1;\n                if (uVar1 != *arg_ch) {\n                    uVar3 = fcn.00414872(uVar1);\n                    uVar3 = uVar3 & 0xffff;\n                    arg_8h = fcn.00414872(*arg_ch);\n                    arg_8h = arg_8h & 0xffff;\n                    if (uVar3 != arg_8h) break;\n                }\n                arg_ch = arg_ch + 1;\n            } while (in_EDX != 0);\n        }\n        if (uVar3 - arg_8h < 0) {\n            uVar3 = 0xffffffff;\n        }\n        else {\n            uVar3 = uVar3 != arg_8h && -1 < uVar3 - arg_8h;\n        }\n    }\n    else {\n        if (in_EAX == 0) {\n            uVar4 = 0x400;\n        }\n        else {\n            uVar4 = 0x409;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringW)(uVar4, 1, arg_8h);\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = iVar2 - 2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 476
    },
    "00410ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00410ac0(void)\n\n{\n    char cVar1;\n    int32_t unaff_ESI;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = *(unaff_ESI + 0x11c);\n    while (var_4h != NULL) {\n        cVar1 = fcn.00464ac0(unaff_ESI, **var_4h, &var_8h, &var_14h, &var_10h, &var_ch);\n        if (cVar1 == '\\x01') {\n            fcn.0046f7ee(unaff_ESI, var_8h + 1, 1);\n        }\n        var_18h = &var_4h;\n        fcn.00440543(var_18h, &var_18h);\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0042393d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042393d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x490d40 ^ &stack0xfffffffc;\n    fcn.004114c1(arg_10h);\n    var_14h = fcn.00424401(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00420faf(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00423996:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004239d6;\n        }\n        if (iVar1 != 2) {\ncode_r0x004239c8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004239d6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004239c8;\n        goto code_r0x00423996;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004239d6:\n    fcn.0041a3c8(unaff_EBX);\n    return;\n}\n",
        "token_count": 501
    },
    "004239e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004239e5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x490d40 ^ &stack0xfffffffc;\n    fcn.004114c1(arg_10h);\n    var_14h = fcn.00424401(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00421500(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00423a3e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00423a7e;\n        }\n        if (iVar1 != 2) {\ncode_r0x00423a70:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00423a7e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00423a70;\n        goto code_r0x00423a3e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00423a7e:\n    fcn.0041a3c8(unaff_EBX);\n    return;\n}\n",
        "token_count": 508
    },
    "0042e930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042e930(uint32_t arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    \n    uVar1 = *arg_ch;\n    if (((arg_8h < 0x100) && ((uVar1 & 2) != 0)) &&\n       ((arg_ch[(arg_8h + (arg_8h >> 0x1f & 7U) >> 3) + 1] & 1 << (arg_8h & 7)) != 0)) {\ncode_r0x0042e972:\n        return (uVar1 & 1) == 0;\n    }\n    puVar6 = arg_ch + 1;\n    if ((uVar1 & 2) != 0) {\n        puVar6 = arg_ch + 0x21;\n    }\n    uVar2 = *puVar6;\n    do {\n        if (uVar2 == 0) {\n            return uVar1 & 1;\n        }\n        puVar7 = puVar6 + 1;\n        if (uVar2 == 1) {\n            uVar2 = *puVar7;\n            uVar3 = uVar2;\n            puVar7 = puVar6 + 2;\n            if (0xbf < uVar3) {\n                uVar4 = *puVar7 & 0x3f;\n                if ((uVar2 & 0x20) == 0) {\n                    uVar3 = (uVar3 & 0x1f) << 6 | uVar4;\n                    puVar7 = puVar6 + 3;\n                }\n                else if ((uVar2 & 0x10) == 0) {\n                    uVar3 = puVar6[3] & 0x3f | (uVar4 | (uVar3 & 0xf) << 6) << 6;\n                    puVar7 = puVar6 + 4;\n                }\n                else if ((uVar2 & 8) == 0) {\n                    uVar3 = puVar6[4] & 0x3f | ((uVar4 | (uVar3 & 7) << 6) << 6 | puVar6[3] & 0x3f) << 6;\n                    puVar7 = puVar6 + 5;\n                }\n                else if ((uVar2 & 4) == 0) {\n                    uVar3 = puVar6[5] & 0x3f |\n                            (((uVar4 | (uVar3 & 3) << 6) << 6 | puVar6[3] & 0x3f) << 6 | puVar6[4] & 0x3f) << 6;\n                    puVar7 = puVar6 + 6;\n                }\n                else {\n                    uVar3 = puVar6[6] & 0x3f |\n                            ((((uVar4 | (uVar3 & 1) << 6) << 6 | puVar6[3] & 0x3f) << 6 | puVar6[4] & 0x3f) << 6 |\n                            puVar6[5] & 0x3f) << 6;\n                    puVar7 = puVar6 + 7;\n                }\n            }\n            if (arg_8h == uVar3) goto code_r0x0042e972;\n        }\n        else if (uVar2 == 2) {\n            uVar2 = *puVar7;\n            uVar3 = uVar2;\n            puVar8 = puVar6 + 2;\n            if (0xbf < uVar3) {\n                uVar4 = *puVar8 & 0x3f;\n                if ((uVar2 & 0x20) == 0) {\n                    uVar3 = (uVar3 & 0x1f) << 6 | uVar4;\n                    puVar8 = puVar6 + 3;\n                }\n                else if ((uVar2 & 0x10) == 0) {\n                    uVar3 = puVar6[3] & 0x3f | (uVar4 | (uVar3 & 0xf) << 6) << 6;\n                    puVar8 = puVar6 + 4;\n                }\n                else if ((uVar2 & 8) == 0) {\n                    uVar3 = puVar6[4] & 0x3f | ((uVar4 | (uVar3 & 7) << 6) << 6 | puVar6[3] & 0x3f) << 6;\n                    puVar8 = puVar6 + 5;\n                }\n                else if ((uVar2 & 4) == 0) {\n                    uVar3 = puVar6[5] & 0x3f |\n                            (((uVar4 | (uVar3 & 3) << 6) << 6 | puVar6[3] & 0x3f) << 6 | puVar6[4] & 0x3f) << 6;\n                    puVar8 = puVar6 + 6;\n                }\n                else {\n                    uVar3 = puVar6[6] & 0x3f |\n                            ((((uVar4 | (uVar3 & 1) << 6) << 6 | puVar6[3] & 0x3f) << 6 | puVar6[4] & 0x3f) << 6 |\n                            puVar6[5] & 0x3f) << 6;\n                    puVar8 = puVar6 + 7;\n                }\n            }\n            uVar2 = *puVar8;\n            uVar4 = uVar2;\n            puVar7 = puVar8 + 1;\n            if (0xbf < uVar4) {\n                uVar5 = *puVar7 & 0x3f;\n                if ((uVar2 & 0x20) == 0) {\n                    uVar4 = (uVar4 & 0x1f) << 6 | uVar5;\n                    puVar7 = puVar8 + 2;\n                }\n                else if ((uVar2 & 0x10) == 0) {\n                    uVar4 = puVar8[2] & 0x3f | (uVar5 | (uVar4 & 0xf) << 6) << 6;\n                    puVar7 = puVar8 + 3;\n                }\n                else if ((uVar2 & 8) == 0) {\n                    uVar4 = puVar8[3] & 0x3f | ((uVar5 | (uVar4 & 7) << 6) << 6 | puVar8[2] & 0x3f) << 6;\n                    puVar7 = puVar8 + 4;\n                }\n                else if ((uVar2 & 4) == 0) {\n                    uVar4 = puVar8[4] & 0x3f |\n                            (((uVar5 | (uVar4 & 3) << 6) << 6 | puVar8[2] & 0x3f) << 6 | puVar8[3] & 0x3f) << 6;\n                    puVar7 = puVar8 + 5;\n                }\n                else {\n                    uVar4 = puVar8[5] & 0x3f |\n                            ((((uVar5 | (uVar4 & 1) << 6) << 6 | puVar8[2] & 0x3f) << 6 | puVar8[3] & 0x3f) << 6 |\n                            puVar8[4] & 0x3f) << 6;\n                    puVar7 = puVar8 + 6;\n                }\n            }\n            if ((uVar3 <= arg_8h) && (arg_8h <= uVar4)) goto code_r0x0042e972;\n        }\n        uVar2 = *puVar7;\n        puVar6 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1862
    },
    "0042ec78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042ec78(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == 2) {\n        return arg_8h >> 8 & 0xff | (arg_8h & 0xff) << 8;\n    }\n    return (arg_8h & 0xff0000 | arg_8h >> 0x10) >> 8 | (arg_8h & 0xff00 | arg_8h << 0x10) << 8;\n}\n",
        "token_count": 122
    },
    "0042ee14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042ee14(int32_t arg_8h, int32_t arg_ch, uint8_t *arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    puVar3 = arg_8h + -1;\n    if (arg_18h == 0) {\n        uVar5 = *puVar3;\n    }\n    else {\n        uVar2 = *puVar3;\n        while ((uVar2 & 0xc0) == 0x80) {\n            puVar1 = puVar3 + -1;\n            puVar3 = puVar3 + -1;\n            uVar2 = *puVar1;\n        }\n        uVar2 = *puVar3;\n        uVar5 = uVar2;\n        if (0xbf < uVar5) {\n            uVar6 = puVar3[1] & 0x3f;\n            if ((uVar2 & 0x20) == 0) {\n                uVar5 = (uVar5 & 0x1f) << 6 | uVar6;\n            }\n            else if ((uVar2 & 0x10) == 0) {\n                uVar5 = puVar3[2] & 0x3f | (uVar6 | (uVar5 & 0xf) << 6) << 6;\n            }\n            else if ((uVar2 & 8) == 0) {\n                uVar5 = puVar3[3] & 0x3f | ((uVar6 | (uVar5 & 7) << 6) << 6 | puVar3[2] & 0x3f) << 6;\n            }\n            else if ((uVar2 & 4) == 0) {\n                uVar5 = puVar3[4] & 0x3f |\n                        (((uVar6 | (uVar5 & 3) << 6) << 6 | puVar3[2] & 0x3f) << 6 | puVar3[3] & 0x3f) << 6;\n            }\n            else {\n                uVar5 = puVar3[5] & 0x3f |\n                        ((((uVar6 | (uVar5 & 1) << 6) << 6 | puVar3[2] & 0x3f) << 6 | puVar3[3] & 0x3f) << 6 |\n                        puVar3[4] & 0x3f) << 6;\n            }\n        }\n    }\n    if (arg_ch == 2) {\n        if (uVar5 == 10) {\n            if ((puVar3 <= arg_10h) || (iVar4 = 2,  puVar3[-1] != 0xd)) {\n                iVar4 = 1;\n            }\n            *arg_14h = iVar4;\n            return 1;\n        }\n        if (uVar5 == 0xd) {\ncode_r0x0042ef62:\n            *arg_14h = 1;\n            return 1;\n        }\n    }\n    else if (uVar5 < 0x86) {\n        if (uVar5 == 0x85) {\n            *arg_14h = (arg_18h != 0) + 1;\n            return 1;\n        }\n        if (uVar5 == 10) {\n            if ((puVar3 <= arg_10h) || (iVar4 = 2,  puVar3[-1] != 0xd)) {\n                iVar4 = 1;\n            }\n            *arg_14h = iVar4;\n            return 1;\n        }\n        if ((10 < uVar5) && (uVar5 < 0xe)) goto code_r0x0042ef62;\n    }\n    else if ((0x2027 < uVar5) && (uVar5 < 0x202a)) {\n        *arg_14h = 3;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 949
    },
    "0042efe8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042efe8(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    uVar1 = *arg_8h;\n    uVar3 = uVar1;\n    if ((arg_18h != 0) && (0xbf < uVar3)) {\n        uVar5 = arg_8h[1] & 0x3f;\n        if ((uVar1 & 0x20) == 0) {\n            uVar3 = (uVar3 & 0x1f) << 6;\n        }\n        else {\n            if ((uVar1 & 0x10) == 0) {\n                uVar4 = arg_8h[2];\n                uVar5 = (uVar5 | (uVar3 & 0xf) << 6) << 6;\n            }\n            else if ((uVar1 & 8) == 0) {\n                uVar4 = arg_8h[3];\n                uVar5 = ((uVar5 | (uVar3 & 7) << 6) << 6 | arg_8h[2] & 0x3f) << 6;\n            }\n            else if ((uVar1 & 4) == 0) {\n                uVar4 = arg_8h[4];\n                uVar5 = (((uVar5 | (uVar3 & 3) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6;\n            }\n            else {\n                uVar4 = arg_8h[5];\n                uVar5 = ((((uVar5 | (uVar3 & 1) << 6) << 6 | arg_8h[2] & 0x3f) << 6 | arg_8h[3] & 0x3f) << 6 |\n                        arg_8h[4] & 0x3f) << 6;\n            }\n            uVar3 = uVar4 & 0x3f;\n        }\n        uVar3 = uVar3 | uVar5;\n    }\n    if (arg_ch == 2) {\n        if (uVar3 == 10) {\ncode_r0x0042f102:\n            *arg_14h = 1;\n            return 1;\n        }\n        if (uVar3 == 0xd) {\n            if ((arg_10h + -1 <= arg_8h) || (iVar2 = 2,  arg_8h[1] != 10)) {\n                iVar2 = 1;\n            }\n            *arg_14h = iVar2;\n            return 1;\n        }\n    }\n    else if (uVar3 < 0x86) {\n        if (uVar3 == 0x85) {\n            *arg_14h = (arg_18h != 0) + 1;\n            return 1;\n        }\n        if (9 < uVar3) {\n            if (uVar3 < 0xd) goto code_r0x0042f102;\n            if (uVar3 == 0xd) {\n                if ((arg_10h + -1 <= arg_8h) || (iVar2 = 2,  arg_8h[1] != 10)) {\n                    iVar2 = 1;\n                }\n                *arg_14h = iVar2;\n                return 1;\n            }\n        }\n    }\n    else if ((0x2027 < uVar3) && (uVar3 < 0x202a)) {\n        *arg_14h = 3;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 885
    },
    "00430bcd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430bcd(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    if (*0x4a8634 == 1) {\n        if (arg_8h != -1) {\n            *(arg_18h + 0x58) = arg_8h;\n        }\n        if (arg_ch != -1) {\n            *(arg_18h + 0x5c) = arg_ch;\n        }\n    }\n    else if (*0x4a8634 == 2) {\n        if (arg_8h != -1) {\n            *(arg_18h + 0x58) = *(arg_18h + 0x58) + *(arg_18h + 0x60) + arg_8h;\n        }\n        if (arg_ch != -1) {\n            *(arg_18h + 0x5c) = *(arg_18h + 0x5c) + *(arg_18h + 100) + arg_ch;\n        }\n    }\n    else {\n        if (arg_8h != -1) {\n            *(arg_18h + 0x58) = *(arg_18h + 0x58) + arg_8h;\n        }\n        if (arg_ch != -1) {\n            *(arg_18h + 0x5c) = *(arg_18h + 0x5c) + arg_ch;\n        }\n    }\n    if (0 < arg_10h) {\n        *(arg_18h + 0x60) = arg_10h;\n    }\n    if (0 < arg_14h) {\n        *(arg_18h + 100) = arg_14h;\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "004318a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004318a3(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint lpRect;\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(arg_10h, &lpRect);\n        *arg_ch = lpRect;\n        arg_ch[1] = var_ch;\n        return;\n    }\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    if (arg_8h == 2) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(arg_10h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0043276b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0043276b(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x14) == 1) {\n        fcn.00411000(&var_8h, *(arg_8h + 0xc) + *(arg_8h + 4), 8);\n    }\n    else {\n        fcn.00414eb4(&var_8h, 1, 8, *(arg_8h + 0x1c));\n    }\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 8;\n    *arg_ch = CONCAT31(CONCAT21(CONCAT11(var_4h, var_4h._1_1_), var_4h._2_1_), var_4h._3_1_);\n    var_4h._0_1_ = 0;\n    iVar1 = fcn.00414ee0(&var_8h, \"EA06\");\n    return iVar1 != 0;\n}\n",
        "token_count": 265
    },
    "00432a0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00432a0e(double *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    double dVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(arg_8h + 1);\n    uVar2 = 0;\n    if (iVar1 == 3) {\n        uVar2 = fcn.004149c6(SUB84(*arg_8h, 0), *arg_8h >> 0x20);\n        if ((uVar2 & 0x1f8) == 0) {\n            return uVar2;\n        }\n        dVar3 = fcn.00426236();\n        if (*arg_8h != dVar3) {\n            return uVar2;\n        }\n    }\n    else if (iVar1 == 1) {\n        dVar3 = *arg_8h;\n    }\n    else {\n        if (iVar1 != 2) {\n            return 0;\n        }\n        dVar3 = *arg_8h;\n    }\n    if (dVar3 == 0.0) {\n        return uVar2 | 0x40000;\n    }\n    if ((dVar3 & 1) == 0) {\n        uVar2 = uVar2 | 0x200000;\n    }\n    else {\n        uVar2 = uVar2 | 0x100000;\n    }\n    if ((dVar3 < 0x100000000) && (dVar3 < 0)) {\n        return uVar2 | 0x10000;\n    }\n    return uVar2 | 0x20000;\n}\n",
        "token_count": 373
    },
    "004335e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004335e8(int32_t arg_8h)\n\n{\n    if (arg_8h < 0) {\n        return -1 - arg_8h;\n    }\n    if (arg_8h == 1) {\n        return 0;\n    }\n    return -arg_8h;\n}\n",
        "token_count": 74
    },
    "00433b76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00433b76(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_8h_00;\n    ushort *puVar4;\n    uint lpPathName;\n    \n    fcn.004337ed(&lpPathName, arg_8h, 0x104);\n    iVar2 = fcn.00411361(&lpPathName);\n    if ((iVar2 != 0) && (*(&stack0xfffffdee + iVar2 * 2) == 0x5c)) {\n        *(&stack0xfffffdee + iVar2 * 2) = 0;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(&lpPathName);\n    if (uVar3 != 0xffffffff) {\n        if ((uVar3 & 0x10) != 0) {\n            return '\\x01';\n        }\n        return '\\0';\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar2 == 2) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&lpPathName, 0);\n        if (iVar2 != 0) {\n            return '\\x01';\n        }\n    }\n    else if (iVar2 != 3) {\n        return '\\0';\n    }\n    arg_8h_00 = fcn.00410330();\n    puVar4 = fcn.0041403a(arg_8h_00, 0x5c);\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n        cVar1 = fcn.00433b76(arg_8h_00);\n        fcn.0041137c(arg_8h_00);\n        if (cVar1 != '\\0') {\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&lpPathName, 0);\n            cVar1 = iVar2 != 0;\n        }\n        return cVar1;\n    }\n    fcn.0041137c(arg_8h_00);\n    return '\\0';\n}\n",
        "token_count": 476
    },
    "004341ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004341ad(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(arg_8h, 0x40000000, 1, 0, 3, 0x2000080, 0);\n    if (iVar1 != -1) {\n        iVar2 = arg_10h;\n        iVar3 = arg_ch;\n        if ((arg_10h == 0) || (iVar3 = 0,  iVar2 = arg_ch,  arg_10h != 1)) {\n            arg_ch = 0;\n        }\n        else {\n            iVar2 = 0;\n        }\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1, arg_ch, iVar2, iVar3);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 236
    },
    "00434ff6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00434ff6(int32_t arg_8h)\n\n{\n    return 1 < **(arg_8h + 0xc);\n}\n",
        "token_count": 37
    },
    "0043561d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043561d(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (arg_ch != 1) {\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(arg_8h + 0x54), 1);\n        pcVar5 = _sym.imp.USER32.dll_MoveWindow;\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar1 = var_ch;\n            iVar4 = lpRect;\n            pcVar5 = _sym.imp.USER32.dll_MoveWindow;\n            if (var_8h < lpRect) {\n                lpRect = var_8h;\n                var_8h = iVar4;\n            }\n            if (var_4h < var_ch) {\n                var_ch = var_4h;\n                var_4h = iVar1;\n            }\n            iVar4 = (arg_14h - (var_4h - var_ch)) + -10;\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (iVar3, (10 - (var_8h - lpRect)) / 2 + (arg_10h + (arg_10h >> 0x1f & 3U) >> 2), iVar4, \n                       var_8h - lpRect, var_4h - var_ch, 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(arg_8h + 0x54), 2);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar2 = var_ch;\n            iVar1 = lpRect;\n            if (var_8h < lpRect) {\n                lpRect = var_8h;\n                var_8h = iVar1;\n            }\n            if (var_4h < var_ch) {\n                var_ch = var_4h;\n                var_4h = iVar2;\n            }\n            (*pcVar5)(iVar3, (arg_10h * 3 + (arg_10h * 3 >> 0x1f & 3U) >> 2) - ((var_8h - lpRect) + 10) / 2, iVar4, \n                      var_8h - lpRect, var_4h - var_ch, 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(arg_8h + 0x54), 0x3e9);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar2 = var_ch;\n            iVar1 = lpRect;\n            if (var_8h < lpRect) {\n                lpRect = var_8h;\n                var_8h = iVar1;\n            }\n            if (var_4h < var_ch) {\n                var_ch = var_4h;\n                var_4h = iVar2;\n            }\n            iVar4 = iVar4 + (-5 - (var_4h - var_ch));\n            (*pcVar5)(iVar3, 10, iVar4, arg_10h + -0x14, var_4h - var_ch, 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(arg_8h + 0x54), 0x3ea);\n        if (iVar3 != 0) {\n            (*pcVar5)(iVar3, 10, 10, arg_10h + -0x14, iVar4 + -5, 0);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(arg_8h + 0x54), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 925
    },
    "00436238": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436238(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == '\\x01') {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(arg_8h, 0, 0, 0, 2, 5000, &arg_ch);\n        if (iVar1 == 0) {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 197
    },
    "00436611": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436611(uint *arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint *var_4h;\n    \n    puVar2 = arg_8h;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0xb0, &arg_8h, &var_8h);\n    var_4h = arg_8h;\n    iVar3 = (*pcVar1)(*puVar2, 0xc9, arg_8h, 0);\n    if (iVar3 < 1) {\n        *arg_ch = arg_8h + 1;\n        return 1;\n    }\n    iVar4 = (*pcVar1)(*puVar2, 0xc9, arg_8h, 0);\n    while (iVar3 == iVar4) {\n        arg_8h = arg_8h + -1;\n        iVar4 = (*pcVar1)(*puVar2, 0xc9, arg_8h, 0);\n    }\n    *arg_ch = var_4h - arg_8h;\n    return 1;\n}\n",
        "token_count": 294
    },
    "004366ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004366ec(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0xf0, 0, 0);\n    return uVar1 & 0xffffff00 | uVar1 == 1;\n}\n",
        "token_count": 80
    },
    "0043677c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043677c(uint *hWnd, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = arg_ch;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*hWnd, &lpRect);\n    if (arg_14h == 0xffffffff) {\n        arg_14h = (var_8h - lpRect) / 2;\n    }\n    if (arg_18h == -1) {\n        arg_18h = (var_4h - var_ch) / 2;\n    }\n    uVar4 = arg_18h << 0x10 | arg_14h & 0xffff;\n    arg_14h = 0x201;\n    arg_18h = 0x203;\n    uVar3 = 0x202;\n    uVar5 = 1;\n    if (arg_ch == 2) {\n        arg_14h = 0x204;\n        uVar3 = 0x205;\n    }\n    else {\n        if (arg_ch != 1) goto code_r0x00436818;\n        arg_14h = 0x207;\n        uVar3 = 0x208;\n        arg_ch = 0x10;\n    }\n    arg_18h = 0x206;\n    uVar5 = arg_ch;\ncode_r0x00436818:\n    arg_ch = 1;\n    if (0 < arg_10h) {\n        do {\n            uVar2 = arg_14h;\n            if ((arg_ch / 2) * 2 == arg_ch) {\n                uVar2 = arg_18h;\n            }\n            (*_sym.imp.USER32.dll_PostMessageW)(*hWnd, uVar2, uVar5, uVar4);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            (*_sym.imp.USER32.dll_PostMessageW)(*hWnd, uVar3, 0, uVar4);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch <= arg_10h);\n        return CONCAT31(arg_ch >> 8, 1);\n    }\n    return uVar1 & 0xffffff00 | 1;\n}\n",
        "token_count": 582
    },
    "0043eeff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043eeff(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    do {\n        arg_8h_00 = fcn.0042f8a5(arg_8h + *(*arg_8h + 0x485228), arg_ch, 2, 0);\n        cVar1 = *arg_8h_00;\n        uVar3 = arg_10h;\n        if (cVar1 == '^') {\ncode_r0x0043ef57:\n            iVar2 = fcn.0043eeff(arg_8h_00, arg_ch, uVar3, arg_14h);\njoined_r0x0043efc0:\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if (cVar1 == '_') {\n                uVar3 = 1;\n                if (CONCAT11(arg_8h_00[3], arg_8h_00[4]) < 0x20) {\n                    uVar3 = 1 << (arg_8h_00[4] & 0x1fU);\n                }\n                uVar3 = uVar3 | arg_10h;\n                goto code_r0x0043ef57;\n            }\n            if (((cVar1 == 'X') || (cVar1 == ']')) || (cVar1 == '`')) {\n                iVar2 = fcn.0043eeff(arg_8h_00, arg_ch, arg_10h, arg_14h);\n                goto joined_r0x0043efc0;\n            }\n            if (((cVar1 == '9') || (cVar1 == ':')) || (cVar1 == 'B')) {\n                if (arg_8h_00[1] != '\\r') {\n                    return 0;\n                }\n                if ((arg_10h & arg_14h) != 0) {\n                    return 0;\n                }\n            }\n            else if ((cVar1 != '\\x01') && (cVar1 != '\\x02')) {\n                if ((*arg_ch & 2) != 0) {\n                    return 0;\n                }\n                if (cVar1 != '\\x1a') {\n                    return 0;\n                }\n            }\n        }\n        arg_8h = arg_8h + CONCAT11(arg_8h[1], arg_8h[2]);\n        if (*arg_8h != 0x54) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 604
    },
    "00441acd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00441acd(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    do {\n        while( true ) {\n            iVar2 = *arg_ch;\n            piVar3 = *(*(arg_8h + 4) + iVar2 * 4);\n            iVar1 = *(piVar3 + 2);\n            if (iVar1 == 0x47) {\n                iVar5 = iVar5 + 1;\n            }\n            else if (iVar1 == 0x48) {\n                iVar5 = iVar5 + -1;\n                if (iVar5 < 0) {\n                    return false;\n                }\n            }\n            else if (iVar1 == 0x7f) {\n                return iVar5 != 0;\n            }\n            if (iVar5 == 0) break;\ncode_r0x00441b2a:\n            *arg_ch = iVar2 + 1;\n        }\n        if (iVar1 != 0) {\n            if (iVar1 == 0x40) {\n                return false;\n            }\n            goto code_r0x00441b2a;\n        }\n        iVar4 = *piVar3;\n        if (iVar4 == 3) goto code_r0x00441b2a;\n        if (2 < iVar4 - 0x27U) {\n            return false;\n        }\n        *arg_ch = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 355
    },
    "0044223b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044223b(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    pcVar1 = _sym.imp.WININET.dll_InternetSetOptionW;\n    puVar2 = arg_8h + 0x90;\n    if (*(arg_10h + 0x70) == 1) {\n        puVar3 = arg_8h + 0xa0;\n    }\n    else {\n        puVar2 = arg_8h + 0x5c;\n        puVar3 = arg_8h + 0x6c;\n    }\n    if (puVar2[1] != 0) {\n        (*_sym.imp.WININET.dll_InternetSetOptionW)(arg_ch, 0x2b, *puVar2, puVar2[1] + 1);\n        (*pcVar1)(arg_ch, 0x2c, *puVar3, puVar3[1] + 1);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "0044370a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044370a(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (arg_ch == '\\x01') {\n        cVar1 = fcn.0043393f(arg_8h);\n        if (cVar1 != '\\0') {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 174
    },
    "004437cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004437cd(uint arg_8h, uint arg_ch)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    \n    cVar2 = fcn.0043393f(arg_8h);\n    if (cVar2 == '\\0') {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n        if ((iVar3 != 0) || (*0x4974ed == '\\x01')) {\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0xe, 0, 0);\n            if (iVar3 == 0) {\n                iVar3 = 0x7fff;\n            }\n            iVar1 = (iVar3 + 1U) * 2;\n            arg_8h_00 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n            iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0xd, iVar3 + 1U, arg_8h_00);\n            *(arg_8h_00 + iVar3 * 2) = 0;\n            if (0 < iVar4) {\n                fcn.00433b2d(arg_8h_00, arg_ch);\n                fcn.00433b2d(0x484754, arg_ch);\n            }\n            fcn.0041137c(arg_8h_00);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 358
    },
    "004439cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004439cd(uint hWnd, uint lpText, uint lpCaption, uint uType, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_18h;\n    iVar3 = 0;\n    *0x4974ee = '\\0';\n    if (arg_18h != 0) {\n        *0x4974ef = 1;\n        var_8h = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        var_4h = iVar1;\n        iVar3 = fcn.00413f2f(0, 0, fcn.004438a7, &var_8h, 0, &arg_18h);\n    }\n    uVar2 = (*_sym.imp.USER32.dll_MessageBoxW)(hWnd, lpText, lpCaption, uType);\n    if (iVar3 != 0) {\n        *0x4974ef = 0;\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iVar3, 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    if (*0x4974ee == '\\x01') {\n        return 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 308
    },
    "00444056": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444056(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((*(arg_8h + 0x10) != 0) && (*(arg_8h + 0x20) == 0)) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(arg_8h + 0x10));\n        if (iVar1 == 0) {\n            *(arg_8h + 0x10) = 0;\n            return;\n        }\n        do {\n            iVar1 = *(arg_8h + 0x10);\n            iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            if (iVar2 == iVar1) {\n                return;\n            }\n            fcn.004349fb(iVar1);\n            fcn.00434b65(0xf);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 3);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0044548a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044548a(int32_t arg_8h, uint hWnd)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(hWnd);\n    if ((iVar2 != 0) || (*(arg_8h + 5) == '\\x01')) {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0xe, 0, 0);\n        if (iVar2 == 0) {\n            iVar2 = 0x7fff;\n        }\n        iVar1 = (iVar2 + 1U) * 2;\n        arg_8h_00 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0xd, iVar2 + 1U, arg_8h_00);\n        *(arg_8h_00 + iVar2 * 2) = 0;\n        if (0 < iVar3) {\n            if (*(arg_8h + 0xc) == '\\0') {\n                uVar4 = fcn.00411361(arg_8h_00);\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(arg_8h_00, uVar4);\n            }\n            iVar2 = fcn.0041366c(arg_8h_00, *(arg_8h + 0x24));\n            if (iVar2 != 0) {\n                *(arg_8h + 0xe8) = 1;\n                fcn.0041137c(arg_8h_00);\n                return 0;\n            }\n        }\n        fcn.0041137c(arg_8h_00);\n    }\n    return 1;\n}\n",
        "token_count": 428
    },
    "004456c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004456c1(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (arg_ch == '\\x01') {\n        uVar2 = arg_8h;\n        cVar1 = fcn.004360f5(arg_8h);\n        if (cVar1 != '\\0') {\n            return;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 176
    },
    "00445b4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00445b4f(uint hObj, int32_t pSid, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *arg_8h;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint32_t pAclInformation;\n    int32_t var_2ch;\n    uint lpbDaclDefaulted;\n    int32_t lpbDaclPresent;\n    uint var_1ch;\n    uint pSIRequested;\n    uint var_14h;\n    uint pSecurityDescriptor;\n    int32_t pAceList;\n    int32_t pDacl;\n    uint var_1h;\n    \n    arg_8h = NULL;\n    iVar5 = 0;\n    var_1h._0_1_ = 0;\n    pSecurityDescriptor = 0;\n    var_14h = 0;\n    pAceList = 0;\n    pSIRequested = 4;\n    cVar2 = fcn.00436b9c(hObj, &pSIRequested, &pSecurityDescriptor, &var_1ch);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00436b68(&var_14h, var_1ch);\n        if (cVar2 != '\\0') {\n            pDacl = 0;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorDacl)\n                              (pSecurityDescriptor, &lpbDaclPresent, &pDacl, &lpbDaclDefaulted);\n            if (iVar3 != 0) {\n                fcn.004130e0(&pAclInformation, 0, 0xc);\n                var_2ch = 8;\n                if (pDacl != 0) {\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_GetAclInformation)(pDacl, &pAclInformation, 0xc, 2);\n                    if (iVar3 == 0) goto code_r0x00445d11;\n                }\n                iVar5 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pSid);\n                cVar2 = fcn.00436b30(&pAceList, var_2ch + 0x10 + iVar5 * 2);\n                iVar5 = pAceList;\n                if (cVar2 != '\\0') {\n                    if (((lpbDaclPresent != 0) && (pAclInformation != 0)) && (uVar6 = 0,  pAclInformation != 0)) {\n                        do {\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_GetAce)(pDacl, uVar6, &pAceList);\n                            if (iVar3 == 0) goto code_r0x00445d11;\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_AddAce)(iVar5, 2, 0xffffffff, pAceList, *(pAceList + 2));\n                            if (iVar3 == 0) goto code_r0x00445d11;\n                            uVar6 = uVar6 + 1;\n                        } while (uVar6 < pAclInformation);\n                    }\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pSid);\n                    arg_8h = fcn.0043691e(iVar3 + 8);\n                    if (arg_8h != NULL) {\n                        *(arg_8h + 2) = iVar3 + 8;\n                        uVar4 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pSid, arg_8h + 8, pSid);\n                        iVar3 = (*_sym.imp.ADVAPI32.dll_CopySid)(uVar4);\n                        if (iVar3 != 0) {\n                            pSid = 0;\n                            puVar7 = arg_10h + 4;\n                            do {\n                                uVar1 = *(puVar7 + -3);\n                                uVar4 = *puVar7;\n                                *arg_8h = *(puVar7 + -1);\n                                arg_8h[1] = uVar1;\n                                *(arg_8h + 4) = uVar4;\n                                iVar3 = (*_sym.imp.ADVAPI32.dll_AddAce)(iVar5, 2, 0xffffffff, arg_8h, *(arg_8h + 2));\n                                uVar4 = var_14h;\n                                if (iVar3 == 0) goto code_r0x00445d11;\n                                pSid = pSid + 1;\n                                puVar7 = puVar7 + 3;\n                            } while (pSid == 0);\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(var_14h, 1, iVar5, 0);\n                            if (iVar3 != 0) {\n                                iVar3 = (*_sym.imp.USER32.dll_SetUserObjectSecurity)(hObj, &pSIRequested, uVar4);\n                                if (iVar3 != 0) {\n                                    var_1h._0_1_ = 1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00445d11:\n    fcn.0043689c(pSecurityDescriptor);\n    fcn.0043689c(var_14h);\n    fcn.0043689c(iVar5);\n    uVar6 = fcn.0043689c(arg_8h);\n    return uVar6 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1259
    },
    "00445d3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00445d3e(uint hObj, uint32_t pSid, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *arg_8h;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint32_t pAclInformation;\n    int32_t var_2ch;\n    uint lpbDaclDefaulted;\n    int32_t lpbDaclPresent;\n    uint var_1ch;\n    uint pSIRequested;\n    uint var_14h;\n    uint pSecurityDescriptor;\n    int32_t pAceList;\n    int32_t pDacl;\n    uint var_1h;\n    \n    arg_8h = NULL;\n    iVar5 = 0;\n    var_1h._0_1_ = 0;\n    pSecurityDescriptor = 0;\n    var_14h = 0;\n    pAceList = 0;\n    pSIRequested = 4;\n    cVar2 = fcn.00436b9c(hObj, &pSIRequested, &pSecurityDescriptor, &var_1ch);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00436b68(&var_14h, var_1ch);\n        if (cVar2 != '\\0') {\n            pDacl = 0;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorDacl)\n                              (pSecurityDescriptor, &lpbDaclPresent, &pDacl, &lpbDaclDefaulted);\n            if (iVar3 != 0) {\n                fcn.004130e0(&pAclInformation, 0, 0xc);\n                var_2ch = 8;\n                if (pDacl != 0) {\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_GetAclInformation)(pDacl, &pAclInformation, 0xc, 2);\n                    if (iVar3 == 0) goto code_r0x00445f00;\n                }\n                iVar5 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pSid);\n                cVar2 = fcn.00436b30(&pAceList, var_2ch + 0x10 + iVar5 * 2);\n                iVar5 = pAceList;\n                if (cVar2 != '\\0') {\n                    if (((lpbDaclPresent != 0) && (pAclInformation != 0)) && (uVar6 = 0,  pAclInformation != 0)) {\n                        do {\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_GetAce)(pDacl, uVar6, &pAceList);\n                            if (iVar3 == 0) goto code_r0x00445f00;\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_AddAce)(iVar5, 2, 0xffffffff, pAceList, *(pAceList + 2));\n                            if (iVar3 == 0) goto code_r0x00445f00;\n                            uVar6 = uVar6 + 1;\n                        } while (uVar6 < pAclInformation);\n                    }\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pSid);\n                    arg_8h = fcn.0043691e(iVar3 + 8);\n                    if (arg_8h != NULL) {\n                        *(arg_8h + 2) = iVar3 + 8;\n                        uVar4 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pSid, arg_8h + 8, pSid);\n                        iVar3 = (*_sym.imp.ADVAPI32.dll_CopySid)(uVar4);\n                        if (iVar3 != 0) {\n                            pSid = 0;\n                            puVar7 = arg_10h + 4;\n                            do {\n                                uVar1 = *(puVar7 + -3);\n                                uVar4 = *puVar7;\n                                *arg_8h = *(puVar7 + -1);\n                                arg_8h[1] = uVar1;\n                                *(arg_8h + 4) = uVar4;\n                                iVar3 = (*_sym.imp.ADVAPI32.dll_AddAce)(iVar5, 2, 0xffffffff, arg_8h, *(arg_8h + 2));\n                                uVar4 = var_14h;\n                                if (iVar3 == 0) goto code_r0x00445f00;\n                                pSid = pSid + 1;\n                                puVar7 = puVar7 + 3;\n                            } while (pSid < 2);\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(var_14h, 1, iVar5, 0);\n                            if (iVar3 != 0) {\n                                iVar3 = (*_sym.imp.USER32.dll_SetUserObjectSecurity)(hObj, &pSIRequested, uVar4);\n                                if (iVar3 != 0) {\n                                    var_1h._0_1_ = 1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00445f00:\n    fcn.0043689c(pSecurityDescriptor);\n    fcn.0043689c(var_14h);\n    fcn.0043689c(iVar5);\n    uVar6 = fcn.0043689c(arg_8h);\n    return uVar6 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1259
    },
    "004471d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004471d4(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    uint arg_10h;\n    uint arg_ch_00;\n    uint nYEnd;\n    uint nXEnd;\n    uint arg_14h;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_14h = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_4h = arg_ch;\n    if (arg_ch != 0) {\n        do {\n            arg_ch = 0;\n            if (0 < *(var_4h + 0xc)) {\n                puVar5 = var_4h + 0x10;\n                puVar4 = var_4h + 0x14;\n                do {\n                    arg_10h = *puVar4;\n                    arg_ch_00 = *puVar5;\n                    uVar3 = *(var_4h + 0x810 + arg_ch);\n                    nYEnd = var_10h;\n                    nXEnd = var_8h;\n                    if (1 < uVar3) {\n                        if (uVar3 < 8) {\n                            fcn.00446e7d(arg_8h, arg_ch_00, arg_10h, arg_14h);\n                            nYEnd = arg_10h;\n                            nXEnd = arg_ch_00;\n                            if ((*(var_4h + 0x810 + arg_ch) & 0xfe) == 4) {\n                                fcn.00446ef9(arg_8h, arg_ch_00, arg_10h, var_8h, var_10h, arg_14h);\n                                fcn.00446e7d(arg_8h, puVar5[2], puVar4[2], arg_14h);\n                                nYEnd = puVar4[2];\n                                nXEnd = puVar5[2];\n                                puVar1 = puVar5 + 4;\n                                arg_ch = arg_ch + 2;\n                                puVar2 = puVar4 + 4;\n                                puVar4 = puVar4 + 4;\n                                puVar5 = puVar5 + 4;\n                                fcn.00446ef9(arg_8h, *puVar1, *puVar2, nXEnd, nYEnd, arg_14h);\n                                fcn.00446e7d(arg_8h, *puVar5, *puVar4, arg_14h);\n                            }\n                        }\n                        else if (uVar3 == 0x14) {\n                            arg_14h = arg_ch_00;\n                        }\n                    }\n                    var_8h = nXEnd;\n                    var_10h = nYEnd;\n                    arg_ch = arg_ch + 1;\n                    puVar4 = puVar4 + 2;\n                    puVar5 = puVar5 + 2;\n                } while (arg_ch < *(var_4h + 0xc));\n            }\n            var_4h = *(var_4h + 4);\n        } while (var_4h != 0);\n    }\n    fcn.0043035c(arg_8h, 0xffffffff);\n    return;\n}\n",
        "token_count": 762
    },
    "00449451": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00449451(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *hWnd;\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t var_4h;\n    \n    uVar4 = arg_ch;\n    arg_ch = 0;\n    cVar3 = fcn.004417f1(0x4a8630, arg_8h, &var_4h, &arg_8h);\n    if (cVar3 == '\\0') {\n        return false;\n    }\n    var_4h = **(*0x4a8690 + var_4h * 4);\n    hWnd = **(*0x4a86a4 + arg_8h * 4);\n    uVar1 = *hWnd;\n    if (uVar4 != 0xffffffff) {\n    // switch table (21 cases) at 0x4495d1\n        switch(*(hWnd + 0x22)) {\n        case 2:\n            uVar4 = uVar4 | 4;\n        case 3:\n            if ((uVar4 & 0x800) == 0) {\n                uVar4 = uVar4 | 0x10000;\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xcf, 0, 0);\n            }\n            else {\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xcf, 1);\n            }\n            break;\n        case 6:\n            uVar4 = uVar4 | 0xe;\n            break;\n        case 7:\n            uVar4 = uVar4 | 3;\n            break;\n        case 10:\n            uVar4 = uVar4 | 0x4000000;\n            break;\n        case 0x16:\n            return false;\n        }\n        arg_ch = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xfffffff0, uVar4 | 0x50000000);\n    }\n    iVar2 = arg_10h;\n    if ((arg_10h != -1) &&\n       (arg_ch = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, arg_10h), \n       *(**(*0x4a86a4 + arg_8h * 4) + 0x88) == '\\x13')) {\n        arg_ch = (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x1036, 0, iVar2);\n    }\n    if ((*(hWnd + 0x8b) == 0xff) || (*(hWnd + 0x8b) == *(var_4h + 0x194))) {\n        fcn.004311a6(var_4h, hWnd, 1);\n    }\n    else {\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar1, 0);\n    }\n    if (((*(hWnd + 0x22) == '\\x02') || (*(hWnd + 0x22) == '\\x03')) || (iVar2 != -1)) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(*hWnd, 0, 0, 0, 0, 0, 0x27);\n    }\n    return arg_ch != 0;\n}\n",
        "token_count": 759
    },
    "0044a376": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044a376(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    arg_8h = 500;\n    uVar2 = 1000;\n    if (uVar1 != 0) {\n        arg_8h = fcn.0040c8f0();\n    }\n    if (1 < uVar1) {\n        uVar2 = fcn.0040c8f0();\n    }\n    (*_sym.imp.KERNEL32.dll_Beep)(arg_8h, uVar2);\n    return 0;\n}\n",
        "token_count": 151
    },
    "0044a404": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044a404(int32_t arg_8h)\n\n{\n    uint arg_14h;\n    uint arg_10h;\n    uint arg_ch;\n    uint in_ECX;\n    uint arg_18h;\n    \n    arg_14h = 0xffffffff;\n    if (*(arg_8h + 8) == 3) {\n        arg_14h = fcn.0040c8f0();\n    }\n    arg_18h = 0;\n    arg_10h = fcn.0040c8f0();\n    arg_ch = fcn.0040c8f0();\n    fcn.00441ce9(in_ECX, arg_ch, arg_10h, arg_14h, arg_18h);\n    return 0;\n}\n",
        "token_count": 172
    },
    "0044acb2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044acb2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00442a18(arg_8h, 2);\n    iVar2 = iVar1;\n    iVar3 = 0;\n    if ((iVar1 == 3) && (iVar2 = fcn.00442a18(arg_8h, 3),  iVar3 = iVar1,  iVar2 == 7)) {\n        iVar3 = 10;\n        iVar2 = fcn.00442a18(arg_8h, 5);\n        if (iVar2 == 0x1f) {\n            iVar3 = 0x29;\n            iVar2 = fcn.00442a18(arg_8h, 8);\n            if (iVar2 == 0xff) {\n                iVar3 = 0x128;\n                iVar2 = fcn.00442a18(arg_8h, 8);\n                while (iVar2 == 0xff) {\n                    iVar3 = iVar3 + 0xff;\n                    iVar2 = fcn.00442a18(arg_8h, 8);\n                }\n            }\n        }\n    }\n    return iVar2 + 3 + iVar3;\n}\n",
        "token_count": 286
    },
    "0044bc12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044bc12(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint unaff_ESI;\n    uint8_t uVar6;\n    uchar auStack2704 [7];\n    uchar uStack2697;\n    uchar auStack2696 [8];\n    uchar auStack2688 [520];\n    uint8_t auStack2168 [8];\n    uchar auStack2160 [36];\n    uchar auStack2124 [548];\n    uchar auStack1576 [8];\n    uchar auStack1568 [520];\n    uchar auStack1048 [520];\n    uchar auStack528 [524];\n    \n    uStack2697 = 0;\n    fcn.004102f0();\n    cVar2 = fcn.00433f41(auStack2688);\n    if (cVar2 != '\\0') {\n        fcn.004116d6(auStack2688, L\"\\\\*.*\");\n    }\n    fcn.00413bbe(auStack2688, auStack2696, auStack1568, auStack528, auStack1048);\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(auStack2688, auStack2160);\n    uVar6 = unaff_ESI >> 0x18;\n    bVar1 = true;\n    if (iVar3 != -1) {\n        while (uVar6 = unaff_ESI >> 0x18,  bVar1) {\n            if ((auStack2168[0] & 0x10) == 0) {\n                fcn.00411707(auStack2696, auStack2704);\n                fcn.004116d6(auStack2696, auStack1576);\n                fcn.004116d6(auStack2696, auStack2124);\n                iVar4 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(auStack2696);\n                if (iVar4 != 1) {\n                    uVar5 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n                    return uVar5 & 0xffffff00;\n                }\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, auStack2168);\n            if (iVar4 == 0) {\n                bVar1 = false;\n            }\n        }\n    }\n    uVar5 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n    return uVar5 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 576
    },
    "0044ff6b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ff6b(uint arg_8h, uint wParam, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint arg_ch;\n    \n    arg_8h_00 = fcn.00431228(0x4a8630, arg_8h);\n    iVar2 = fcn.00441878(0x4a8630, arg_10h);\n    arg_ch = arg_10h;\n    if (iVar2 == -1) {\n        arg_ch = (*_sym.imp.USER32.dll_GetParent)(arg_10h);\n        iVar2 = fcn.00441878(0x4a8630, arg_ch);\n    }\n    if (arg_14h == 1) {\n        if ((iVar2 == -1) ||\n           (((cVar1 = *(**(*0x4a86a4 + iVar2 * 4) + 0x88),  cVar1 != '\\x02' && (cVar1 != '\\x03')) && (cVar1 != '\\0'))))\n        {\n            (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x133, wParam, arg_10h);\n            return;\n        }\n    }\n    else if (arg_14h == 2) {\n        if ((iVar2 == -1) || (*(**(*0x4a86a4 + iVar2 * 4) + 0x88) != '\\x01')) {\n            (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x134, wParam, arg_10h);\n            return;\n        }\n    }\n    else if ((arg_14h == 6) &&\n            ((iVar2 == -1 ||\n             ((iVar2 = **(*0x4a86a4 + iVar2 * 4),  *(iVar2 + 0x88) == '\\x12' && (*(iVar2 + 0x44) == -1)))))) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x138, wParam, arg_10h);\n        return;\n    }\n    fcn.00449c59(arg_8h_00, wParam, arg_ch);\n    return;\n}\n",
        "token_count": 515
    },
    "004505a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004505a8(int32_t *arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    \n    piVar3 = arg_ch;\n    uVar5 = arg_18h;\n    if (arg_18h == 0xffffffff) {\n        uVar5 = 4;\n    }\n    if ((uVar5 & 0xc) == 0) {\n        uVar5 = uVar5 | 4;\n    }\n    uVar6 = fcn.00448d9c(uVar5 | 2);\n    iVar7 = fcn.00430817(arg_8h, 0, L\"msctls_updown32\", 0, uVar6, 0, 0, 0, 0, arg_10h, 0);\n    if (iVar7 == 0) {\n        return 0;\n    }\n    fcn.00413d9d(arg_14h);\n    uVar6 = fcn.00426200();\n    cVar4 = fcn.004417f1(0x4a8630, uVar6, &arg_18h, &arg_ch);\n    if (((cVar4 != '\\0') && (*arg_8h == ***(*0x4a8690 + arg_18h * 4))) &&\n       (*(**(*0x4a86a4 + arg_ch * 4) + 0x88) == '\\x03')) {\n        *piVar3 = iVar7;\n        iVar1 = ***(*0x4a86a4 + arg_ch * 4);\n        piVar3[0xc] = iVar1;\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x469, iVar1, 0);\n        (*pcVar2)(iVar7, 0x465, 0, 0x80017fff);\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_DestroyWindow)(iVar7);\n    return 0;\n}\n",
        "token_count": 519
    },
    "004518e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004518e4(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint *puVar9;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puVar2 = arg_10h;\n    arg_10h[3] = 0;\n    pcVar6 = *(*arg_8h + 0x10);\n    *arg_10h = 0;\n    arg_10h = NULL;\n    iVar5 = (*pcVar6)(arg_8h, 0, 0x800, &arg_10h);\n    if (iVar5 < 0) {\ncode_r0x0045191b:\n        fcn.00431416(&arg_10h);\n        return iVar5;\n    }\n    cVar3 = fcn.00431402(&arg_10h, 0);\n    if (cVar3 != '\\0') {\n        fcn.00431416(&arg_10h);\n        return -0x7fffbfff;\n    }\n    var_8h = NULL;\n    iVar5 = (**(*arg_10h + 0xc))(arg_10h, &arg_8h);\n    if (iVar5 < 0) goto code_r0x0045191b;\n    if ((arg_8h[10] == 3) && ((*(arg_8h + 0x36) & 0x40) != 0)) {\n        (**(*arg_10h + 0x4c))(arg_10h, arg_8h);\n        iVar5 = (**(*arg_10h + 0x20))(arg_10h, 0xffffffff, &var_ch);\n        if (iVar5 < 0) goto code_r0x004519a0;\n        var_4h = NULL;\n        iVar5 = (**(*arg_10h + 0x38))(arg_10h, var_ch, &var_4h);\n        if (iVar5 < 0) {\n            fcn.00431416(&var_4h);\n            goto code_r0x004519a0;\n        }\n        fcn.00441ba0(&arg_10h, &var_4h);\n        iVar5 = (**(*arg_10h + 0xc))(arg_10h, &arg_8h);\n        if (iVar5 < 0) {\n            fcn.00431416(&var_4h);\n            fcn.00431416(&arg_10h);\n            return iVar5;\n        }\n        fcn.00431416(&var_4h);\n    }\n    if (arg_8h[10] == 4) {\n        iVar5 = 0;\n        if (*(arg_8h + 0xb) != 0) {\n            do {\n                iVar7 = (**(*arg_10h + 0x14))(arg_10h, iVar5, &var_8h);\n                if (iVar7 < 0) {\n                    (**(*arg_10h + 0x4c))(arg_10h, arg_8h);\n                    fcn.00431416(&arg_10h);\n                    return iVar7;\n                }\n                if (*var_8h == arg_ch) break;\n                (**(*arg_10h + 0x50))(arg_10h, var_8h);\n                var_8h = NULL;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < *(arg_8h + 0xb));\n        }\n        (**(*arg_10h + 0x4c))(arg_10h, arg_8h);\n        iVar5 = 0;\n        if (var_8h == NULL) {\ncode_r0x004519a0:\n            fcn.00431416(&arg_10h);\n            return -0x7fffbffb;\n        }\n        iVar1 = *(var_8h + 6);\n        if (iVar1 < 0x21) {\n            *puVar2 = 1;\n            var_ch = 0;\n            piVar8 = var_8h;\n            if (0 < iVar1) {\n                puVar9 = puVar2 + 4;\n                do {\n                    iVar1 = *(piVar8[2] + 4 + iVar5);\n                    var_4h = piVar8[2] + iVar5;\n                    *puVar9 = iVar1;\n                    if (iVar1 == 0x1a) {\n                        *puVar9 = *(*var_4h + 4) | 0x4000;\n                    }\n                    if (*puVar9 == 0x1b) {\n                        *puVar9 = *(*var_4h + 4) | 0x2000;\n                    }\n                    if (*puVar9 == 0x1d) {\n                        uVar4 = fcn.0044a18d(arg_10h, *var_4h);\n                        *puVar9 = uVar4;\n                        piVar8 = var_8h;\n                    }\n                    *(puVar9 + 2) = *(piVar8[2] + 0xc + iVar5);\n                    var_ch = var_ch + 1;\n                    iVar5 = iVar5 + 0x10;\n                    puVar9 = puVar9 + 1;\n                } while (var_ch < *(piVar8 + 6));\n            }\n            uVar4 = *(piVar8 + 9);\n    // switch table (4 cases) at 0x451be4\n            switch(uVar4) {\n            case 0x16:\n                uVar4 = 3;\n                break;\n            case 0x17:\n                uVar4 = 0x13;\n                break;\n            case 0x18:\n                uVar4 = 0;\n                break;\n            case 0x19:\n                uVar4 = 10;\n            }\n            iVar5 = piVar8[5];\n            *(puVar2 + 3) = uVar4;\n            puVar2[1] = piVar8[4];\n            *(puVar2 + 0xe) = *(piVar8 + 6);\n            puVar2[2] = iVar5;\n            (**(*arg_10h + 0x50))(arg_10h, piVar8);\n            fcn.00431416(&arg_10h);\n            return 0;\n        }\n        pcVar6 = *(*arg_10h + 0x50);\n        piVar8 = var_8h;\n    }\n    else {\n        pcVar6 = *(*arg_10h + 0x4c);\n        piVar8 = arg_8h;\n    }\n    (*pcVar6)(arg_10h, piVar8);\n    fcn.00431416(&arg_10h);\n    return -0x7fffbffb;\n}\n",
        "token_count": 1571
    },
    "00452332": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00452332(uint *arg_8h, uint arg_ch, uint *arg_10h, uint32_t *arg_14h)\n\n{\n    uint *arg_8h_00;\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t arg_8h_01;\n    uint var_680h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_458h;\n    uint var_454h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_242h;\n    uint var_1ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_14h;\n    arg_8h_00 = arg_8h;\n    var_470h = 0;\n    var_46ch = 0;\n    var_468h = 0;\n    var_464h = 0;\n    var_460h = 0;\n    var_45ch = 0;\n    var_458h = 0;\n    var_454h = 0;\n    var_450h = 0;\n    var_1ch = 0;\n    var_44ch._0_2_ = 0;\n    var_242h._0_2_ = 0;\n    var_4h = 1;\n    fcn.00415281(*arg_8h, arg_8h[1], 0);\n    iVar2 = fcn.0045218e(arg_8h_00, arg_ch, &var_680h);\n    if (iVar2 != 0) {\n        return 6;\n    }\n    fcn.00414eb4(&arg_14h + 3, 1, 1, *arg_8h_00);\n    fcn.00414eb4(&arg_8h, 4, 1, *arg_8h_00);\n    arg_8h_01 = arg_8h ^ 0x87bc;\n    fcn.00414eb4(&arg_8h, 4, 1, *arg_8h_00);\n    uVar3 = *arg_8h_00;\n    *puVar1 = arg_8h ^ 0x87bc;\n    fcn.00414eb4(&arg_8h, 4, 1, uVar3);\n    var_8h = arg_8h ^ 0xa685;\n    fcn.00415281(*arg_8h_00, 0x10, 1);\n    arg_ch = fcn.0041376b(*puVar1);\n    uVar3 = fcn.0041376b(arg_8h_01);\n    fcn.00414eb4(uVar3, arg_8h_01, 1, *arg_8h_00);\n    fcn.0044ac61(uVar3, arg_8h_01, arg_8h_00[2] + 0x2477);\n    fcn.004327f0(&var_4h, uVar3, arg_8h_01);\n    if (var_8h != var_4h) {\n        fcn.004138f8(arg_ch);\n        fcn.004138f8(uVar3);\n        return 10;\n    }\n    if (arg_14h._3_1_ == '\\x01') {\n        var_468h = 0;\n        var_464h = 0;\n        var_460h = 0;\n        var_454h = 0;\n        var_450h = 0;\n        var_1ch = 0;\n        var_45ch = 1;\n        var_458h = 1;\n        var_44ch._0_2_ = 0;\n        var_242h._0_2_ = 0;\n        var_470h = arg_ch;\n        var_46ch = uVar3;\n        fcn.0044ae1b(&var_470h);\n        fcn.004138f8(uVar3);\n    }\n    else {\n        fcn.004138f8(arg_ch);\n        arg_ch = uVar3;\n    }\n    *arg_10h = arg_ch;\n    return 0;\n}\n",
        "token_count": 992
    },
    "0045253c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045253c(uint *arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint arg_8h_01;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_EDI;\n    uchar *puVar4;\n    int32_t arg_10h;\n    uchar *in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint uStack0000002c;\n    uint uStack00000030;\n    uint32_t uStack00000034;\n    uint uStack00000038;\n    uint uStack0000003c;\n    uint uStack00000040;\n    uint uStack00000044;\n    uint uStack00000048;\n    uint uStack0000004c;\n    ushort uStack00000050;\n    uint *puVar5;\n    char cVar6;\n    uchar *arg_10h_00;\n    uchar *arg_8h_02;\n    int32_t iStack8;\n    \n    fcn.00422880();\n    arg_8h_01 = arg_ch;\n    arg_8h_00 = arg_8h;\n    arg_8h_02 = &stack0x000006a4;\n    uStack0000002c = 0;\n    uStack00000030 = 0;\n    uStack00000034 = 0;\n    uStack00000038 = 0;\n    uStack0000003c = 0;\n    uStack00000040 = 0;\n    uStack00000044 = 0;\n    uStack00000048 = 0;\n    uStack0000004c = 0;\n    uStack00000050 = 0;\n    fcn.004429c3(arg_8h_02);\n    arg_ch = 1;\n    fcn.00415281(*arg_8h_00, arg_8h_00[1], 0);\n    iVar2 = fcn.004132dc(arg_8h_01, 0x4871a8);\n    puVar5 = arg_8h_00;\n    if (iVar2 == 0) {\n        arg_10h_00 = &stack0x00000b90;\n        iVar2 = fcn.0045218e(arg_8h_00, arg_8h_01, arg_10h_00);\n        if (iVar2 == 0) {\n            fcn.00413bbe(in_stack_0000000c, &arg_8h, &stack0x00000f9c, &stack0x00000d94, &stack0x0000097c);\n            fcn.00411707(&stack0x0000076c, &arg_8h);\n            fcn.004116d6(&stack0x0000076c, &stack0x00000f9c);\n            fcn.00413bbe(&stack0x00000b84, &arg_8h, &stack0x00000f9c, &stack0x00000d94, &stack0x0000097c);\n            fcn.004116d6(&stack0x0000076c, &stack0x00000d94);\n            fcn.004116d6(&stack0x0000076c, &stack0x0000097c);\n            in_stack_0000000c = &stack0x0000076c;\ncode_r0x004526bc:\n            fcn.00414eb4(&stack0xffffffeb, 1, 1, *arg_8h_00);\n            fcn.00414eb4(&stack0xffffffec, 4, 1, *arg_8h_00);\n            puVar4 = unaff_EDI ^ 0x87bc;\n            fcn.00414eb4(&stack0xffffffec, 4, 1, *arg_8h_00);\n            fcn.00414eb4(&stack0xffffffec, 4, 1, *arg_8h_00);\n            arg_8h = unaff_EDI ^ 0xa685;\n            fcn.00414eb4(&stack0x00000010, 4, 1, *arg_8h_00);\n            fcn.00414eb4(&stack0x0000000c, 4, 1, *arg_8h_00);\n            fcn.00414eb4(&stack0x00000018, 4, 1, *arg_8h_00);\n            fcn.00414eb4(&stack0x00000014, 4, 1, *arg_8h_00);\n            fcn.004323e6(&stack0x00000484);\n            iVar2 = fcn.00414b72(&stack0x00000480, 0x4871ac);\n            if (iVar2 == 0) {\n                return 9;\n            }\n            fcn.0044291d(&stack0x00000690, arg_8h_00[2] + 0x2477);\n            cVar6 = puVar5 >> 0x18;\n            iVar3 = 0;\n            if (0 < puVar4) {\n                do {\n                    if (puVar4 < iVar3 + 0x10000) {\n                        arg_10h = puVar4 - iVar3;\n                    }\n                    else {\n                        arg_10h = 0x10000;\n                    }\n                    iVar3 = iVar3 + arg_10h;\n                    fcn.00414eb4(&stack0x00001198, 1, arg_10h, *arg_8h_00);\n                    puVar4 = arg_10h_00;\n                    if (0 < arg_10h) {\n                        do {\n                            puVar5 = &stack0x00000698;\n                            uVar1 = fcn.00442992(puVar5);\n                            (&stack0x000011a4)[iStack8] = (&stack0x000011a4)[iStack8] ^ uVar1;\n                            iStack8 = iStack8 + 1;\n                            puVar4 = arg_10h_00;\n                        } while (iStack8 < arg_10h);\n                    }\n                    fcn.004327f0(&stack0xfffffffc, &stack0x000011a4, arg_10h);\n                    fcn.00414466(&stack0x00001198, 1, arg_10h, arg_8h_02);\n                    cVar6 = puVar5 >> 0x18;\n                    arg_10h_00 = puVar4;\n                } while (iVar3 < puVar4);\n            }\n            fcn.00414bf6(arg_8h_02);\n            if (iStack8 == iVar2) {\n                if (cVar6 == '\\x01') {\n                    uStack00000034 = uStack00000034 & 0xffff0000;\n                    in_stack_00000010 = 0;\n                    in_stack_00000014 = 0;\n                    in_stack_00000018 = 0;\n                    in_stack_0000001c = 0;\n                    in_stack_00000020 = 0;\n                    uStack0000002c = 0;\n                    uStack00000030 = 0;\n                    in_stack_00000024 = 0;\n                    in_stack_00000028 = 0;\n                    fcn.00432465(&stack0x00000010, &stack0x00000478);\n                    fcn.00432438(&arg_ch, in_stack_0000000c);\n                    iVar2 = fcn.0044ae1b(*0x10);\n                    if (iVar2 != 0) {\n                        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                        return 0xb;\n                    }\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_CopyFileW)();\n                    if (iVar2 == 0) {\n                        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                        return 7;\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                fcn.004323a2(in_stack_0000000c, &stack0xffffffe8, &stack0xfffffff0);\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n            return 10;\n        }\n    }\n    else {\n        arg_10h_00 = &stack0x00000b90;\n        iVar2 = fcn.0045218e(arg_8h_00, arg_8h_01, arg_10h_00);\n        if (iVar2 == 0) goto code_r0x004526bc;\n    }\n    return 6;\n}\n",
        "token_count": 1980
    },
    "0045297a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045297a(double *arg_8h)\n\n{\n    float10 fVar1;\n    \n    if (*(arg_8h + 1) != 3) {\n        fVar1 = fcn.0040bd40();\n        fcn.004091e0();\n        *arg_8h = fVar1;\n        *(arg_8h + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004529ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\ndouble * __cdecl fcn.004529ac(double *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    float10 fVar6;\n    ulong uVar7;\n    \n    if (10 < *(arg_8h + 1) - 1U) goto code_r0x00452aca;\n    // switch table (11 cases) at 0x452adc\n    switch(*(*(*(arg_8h + 1) + 0x452af3) * 4 + 0x452adc)) {\n    case 0x4529d4:\n        if (arg_ch[2] == 1) {\n            uVar3 = *arg_8h;\n            uVar1 = *arg_ch;\n            iVar4 = uVar3 - uVar1;\n            iVar5 = ((uVar3 >> 0x1f) - (uVar1 >> 0x1f)) - (uVar3 < uVar1);\n            if ((iVar4 == uVar3 - uVar1) && (iVar4 >> 0x1f == iVar5)) {\n                *arg_8h = iVar4;\n                fcn.00404030();\n                return arg_8h;\n            }\n            *(arg_8h + 1) = 2;\n            *arg_8h = uVar3 - uVar1;\n            *(arg_8h + 4) = iVar5;\n            fcn.00404030();\n            return arg_8h;\n        }\n        if (arg_ch[2] == 2) {\n            uVar3 = *arg_8h;\n            uVar1 = *arg_ch;\n            uVar2 = arg_ch[1];\n            *arg_8h = uVar3 - *arg_ch;\n            *(arg_8h + 4) = ((uVar3 >> 0x1f) - uVar2) - (uVar3 < uVar1);\n            *(arg_8h + 1) = 2;\n            fcn.00404030();\n            return arg_8h;\n        }\n        break;\n    case 0x452a5d:\n        goto code_r0x00452a5d;\n    case 0x452a77:\n        if ((arg_ch[2] == 1) || (arg_ch[2] == 2)) {\n            uVar7 = fcn.00442d6f(arg_ch);\n            uVar3 = *arg_8h;\n            *arg_8h = *arg_8h - uVar7;\n            *(arg_8h + 4) = (*(arg_8h + 4) - (uVar7 >> 0x20)) - (uVar3 < uVar7);\n            fcn.00404030();\n            return arg_8h;\n        }\n        break;\n    case 0x452a9e:\n        iVar5 = *arg_8h;\n        if (arg_ch[2] == 1) {\n            iVar4 = fcn.0040c8f0();\n            *arg_8h = iVar5 - iVar4;\n            fcn.00404030();\n            return arg_8h;\n        }\n        iVar4 = fcn.00442d6f(arg_ch);\n        *arg_8h = iVar5 - iVar4;\n    case 0x452aca:\ncode_r0x00452aca:\n        fcn.00404030();\n        return arg_8h;\n    }\n    fcn.0045297a(arg_8h);\ncode_r0x00452a5d:\n    fVar6 = fcn.0040bd40();\n    *arg_8h = *arg_8h - fVar6;\n    fcn.00404030();\n    return arg_8h;\n}\n",
        "token_count": 857
    },
    "004539d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004539d9(uint32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    uint32_t arg_8h_00;\n    uint8_t uVar3;\n    uint arg_ch_00;\n    uint16_t *puVar4;\n    uint var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_8h;\n    *(arg_8h + 0x20) = arg_10h;\n    fcn.00434c04(arg_8h, arg_10h, 1);\n    pcVar1 = arg_8h + 8;\n    arg_8h = arg_8h & 0xffffff00;\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    if (*pcVar1 == '\\x01') {\n        uVar3 = fcn.00434db8(arg_8h_00, 0x14, 0);\n        arg_8h = arg_8h_00 & 0xffffff00 | uVar3;\n        arg_ch_00 = fcn.00444526(arg_8h_00, &var_eh);\n        fcn.00434e14(&var_8h, arg_ch_00);\n    }\n    arg_10h = 0;\n    while( true ) {\n        puVar4 = fcn.004362b4(arg_ch, arg_10h);\n        uVar2 = *puVar4;\n        if (uVar2 == 0) break;\n        arg_10h = arg_10h + 1;\n        fcn.00444056(arg_8h_00);\n        fcn.00453965(arg_8h_00, uVar2, 1);\n        *(arg_8h_00 + 0x14) = 0;\n        *(arg_8h_00 + 0x18) = 0;\n    }\n    if (*(arg_8h_00 + 8) == '\\x01') {\n        fcn.0044433a(arg_8h_00, &var_8h);\n        fcn.00434db8(arg_8h_00, 0x14, arg_8h);\n    }\n    fcn.00434c04(arg_8h_00, *(arg_8h_00 + 0x20), 0);\n    return;\n}\n",
        "token_count": 569
    },
    "0045639e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045639e(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    *0x4a8724 = 0;\n    fcn.00402170();\n    if (uVar1 != 0) {\n        uVar2 = fcn.00452e60(**(arg_8h + 4));\n        fcn.0040e410(uVar2);\n    }\n    if (1 < uVar1) {\n        uVar2 = fcn.0040c8f0();\n        *0x4a8724 = fcn.004335e8(uVar2);\n    }\n    fcn.00443fe5(0x4a8710);\n    return 0;\n}\n",
        "token_count": 185
    },
    "00456c59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456c59(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = -1;\n    var_4h = -1;\n    iVar3 = 0;\n    var_ch = 1;\n    arg_8h_00 = fcn.00452e60(**(arg_8h + 4));\n    puVar1 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n    uVar2 = *(arg_8h + 8) - 2;\n    if (4 < uVar2) {\n        iVar3 = 0;\n        goto code_r0x00456d43;\n    }\n    // switch table (5 cases) at 0x456dc9\n    switch(*(uVar2 * 4 + 0x456dc9)) {\n    case 0x456cd8:\n        goto code_r0x00456cd8;\n    case 0x456d05:\n        goto code_r0x00456d05;\n    case 0x456d1d:\ncode_r0x00456d1d:\n        iVar3 = fcn.004423f2(arg_8h_00, *puVar1, iVar3, var_ch, puVar1[1], var_8h, var_4h);\ncode_r0x00456d43:\n        if (iVar3 == *(arg_8h_00 + 4)) {\n            fcn.004091e0();\n            *arg_ch = 0;\n            arg_ch[2] = 1;\n            return 0;\n        }\n        fcn.004091e0();\n        *arg_ch = iVar3 + 1;\n        arg_ch[2] = 1;\n        return 0;\n    case 0x456d85:\n        var_4h = fcn.0040c8f0();\n        if (var_4h < 1) {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            goto code_r0x00456db1;\n        }\n    }\n    var_8h = fcn.0040c8f0();\n    var_8h = var_8h + -1;\n    if (var_8h < 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    else {\ncode_r0x00456cd8:\n        var_ch = fcn.0040c8f0();\n        if (var_ch != 0) {\ncode_r0x00456d05:\n            iVar3 = fcn.0040c8f0();\n            if ((iVar3 < 0) || (3 < iVar3)) {\n                iVar3 = 0;\n            }\n            goto code_r0x00456d1d;\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\ncode_r0x00456db1:\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 766
    },
    "00456ddd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456ddd(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    int32_t arg_10h;\n    \n    uVar1 = fcn.00452e60(**(arg_8h + 4));\n    arg_ch_00 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n    arg_10h = 0;\n    if (2 < *(arg_8h + 8)) {\n        arg_10h = fcn.0040c8f0();\n        if ((arg_10h < 0) || (3 < arg_10h)) {\n            arg_10h = 0;\n        }\n        else if (arg_10h == 1) {\n            uVar1 = fcn.0040bf60();\n            goto code_r0x00456e27;\n        }\n    }\n    uVar1 = fcn.004457dd(uVar1, arg_ch_00, arg_10h);\ncode_r0x00456e27:\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 277
    },
    "004575f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004575f6(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t arg_ch_00;\n    \n    uVar1 = 0x80000000;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040c8f0();\n        uVar1 = uVar1 | 0x40000000;\n    }\n    uVar2 = fcn.0040c8f0();\n    arg_ch_00 = fcn.00433967(uVar2, uVar1);\n    if (arg_ch_00 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00403f40(uVar2, arg_ch_00);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "004578f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004578f3(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.00453140(**(arg_ch + 4));\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0040c8f0();\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    uVar3 = fcn.00452e60(**(arg_ch + 4));\n    fcn.0040e410(uVar3);\n    if (arg_10h == 2) {\n        iVar2 = fcn.0040c8f0();\n        *(arg_8h + 0x448) = iVar2 * 1000;\n    }\n    else {\n        *(arg_8h + 0x448) = 0;\n    }\n    uVar3 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    *(arg_8h + 0x44c) = uVar3;\n    return 1;\n}\n",
        "token_count": 259
    },
    "004587d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004587d3(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar auStack664 [510];\n    ushort uStack154;\n    int32_t iStack152;\n    uchar auStack144 [124];\n    uint32_t uStack20;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar3 = **(arg_8h + 4);\n    uVar5 = 0x3f;\n    uVar2 = fcn.00452e81(uVar3);\n    fcn.0041315a(auStack144, uVar2, uVar3);\n    uStack20 = uStack20;\n    uVar3 = *(*(arg_8h + 4) + 4);\n    uVar4 = 0xff;\n    uVar2 = fcn.00452e81(uVar3);\n    fcn.0041315a(auStack664, uVar2, uVar3);\n    uStack154 = 0;\n    iStack152 = fcn.0040c8f0(uVar4, uVar5);\n    iStack152 = iStack152 * 1000;\n    if (uVar1 < 4) {\n        uStack20 = 0;\n    }\n    else {\n        uStack20 = fcn.0040c8f0(uVar4);\n    }\n    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &stack0xfffffc48);\n    return 0;\n}\n",
        "token_count": 370
    },
    "00458a7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458a7e(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = **(arg_8h + 4);\n    cVar1 = fcn.00442714(uVar3);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    if (*(arg_8h + 8) == 1) {\n        uVar3 = fcn.004329a8(uVar3, 1);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = uVar3;\n    }\n    else {\n        uVar3 = **(arg_8h + 4);\n        arg_ch_00 = fcn.0040c8f0();\n        uVar3 = fcn.004329a8(uVar3, arg_ch_00);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = uVar3;\n        iVar2 = fcn.0040c8f0();\n        if (iVar2 == 0) {\n            fcn.00403f40(2, 0);\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "004595f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004595f9(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 1;\n    if (((*(arg_8h + 8) < 2) || (iVar2 = fcn.0040c8f0(),  0 < iVar2)) && (iVar3 = 0,  0 < iVar2)) {\n        while( true ) {\n            arg_8h_00 = fcn.00452e81(**(arg_8h + 4));\n            cVar1 = fcn.004338e5(arg_8h_00);\n            if (cVar1 == '\\0') break;\n            fcn.0043374b(*(in_ECX + 0x10c));\n            iVar3 = iVar3 + 1;\n            if (iVar2 <= iVar3) {\n                return 0;\n            }\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 276
    },
    "0045996e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045996e(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044b01e(*(*(arg_8h + 4) + 8));\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n        if (iVar2 != 0) {\n            uVar1 = fcn.0044b01e(*(*(arg_8h + 4) + 8));\n            goto code_r0x004599ae;\n        }\n    }\n    uVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x004599ae:\n    iVar2 = fcn.0040c8f0();\n    iVar3 = fcn.0040c8f0();\n    fcn.004318a3(*(var_4h + 0x104), &var_ch, uVar1);\n    uVar1 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar4 = (*_sym.imp.GDI32.dll_GetPixel)(uVar1, iVar2 + var_ch, iVar3 + var_8h);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = uVar4 >> 0x10 & 0xffU | (uVar4 & 0xff) << 0x10 | uVar4 & 0xff00;\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar1);\n    return 0;\n}\n",
        "token_count": 407
    },
    "00459d43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459d43(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 8) < 2) {\n        arg_8h_00 = **(arg_8h + 4);\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (*(arg_8h + 4))[1];\n        arg_8h_00 = fcn.00452e81(uVar2);\n    }\n    uVar1 = fcn.00452e81(arg_8h_00);\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(uVar1, arg_8h_00, uVar2);\n    fcn.004091e0();\n    *arg_ch = uVar2;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 217
    },
    "0045a3ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0045a3ee(int32_t arg_8h, double *arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    float10 fVar6;\n    float10 fVar7;\n    float10 fVar8;\n    uint var_1h;\n    \n    bVar1 = false;\n    if ((*(arg_8h + 8) == 3) && (iVar3 = fcn.0040c8f0(),  iVar3 == 1)) {\n        bVar1 = true;\n    }\n    fcn.004091e0();\n    *(arg_ch + 1) = 1;\n    *arg_ch = 0;\n    if (*(arg_8h + 8) < 4) {\n    // switch table (4 cases) at 0x45a5aa\n        switch(*(*(arg_8h + 8) * 4 + 0x45a5aa)) {\n        case 0x45a441:\n            fVar6 = fcn.0044af76();\n            fcn.004091e0();\n            *arg_ch = fVar6;\n            *(arg_ch + 1) = 3;\n            return 0;\n        case 0x45a465:\n            fVar6 = fcn.0040bd40();\n            if (0 < fVar6) {\n                fVar7 = fcn.0044af76();\n                fcn.004091e0();\n                *arg_ch = fVar7 * fVar6;\n                *(arg_ch + 1) = 3;\n                return 0;\n            }\n            break;\n        case 0x45a4a8:\n            cVar2 = fcn.00442714(**(arg_8h + 4));\n            if ((cVar2 == '\\0') && (cVar2 = fcn.00442714(*(*(arg_8h + 4) + 4)),  cVar2 == '\\0')) {\n                if (bVar1) {\n                    iVar3 = fcn.0040c8f0();\n                    iVar4 = fcn.0040c8f0();\n                    iVar5 = iVar3 - iVar4;\n                    if ((iVar4 < iVar3) && (0 < iVar5)) {\n                        if (iVar5 < 0x7ffffff) {\n                            iVar5 = iVar5 + 1;\n                        }\n                        iVar3 = fcn.0044afd8();\n                        fcn.004091e0();\n                        *arg_ch = iVar3 % iVar5 + iVar4;\n                        *(arg_ch + 1) = 1;\n                        return 0;\n                    }\n                }\n                else {\n                    fVar6 = fcn.0040bd40();\n                    fVar7 = fcn.0040bd40();\n                    if (fVar7 < fVar6) {\n                        fVar8 = fcn.0044af76();\n                        fcn.004091e0();\n                        *arg_ch = fVar8 * (fVar6 - fVar7) + fVar7;\n                        *(arg_ch + 1) = 3;\n                        return 0;\n                    }\n                }\n            }\n        }\n        fcn.00403f40(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 746
    },
    "0045a61e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a61e(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    int32_t extraout_ECX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint uVar12;\n    uint var_4h;\n    \n    uVar11 = 0x10;\n    iVar4 = 1;\n    if ((2 < *(arg_8h + 8)) &&\n       ((iVar2 = *(*(arg_8h + 4) + 8),  *(iVar2 + 8) != 10 ||\n        (iVar1 = fcn.00442d55(iVar2),  iVar2 = extraout_ECX,  iVar1 != 0x29)))) {\n        uVar12 = 0x45a656;\n        iVar2 = fcn.00452e81(iVar2);\n        if (iVar2 != 0) {\n            puVar3 = fcn.00452e81(*(*(arg_8h + 4) + 8));\n    // switch table (54 cases) at 0x45a7aa\n            switch(*puVar3) {\n            case 0x42:\n            case 0x62:\n                uVar11 = 8;\n                break;\n            default:\n                fcn.004091e0(uVar12);\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n                fcn.00403f40(1, 0);\n                return 1;\n            case 0x44:\n            case 100:\n                uVar11 = 0x20;\n                break;\n            case 0x57:\n            case 0x77:\n                break;\n            }\n        }\n    }\n    if (1 < *(arg_8h + 8)) {\n        iVar4 = fcn.0040c8f0();\n    }\n    uVar5 = fcn.0040c8f0();\n    uVar8 = uVar11;\n    if (uVar11 < 0x20) {\n        uVar6 = -1 << (uVar8 & 0x1f);\n    }\n    else {\n        uVar6 = 0;\n    }\n    for (; iVar4 < 0; iVar4 = iVar4 + uVar11) {\n    }\n    for (; uVar11 <= iVar4; iVar4 = iVar4 - uVar11) {\n    }\n    if (iVar4 == 0) {\n        fcn.004091e0();\n        *arg_ch = uVar5;\n        arg_ch[2] = 1;\n        return 0;\n    }\n    uVar9 = uVar8 - iVar4;\n    uVar7 = (1 << (uVar9 & 0x1f)) - 1;\n    uVar10 = (uVar7 & uVar5) << (iVar4 & 0x1f);\n    if (uVar11 < 0x20) {\n        uVar10 = uVar10 & (1 << (uVar8 & 0x1f)) - 1U;\n    }\n    if (uVar11 < 0x20) {\n        uVar7 = ((1 << (uVar8 & 0x1f)) - uVar7) - 1;\n    }\n    else {\n        uVar7 = ~uVar7;\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0x7fffffff >> (uVar9 - 1 & 0x1f) & (uVar7 & uVar5) >> (uVar9 & 0x1f) | uVar6 & uVar5 | uVar10;\n    return 0;\n}\n",
        "token_count": 884
    },
    "0045aa85": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045aa85(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    char cVar1;\n    float10 fVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    arg_8h_00 = **(arg_8h + 4);\n    cVar1 = fcn.00453140(arg_8h_00);\n    if ((cVar1 != '\\0') && (*(arg_8h_00 + 8) == 3)) {\n        fcn.0040bd40();\n        _var_8h = fcn.00426236();\n        fVar2 = fcn.0040bd40();\n        if (_var_8h != fVar2) {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "0045ab06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045ab06(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    iVar1 = **(arg_8h + 4);\n    cVar2 = fcn.00453140(iVar1);\n    if (cVar2 != '\\0') {\n        iVar1 = *(iVar1 + 8);\n        if ((iVar1 != 1) && (iVar1 != 2)) {\n            fcn.0040bd40();\n            _var_8h = fcn.00426236();\n            fVar3 = fcn.0040bd40();\n            if (_var_8h != fVar3) {\n                return 0;\n            }\n        }\n        fcn.004091e0();\n        *arg_ch = 1;\n        arg_ch[2] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "0045b0e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b0e7(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    \n    cVar5 = *(*(*(arg_8h + 4) + 8) + 8) == 4;\n    if (*(*(*(arg_8h + 4) + 0xc) + 8) == 4) {\n        cVar5 = cVar5 + '\\x02';\n    }\n    // switch table (4 cases) at 0x45b20b\n    switch(cVar5) {\n    case '\\0':\n        uVar4 = fcn.0040c8f0();\n        uVar1 = fcn.0040c8f0();\n        uVar2 = fcn.0040c8f0();\n        uVar3 = fcn.0040c8f0();\n        uVar4 = fcn.00449b67(uVar3, uVar2, uVar1, uVar4);\n        break;\n    case '\\x01':\n        uVar4 = *(*(arg_8h + 4) + 8);\n        uVar1 = fcn.0040c8f0();\n        uVar2 = fcn.00452e81(uVar4);\n        uVar1 = fcn.0040c8f0(uVar2, uVar4, uVar1);\n        uVar3 = fcn.0040c8f0();\n        uVar4 = fcn.00449b67(uVar3, uVar1, uVar2, uVar4);\n        break;\n    case '\\x02':\n        uVar4 = fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n        uVar1 = fcn.0040c8f0();\n        uVar2 = fcn.0040c8f0();\n        uVar3 = fcn.0040c8f0();\n        uVar4 = fcn.00449b67(uVar3, uVar2, uVar1, uVar4);\n        break;\n    case '\\x03':\n        uVar4 = *(*(arg_8h + 4) + 8);\n        uVar1 = fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n        uVar2 = fcn.00452e81(uVar4);\n        uVar1 = fcn.0040c8f0(uVar2, uVar4, uVar1);\n        uVar3 = fcn.0040c8f0();\n        uVar4 = fcn.00449b67(uVar3, uVar1, uVar2, uVar4);\n        break;\n    default:\n        goto code_r0x0045b201;\n    }\n    fcn.004091e0();\n    *arg_ch = uVar4;\n    arg_ch[2] = 1;\ncode_r0x0045b201:\n    return 0;\n}\n",
        "token_count": 683
    },
    "0045b21b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b21b(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar2;\n    uint arg_18h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = 0xffffffff;\n    arg_18h = 0;\n    var_4h = 0xffffffff;\n    if (2 < uVar1) {\n        var_4h = fcn.0040c8f0();\n    }\n    if (3 < uVar1) {\n        uVar2 = fcn.0040c8f0();\n    }\n    if (4 < uVar1) {\n        arg_18h = fcn.0044b01e(*(*(arg_8h + 4) + 0x10));\n    }\n    arg_ch_00 = fcn.0040c8f0();\n    arg_8h_00 = fcn.0040c8f0();\n    uVar2 = fcn.00440a2e(arg_8h_00, arg_ch_00, var_4h, uVar2, arg_18h);\n    fcn.004091e0();\n    *arg_ch = uVar2;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 317
    },
    "0045b2b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b2b0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t unaff_EDI;\n    uchar auStack12 [8];\n    \n    uVar1 = *(arg_8h + 8);\n    arg_8h_00 = 0xffffffff;\n    if (uVar1 != 0) {\n        arg_8h_00 = fcn.0040c8f0();\n    }\n    if ((uVar1 < 2) || (iVar2 = fcn.0040c8f0(),  iVar2 != 1)) {\n        iVar2 = 0;\n    }\n    iVar2 = fcn.004554fe(arg_8h_00, auStack12, iVar2);\n    if ((unaff_EDI < 1) && (iVar2 != 0)) {\n        fcn.0040e8e0();\n        fcn.0041137c(iVar2);\n        return 0;\n    }\n    fcn.004091e0();\n    *arg_ch = unaff_EDI;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 279
    },
    "0045b343": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b343(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar5;\n    uint arg_18h;\n    uint uVar6;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = var_8h;\n    uVar1 = *(arg_8h + 8);\n    uVar5 = 0;\n    arg_18h = 0;\n    var_8h = var_8h & 0xffffff00;\n    if (2 < uVar1) {\n        uVar6 = *(*(arg_8h + 4) + 8);\n        cVar3 = fcn.0044aa8e(uVar6);\n        if (cVar3 == '\\0') {\n            uVar5 = fcn.00452e81(uVar6);\n        }\n    }\n    if (3 < uVar1) {\n        cVar3 = fcn.0044aa8e(*(*(arg_8h + 4) + 0xc));\n        if (cVar3 == '\\0') {\n            arg_18h = fcn.0040c8f0();\n        }\n    }\n    if (4 < uVar1) {\n        cVar3 = fcn.0044aa8e(*(*(arg_8h + 4) + 0x10));\n        if (cVar3 == '\\0') {\n            uVar4 = fcn.0040c8f0();\n            var_8h = uVar2 & 0xffffff00 | uVar4 & 0xffffff01;\n            fcn.0040c8f0();\n        }\n    }\n    uVar6 = *(*(arg_8h + 4) + 4);\n    arg_ch_00 = fcn.00452e81(uVar6);\n    arg_8h_00 = fcn.0040c8f0();\n    uVar5 = fcn.00455255(arg_8h_00, arg_ch_00, uVar6, uVar5, arg_18h, var_8h);\n    fcn.004091e0();\n    *arg_ch = uVar5;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 548
    },
    "0045b421": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b421(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    uVar1 = 0xffffffff;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040c8f0();\n    }\n    arg_ch_00 = fcn.0040c8f0();\n    arg_8h_00 = fcn.0040c8f0();\n    uVar1 = fcn.00449451(arg_8h_00, arg_ch_00, uVar1);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 184
    },
    "0045b4fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b4fa(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    \n    uVar1 = 0xffffffff;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040c8f0();\n    }\n    arg_8h_00 = fcn.0040c8f0();\n    uVar1 = fcn.0044979e(arg_8h_00, uVar1);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 158
    },
    "0045b542": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b542(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint hWnd;\n    uint arg_8h_00;\n    uint uVar1;\n    uint arg_10h;\n    uint var_4h;\n    \n    uVar1 = 0xffffffff;\n    var_4h = 0xffffffff;\n    arg_10h = 0xffffffff;\n    if (4 < *(arg_8h + 8)) {\n        var_4h = fcn.0040c8f0();\n    }\n    if (3 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040c8f0();\n    }\n    if (2 < *(arg_8h + 8)) {\n        arg_10h = fcn.0040c8f0();\n    }\n    hWnd = fcn.0040c8f0();\n    arg_8h_00 = fcn.0040c8f0();\n    uVar1 = fcn.00449602(arg_8h_00, hWnd, arg_10h, uVar1, var_4h);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 285
    },
    "0045b6de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b6de(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    uVar1 = 0;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040c8f0();\n    }\n    arg_ch_00 = fcn.0040c8f0();\n    arg_8h_00 = fcn.0040c8f0();\n    uVar1 = fcn.00449827(arg_8h_00, arg_ch_00, uVar1);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 184
    },
    "0045b730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b730(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint unaff_EDI;\n    \n    fcn.0040bf10();\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.00452e60(*(*(arg_8h + 4) + 8));\n        fcn.0040e410(uVar1);\n    }\n    uVar1 = *(*(arg_8h + 4) + 4);\n    arg_ch_00 = fcn.00452e81(uVar1);\n    arg_8h_00 = fcn.0040c8f0(arg_ch_00, uVar1, unaff_EDI);\n    uVar1 = fcn.00448de0(arg_8h_00, arg_ch_00, uVar1);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = uVar1;\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 256
    },
    "0045b875": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b875(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t arg_ch_00;\n    uint unaff_EBX;\n    uint32_t unaff_ESI;\n    uint32_t uVar3;\n    uint uStack44;\n    uint uStack36;\n    \n    arg_ch_00 = *(arg_8h + 8);\n    fcn.0040bf10();\n    uStack36 = 2;\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    if (5 < arg_ch_00) {\n        uStack36 = fcn.0040c8f0();\n    }\n    uVar3 = arg_ch_00;\n    if (4 < arg_ch_00) {\n        uVar2 = *(*(arg_8h + 4) + 0x10);\n        cVar1 = fcn.0044357d(uVar2);\n        if (cVar1 == '\\0') goto code_r0x0045b971;\n        uVar2 = fcn.00452e60(uVar2);\n        uVar3 = unaff_ESI;\n        fcn.0040e410(uVar2);\n    }\n    if (3 < uVar3) {\n        uStack44 = fcn.0040c8f0();\n    }\n    if (2 < uVar3) {\n        arg_ch_00 = fcn.0040c8f0();\n    }\n    fcn.0040bd40();\n    uVar2 = fcn.0040c8f0();\n    uVar2 = fcn.00451184(uVar2, arg_ch_00, uStack36, uStack44, unaff_EBX);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = uVar2;\ncode_r0x0045b971:\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 451
    },
    "0045b9bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b9bd(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0xffffffff;\n    uVar1 = 0;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044b01e(*(*(arg_8h + 4) + 8));\n    }\n    if (1 < *(arg_8h + 8)) {\n        arg_ch_00 = fcn.0040c8f0();\n    }\n    arg_8h_00 = fcn.0040c8f0();\n    uVar1 = fcn.00440d74(arg_8h_00, arg_ch_00, uVar1);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 224
    },
    "0045ba20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ba20(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint uVar3;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    var_10h = 0xffffffff;\n    fcn.0040bf10();\n    var_ch = 0xffffffff;\n    var_8h = 2;\n    var_4h = 0;\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    if (5 < uVar1) {\n        var_8h = fcn.0040c8f0();\n    }\n    if (4 < uVar1) {\n        uVar3 = *(*(arg_8h + 4) + 0x10);\n        cVar2 = fcn.004423e0(uVar3);\n        if (cVar2 == '\\0') goto code_r0x0045bb2f;\n        var_4h = fcn.0044b01e(uVar3);\n    }\n    if (3 < uVar1) {\n        uVar3 = *(*(arg_8h + 4) + 0xc);\n        cVar2 = fcn.0044357d(uVar3);\n        if (cVar2 == '\\0') goto code_r0x0045bb2f;\n        uVar3 = fcn.00452e60(uVar3);\n        fcn.0040e410(uVar3);\n    }\n    if (2 < uVar1) {\n        var_ch = fcn.0040c8f0();\n    }\n    uVar3 = var_10h;\n    if (1 < uVar1) {\n        uVar3 = fcn.0040c8f0();\n    }\n    fcn.0040bd40();\n    uVar3 = fcn.0045127e(uVar3, &var_20h, var_ch, var_8h, var_4h);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = uVar3;\ncode_r0x0045bb2f:\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 537
    },
    "0045bb42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bb42(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    uVar1 = *(arg_8h + 8);\n    arg_10h = 0;\n    var_4h = 2;\n    arg_8h = 0;\n    if (uVar1 != 0) {\n        var_4h = fcn.0040c8f0();\n    }\n    if (1 < uVar1) {\n        arg_8h = fcn.0040c8f0();\n    }\n    if (2 < uVar1) {\n        arg_10h = fcn.0044b01e(*(*(iVar2 + 4) + 8));\n    }\n    fcn.004411f0(var_4h, arg_8h, arg_10h);\n    return 0;\n}\n",
        "token_count": 224
    },
    "0045bbab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bbab(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_10h;\n    uint arg_14h;\n    uint arg_18h;\n    uint arg_20h;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044b01e(*(*(arg_8h + 4) + 4));\n    }\n    arg_8h_01 = **(arg_8h + 4);\n    arg_20h = 0xffffffff;\n    arg_18h = 0xffffffff;\n    arg_14h = 0;\n    arg_10h = 0xffffffff;\n    arg_8h_00 = fcn.00452e81(arg_8h_01);\n    uVar1 = fcn.00455c4f(arg_8h_00, arg_8h_01, arg_10h, arg_14h, arg_18h, uVar1, arg_20h);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 294
    },
    "0045bbfe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bbfe(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_10h;\n    uint uVar1;\n    uint arg_18h;\n    uint arg_8h_00;\n    uint arg_20h;\n    \n    arg_18h = 0xffffffff;\n    uVar1 = 0;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044b01e(*(*(arg_8h + 4) + 8));\n    }\n    if (1 < *(arg_8h + 8)) {\n        arg_18h = fcn.0040c8f0();\n    }\n    arg_8h_00 = **(arg_8h + 4);\n    arg_20h = 0xffffffff;\n    arg_10h = fcn.00452e81(arg_8h_00);\n    uVar1 = fcn.00455c4f(0, 0xffffffff, arg_10h, arg_8h_00, arg_18h, uVar1, arg_20h);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 285
    },
    "0045bc6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bc6a(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_20h;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044b01e(*(*(arg_8h + 4) + 4));\n    }\n    arg_20h = fcn.0040c8f0();\n    uVar1 = fcn.00455c4f(0, 0xffffffff, 0, 0xffffffff, uVar1, 0xffffffff, arg_20h);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 182
    },
    "0045bcbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bcbe(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_1ch;\n    uint uVar1;\n    uint arg_20h;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044b01e(*(*(arg_8h + 4) + 4));\n    }\n    arg_20h = 0xffffffff;\n    arg_1ch = fcn.0040c8f0();\n    uVar1 = fcn.00455c4f(0, 0xffffffff, 0, 0xffffffff, uVar1, arg_1ch, arg_20h);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 199
    },
    "0045bd12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bd12(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_10h;\n    uint arg_14h;\n    uint arg_1ch;\n    uint arg_20h;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044b01e(*(*(arg_8h + 4) + 4));\n    }\n    arg_20h = 0xffffffff;\n    arg_1ch = 0xffffffff;\n    arg_14h = 0xffffffff;\n    arg_10h = 0;\n    arg_ch_00 = fcn.0040c8f0();\n    uVar1 = fcn.00455c4f(0, arg_ch_00, arg_10h, arg_14h, uVar1, arg_1ch, arg_20h);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 253
    },
    "0045bdbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bdbd(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040c8f0();\n    }\n    arg_8h_00 = fcn.0044b01e(**(arg_8h + 4));\n    uVar1 = fcn.00449bb6(arg_8h_00, uVar1);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 7;\n    return 0;\n}\n",
        "token_count": 165
    },
    "0045bfc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bfc4(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040c8f0();\n        if (iVar2 != 0) {\n            var_4h = 1;\n        }\n    }\n    arg_8h_02 = (*(arg_8h + 4))[1];\n    arg_8h_01 = **(arg_8h + 4);\n    arg_10h = fcn.00452e81(arg_8h_02);\n    arg_8h_00 = fcn.00452e81(arg_8h_01);\n    cVar1 = fcn.00453308(arg_8h_00, arg_8h_01, arg_10h);\n    if (cVar1 == '\\0') {\n        fcn.004091e0(arg_8h_02, var_4h);\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 308
    },
    "0045c308": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c308(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (1 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040c8f0();\n        if (iVar2 != 0) {\n            var_4h = 1;\n        }\n    }\n    arg_8h_01 = **(arg_8h + 4);\n    arg_8h_00 = fcn.00452e81(arg_8h_01);\n    cVar1 = fcn.0044b7b7(arg_8h_00, arg_8h_01);\n    if (cVar1 == '\\0') {\n        fcn.004091e0(var_4h);\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 243
    },
    "0045c3dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c3dd(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040c8f0();\n        if (iVar2 != 0) {\n            var_4h = 1;\n        }\n    }\n    arg_8h_02 = (*(arg_8h + 4))[1];\n    arg_8h_01 = **(arg_8h + 4);\n    arg_10h = fcn.00452e81(arg_8h_02);\n    arg_8h_00 = fcn.00452e81(arg_8h_01);\n    cVar1 = fcn.0044b859(arg_8h_00, arg_8h_01, arg_10h);\n    if (cVar1 == '\\0') {\n        fcn.004091e0(arg_8h_02, var_4h);\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 309
    },
    "0045c446": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c446(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint var_20ch;\n    \n    if (1 < *(arg_8h + 8)) {\n        iVar1 = fcn.0040c8f0();\n        if (iVar1 == 1) {\n            fcn.00452e81(**(arg_8h + 4));\n            fcn.004102f0();\n            goto code_r0x0045c4d0;\n        }\n    }\n    arg_ch_00 = fcn.00452e81(**(arg_8h + 4));\n    fcn.00411707(&var_20ch, arg_ch_00);\ncode_r0x0045c4d0:\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(&var_20ch, &var_20ch, 0x104);\n    if (iVar1 != 0) {\n        fcn.0040e8e0();\n        return 0;\n    }\n    fcn.00403f40(1, 0);\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.0040e8e0();\n    return 0;\n}\n",
        "token_count": 293
    },
    "0045c500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c500(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uint var_210h;\n    uint var_4h;\n    \n    if (1 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040c8f0();\n        if (iVar2 == 1) {\n            fcn.00452e81(**(arg_8h + 4));\n            fcn.004102f0();\n            goto code_r0x0045c58e;\n        }\n    }\n    arg_ch_00 = fcn.00452e81(**(arg_8h + 4));\n    fcn.00411707(&var_210h, arg_ch_00);\ncode_r0x0045c58e:\n    cVar1 = fcn.00410480();\n    if (cVar1 == '\\x01') {\n        fcn.0040e8e0();\n        return 0;\n    }\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.0040e8e0();\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 283
    },
    "0045c734": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c734(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint lptstrFilename;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint *arg_10h;\n    uint uVar2;\n    uint var_404h;\n    \n    if (*(arg_8h + 8) == 1) {\n        arg_8h_00 = 0x4846b4;\n    }\n    else {\n        arg_8h_00 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n    }\n    arg_8h_01 = **(arg_8h + 4);\n    arg_10h = &var_404h;\n    uVar2 = arg_8h_00;\n    lptstrFilename = fcn.00452e81(arg_8h_01);\n    cVar1 = fcn.00433fbc(lptstrFilename, arg_8h_01, arg_10h);\n    if (cVar1 == '\\x01') {\n        fcn.0040e8e0(uVar2);\n        return 0;\n    }\n    fcn.004132dc(arg_8h_00, 0x4846b4);\n    fcn.0040e8e0(uVar2);\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 325
    },
    "0045d405": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045d405(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    puVar3 = fcn.00452e60(**(arg_8h + 4));\n    uVar1 = *puVar3;\n    *puVar3[3] = *puVar3[3] + 1;\n    piVar4 = fcn.00402150();\n    if (*piVar4 != 0x5c) {\n        fcn.0040d510();\n    }\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(uVar1);\n    if (iVar5 == 1) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n    }\n    else {\n    // switch table (5 cases) at 0x45d519\n        switch(iVar5) {\n        case 2:\n            fcn.0040e8e0();\n            break;\n        case 3:\n            fcn.0040e8e0();\n            break;\n        case 4:\n            fcn.0040e8e0();\n            break;\n        case 5:\n            fcn.0040e8e0();\n            break;\n        case 6:\n            fcn.0040e8e0();\n            break;\n        default:\n            fcn.0040e8e0();\n        }\n    }\n    fcn.00402260();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar2);\n    return 0;\n}\n",
        "token_count": 436
    },
    "0045dce1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045dce1(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    uVar5 = **(arg_8h + 4);\n    cVar3 = fcn.0044357d(uVar5);\n    if (cVar3 == '\\0') {\n        cVar3 = fcn.0045be08(in_ECX, &arg_8h, uVar5, 0);\n        if (cVar3 != '\\0') {\n            iVar4 = *(**(*(in_ECX + 0x17c) + arg_8h * 4) + 4);\n            goto code_r0x0045dd38;\n        }\n    }\n    else {\n        iVar4 = fcn.00411777(0x38);\n        if (iVar4 == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = fcn.0040dd00();\n        }\n        if (1 < *(iVar1 + 8)) {\n            fcn.0040c8f0();\n        }\n        uVar5 = fcn.00452e60(**(iVar1 + 4));\n        cVar3 = fcn.0040e1b0(uVar5);\n        if (cVar3 != '\\0') {\ncode_r0x0045dd38:\n            arg_8h = fcn.004346b2(iVar4);\n            puVar2 = arg_ch;\n            fcn.004091e0();\n            puVar2[2] = 1;\n            *puVar2 = arg_8h;\n            cVar3 = fcn.0044357d(**(iVar1 + 4));\n            if (cVar3 == '\\0') {\n                return 0;\n            }\n            fcn.0040dcc0();\n            *(iVar4 + 0x2c) = 0;\n            *(iVar4 + 0x30) = 0;\n            fcn.0044aa71(iVar4);\n            return 0;\n        }\n        if (iVar4 != 0) {\n            fcn.0044aa71(iVar4);\n        }\n    }\n    puVar2 = arg_ch;\n    fcn.004091e0();\n    *puVar2 = 0xffffffff;\n    puVar2[2] = 1;\n    return 0;\n}\n",
        "token_count": 563
    },
    "0045ddec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ddec(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint var_20ch;\n    \n    fcn.00452e81(**(arg_8h + 4));\n    fcn.004102f0();\n    cVar2 = fcn.00433fa3(&var_20ch);\n    if (cVar2 != '\\0') {\n        if ((*(arg_8h + 8) == 2) ||\n           ((*(arg_8h + 8) == 3 && (cVar2 = fcn.0044aa8e(*(*(arg_8h + 4) + 8)),  cVar2 != '\\0')))) {\n            uVar7 = *(*(arg_8h + 4) + 4);\n            puVar9 = &var_20ch;\n            uVar5 = 0;\n            uVar4 = 0;\n            uVar3 = fcn.00452e81(uVar7);\n            pcVar1 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n            iVar6 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(uVar3, uVar7, uVar4, uVar5, puVar9);\n        }\n        else {\n            uVar7 = *(*(arg_8h + 4) + 8);\n            uVar3 = *(*(arg_8h + 4) + 4);\n            puVar9 = &var_20ch;\n            uVar8 = 0;\n            uVar4 = fcn.00452e81(uVar7);\n            uVar5 = fcn.00452e81(uVar3);\n            pcVar1 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n            iVar6 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(uVar5, uVar3, uVar4, uVar7, uVar8, puVar9);\n        }\n        if (iVar6 != 0) {\n            (*pcVar1)(0, 0, 0, &var_20ch);\n            return 0;\n        }\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 561
    },
    "0045f452": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f452(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t unaff_ESI;\n    int32_t **ppiVar6;\n    uint uStack68;\n    uint auStack64 [4];\n    int32_t iStack48;\n    \n    auStack64[0] = 0xffffffff;\n    cVar3 = fcn.0043475c(in_ECX, arg_8h, auStack64);\n    if (((cVar3 != '\\0') && (6 < unaff_ESI)) && (unaff_ESI <= *(in_ECX + 0x9d0))) {\n        puVar1 = *(in_ECX + 0x1b4 + unaff_ESI * 4);\n        if (*(puVar1 + 1) == '\\x01') {\n            uStack68 = 0x30;\n            iVar5 = unaff_ESI;\n            fcn.004130e0(auStack64, 0, 0x2c);\n            auStack64[0] = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*puVar1, unaff_ESI, 0, &uStack68);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            iVar4 = 7;\n            if (6 < *(in_ECX + 0x9d0)) {\n                ppiVar6 = in_ECX + 0x1d0;\n                unaff_ESI = iVar5;\n                do {\n                    piVar2 = *ppiVar6;\n                    if ((piVar2 != NULL) && (*piVar2 == iStack48)) {\n                        if (*(piVar2 + 1) == '\\x01') {\n                            fcn.0045f452(iVar4);\n                        }\n                        else {\n                            (*_sym.imp.USER32.dll_DeleteMenu)(iStack48, iVar4, 0);\n                            *(*ppiVar6 + 1) = 0xff;\n                            **ppiVar6 = 0;\n                            *(*ppiVar6 + 5) = 0;\n                            iVar4 = 0;\n                            fcn.0040c8a0(*ppiVar6 + 2, 0);\n                            fcn.00443f73(in_ECX, iStack48);\n                        }\n                    }\n                    iVar4 = iVar4 + 1;\n                    ppiVar6 = ppiVar6 + 1;\n                } while (iVar4 <= *(in_ECX + 0x9d0));\n            }\n        }\n        iVar5 = (*_sym.imp.USER32.dll_DeleteMenu)(*puVar1, unaff_ESI, 0);\n        if (iVar5 != 0) {\n            *puVar1 = 0;\n            *(puVar1 + 1) = 0xff;\n            fcn.0040c8a0(puVar1 + 2, 0);\n            fcn.00443f73(in_ECX, unaff_ESI);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 703
    },
    "004600b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004600b7(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint in_stack_ffffff9c;\n    uchar *in_stack_ffffffa4;\n    \n    *(arg_8h + 0x20) = arg_10h;\n    fcn.00434c04(arg_8h, arg_10h, 1);\n    if (*(arg_8h + 8) == '\\x01') {\n        fcn.00434db8(arg_8h, 0x14, 0);\n        in_stack_ffffffa4 = &stack0xffffffc0;\n        in_stack_ffffff9c = fcn.00444526(arg_8h, in_stack_ffffffa4);\n        fcn.00434e14(&stack0xffffffc0, in_stack_ffffff9c);\n    }\n    arg_ch_00 = 0;\n    fcn.004013c0();\n    while( true ) {\n        puVar2 = fcn.004362b4(arg_ch, arg_ch_00);\n        uVar3 = *puVar2;\n        if (*puVar2 == 0) break;\n        arg_ch_00 = arg_ch_00 + 1;\n        fcn.00444056(arg_8h);\n    // switch table (91 cases) at 0x460217\n        switch(in_stack_ffffffa4 & 0xffff) {\n        case 0x21:\n            *(arg_8h + 0x17) = 1;\n            break;\n        default:\n            fcn.00453965(arg_8h, in_stack_ffffffa4, 1);\n            *(arg_8h + 0x14) = 0;\n            *(arg_8h + 0x18) = 0;\n            break;\n        case 0x23:\n            *(arg_8h + 0x18) = 1;\n            break;\n        case 0x2b:\n            *(arg_8h + 0x14) = 1;\n            break;\n        case 0x5e:\n            *(arg_8h + 0x16) = 1;\n            break;\n        case 0x7b:\n            cVar1 = fcn.0045f9d3(0x7d, arg_ch, &stack0xffffffb4, &stack0xffffff9c);\n            if (cVar1 == '\\0') {\n                fcn.00453965(arg_8h, 0x7b, 1);\n                *(arg_8h + 0x14) = 0;\n                *(arg_8h + 0x18) = 0;\n            }\n            else {\n                arg_ch_00 = uVar3;\n                if (uVar3 != 0) {\n                    fcn.0045fa2f(arg_8h, &stack0xffffffa4);\n                    arg_ch_00 = uVar3;\n                }\n                *(arg_8h + 0x14) = 0;\n                *(arg_8h + 0x18) = 0;\n            }\n        }\n    }\n    if (*(arg_8h + 8) == '\\x01') {\n        fcn.0044433a(arg_8h, &stack0xffffffb0);\n        fcn.00434db8(arg_8h, 0x14, in_stack_ffffff9c);\n    }\n    fcn.00434c04(arg_8h, *(arg_8h + 0x20), 0);\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 820
    },
    "004628a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004628a3(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    *0x4a8720 = 0;\n    fcn.00402170();\n    if (uVar1 != 0) {\n        uVar2 = fcn.00452e60(**(arg_8h + 4));\n        fcn.0040e410(uVar2);\n    }\n    if (1 < uVar1) {\n        uVar2 = fcn.0040c8f0();\n        *0x4a8720 = fcn.004335e8(uVar2);\n    }\n    fcn.0040e430();\n    return 0;\n}\n",
        "token_count": 178
    },
    "004629d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004629d5(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    uint uVar3;\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    uStack20 = *(arg_10h + 8);\n    uVar3 = 0xffffffff;\n    arg_10h_00 = 0;\n    iStack16 = -1;\n    uVar2 = uStack20;\n    if (uStack20 != 0) {\n        fcn.00452e81(**(arg_10h + 4));\n        uVar2 = unaff_EBX;\n        arg_10h_00 = fcn.00410330();\n        unaff_EBX = uVar2;\n    }\n    if (1 < uVar2) {\n        uVar2 = unaff_EBX;\n        uStack20 = fcn.0040c8f0();\n        unaff_EBX = uVar2;\n    }\n    if (2 < uVar2) {\n        uVar2 = unaff_EBX;\n        uVar3 = fcn.0040c8f0();\n    }\n    if (3 < uVar2) {\n        iStack16 = fcn.0040c8f0();\n    }\n    if (arg_ch == 0) {\n        arg_ch_00 = 0;\n    }\n    else {\n        iStack16 = arg_ch + -1;\n        if (iStack16 != 0) goto code_r0x00462aa1;\n        arg_ch_00 = 1;\n    }\n    uVar3 = fcn.0045f5bd(0x4a8710, arg_ch_00, arg_10h_00, uStack20, uVar3, iStack16);\n    fcn.004091e0();\n    *arg_14h = uVar3;\n    arg_14h[2] = 1;\ncode_r0x00462aa1:\n    iVar1 = fcn.0040c8f0();\n    if (iVar1 == 0) {\n        fcn.00403f40(1, 0);\n    }\n    fcn.0041137c(arg_10h_00);\n    return 0;\n}\n",
        "token_count": 543
    },
    "00463002": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463002(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint var_10h;\n    \n    iVar1 = fcn.00452e26(**(arg_8h + 4));\n    iVar2 = fcn.0040c8f0();\n    iVar2 = iVar2 + -1;\n    if (2 < *(arg_8h + 8)) {\n        fcn.0040c8f0();\n    }\n    fcn.0040bf10();\n    if ((iVar1 < iVar2) || (iVar2 < 0)) {\n        iVar2 = iVar1;\n    }\n    arg_8h_00 = **(arg_8h + 4);\n    arg_ch_00 = fcn.00452e60(arg_8h_00);\n    fcn.00460e76(&var_10h, arg_ch_00, arg_8h_00, iVar2);\n    fcn.0040e870();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 260
    },
    "0046338d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046338d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    fcn.00402170();\n    fcn.00402170();\n    fcn.00402170();\n    if (1 < arg_18h) {\n        piVar1 = fcn.00402150();\n        if (*piVar1 == 0x5c) {\n            piVar1 = fcn.00402150();\n            if (*piVar1 == 0x5c) {\n                fcn.0040c8a0(&arg_14h, 0);\n                uVar2 = fcn.00431ff2(&arg_14h, 0x4846b4);\n                if (uVar2 == 0xffffffff) {\n                    uVar2 = arg_18h;\n                }\n                fcn.00460e76(arg_8h, &arg_14h, 0, uVar2);\n                fcn.0040c8a0(&arg_14h, 0);\n                goto code_r0x00463423;\n            }\n        }\n    }\n    fcn.00402170();\ncode_r0x00463423:\n    uVar2 = fcn.00431ff2(&arg_14h, 0x4846b4);\n    if (uVar2 == 0xffffffff) {\n        uVar2 = arg_18h;\n    }\n    fcn.00460e76(arg_ch, &arg_14h, 0, uVar2);\n    fcn.00460e76(arg_10h, &arg_14h, uVar2 + 1, (arg_18h - uVar2) + -1);\n    fcn.0040e850();\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 428
    },
    "00464c5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464c5a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint uVar4;\n    uint uVar5;\n    uint *arg_ch_00;\n    uint var_10h;\n    \n    uVar4 = 5;\n    if (2 < *(arg_8h + 8)) {\n        uVar4 = fcn.0040c8f0();\n    }\n    uVar5 = **(arg_8h + 4);\n    fcn.0040c8f0();\n    arg_10h = fcn.00452e60(uVar5);\n    arg_ch_00 = &var_10h;\n    cVar1 = fcn.00464bc1(in_ECX, arg_ch_00, arg_10h, uVar5);\n    if (cVar1 != '\\0') {\n        iVar2 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 6);\n        if (iVar2 == -1) {\n            uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n            fcn.00403f40(uVar4, arg_ch_00);\n        }\n        else {\n            iVar3 = (*_sym.imp.WSOCK32.dll_bind)(iVar2, &var_10h, 0x10);\n            if (iVar3 == -1) {\n                uVar5 = 0;\n                uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n                fcn.00403f40(uVar4, uVar5);\n                (*_sym.imp.WSOCK32.dll_closesocket)(iVar2);\n            }\n            else {\n                iVar3 = (*_sym.imp.WSOCK32.dll_listen)(iVar2, uVar4);\n                if (iVar3 == 0) {\n                    fcn.004091e0();\n                    *arg_ch = iVar2;\n                    arg_ch[2] = 1;\n                    return 0;\n                }\n                uVar5 = 0;\n                uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n                fcn.00403f40(uVar4, uVar5);\n                (*_sym.imp.WSOCK32.dll_closesocket)(iVar2);\n            }\n        }\n    }\n    fcn.004091e0();\n    *arg_ch = -1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 570
    },
    "0046519a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046519a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    \n    if (*(arg_8h + 8) == 2) {\n        iVar1 = fcn.0040c8f0();\n        if (iVar1 == 1) {\n            arg_8h_00 = **(arg_8h + 4);\n            goto code_r0x004651cb;\n        }\n    }\n    arg_8h_00 = **(arg_8h + 4);\ncode_r0x004651cb:\n    arg_8h_01 = fcn.00452e81(arg_8h_00);\n    fcn.0045f024(arg_8h_01, arg_8h_00);\n    return 0;\n}\n",
        "token_count": 194
    },
    "004651e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004651e3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(arg_8h + 8) == 2) {\n        iVar1 = fcn.0040c8f0();\n        if (iVar1 != 0) {\n            uVar2 = **(arg_8h + 4);\n            uVar3 = fcn.00452e60(uVar2);\n            fcn.004539d9(in_ECX + 0x88, uVar3, uVar2);\n            return 0;\n        }\n        uVar2 = **(arg_8h + 4);\n    }\n    else {\n        uVar2 = **(arg_8h + 4);\n    }\n    uVar3 = fcn.00452e60(uVar2);\n    fcn.004600b7(in_ECX + 0x88, uVar3, uVar2);\n    return 0;\n}\n",
        "token_count": 235
    },
    "004661fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004661fd(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_80h;\n    int32_t var_10h;\n    \n    fcn.0044a870(&var_80h);\n    cVar1 = fcn.004660d0(*(arg_8h + 0x20), &var_80h);\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00441ff0(arg_8h, 1, 0xdeadbeef, 0);\n        uVar3 = fcn.00442333(&var_80h);\n        return uVar3 & 0xffffff00 | uVar2;\n    }\n    if ((var_10h != 3) && (var_10h != 1)) {\n        uVar2 = fcn.00441ff0(arg_8h, 2, 0xdeadbeef, 0);\n        uVar3 = fcn.00442333(&var_80h);\n        return uVar3 & 0xffffff00 | uVar2;\n    }\n    cVar1 = fcn.00442291(arg_8h, var_10h);\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00441ff0(arg_8h, 3, 0xdeadbeef, 0);\n    }\n    else {\n        if (var_10h != 1) {\n            if (var_10h != 3) {\n                uVar2 = fcn.00441ff0(arg_8h, 4, 0xdeadbeef, 0);\n                uVar3 = fcn.00442333(&var_80h);\n                return uVar3 & 0xffffff00 | uVar2;\n            }\n            iVar4 = arg_8h + 0x58;\n            uVar3 = fcn.00431db0(iVar4);\n            uVar2 = fcn.0044a6b9(arg_8h, &var_80h, uVar3 & 0xff, iVar4);\n            uVar3 = fcn.00442333(&var_80h);\n            return uVar3 & 0xffffff00 | uVar2;\n        }\n        iVar4 = arg_8h + 0x8c;\n        uVar3 = fcn.00431db0(iVar4);\n        uVar2 = fcn.0044a5b6(arg_8h, &var_80h, uVar3 & 0xff, iVar4);\n    }\n    uVar3 = fcn.00442333(&var_80h);\n    return uVar3 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 632
    },
    "00466672": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466672(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint in_ECX;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00452e26(*(*(arg_8h + 4) + 4));\n    if (iVar2 != 0) {\n        uVar4 = *(*(arg_8h + 4) + 4);\n        arg_1ch = &var_4h;\n        arg_18h = &var_8h;\n        arg_14h = &var_ch;\n        uVar3 = fcn.00452e81(uVar4);\n        cVar1 = fcn.00464ac0(in_ECX, uVar3, uVar4, arg_14h, arg_18h, arg_1ch);\n        if (cVar1 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            fcn.00403f40(1, 0);\n            return 1;\n        }\n    }\n    uVar4 = 0;\n    if (2 < *(arg_8h + 8)) {\n        uVar4 = fcn.0044b01e(*(*(arg_8h + 4) + 8));\n    }\n    uVar3 = *(*(arg_8h + 4) + 4);\n    arg_ch_00 = fcn.00452e60(uVar3);\n    uVar4 = fcn.0040c8f0(arg_ch_00, uVar3, uVar4);\n    uVar4 = fcn.00451124(uVar4, arg_ch_00, uVar3);\n    fcn.004091e0();\n    *arg_ch = uVar4;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 483
    },
    "00466b04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466b04(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int16_t *arg_8h_00;\n    uint uVar2;\n    int32_t arg_8h_01;\n    uint uVar3;\n    uint var_234h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    fcn.00452e81(**(arg_8h + 4));\n    arg_8h_00 = fcn.00410330();\n    fcn.00452e81(*(*(arg_8h + 4) + 4));\n    uVar2 = fcn.00410330();\n    if (2 < uVar1) {\n        fcn.0040c8f0();\n    }\n    fcn.004135bf(arg_8h_00, 0x489b98, 3);\n    if (3 < uVar1) {\n        if (uVar1 == 4) {\n            fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n        }\n        else {\n            uVar3 = *(*(arg_8h + 4) + 0x10);\n            fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n            fcn.00452e81(uVar3);\n        }\n    }\n    arg_8h_01 = (*_sym.imp.MPR.dll_WNetUseConnectionW)();\n    if (arg_8h_01 != 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        if (arg_8h_01 == 5) {\n            uVar3 = 2;\n        }\n        else if ((arg_8h_01 == 0x55) || (arg_8h_01 == 0x4b2)) {\n            uVar3 = 3;\n        }\n        else if (arg_8h_01 == 0x4b0) {\n            uVar3 = 4;\n        }\n        else if (arg_8h_01 == 0x43) {\n            uVar3 = 5;\n        }\n        else {\n            if (arg_8h_01 != 0x56) {\n                fcn.00403f40(1, 0);\n                fcn.00403f80(arg_8h_01, 0);\n                goto code_r0x00466cb3;\n            }\n            uVar3 = 6;\n        }\n        fcn.00403f40(uVar3, 0);\n    }\ncode_r0x00466cb3:\n    if (*arg_8h_00 == 0x2a) {\n        fcn.0040e8e0();\n    }\n    fcn.0041137c(arg_8h_00);\n    fcn.0041137c(uVar2);\n    return 0;\n}\n",
        "token_count": 729
    },
    "0046795f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046795f(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    \n    fcn.004091e0();\n    if (arg_8h != 0) {\n        cVar1 = fcn.0045e4c6(in_ECX, arg_8h);\n        if (cVar1 != '\\x01') {\n            cVar1 = fcn.0046757d(in_ECX, arg_8h);\n            if (cVar1 != '\\x01') {\n                in_ECX[2] = 8;\n                uVar2 = fcn.00411777(0x10);\n                *in_ECX = uVar2;\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar2);\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, arg_8h);\n                if (iVar3 < 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n                    fcn.0041137c(*in_ECX);\n                    *in_ECX = 0;\n                    fcn.004091e0();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "00468361": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468361(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h & 1) == 0) {\n        if ((arg_8h & 2) != 0) {\n            fcn.00401000();\n            uVar1 = 0xfffffffc;\n            goto code_r0x00468390;\n        }\n    }\n    else {\n        fcn.0040e430();\n        uVar1 = 0xfffffffd;\ncode_r0x00468390:\n        fcn.0045358b(0x4a8710, uVar1);\n    }\n    if ((arg_8h & 4) == 0) {\n        if ((arg_8h & 8) == 0) goto code_r0x004683d5;\n        *0x4a8719 = 0;\n        if (*0x4974ea == '\\x01') {\n            fcn.0040e430();\n        }\n        uVar1 = 0xfffffffa;\n    }\n    else {\n        *0x4a8719 = 1;\n        uVar1 = 0xfffffffb;\n    }\n    fcn.0045358b(0x4a8710, uVar1);\ncode_r0x004683d5:\n    if ((arg_8h & 0x10) != 0) {\n        *0x4a8719 = 0;\n        fcn.00402170();\n    }\n    return 1;\n}\n",
        "token_count": 334
    },
    "00469128": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00469128(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.0046180b(arg_8h, arg_ch);\n    if (arg_ch_00 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x1127, arg_ch_00, 0xf000);\n        uVar2 = uVar2 >> 0xc;\n        if (uVar2 != 0) {\n            if (arg_10h == '\\0') {\n                if (uVar2 == 1) {\n                    return 0;\n                }\n            }\n            else if ((arg_10h == '\\x01') && (uVar2 == 2)) {\n                return 0;\n            }\n            cVar1 = fcn.0043630f(arg_8h, arg_ch_00, &var_8h);\n            if (cVar1 != '\\0') {\n                fcn.0043677c(arg_8h, 0, 1, var_8h, var_4h);\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 307
    },
    "0046a364": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a364(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    uint *arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint var_10h;\n    uint var_ch;\n    \n    arg_8h_00 = fcn.00452e60(**(arg_8h + 4));\n    iVar2 = arg_8h_00[1];\n    if (iVar2 == 0) {\n        fcn.00452ba7(arg_ch, 0);\n        return 0;\n    }\n    if (((*(arg_8h + 8) < 2) || (iVar1 = fcn.0040c8f0(),  iVar1 < 1)) || (4 < iVar1)) {\n        iVar1 = 1;\n    }\n    else if ((iVar1 != 1) && (iVar1 != 4)) {\n        arg_ch_00 = iVar2 * 2;\n        if (iVar1 == 2) {\n            uVar3 = fcn.00452ba7(arg_ch, arg_ch_00);\n            fcn.00411000(uVar3, *arg_8h_00, arg_ch_00);\n            return 0;\n        }\n        iVar2 = fcn.00452ba7(arg_ch, arg_ch_00);\n        puVar4 = *arg_8h_00;\n        uVar5 = 0;\n        if (arg_ch_00 == 0) {\n            return 0;\n        }\n        iVar1 = iVar2 - puVar4;\n        do {\n            puVar4[iVar1] = puVar4[1];\n            *(iVar2 + 1 + uVar5) = *puVar4;\n            uVar5 = uVar5 + 2;\n            puVar4 = puVar4 + 2;\n        } while (uVar5 < arg_ch_00);\n        return 0;\n    }\n    fcn.0040d610();\n    if (iVar1 == 1) {\n        fcn.004581ef(arg_8h_00, &var_10h);\n    }\n    else {\n        fcn.00453c1d(arg_8h_00, &var_10h);\n    }\n    uVar3 = fcn.00452ba7(arg_ch, var_ch);\n    fcn.00411000(uVar3, var_10h, var_ch);\n    fcn.00401350();\n    return 0;\n}\n",
        "token_count": 575
    },
    "0046a47f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a47f(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar *arg_ch_00;\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uchar auStack40 [8];\n    uchar auStack32 [28];\n    \n    arg_ch_00 = fcn.004679dc(**(arg_8h + 4));\n    arg_8h_00 = fcn.00442e6f(**(arg_8h + 4));\n    if (arg_8h_00 == 0) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    if (1 < *(arg_8h + 8)) {\n        iVar1 = fcn.0040c8f0();\n        if ((0 < iVar1) && (iVar1 < 5)) {\n            if ((iVar1 == 2) || (iVar1 == 3)) {\n                uVar2 = arg_8h_00 & 0x80000001;\n                bVar5 = uVar2 == 0;\n                if (uVar2 < 0) {\n                    bVar5 = (uVar2 - 1 | 0xfffffffe) == 0xffffffff;\n                }\n                if (!bVar5) {\n                    fcn.0040e8e0();\n                    fcn.00403f40(2, 0);\n                    return 0;\n                }\n            }\n            if ((iVar1 != 1) && (iVar1 != 4)) {\n                if (iVar1 == 2) {\n                    fcn.004013c0();\n                    fcn.00403e20(0);\n                    fcn.0040e870();\n                    fcn.00402260();\n                    return 0;\n                }\n                iVar1 = fcn.00411777(arg_8h_00);\n                iVar3 = 0;\n                if (0 < arg_8h_00) {\n                    iVar4 = iVar1 - arg_ch_00;\n                    do {\n                        arg_ch_00[iVar4] = arg_ch_00[1];\n                        *(iVar1 + 1 + iVar3) = *arg_ch_00;\n                        iVar3 = iVar3 + 2;\n                        arg_ch_00 = arg_ch_00 + 2;\n                    } while (iVar3 < arg_8h_00);\n                }\n                fcn.004013c0();\n                fcn.00403e20(0);\n                fcn.0040e870();\n                fcn.0041137c(iVar1);\n                fcn.00402260();\n                return 0;\n            }\n            goto code_r0x0046a4fd;\n        }\n    }\n    iVar1 = 1;\ncode_r0x0046a4fd:\n    fcn.00442c49(auStack32, arg_8h_00);\n    fcn.00453ba2(auStack40, arg_ch_00, arg_8h_00);\n    fcn.004013c0();\n    if (iVar1 == 1) {\n        fcn.00403da0(&stack0xffffffcc, &stack0xffffffbc);\n    }\n    else {\n        fcn.0046043a(&stack0xffffffcc, &stack0xffffffbc);\n    }\n    fcn.0040e870();\n    fcn.00402260();\n    fcn.00401350();\n    return 0;\n}\n",
        "token_count": 792
    },
    "0046a699": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a699(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    iVar1 = fcn.004679dc(**(arg_8h + 4));\n    iVar2 = fcn.00442e6f(**(arg_8h + 4));\n    arg_ch_00 = -1;\n    iVar3 = fcn.0040c8f0();\n    iVar3 = iVar3 + -1;\n    if (2 < *(arg_8h + 8)) {\n        arg_ch_00 = fcn.0040c8f0();\n    }\n    if ((iVar2 < iVar3) || (iVar3 < 0)) {\n        iVar3 = iVar2;\n    }\n    if ((arg_ch_00 < 0) || (iVar2 - iVar3 < arg_ch_00)) {\n        arg_ch_00 = iVar2 - iVar3;\n    }\n    arg_8h_00 = fcn.00452ba7(arg_ch, arg_ch_00);\n    fcn.00411000(arg_8h_00, iVar3 + iVar1, arg_ch_00);\n    return 0;\n}\n",
        "token_count": 299
    },
    "0046b2a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b2a5(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t arg_8h_00;\n    uint32_t uVar9;\n    uint unaff_ESI;\n    uint in_stack_ffffff30;\n    uint uVar10;\n    int32_t iVar11;\n    uint uVar12;\n    int32_t iVar13;\n    uint in_stack_ffffff4c;\n    uint in_stack_ffffff50;\n    char16_t *arg_8h_01;\n    char16_t *pcVar14;\n    uchar *arg_8h_02;\n    uchar *arg_8h_03;\n    uint32_t uStack148;\n    int32_t *piStack144;\n    int32_t *piStack140;\n    uchar *arg_8h_04;\n    uchar *arg_ch_00;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint uStack112;\n    uint32_t uStack88;\n    int32_t *piStack80;\n    int32_t *piStack76;\n    uchar auStack60 [16];\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    if ((*(arg_8h + 8) != 1) && (*(arg_8h + 8) != 4)) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        goto code_r0x0046b75a;\n    }\n    uStack112 = 0x46b311;\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.00401c30();\n    arg_ch_00 = &stack0xffffffc4;\n    arg_8h_04 = &stack0xffffffd4;\n    piStack140 = 0x46b331;\n    fcn.0046338d(arg_8h_04, arg_ch_00, &stack0xffffffe4, in_stack_ffffff84, in_stack_ffffff88);\n    piStack144 = piStack80;\n    uStack148 = 0;\n    piStack140 = piStack76;\n    arg_8h_03 = &stack0xffffff90;\n    *piStack76 = *piStack76 + 1;\n    cVar2 = fcn.004631a8(arg_8h_03, &stack0xffffff94, uStack88);\n    if (cVar2 != '\\0') {\n        arg_8h_02 = &stack0xffffffa0;\n        cVar2 = fcn.004362d6(arg_8h_02);\n        if ((cVar2 != '\\0') ||\n           (iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(unaff_ESI, piStack140, &stack0xffffff70), \n           piStack140 = piStack144,  iVar3 == 0)) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                              (piStack140, 0, 0, 0x483f68, 0, arg_8h_04 | 0x20006, 0, &stack0xffffff6c, &stack0xffffff88\n                              );\n            if (iVar3 != 0) {\n                fcn.00403f80(iVar3, 0);\n                fcn.00403f40(1, 0);\n                fcn.004091e0();\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n                if (arg_8h_03 != NULL) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(arg_8h_03);\n                }\n                goto code_r0x0046b75a;\n            }\n            if (0x1 < arg_ch_00) {\n                uVar5 = *(*(arg_8h + 4) + 8);\n                uVar4 = fcn.00452e81(uVar5);\n                iVar3 = fcn.0041164b(uVar4, uVar5);\n                if (iVar3 == 0) {\n                    uVar5 = fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n                    iVar3 = fcn.00411361(uVar5);\n                    uVar5 = *(*(arg_8h + 4) + 0xc);\n                    uVar4 = *(*(arg_8h + 4) + 4);\n                    iVar3 = iVar3 * 2 + 2;\n                    uVar6 = fcn.00452e81(uVar5);\n                    uVar12 = 2;\n                    uVar10 = 0;\n                    uVar7 = fcn.00452e81(uVar4);\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                      (arg_8h_02, uVar7, uVar4, uVar10, uVar12, uVar6, uVar5, iVar3);\njoined_r0x0046b71c:\n                    if (iVar3 == 0) goto code_r0x0046b742;\n                    fcn.00403f80(iVar3, 0);\n                }\n                else {\n                    uVar5 = *(*(arg_8h + 4) + 8);\n                    pcVar14 = L\"REG_SZ\";\n                    uVar4 = fcn.00452e81(uVar5);\n                    iVar3 = fcn.0041164b(uVar4, uVar5);\n                    if (iVar3 == 0) {\n                        arg_8h_01 = *(*(arg_8h + 4) + 0xc);\n                        uVar5 = fcn.00452e81(arg_8h_01);\n                        fcn.00411361(uVar5);\n                        fcn.00452e81(*(*(arg_8h + 4) + 0xc));\n                        goto code_r0x0046b521;\n                    }\n                    uVar5 = *(*(arg_8h + 4) + 8);\n                    arg_8h_01 = L\"REG_MULTI_SZ\";\n                    uVar4 = fcn.00452e81(uVar5);\n                    iVar3 = fcn.0041164b(uVar4, uVar5);\n                    if (iVar3 == 0) {\n                        uVar8 = fcn.00452e26(*(*(arg_8h + 4) + 0xc));\n                        uStack148 = uVar8 + 2;\n                        arg_8h_00 = fcn.00411777(-(uStack148 * 2 >> 0x20 != 0) | uStack148 * 2);\n                        uVar5 = *(*(arg_8h + 4) + 0xc);\n                        iVar3 = uVar8 + 1;\n                        uVar4 = fcn.00452e81(uVar5);\n                        fcn.004337ed(arg_8h_00, uVar4, uVar5);\n                        uVar9 = 0;\n                        *(arg_8h_00 + uVar8 * 2) = 0;\n                        if (uVar8 != 0) {\n                            do {\n                                if (*(arg_8h_00 + uVar9 * 2) == 10) {\n                                    *(arg_8h_00 + uVar9 * 2) = 0;\n                                }\n                                uVar9 = uVar9 + 1;\n                            } while (uVar9 < uVar8);\n                            if (uVar8 != 0) {\n                                uVar8 = uStack88;\n                            }\n                        }\n                        uVar5 = *(*(arg_8h + 4) + 4);\n                        iVar13 = uVar8 * 2;\n                        uVar7 = 7;\n                        uVar6 = 0;\n                        iVar11 = arg_8h_00;\n                        uVar4 = fcn.00452e81(uVar5);\n                        iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                          (pcVar14, uVar4, uVar5, uVar6, uVar7, iVar11, iVar13, iVar3);\n                        if (iVar3 != 0) {\n                            fcn.00403f80(iVar3, 0);\n                            fcn.004091e0();\n                            arg_ch[2] = 1;\n                            *arg_ch = 0;\n                        }\n                        fcn.0041137c(arg_8h_00);\n                        goto code_r0x0046b742;\n                    }\n                    uVar5 = *(*(arg_8h + 4) + 8);\n                    pcVar14 = L\"REG_DWORD\";\n                    uVar4 = fcn.00452e81(uVar5);\n                    iVar3 = fcn.0041164b(uVar4, uVar5);\n                    if (iVar3 == 0) {\n                        uStack148 = fcn.0040c8f0(pcVar14);\ncode_r0x0046b521:\n                        uVar5 = fcn.00452e81(in_stack_ffffff30);\n                        iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(arg_8h_01, uVar5);\n                        goto joined_r0x0046b71c;\n                    }\n                    uVar5 = *(*(arg_8h + 4) + 8);\n                    pcVar14 = L\"REG_QWORD\";\n                    uVar4 = fcn.00452e81(uVar5);\n                    iVar3 = fcn.0041164b(uVar4, uVar5);\n                    if (iVar3 == 0) {\n                        fcn.00442d6f(*(*(arg_8h + 4) + 0xc));\n                        in_stack_ffffff30 = *(*(arg_8h + 4) + 4);\n                        goto code_r0x0046b521;\n                    }\n                    uVar5 = *(*(arg_8h + 4) + 8);\n                    uVar4 = fcn.00452e81(uVar5);\n                    iVar3 = fcn.0041164b(uVar4, uVar5);\n                    if (iVar3 == 0) {\n                        uVar4 = fcn.004679dc(*(*(arg_8h + 4) + 0xc));\n                        uVar5 = *(*(arg_8h + 4) + 4);\n                        uVar6 = fcn.00442e6f(*(*(arg_8h + 4) + 0xc));\n                        uVar12 = 3;\n                        uVar10 = 0;\n                        uVar7 = fcn.00452e81(uVar5);\n                        iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                          (pcVar14, uVar7, uVar5, uVar10, uVar12, uVar4, uVar6);\n                        goto joined_r0x0046b71c;\n                    }\n                }\n                fcn.004091e0();\n                *arg_ch = 0;\n                arg_ch[2] = 1;\n            }\ncode_r0x0046b742:\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack148);\n            if (arg_8h_03 != NULL) {\n                (*pcVar1)(arg_8h_03);\n            }\n            goto code_r0x0046b75a;\n        }\n        fcn.00403f80(iVar3, 0);\n        in_stack_ffffff50 = 0;\n        in_stack_ffffff4c = 3;\n    }\n    fcn.00403f40(in_stack_ffffff4c, in_stack_ffffff50);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\ncode_r0x0046b75a:\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 2726
    },
    "0046bec8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046bec8(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *arg_8h_00;\n    uint32_t uVar4;\n    int32_t pdwRegister;\n    int32_t *unaff_ESI;\n    int32_t *unaff_EDI;\n    uchar *arg_8h_01;\n    uint uStack108;\n    int32_t *piVar5;\n    int32_t arg_8h_02;\n    uchar auStack60 [4];\n    uchar auStack56 [8];\n    uchar auStack48 [44];\n    \n    uVar2 = fcn.00452e81(**(arg_8h + 4));\n    arg_8h_02 = *(*(arg_8h + 4) + 4);\n    fcn.00452e81(arg_8h_02);\n    pdwRegister = 0;\n    piVar5 = NULL;\n    iVar3 = (*_sym.imp.ole32.dll_CoInitialize)();\n    if (iVar3 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    arg_8h_00 = piVar5;\n    if (3 < *(arg_8h + 8)) {\n        arg_8h_00 = *(*(arg_8h + 4) + 0xc);\n        unaff_ESI = arg_8h_00;\n        if (arg_8h_00[2] == 10) {\n            uStack108 = 0x46bf34;\n            cVar1 = fcn.0044aa8e(arg_8h_00);\n            arg_8h_00 = unaff_EDI;\n            if (cVar1 != '\\0') {\n                unaff_EDI = 0x1;\n                arg_8h_00 = piVar5;\n                goto code_r0x0046bf53;\n            }\n        }\n        uStack108 = 0x46bf4c;\n        uVar4 = fcn.00442cb5(arg_8h_00);\n        unaff_EDI = uVar4 & 0xff;\n    }\ncode_r0x0046bf53:\n    uStack108 = uVar2;\n    iVar3 = (*_sym.imp.ole32.dll_CLSIDFromProgID)();\n    piVar5 = arg_8h_00;\n    if ((iVar3 < 0) &&\n       (iVar3 = (*_sym.imp.ole32.dll_CLSIDFromString)(uVar2, &stack0xffffffc4),  piVar5 = arg_8h_00,  iVar3 < 0)) {\n        arg_8h_01 = **(arg_8h + 4);\n        piVar5 = fcn.0044b01e(arg_8h_01);\n    }\n    else {\n        arg_8h_01 = &stack0xffffffa0;\n        arg_8h_02 = 0;\n        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(&stack0xffffffc4, 0, 0x17, 0x481990);\n        if (iVar3 < 0) {\n            uVar2 = fcn.00451712(unaff_EDI, 1, 0, 0, 0);\n            return uVar2;\n        }\n        arg_8h_00 = piVar5;\n        fcn.004316bb(piVar5);\n    }\n    if (arg_8h_02 != 0) {\n        iVar3 = (*_sym.imp.ole32.dll_IIDFromString)(unaff_ESI, &stack0xffffffd0);\n        if (iVar3 < 0) {\n            if (arg_8h_00 != NULL) {\n                (**(*piVar5 + 8))(piVar5);\n            }\n            uVar2 = fcn.00451712(arg_8h_02, 2, 0, 0, 0);\n            return uVar2;\n        }\n        uStack108 = 0;\n        iVar3 = (***piVar5)(piVar5, &stack0xffffffc8, &stack0xffffff94);\n        if (iVar3 < 0) {\n            if (arg_8h_01 != NULL) {\n                (**(*piVar5 + 8))(piVar5);\n            }\n            uVar2 = fcn.00451712(uStack108, 2, 0, 0, 0);\n            return uVar2;\n        }\n        (**(*piVar5 + 8))(piVar5);\n        piVar5 = arg_8h_00;\n    }\n    if (2 < *(arg_8h + 8)) {\n        iVar3 = *(*(arg_8h + 4) + 8);\n        if ((*(iVar3 + 8) == 10) && (cVar1 = fcn.0044aa8e(iVar3),  cVar1 != '\\0')) {\n            pdwRegister = 0;\n        }\n        else {\n            pdwRegister = fcn.00452e81(iVar3);\n        }\n    }\n    if ((pdwRegister != 0) && (iVar3 = fcn.00411777(0x28),  iVar3 != 0)) {\n        fcn.0044c7f8(iVar3, piVar5, pdwRegister, arg_8h_02);\n    }\n    fcn.0046795f(&stack0xffffffb0);\n    return 0;\n}\n",
        "token_count": 1223
    },
    "0046c0ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046c0ef(uint arg_8h, int32_t *arg_ch, int16_t **arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int16_t **arg_8h_00;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    char16_t *pbstr;\n    uint var_80h;\n    uint pvarg;\n    int32_t *var_58h;\n    uint var_50h;\n    int32_t *var_48h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    char16_t *var_8h;\n    char16_t *var_4h;\n    \n    arg_8h_00 = arg_10h;\n    piVar1 = arg_ch;\n    arg_ch = NULL;\n    var_4h = L\"_NewEnum\";\n    var_8h = L\"get__NewEnum\";\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0x20404;\n    var_1ch = 0;\n    var_18h = 0xc0;\n    var_14h = 0x46000000;\n    fcn.004130e0(&var_80h, 0, 0x20);\n    if (((piVar1 == NULL) || (arg_14h == 0)) || (arg_8h_00 == NULL)) {\ncode_r0x0046c3e6:\n        pbstr = L\"Null Object assignment in FOR..IN loop\";\n    }\n    else {\n        cVar3 = fcn.004329dd(arg_8h_00);\n        if (cVar3 == '\\0') {\n            if ((*piVar1 == 0) || (piVar1[2] != 8)) {\n                uVar4 = fcn.00451712(arg_8h, 2, 0, L\"Null Object assignment in FOR..IN loop\", 1);\n                return uVar4;\n            }\n            piVar1 = *(*piVar1 + 8);\n            if (piVar1 == NULL) {\n                uVar4 = fcn.00451712(arg_8h, 2, 0, L\"Null Object assignment in FOR..IN loop\", 1);\n                return uVar4;\n            }\n            iVar5 = (**(*piVar1 + 0x14))(piVar1, 0x481a10, &var_4h, 1, 0x400, &arg_10h);\n            if (((iVar5 < 0) || (arg_10h == 0xffffffff)) &&\n               ((iVar5 = (**(*piVar1 + 0x14))(piVar1, 0x481a10, &var_8h, 1, 0x400, &arg_10h),  iVar5 < 0 ||\n                (arg_10h == 0xffffffff)))) {\n                arg_10h = 0xfffffffc;\n            }\n            var_30h = fcn.00410ff3(0x10);\n            var_28h = 0;\n            var_ch = var_30h;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n            iVar5 = (**(*piVar1 + 0x18))(piVar1, arg_10h, 0x481a10, 0x800, 3, &var_30h, &pvarg, &var_80h, &var_10h);\n            fcn.004136cc(var_ch);\n            if (iVar5 < 0) {\n                if (iVar5 != -0x7ffdfff7) {\n                    uVar4 = fcn.00451712(arg_8h, iVar5, 0, 0, 1);\n                    return uVar4;\n                }\n                uVar4 = fcn.00451712(arg_8h, 0x80020009, &var_80h, 0, 1);\n                return uVar4;\n            }\n            if (var_58h == NULL) goto code_r0x0046c3e6;\n            var_50h._0_2_ = 0xd;\n            var_ch = (***var_58h)(var_58h, &var_20h, &var_48h);\n            (**(*var_58h + 8))(var_58h);\n            if (var_48h == NULL) {\n                uVar4 = fcn.00451712(arg_8h, var_ch, 0, 0, 1);\n                return uVar4;\n            }\n            (**(*var_48h + 0x14))(var_48h);\n            fcn.0046795f(&var_50h);\n            (**(*var_48h + 8))(var_48h);\n        }\n        piVar2 = *arg_8h_00;\n        if (piVar2 == NULL) {\n            uVar4 = fcn.00451712(arg_8h, 1, 0, L\"Null Object assignment in FOR..IN loop\", 1);\n            return uVar4;\n        }\n        if (*piVar2 == 0xd) {\n            piVar1 = *(piVar2 + 4);\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&var_40h);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_40h);\n            iVar5 = (**(*piVar1 + 0xc))(piVar1, 1, &var_40h, &arg_ch);\n            if ((iVar5 < 0) && (iVar5 != 1)) {\n                fcn.004091e0();\n                arg_8h_00[2] = 0x1;\n                *arg_8h_00 = NULL;\n                uVar4 = fcn.00451712(arg_8h, iVar5, 0, 0, 1);\n                return uVar4;\n            }\n            if ((arg_ch == NULL) || (iVar5 == 1)) {\n                var_40h._0_2_ = 1;\n                fcn.004091e0();\n                arg_8h_00[2] = 0x1;\n                *arg_8h_00 = NULL;\n            }\n            fcn.0046795f(&var_40h);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_40h);\n            return 0;\n        }\n        pbstr = L\"Incorrect Object type in FOR..IN loop\";\n    }\n    uVar4 = fcn.00451712(arg_8h, 1, 0, pbstr, 1);\n    return uVar4;\n}\n",
        "token_count": 1592
    },
    "0046cad3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046cad3(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    int32_t iVar2;\n    uint *arg_ch_01;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint arg_ch_02;\n    uint *puVar5;\n    uint var_130h;\n    int32_t var_12ch;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040c8f0();\n    var_4h = fcn.0040c8f0();\n    fcn.0040e8e0();\n    if (iVar1 == -1) {\n        puVar5 = NULL;\n    }\n    else {\n        var_ch = *(in_ECX + 0x478) / 1000;\n        var_8h = *(in_ECX + 0x478) - var_ch;\n        puVar5 = &var_ch;\n        var_130h = 1;\n        var_12ch = iVar1;\n        iVar4 = (*_sym.imp.WSOCK32.dll_select)(0, &var_130h, 0, 0);\n        if (iVar4 != -1) {\n            arg_ch_00 = fcn.00411777(var_4h + 1);\n            puVar5 = &var_130h;\n            iVar4 = iVar1;\n            iVar2 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(iVar1, puVar5);\n            if (iVar2 == 0) {\ncode_r0x0046cbee:\n                fcn.0041137c(arg_ch_00, iVar4, puVar5);\n                return 0;\n            }\n            arg_ch_01 = (*_sym.imp.WSOCK32.dll_recv)(iVar1, arg_ch_00, var_4h, 0);\n            if (arg_ch_01 == 0xffffffff) {\n                arg_ch_02 = 0;\n                uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            }\n            else {\n                if (arg_ch_01 != NULL) {\n                    if ((*(arg_8h + 8) < 3) || (iVar1 = fcn.0040c8f0(),  iVar1 == 0)) {\n                        *(arg_ch_00 + arg_ch_01) = 0;\n                        puVar5 = fcn.004136e0(arg_ch_00);\n                        if (puVar5 == arg_ch_01) {\n                            fcn.00444bc2(&var_1ch, arg_ch_00);\n                            fcn.004660b1(&var_1ch, &var_2ch);\n                            fcn.0040e870();\n                            fcn.00402260();\n                            fcn.00401350();\n                            fcn.0041137c(arg_ch_00);\n                            return 0;\n                        }\n                    }\n                    iVar4 = arg_ch_00;\n                    puVar5 = arg_ch_01;\n                    uVar3 = fcn.00452ba7(arg_ch, arg_ch_01);\n                    fcn.00411000(uVar3, arg_ch, arg_ch_01);\n                    goto code_r0x0046cbee;\n                }\n                arg_ch_02 = 0;\n                uVar3 = 0xffffffff;\n            }\n            fcn.00403f40(uVar3, arg_ch_02);\n            fcn.0041137c(arg_ch_00);\n            return 0;\n        }\n        iVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n    }\n    fcn.00403f40(iVar1, puVar5);\n    return 0;\n}\n",
        "token_count": 858
    },
    "0046d81f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d81f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint arg_14h;\n    uint arg_1ch;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack260;\n    uchar auStack244 [240];\n    \n    if (*(arg_8h + 8) < 2) {\n        uVar1 = 0;\n    }\n    else {\n        uStack260 = 0x46d844;\n        uVar1 = fcn.0040c8f0();\n    }\n    arg_8h_00 = **(arg_8h + 4);\n    fcn.0044a957(&stack0xfffffe88, in_ECX + 0x10);\n    arg_1ch = 0;\n    arg_14h = 0x483f68;\n    arg_ch_00 = fcn.00452e81(arg_8h_00);\n    fcn.0044a998(&stack0xffffff0c, arg_ch_00, arg_8h_00, arg_14h, uVar1, arg_1ch);\n    fcn.0046633a(&stack0xfffffe80, 0);\n    uVar1 = uStack372;\n    fcn.004091e0();\n    arg_ch[2] = 2;\n    *arg_ch = uStack376;\n    arg_ch[1] = uVar1;\n    fcn.00403f40(uStack368, 0);\n    fcn.00403f80(uStack372, 0);\n    fcn.0044a8b5(&stack0xfffffe68);\n    return 0;\n}\n",
        "token_count": 405
    },
    "0046f16e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f16e(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint lpszProgID;\n    uint in_ECX;\n    uint32_t uVar4;\n    uint unaff_EDI;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    \n    uVar4 = *(arg_8h + 8) - 1;\n    if (uVar4 < 4) {\n    // switch table (4 cases) at 0x46f226\n        switch(*(uVar4 * 4 + 0x46f226)) {\n        case 0x46f191:\n            uVar3 = **(arg_8h + 4);\n            break;\n        case 0x46f1a3:\n            in_stack_ffffffd0 = **(arg_8h + 4);\n            uVar3 = fcn.00452e81((*(arg_8h + 4))[1]);\n            break;\n        case 0x46f1bd:\n            puVar1 = *(arg_8h + 4);\n            uVar3 = puVar1[1];\n            in_stack_ffffffcc = *puVar1;\n            fcn.00452e81(puVar1[2]);\n            in_stack_ffffffd0 = fcn.00452e81(uVar3);\n            break;\n        case 0x46f1df:\n            iVar2 = *(arg_8h + 4);\n            uVar3 = *(iVar2 + 8);\n            in_stack_ffffffd0 = *(iVar2 + 4);\n            fcn.00452e81(*(iVar2 + 0xc));\n            uVar3 = fcn.00452e81(uVar3);\n            in_stack_ffffffc8 = unaff_EDI;\n            in_stack_ffffffcc = fcn.00452e81(in_stack_ffffffd0);\n        }\n        lpszProgID = fcn.00452e81(in_stack_ffffffc8);\n        fcn.0046c402(in_ECX, lpszProgID, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 517
    },
    "0046f236": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f236(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *arg_8h_00;\n    int32_t in_ECX;\n    int32_t in_stack_ffffffbc;\n    uchar *arg_ch_00;\n    uint arg_8h_01;\n    uchar auStack36 [4];\n    uint uStack32;\n    \n    uStack32 = 0;\n    fcn.0040e8e0();\n    iVar2 = **(arg_8h + 4);\n    iVar4 = iVar2;\n    cVar1 = fcn.0044357d(iVar2);\n    if (cVar1 == '\\0') {\n        arg_8h_01 = 0;\n        arg_ch_00 = &stack0xffffffdc;\n        in_stack_ffffffbc = in_ECX;\n        cVar1 = fcn.0045be08(in_ECX, arg_ch_00, iVar2, 0);\n        if (cVar1 == '\\0') {\n            fcn.00403f40(1, 0);\n            return 0;\n        }\n        iVar2 = *(**(*(in_ECX + 0x17c) + iVar4 * 4) + 4);\n    }\n    else {\n        iVar2 = fcn.00411777(0x38);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.0040dd00();\n        }\n        arg_8h_01 = **(arg_8h + 4);\n        uVar3 = fcn.00452e60(arg_8h_01);\n        arg_ch_00 = 0x46f2a0;\n        cVar1 = fcn.0040e1b0(uVar3);\n        if (cVar1 == '\\0') {\n            if (iVar2 != 0) {\n                fcn.0044aa71(iVar2);\n            }\n            fcn.00403f40(1, 0);\n            return 0;\n        }\n    }\n    if ((*(arg_8h + 8) < 2) || (iVar4 = fcn.0040c8f0(),  iVar4 < 0)) {\n        arg_8h_00 = fcn.0044bf0c(iVar2);\n    }\n    else {\n        arg_8h_00 = fcn.0040c8f0();\n    }\n    if ((*(iVar2 + 0x28) & 0x10) == 0) {\n        fcn.0040bf10();\n        cVar1 = fcn.0046e337(iVar2, &stack0xffffffd4, &stack0xffffffcc);\n        if (cVar1 == '\\0') {\n            fcn.00403f40(0xffffffff, 0);\n        }\n        else {\n            fcn.0040e870();\n            fcn.00403f80(arg_ch_00, 0);\n        }\n        fcn.00402260();\n    }\n    else {\n        uVar3 = fcn.00411777(arg_8h_00);\n        if ((arg_8h_00 == NULL) ||\n           (arg_8h_00 = arg_ch_00,  cVar1 = fcn.00443c2b(iVar2, uVar3, &stack0xffffffcc),  arg_ch_00 = arg_8h_00, \n           cVar1 != '\\0')) {\n            uVar3 = fcn.00452ba7(arg_ch, arg_8h_00);\n            fcn.00411000(uVar3, arg_8h_01, arg_8h_00);\n            fcn.00403f80(0x46f3ab, 0);\n            fcn.0041137c(arg_ch_00);\n        }\n        else {\n            fcn.00403f40(0xffffffff, 0);\n            fcn.0041137c(in_stack_ffffffbc);\n        }\n    }\n    cVar1 = fcn.0044357d(**(arg_8h + 4));\n    if (cVar1 != '\\0') {\n        fcn.0040dcc0();\n        *(iVar2 + 0x2c) = 0;\n        *(iVar2 + 0x30) = 0;\n        fcn.0044aa71(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 1001
    },
    "0046ffad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ffad(uint arg_8h, int32_t hDrop)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iStack696;\n    uchar *puStack692;\n    uint uStack688;\n    int32_t iStack684;\n    uchar *puStack680;\n    uint uStack676;\n    uint uStack672;\n    int32_t iStack668;\n    uint uStack664;\n    uchar *puStack660;\n    uchar *puStack656;\n    uchar auStack612 [4];\n    int32_t iStack608;\n    uchar auStack596 [8];\n    uchar auStack588 [4];\n    uint uStack584;\n    uchar auStack572 [4];\n    uint uStack568;\n    uint uStack564;\n    uchar auStack560 [556];\n    \n    fcn.00431228(0x4a8630, arg_8h);\n    (*_sym.imp.SHELL32.dll_DragQueryPoint)();\n    puStack656 = 0x46fff1;\n    iStack608 = fcn.0044136e(&stack0xfffffd90, uStack568, uStack564);\n    pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n    uStack584 = **(*0x4a8690 + &stack0xfffffdd0 * 4);\n    if ((iStack608 == -1) || (puVar1 = **(*0x4a86a4 + iStack608 * 4),  (*(puVar1 + 0x8a) & 8) == 0)) {\n        puStack656 = NULL;\n        puStack660 = hDrop;\n        uStack664 = 0x233;\n        iStack668 = arg_8h;\n        uStack672 = 0x4701ff;\n        (*_sym.imp.USER32.dll_DefDlgProcW)();\n        return;\n    }\n    uVar2 = *puVar1;\n    puStack656 = &stack0xfffffdc4;\n    puStack660 = &stack0xfffffdb4;\n    uStack664 = 0xb0;\n    uStack672 = 0x47004b;\n    iStack668 = uVar2;\n    (*_sym.imp.USER32.dll_SendMessageW)();\n    uStack672 = 0;\n    uStack676 = 0;\n    puStack680 = 0xffffffff;\n    iStack684 = hDrop;\n    uStack688 = 0x470058;\n    iStack668 = (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n    iVar4 = 0;\n    if (0 < iStack668) {\n        do {\n            uStack688 = 0x104;\n            puStack692 = &stack0xfffffdac;\n            iStack696 = iVar4;\n            (*_sym.imp.SHELL32.dll_DragQueryFileW)(hDrop);\n            if (*(**(*0x4a86a4 + puStack656 * 4) + 0x88) == '\\x02') {\n                uVar5 = 0x486e80;\ncode_r0x004700b9:\n                fcn.004116d6(&stack0xfffffd9c, uVar5);\n            }\n            else if (iVar4 < iStack684 + -1) {\n                uVar5 = 0x484044;\n                goto code_r0x004700b9;\n            }\n            uVar5 = 0xc2;\n            (*pcVar3)(uVar2, 0xc2, 1, &stack0xfffffd9c);\n            (*pcVar3)(uVar2, 0xb0, &stack0xfffffd88, &stack0xfffffd48);\n            (*pcVar3)(uVar2, 0xb1, uVar5, uVar5);\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iStack668);\n    }\n    uStack688 = uStack664;\n    iStack696 = 0xb1;\n    (*pcVar3)(uVar2);\n    (*_sym.imp.SHELL32.dll_DragFinish)(hDrop);\n    puStack680 = NULL;\n    uStack672 = 1;\n    iStack668 = 0;\n    fcn.004091e0();\n    uStack672 = 1;\n    puStack680 = puStack660;\n    fcn.00401c30();\n    fcn.00401990();\n    fcn.00402260();\n    fcn.004091e0();\n    uStack672 = 1;\n    puStack680 = 0xffffffff;\n    fcn.00401c30();\n    fcn.00401990();\n    fcn.00402260();\n    fcn.0040e8e0();\n    fcn.00401c30();\n    fcn.00401990();\n    fcn.00402260();\n    fcn.004513d8(0x4a8630, 0xfffffff3, &stack0xfffffdd0, 0, 0);\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 1120
    },
    "0047106a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047106a(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    fcn.00409120(**(arg_ch + 4));\n    if (1 < *(arg_ch + 8)) {\n        arg_8h_00 = fcn.00452e60(*(*(arg_ch + 4) + 4));\n        fcn.0040e410(arg_8h_00);\n        return;\n    }\n    fcn.00402170();\n    return;\n}\n",
        "token_count": 121
    },
    "004710c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004710c3(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    uint *arg_10h;\n    uint *arg_14h;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = **(arg_8h + 4);\n    cVar1 = fcn.00441abb(uVar3);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    if (1 < *(arg_8h + 8)) {\n        var_8h = 0;\n        var_4h = 0;\n        fcn.0040bc00();\n        cVar1 = fcn.0044357d(&var_18h);\n        if (cVar1 == '\\0') {\n            var_18h = fcn.0040c8f0();\n            var_18h = var_18h + -1;\n            fcn.004091e0();\n            var_10h = 1;\n        }\n        uVar3 = **(arg_8h + 4);\n        arg_14h = &var_8h;\n        arg_10h = &var_18h;\n        arg_8h_00 = fcn.00432ae7(uVar3);\n        iVar2 = fcn.00453083(arg_8h_00, uVar3, arg_10h, arg_14h);\n        fcn.004091e0();\n        if (iVar2 == 0) {\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            fcn.00403f40(var_4h, 0);\n            fcn.004091e0();\n            return 0;\n        }\n        arg_ch[2] = 7;\n        *arg_ch = iVar2;\n        fcn.004091e0();\n        return 0;\n    }\n    iVar2 = fcn.00432ae7(uVar3);\n    iVar2 = *(iVar2 + 8);\n    fcn.004091e0();\n    *arg_ch = iVar2;\n    arg_ch[2] = 7;\n    return 0;\n}\n",
        "token_count": 563
    },
    "004724b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004724b2(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint arg_8h_00;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_1h._0_1_ = '\\x01';\n    puVar2 = fcn.00452e60(**(arg_8h + 4));\n    var_1ch = *puVar2;\n    var_18h = puVar2[1];\n    var_14h = puVar2[2];\n    var_10h = puVar2[3];\n    *var_10h = *var_10h + 1;\n    fcn.00410d60();\n    piVar3 = fcn.00402150();\n    if (*piVar3 != 0x40) {\n        iVar4 = fcn.004455b8(&var_1ch, 0x48a338);\n        iVar1 = arg_8h;\n        if (iVar4 == -1) {\n            if (*(arg_8h + 8) == 3) {\n                uVar5 = fcn.0040c8f0();\n                if ((uVar5 & 1) != 0) {\n                    var_8h = 1;\n                }\n                uVar5 = fcn.0040c8f0();\n                if ((uVar5 & 2) != 0) {\n                    var_8h = 2;\n                }\n                uVar5 = fcn.0040c8f0();\n                if ((uVar5 & 4) != 0) {\n                    var_1h._0_1_ = '\\0';\n                }\n            }\n            fcn.0040c560(&arg_8h, &var_ch);\n            if (arg_8h == 0) {\n                if (var_1h != '\\0') {\n                    fcn.00401990();\n                    fcn.00402260();\n                    return 0;\n                }\n                arg_8h_00 = 2;\n            }\n            else {\n                if ((var_ch & 0x100) == 0) {\n                    fcn.00409120(*(*(iVar1 + 4) + 4));\n                    fcn.00402260();\n                    return 0;\n                }\n                arg_8h_00 = 1;\n            }\n            fcn.00403f40(arg_8h_00, 0);\n            puVar2 = arg_ch;\n            fcn.004091e0();\n            puVar2[2] = 1;\n            *puVar2 = 0;\n            fcn.00402260();\n            return 0;\n        }\n    }\n    puVar2 = arg_ch;\n    fcn.004091e0();\n    puVar2[2] = 1;\n    *puVar2 = 0;\n    fcn.00403f40(1, 0);\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 771
    },
    "004726ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004726ef(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 1;\n    arg_8h_00 = fcn.0040c8f0();\n    fcn.00403f80(arg_8h_00, arg_ch_00);\n    if (1 < *(arg_8h + 8)) {\n        fcn.00409120(*(*(arg_8h + 4) + 4));\n    }\n    return 0;\n}\n",
        "token_count": 131
    },
    "00472731": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00472731(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar2 = 1;\n    uVar1 = fcn.0040c8f0();\n    fcn.00403f40(uVar1, uVar2);\n    if (1 < *(arg_8h + 8)) {\n        uVar2 = 1;\n        uVar1 = fcn.0040c8f0();\n        fcn.00403f80(uVar1, uVar2);\n    }\n    if (2 < *(arg_8h + 8)) {\n        fcn.00409120(*(*(arg_8h + 4) + 8));\n    }\n    return 0;\n}\n",
        "token_count": 175
    },
    "00472793": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00472793(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t arg_10h;\n    uint *arg_ch_00;\n    uint var_38h;\n    uint var_10h;\n    \n    cVar1 = fcn.00443aa7(**(arg_8h + 4));\n    if (cVar1 != '\\0') {\n        fcn.0040bc00();\n        fcn.00452e81(&var_10h);\n        fcn.00442e6f(&var_10h);\n        fcn.0040e8e0();\n        fcn.004091e0();\n        return 0;\n    }\n    arg_10h = 8;\n    if ((1 < *(arg_8h + 8)) && (arg_10h = fcn.0040c8f0(),  8 < arg_10h)) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    arg_ch_00 = &var_38h;\n    arg_8h_00 = fcn.0040c8f0();\n    cVar1 = fcn.0043343c(arg_8h_00, arg_ch_00, arg_10h);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(1, 0);\n    }\n    fcn.0040e8e0();\n    return 0;\n}\n",
        "token_count": 353
    },
    "00472955": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00472955(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    ulong uVar3;\n    \n    arg_8h_00 = **(arg_8h + 4);\n    iVar1 = *(arg_8h_00 + 8);\n    if ((iVar1 == 1) || (iVar1 == 2)) {\n        fcn.00409120(arg_8h_00);\n        return 0;\n    }\n    if ((iVar1 != 3) && (iVar1 != 4)) {\n        if (iVar1 != 0xb) {\n            fcn.00403f40(1, 0);\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            return 0;\n        }\n        iVar1 = fcn.00442e6f(arg_8h_00);\n        if (iVar1 < 5) {\n            uVar2 = fcn.0040c8f0();\n            fcn.004091e0();\n            *arg_ch = uVar2;\n            arg_ch[2] = 1;\n            return 0;\n        }\n    }\n    uVar3 = fcn.00442d6f(arg_8h_00);\n    fcn.004091e0();\n    *arg_ch = uVar3;\n    arg_ch[1] = uVar3 >> 0x20;\n    arg_ch[2] = 2;\n    return 0;\n}\n",
        "token_count": 355
    },
    "00472a44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00472a44(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint in_stack_ffffffd0;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (1 < *(arg_8h + 8)) {\n        fcn.00409120(*(*(arg_8h + 4) + 4));\n    }\n    fcn.0040bc00();\n    uVar1 = fcn.0040c8f0();\n    uVar1 = fcn.00470c6e(uVar1, in_stack_ffffffd0);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = uVar1;\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 191
    },
    "00472ab7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00472ab7(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint lpszFile;\n    uint arg_8h_00;\n    uint uVar2;\n    uint unaff_EBX;\n    \n    uVar1 = *(arg_8h + 8);\n    if (3 < uVar1) {\n        fcn.0040c8f0();\n    }\n    if (2 < uVar1) {\n        fcn.00409120(*(*(arg_8h + 4) + 8));\n    }\n    uVar2 = *(*(arg_8h + 4) + 4);\n    fcn.0040bc00();\n    lpszFile = fcn.00452e81(uVar2);\n    arg_8h_00 = fcn.0040c8f0();\n    uVar2 = fcn.00470565(arg_8h_00, lpszFile, uVar2, unaff_EBX);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = uVar2;\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 268
    },
    "00472cce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00472cce(int32_t arg_8h, uint *arg_ch)\n\n{\n    fcn.0040de00();\n    fcn.00409120(arg_ch + 2);\n    fcn.0040e410(arg_ch + 6);\n    *(arg_8h + 0x98) = arg_ch[10];\n    *(arg_8h + 0x2f0) = arg_ch[0xb];\n    fcn.0044ca32(arg_8h + 0x1d8, arg_ch[0xc]);\n    *(arg_8h + 0x2f8) = arg_ch[0xd];\n    fcn.0040e410(arg_ch + 0xe);\n    *(arg_8h + 0x448) = arg_ch[0x12];\n    *(arg_8h + 0x44c) = arg_ch[0x13];\n    *(arg_8h + 0x454) = arg_ch[0x14];\n    if (*(arg_8h + 0xf8) != 1) {\n        *(arg_8h + 0xf8) = arg_ch[0x15];\n    }\n    *(arg_8h + 0xf4) = *arg_ch;\n    fcn.00452144(arg_ch);\n    return;\n}\n",
        "token_count": 293
    },
    "00472ef4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00472ef4(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_InterlockedIncrement;\n    var_14h = 0;\n    var_ch = 1;\n    var_8h = 0;\n    iVar2 = 3;\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x4a7f04);\n    do {\n        if (*0x4a7f04 == 1) {\ncode_r0x00472f5d:\n            fcn.004091e0();\n            var_14h = arg_8h + 0x18;\n            var_ch = 6;\n            fcn.0040bcb0(&var_14h);\n            fcn.0040e8e0();\n            fcn.0040bcb0(&var_14h);\n            fcn.0046795f(arg_ch);\n            fcn.0040bcb0(&var_14h);\n            iVar2 = arg_10h[2] + -1;\n            if (-1 < iVar2) {\n                iVar3 = iVar2 * 0x10;\n                do {\n                    fcn.0046795f(*arg_10h + iVar3);\n                    fcn.0040bcb0(&var_14h);\n                    iVar3 = iVar3 + -0x10;\n                    iVar2 = iVar2 + -1;\n                } while (-1 < iVar2);\n            }\n            iVar2 = *0x4a7f08 + 1;\n            if (*0x4a7f0c + 0x40 < iVar2) {\n                *0x4a7f0c = *0x4a7f08 + -0x3f;\n            }\ncode_r0x0047302f:\n            *0x4a7f08 = iVar2;\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x4a7f04);\n            fcn.004091e0();\n            return 0;\n        }\n        if (iVar2 == 0) {\n            iVar2 = *0x4a7f08;\n            if (*0x4a7f04 != 1) goto code_r0x0047302f;\n            goto code_r0x00472f5d;\n        }\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x4a7f04);\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n        (*pcVar1)(0x4a7f04);\n        iVar2 = iVar2 + -1;\n    } while( true );\n}\n",
        "token_count": 629
    },
    "00473b18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473b18(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.0047106a(arg_8h, arg_ch);\n    if (*(arg_ch + 8) == 3) {\n        iVar1 = fcn.0040c8f0();\n        *(arg_8h + 0x2f0) = iVar1 * 1000;\n        uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        *(arg_8h + 0x2f8) = uVar2;\n        return;\n    }\n    *(arg_8h + 0x2f0) = 0;\n    uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    *(arg_8h + 0x2f8) = uVar2;\n    return;\n}\n",
        "token_count": 205
    },
    "00473b75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473b75(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t arg_8h_00;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t iVar9;\n    ulong uVar10;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040e8e0();\n    uVar8 = **(arg_8h + 4);\n    cVar1 = fcn.00442714(uVar8);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    if (*(arg_8h + 8) < 3) {\n        uVar3 = fcn.004329a8(uVar8, 1);\n    }\n    else {\n        uVar3 = fcn.0040c8f0();\n    }\n    if (uVar3 == 0xffffffff) {\n        uVar3 = fcn.004329a8(**(arg_8h + 4), 1);\n    }\n    uVar10 = fcn.004329a8(**(arg_8h + 4), 1);\n    if (uVar10 < uVar3) {\n        uVar3 = fcn.004329a8(uVar10 >> 0x20, 1);\n    }\n    if ((*(arg_8h + 8) < 2) || (uVar4 = fcn.0040c8f0(),  uVar3 < uVar4)) {\n        uVar4 = 0;\n    }\n    if ((3 < *(arg_8h + 8)) && ((iVar5 = fcn.0040c8f0(),  iVar5 == 1 || (iVar5 == 2)))) {\n        iVar6 = uVar3 - uVar4;\n        arg_8h_00 = fcn.00411777(iVar6 + 1);\n        iVar9 = 0;\n        if (uVar4 < uVar3) {\n            iVar7 = arg_8h_00 - uVar4;\n            do {\n                fcn.0040d1a0(0, 1);\n                uVar2 = fcn.0040c8f0();\n                *(iVar7 + uVar4) = uVar2;\n                uVar4 = uVar4 + 1;\n                iVar9 = iVar6;\n            } while (uVar4 < uVar3);\n        }\n        *(iVar9 + arg_8h_00) = 0;\n        if (iVar5 == 1) {\n            uVar8 = fcn.00432f4e(arg_8h_00, 0xffffffff);\n        }\n        else {\n            uVar8 = fcn.00432ef3(arg_8h_00);\n        }\n        fcn.0040e8e0();\n        fcn.0041137c(arg_8h_00);\n        fcn.0041137c(uVar8);\n        return 0;\n    }\n    fcn.0040bf10();\n    for (; uVar4 < uVar3; uVar4 = uVar4 + 1) {\n        fcn.0040d1a0(0, 1);\n        uVar8 = fcn.0040c8f0();\n        fcn.004032d0(uVar8);\n    }\n    fcn.0040e870();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 834
    },
    "00473d3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473d3c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t arg_ch_00;\n    uint32_t uVar3;\n    uint32_t arg_10h;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint16_t *puVar6;\n    uint8_t *puVar7;\n    uchar *puVar8;\n    uint32_t unaff_EDI;\n    bool bVar9;\n    uchar *arg_8h_00;\n    uchar *arg_ch_01;\n    uchar *arg_8h_01;\n    uint32_t arg_8h_02;\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    arg_8h_02 = **(arg_8h + 4);\n    arg_ch_00 = fcn.00452e60(arg_8h_02);\n    if (*(arg_8h + 8) < 3) {\n        uVar3 = *(arg_ch_00 + 4);\n    }\n    else {\n        uVar3 = fcn.0040c8f0();\n    }\n    if (*(arg_ch_00 + 4) < uVar3) {\n        uVar3 = *(arg_ch_00 + 4);\n    }\n    if (*(arg_8h + 8) < 2) {\ncode_r0x00473d94:\n        arg_10h = 0;\n        bVar9 = uVar3 == 0;\n    }\n    else {\n        arg_10h = fcn.0040c8f0();\n        bVar9 = arg_10h == uVar3;\n        if (uVar3 < arg_10h) goto code_r0x00473d94;\n    }\n    if (bVar9) {\n        uVar3 = uVar3 + 1;\n    }\n    puVar8 = uVar3 - arg_10h;\n    fcn.004013c0();\n    arg_8h_01 = auStack28;\n    fcn.00460e76(arg_8h_01, arg_ch_00, arg_10h, puVar8);\n    if (3 < *(arg_8h + 8)) {\n        iVar4 = fcn.0040c8f0();\n        if ((iVar4 == 1) || (iVar4 == 2)) {\n            arg_ch_01 = &stack0xffffffc4;\n            fcn.0040d610();\n            if (iVar4 == 1) {\n                arg_8h_00 = auStack44;\n                fcn.004581ef(arg_8h_00, arg_ch_01);\n            }\n            else {\n                arg_ch_01 = &stack0xffffffc4;\n                arg_8h_00 = auStack44;\n                fcn.00453c1d(arg_8h_00, arg_ch_01);\n            }\n            arg_10h = unaff_EDI;\n            fcn.0040ea00(1);\n            puVar8 = NULL;\n            if (unaff_EDI != 0) {\n                do {\n                    puVar5 = fcn.0040d1a0(0, 1);\n                    arg_8h_00 = &stack0xffffffbc;\n                    puVar7 = fcn.0044c5bb(arg_8h_00, puVar8);\n                    uVar1 = *puVar7;\n                    fcn.004091e0();\n                    puVar8 = puVar8 + 1;\n                    puVar5[2] = 1;\n                    *puVar5 = uVar1;\n                } while (puVar8 < arg_8h_01);\n            }\n            fcn.00401350();\n            goto code_r0x00473ec5;\n        }\n    }\n    arg_8h_00 = 0x1;\n    arg_ch_01 = puVar8;\n    fcn.0040ea00(1);\n    uVar3 = 0;\n    if (puVar8 != NULL) {\n        do {\n            puVar5 = fcn.0040d1a0(0, 1);\n            puVar6 = fcn.00402150();\n            uVar2 = *puVar6;\n            fcn.004091e0();\n            uVar3 = uVar3 + 1;\n            puVar5[2] = 1;\n            *puVar5 = uVar2;\n        } while (uVar3 < arg_8h_02);\n        fcn.00402260();\n        return 0;\n    }\ncode_r0x00473ec5:\n    fcn.00402260(arg_8h_00, arg_ch_01, arg_8h_01, arg_ch_00, arg_10h);\n    return 0;\n}\n",
        "token_count": 1070
    },
    "004743f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004743f7(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uchar *arg_10h;\n    \n    puVar1 = *(arg_8h + 4);\n    cVar2 = fcn.00441abb(*puVar1);\n    if (cVar2 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    if (2 < *(arg_8h + 8)) {\n        cVar2 = fcn.0044aa8e(puVar1[2]);\n        if (cVar2 == '\\0') {\n            iVar3 = fcn.0040c8f0();\n            if (iVar3 + -1 < 0) {\n                fcn.004091e0();\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n                fcn.00403f40(5, 0);\n                return 0;\n            }\n        }\n    }\n    fcn.0040bc00();\n    cVar2 = fcn.0044357d(&stack0xffffffe0);\n    if (cVar2 == '\\0') {\n        fcn.0040c8f0();\n        fcn.004091e0();\n    }\n    arg_8h_00 = **(arg_8h + 4);\n    arg_10h = &stack0xffffffdc;\n    uVar4 = fcn.00432ae7(arg_8h_00);\n    uVar4 = fcn.0046815b(uVar4, arg_8h_00, arg_10h, arg_ch);\n    fcn.00403f40(uVar4, arg_8h_00);\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 458
    },
    "0047464f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047464f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_14h;\n    uint arg_18h;\n    uint arg_1ch;\n    int32_t *arg_20h;\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    \n    iVar4 = arg_8h;\n    arg_10h = 0;\n    if (1 < *(arg_8h + 8)) {\n        iVar2 = fcn.0044b01e(*(*(arg_8h + 4) + 4));\n        puVar1 = arg_ch;\n        if (iVar2 == 0) {\n            fcn.004091e0();\n            puVar1[2] = 1;\n            *puVar1 = 0;\n            fcn.00403f40(3, 0);\n            return 0;\n        }\n        arg_10h = fcn.0044b01e(*(*(iVar4 + 4) + 4));\n    }\n    arg_8h = 0;\n    puVar3 = fcn.00452e60(**(iVar4 + 4));\n    puVar1 = arg_ch;\n    arg_14h = *puVar3;\n    arg_18h = puVar3[1];\n    arg_1ch = puVar3[2];\n    arg_20h = puVar3[3];\n    *arg_20h = *arg_20h + 1;\n    iVar4 = fcn.00472e57(arg_ch, &arg_8h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if (iVar4 == 0) {\n        fcn.004091e0();\n        puVar1[2] = 1;\n        *puVar1 = 0;\n        fcn.00403f40(arg_8h, 0);\n    }\n    return 0;\n}\n",
        "token_count": 455
    },
    "00475976": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475976(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint arg_ch_00;\n    uint var_4h;\n    \n    fcn.0040ea00(1);\n    iVar1 = (*_sym.imp.WSOCK32.dll_socket)(2, 2, 0x11);\n    if (iVar1 != -1) {\n        if (2 < *(arg_8h + 8)) {\n            uVar2 = fcn.0040c8f0();\n            if ((uVar2 & 1) != 0) {\n                arg_ch = 1;\n                iVar3 = (*_sym.imp.WSOCK32.dll_setsockopt)(iVar1, 0xffff, 0x20, &arg_ch, 4);\n                if (iVar3 != 0) goto code_r0x004759dd;\n            }\n        }\n        puVar4 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar4[2] = 1;\n        *puVar4 = 0x2b594d1;\n        piVar5 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        piVar5[2] = 1;\n        *piVar5 = iVar1;\n        fcn.0040d1a0(0, 1);\n        fcn.00452e60(**(arg_8h + 4));\n        fcn.0040e870();\n        fcn.0040d1a0(0, 1);\n        fcn.00452e60(*(*(arg_8h + 4) + 4));\n        fcn.0040e870();\n        return 0;\n    }\ncode_r0x004759dd:\n    arg_ch_00 = 0;\n    arg_8h_00 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n    fcn.00403f40(arg_8h_00, arg_ch_00);\n    puVar4 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    *puVar4 = 0xffffffff;\n    puVar4[2] = 1;\n    return 0;\n}\n",
        "token_count": 556
    },
    "0047691c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047691c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_18h;\n    uint arg_ch_00;\n    int32_t *in_ECX;\n    uint arg_8h_00;\n    uint arg_14h;\n    uint arg_1ch;\n    uchar auStack384 [12];\n    uint uStack372;\n    int32_t iStack368;\n    uchar auStack324 [56];\n    uint uStack268;\n    uchar auStack244 [240];\n    \n    if (*(arg_8h + 8) < 2) {\n        arg_18h = 0;\n    }\n    else {\n        uStack268 = 0x476941;\n        arg_18h = fcn.0040c8f0();\n    }\n    arg_8h_00 = **(arg_8h + 4);\n    fcn.0044a957(&stack0xfffffe80, in_ECX + 4);\n    arg_1ch = 0;\n    arg_14h = 0x483f68;\n    arg_ch_00 = fcn.00452e81(arg_8h_00);\n    fcn.0044a998(&stack0xffffff0c, arg_ch_00, arg_8h_00, arg_14h, arg_18h, arg_1ch);\n    fcn.0046633a(&stack0xfffffe80, 1);\n    if (iStack368 != 0) {\n        fcn.00403f40(iStack368, 0);\n        fcn.00403f80(uStack372, 0);\n        fcn.0040e8e0();\n        fcn.0044a8b5(&stack0xfffffe68);\n        return 0;\n    }\n    fcn.0045b044(&stack0xfffffebc, arg_ch);\n    fcn.00472a16(*(*in_ECX + 4) + in_ECX, &stack0xfffffe60);\n    fcn.004091e0();\n    fcn.0044a8b5(&stack0xfffffe68);\n    return 0;\n}\n",
        "token_count": 471
    },
    "00476d28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00476d28(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint unaff_EBX;\n    int32_t iVar5;\n    uint unaff_EDI;\n    ushort uStackY8212;\n    uint uStackY76;\n    uint wParam;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint *arg_20h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x476d35;\n    fcn.00422880();\n    uVar1 = *(arg_8h + 8);\n    iVar5 = 0;\n    arg_8h = 0;\n    var_ch = unaff_EDI;\n    var_4h = unaff_EBX;\n    if (3 < uVar1) {\n        var_10h = 0x476d56;\n        iVar5 = fcn.0040c8f0();\n    }\n    if (2 < uVar1) {\n        var_10h = 0x476d68;\n        arg_8h = fcn.0040c8f0();\n    }\n    uStackY8212 = 0xfff;\n    var_10h = &stack0xffffdfec;\n    puVar4 = &fcn.00476d28::var_ch;\n    arg_20h = &fcn.00476d28::arg_8h;\n    arg_1ch = &fcn.00476d28::var_4h;\n    arg_18h = &fcn.00476d28::var_10h;\n    wParam = arg_8h;\n    iVar2 = iVar5;\n    arg_ch_00 = fcn.0040c8f0();\n    arg_8h_00 = fcn.0040c8f0();\n    iVar2 = fcn.00449ab2(arg_8h_00, arg_ch_00, wParam, iVar2, arg_18h, arg_1ch, arg_20h, puVar4, var_10h);\n    puVar4 = arg_ch;\n    if (iVar2 == 0) {\n        fcn.004091e0();\n        puVar4[2] = 1;\n        *puVar4 = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    if (iVar5 == 1) {\n        fcn.0040e8e0();\n        return 0;\n    }\n    fcn.0040ea00(1);\n    uStackY76 = 0x476e1e;\n    piVar3 = fcn.0040d1a0(0, 1);\n    arg_ch = var_10h;\n    fcn.004091e0();\n    piVar3[2] = 1;\n    *piVar3 = arg_ch;\n    puVar4 = fcn.0040d1a0(0, 1);\n    arg_ch = var_4h;\n    fcn.004091e0();\n    puVar4[2] = 1;\n    *puVar4 = arg_ch;\n    if (iVar5 == 2) {\n        puVar4 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar4[2] = 1;\n        *puVar4 = arg_8h;\n        puVar4 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar4[2] = 1;\n        *puVar4 = var_ch;\n    }\n    return 0;\n}\n",
        "token_count": 930
    },
    "00477456": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00477456(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t in_ECX;\n    uint32_t unaff_EBX;\n    uint32_t uVar6;\n    uint32_t uStack72;\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    \n    uStack56 = *(arg_8h + 8);\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.00401c30();\n    uStack68 = CONCAT31(uStack68._1_3_, 1);\n    uStack52 = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack40 = 0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    piVar3 = fcn.00402150();\n    if (*piVar3 != 0x5c) {\n        fcn.0040d510();\n    }\n    cVar1 = fcn.00433f41(uStack32);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0xffffffff;\n        uVar6 = 0;\n        fcn.00403f40(1, 0);\n    }\n    else {\n        if (1 < uStack64) {\n            uVar4 = fcn.0040c8f0();\n            if ((uVar4 & 1) != 0) {\n                unaff_EBX = CONCAT31(unaff_EBX >> 8, 1);\n            }\n            uVar4 = fcn.0040c8f0();\n            if ((uVar4 & 2) != 0) {\n                uStack72 = uStack72 & 0xffffff00;\n            }\n        }\n        uVar6 = uStack72;\n        uVar4 = unaff_EBX;\n        cVar1 = fcn.00451f07(uStack32, &uStack56, &uStack48, &uStack40, unaff_EBX, uStack72);\n        if (cVar1 == '\\0') {\n            (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar6);\n            fcn.00402260();\n            return 1;\n        }\n        if (unaff_EBX != '\\0') {\n            fcn.0040ea00(1);\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[2] = 2;\n            *puVar5 = uVar4;\n            puVar5[1] = uVar2;\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[2] = 2;\n            *puVar5 = uStack72;\n            puVar5[1] = uStack68;\n            arg_ch = fcn.0040d1a0(0, 1);\n            uVar2 = in_ECX;\n            uVar4 = uStack64;\n        }\n        fcn.004091e0();\n        arg_ch[1] = uVar2;\n        *arg_ch = uVar4;\n        arg_ch[2] = 2;\n    }\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar6);\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 880
    },
    "00477921": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00477921(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t arg_ch_00;\n    int32_t iStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    int32_t *piStack240;\n    int32_t aiStack232 [57];\n    \n    uStack252 = 0;\n    fcn.0040e8e0();\n    puVar2 = fcn.00452e60(**(arg_8h + 4));\n    uStack252 = *puVar2;\n    uStack248 = puVar2[1];\n    uStack244 = puVar2[2];\n    piStack240 = puVar2[3];\n    *piStack240 = *piStack240 + 1;\n    fcn.0045316c(&uStack252);\n    cVar1 = fcn.004456fa(&uStack256, 0x489ba0);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004456fa(&uStack256, 0x489ba8);\n        if (cVar1 != '\\0') {\n            iVar5 = 5;\n            goto code_r0x00477a52;\n        }\n        cVar1 = fcn.004456fa(&uStack256, L\"removable\");\n        if (cVar1 != '\\0') {\n            iVar5 = 2;\n            goto code_r0x00477a52;\n        }\n        cVar1 = fcn.004456fa(&uStack256, L\"fixed\");\n        if (cVar1 != '\\0') {\n            iVar5 = 3;\n            goto code_r0x00477a52;\n        }\n        cVar1 = fcn.004456fa(&uStack256, L\"network\");\n        if (cVar1 != '\\0') {\n            iVar5 = 4;\n            goto code_r0x00477a52;\n        }\n        cVar1 = fcn.004456fa(&uStack256, L\"ramdisk\");\n        if (cVar1 != '\\0') {\n            iVar5 = 6;\n            goto code_r0x00477a52;\n        }\n        cVar1 = fcn.004456fa(&uStack256, L\"unknown\");\n        if (cVar1 != '\\0') {\n            iVar5 = 0;\n            goto code_r0x00477a52;\n        }\n    }\n    else {\n        iVar5 = 99;\ncode_r0x00477a52:\n        piStack240 = aiStack232;\n        arg_ch_00 = 0x61;\n        do {\n            fcn.004434a2(&uStack256, arg_ch_00);\n            fcn.0040d510();\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(arg_ch_00);\n            if ((iVar3 == iVar5) || ((iVar5 == 99 && (iVar3 != 1)))) {\n                fcn.0040e850();\n                piVar4 = piStack240;\n                fcn.00411707(piStack240, uStack256);\n                iStack260 = iStack260 + 1;\n                piStack240 = piVar4 + 2;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n        } while (arg_ch_00 < 0x7b);\n        if (0 < iStack260) {\n            fcn.0040ea00(1);\n            piVar4 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            piVar4[2] = 1;\n            *piVar4 = iStack260;\n            iVar5 = 1;\n            if (0 < iStack260) {\n                do {\n                    fcn.0040d1a0(0, 1);\n                    fcn.0040e8e0();\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 <= iStack260);\n                fcn.00402260();\n                return 0;\n            }\n            goto code_r0x00477b74;\n        }\n    }\n    fcn.00403f40(1, 0);\ncode_r0x00477b74:\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 988
    },
    "00477b88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00477b88(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t arg_8h_00;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    \n    arg_8h_00 = **(arg_8h + 4);\n    iVar3 = 0;\n    uVar1 = fcn.00452e81(arg_8h_00);\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    if (uVar2 == 0xffffffff) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    uStack668 = uStack608;\n    uStack664 = uStack604;\n    uStack660 = uStack600;\n    uStack656 = uStack596;\n    uStack652 = uStack592;\n    uStack648 = uStack588;\n    (*_sym.imp.KERNEL32.dll_FindClose)();\n    if (1 < *(arg_8h + 8)) {\n        iVar3 = fcn.0040c8f0();\n    }\n    if (iVar3 == 1) {\n        (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(&uStack672, &uStack672);\n        puVar4 = &stack0xfffffd58;\n    }\n    else if (iVar3 == 2) {\n        (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(&uStack664, &uStack664);\n        puVar4 = &uStack672;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(&uStack656, &uStack656);\n        puVar4 = &uStack664;\n    }\n    (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(puVar4, &stack0xfffffd48);\n    if (2 < *(arg_8h + 8)) {\n        iVar3 = fcn.0040c8f0();\n        if (iVar3 == 1) {\n            fcn.0041343b(&uStack664, L\"%4d%02d%02d%02d%02d%02d\", uVar2 & 0xffff);\n            fcn.0040e8e0();\n            return 0;\n        }\n    }\n    fcn.0040ea00(1);\n    fcn.0040d1a0(0, 1);\n    fcn.0041343b(&uStack664, 0x489b6c, uVar2 & 0xffff);\n    fcn.0040e8e0();\n    fcn.0040d1a0(0, 1);\n    fcn.0041343b(&uStack664, L\"%02d\", uVar2 >> 0x10);\n    fcn.0040e8e0();\n    fcn.0040d1a0(0, 1);\n    fcn.0041343b(&uStack664, L\"%02d\", uVar1 >> 0x10);\n    fcn.0040e8e0();\n    fcn.0040d1a0(0, 1);\n    fcn.0041343b(&uStack664, L\"%02d\", arg_8h_00 & 0xffff);\n    fcn.0040e8e0();\n    fcn.0040d1a0(0, 1);\n    fcn.0041343b(&uStack664, L\"%02d\", arg_8h_00 >> 0x10);\n    fcn.0040e8e0();\n    fcn.0040d1a0(0, 1);\n    fcn.0041343b(&uStack664, L\"%02d\", &uStack600 & 0xffff);\n    fcn.0040e8e0();\n    return 0;\n}\n",
        "token_count": 958
    },
    "00477fc7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00477fc7(int32_t arg_8h, uint *arg_ch)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    int16_t iVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint uVar13;\n    uint var_214h;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.004102f0();\n    uVar13 = *(*(arg_8h + 4) + 8);\n    cVar2 = fcn.00442714(uVar13);\n    if (((cVar2 == '\\0') || (iVar3 = fcn.004329a8(uVar13, 0),  iVar3 != 2)) ||\n       (iVar3 = fcn.004329a8(uVar13, 2),  iVar3 != 2)) {\n        cVar2 = fcn.0044357d(uVar13);\n        if (cVar2 == '\\0') {\n            fcn.00403f40(1, 0);\n            return 0;\n        }\n        iVar3 = fcn.00452e26(uVar13);\n        iVar1 = (iVar3 + 2) * 2;\n        puVar7 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n        var_4h = puVar7;\n        piVar8 = fcn.00452e81(*(*(arg_8h + 4) + 8));\n        iVar10 = *piVar8;\n        while (iVar10 == 10) {\n            piVar8 = piVar8 + 1;\n            iVar10 = *piVar8;\n        }\n        while (iVar10 = *piVar8,  iVar10 != 0) {\n            while( true ) {\n                *puVar7 = iVar10;\n                piVar8 = piVar8 + 1;\n                puVar7 = puVar7 + 2;\n                if (*piVar8 != 10) break;\n                iVar10 = 0;\n            }\n        }\n        *puVar7 = 0;\n    }\n    else {\n        var_8h = 1;\n        if ((3 < *(arg_8h + 8)) && (var_8h = fcn.0040c8f0(),  var_8h < 0)) {\n            var_8h = 1;\n        }\n        uVar13 = *(*(arg_8h + 4) + 8);\n        iVar3 = 0;\n        for (iVar11 = var_8h; iVar4 = fcn.004329a8(uVar13, uVar13),  iVar11 < iVar4; iVar11 = iVar11 + 1) {\n            uVar5 = fcn.0040d1a0(1, 2);\n            iVar4 = fcn.00452e26(uVar5);\n            uVar5 = fcn.0040d1a0(1, 2);\n            iVar6 = fcn.00452e26(uVar5);\n            iVar3 = iVar3 + iVar4 + 2 + iVar6;\n        }\n        iVar1 = (iVar3 + 1) * 2;\n        puVar7 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n        var_4h = puVar7;\n        for (iVar3 = var_8h; iVar11 = fcn.004329a8(uVar13, 1),  iVar3 < iVar11; iVar3 = iVar3 + 1) {\n            uVar5 = fcn.0040d1a0(1, 2);\n            piVar8 = fcn.00452e81(uVar5);\n            iVar10 = *piVar8;\n            puVar12 = puVar7;\n            if (iVar10 != 0) {\n                do {\n                    *puVar12 = iVar10;\n                    iVar10 = *(piVar8 + (2 - puVar7) + puVar12);\n                    puVar12 = puVar12 + 2;\n                } while (iVar10 != 0);\n            }\n            *puVar12 = 0x3d;\n            piVar8 = puVar12 + 2;\n            uVar5 = fcn.0040d1a0(1, 2);\n            piVar9 = fcn.00452e81(uVar5);\n            iVar10 = *piVar9;\n            while (iVar10 != 0) {\n                piVar9 = piVar9 + 1;\n                *piVar8 = iVar10;\n                piVar8 = piVar8 + 1;\n                iVar10 = *piVar9;\n            }\n            *piVar8 = 0;\n            puVar7 = piVar8 + 1;\n        }\n        *puVar7 = 0;\n    }\n    uVar13 = *(*(arg_8h + 4) + 4);\n    puVar7 = &var_214h;\n    puVar12 = var_4h;\n    uVar5 = fcn.00452e81(uVar13);\n    iVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionW)(uVar5, uVar13, puVar12, puVar7);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(0, 0, 0, &var_214h);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    fcn.0041137c(var_4h);\n    return 0;\n}\n",
        "token_count": 1345
    },
    "00478d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478d20(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint32_t uVar3;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar2 = fcn.0046ec64(in_ECX, 1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.00403f40(-iVar2, 0);\n        }\n    }\n    else {\n        cVar1 = fcn.00436226(*(in_ECX + 0x1d8));\n        if (cVar1 == '\\0') {\n            uVar3 = *(arg_8h + 8);\n            iVar2 = 4;\n            arg_8h_00 = 500;\n            if (2 < uVar3) {\n                iVar2 = fcn.0040c8f0();\n            }\n            if (3 < uVar3) {\n                arg_8h_00 = fcn.0040c8f0();\n            }\n            if (1 < iVar2 * 2 + -2) {\n                iVar2 = iVar2 * 2 + -3;\n                do {\n                    (*_sym.imp.USER32.dll_FlashWindow)(**(in_ECX + 0x1d8), 1);\n                    fcn.0043374b(arg_8h_00);\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            return 0;\n        }\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 400
    },
    "00478e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478e90(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t arg_8h_00;\n    int32_t iVar5;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    uint uStack20;\n    \n    arg_8h_00 = 0x478eac;\n    fcn.00411777(0x10000);\n    fcn.0040f670();\n    uStack20 = *(in_ECX + 0x2d4);\n    fcn.0040e8e0();\n    iStack24 = in_ECX + 0x1c8;\n    fcn.00402170();\n    if (*(arg_8h + 8) == 0) {\n        *(in_ECX + 0x2d4) = 4;\n    }\n    else {\n        fcn.00452e60(**(arg_8h + 4));\n        arg_8h_00 = 0x478f10;\n        in_ECX = unaff_EBX;\n        fcn.0040e870();\n        if (1 < *(arg_8h + 8)) {\n            arg_8h_00 = *(*(arg_8h + 4) + 4);\n            uVar3 = fcn.00452e60(arg_8h_00);\n            fcn.0040e410(uVar3);\n        }\n    }\n    iVar1 = fcn.0046ec64(in_ECX, 0);\n    if (iVar1 < 0) {\n        fcn.00403f40(-iVar1, 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.0040f690();\n        return 0;\n    }\n    iVar1 = *(in_ECX + 0x2e8);\n    *(in_ECX + 0x2d4) = unaff_EDI;\n    iVar5 = iVar1;\n    fcn.0040ea00(2);\n    piVar2 = fcn.0040d1a0(0, 2);\n    fcn.004091e0();\n    *piVar2 = iVar1;\n    iVar1 = 1;\n    piVar2[2] = 1;\n    if (0 < iVar5) {\n        do {\n            (*_sym.imp.USER32.dll_GetWindowTextW)(**(*(arg_8h_00 + 0x2e4) + -4 + iVar1 * 4), unaff_ESI, 0x7fff);\n            uVar3 = fcn.0040d1a0(0, 2);\n            fcn.00452b5d(uVar3, &stack0xffffffe4);\n            puVar4 = fcn.0040d1a0(0, 2);\n            uVar3 = **(*(arg_8h_00 + 0x2e4) + -4 + iVar1 * 4);\n            fcn.004091e0();\n            iVar1 = iVar1 + 1;\n            puVar4[2] = 7;\n            *puVar4 = uVar3;\n        } while (iVar1 <= iVar5);\n    }\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 791
    },
    "00479765": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479765(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar3 = fcn.0046ec64(in_ECX, 1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00403f40(-iVar3, 0);\n        }\n    }\n    else {\n        cVar2 = fcn.00436226(*(in_ECX + 0x1d8));\n        if (cVar2 == '\\0') {\n            uVar1 = **(in_ECX + 0x1d8);\n            iVar3 = fcn.0040c8f0();\n            if (iVar3 == 1) {\n                (*_sym.imp.USER32.dll_SetWindowPos)(uVar1, 0xffffffff);\n                return 0;\n            }\n            (*_sym.imp.USER32.dll_SetWindowPos)(uVar1, 0xfffffffe, 0, 0, 0, 0, 0x13);\n            return 0;\n        }\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 310
    },
    "0047b300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b300(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar2 = fcn.00479806(in_ECX, arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        cVar2 = fcn.0044c99f(*(in_ECX + 0x2fc), &var_10h, 1);\n        if (cVar2 == '\\x01') {\n            fcn.0040ea00(1);\n            piVar3 = fcn.0040d1a0(0, 1);\n            iVar1 = var_10h;\n            fcn.004091e0();\n            piVar3[2] = 1;\n            *piVar3 = iVar1;\n            piVar3 = fcn.0040d1a0(0, 1);\n            iVar1 = var_ch;\n            fcn.004091e0();\n            piVar3[2] = 1;\n            *piVar3 = iVar1;\n            piVar3 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            piVar3[2] = 1;\n            *piVar3 = var_8h - var_10h;\n            piVar3 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            *piVar3 = var_4h - var_ch;\n            piVar3[2] = 1;\n            return 0;\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 487
    },
    "0047c281": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c281(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *arg_ch_00;\n    uchar *puVar5;\n    int32_t unaff_EDI;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uchar *arg_8h_00;\n    int32_t arg_ch_01;\n    uint arg_ch_02;\n    uint uStack164;\n    uchar *puStack160;\n    uchar auStack156 [4];\n    uint32_t uStack152;\n    uchar auStack148 [4];\n    int32_t iStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack116;\n    uint uStack112;\n    uchar auStack108 [8];\n    uchar auStack100 [12];\n    uchar auStack88 [84];\n    \n    fcn.0040d5d0();\n    iStack144 = fcn.00452e60(**(arg_8h + 4));\n    iVar1 = *(*(arg_8h + 4) + 4);\n    uStack164 = fcn.00452e60(iVar1);\n    iVar6 = 0;\n    iStack144 = 1;\n    uStack140 = 0xffffffff;\n    fcn.0040bf10();\n    if ((2 < *(arg_8h + 8)) && ((iVar6 = fcn.0040c8f0(),  iVar6 < 0 || (4 < iVar6)))) {\n        iVar6 = 0;\n    }\n    if (3 < *(arg_8h + 8)) {\n        iStack144 = fcn.0040c8f0();\n    }\n    if (iStack144 < 1) {\n        iStack144 = 1;\n    }\n    iStack144 = iStack144 + -1;\n    arg_8h_00 = auStack88;\n    uStack140 = 0xffffffff;\n    arg_ch_02 = uStack164;\n    fcn.0046895c(arg_8h_00, &uStack164, uStack164);\n    if (unaff_EDI == 0) {\n        fcn.004605cb(auStack100, puStack160);\n        if (iVar6 == 0) {\n            iVar1 = fcn.0044c678(auStack108, &uStack164, 0);\n            if (iVar1 == 0) {\n                fcn.004091e0();\n                *arg_ch = 0;\n                arg_ch[2] = 1;\n            }\n            else {\n                fcn.004091e0();\n                *arg_ch = 1;\n                arg_ch[2] = 1;\n            }\n        }\n        else if (iVar6 == 1) {\n            uVar2 = fcn.0044c678(auStack108, &uStack164, 0);\n            if (uVar2 == 0) {\n                fcn.004091e0();\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n                fcn.00403f40(1, 0);\n            }\n            else {\n                uVar3 = 1 < uVar2;\n                uVar7 = uVar2;\n                fcn.0040ea00(1);\n                if (uVar3 < uVar2) {\n                    do {\n                        fcn.0040d1a0(0, 1);\n                        fcn.0046885f(auStack108, arg_ch_02, auStack156);\n                        fcn.0040e870();\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 < uVar7);\n                }\n                fcn.00403f80(unaff_EDI + 1, 0);\n            }\n        }\n        else if (iVar6 == 2) {\n            iVar1 = fcn.0044c678(auStack108, &uStack164, 0);\n            if (iVar1 == 0) {\n                fcn.00403f40(1, 0);\n            }\n            else {\n                iVar6 = iVar1;\n                fcn.0040ea00(1);\n                arg_ch_01 = 0;\n                if (0 < iVar1) {\n                    do {\n                        iVar1 = arg_ch_01;\n                        fcn.0040d1a0(0, 1);\n                        fcn.0046885f(auStack108, arg_ch_01, auStack156);\n                        fcn.0040e870();\n                        arg_ch_01 = iVar1 + 1;\n                    } while (arg_ch_01 < iVar6);\n                }\n                fcn.00403f80(unaff_EDI + 1, 0);\n            }\n        }\n        else {\n            if (iVar6 == 3) {\n                while( true ) {\n                    puVar5 = &stack0xffffff54;\n                    puVar4 = fcn.0044c678(&uStack116, puVar5, 1);\n                    if (puVar4 == NULL) break;\n                    arg_ch_00 = 1 < puVar4;\n                    if (arg_ch_00 < puVar4) {\n                        do {\n                            fcn.0046885f(&uStack128, arg_ch_00, &stack0xffffff50);\n                            fcn.0040da60();\n                            arg_ch_00 = puVar5 + 1;\n                            puVar5 = arg_ch_00;\n                        } while (arg_ch_00 < puStack160);\n                    }\n                }\n                if (arg_8h_00 == NULL) {\n                    fcn.00403f40(1, 0);\n                }\n                else {\n                    puVar5 = arg_8h_00;\n                    fcn.0040ea00(1);\n                    puVar4 = NULL;\n                    if (arg_8h_00 != NULL) {\n                        do {\n                            fcn.0040d1a0(0, 1);\n                            fcn.0040e870();\n                            puVar4 = puVar4 + 1;\n                        } while (puVar4 < puVar5);\n                    }\n                }\n            }\n            else {\n                if (iVar6 != 4) goto code_r0x0047c784;\n                uStack140 = 0x483f6c;\n                uStack136 = 0;\n                uStack132 = 0;\n                uStack128 = 0;\n                uStack124 = 0;\n                uStack116 = 1;\n                uStack112 = 0;\n                while( true ) {\n                    puVar5 = NULL;\n                    iVar1 = fcn.004688d0(&uStack116, &stack0xffffff54, auStack148);\n                    uVar2 = uStack152;\n                    if (iVar1 == 0) break;\n                    if (uStack152 != 0) {\n                        fcn.0040ea00(1);\n                        uVar7 = 0;\n                        if (uVar2 != 0) {\n                            do {\n                                fcn.0040d1a0(0, 1);\n                                fcn.0040e870();\n                                uVar7 = uVar7 + 1;\n                            } while (uVar7 < uStack152);\n                        }\n                        fcn.0040bcb0(&iStack144);\n                    }\n                }\n                if (arg_8h_00 == NULL) {\n                    fcn.00403f40(1, 0);\n                }\n                else {\n                    puVar4 = arg_8h_00;\n                    fcn.0040ea00(1);\n                    if (arg_8h_00 != NULL) {\n                        do {\n                            fcn.0040d1a0(0, 1);\n                            fcn.00409120(*(puVar4 + puVar5 * 4));\n                            puVar5 = puVar5 + 1;\n                        } while (puVar5 < puVar4);\n                    }\n                }\n                fcn.004091e0();\n                fcn.00410e00();\n            }\n            fcn.00410d40();\n        }\n    }\n    else {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(2, 0);\n        fcn.00403f80(iVar1 + 1, 0);\n    }\ncode_r0x0047c784:\n    fcn.00402260();\n    fcn.00401380();\n    return 0;\n}\n",
        "token_count": 1900
    },
    "0047c8a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c8a8(int32_t arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    int64_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    uint32_t arg_14h_00;\n    char16_t *arg_8h_01;\n    uint var_bch;\n    uint var_3ch;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    \n    puVar2 = arg_10h;\n    cVar3 = fcn.00464ac0(arg_8h, arg_ch, &var_2ch, &var_28h, &arg_8h, &arg_10h);\n    if (cVar3 != '\\0') {\n        var_24h = 0x4870e0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        arg_10h = puVar2;\n        if (puVar2[2] == 2) {\n            uVar5 = *(puVar2[1] + 4);\n            cVar3 = fcn.00442714(uVar5);\n            if ((cVar3 != '\\0') && (iVar4 = fcn.004329a8(uVar5, 0),  iVar4 == 1)) {\n                fcn.0040bc00();\n                uVar5 = fcn.0040d1a0(1, 1);\n                arg_8h_01 = L\"CALLARGARRAY\";\n                arg_8h_00 = fcn.00452e81(uVar5);\n                iVar4 = fcn.0041164b(arg_8h_00, uVar5);\n                if (iVar4 == 0) {\n                    iVar4 = 1;\n                    while( true ) {\n                        arg_8h_01 = &var_14h;\n                        iVar6 = fcn.004329a8(arg_8h_01, 1);\n                        if (iVar6 <= iVar4) break;\n                        uVar5 = fcn.0040d1a0(1, 1);\n                        fcn.0040bcb0(uVar5);\n                        iVar4 = iVar4 + 1;\n                    }\n                    arg_10h = &var_24h;\n                    arg_18h = 0;\n                }\n                fcn.004091e0(arg_8h_01);\n            }\n        }\n        arg_14h_00 = arg_18h;\n        if ((arg_8h <= arg_10h[2] - arg_18h) && (arg_10h[2] - arg_18h <= var_28h)) {\n            fcn.00401c30();\n            fcn.0040d510();\n            if (arg_14h_00 < arg_10h[2]) {\n                do {\n                    fcn.0041546b(&var_bch, 0x40, L\"AUTOITCALLVARIABLE%d\", arg_14h_00);\n                    fcn.00401c30();\n                    fcn.00401990();\n                    fcn.00402260();\n                    fcn.0040d510();\n                    fcn.0040d510();\n                    arg_14h_00 = arg_14h_00 + 1;\n                } while (arg_14h_00 < arg_10h[2]);\n            }\n            fcn.0040d510();\n            iVar1 = (var_10h + 1) * 2;\n            uVar5 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n            *arg_14h = uVar5;\n            fcn.00411707(uVar5, var_14h);\n            fcn.00402260();\n            fcn.00410e00();\n            return 1;\n        }\n        fcn.00410e00();\n    }\n    return 0;\n}\n",
        "token_count": 962
    },
    "0047cb86": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047cb86(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint *arg_8h_00;\n    uchar auStack80 [8];\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack32 = 1;\n    uStack48 = 1;\n    uStack40 = 0;\n    uStack28 = 0;\n    uStack72 = 0x4870e0;\n    uStack68 = 0;\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack44 = 0;\n    fcn.0040e8e0();\n    fcn.0040e8e0();\n    fcn.0040e8e0();\n    fcn.0040bcb0(**(arg_8h + 4));\n    if (unaff_EBX < 2) {\n        arg_8h_00 = &uStack60;\n    }\n    else {\n        arg_8h_00 = *(*(arg_8h + 4) + 4);\n    }\n    fcn.0040bcb0(arg_8h_00);\n    fcn.0040bcb0(&uStack48);\n    cVar1 = fcn.00479806(unaff_ESI, auStack80);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(1, 0);\n    }\n    else {\n        if (unaff_EBX == 3) {\n            iVar2 = fcn.0040c8f0();\n            iVar2 = iVar2 + -1;\n        }\n        else {\n            iVar2 = 0;\n        }\n        fcn.0040bf10();\n        cVar1 = fcn.004615ab(*(unaff_ESI + 0x2fc), iVar2, &uStack44);\n        if (cVar1 == '\\0') {\n            fcn.00403f40(1, 0);\n        }\n        else {\n            fcn.0040e870();\n        }\n        fcn.00402260();\n    }\n    fcn.004091e0();\n    fcn.00410e00();\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 579
    },
    "0047d027": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0047d027(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_ch_00;\n    uchar *arg_8h_00;\n    uchar auStack32 [3];\n    uchar uStack29;\n    uint uStack28;\n    \n    fcn.004091e0();\n    arg_8h_00 = &uStack29;\n    arg_ch_00 = 0;\n    arg_14h[2] = 1;\n    *arg_14h = 0;\n    uStack28 = 0;\n    fcn.0046f7dd(arg_8h_00);\n    cVar1 = fcn.0047c8a8(arg_8h, arg_ch, arg_10h, auStack32, arg_18h);\n    if (cVar1 == '\\0') {\ncode_r0x0047d0eb:\n        fcn.0046f754(0x4a7f34);\n        return 0;\n    }\n    fcn.00402b30(0, arg_8h_00, &stack0xffffffd0);\n    fcn.0041137c(arg_10h);\n    if (0x1 < arg_8h_00) {\n        if (arg_20h != '\\0') {\n            arg_ch_00 = fcn.00472d85(arg_8h);\n        }\n        iVar2 = fcn.00409940(arg_8h, &stack0xffffffc0, arg_14h, arg_1ch);\n        if (iVar2 != 0) {\n            if (arg_ch_00 != 0) {\n                fcn.00472cce(arg_8h, arg_ch_00);\n            }\n            fcn.0040ef20();\n            goto code_r0x0047d0eb;\n        }\n        if (arg_ch_00 != 0) {\n            fcn.00472cce(arg_8h, arg_ch_00);\n        }\n    }\n    fcn.0040ef20();\n    fcn.0046f754(0x4a7f34);\n    return 1;\n}\n",
        "token_count": 510
    },
    "0047d2c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d2c1(uint *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *arg_8h_00;\n    uint uVar4;\n    uint *puVar5;\n    char cVar6;\n    uint *arg_18h_00;\n    uint uStack80;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar auStack60 [4];\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    \n    if ((*0x4a8270 != 1) && (*0x4974ec == '\\0')) {\n        iStack72 = *0x4a8270;\n        puVar5 = &uStack68;\n        arg_18h_00 = &uStack64;\n        *0x4a8270 = 0;\n        fcn.00464ac0(0x4a8178, *arg_8h, auStack60, auStack76, arg_18h_00, puVar5);\n        if (puVar5 < 5) {\n            iVar3 = 0;\n            uStack64 = 0;\n            uStack56 = 1;\n            uStack52 = 0;\n            uStack80 = 0;\n            iStack72 = 1;\n            uStack68 = 0;\n            uStack48 = 0x4870e0;\n            uStack44 = 0;\n            uStack40 = 0;\n            uStack36 = 0;\n            if (0 < puVar5) {\n                do {\n    // switch table (4 cases) at 0x47d4d5\n                    switch(iVar3) {\n                    case 0:\n                        fcn.004091e0();\n                        uStack80 = arg_10h;\n                        break;\n                    case 1:\n                        fcn.004091e0();\n                        iStack72 = 1;\n                        uStack80 = arg_14h;\n                        goto code_r0x0047d3bf;\n                    case 2:\n                        fcn.004091e0();\n                        uStack80 = arg_18h;\n                        break;\n                    case 3:\n                        fcn.004091e0();\n                        uStack80 = arg_1ch;\n                        break;\n                    default:\n                        goto code_r0x0047d3bf;\n                    }\n                    iStack72 = 7;\ncode_r0x0047d3bf:\n                    fcn.0040bcb0(&uStack80);\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_18h_00);\n            }\n            iVar3 = 1;\n            puVar5 = &uStack48;\n            cVar1 = fcn.0047d027(0x4a8178, *arg_8h, puVar5, &uStack64, 0, &stack0xffffff9b, 1);\n            cVar6 = puVar5 >> 0x18;\n            if ((cVar1 != '\\0') && (*0x4a8270 != 1)) {\n                *0x4a8270 = iVar3;\n                cVar1 = fcn.0044357d(&stack0xffffffa4);\n                if (cVar1 != '\\0') {\n                    uVar4 = 0x489da4;\n                    arg_8h_00 = &stack0xffffffa0;\n                    uVar2 = fcn.00452e81(arg_8h_00);\n                    iVar3 = fcn.0041164b(uVar2, arg_8h_00);\n                    if (iVar3 == 0) {\n                        fcn.00410e00(uVar4);\n                        fcn.004091e0();\n                        fcn.004091e0();\n                        return 2;\n                    }\n                }\n                if (cVar6 != '\\0') {\n                    uVar2 = fcn.0040c8f0();\n                    *arg_ch = uVar2;\n                    fcn.00410e00();\n                    fcn.004091e0();\n                    fcn.004091e0();\n                    return 1;\n                }\n            }\n            fcn.00410e00();\n            fcn.004091e0();\n            fcn.004091e0();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1011
    },
    "0047d129": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d129(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_14h;\n    uchar *arg_1ch;\n    uchar uStack65;\n    uint uStack64;\n    uchar *puStack60;\n    uint auStack56 [2];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    if ((*0x4a8270 != 0x1) && (*0x4974ec == '\\0')) {\n        iVar3 = 0;\n        puStack60 = *0x4a8270;\n        *0x4a8270 = NULL;\n        auStack24[0] = 0;\n        uStack16 = 1;\n        uStack12 = 0;\n        auStack56[0] = 0;\n        uStack48 = 1;\n        uStack44 = 0;\n        uStack40 = 0x4870e0;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        if (*0x4a8680 != 0) {\n            do {\n    // switch table (4 cases) at 0x47d2b1\n                switch(iVar3) {\n                case 0:\n                    uStack64 = *0x4a866c;\n                    fcn.004091e0();\n                    auStack56[0] = uStack64;\n                    break;\n                case 1:\n                    fcn.004091e0();\n                    auStack56[0] = arg_8h;\n                    break;\n                case 2:\n                    fcn.004091e0();\n                    auStack56[0] = arg_ch;\n                    break;\n                case 3:\n                    fcn.004091e0();\n                    auStack56[0] = arg_10h;\n                    break;\n                default:\n                    goto code_r0x0047d1f9;\n                }\n                uStack48 = 1;\ncode_r0x0047d1f9:\n                fcn.0040bcb0(auStack56);\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < *0x4a8680);\n        }\n        arg_1ch = &uStack65;\n        arg_14h = auStack24;\n        uStack65 = 0;\n        cVar1 = fcn.0047d027(0x4a8178, *0x4a8670, &uStack40, arg_14h, 0, arg_1ch, 1);\n        if (((cVar1 != '\\0') && (*0x4a8270 != 0x1)) && (*0x4a8270 = arg_1ch,  arg_14h >> 0x18 != '\\0')) {\n            uVar2 = fcn.0040c8f0();\n            fcn.00410e00();\n            fcn.004091e0();\n            fcn.004091e0();\n            return uVar2;\n        }\n        fcn.00410e00();\n        fcn.004091e0();\n        fcn.004091e0();\n    }\n    return 0;\n}\n",
        "token_count": 762
    },
    "0047e2db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e2db(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    \n    var_8h = 1;\n    if (*(*(*(arg_ch + 4) + 4) + 8) == 0x7f) {\n        arg_ch = 1;\ncode_r0x0047e36a:\n        iVar5 = 0;\n        if (arg_ch < 1) {\n            return;\n        }\n        do {\n            cVar1 = fcn.00432ee2(arg_8h + 0x16c);\n            if (cVar1 != '\\0') {\n                fcn.0045e1ee(arg_8h, 0x96, 0xffffffff);\n                return;\n            }\n            piVar2 = fcn.0040f660();\n            if (((*piVar2 == 1) || (piVar2 = fcn.0040f660(),  *piVar2 == 2)) || (piVar2 = fcn.0040f660(),  *piVar2 == 3)\n               ) {\n                iVar4 = *arg_10h;\n                iVar3 = fcn.0040f660();\n                if ((iVar4 <= *(iVar3 + 4)) || (iVar3 = fcn.0040f660(),  *(iVar3 + 8) <= iVar4)) {\n                    fcn.0045e1ee(arg_8h, 0x8f, 0xffffffff);\n                    return;\n                }\n                iVar5 = iVar5 + 1;\n                iVar4 = fcn.0040f660();\n                *arg_10h = *(iVar4 + 8);\n                if (iVar5 == arg_ch) {\n                    return;\n                }\n            }\n            fcn.0040ca30();\n            if (arg_ch <= iVar5) {\n                return;\n            }\n        } while( true );\n    }\n    var_14h = 1;\n    var_1ch = 0;\n    var_10h = 0;\n    iVar5 = fcn.0040aa20(arg_ch, &var_8h, &var_1ch, 0xffffffff);\n    if (iVar5 == 0) {\n        iVar5 = *(*(arg_ch + 4) + var_8h * 4);\n        if (*(iVar5 + 8) == 0x7f) {\n            arg_ch = fcn.0040c8f0();\n            fcn.004091e0();\n            goto code_r0x0047e36a;\n        }\n        fcn.0045e1ee(arg_8h, 0x72, *(iVar5 + 10));\n    }\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 674
    },
    "0047e423": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e423(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t arg_8h_00;\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar4 = arg_ch;\n    arg_8h_00 = arg_8h;\n    arg_8h = 1;\n    if (*(*(*(arg_ch + 4) + 4) + 8) == 0x7f) {\n        arg_ch = 1;\ncode_r0x0047e4b1:\n        iVar4 = 0;\n        if (0 < arg_ch) {\n            while( true ) {\n                cVar1 = fcn.00432ee2(arg_8h_00 + 0x16c);\n                if (cVar1 != '\\0') break;\n                piVar2 = fcn.0040f660();\n                if (*piVar2 == 1) {\ncode_r0x0047e4f1:\n                    iVar4 = iVar4 + 1;\n                    iVar3 = fcn.0040f660();\n                    *arg_10h = *(iVar3 + 8) + 1;\n                }\n                else {\n                    piVar2 = fcn.0040f660();\n                    if (*piVar2 == 2) goto code_r0x0047e4f1;\n                    piVar2 = fcn.0040f660();\n                    if (*piVar2 == 3) goto code_r0x0047e4f1;\n                }\n                fcn.0040ca30();\n                if (arg_ch <= iVar4) {\n                    return;\n                }\n            }\n            fcn.0045e1ee(arg_8h_00, 0x96, 0xffffffff);\n        }\n        return;\n    }\n    var_ch = 1;\n    var_14h = 0;\n    var_8h = 0;\n    iVar3 = fcn.0040aa20(arg_ch, &arg_8h, &var_14h, 0xffffffff);\n    if (iVar3 == 0) {\n        iVar4 = *(*(iVar4 + 4) + arg_8h * 4);\n        if (*(iVar4 + 8) == 0x7f) {\n            arg_ch = fcn.0040c8f0();\n            fcn.004091e0();\n            goto code_r0x0047e4b1;\n        }\n        fcn.0045e1ee(arg_8h_00, 0x72, *(iVar4 + 10));\n    }\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 622
    },
    "0047fe6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fe6c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    uint arg_8h_00;\n    uint *puStack44;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    puStack44 = &uStack24;\n    uStack24 = 0x484adc;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_8h_00 = **(arg_8h + 4);\n    *0x4974e2 = 1;\n    arg_ch_00 = fcn.00452e81(arg_8h_00);\n    iVar1 = fcn.00402b30(0, arg_ch_00, arg_8h_00);\n    if ((iVar1 == 0) && (1 < unaff_EBX)) {\n        puStack44 = NULL;\n        iVar1 = fcn.0040aa20(&stack0xffffffd8, &puStack44, arg_ch, 0xffffffff);\n        if (iVar1 == 0) {\n            *0x4974e2 = 0;\n            fcn.0040ef20();\n            return 0;\n        }\n    }\n    *0x4974e2 = 0;\n    fcn.00403f40(1, 0);\n    fcn.0040e8e0();\n    fcn.0040ef20();\n    return 0;\n}\n",
        "token_count": 358
    },
    "00425fd0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.00425fd0(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00431b38": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00431b38(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint8_t *arg_14h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    float10 fVar9;\n    uint var_4h;\n    \n    puVar6 = arg_8h + arg_ch;\n    iVar7 = arg_10h * arg_14h;\n    puVar1 = arg_8h + arg_10h * 4;\n    iVar2 = arg_14h * 4;\n    uVar8 = 0;\n    uVar3 = 1;\n    arg_14h = arg_8h;\n    if (arg_8h < puVar1) {\n        do {\n            arg_10h = 0x15ae;\n            do {\n                iVar4 = uVar3 + arg_8h[2];\n                iVar5 = iVar4 + arg_8h[1];\n                uVar3 = iVar5 + *arg_8h;\n                arg_8h = arg_8h + iVar7 * 4;\n                uVar8 = uVar8 + iVar4 + iVar5 + uVar3;\n                if (puVar6 <= arg_8h) {\n                    arg_8h = arg_14h + iVar2;\n                    arg_14h = arg_8h;\n                }\n                arg_10h = arg_10h + -3;\n            } while ((arg_10h != 0) && (arg_14h < puVar1));\n            uVar3 = (uVar3 & 0xffff) + (uVar3 >> 0x10) * 0xf;\n            uVar8 = (uVar8 & 0xffff) + (uVar8 >> 0x10) * 0xf;\n        } while (arg_14h < puVar1);\n        if (0xfff0 < uVar3) {\n            uVar3 = uVar3 - 0xfff1;\n        }\n    }\n    uVar8 = (uVar8 >> 0x10) * 0xf + (uVar8 & 0xffff);\n    if (0xfff0 < uVar8) {\n        uVar8 = uVar8 - 0xfff1;\n    }\n    uVar3 = uVar8 << 0x10 | uVar3;\n    fVar9 = uVar3;\n    if (uVar3 < 0) {\n        fVar9 = fVar9 + *0x48bd70;\n    }\n    return fVar9;\n}\n",
        "token_count": 616
    },
    "00433fbc": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433fbc(uint lptstrFilename, int32_t arg_ch, uint arg_10h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lpdwHandle;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeW)(lptstrFilename, &lpdwHandle);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uVar3 = fcn.00411777(iVar2);\n    (*_sym.imp.VERSION.dll_GetFileVersionInfoW)(lptstrFilename, 0, iVar2, uVar3);\n    iVar2 = fcn.00411361(arg_10h);\n    iVar1 = (iVar2 + 0x1a) * 2;\n    iVar2 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n    fcn.00411707(iVar2, 0x4846b4);\n    iVar4 = fcn.004132dc(arg_10h, 0x4846b4);\n    if (iVar4 != 0) {\n        fcn.004116d6(iVar2, 0x486c48);\n        iVar4 = fcn.0041366c(arg_10h, 0x4846b4);\n        if (iVar4 == 0) {\n            iVar4 = (*_sym.imp.VERSION.dll_VerQueryValueW)(uVar3, L\"\\\\VarFileInfo\\\\Translation\", &var_8h, &var_10h);\n            if (iVar4 == 0) {\n                fcn.004116d6(iVar2, L\"04090000\");\n            }\n            else {\n                var_ch = *var_8h;\n                fcn.0043343c(var_ch, iVar2 + 0x20, 4);\n                fcn.0043343c(var_ch >> 0x10, iVar2 + 0x28, 4);\n            }\n            fcn.004116d6(iVar2, 0x4846b4);\n            fcn.004116d6(iVar2, arg_10h);\n        }\n        else {\n            fcn.004116d6(iVar2, arg_10h);\n        }\n    }\n    iVar4 = fcn.0041164b(arg_10h, L\"DefaultLangCodepage\");\n    if (iVar4 == 0) {\n        fcn.0041315a(arg_ch, iVar2 + 0x20, 8);\n        *(arg_ch + 0x10) = 0;\n        fcn.0041137c(uVar3);\n        fcn.0041137c(iVar2);\n        return 1;\n    }\n    iVar4 = (*_sym.imp.VERSION.dll_VerQueryValueW)(uVar3, iVar2, &var_4h, &var_10h);\n    if (iVar4 != 0) {\n        iVar4 = fcn.004132dc(arg_10h, 0x4846b4);\n        if (iVar4 == 0) {\n            fcn.0041343b(arg_ch, L\"%u.%u.%u.%u\", *(var_4h + 8) >> 0x10);\n        }\n        else {\n            fcn.0041315a(arg_ch, var_4h, 0x200);\n            *(arg_ch + 0x400) = 0;\n        }\n        fcn.0041137c(uVar3);\n        fcn.0041137c(iVar2);\n        return 1;\n    }\n    fcn.0041137c(uVar3);\n    fcn.0041137c(iVar2);\n    return 0;\n}\n",
        "token_count": 861
    },
    "0040e9a0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e9a0(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *arg_10h;\n    int32_t extraout_EDX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint uStack32;\n    uint uStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    uStack28 = 0;\n    iVar2 = *(**(arg_8h + 4) + 8);\n    if (iVar2 == 0) {\n        fcn.0040b240(in_ECX, arg_8h, arg_ch);\n        return;\n    }\n    if (0x7e < iVar2 - 1U) {\ncode_r0x0042dd33:\n        fcn.0045e1ee(in_ECX, 5000, *(**(arg_8h + 4) + 10));\n        return;\n    }\n    // switch table (6 cases) at 0x42dd49\n    switch(*(*(iVar2 + 0x42dd60) * 4 + 0x42dd49)) {\n    case 0x42dc42:\n        fcn.00409260(in_ECX);\n        break;\n    case 0x42dc4f:\n        auStack24[0] = 0;\n        uStack12 = 0;\n        uStack16 = 1;\n        iVar2 = fcn.00408f60(auStack24);\n        if ((iVar2 == 0) && (iVar2 = *(*(arg_8h + 4) + uStack32 * 4),  *(iVar2 + 8) != 0x7f)) {\n            arg_10h = *(iVar2 + 10);\ncode_r0x0042dc8c:\n            fcn.0045e1ee(in_ECX, 0x72, arg_10h);\n        }\n        goto code_r0x0042dc94;\n    case 0x42dca2:\n        arg_10h = auStack24;\n        auStack24[0] = 0;\n        uStack16 = 1;\n        uStack12 = 0;\n        iVar2 = fcn.00409940(in_ECX, arg_8h, arg_10h, &uStack32 + 3);\n        if ((iVar2 == 0) && (*(*(*(arg_8h + 4) + unaff_ESI * 4) + 8) != 0x7f)) goto code_r0x0042dc8c;\ncode_r0x0042dc94:\n        fcn.004091e0();\n        break;\n    case 0x42dcda:\n        cVar1 = fcn.004329dd(in_ECX + 0x488);\n        if (cVar1 == '\\0') {\n            fcn.0045e1ee(in_ECX, 0xa7, *(extraout_EDX + 10));\n        }\n        else {\n            iVar2 = fcn.0047e52b(in_ECX, arg_8h, &uStack32, in_ECX + 0x488);\n            if (iVar2 != 0) {\n                fcn.0045e1ee(in_ECX, 0xaa, *(*(*(arg_8h + 4) + unaff_EDI * 4) + 10));\n            }\n        }\n        break;\n    case 0x42dd33:\n        goto code_r0x0042dd33;\n    }\n    return;\n}\n",
        "token_count": 804
    },
    "0040f270": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040f270(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uint32_t unaff_ESI;\n    int32_t iVar4;\n    \n    if (unaff_ESI != 0) {\n        uVar3 = 0;\n        bVar2 = true;\n        do {\n            uVar1 = *(uVar3 + param_2);\n            if (uVar1 < 0x80) {\n                uVar3 = uVar3 + 1;\n            }\n            else {\n                if ((uVar1 < 0xc2) || (0xdf < uVar1)) {\n                    if ((uVar1 < 0xe0) || (0xef < uVar1)) {\n                        if ((uVar1 < 0xf0) || (0xf4 < uVar1)) {\ncode_r0x00426610:\n                            return uVar3 & 0xffffff00;\n                        }\n                        iVar4 = 3;\n                    }\n                    else {\n                        iVar4 = 2;\n                    }\n                }\n                else {\n                    iVar4 = 1;\n                }\n                uVar3 = uVar3 + 1;\n                bVar2 = false;\n                do {\n                    if (unaff_ESI <= uVar3) {\n                        return 1;\n                    }\n                    if ((*(uVar3 + param_2) < 0x80) || (0xbf < *(uVar3 + param_2))) goto code_r0x00426610;\n                    uVar3 = uVar3 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        } while (uVar3 < unaff_ESI);\n        if (!bVar2) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 415
    },
    "0040f740": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040f740(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t *puVar6;\n    uint arg_ch_00;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    int32_t *piVar10;\n    uint *arg_ch_01;\n    uint uVar11;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    iVar4 = fcn.0040f930(in_EAX);\n    if (iVar4 == 0) {\n        iVar4 = fcn.00452332(&fcn.0040f740::var_2ch, L\">>>AUTOIT SCRIPT<<<\", &fcn.0040f740::arg_ch, \n                             &fcn.0040f740::arg_10h);\n        if (iVar4 == 0) {\n            uVar9 = *arg_ch + 1;\n            *(arg_8h + 0x10) = *arg_ch;\n            var_18h._0_2_ = 0xffff;\n            iVar2 = uVar9 * 0x10;\n            arg_10h = 0x4;\n            var_3ch = 0x484adc;\n            var_38h = 0;\n            var_34h = 0;\n            var_30h = 0;\n            uVar7 = -(iVar2 >> 0x20 != 0) | iVar2;\n            puVar6 = fcn.00411777(-(0xfffffffb < uVar7) | uVar7 + 4);\n            puVar8 = NULL;\n            if (puVar6 != NULL) {\n                var_14h = puVar6 + 1;\n                *puVar6 = uVar9;\n                fcn.00410e40(0x10);\n                puVar8 = var_14h;\n            }\n            *(arg_8h + 0x44) = puVar8;\n            var_18h._2_2_ = 0xffff;\n            if (0 < *(arg_8h + 0x10)) {\n                var_10h = 1;\n                var_14h = 0x10;\n                do {\n                    fcn.0040d7d0();\ncode_r0x00429a04:\n                    do {\n                        uVar9 = *(arg_10h + arg_ch);\n                        arg_10h = arg_10h + 1;\n                        fcn.004029c0();\n                        cVar3 = fcn.00432b64(&fcn.0040f740::var_20h);\n                        if (cVar3 == '\\0') {\n                            uVar5 = 0x429a4b;\n                            cVar3 = fcn.00432b42(&fcn.0040f740::var_20h);\n                            if (cVar3 == '\\0') {\n                                uVar11 = 0x429a77;\n                                cVar3 = fcn.00432b20(&fcn.0040f740::var_20h);\n                                if (cVar3 == '\\0') {\n                                    cVar3 = fcn.00432b85(&fcn.0040f740::var_20h);\n                                    if (cVar3 != '\\0') {\n                                        arg_ch_01 = &fcn.0040f740::arg_10h;\n                                        piVar10 = arg_ch;\n                                        var_ch = uVar9;\n                                        arg_ch_00 = fcn.0044483e(arg_ch, arg_ch_01);\n                                        if (uVar9 == 0x31) {\n                                            fcn.00401c30(piVar10, arg_ch_01, uVar11, uVar5);\n                                            var_8h = fcn.00444803(arg_8h, &fcn.0040f740::var_4ch);\n                                            fcn.00402260();\n                                            fcn.004029c0();\n                                            _var_20h = _var_20h & 0xffffffff00000000 | var_8h;\n                                        }\n                                        else if (uVar9 == 0x30) {\n                                            fcn.00401c30(piVar10, arg_ch_01, uVar11, uVar5);\n                                            var_8h = fcn.004447c4(&fcn.0040f740::var_5ch);\n                                            fcn.00402260();\n                                            fcn.004029c0();\n                                            _var_20h = _var_20h & 0xffffffff00000000 | var_8h;\n                                        }\n                                        else {\n                                            if (uVar9 == 0x37) {\n                                                fcn.0044c44e(arg_8h, arg_ch_00);\n                                                fcn.0041137c(arg_ch_00);\n                                                goto code_r0x00429a04;\n                                            }\n                                            fcn.0044b0a3(&fcn.0040f740::var_20h, arg_ch_00);\n                                        }\n                                        fcn.0041137c(arg_ch_00);\n                                        uVar9 = var_ch;\n                                    }\n                                }\n                                else {\n                                    _var_20h = *(arg_10h + arg_ch);\n                                    arg_10h = arg_10h + 8;\n                                }\n                            }\n                            else {\n                                puVar1 = arg_10h + arg_ch;\n                                arg_10h = arg_10h + 8;\n                                _var_20h = *puVar1;\n                            }\n                        }\n                        else {\n                            puVar8 = arg_10h + arg_ch;\n                            arg_10h = arg_10h + 4;\n                            _var_20h = _var_20h & 0xffffffff00000000 | *puVar8;\n                        }\n                        fcn.00402a30();\n                        puVar8 = var_14h;\n                    } while (uVar9 != 0x7f);\n                    fcn.004022e0(*(arg_8h + 0x44) + var_14h, &fcn.0040f740::var_3ch);\n                    var_10h = var_10h + 1;\n                    var_14h = puVar8 + 4;\n                } while (var_10h <= *(arg_8h + 0x10));\n            }\n            fcn.004138f8(arg_ch);\n            fcn.0043241f(&fcn.0040f740::var_2ch);\n            fcn.0040ef20();\n            fcn.0044b0f0(&fcn.0040f740::var_20h);\n            return 1;\n        }\n        fcn.0043241f(&fcn.0040f740::var_2ch);\n    }\n    else if (*arg_10h != 4) {\n        *arg_10h = 2;\n        uVar5 = fcn.00403670(arg_8h, in_EAX, arg_ch, in_EAX, 0x483f68, 0);\n        return uVar5;\n    }\n    fcn.004345d9(*(arg_8h + 0x48), *(arg_8h + 3));\n    return 0;\n}\n",
        "token_count": 1720
    },
    "00435056": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00435056(uint arg_8h)\n\n{\n    if (arg_8h < 0x80) {\n        return '\\x01';\n    }\n    if (arg_8h < 0xe0) {\n        return '\\x02';\n    }\n    return (0xef < arg_8h) + '\\x03';\n}\n",
        "token_count": 78
    },
    "0045ad10": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ad10(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar1 = fcn.0040c8f0();\n    if (uVar1 == 0) {\n        fcn.0040bf10();\n        fcn.004434a2(&var_10h, 0);\n        fcn.0040e870();\n        fcn.00402260();\n        return 0;\n    }\n    if (0xff < uVar1) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    if (uVar1 < 0x80) {\n        arg_8h = uVar1 & 0xffff;\n        fcn.0040e8e0();\n        return 0;\n    }\n    arg_8h = arg_8h & 0xffff0000 | uVar1 & 0xff;\n    uVar2 = fcn.00432f4e(&arg_8h, 0xffffffff);\n    fcn.0040e8e0();\n    fcn.0041137c(uVar2);\n    return 0;\n}\n",
        "token_count": 287
    },
    "00464a7b": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464a7b(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    *arg_10h = *arg_10h + 1;\n    iVar1 = *(*(arg_ch + 4) + *arg_10h * 4);\n    if (*(iVar1 + 8) != 0x7f) {\n        fcn.0045e1ee(arg_8h, 0x72, *(iVar1 + 10));\n        return;\n    }\n    fcn.0040e8e0();\n    return;\n}\n",
        "token_count": 143
    },
    "0047234e": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047234e(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint arg_ch_00;\n    int32_t iVar3;\n    int32_t var_40h;\n    int32_t var_38h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_10h;\n    arg_10h = NULL;\n    fcn.0040df00();\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(*(arg_ch + 4) + *piVar1 * 4);\n    var_ch = 0;\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    if (*(iVar3 + 8) != 0x7f) {\n        fcn.0045e1ee(arg_8h, 0x72, *(iVar3 + 10));\n        fcn.00410c20();\n        fcn.004520e5(&var_40h);\n        return;\n    }\n    while (cVar2 = fcn.00432ee2(arg_8h + 0x16c),  cVar2 == '\\0') {\n        arg_ch_00 = fcn.0040f660();\n        fcn.0047230b(&var_40h, arg_ch_00);\n        if ((var_40h == 4) || (var_40h == 5)) break;\n        *arg_14h = var_38h + 1;\n        fcn.0040ca30();\n    }\n    cVar2 = fcn.00432ee2(arg_8h + 0x16c);\n    if (cVar2 != '\\0') {\n        fcn.0045e1ee(arg_8h, 0xb5, *(*(*(arg_ch + 4) + *piVar1 * 4) + 10));\n        fcn.00410c20();\n        fcn.004520e5(&var_40h);\n        return;\n    }\n    do {\n        do {\n            *arg_14h = *arg_14h + 1;\n            iVar3 = fcn.0040f5a0();\n            if (iVar3 == 0) goto code_r0x00472481;\n        } while (*(**(iVar3 + 4) + 2) != 0);\n    // switch table (5 cases) at 0x47249e\n        switch(***(iVar3 + 4)) {\n        case 0x14:\n        case 0x17:\n            arg_10h = arg_10h + 1;\n            break;\n        case 0x15:\n            if (arg_10h == NULL) {\ncode_r0x00472481:\n                fcn.00410c20();\n                fcn.004520e5(&var_40h);\n                return;\n            }\n            break;\n        case 0x16:\n        case 0x18:\n            if (arg_10h == NULL) goto code_r0x00472481;\n            arg_10h = arg_10h + -1;\n        }\n    } while( true );\n}\n",
        "token_count": 747
    },
    "00474f0c": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00474f0c(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    ushort var_ch;\n    int32_t var_ah;\n    uint32_t var_4h;\n    \n    piVar3 = arg_10h;\n    iVar2 = arg_ch;\n    var_ah._0_2_ = 0;\n    var_24h = 0x484adc;\n    var_20h = NULL;\n    var_1ch = 0;\n    var_18h = 0;\n    var_ch = 0xffff;\n    iVar6 = *arg_10h;\n    var_38h = 0;\n    var_2ch = 0;\n    var_30h = 1;\n    *0x8 = *(*(*(arg_ch + 4) + iVar6 * 4) + 10);\n    iVar5 = iVar6 + 1;\n    *arg_10h = iVar5;\n    var_4h = 0;\n    if (*(*(*(arg_ch + 4) + iVar5 * 4) + 8) == 0x47) {\n        *arg_10h = iVar6 + 2;\n        arg_ch = 0;\n        do {\n            iVar1 = *(*(*(iVar2 + 4) + *piVar3 * 4) + 8);\n            if (iVar1 == 0x47) {\n                arg_ch = arg_ch + 1;\n            }\n            else if (iVar1 == 0x48) {\n                if (arg_ch == 0) {\n                    *piVar3 = *piVar3 + 1;\n                    var_ch = 0x7f;\n                    var_ah._0_2_ = var_ah._2_2_;\n                    fcn.00402a30();\n                    arg_10h = NULL;\n                    if (*(*var_20h + 8) != 0x7f) goto code_r0x0047501c;\n                    goto code_r0x00475121;\n                }\n                arg_ch = arg_ch + -1;\n            }\n            else if (iVar1 == 0x7f) goto code_r0x00474f8a;\n            fcn.00402a30();\n            *piVar3 = *piVar3 + 1;\n        } while( true );\n    }\ncode_r0x00474f8c:\n    fcn.0045e1ee(arg_8h, 0x6f, *(*(*(iVar2 + 4) + -4 + iVar5 * 4) + 10));\n    fcn.004091e0();\n    fcn.0044b0f0(&var_14h);\n    fcn.0040ef20();\n    return 1;\ncode_r0x0047501c:\n    iVar6 = arg_10h;\n    if ((((*(var_20h[arg_10h] + 8) == 0x33) &&\n         (cVar4 = fcn.0040c560(&arg_ch, &var_4h),  iVar6 = arg_10h,  cVar4 != '\\0')) && ((var_4h & 0x100) == 0)) &&\n       ((*(arg_ch + 8) != 8 || (*(var_20h[arg_10h + 1] + 8) != 0x35)))) {\n        arg_10h = arg_10h + 1;\n        if ((*(arg_ch + 8) == 5) &&\n           ((*(var_20h[arg_10h] + 8) == 0x4e && (iVar5 = fcn.0040c780(arg_8h, &arg_ch, 1),  iVar5 != 0)))) {\n            fcn.004091e0();\n            goto code_r0x00475151;\n        }\n        iVar5 = arg_ch;\n        fcn.004091e0();\n        var_30h = 6;\n        var_38h = iVar5;\n        if ((*(var_20h[arg_10h] + 8) != 0x40) && (*(var_20h[arg_10h] + 8) != 0x7f)) goto code_r0x004750ca;\n    }\n    else {\ncode_r0x004750ca:\n        arg_10h = iVar6;\n        iVar6 = fcn.0040aa20(&var_24h, &arg_10h, &var_38h, 0xffffffff);\n        if (iVar6 != 0) {\n            fcn.004091e0();\n            goto code_r0x00475151;\n        }\n    }\n    fcn.0040bcb0(&var_38h);\n    if (*(var_20h[arg_10h] + 8) == 0x40) {\n        if (*(var_20h[arg_10h + 1] + 8) == 0x7f) {\n            fcn.0045e1ee(arg_8h, 0x6e, *(var_20h[arg_10h] + 10));\n            fcn.004091e0();\ncode_r0x00475151:\n            fcn.0044b0f0(&var_14h);\n            fcn.0040ef20();\n            return 1;\n        }\n        arg_10h = arg_10h + 1;\n    }\n    if (*(var_20h[arg_10h] + 8) == 0x7f) {\ncode_r0x00475121:\n        fcn.004091e0();\n        fcn.0044b0f0(&var_14h);\n        fcn.0040ef20();\n        return 0;\n    }\n    goto code_r0x0047501c;\ncode_r0x00474f8a:\n    iVar5 = *piVar3;\n    goto code_r0x00474f8c;\n}\n",
        "token_count": 1438
    },
    "0047cf60": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047cf60(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_10h_00;\n    \n    cVar1 = fcn.004329dd(arg_8h + 0x488);\n    if (cVar1 != '\\0') {\n        fcn.0045e1ee(arg_8h, 0xa8, *(*(*(arg_ch + 4) + *arg_10h * 4) + 10));\n        return;\n    }\n    *arg_10h = *arg_10h + 1;\n    iVar2 = *(*(arg_ch + 4) + *arg_10h * 4);\n    if (*(iVar2 + 8) != 0x33) {\n        fcn.0045e1ee(arg_8h, 0xa5, *(iVar2 + 10));\n        return;\n    }\n    iVar2 = fcn.0040c490(arg_8h, arg_ch, arg_10h_00);\n    if (iVar2 == 0) {\n        cVar1 = fcn.004329dd(arg_8h + 0x488);\n        if (cVar1 == '\\0') {\n            fcn.0045e1ee(arg_8h, 0xa5, *(*(*(arg_ch + 4) + -4 + *arg_10h * 4) + 10));\n            return;\n        }\n        iVar2 = *(*(arg_ch + 4) + *arg_10h * 4);\n        if (*(iVar2 + 8) != 0x7f) {\n            fcn.0045e1ee(arg_8h, 0x72, *(iVar2 + 10));\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0047e52b": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047e52b(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t *arg_10h_00;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = arg_10h;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_10h = 0;\n    var_4h = 0;\n    var_40h = 0;\n    var_34h = 0;\n    var_20h = 0;\n    var_14h = 0;\n    var_30h = 0x4870e0;\n    var_8h = 1;\n    var_38h = 1;\n    var_18h = 1;\n    arg_10h = 0x483f68;\n    fcn.00409120(arg_14h);\n    while( true ) {\n        if (*(*(*(arg_ch + 4) + *arg_10h_00 * 4) + 8) != 0x48) {\n            fcn.0046f6d5(&var_30h);\n            puVar2 = *(*(arg_ch + 4) + *arg_10h_00 * 4);\n            if (*(puVar2 + 2) == 0x47) {\n                arg_10h = 0x483f68;\n                *arg_10h_00 = *arg_10h_00 + -1;\n            }\n            else {\n                arg_10h = **puVar2;\n            }\n        }\n        if (*(*(*(arg_ch + 4) + 4 + *arg_10h_00 * 4) + 8) == 0x47) {\n            iVar4 = fcn.00474f0c(arg_8h, arg_ch, arg_10h_00, &var_30h);\n            if (iVar4 != 0) goto code_r0x0047e69d;\n        }\n        else {\n            *arg_10h_00 = *arg_10h_00 + 1;\n        }\n        if (*(*(*(arg_ch + 4) + *arg_10h_00 * 4) + 8) == 0x41) break;\n        iVar4 = fcn.0047b686(arg_8h, &var_10h, arg_10h, &var_30h, &var_20h);\n        if (iVar4 != 0) goto code_r0x0047e69d;\n        fcn.004091e0();\n        var_8h = 1;\n        var_10h = 0;\n        cVar3 = fcn.004329dd(&var_20h);\n        if (cVar3 == '\\0') {\ncode_r0x0047e746:\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.00410e00();\n            return 0;\n        }\n        fcn.00409120(&var_20h);\n        fcn.004091e0();\n        var_18h = 1;\n        var_20h = 0;\n        iVar1 = *(*(*(arg_ch + 4) + *arg_10h_00 * 4) + 8);\n        if (iVar1 == 0x7f) goto code_r0x0047e746;\n        if (iVar1 == 0x41) {\n            *arg_10h_00 = *arg_10h_00 + -1;\n        }\n        else if (iVar1 != 0x35) {\n            fcn.0045dfef(arg_8h, L\"Invalid characters behind Object assignment !\");\ncode_r0x0047e69d:\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.00410e00();\n            return 1;\n        }\n    }\n    *arg_10h_00 = *arg_10h_00 + 1;\n    iVar4 = fcn.0040aa20(arg_ch, arg_10h_00, &var_40h, 0xffffffff);\n    if (iVar4 == 0) {\n        iVar4 = *(*(arg_ch + 4) + *arg_10h_00 * 4);\n        if (*(iVar4 + 8) == 0x7f) {\n            fcn.0040bcb0(&var_40h);\n            uVar5 = fcn.0047b6c2(arg_8h, &var_10h, arg_10h, &var_30h);\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.00410e00();\n            return uVar5;\n        }\n        fcn.0045e1ee(arg_8h, 0x72, *(iVar4 + 10));\n    }\n    goto code_r0x0047e69d;\n}\n",
        "token_count": 1257
    },
    "0040c780": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c780(uint arg_8h, int32_t **arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint *arg_10h_00;\n    int32_t iVar6;\n    uint var_11ch;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar5 = 0;\n    var_14h = 0;\n    var_ch = 1;\n    var_8h = 0;\n    var_1ch = *(*(*(in_ECX + 4) + -4 + *in_EAX * 4) + 10);\n    iVar1 = *(*(*(in_ECX + 4) + *in_EAX * 4) + 8);\n    while (iVar1 == 0x4e) {\n        *in_EAX = *in_EAX + 1;\n        var_18h = *(*(*(in_ECX + 4) + *in_EAX * 4) + 10);\n        iVar6 = -1;\n        arg_10h_00 = &var_14h;\n        iVar2 = fcn.0040aa20(in_ECX, in_EAX, arg_10h_00, 0xffffffff);\n        if (iVar2 != 0) goto code_r0x004291fa;\n        iVar2 = fcn.0040c8f0();\n        if ((iVar2 < 0) || (*(*(*(in_ECX + 4) + *in_EAX * 4) + 8) != 0x4f)) goto code_r0x004291f5;\n        *in_EAX = *in_EAX + 1;\n        uVar3 = fcn.0040c8f0();\n        iVar6 = *in_EAX;\n        (&var_11ch)[iVar5] = uVar3;\n        iVar5 = iVar5 + 1;\n        iVar1 = *(*(*(in_ECX + 4) + iVar6 * 4) + 8);\n    }\n    piVar4 = *arg_ch;\n    if (piVar4[2] != 5) {\n        fcn.0040eb20();\n    }\n    iVar6 = 0;\n    *(*piVar4 + 0x210) = 0;\n    if (0 < iVar5) {\n        do {\n            fcn.0040d260();\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar5);\n    }\n    piVar4 = fcn.0040d1a0(arg_10h, 0);\n    *arg_ch = piVar4;\n    if (piVar4 == NULL) {\n        arg_10h_00 = 0x7a;\n        iVar6 = var_1ch;\ncode_r0x004291f5:\n        fcn.0045e1ee(arg_8h, arg_10h_00, iVar6);\ncode_r0x004291fa:\n        fcn.004091e0();\n        uVar3 = 1;\n    }\n    else {\n        fcn.004091e0();\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 764
    },
    "0040d260": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040d260(uint param_1, uint32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    uint unaff_ESI;\n    \n    if (param_2[2] == 5) {\n        in_EAX = *param_2;\n        if (*(in_EAX + 0x210) < 0x40) {\n            *(in_EAX + 0x10c + *(in_EAX + 0x210) * 4) = unaff_ESI;\n            uVar2 = *param_2;\n            piVar1 = uVar2 + 0x210;\n            *piVar1 = *piVar1 + 1;\n            return CONCAT31(uVar2 >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 203
    },
    "0040d290": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.0040d290(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (in_EAX[2] == 5) {\n        cVar2 = fcn.0040d2e0();\n        if (cVar2 != '\\0') {\n            iVar1 = *in_EAX;\n            iVar6 = *(iVar1 + 0x20c);\n            iVar5 = 0;\n            if (0 < iVar6) {\n                iVar3 = *(iVar1 + 8);\n                piVar4 = iVar1 + 0x10c;\n                do {\n                    iVar3 = iVar3 / piVar4[-0x40];\n                    iVar1 = *piVar4;\n                    piVar4 = piVar4 + 1;\n                    iVar5 = iVar5 + iVar1 * iVar3;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n            }\n            return iVar5;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 260
    },
    "0040e5e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0040e5e0(void)\n\n{\n    uint *in_EAX;\n    \n    if (in_EAX[2] == 5) {\n        fcn.0040e560();\n        fcn.0041137c(*in_EAX);\n        in_EAX[2] = 1;\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040eb20": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0040eb20(void)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    \n    if (in_EAX[2] != 5) {\n        fcn.004091e0();\n        puVar1 = fcn.00411777(0x214);\n        *in_EAX = puVar1;\n        *puVar1 = 0;\n        *(*in_EAX + 4) = 0;\n        *(*in_EAX + 8) = 0;\n        *(*in_EAX + 0x20c) = 0;\n        *(*in_EAX + 0x210) = 0;\n        in_EAX[2] = 5;\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00458646": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00458646(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint hWnd;\n    float10 fVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    _var_10h = CONCAT44(*(arg_8h + 8), var_10h);\n    puVar2 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n    uVar4 = *puVar2;\n    *puVar2[3] = *puVar2[3] + 1;\n    puVar2 = fcn.00452e60(*(*(arg_8h + 4) + 8));\n    var_20h = *puVar2;\n    var_1ch = puVar2[1];\n    var_18h = puVar2[2];\n    var_14h = puVar2[3];\n    *var_14h = *var_14h + 1;\n    hWnd = 0;\n    iVar3 = fcn.0040c8f0();\n    if (iVar3 == -1) {\ncode_r0x004586da:\n        var_4h = 0;\n    }\n    else {\n        cVar1 = fcn.0044aa8e(**(arg_8h + 4));\n        if (cVar1 != '\\0') goto code_r0x004586da;\n        var_4h = fcn.0040c8f0();\n        var_4h = var_4h | 0x10000;\n    }\n    cVar1 = fcn.0044aa8e(*(*(arg_8h + 4) + 4));\n    if (cVar1 != '\\0') {\n        fcn.0040e410(var_8h + 0xb8);\n    }\n    if (0x4000 < var_1ch) {\n        fcn.0040c8a0(&var_20h, 0x4000);\n    }\n    if (4 < var_ch) {\n        hWnd = fcn.0044b01e(*(*(arg_8h + 4) + 0x10));\n    }\n    if (3 < *(arg_8h + 8)) {\n        cVar1 = fcn.0044aa8e(*(*(arg_8h + 4) + 0xc));\n        if (cVar1 == '\\0') {\n            fVar5 = fcn.0040bd40();\n            if (((*0x48bdd0 < fVar5) << 8 | (*0x48bdd0 == fVar5) << 0xe) == 0) {\n                fVar5 = 0;\n            }\n            _var_10h = ROUND(fVar5 * *0x48bd98);\n            uVar4 = fcn.004439cd(hWnd, var_20h, uVar4, var_4h, var_10h);\n            goto code_r0x004587a5;\n        }\n    }\n    uVar4 = (*_sym.imp.USER32.dll_MessageBoxW)(hWnd, var_20h, uVar4, var_4h);\ncode_r0x004587a5:\n    fcn.004091e0();\n    *arg_ch = uVar4;\n    arg_ch[2] = 1;\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 870
    },
    "0045d52d": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045d52d(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint unaff_EDI;\n    uchar *arg_8h_00;\n    uchar auStack52 [4];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t *apiStack36 [2];\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t *piStack16;\n    \n    puVar3 = fcn.00452e60(**(arg_8h + 4));\n    uVar1 = *puVar3;\n    uStack24 = puVar3[1];\n    uStack20 = puVar3[2];\n    piStack16 = puVar3[3];\n    *piStack16 = *piStack16 + 1;\n    uStack28 = uVar1;\n    puVar3 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n    uStack48 = *puVar3;\n    uStack44 = puVar3[1];\n    uStack40 = puVar3[2];\n    apiStack36[0] = puVar3[3];\n    *apiStack36[0] = *apiStack36[0] + 1;\n    fcn.0045316c(&uStack48);\n    cVar2 = fcn.004456fa(auStack52, L\"close\");\n    if (cVar2 != '\\0') {\n        fcn.00402170();\n    }\n    cVar2 = fcn.004456fa(auStack52, L\"open\");\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.004456fa(auStack52, L\"closed\");\n        if (cVar2 != '\\0') goto code_r0x0045d5eb;\n    }\n    else {\ncode_r0x0045d5eb:\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(uVar1);\n        if (iVar4 == 5) {\n            fcn.00401c30();\n            fcn.0040bff0(apiStack36);\n            fcn.0040d510();\n            pcVar5 = _sym.imp.WINMM.dll_mciSendStringW;\n            iVar4 = (*_sym.imp.WINMM.dll_mciSendStringW)(unaff_EDI, 0, 0, 0);\n            if (iVar4 == 0) {\n                fcn.00402170();\n                arg_8h_00 = auStack52;\n                fcn.0040bff0(arg_8h_00);\n                fcn.0040d510();\n                iVar4 = (*pcVar5)(unaff_EDI, 0, 0, 0);\n                if (iVar4 != 0) {\n                    fcn.004091e0();\n                    arg_ch[2] = 1;\n                    *arg_ch = 0;\n                    pcVar5 = _sym.imp.WINMM.dll_mciSendStringW;\n                }\n                fcn.00402170();\n                (*pcVar5)(arg_8h_00, 0, 0, 0);\n                fcn.00402260();\n            }\n            else {\n                fcn.004091e0();\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n                fcn.00402260();\n            }\n            goto code_r0x0045d6e9;\n        }\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\ncode_r0x0045d6e9:\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 864
    },
    "0045e408": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e408(int32_t *arg_8h)\n\n{\n    if (arg_8h[2] != 5) {\n        fcn.0040eb20();\n        *(*arg_8h + 0x210) = 0;\n        return;\n    }\n    *(*arg_8h + 0x210) = 0;\n    return;\n}\n",
        "token_count": 86
    },
    "0045e43e": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e43e(int32_t *arg_8h)\n\n{\n    if (arg_8h[2] != 4) {\n        fcn.00452c26(arg_8h);\n        if (arg_8h[2] == 5) {\n            fcn.0040e5e0();\n        }\n        if (arg_8h[2] == 0xb) {\n            fcn.0041137c(*(*arg_8h + 4));\n            fcn.0041137c(*arg_8h);\n            *arg_8h = 0;\n        }\n        arg_8h[2] = 4;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00462cc9": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462cc9(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    char cVar1;\n    uint32_t arg_8h_01;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *arg_8h_02;\n    int32_t arg_14h;\n    int32_t in_stack_ffffff74;\n    uint32_t in_stack_ffffff78;\n    uint32_t in_stack_ffffff80;\n    uint32_t uVar6;\n    int32_t in_stack_ffffff88;\n    uint uStack76;\n    uint uStack72;\n    int32_t iStack64;\n    uint uStack60;\n    uchar auStack56 [4];\n    uchar auStack52 [48];\n    \n    fcn.0040bf10();\n    arg_8h_01 = fcn.00452e60(**(arg_8h + 4));\n    fcn.004013c0();\n    uStack60 = fcn.00452e60(*(*(arg_8h + 4) + 8));\n    arg_8h_00 = *(*(arg_8h + 4) + 4);\n    cVar1 = fcn.00453140(arg_8h_00);\n    if (cVar1 == '\\0') {\n        uStack72 = fcn.00452e81(arg_8h_00);\n        iVar2 = fcn.00452e26(*(*(arg_8h + 4) + 4));\n        if (iVar2 == 0) goto code_r0x00462d80;\n        arg_14h = 0;\n        if (3 < *(arg_8h + 8)) {\n            arg_14h = fcn.0040c8f0();\n        }\n        uVar3 = 0;\n        if (4 < *(arg_8h + 8)) {\n            iVar4 = fcn.0040c8f0();\n            if (iVar4 != 0) {\n                uVar3 = 0x1000000;\n            }\n        }\n        if (arg_14h < 0) {\n            in_stack_ffffff80 = uVar3 >> 0x18;\n            in_stack_ffffff74 = 0x462e1a;\n            in_stack_ffffff78 = arg_8h_01;\n            iVar5 = fcn.004423f2(arg_8h_01, uStack76, in_stack_ffffff80, arg_14h, iVar2, 0xffffffff, 0x7fffffff);\n            if (iVar5 < 0) {\n                iVar4 = 0;\n                arg_14h = iVar5;\n                in_stack_ffffff88 = iVar2;\n            }\n            else {\n                in_stack_ffffff74 = iVar5;\n                fcn.00460e76(&stack0xffffffa8, arg_8h_01, 0, iVar5);\n                arg_14h = -arg_14h;\n                iVar4 = iVar5;\n                in_stack_ffffff88 = iVar2;\n            }\n        }\n        else {\n            iVar4 = 0;\n        }\n        in_stack_ffffff78 = in_stack_ffffff78 >> 0x18;\n        do {\n            iVar2 = in_stack_ffffff74;\n            uVar3 = arg_8h_01;\n            uVar6 = in_stack_ffffff80;\n            iVar4 = fcn.004423f2(arg_8h_01, in_stack_ffffff88, in_stack_ffffff78, 1, in_stack_ffffff80, iVar4, \n                                 0xffffffff);\n            arg_8h_02 = &stack0xffffff8c;\n            if (iVar4 == *(arg_8h_01 + 4)) {\n                iVar5 = iVar4 - iVar2;\n                goto code_r0x00462ec6;\n            }\n            iVar5 = iVar4 - iVar2;\n            in_stack_ffffff74 = iVar2;\n            fcn.00460e76(arg_8h_02, arg_8h_01, iVar2, iVar5);\n            fcn.0040bff0(&stack0xffffff7c);\n            fcn.0040bff0(in_stack_ffffff80);\n            iVar5 = iVar5 + 1;\n            iVar4 = iVar4 + uVar3;\n            in_stack_ffffff80 = uVar6;\n        } while ((arg_14h == 0) || (iVar5 != arg_14h));\n        arg_8h_02 = &stack0xffffff74;\ncode_r0x00462ec6:\n        fcn.00460e76(arg_8h_02, arg_8h_01, iVar2, iVar5);\n        fcn.0040bff0(&stack0xffffff7c);\n        fcn.00403f80(uVar3, 0);\n    }\n    else {\n        iVar2 = fcn.0040c8f0();\n        iVar2 = iVar2 + -1;\n        if ((iVar2 < 0) || (uVar3 = *(iStack64 + 4) + iVar2,  *(arg_8h_01 + 4) <= uVar3 && uVar3 != *(arg_8h_01 + 4))) {\ncode_r0x00462d80:\n            fcn.0040e8e0();\n            fcn.00403f40(1, 0);\n            goto code_r0x00462efe;\n        }\n        fcn.00460e76(&stack0xffffffcc, arg_8h_01, 0, iVar2);\n        fcn.0040bff0(iStack64);\n        fcn.00460e76(&stack0xffffffc8, arg_8h_01, *(iStack64 + 4) + iVar2, (*(arg_8h_01 + 4) - *(iStack64 + 4)) - iVar2)\n        ;\n        fcn.0040bff0(&stack0xffffffb8);\n    }\n    fcn.0040e870();\ncode_r0x00462efe:\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1364
    },
    "0047a3f2": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a3f2(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    \n    cVar1 = fcn.00479806(in_ECX, arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    if (4 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040c8f0();\n        if (iVar2 != 0) {\n            uVar4 = *(*(arg_8h + 4) + 0xc);\n            uVar3 = fcn.00452e60(uVar4);\n            fcn.004539d9(in_ECX + 0x88, uVar3, uVar4);\n            return 0;\n        }\n    }\n    uVar4 = *(*(arg_8h + 4) + 0xc);\n    uVar3 = fcn.00452e60(uVar4);\n    fcn.004600b7(in_ECX + 0x88, uVar3, uVar4);\n    return 0;\n}\n",
        "token_count": 302
    },
    "00401c30": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.00401c30(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint *unaff_ESI;\n    uint unaff_EDI;\n    \n    iVar1 = fcn.00411361(unaff_EDI);\n    unaff_ESI[1] = iVar1;\n    unaff_ESI[2] = iVar1 + 1;\n    if (iVar1 + 1 == 0) {\n        uVar3 = 8;\n    }\n    else {\n        uVar3 = iVar1 + 8U & 0xfffffff8;\n    }\n    unaff_ESI[2] = uVar3;\n    arg_8h = fcn.00411777(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n    *unaff_ESI = arg_8h;\n    fcn.00411000(arg_8h, unaff_EDI, unaff_ESI[1] * 2 + 2);\n    puVar2 = fcn.00411777(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = 1;\n    }\n    unaff_ESI[3] = puVar2;\n    return;\n}\n",
        "token_count": 301
    },
    "004031b0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid fcn.004031b0(void)\n\n{\n    double dVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t arg_8h;\n    int32_t *unaff_ESI;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    uVar2 = in_EAX + 1;\n    if (uVar2 <= unaff_ESI[2]) {\n        return;\n    }\n    if (uVar2 < 0x41c2) {\n        var_ch = uVar2 * 2;\n    }\n    else {\n        if (uVar2 < 0x2000000) {\n            dVar1 = uVar2;\n            if (uVar2 < 0) {\n                dVar1 = dVar1 + *0x48bd70;\n            }\n            var_ch = ROUND(dVar1 * *0x48bda8);\n            unaff_ESI[2] = var_ch;\n            goto code_r0x004031d0;\n        }\n        if (uVar2 < 0x8000000) {\n            dVar1 = uVar2;\n            if (uVar2 < 0) {\n                dVar1 = dVar1 + *0x48bd70;\n            }\n            var_ch = ROUND(dVar1 * *0x48bdb8);\n            unaff_ESI[2] = var_ch;\n            goto code_r0x004031d0;\n        }\n        dVar1 = uVar2;\n        if (uVar2 < 0) {\n            dVar1 = dVar1 + *0x48bd70;\n        }\n        var_ch = ROUND(dVar1 * *0x48bdb0);\n    }\n    unaff_ESI[2] = var_ch;\ncode_r0x004031d0:\n    if (unaff_ESI[2] == 0) {\n        uVar2 = 8;\n    }\n    else {\n        uVar2 = unaff_ESI[2] + 7U & 0xfffffff8;\n    }\n    unaff_ESI[2] = uVar2;\n    arg_8h = fcn.00411777(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n    if (*unaff_ESI != 0) {\n        fcn.00411000(arg_8h, *unaff_ESI, unaff_ESI[1] * 2 + 2);\n        fcn.0041137c(*unaff_ESI);\n    }\n    *unaff_ESI = arg_8h;\n    return;\n}\n",
        "token_count": 598
    },
    "00403e80": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.00403e80(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI + 1U <= unaff_ESI[2]) {\n        return;\n    }\n    if (unaff_EDI == -1) {\n        uVar2 = 8;\n    }\n    else {\n        uVar2 = unaff_EDI + 8U & 0xfffffff8;\n    }\n    unaff_ESI[2] = uVar2;\n    if (*unaff_ESI != 0) {\n        fcn.0041137c(*unaff_ESI);\n    }\n    iVar1 = fcn.00411777(-(unaff_ESI[2] * 2 >> 0x20 != 0) | unaff_ESI[2] * 2);\n    *unaff_ESI = iVar1;\n    *(iVar1 + unaff_EDI * 2) = 0;\n    return;\n}\n",
        "token_count": 233
    },
    "0040fa20": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040fa20(int32_t param_1)\n\n{\n    uint in_EAX;\n    uint unaff_ESI;\n    int32_t iVar1;\n    uint unaff_EDI;\n    uint uStack20;\n    uint var_ch;\n    uint var_4h;\n    \n    uStack20 = 0x40fa2d;\n    fcn.004136e0();\n    var_ch = 0x40fa37;\n    fcn.0040f9f0();\n    uStack20 = 0x40fa41;\n    var_ch = in_EAX;\n    fcn.0040fa50(in_EAX);\n    fcn.0040fba0(var_ch, unaff_EDI, unaff_ESI);\n    fcn.0040fa50(0x4921a8);\n    fcn.0040fa50(&stack0xffffffec);\n    fcn.0040fba0();\n    fcn.004130e0(param_1 + 0x44, 0, 8);\n    fcn.004130e0(param_1 + 0x34, 0, 0x10);\n    fcn.004130e0(param_1 + 0x4c, 0, 0x40);\n    *(param_1 + 0x10) = 0;\n    iVar1 = 0;\n    do {\n        fcn.00414f68(&stack0xfffffff4, \"%02X\", *(iVar1 + param_1));\n        fcn.00413810(param_1 + 0x10, &stack0xfffffff4);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x10);\n    return;\n}\n",
        "token_count": 408
    },
    "0040fa50": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fa50(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar2 = *(unaff_EDI + 0x44) + in_EAX * 8;\n    uVar1 = *(unaff_EDI + 0x44) >> 3 & 0x3f;\n    *(unaff_EDI + 0x44) = uVar2;\n    if (uVar2 < in_EAX * 8) {\n        *(unaff_EDI + 0x48) = *(unaff_EDI + 0x48) + 1;\n    }\n    *(unaff_EDI + 0x48) = *(unaff_EDI + 0x48) + (in_EAX >> 0x1d);\n    uVar2 = -uVar1 + 0x40;\n    if (in_EAX < uVar2) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00411000(uVar1 + 0x4c + unaff_EDI, arg_8h, uVar2);\n        fcn.0040fbe0(unaff_EDI, unaff_EDI + 0x4c);\n        for (uVar1 = -uVar1 + 0x7f; uVar1 < in_EAX; uVar1 = uVar1 + 0x40) {\n            fcn.0040fbe0(unaff_EDI, arg_8h + -0x3f + uVar1);\n            uVar2 = uVar2 + 0x40;\n        }\n        uVar1 = 0;\n    }\n    fcn.00411000(uVar1 + 0x4c + unaff_EDI, uVar2 + arg_8h, in_EAX - uVar2);\n    return;\n}\n",
        "token_count": 441
    },
    "00432c18": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.00432c18(uint8_t *arg_8h)\n\n{\n    return *arg_8h >> 3 & 1;\n}\n",
        "token_count": 38
    },
    "00446220": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00446220(int32_t arg_8h)\n\n{\n    if (arg_8h == 0) {\n        return 8;\n    }\n    return arg_8h + 7U & 0xfffffff8;\n}\n",
        "token_count": 58
    },
    "00433177": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433177(uint arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    if (7 < arg_ch - 1U) {\n        return 0;\n    }\n    if (0 < arg_ch) {\n        do {\n            uVar3 = fcn.00420aa0();\n            uVar1 = *arg_10h;\n            *arg_10h = *arg_10h + uVar3;\n            arg_10h[1] = arg_10h[1] + (uVar3 >> 0x20) + CARRY4(uVar1, uVar3);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 230
    },
    "0044b01e": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044b01e(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = arg_8h[2];\n    if (0 < iVar1) {\n        if (iVar1 < 5) {\n            uVar2 = fcn.00442d6f(arg_8h);\n            return uVar2;\n        }\n        if (iVar1 == 7) {\n            return *arg_8h;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "00453532": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453532(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    cVar1 = fcn.0043475c(0x4a8710, arg_8h, &var_4h);\n    if (((cVar1 != '\\0') && (6 < var_4h)) && (var_4h <= *0x4a90e0)) {\n        fcn.0040e410(arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 137
    },
    "00467dcb": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467dcb(int32_t arg_8h, uint arg_ch, uint arg_10h, double *arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    double dVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t arg_ch_00;\n    float fVar6;\n    uchar uVar7;\n    ushort uVar8;\n    double *arg_8h_00;\n    int32_t *piVar9;\n    uint uVar10;\n    uint arg_ch_01;\n    float fVar11;\n    int32_t iVar12;\n    uint extraout_ECX;\n    int32_t arg_18h_00;\n    int32_t iVar13;\n    float10 fVar14;\n    ulong uVar15;\n    double *arg_8h_01;\n    \n    iVar13 = arg_1ch;\n    arg_8h_01 = arg_14h;\n    arg_1ch = 0;\n    arg_8h_00 = fcn.00453083(arg_8h, arg_ch, &arg_14h, &arg_1ch);\n    if (arg_8h_00 == NULL) {\n        fcn.004091e0();\n        *(arg_8h_01 + 1) = 1.401298e-45;\n        *arg_8h_01 = 0.0;\n        return arg_1ch;\n    }\n    iVar12 = arg_14h * 0x20;\n    arg_14h = *(*(arg_8h + 4) + 4 + iVar12);\n    piVar9 = *(arg_8h + 4) + iVar12;\n    arg_1ch = *piVar9;\n    iVar12 = piVar9[7];\n    arg_ch_00 = piVar9[2];\n    arg_18h_00 = arg_1ch;\n    if (iVar13 != -1) {\n        iVar13 = iVar13 * arg_14h;\n        arg_8h_00 = arg_8h_00 + iVar13;\n        arg_18h_00 = arg_1ch + iVar13;\n    }\n    if (iVar12 <= arg_18h_00) {\n        fcn.004091e0();\n        *(arg_8h_01 + 1) = 1.401298e-45;\n        *arg_8h_01 = 0.0;\n        return 3;\n    }\n    if ((arg_ch_00 & 0x21) != 0) {\n        uVar10 = fcn.00467b19(arg_10h, arg_ch_00, arg_8h_00, iVar12, arg_18h_00, iVar13, arg_18h, arg_8h_01);\n        return uVar10;\n    }\n    if (((arg_ch_00 & 4) != 0) && (iVar13 == -1)) {\n        arg_1ch = iVar12 - arg_18h_00;\n        if (arg_18h == '\\0') {\n            if ((arg_ch_00 & 0x10) != 0) {\n                iVar13 = arg_1ch;\n                uVar10 = fcn.00452ba7(arg_8h_01, arg_1ch);\n                fcn.00411000(uVar10, arg_8h_01, iVar13);\n                return 0;\n            }\n        }\n        else if ((arg_ch_00 & 0x10) != 0) {\n            fcn.004679dc(arg_10h);\n            iVar13 = fcn.00442e6f(arg_10h);\n            if (arg_1ch < iVar13) {\n                iVar13 = arg_1ch;\n            }\n            uVar10 = extraout_ECX;\n            arg_ch_01 = fcn.004679dc(arg_10h);\n            fcn.00411000(arg_8h_00, arg_ch_01, uVar10);\n            fcn.004679dc(arg_10h);\n            uVar10 = fcn.00452ba7(arg_8h_01, iVar13);\n            fcn.00411000(uVar10, arg_8h_01, iVar13);\n            return 0;\n        }\n    }\n    if ((arg_ch_00 & 0x40) == 0) {\n        if ((arg_ch_00 & 8) == 0) {\n            if (arg_14h - 1U < 8) {\n    // switch table (8 cases) at 0x468117\n                switch(*((arg_14h - 1U) * 4 + 0x468117)) {\n                case 0x467feb:\n                    if (arg_18h != '\\0') {\n                        uVar7 = fcn.00442d6f(arg_10h);\n                        *arg_8h_00 = uVar7;\n                    }\n                    if ((arg_ch_00 & 2) == 0) {\n                        cVar3 = *arg_8h_00;\n                        fcn.004091e0();\n                        *(arg_8h_01 + 1) = 1.401298e-45;\n                        *arg_8h_01 = cVar3;\n                        return 0;\n                    }\n                    uVar2 = *arg_8h_00;\n                    fcn.004091e0();\n                    *(arg_8h_01 + 1) = 1.401298e-45;\n                    *arg_8h_01 = uVar2;\n                    return 0;\n                case 0x468039:\n                    if (arg_18h != '\\0') {\n                        uVar8 = fcn.00442d6f(arg_10h);\n                        *arg_8h_00 = uVar8;\n                    }\n                    if ((arg_ch_00 & 2) == 0) {\n                        iVar5 = *arg_8h_00;\n                        fcn.004091e0();\n                        *(arg_8h_01 + 1) = 1.401298e-45;\n                        *arg_8h_01 = iVar5;\n                        return 0;\n                    }\n                    uVar4 = *arg_8h_00;\n                    fcn.004091e0();\n                    *(arg_8h_01 + 1) = 1.401298e-45;\n                    *arg_8h_01 = uVar4;\n                    return 0;\n                case 0x468088:\n                    if (arg_18h != '\\0') {\n                        fVar11 = fcn.00442d6f(arg_10h);\n                        *arg_8h_00 = fVar11;\n                    }\n                    if ((arg_ch_00 & 2) == 0) {\n                        fVar11 = *arg_8h_00;\n                        fcn.004091e0();\n                        *arg_8h_01 = fVar11;\n                        *(arg_8h_01 + 4) = fVar11 >> 0x1f;\n                        *(arg_8h_01 + 1) = 2.802597e-45;\n                        return 0;\n                    }\n                    fVar11 = *arg_8h_00;\n                    fcn.004091e0();\n                    *arg_8h_01 = fVar11;\n                    *(arg_8h_01 + 4) = 0.0;\n                    *(arg_8h_01 + 1) = 2.802597e-45;\n                    return 0;\n                case 0x4680e1:\n                    if (arg_18h != '\\0') {\n                        uVar15 = fcn.00442d6f(arg_10h);\n                        *arg_8h_00 = uVar15;\n                        *(arg_8h_00 + 4) = uVar15 >> 0x20;\n                    }\n                    fVar11 = *arg_8h_00;\n                    fVar6 = *(arg_8h_00 + 4);\n                    fcn.004091e0();\n                    *arg_8h_01 = fVar11;\n                    *(arg_8h_01 + 4) = fVar6;\n                    *(arg_8h_01 + 1) = 2.802597e-45;\n                }\n            }\n        }\n        else {\n            if (arg_14h == 0x4) {\n                if (arg_18h != '\\0') {\n                    fVar14 = fcn.0040bd40();\n                    *arg_8h_00 = fVar14;\n                }\n                fVar11 = *arg_8h_00;\n                fcn.004091e0();\n                *(arg_8h_01 + 1) = 4.203895e-45;\n                *arg_8h_01 = fVar11;\n                return 0;\n            }\n            if (arg_14h == 0x8) {\n                if (arg_18h != '\\0') {\n                    fVar14 = fcn.0040bd40();\n                    *arg_8h_00 = fVar14;\n                }\n                dVar1 = *arg_8h_00;\n                fcn.004091e0();\n                *(arg_8h_01 + 1) = 4.203895e-45;\n                *arg_8h_01 = dVar1;\n                return 0;\n            }\n        }\n        return 0;\n    }\n    if (arg_18h != '\\0') {\n        fVar11 = fcn.0044b01e(arg_10h);\n        *arg_8h_00 = fVar11;\n    }\n    fVar11 = *arg_8h_00;\n    fcn.004091e0();\n    *(arg_8h_01 + 1) = 9.809089e-45;\n    *arg_8h_01 = fVar11;\n    return 0;\n}\n",
        "token_count": 2204
    },
    "00402290": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid fcn.00402290(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *unaff_ESI;\n    int32_t *unaff_EDI;\n    \n    if (((0x2f < *(unaff_EDI + 2)) && (*(unaff_EDI + 2) < 0x40)) && (*unaff_EDI != 0)) {\n        fcn.00442ef7(*unaff_EDI);\n    }\n    puVar2 = fcn.00411777(0x10);\n    if (puVar2 != NULL) {\n        *puVar2 = *unaff_ESI;\n        puVar2[1] = unaff_ESI[1];\n        puVar2[2] = unaff_ESI[2];\n        piVar1 = unaff_ESI[3];\n        puVar2[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n        *unaff_EDI = puVar2;\n        return;\n    }\n    *unaff_EDI = 0;\n    return;\n}\n",
        "token_count": 242
    },
    "00402a30": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid fcn.00402a30(void)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    ulong *in_EAX;\n    ulong *puVar4;\n    uint *puVar5;\n    uint arg_8h;\n    uint32_t uVar6;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_EDI + 8) == *(unaff_EDI + 0xc)) {\n        uVar6 = *(unaff_EDI + 0xc) * 2;\n        *(unaff_EDI + 0xc) = uVar6;\n        if (uVar6 < 4) {\n            uVar6 = 4;\n        }\n        *(unaff_EDI + 0xc) = uVar6;\n        arg_8h = fcn.00411777(-(uVar6 * 4 >> 0x20 != 0) | uVar6 * 4);\n        fcn.00411000(arg_8h, *(unaff_EDI + 4), *(unaff_EDI + 8) * 4);\n        fcn.0041137c(*(unaff_EDI + 4));\n        *(unaff_EDI + 4) = arg_8h;\n    }\n    puVar4 = fcn.00411777(0xc);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        iVar1 = *(in_EAX + 1);\n        *(puVar4 + 1) = iVar1;\n        *(puVar4 + 10) = *(in_EAX + 10);\n        if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n            puVar5 = fcn.00411777(0x10);\n            if (puVar5 == NULL) {\n                puVar5 = NULL;\n            }\n            else {\n                puVar2 = *in_EAX;\n                *puVar5 = *puVar2;\n                puVar5[1] = puVar2[1];\n                puVar5[2] = puVar2[2];\n                piVar3 = puVar2[3];\n                puVar5[3] = piVar3;\n                *piVar3 = *piVar3 + 1;\n            }\n            *puVar4 = puVar5;\n            *(*(unaff_EDI + 4) + *(unaff_EDI + 8) * 4) = puVar4;\n            *(unaff_EDI + 8) = *(unaff_EDI + 8) + 1;\n            return;\n        }\n        if (iVar1 == 0x10) {\n            *puVar4 = *in_EAX;\n            *(puVar4 + 4) = *(in_EAX + 4);\n        }\n        else if (iVar1 == 0x20) {\n            *puVar4 = *in_EAX;\n        }\n        else {\n            *puVar4 = *in_EAX;\n        }\n    }\n    *(*(unaff_EDI + 4) + *(unaff_EDI + 8) * 4) = puVar4;\n    *(unaff_EDI + 8) = *(unaff_EDI + 8) + 1;\n    return;\n}\n",
        "token_count": 723
    },
    "00432b85": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432b85(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    unkuint3 Var2;\n    \n    iVar1 = *(arg_8h + 8);\n    Var2 = iVar1 >> 8;\n    if ((0x2f < iVar1) && (iVar1 < 0x40)) {\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 104
    },
    "00403310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403310(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.00403600();\n    uVar1 = *(arg_8h + *in_EAX * 2);\n    while ((((uVar1 < 0x5b && (0x40 < uVar1)) || ((0x60 < uVar1 && (uVar1 < 0x7b)))) ||\n           (((0x2f < uVar1 && (uVar1 < 0x3a)) || (uVar1 == 0x5f))))) {\n        fcn.004032d0(uVar1);\n        *in_EAX = *in_EAX + 1;\n        uVar1 = *(arg_8h + *in_EAX * 2);\n    }\n    fcn.004029a0();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(*arg_10h, arg_10h[1]);\n    iVar3 = 0;\n    do {\n        iVar2 = fcn.004132dc(*(iVar3 * 4 + 0x492490), *arg_10h);\n        if (iVar2 == 0) {\n            if (-1 < iVar3) {\n                if ((((uVar1 == 0x20) || (uVar1 == 9)) ||\n                    (((uVar1 == 0x2c || ((uVar1 == 0x3d || (uVar1 == 0x28)))) || (uVar1 == 0x29)))) ||\n                   ((uVar1 == 0x5d || (uVar1 == 0)))) {\n                    fcn.004029c0();\n                    *arg_ch = iVar3;\n                    return;\n                }\n                goto code_r0x00427ab4;\n            }\n            break;\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x2b);\n    if (((uVar1 == 0x28) || (uVar1 == 0x20)) || (uVar1 == 9)) {\n        iVar3 = (**(**0x4a90ec + 4))(*arg_10h);\n        if (iVar3 < 0) {\n            fcn.004029c0();\n            fcn.00402290();\n            return;\n        }\n        fcn.004029c0();\n        *arg_ch = iVar3;\n    }\n    else {\ncode_r0x00427ab4:\n        fcn.004029c0();\n        *arg_ch = -1;\n    }\n    return;\n}\n",
        "token_count": 603
    },
    "0046146c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046146c(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h, uint32_t arg_18h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint32_t arg_ch_00;\n    int16_t *piVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    if (arg_18h <= *arg_14h && *arg_14h != arg_18h) {\n        return arg_18h & 0xffffff00;\n    }\n    fcn.00402170();\n    while( true ) {\n        uVar5 = *arg_14h;\n        piVar3 = fcn.004362b4(arg_8h, uVar5);\n        iVar1 = *piVar3;\n        if ((((iVar1 == 0x3a) || (iVar1 == 0x3b)) || (iVar1 == 0x5d)) || (arg_18h < uVar5)) break;\n        *arg_14h = uVar5 + 1;\n        puVar4 = fcn.004362b4(arg_8h, uVar5);\n        fcn.004032d0(*puVar4);\n    }\n    uVar5 = fcn.004456fa(arg_ch, 0x483f68);\n    if (uVar5 != '\\0') {\ncode_r0x00461503:\n        return uVar5 & 0xffffff00;\n    }\n    fcn.00410d60();\n    arg_ch_00 = *arg_14h;\n    puVar4 = fcn.004362b4(arg_8h, arg_ch_00);\n    uVar5 = *puVar4;\n    if (uVar5 != 0x3a) {\n        if ((uVar5 != 0x3b) && (uVar5 != 0x5d)) goto code_r0x00461503;\n        if (uVar5 != 0x3a) goto code_r0x00461514;\n    }\n    *arg_14h = arg_ch_00 + 1;\ncode_r0x00461514:\n    fcn.00402170();\n    if (*arg_14h < arg_18h || *arg_14h == arg_18h) {\n        do {\n            uVar5 = *arg_14h;\n            puVar4 = fcn.004362b4(arg_8h, uVar5);\n            uVar2 = *puVar4;\n            piVar3 = fcn.004362b4(arg_8h, uVar5 + 1);\n            if (uVar2 == 0x3b) {\n                if (*piVar3 != 0x3b) {\n                    *arg_14h = *arg_14h + 1;\n                    break;\n                }\n                *arg_14h = uVar5 + 2;\n            }\n            else {\n                *arg_14h = uVar5 + 1;\n            }\n            fcn.004032d0(uVar2);\n        } while (*arg_14h < arg_18h || *arg_14h == arg_18h);\n    }\n    while( true ) {\n        uVar5 = *arg_14h;\n        piVar3 = fcn.004362b4(arg_8h, uVar5);\n        iVar1 = *piVar3;\n        if ((iVar1 != 0x20) && (iVar1 != 9)) break;\n        *arg_14h = uVar5 + 1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 815
    },
    "004673b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004673b3(uint64_t *arg_8h)\n\n{\n    uint64_t *puVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t *piVar5;\n    int32_t arg_8h_00;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar1 = arg_8h;\n    if (*(arg_8h + 1) == 0xb) {\n        return 1;\n    }\n    uVar3 = *(arg_8h + 1) - 1;\n    if (9 < uVar3) goto code_r0x0046750c;\n    // switch table (10 cases) at 0x467523\n    switch(*(uVar3 * 4 + 0x467523)) {\n    case 0x4673dc:\n        piVar5 = *(arg_8h + 0xc);\n        piVar4 = fcn.004362b4(piVar5, 0);\n        if ((*piVar4 == 0x30) &&\n           ((piVar4 = fcn.004362b4(piVar5, 1),  *piVar4 == 0x78 || (piVar4 = fcn.004362b4(piVar5, 1),  *piVar4 == 0x58))\n           )) {\n            arg_8h_00 = piVar5[1] + -2 >> 1;\n            arg_8h = fcn.00411777(arg_8h_00);\n            cVar2 = fcn.0043332a(*piVar5 + 4, arg_8h);\n            if (cVar2 != '\\0') goto code_r0x004674a0;\n            fcn.0041137c(arg_8h);\n        }\n        arg_8h_00 = piVar5[1];\n        if (arg_8h_00 != 0) {\n            arg_8h = fcn.00411777(arg_8h_00);\n            fcn.00442c49(&var_1ch, arg_8h_00);\n            fcn.004581ef(piVar5, &var_1ch);\n            fcn.00411000(arg_8h, var_1ch, arg_8h_00);\n            fcn.00401350();\n            goto code_r0x004674a0;\n        }\n        goto code_r0x0046750e;\n    case 0x46747f:\n        uVar3 = *arg_8h;\n        goto code_r0x00467486;\n    case 0x4674cf:\n        _var_ch = *arg_8h;\n        arg_8h_00 = 8;\n        break;\n    case 0x4674e1:\n        _var_ch = *arg_8h;\n        arg_8h_00 = 8;\n        break;\n    case 0x4674ed:\n        arg_8h_00 = 1;\n        _var_ch = _var_ch & 0xffffffffffffff00 | *arg_8h;\n        break;\n    case 0x4674f9:\n        uVar3 = *(*arg_8h + 4);\ncode_r0x00467486:\n        arg_8h_00 = 4;\n        _var_ch = _var_ch & 0xffffffff00000000 | uVar3;\n        break;\n    case 0x467505:\n        fcn.0040e5e0();\n    case 0x46750c:\ncode_r0x0046750c:\n        arg_8h_00 = 0;\ncode_r0x0046750e:\n        arg_8h = fcn.00411777(1);\n        *arg_8h = 0;\n        goto code_r0x004674a0;\n    }\n    arg_8h = fcn.00411777(arg_8h_00);\n    fcn.00411000(arg_8h, &var_ch, arg_8h_00);\ncode_r0x004674a0:\n    piVar5 = fcn.00411777(8);\n    *puVar1 = piVar5;\n    *piVar5 = arg_8h_00;\n    *(*puVar1 + 4) = arg_8h;\n    fcn.00404030();\n    *(puVar1 + 1) = 0xb;\n    return 1;\n}\n",
        "token_count": 992
    },
    "00402710": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint fcn.00402710(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint32_t uVar6;\n    ushort uStack1600;\n    int16_t aiStack1598 [7];\n    uchar auStack1584 [516];\n    uchar auStack1068 [528];\n    uchar auStack540 [536];\n    \n    *0x4a90e8 = 0;\n    *0x4a90f0 = 0;\n    *0x4a90f4 = 0;\n    *0x4a90f8 = 0;\n    *0x4a90fc = 0;\n    *0x4a9100 = 0x484ae0;\n    *0x4a9104 = 0;\n    *0x4a9108 = 0;\n    *0x4a910c = 0;\n    *0x4a9110 = 0x484ae0;\n    *0x4a9114 = 0;\n    *0x4a9118 = 0;\n    *0x4a911c = 0;\n    *0x4a9124 = 0;\n    *0x4a912c = 0;\n    *0x4a9130 = 0x66;\n    *0x4a90ec = in_EAX;\n    *0x4a9120 = fcn.00411777(0x400);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, auStack1584, 0x104);\n    fcn.00413bbe(aiStack1598 + 1, auStack540, auStack1068, 0, 0);\n    fcn.00413c0a(auStack1068, L\"Include\", 0x104);\n    fcn.00413c4e(aiStack1598 + 1, auStack540, auStack1068, 0, 0);\n    uVar3 = fcn.00411777(0x20a);\n    *(*0x4a9120 + *0x4a9124 * 4) = uVar3;\n    iVar4 = *0x4a9124 * 4;\n    *0x4a9124 = *0x4a9124 + 1;\n    fcn.00411707(*(*0x4a9120 + iVar4), aiStack1598 + 1);\n    fcn.0040bf10();\n    cVar2 = fcn.0040dd30(&stack0xfffff9b0);\n    if (cVar2 == '\\0') {\ncode_r0x00402982:\n        fcn.00402260();\n        return 0x4a90e8;\n    }\n    uVar6 = 0;\n    aiStack1598[1] = 0;\n    do {\n        fcn.004029a0();\n        uVar1 = unaff_ESI;\n        if (uVar6 < unaff_ESI) {\n            uVar1 = uVar6;\n        }\n        uStack1600 = *(unaff_EDI + uVar1 * 2);\n        aiStack1598[0] = 0;\n        fcn.004029a0();\n        uVar1 = unaff_ESI;\n        if (uVar6 < unaff_ESI) {\n            uVar1 = uVar6;\n        }\n        if (*(unaff_EDI + uVar1 * 2) == 0) {\ncode_r0x004028f1:\n            iVar4 = fcn.00411361(aiStack1598 + 1);\n            if ((iVar4 != 0) && (iVar4 = fcn.00411361(aiStack1598 + 1),  aiStack1598[iVar4] != 0x5c)) {\n                fcn.004116d6(aiStack1598 + 1, 0x4846b4);\n            }\n            uVar3 = fcn.00411777(0x20a);\n            *(*0x4a9120 + *0x4a9124 * 4) = uVar3;\n            iVar4 = *0x4a9124 * 4;\n            *0x4a9124 = *0x4a9124 + 1;\n            fcn.0041315a(*(*0x4a9120 + iVar4), aiStack1598 + 1, 0x104);\n            aiStack1598[1] = 0;\n            piVar5 = fcn.00402150();\n            if (*piVar5 == 0) goto code_r0x00402982;\n        }\n        else {\n            fcn.004029a0();\n            uVar1 = unaff_ESI;\n            if (uVar6 < unaff_ESI) {\n                uVar1 = uVar6;\n            }\n            if (*(unaff_EDI + uVar1 * 2) == 0x3b) goto code_r0x004028f1;\n            fcn.004116d6(aiStack1598 + 1, &uStack1600);\n        }\n        uVar6 = uVar6 + 1;\n    } while( true );\n}\n",
        "token_count": 1182
    },
    "0040c8a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c8a0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (uVar1 = arg_8h[1],  arg_ch < uVar1)) {\n        if ((in_EAX == -1) || (uVar1 < arg_ch + in_EAX)) {\n            in_EAX = uVar1 - arg_ch;\n        }\n        fcn.004029a0();\n        fcn.00411000(*arg_8h + arg_ch * 2, *arg_8h + (arg_ch + in_EAX) * 2, ((arg_8h[1] - arg_ch) - in_EAX) * 2 + 2);\n        arg_8h[1] = arg_8h[1] - in_EAX;\n        return;\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0040ca90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040ca90(void)\n\n{\n    int32_t arg_8h;\n    uint var_3ch;\n    uint var_1ch;\n    uint var_4h;\n    \n    *0x4a8178 = 0x489b60;\n    *0x4a8614 = 0x484288;\n    *0x4a8618 = 0;\n    *0x4a861c = 0;\n    *0x4a8620 = 0;\n    fcn.0040de80();\n    *(*(*0x4a8178 + 4) + 0x4a8178) = 0x489b54;\n    *(*(*0x4a8178 + 4) + 0x4a8174) = *(*0x4a8178 + 4) + -0x49c;\n    *0x4a8214 = 0;\n    *0x4a8218 = 0;\n    *0x4a821c = 0;\n    fcn.00410c30();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    *0x4a8294 = 0;\n    *0x4a8298 = 0;\n    *0x4a829c = 0;\n    *0x4a82a0 = 0;\n    *0x4a82a4 = 0;\n    *0x4a82a8 = 0;\n    *0x4a82ac = 0;\n    *0x4a82b0 = 0;\n    *0x4a82b4 = 0;\n    *0x4a82b8 = 0;\n    fcn.0040bf10();\n    *0x4a82d4 = 0x489b68;\n    *0x4a82d8 = 0;\n    *0x4a82dc = 0;\n    *0x4a82e0 = 0;\n    *0x4a82e4 = 0;\n    *0x4a82e8 = 0;\n    *0x4a82ec = 0;\n    *0x4a82f0 = 0x489b68;\n    *0x4a82f4 = 0;\n    *0x4a82f8 = 0;\n    *0x4a82fc = 0;\n    *0x4a8300 = 0x489b68;\n    *0x4a8304 = 0;\n    *0x4a8308 = 0;\n    *0x4a830c = 0;\n    *0x4a8310 = 0x489b68;\n    *0x4a8314 = 0;\n    *0x4a8318 = 0;\n    *0x4a831c = 0;\n    *0x4a8320 = 0x489b68;\n    *0x4a8324 = 0;\n    *0x4a8328 = 0;\n    *0x4a832c = 0;\n    *0x4a8330 = 0;\n    *0x4a8338 = 1;\n    *0x4a833c = 0;\n    fcn.0040bf10();\n    fcn.0040d560();\n    *0x4a8458 = 0x489b68;\n    *0x4a845c = 0;\n    *0x4a8460 = 0;\n    *0x4a8464 = 0;\n    fcn.0040d370();\n    fcn.0040bf10();\n    *0x4a85d0 = 0;\n    *0x4a85d4 = 0;\n    *0x4a85d8 = 0;\n    *0x4a85e0 = 0;\n    *0x4a85e4 = 0;\n    *0x4a85e8 = 0;\n    fcn.00404420(0x4a85f4, 0);\n    *0x4a8600 = 0;\n    *0x4a8608 = 1;\n    *0x4a860c = 0;\n    fcn.00410ca0();\n    fcn.0040e680();\n    fcn.004091e0();\n    fcn.004091e0();\n    *0x4a8274 = 0;\n    *0x4a8270 = 0;\n    *0x4a8264 = 0;\n    *0x4a8268 = 0;\n    *0x4a8260 = 0;\n    *0x4a826c = 0;\n    *0x4a82c0 = 0;\n    *0x4a85dc = 0;\n    *0x4a85f8 = 0;\n    *0x4a85cc = 0;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n    if ((arg_8h == 0) || (arg_8h == -1)) {\n        *0x4a85ec = 0;\n    }\n    else {\n        *0x4a85ec = fcn.0044300a(arg_8h);\n        fcn.0044b332(*0x4a85ec);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h);\n    }\n    *0x4a8275 = 0;\n    *0x4a8277 = 0;\n    *0x4a8278 = 1;\n    *0x4a827c = 1;\n    *0x4a8280 = 1;\n    *0x4a8284 = 10;\n    *0x4a8288 = 10;\n    *0x4a828c = 0xfa;\n    *0x4a8290 = 0;\n    *0x4a844c = 1;\n    *0x4a8450 = 1;\n    *0x4a8454 = 0;\n    *0x4a846c = 0xfa;\n    *0x4a85f0 = 100;\n    return 0x4a8178;\n}\n",
        "token_count": 1416
    },
    "0040dcc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040dcc0(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    iVar1 = *unaff_ESI;\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        *unaff_ESI = 0;\n        unaff_ESI[2] = 0;\n        unaff_ESI[3] = 0;\n        unaff_ESI[4] = 0;\n        unaff_ESI[5] = 0;\n        return;\n    }\n    unaff_ESI[2] = 0;\n    unaff_ESI[3] = 0;\n    unaff_ESI[4] = 0;\n    unaff_ESI[5] = 0;\n    return;\n}\n",
        "token_count": 188
    },
    "0040e830": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040e830(void)\n\n{\n    uint unaff_ESI;\n    \n    fcn.0040f090();\n    fcn.0040c8a0(unaff_ESI, 0);\n    return;\n}\n",
        "token_count": 51
    },
    "0040e850": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040e850(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint unaff_ESI;\n    \n    iVar1 = fcn.0040f030(unaff_ESI, in_EAX);\n    if (iVar1 == -1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = iVar1 + 1;\n    }\n    fcn.0040c8a0(unaff_ESI, iVar1);\n    return;\n}\n",
        "token_count": 109
    },
    "0040f2a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f2a0(uint32_t param_1, int32_t *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    *param_2 = -1;\n    if ((param_1 & 0x2000) == 0) {\n        if ((param_1 & 1) != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*in_EAX, 0xc0000000, 7, 0, 4, 0x80, 0);\n            *param_2 = iVar1;\n            if (iVar1 == -1) {\n                return 0;\n            }\n            fcn.0040e300(0, 0, 2);\n            goto code_r0x0040f2d2;\n        }\n        if ((param_1 & 2) == 0) {\n            return 0;\n        }\n        uVar3 = 2;\n        uVar2 = 0xc0000000;\n    }\n    else {\n        uVar3 = 3;\n        uVar2 = 0x80000000;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*in_EAX, uVar2, 7, 0, uVar3, 0x80, 0);\n    *param_2 = iVar1;\ncode_r0x0040f2d2:\n    if (*param_2 == -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 355
    },
    "0040f8c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f8c0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    uint var_4h;\n    \n    if (unaff_EBX == 0) {\n        return 0;\n    }\n    if (param_1 == -1) {\n        param_1 = fcn.00411361(unaff_EBX);\n        param_1 = param_1 + 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (param_1 <= iVar1) {\n        param_1 = iVar1;\n    }\n    uVar2 = fcn.00411777(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0);\n    return uVar2;\n}\n",
        "token_count": 216
    },
    "004321af": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004321af(uint lpFileName, uint lpFilePart, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpBuffer;\n    uint lpInBuffer;\n    uint var_81ch;\n    int32_t var_816h;\n    uint var_810h;\n    int16_t aiStack528 [2];\n    uint var_208h;\n    \n    uVar2 = lpFilePart;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(lpFileName, 0x104, &lpBuffer, &lpFilePart);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    fcn.0041343b(&var_208h, L\"\\\\??\\\\%s\", &lpBuffer);\n    iVar3 = fcn.00411361(&var_208h);\n    if ((aiStack528[iVar3 + 1] == 0x5c) && (aiStack528[iVar3] != 0x3a)) {\n        aiStack528[iVar3 + 1] = 0;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(uVar2, 0);\n    if ((iVar4 == 0) && (arg_10h == '\\0')) {\n        return 0;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar2, 0x40000000, 0, 0, 3, 0x2200000, 0);\n    if (iVar4 != -1) {\n        fcn.004130e0(&lpInBuffer, 0, 0x14);\n        iVar1 = iVar3 * 2;\n        lpInBuffer = 0xa0000003;\n        var_816h = CONCAT22(iVar1 + 2, iVar1);\n        fcn.0041315a(&var_810h, &var_208h, 0x104);\n        var_81ch._0_2_ = var_816h + 0xcU;\n        iVar3 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)\n                          (iVar4, 0x900a4, &lpInBuffer, (var_816h + 0xcU & 0xffff) + 8, 0, 0, &lpFileName, 0);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            return 1;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)(uVar2);\n    return 0;\n}\n",
        "token_count": 615
    },
    "004323a2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004323a2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(arg_8h, 0x40000000, 1, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1, arg_ch, 0, arg_10h);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00432f4e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432f4e(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if (arg_8h != 0) {\n        if (arg_ch == 0xffffffff) {\n            iVar1 = fcn.004136e0(arg_8h);\n            arg_ch = iVar1 + 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, arg_8h, arg_ch, 0, 0);\n        if (uVar2 != 0) {\n            uVar3 = arg_ch;\n            if (arg_ch <= uVar2) {\n                uVar3 = uVar2;\n            }\n            uVar4 = fcn.00411777(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, arg_8h, arg_ch, uVar4, uVar2);\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 276
    },
    "004331e4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004331e4(int16_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar1 = fcn.00411361(arg_8h);\n    uVar2 = iVar1 - 1;\n    *arg_ch = 0;\n    iVar1 = 1;\n    iVar5 = 0;\n    while (-1 < uVar2) {\n        uVar3 = arg_8h[uVar2];\n        if ((uVar3 < 0x30) || (0x39 < uVar3)) {\n            if ((uVar3 < 0x41) || (0x46 < uVar3)) {\n                if ((uVar3 < 0x61) || (0x66 < uVar3)) goto code_r0x00433269;\n                iVar4 = uVar3 - 0x57;\n            }\n            else {\n                iVar4 = uVar3 - 0x37;\n            }\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        *arg_ch = *arg_ch + iVar4 * iVar1;\n        iVar5 = iVar5 + 1;\n        uVar2 = uVar2 - 1;\n        iVar1 = iVar1 << 4;\n        if (7 < iVar5) break;\n    }\n    if ((uVar2 == 0xffffffff) || (((uVar2 = arg_8h[1],  uVar2 == 0x78 || (uVar2 == 0x58)) && (*arg_8h == 0x30)))) {\n        return CONCAT31(uVar2 >> 8, 1);\n    }\ncode_r0x00433269:\n    *arg_ch = 0;\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 429
    },
    "00433276": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433276(int32_t arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_4h;\n    \n    puVar3 = arg_ch;\n    iVar4 = fcn.00411361(arg_8h);\n    iVar4 = iVar4 + -1;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch = NULL;\n    if (0 < arg_10h) {\n        while (-1 < iVar4) {\n            uVar1 = *(arg_8h + iVar4 * 2);\n            if ((((uVar1 < 0x30) || (0x39 < uVar1)) && ((uVar1 < 0x41 || (0x46 < uVar1)))) &&\n               ((uVar1 < 0x61 || (0x66 < uVar1)))) goto code_r0x004332ad;\n            uVar5 = fcn.00420aa0();\n            uVar2 = *puVar3;\n            *puVar3 = *puVar3 + uVar5;\n            puVar3[1] = puVar3[1] + (uVar5 >> 0x20) + CARRY4(uVar2, uVar5);\n            arg_ch = arg_ch + 1;\n            iVar4 = iVar4 + -1;\n            if (arg_10h <= arg_ch) break;\n        }\n    }\n    if (iVar4 == -1) {\n        return 1;\n    }\ncode_r0x004332ad:\n    puVar3[1] = 0;\n    *puVar3 = 0;\n    return 0;\n}\n",
        "token_count": 409
    },
    "00433f41": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433f41(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(lpFileName);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 86
    },
    "00433f5f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00433f5f(uint lpFileName)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uchar auStack604 [600];\n    \n    puVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(lpFileName);\n    if (puVar1 == 0xffffffff) {\n        puVar1 = auStack604;\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName);\n        if (iVar2 == -1) {\n            return 0xffffffff;\n        }\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n    }\n    return puVar1;\n}\n",
        "token_count": 145
    },
    "00433fa3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00433fa3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00433f5f(arg_8h);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 67
    },
    "0043655c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043655c(uint *arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint arg_10h_00;\n    uint var_a8h;\n    uint var_28h;\n    uint32_t var_1ch;\n    uint var_18h;\n    \n    fcn.004107b0();\n    var_1ch = -(arg_ch != '\\0') & 2;\n    var_18h = 2;\n    arg_10h_00 = fcn.00434990(&var_a8h, 0x28, *arg_8h);\n    fcn.004348fc(&var_a8h, &var_28h, arg_10h_00, 0x28);\n    if (arg_10h == -1) {\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x102b, 0xffffffff, arg_10h_00);\n    }\n    else if (arg_10h <= arg_14h) {\n        do {\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x102b, arg_10h, arg_10h_00);\n            arg_10h = arg_10h + 1;\n        } while (arg_10h <= arg_14h);\n        fcn.004107d0();\n        return 1;\n    }\n    fcn.004107d0();\n    return 1;\n}\n",
        "token_count": 336
    },
    "00436748": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436748(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x130b, 0, 0);\n    *arg_ch = iVar1;\n    if (iVar1 == -1) {\n        return 0xffffff00;\n    }\n    *arg_ch = iVar1 + 1;\n    return CONCAT31(iVar1 + 1 >> 8, 1);\n}\n",
        "token_count": 121
    },
    "0044057c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0044057c(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if (arg_24h == -1) {\n        arg_24h = 0x100;\n    }\n    if (arg_28h == -1) {\n        arg_28h = 0;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 0x96;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    iVar3 = fcn.00430817(arg_8h, arg_28h, L\"static\", 0x483f68, arg_24h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_10h, 1);\n    *arg_ch = iVar3;\n    if (iVar3 != 0) {\n        *(arg_ch + 0x20) = arg_14h;\n        *(arg_ch + 0x82) = arg_18h;\n        *(arg_ch + 0x21) = arg_1ch;\n        *(arg_ch + 0x86) = arg_20h;\n        arg_ch[0x12] = -1;\n        piVar4 = fcn.00411777(0x910);\n        piVar4[3] = 0;\n        piVar4[1] = 0;\n        arg_ch[0x1e] = piVar4;\n        piVar4[2] = arg_ch;\n        *piVar4 = 0;\n        ppiVar1 = *(arg_8h + 0x1cc);\n        if (ppiVar1 != NULL) {\n            piVar2 = *ppiVar1;\n            while (piVar2 != NULL) {\n                ppiVar1 = *ppiVar1;\n                piVar2 = *ppiVar1;\n            }\n            *ppiVar1 = piVar4;\n            *(arg_ch + 0x7e) = *(arg_ch + 0x7e) | 0x300;\n            return 0x301;\n        }\n        *(arg_8h + 0x1cc) = piVar4;\n        *(arg_ch + 0x7e) = *(arg_ch + 0x7e) | 0x300;\n        return 0x301;\n    }\n    return 0;\n}\n",
        "token_count": 621
    },
    "00440a2e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440a2e(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_18h != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_18h);\n    }\n    if (*0x4a869c != -1) {\n        iVar1 = **(*0x4a8690 + *0x4a869c * 4);\n        *(iVar1 + 0x58) = arg_8h;\n        *(iVar1 + 0x5c) = arg_ch;\n        if (0 < arg_10h) {\n            *(iVar1 + 0x60) = arg_10h;\n        }\n        if (0 < arg_14h) {\n            *(iVar1 + 100) = arg_14h;\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 235
    },
    "00440d14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440d14(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    if (arg_10h != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_10h);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongW;\n    if (*0x4a869c != -1) {\n        uVar3 = ***(*0x4a8690 + *0x4a869c * 4);\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar3, 0xfffffff0);\n        *arg_8h = uVar2;\n        uVar3 = (*pcVar1)(uVar3, 0xffffffec);\n        *arg_ch = uVar3;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 228
    },
    "0044105d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044105d(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_8h);\n    }\n    if (*0x4a869c != -1) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(***(*0x4a8690 + *0x4a869c * 4));\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "004411b1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004411b1(int32_t arg_8h, uint hdc)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    \n    iVar1 = **(*0x4a8690 + arg_8h * 4);\n    arg_8h_00 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    iVar1 = *(iVar1 + 0x4c);\n    if (iVar1 != -1) {\n        arg_8h_00 = iVar1;\n    }\n    (*_sym.imp.GDI32.dll_SetBkColor)(hdc, arg_8h_00);\n    fcn.0044112e(arg_8h_00, 0);\n    return;\n}\n",
        "token_count": 168
    },
    "004411f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004411f0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    \n    if (arg_10h != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_10h);\n    }\n    if (*0x4a869c != -1) {\n        puVar1 = **(*0x4a8690 + *0x4a869c * 4);\n        puVar1[4] = arg_8h;\n        puVar1[5] = arg_ch;\n        (*_sym.imp.USER32.dll_PostMessageW)(*puVar1, 0x20, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00443099": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00443099(uint32_t *arg_8h, int32_t **arg_ch, uint arg_10h)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_ch;\n    var_ch = 0xc;\n    var_4h = 0;\n    var_8h = 0;\n    if ((*arg_8h & 0x10) != 0) {\n        piVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        *arg_8h_00 = piVar1;\n        if (piVar1 == 0xffffffff) {\ncode_r0x004430e9:\n            *arg_8h_00 = NULL;\n            return *arg_8h_00;\n        }\ncode_r0x004430d4:\n        fcn.00432ba7(piVar1, arg_8h_00, 1);\n        return *arg_8h_00;\n    }\n    if ((*arg_8h & 1) == 0) {\n        piVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        *arg_8h_00 = piVar1;\n        if ((piVar1 != NULL) && (piVar1 != 0xffffffff)) goto code_r0x004430d4;\n        piVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x487108, 0x80000000, 1, &var_ch, 3, 0x80, 0);\n        *arg_8h_00 = piVar1;\n        if ((piVar1 == 0xffffffff) || (piVar1 == NULL)) goto code_r0x004430e9;\n    }\n    else {\n        if (*arg_ch != NULL) {\n            return *arg_ch;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreatePipe)(arg_ch, arg_10h, &var_ch, 0);\n        if (iVar2 == 0) {\n            return 0xffffffff;\n        }\n    }\n    fcn.00432ba7(*arg_8h_00, &arg_ch, 1);\n    fcn.00432bdb(arg_8h_00);\n    *arg_8h_00 = arg_ch;\n    return arg_ch;\n}\n",
        "token_count": 557
    },
    "0044318c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.0044318c(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, int32_t **arg_14h, uint arg_18h)\n\n{\n    int32_t **arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_14h;\n    var_ch = 0xc;\n    var_4h = 0;\n    var_8h = 0;\n    if ((*arg_8h & 0x10) != 0) {\n        piVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(arg_10h);\n        *arg_8h_00 = piVar1;\n        if (piVar1 == 0xffffffff) {\ncode_r0x004431de:\n            *arg_8h_00 = NULL;\n            return *arg_8h_00;\n        }\ncode_r0x004431c9:\n        fcn.00432ba7(piVar1, arg_8h_00, 1);\n        return *arg_8h_00;\n    }\n    if ((arg_ch & *arg_8h) == 0) {\n        piVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(arg_10h);\n        *arg_8h_00 = piVar1;\n        if ((piVar1 != NULL) && (piVar1 != 0xffffffff)) goto code_r0x004431c9;\n        piVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x487108, 0x40000000, 2, &var_ch, 3, 0x80, 0);\n        *arg_8h_00 = piVar1;\n        if ((piVar1 == 0xffffffff) || (piVar1 == NULL)) goto code_r0x004431de;\n    }\n    else {\n        if (*arg_14h != NULL) {\n            return *arg_14h;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreatePipe)(arg_18h, arg_14h, &var_ch, 0);\n        if (iVar2 == 0) {\n            return 0xffffffff;\n        }\n    }\n    fcn.00432ba7(*arg_8h_00, &arg_14h, 1);\n    fcn.00432bdb(arg_8h_00);\n    *arg_8h_00 = arg_14h;\n    return arg_14h;\n}\n",
        "token_count": 585
    },
    "004436a7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004436a7(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x497520;\n    if (arg_8h != -1) {\n        *0x497534 = 0;\n        *0x497530 = 0x10;\n        *0x49752c = 0x10;\n        *0x497528 = arg_8h;\n        (*_sym.imp.KERNEL32.dll_EnumResourceNamesW)(0, 0xe, fcn.00433608, 99);\n        if (*0x497534 != 0) {\n            return;\n        }\n    }\n    (*_sym.imp.USER32.dll_LoadImageW)(uVar1, 99, 1, 0x10, 0x10, 0);\n    return;\n}\n",
        "token_count": 186
    },
    "004440a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004440a8(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t arg_ch_00;\n    \n    piVar1 = arg_ch;\n    arg_ch_00 = *(arg_8h + 4) + -1;\n    *arg_ch = 0;\n    iVar4 = 1;\n    arg_ch = NULL;\n    while (-1 < arg_ch_00) {\n        puVar2 = fcn.004362b4(arg_8h, arg_ch_00);\n        uVar3 = *puVar2;\n        if ((uVar3 < 0x30) || (0x39 < uVar3)) {\n            if ((uVar3 < 0x41) || (0x46 < uVar3)) {\n                if ((uVar3 < 0x61) || (0x66 < uVar3)) goto code_r0x0044412a;\n                *piVar1 = *piVar1 + (uVar3 - 0x57) * iVar4;\n            }\n            else {\n                *piVar1 = *piVar1 + (uVar3 - 0x37) * iVar4;\n            }\n        }\n        else {\n            *piVar1 = *piVar1 + (uVar3 - 0x30) * iVar4;\n        }\n        arg_ch = arg_ch + 1;\n        arg_ch_00 = arg_ch_00 + -1;\n        iVar4 = iVar4 << 4;\n        if (7 < arg_ch) break;\n    }\n    if (arg_ch_00 == -1) {\n        return 1;\n    }\ncode_r0x0044412a:\n    *piVar1 = 0;\n    return 0;\n}\n",
        "token_count": 417
    },
    "00444c53": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444c53(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t arg_ch_00;\n    int32_t iVar4;\n    \n    arg_ch_00 = 0;\n    iVar4 = 0;\n    if ((arg_ch[1] != -1) && (*arg_ch != -1)) {\n        arg_ch_00 = arg_ch[1];\n        iVar4 = *arg_ch;\n    }\n    iVar1 = arg_10h[1];\n    if (iVar1 <= arg_ch_00) {\n        *arg_10h = iVar4;\n        return;\n    }\n    do {\n        puVar2 = fcn.00435038(arg_8h, arg_ch_00);\n        iVar3 = fcn.00435056(*puVar2);\n        arg_ch_00 = arg_ch_00 + iVar3;\n        iVar4 = iVar4 + 1;\n    } while (arg_ch_00 < iVar1);\n    *arg_10h = iVar4;\n    return;\n}\n",
        "token_count": 259
    },
    "00444cb2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444cb2(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t arg_ch_00;\n    \n    iVar1 = 0;\n    arg_ch_00 = 0;\n    if ((arg_ch[1] != -1) && (*arg_ch != -1)) {\n        iVar1 = *arg_ch;\n        arg_ch_00 = arg_ch[1];\n    }\n    if (iVar1 < *arg_10h) {\n        iVar1 = *arg_10h - iVar1;\n        do {\n            puVar2 = fcn.00435038(arg_8h, arg_ch_00);\n            iVar3 = fcn.00435056(*puVar2);\n            arg_ch_00 = arg_ch_00 + iVar3;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    arg_10h[1] = arg_ch_00;\n    return;\n}\n",
        "token_count": 244
    },
    "004476c4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004476c4(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00431228(0x4a8630, arg_8h);\n    puVar1 = **(*0x4a8690 + iVar2 * 4);\n    if (*arg_ch == 4) {\n        iVar2 = fcn.00441878(0x4a8630, arg_ch[5]);\n        if (iVar2 != -1) {\n            fcn.004414bb(arg_ch, **(*0x4a86a4 + iVar2 * 4));\n            if ((*(arg_ch + 4) & 0x10) != 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0x401, iVar2, 0);\n                return;\n            }\n            puVar1[0x72] = 0;\n            return;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x2b, arg_ch[1], arg_ch);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "004477b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004477b0(uint arg_8h)\n\n{\n    uint *arg_ch;\n    char cVar1;\n    int32_t iVar2;\n    uint hdc;\n    int32_t iVar3;\n    int32_t arg_ch_00;\n    uint *puVar4;\n    uint uVar5;\n    uint *puVar6;\n    uchar auStack88 [8];\n    uint auStack80 [19];\n    \n    iVar2 = fcn.00431228(0x4a8630, arg_8h);\n    puVar4 = **(*0x4a8690 + iVar2 * 4);\n    uVar5 = *puVar4;\n    arg_ch = puVar4[0x73];\n    puVar6 = &stack0xffffffb0;\n    hdc = (*_sym.imp.USER32.dll_BeginPaint)(uVar5, puVar6);\n    for (; arg_ch != NULL; arg_ch = *arg_ch) {\n        iVar2 = arg_ch[2];\n        if ((((*(iVar2 + 0x8a) & 0x10) != 0) && (*(iVar2 + 0x8b) == -1)) || (*(iVar2 + 0x8b) == puVar4[0x65])) {\n            *0x4a86f4 = 0xffffffff;\n            *0x4a86f8 = 0xffffffff;\n            *0x4a86ec = 0;\n            *0x4a86e8 = 0;\n            *0x4a86e4 = 0;\n            *0x4a86f0 = 1;\n            (*_sym.imp.USER32.dll_GetWindowRect)(*arg_ch[2], &stack0xffffff98);\n            (*_sym.imp.USER32.dll_ScreenToClient)(*puVar4, &stack0xffffff88);\n            (*_sym.imp.GDI32.dll_SetViewportOrgEx)(hdc, uVar5, puVar6, 0);\n            iVar2 = *(arg_ch[2] + 0x44);\n            arg_ch_00 = *(arg_ch[2] + 0x48);\n            iVar3 = arg_ch_00;\n            if (((-1 < iVar2) && (iVar3 = iVar2,  arg_ch_00 != -1)) ||\n               ((arg_ch_00 = iVar3,  iVar3 != -1 || (-1 < iVar2)))) {\n                fcn.00446da3(hdc, arg_ch_00, iVar2, 0, 1);\n                (*_sym.imp.GDI32.dll_Rectangle)(hdc, 0, 0, *(arg_ch[2] + 0x84), *(arg_ch[2] + 0x86));\n                fcn.0043035c(hdc, iVar2);\n            }\n            cVar1 = fcn.00446f57(hdc, arg_ch);\n            puVar6 = 0x4478fa;\n            uVar5 = hdc;\n            puVar4 = arg_ch;\n            fcn.00447315(hdc, arg_ch);\n            if (cVar1 != '\\0') {\n                uVar5 = hdc;\n                puVar6 = arg_ch;\n                fcn.004471d4(hdc, arg_ch);\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_EndPaint)(*puVar4, &stack0xffffffa8);\n    return;\n}\n",
        "token_count": 734
    },
    "004481f2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004481f2(uint *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint item)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lpmi;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    iVar4 = arg_14h;\n    iVar1 = arg_ch;\n    lpmi = 0x30;\n    fcn.004130e0(&var_2ch, 0, 0x2c);\n    if (iVar4 == -1) {\n        iVar4 = arg_8h[0x68];\n        if (iVar4 == 0) {\n            uVar3 = (*_sym.imp.USER32.dll_CreateMenu)();\n            arg_8h[0x68] = uVar3;\n            (*_sym.imp.USER32.dll_SetMenu)(*arg_8h, uVar3);\n            iVar4 = arg_8h[0x68];\n            arg_8h[0x6a] = iVar4;\n        }\n        *(iVar1 + 8) = iVar4;\n    }\n    else {\n        cVar2 = fcn.004417f1(0x4a8630, iVar4, &arg_14h, &arg_ch);\n        if (cVar2 == '\\0') {\n            return 0;\n        }\n        arg_8h = **(*0x4a8690 + arg_14h * 4);\n        *(iVar1 + 8) = *(**(*0x4a86a4 + arg_ch * 4) + 8);\n        if (*(**(*0x4a86a4 + arg_ch * 4) + 0x88) != '\\f') {\n            var_2ch = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*(iVar1 + 8), iVar4, 0, &lpmi);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(iVar1 + 8) = var_1ch;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IsMenu)(*(iVar1 + 8));\n        if (iVar4 == 0) {\n            return 0;\n        }\n    }\n    iVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n    if (iVar4 == 0) {\n        return 0;\n    }\n    var_ch = arg_18h;\n    var_20h = arg_10h;\n    var_2ch = 0x16;\n    var_28h = 0;\n    var_1ch = iVar4;\n    (*_sym.imp.USER32.dll_InsertMenuItemW)(*(iVar1 + 8), item, 1, &lpmi);\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*arg_8h);\n    arg_8h[0x6a] = iVar4;\n    return 1;\n}\n",
        "token_count": 691
    },
    "00449bb6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449bb6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    \n    iVar1 = arg_ch;\n    if (*0x4a869c == -1) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = ***(*0x4a8690 + *0x4a869c * 4);\n    }\n    arg_ch = fcn.00431228(0x4a8630, arg_8h);\n    if (arg_ch != -1) {\n        if (iVar1 == -1) {\n            *0x4a869c = arg_ch;\n            return uVar4;\n        }\n        *0x4a869c = arg_ch;\n        cVar3 = fcn.004417f1(0x4a8630, iVar1, &arg_ch, &arg_8h);\n        if (cVar3 != '\\0') {\n            iVar1 = **(*0x4a86a4 + arg_8h * 4);\n            iVar2 = **(*0x4a8690 + arg_ch * 4);\n            if (*(iVar1 + 0x88) == '\\v') {\n                *(iVar2 + 0x19c) = 1;\n                *(iVar2 + 0x194) = *(iVar1 + 0x8b);\n                return uVar4;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "0044abde": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044abde(uint arg_8h, int32_t arg_ch)\n\n{\n    ushort uStack8196;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.00422880();\n    uStack16 = 0;\n    uStack8196 = 0;\n    uStack20 = 0xfff;\n    if (arg_ch == -1) {\n        puStack24 = &stack0xffffdffc;\n        uStack28 = 0;\n        iStack32 = 0x44ac15;\n        arg_ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        puStack24 = &stack0xffffdffc;\n        uStack28 = 0;\n    }\n    uStack36 = 0;\n    uStack40 = 0x1000;\n    uStack44 = 0x44ac2e;\n    iStack32 = arg_ch;\n    (*_sym.imp.KERNEL32.dll_FormatMessageW)();\n    uStack44 = 0x44ac39;\n    fcn.00401c30();\n    return arg_8h;\n}\n",
        "token_count": 283
    },
    "0044c5e5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c5e5(int32_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    if ((arg_14h != 0) && (uVar1 = arg_ch[1],  arg_10h < uVar1)) {\n        if ((arg_14h == -1) || (uVar1 < arg_10h + arg_14h)) {\n            arg_14h = uVar1 - arg_10h;\n        }\n        cVar2 = fcn.00434ff6(arg_8h);\n        if (cVar2 == '\\0') {\n            fcn.0044c572(arg_8h, arg_14h);\n        }\n        else {\n            *arg_8h[3] = *arg_8h[3] + -1;\n            fcn.0043500b(arg_8h);\n            iVar3 = fcn.00444b08(arg_14h + 1);\n            arg_8h[2] = iVar3;\n            iVar3 = fcn.00411777(iVar3);\n            *arg_8h = iVar3;\n        }\n        arg_8h[1] = arg_14h;\n        fcn.00411000(*arg_8h, *arg_ch + arg_10h, arg_14h);\n        *(arg_14h + *arg_8h) = 0;\n        return;\n    }\n    fcn.0044c53e(arg_8h);\n    return;\n}\n",
        "token_count": 370
    },
    "00451124": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451124(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_10h);\n    }\n    if ((*0x4a869c != -1) && (arg_8h + 0xdU < 0xe)) {\n        fcn.0040e410(arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 127
    },
    "0045127e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045127e(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    double in_stack_00000018;\n    \n    if (arg_18h != 0) {\n        *0x4a869c = fcn.00431228(0x4a8630, arg_18h);\n    }\n    if (*0x4a869c != -1) {\n        iVar1 = **(*0x4a8690 + *0x4a869c * 4);\n        if (*0x48bdc8 != in_stack_00000018) {\n            uVar2 = fcn.00426200();\n            *(iVar1 + 0x7c) = uVar2;\n        }\n        if (arg_8h != -1) {\n            *(iVar1 + 0x80) = arg_8h;\n        }\n        if (arg_10h != -1) {\n            *(iVar1 + 0x84) = arg_10h;\n        }\n        fcn.0040e410(arg_ch);\n        *(iVar1 + 0x88) = arg_14h;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 297
    },
    "00453ba2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453ba2(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (((arg_10h != 0) && (arg_10h != -1)) && (arg_ch != 0)) {\n        cVar1 = fcn.00434ff6(arg_8h);\n        if (cVar1 == '\\0') {\n            fcn.0044c572(arg_8h, arg_10h);\n        }\n        else {\n            *arg_8h[3] = *arg_8h[3] + -1;\n            fcn.0043500b(arg_8h);\n            iVar2 = fcn.00444b08(arg_10h + 1);\n            arg_8h[2] = iVar2;\n            iVar2 = fcn.00411777(iVar2);\n            *arg_8h = iVar2;\n        }\n        arg_8h[1] = arg_10h;\n        fcn.00411000(*arg_8h, arg_ch, arg_10h);\n        *(arg_10h + *arg_8h) = 0;\n        return;\n    }\n    fcn.0044c53e(arg_8h);\n    return;\n}\n",
        "token_count": 297
    },
    "0045ca6b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ca6b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint lpFileName;\n    uint32_t uVar1;\n    \n    fcn.0040bf10();\n    lpFileName = fcn.00452e81(**(arg_8h + 4));\n    uVar1 = fcn.00433f5f(lpFileName);\n    if (uVar1 == 0xffffffff) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n    }\n    else {\n        if ((uVar1 & 1) != 0) {\n            fcn.0040d510();\n        }\n        if ((uVar1 & 0x20) != 0) {\n            fcn.0040d510();\n        }\n        if ((uVar1 & 4) != 0) {\n            fcn.0040d510();\n        }\n        if ((uVar1 & 2) != 0) {\n            fcn.0040d510();\n        }\n        if (uVar1 < '\\0') {\n            fcn.0040d510();\n        }\n        if ((uVar1 & 0x10) != 0) {\n            fcn.0040d510();\n        }\n        if ((uVar1 & 0x1000) != 0) {\n            fcn.0040d510();\n        }\n        if ((uVar1 & 0x800) != 0) {\n            fcn.0040d510();\n        }\n        if ((uVar1 & 0x100) != 0) {\n            fcn.0040d510();\n        }\n    }\n    fcn.0040e870();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 393
    },
    "0045d949": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045d949(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uchar *puVar3;\n    uchar auStack600 [12];\n    uint uStack588;\n    uint uStack584;\n    \n    arg_8h_00 = **(arg_8h + 4);\n    puVar3 = auStack600;\n    uVar1 = fcn.00452e81(arg_8h_00);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uVar1, arg_8h_00, puVar3);\n    if (iVar2 == -1) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n    fcn.004091e0();\n    *arg_ch = uStack584;\n    arg_ch[1] = uStack588;\n    arg_ch[2] = 2;\n    return 0;\n}\n",
        "token_count": 271
    },
    "00460e76": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460e76(int32_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_14h != 0) && (uVar2 = arg_ch[1],  arg_10h < uVar2)) {\n        if ((arg_14h == -1) || (uVar2 < arg_10h + arg_14h)) {\n            arg_14h = uVar2 - arg_10h;\n        }\n        cVar1 = fcn.00434ff6(arg_8h);\n        if (cVar1 == '\\0') {\n            fcn.00403e80();\n        }\n        else {\n            *arg_8h[3] = *arg_8h[3] + -1;\n            fcn.004013a0();\n            uVar2 = fcn.00446220(arg_14h + 1);\n            arg_8h[2] = uVar2;\n            iVar3 = fcn.00411777(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            *arg_8h = iVar3;\n        }\n        arg_8h[1] = arg_14h;\n        fcn.00411000(*arg_8h, *arg_ch + arg_10h * 2, arg_14h * 2);\n        *(arg_14h * 2 + *arg_8h) = 0;\n        return;\n    }\n    fcn.0040c8a0(arg_8h, 0);\n    return;\n}\n",
        "token_count": 389
    },
    "00460f20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460f20(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    fcn.0040bf10();\n    uVar1 = *(arg_8h + 4);\n    if (uVar1 < arg_10h) {\n        arg_10h = uVar1;\n    }\n    if ((arg_14h == 0xffffffff) || (uVar1 - arg_10h < arg_14h)) {\n        arg_14h = uVar1 - arg_10h;\n    }\n    fcn.00460e76(arg_ch, arg_8h, arg_10h, arg_14h);\n    return arg_ch;\n}\n",
        "token_count": 175
    },
    "00462713": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00462713(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t *arg_ch_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *0x4a869c;\n    if (arg_8h != 0) {\n        iVar2 = fcn.00431228(0x4a8630, arg_8h);\n    }\n    if (iVar2 != -1) {\n        arg_ch_00 = **(*0x4a8690 + iVar2 * 4);\n        if ((arg_8h == 0) && (iVar2 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  *arg_ch_00 != iVar2)) {\n            return 0;\n        }\n        fcn.00455e06(0x4a8630, arg_ch_00, 0xffffffff);\n        iVar2 = arg_ch_00[0x5f];\n        *arg_ch = arg_ch_00[0x5e];\n        iVar1 = arg_ch_00[0x60];\n        *arg_10h = iVar2;\n        iVar2 = arg_ch_00[0x61];\n        *arg_14h = iVar1;\n        *0x4a86cc = 0;\n        *0x4a86d0 = 0x7fffffff;\n        *0x4a86d4 = arg_ch_00[0x5c];\n        *arg_18h = iVar2;\n        *0x4a86d8 = arg_ch_00[0x5d];\n        (*_sym.imp.USER32.dll_EnumChildWindows)(*arg_ch_00, fcn.00430d46, 0);\n        iVar2 = *0x4a86cc;\n        *arg_1ch = -1;\n        if ((iVar2 != 0) && (iVar2 != *arg_ch_00)) {\n            iVar2 = fcn.00441878(0x4a8630, iVar2);\n            *arg_1ch = iVar2;\n            if (iVar2 != -1) {\n                return 1;\n            }\n        }\n        *arg_1ch = 0;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 536
    },
    "00462ad2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462ad2(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *arg_10h;\n    uchar *in_stack_ffffffb0;\n    uint32_t arg_14h;\n    uchar *puVar8;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    int32_t *piStack32;\n    uchar auStack28 [24];\n    \n    uVar2 = fcn.0040c8f0();\n    puVar7 = **(arg_8h + 4);\n    puVar3 = fcn.00452e60(puVar7);\n    uStack36 = puVar3[2];\n    uStack44 = *puVar3;\n    puVar6 = puVar3[1];\n    piStack32 = puVar3[3];\n    *piStack32 = *piStack32 + 1;\n    arg_14h = 0x462b21;\n    puStack40 = puVar6;\n    fcn.004013c0();\n    if (uVar2 == 8) {\n        puVar7 = NULL;\n        if (puVar6 != NULL) {\n            do {\n                puVar4 = fcn.00402150();\n                iVar5 = fcn.00434fb4(*puVar4);\n                if (iVar5 == 0) {\n                    puVar4 = fcn.00402150();\n                    fcn.004032d0(*puVar4);\n                }\n                puVar7 = puVar7 + 1;\n            } while (puVar7 < puVar6);\n        }\n    }\n    else {\n        if (((uVar2 & 1) != 0) && (puVar6 != NULL)) {\n            arg_10h = NULL;\n            puVar8 = puVar6;\n            if (puVar6 != NULL) {\n                arg_10h = NULL;\n                do {\n                    puVar4 = fcn.00402150();\n                    iVar5 = fcn.00434fb4(*puVar4);\n                    puVar8 = puVar6;\n                    if (iVar5 == 0) break;\n                    arg_10h = arg_10h + 1;\n                } while (arg_10h < puVar6);\n            }\n            puVar6 = puVar7;\n            arg_14h = puVar8 - arg_10h;\n            fcn.00460e76(&stack0xffffffe4, &stack0xffffffd4, arg_10h, arg_14h);\n            in_stack_ffffffb0 = &stack0xffffffd4;\n            fcn.0040e410(in_stack_ffffffb0);\n        }\n        if (((uVar2 & 2) != 0) && (puVar7 = puVar6,  puVar6 != NULL)) {\n            do {\n                puVar8 = puVar7;\n                puVar6 = in_stack_ffffffb0;\n                puVar7 = puVar8 + -1;\n                if (puVar7 == 0xffffffff) break;\n                puVar4 = fcn.00402150();\n                iVar5 = fcn.00434fb4(*puVar4);\n                in_stack_ffffffb0 = puVar6;\n            } while (iVar5 != 0);\n            fcn.00460e76(&stack0xffffffd0, &stack0xffffffc0, 0, puVar8);\n            fcn.0040e410(&stack0xffffffc0);\n        }\n        if (((uVar2 & 4) != 0) && (puVar6 != NULL)) {\n            fcn.0040c8a0(&stack0xffffffd0, 0);\n            bVar1 = false;\n            uVar2 = 0;\n            if (puVar6 != NULL) {\n                do {\n                    puVar4 = fcn.00402150();\n                    iVar5 = fcn.00434fb4(*puVar4);\n                    if (iVar5 == 0) {\n                        bVar1 = false;\ncode_r0x00462c75:\n                        puVar4 = fcn.00402150();\n                        fcn.004032d0(*puVar4);\n                    }\n                    else if (!bVar1) {\n                        bVar1 = true;\n                        goto code_r0x00462c75;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 < arg_14h);\n            }\n            fcn.0040e410(&stack0xffffffd4);\n        }\n    }\n    fcn.0040e870();\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1069
    },
    "00464bc1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464bc1(uint arg_8h, ushort *arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint var_10h;\n    \n    *arg_ch = 2;\n    puVar3 = fcn.00459fa1(arg_10h, &var_10h);\n    iVar4 = (*_sym.imp.WSOCK32.dll_inet_addr)(*puVar3);\n    fcn.00401350();\n    if (iVar4 == -1) {\n        cVar1 = fcn.0044ca16(arg_10h, 0x48a33c);\n        if (cVar1 != '\\0') {\n            arg_8h_00 = 1;\n            goto code_r0x00464c13;\n        }\n    }\n    *(arg_ch + 2) = iVar4;\n    if (arg_14h - 1U < 0xffff) {\n        uVar2 = (*_sym.imp.WSOCK32.dll_htons)(arg_14h);\n        arg_ch[1] = uVar2;\n        return 1;\n    }\n    arg_8h_00 = 2;\ncode_r0x00464c13:\n    fcn.00403f40(arg_8h_00, 0);\n    return 0;\n}\n",
        "token_count": 325
    },
    "00464d64": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464d64(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint *arg_ch_00;\n    uint var_10h;\n    \n    uVar4 = **(arg_8h + 4);\n    fcn.0040c8f0();\n    uVar2 = fcn.00452e60(uVar4);\n    arg_ch_00 = &var_10h;\n    cVar1 = fcn.00464bc1(in_ECX, arg_ch_00, uVar2, uVar4);\n    if (cVar1 != '\\0') {\n        iVar3 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 6);\n        if (iVar3 == -1) {\n            uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n            fcn.00403f40(uVar4, arg_ch_00);\n        }\n        else {\n            iVar5 = (*_sym.imp.WSOCK32.dll_connect)(iVar3, &var_10h, 0x10);\n            if (iVar5 == 0) {\n                fcn.004091e0();\n                *arg_ch = iVar3;\n                arg_ch[2] = 1;\n                return 0;\n            }\n            uVar2 = 0;\n            uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            fcn.00403f40(uVar4, uVar2);\n            (*_sym.imp.WSOCK32.dll_closesocket)(iVar3);\n        }\n    }\n    fcn.004091e0();\n    *arg_ch = -1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 421
    },
    "00464e25": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464e25(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uchar *puVar5;\n    uchar *arg_8h_00;\n    uchar *puStack608;\n    uint uStack604;\n    int32_t iStack600;\n    uchar auStack548 [4];\n    uchar auStack544 [4];\n    uint32_t uStack540;\n    uint uStack536;\n    uint uStack528;\n    uint uStack524;\n    int32_t iStack520;\n    uint uStack516;\n    uint uStack512;\n    uchar auStack508 [4];\n    uint uStack504;\n    int32_t iStack500;\n    uchar auStack496 [4];\n    uint uStack492;\n    int32_t iStack488;\n    int32_t iStack480;\n    \n    uStack524 = 0;\n    uStack516 = 0;\n    uStack512 = 0;\n    uStack504 = 0;\n    uStack536 = 0;\n    uStack528 = 0;\n    uStack540 = *(arg_8h + 8);\n    iStack500 = 4000;\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    if ((1 < uStack540) && (iVar2 = fcn.0040c8f0(),  0 < iVar2)) {\n        iStack500 = fcn.0040c8f0();\n    }\n    cVar1 = fcn.00431889(&stack0xfffffdf4);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(4, 0);\n        goto code_r0x00464ebf;\n    }\n    iVar2 = (*_sym.imp.WSOCK32.dll_WSAStartup)();\n    if (iVar2 != 0) {\n        fcn.00403f40(4, 0);\n        goto code_r0x0046514f;\n    }\n    fcn.0040d610();\n    uVar3 = fcn.00452e60(**(arg_8h + 4));\n    fcn.004581ef(uVar3, &stack0xfffffe04);\n    uStack528 = (*_sym.imp.WSOCK32.dll_inet_addr)();\n    iStack600 = 0x464f48;\n    iStack480 = (*_sym.imp.WSOCK32.dll_gethostbyname)();\n    if (iStack480 == 0) {\ncode_r0x00464fd9:\n        fcn.00403f40(4, 0);\n        fcn.00401350();\ncode_r0x00464ebf:\n        fcn.00431858(&stack0xfffffddc);\n        fcn.00431858(&stack0xfffffdf0);\n        fcn.00431858(&stack0xfffffde0);\n        return 0;\n    }\n    puVar5 = &stack0xfffffdf0;\n    cVar1 = fcn.00431889(puVar5);\n    if (((cVar1 != '\\0') && (cVar1 = fcn.0043186f(&stack0xfffffdf8),  cVar1 != '\\0')) &&\n       (cVar1 = fcn.0043183e(&stack0xfffffddc),  cVar1 != '\\0')) {\n        pcVar4 = fcn.00441ca2(&stack0xfffffde4);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != -1) {\n            fcn.004130e0();\n            iVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if (iVar2 != 0) {\n                *(iVar2 + 0x10) = &stack0xfffffe10;\n                *(iVar2 + 0xc) = 0x24;\n                if (iStack520 == -1) {\n                    iStack520 = ***(iStack500 + 0xc);\n                }\n                puStack608 = &stack0xfffffe10;\n                arg_8h_00 = &stack0xfffffdd0;\n                iStack600 = 0;\n                uStack604 = 0x24;\n                pcVar4 = fcn.00441c5c(arg_8h_00);\n                (*pcVar4)(arg_8h_00, puVar5, iStack520);\n                fcn.00411000(&stack0xfffffe10, iVar2, 0x1c);\n    // switch table (17 cases) at 0x465179\n                switch(uStack492) {\n                case 0x2afa:\n                case 0x2afb:\n                case 0x2afc:\n                case 0x2afd:\n                    uVar3 = 2;\n                    break;\n                case 0x2afe:\n                case 0x2aff:\n                case 0x2b00:\n                case 0x2b01:\n                case 0x2b03:\n                case 0x2b04:\n                case 0x2b05:\n                case 0x2b06:\n                case 0x2b07:\n                case 0x2b08:\n                case 0x2b09:\n                    uVar3 = 4;\n                    break;\n                case 0x2b02:\n                    uVar3 = 1;\n                    break;\n                case 0x2b0a:\n                    uVar3 = 3;\n                    break;\n                default:\n                    fcn.004091e0();\n                    arg_ch[2] = 1;\n                    iVar2 = iStack600;\n                    if (iStack488 == 0) {\n                        *arg_ch = 1;\n                    }\n                    else {\n                        *arg_ch = iStack488;\n                    }\n                    goto code_r0x004650e6;\n                }\n                fcn.00403f40(uVar3, 0);\ncode_r0x004650e6:\n                puVar5 = &stack0xfffffdc4;\n                uVar3 = uStack604;\n                pcVar4 = fcn.00441c7f(puVar5);\n                (*pcVar4)(puVar5, uVar3);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar2);\n                (*_sym.imp.WSOCK32.dll_WSACleanup)();\n                fcn.00401350();\n                fcn.00431858(&stack0xfffffda0);\n                fcn.00431858(&stack0xfffffdb4);\n                fcn.00431858(&stack0xfffffda4);\n                return 0;\n            }\n            pcVar4 = fcn.00441c7f(&stack0xfffffde8);\n            (*pcVar4)();\n            goto code_r0x00464fd9;\n        }\n    }\n    fcn.00403f40(4, 0);\n    fcn.00401350();\ncode_r0x0046514f:\n    fcn.00431858(&stack0xfffffdd0);\n    fcn.00431858(&stack0xfffffde4);\n    iStack600 = 0x46516d;\n    fcn.00431858(&stack0xfffffdd4);\n    return 0;\n}\n",
        "token_count": 1596
    },
    "00468ce4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468ce4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    \n    fcn.0040bf10();\n    fcn.00460e3f(arg_8h, &var_10h);\n    iVar1 = fcn.00445615(&var_10h, arg_ch);\n    if (iVar1 != -1) {\n        fcn.00402260();\n        return 1;\n    }\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 124
    },
    "0046ca49": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ca49(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    uVar1 = fcn.0040c8f0();\n    uVar2 = fcn.004679dc(*(*(arg_8h + 4) + 4));\n    uVar3 = fcn.00442e6f(*(*(arg_8h + 4) + 4));\n    iVar4 = (*_sym.imp.WSOCK32.dll_send)(uVar1, uVar2, uVar3, 0);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    if (iVar4 == -1) {\n        uVar2 = 0;\n        *arg_ch = 0;\n        uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00403f40(uVar1, uVar2);\n        return 0;\n    }\n    *arg_ch = iVar4;\n    return 0;\n}\n",
        "token_count": 258
    },
    "0047286e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047286e(int32_t arg_8h, double *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    float10 fVar4;\n    ulong uVar5;\n    uint uVar6;\n    uint uVar7;\n    \n    uVar6 = **(arg_8h + 4);\n    cVar1 = fcn.00453140(uVar6);\n    if (cVar1 != '\\0') {\n        fcn.00409120(uVar6);\n        return 0;\n    }\n    uVar7 = 0x486cfc;\n    uVar2 = fcn.00452e81(uVar6);\n    iVar3 = fcn.0041366c(uVar2, uVar6);\n    if (iVar3 == 0) {\n        uVar6 = **(arg_8h + 4);\n        uVar5 = fcn.00442d6f(uVar6);\n        iVar3 = uVar5 >> 0x20;\n        if (iVar3 + (0x7fffffff < uVar5) != 0) {\n            fcn.004091e0(uVar6, uVar7);\n            *arg_ch = uVar5;\n            *(arg_ch + 4) = iVar3;\n            *(arg_ch + 1) = 2;\n            return 0;\n        }\n        uVar2 = fcn.0040c8f0();\n        fcn.004091e0(uVar6, uVar7);\n        *arg_ch = uVar2;\n        *(arg_ch + 1) = 1;\n        return 0;\n    }\n    fVar4 = fcn.0040bd40();\n    fcn.004091e0();\n    *arg_ch = fVar4;\n    *(arg_ch + 1) = 3;\n    return 0;\n}\n",
        "token_count": 416
    },
    "00475abe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475abe(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint in_ECX;\n    uint var_14h;\n    int32_t var_4h;\n    \n    uVar4 = **(arg_8h + 4);\n    fcn.0040c8f0();\n    uVar2 = fcn.00452e60(uVar4);\n    cVar1 = fcn.00464bc1(in_ECX, &var_14h, uVar2, uVar4);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0xffffffff;\n        return 0;\n    }\n    iVar3 = (*_sym.imp.WSOCK32.dll_socket)(2, 2, 0x11);\n    var_4h = iVar3;\n    fcn.0040ea00(1);\n    if (iVar3 == -1) {\n        uVar2 = 0;\n        uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00403f40(uVar4, uVar2);\n    }\n    else {\n        iVar6 = (*_sym.imp.WSOCK32.dll_bind)(iVar3, &var_14h, 0x10);\n        uVar4 = 0;\n        if (iVar6 != -1) {\n            puVar5 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            puVar5[2] = 1;\n            *puVar5 = 0x2b594d1;\n            piVar7 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            piVar7[2] = 1;\n            *piVar7 = var_4h;\n            fcn.0040d1a0(0, 1);\n            fcn.00452e60(**(arg_8h + 4));\n            fcn.0040e870();\n            fcn.0040d1a0(0, 1);\n            fcn.00452e60(*(*(arg_8h + 4) + 4));\n            fcn.0040e870();\n            return 0;\n        }\n        uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00403f40(uVar2, uVar4);\n        (*_sym.imp.WSOCK32.dll_closesocket)(iVar3);\n    }\n    puVar5 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    puVar5[2] = 1;\n    *puVar5 = 0xffffffff;\n    return 0;\n}\n",
        "token_count": 676
    },
    "00475fbc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475fbc(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint in_ECX;\n    uint var_10h;\n    \n    iVar2 = fcn.0040d1a0(1, 1);\n    if (iVar2 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(0xffffffff, 0);\n        return 0;\n    }\n    iVar2 = fcn.0040c8f0();\n    if (iVar2 != 0x2b594d1) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(0xfffffffe, 0);\n        return 0;\n    }\n    fcn.0040d1a0(1, 1);\n    fcn.0040c8f0();\n    uVar3 = fcn.0040d1a0(1, 1);\n    uVar4 = fcn.00452e60(uVar3);\n    cVar1 = fcn.00464bc1(in_ECX, &var_10h, uVar4, uVar3);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = -1;\n        return 0;\n    }\n    fcn.0040d1a0(1, 1);\n    uVar3 = fcn.0040c8f0();\n    uVar4 = fcn.004679dc(*(*(arg_8h + 4) + 4));\n    uVar5 = fcn.00442e6f(*(*(arg_8h + 4) + 4));\n    iVar2 = (*_sym.imp.WSOCK32.dll_sendto)(uVar3, uVar4, uVar5, 0, &var_10h, 0x10);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    if (iVar2 == -1) {\n        uVar4 = 0;\n        *arg_ch = 0;\n        uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00403f40(uVar3, uVar4);\n        return 0;\n    }\n    *arg_ch = iVar2;\n    return 0;\n}\n",
        "token_count": 594
    },
    "0047945b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047945b(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint arg_8h_01;\n    int32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    uint arg_8h_02;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uStack44;\n    uint uStack40;\n    \n    fcn.00411777(0x10000);\n    fcn.0040f670();\n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n        }\n    }\n    else {\n        arg_8h_01 = **(in_ECX + 0x1d8);\n        iVar1 = (*_sym.imp.USER32.dll_GetMenu)(arg_8h_01);\n        if (iVar1 != 0) {\n            uVar7 = 3;\n            if (2 < unaff_EDI) {\n                do {\n                    iVar2 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar1);\n                    if (iVar2 == 0) {\n                        fcn.004091e0();\n                        arg_ch[2] = 1;\n                        *arg_ch = 0;\n                        fcn.0040f690();\n                        return 0;\n                    }\n                    uVar3 = iVar2 - 1;\n                    uVar6 = 0;\n                    while( true ) {\n                        (*_sym.imp.USER32.dll_GetMenuStringW)(iVar1, uVar6, uStack40, 0x7fff, 0x400);\n                        arg_8h_02 = *(*(arg_8h + 4) + -4 + unaff_ESI * 4);\n                        uVar4 = fcn.00452e81(arg_8h_02);\n                        uVar5 = fcn.00411361(uVar4);\n                        uVar4 = arg_8h_01;\n                        arg_8h_00 = fcn.00452e81(arg_8h_02);\n                        iVar2 = fcn.00413402(arg_8h_00, arg_8h_02, uVar4);\n                        if (iVar2 == 0) break;\n                        uVar6 = uVar6 + 1;\n                        if (uVar3 < uVar6) goto code_r0x004794b7;\n                    }\n                    if (uVar7 == unaff_EDI) {\n                        unaff_ESI = (*_sym.imp.USER32.dll_GetMenuItemID)(iVar1, uVar6);\n                    }\n                    else {\n                        iVar1 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar1, uVar6, uVar5);\n                        if (iVar1 == 0) goto code_r0x004794b7;\n                    }\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 <= unaff_EDI);\n                arg_8h_01 = uStack44;\n                if (unaff_ESI == -1) goto code_r0x004794b7;\n            }\n            fcn.0044370a(arg_8h_01, 1);\n            (*_sym.imp.USER32.dll_PostMessageW)(arg_8h_01, 0x111, unaff_ESI, 0);\n            fcn.0044370a(arg_8h_01, 0);\n            fcn.0043374b(*(in_ECX + 0x2f4));\n            fcn.0040f690();\n            return 0;\n        }\n    }\ncode_r0x004794b7:\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 922
    },
    "00442333": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442333(uint arg_8h)\n\n{\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 77
    },
    "0044a870": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044a870(uint arg_8h)\n\n{\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    return arg_8h;\n}\n",
        "token_count": 89
    },
    "004660d0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004660d0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    unkbyte3 Var3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.004130e0(&var_48h, 0, 0x38);\n    puVar5 = &var_4ch;\n    uVar4 = 0;\n    var_4ch = 0x7c;\n    var_2ch = 1;\n    var_38h = 1;\n    var_44h = 1;\n    var_14h = 1;\n    var_1ch = 1;\n    var_24h = 1;\n    uVar1 = fcn.00411361(arg_8h);\n    iVar2 = (*_sym.imp.WININET.dll_InternetCrackUrlW)(arg_8h, uVar1, uVar4, puVar5);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    fcn.00403e20(0);\n    fcn.00403e20(0);\n    fcn.00403e20(0);\n    fcn.00403e20(0);\n    fcn.00403e20(0);\n    fcn.00403e20(0);\n    uVar1 = fcn.0044ca6c(arg_ch + 0x40, &var_10h, arg_ch + 0x50);\n    fcn.0040e410(uVar1);\n    fcn.00402260();\n    *(arg_ch + 0x78) = var_34h;\n    *(arg_ch + 0x74) = var_40h;\n    if (var_40h != 1) {\n        Var3 = var_40h + -2 >> 8;\n        if (var_40h + -2 != 0) {\n            *(arg_ch + 0x70) = 3;\n            return CONCAT31(Var3, 1);\n        }\n        *(arg_ch + 0x70) = 2;\n        return CONCAT31(Var3, 1);\n    }\n    *(arg_ch + 0x70) = 1;\n    return 1;\n}\n",
        "token_count": 627
    },
    "0046ab63": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ab63(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uchar *puVar5;\n    uint arg_8h_00;\n    uchar *arg_ch_00;\n    int32_t *piStack148;\n    uint uStack144;\n    int32_t *piStack140;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint uStack112;\n    int32_t *piStack84;\n    uint uStack80;\n    int32_t *piStack76;\n    uchar auStack60 [16];\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    uStack112 = 0x46ab85;\n    fcn.00411777(0x8002);\n    fcn.0040f670();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040e8e0();\n    uStack112 = 0x46abcf;\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.00401c30();\n    puVar5 = &stack0xffffffd4;\n    piStack140 = 0x46abef;\n    fcn.0046338d(puVar5, &stack0xffffffc4, &stack0xffffffe4, in_stack_ffffff84, in_stack_ffffff88);\n    piStack148 = piStack84;\n    piStack140 = piStack76;\n    uStack144 = uStack80;\n    *piStack76 = *piStack76 + 1;\n    arg_ch_00 = &stack0xffffff94;\n    cVar2 = fcn.004631a8(&stack0xffffff90, arg_ch_00, 0);\n    if (cVar2 == '\\0') {\n        fcn.00403f40(2, 0);\n    }\n    else {\n        cVar2 = fcn.004362d6(&stack0xffffffa0);\n        if ((cVar2 == '\\0') &&\n           (iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(unaff_ESI, piStack140, &stack0xffffff6c), \n           piStack140 = piStack148,  iVar3 != 0)) {\n            fcn.00403f40(3, 0);\n        }\n        else {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(piStack140, piStack84, 0, puVar5 | 0x20019, &stack0xffffff70)\n            ;\n            arg_8h_00 = 0;\n            if (iVar3 == 0) {\n                puVar5 = &stack0xffffff7c;\n                iVar3 = fcn.0040c8f0(in_stack_ffffff84, puVar5, 0, &stack0xffffff80, 0);\n                iVar3 = iVar3 + -1;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)(uStack144, iVar3);\n                if (iVar4 == 0) {\n                    fcn.00452b5d(arg_ch, &stack0xffffff64);\n                    fcn.00403f80(arg_8h_00, 0);\n                    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar3);\n                }\n                else {\n                    fcn.00403f40(0xffffffff, 0);\n                    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar5);\n                }\n                if (arg_ch_00 != NULL) {\n                    (*pcVar1)(arg_ch_00);\n                }\n            }\n            else {\n                fcn.00403f40(1, 0);\n                if (arg_ch_00 != NULL) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(arg_ch_00);\n                }\n            }\n        }\n    }\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 970
    },
    "0046ad9d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ad9d(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    int32_t unaff_EDI;\n    uchar *puVar4;\n    int32_t *piStack664;\n    int32_t *piStack660;\n    uchar *arg_8h_00;\n    uint in_stack_fffffd7c;\n    uint in_stack_fffffd80;\n    uchar auStack636 [4];\n    uint32_t uStack632;\n    uint arg_8h_01;\n    int32_t *piStack612;\n    uint uStack604;\n    uchar auStack596 [8];\n    uchar auStack588 [12];\n    uint uStack576;\n    uchar auStack572 [16];\n    uchar auStack556 [552];\n    \n    uStack604 = 0;\n    uStack576 = 0xff;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040e8e0();\n    arg_8h_01 = **(arg_8h + 4);\n    uStack632 = 0x46adf6;\n    fcn.00452e81(arg_8h_01);\n    fcn.00401c30();\n    arg_8h_00 = &stack0xfffffdc4;\n    piStack660 = 0x46ae16;\n    piStack664 = unaff_EBX;\n    fcn.0046338d(arg_8h_00, &stack0xfffffdac, &stack0xfffffdd4, in_stack_fffffd7c, in_stack_fffffd80);\n    piStack660 = piStack612;\n    *piStack612 = *piStack612 + 1;\n    cVar2 = fcn.004631a8(&stack0xfffffd88, &stack0xfffffda4, unaff_EDI);\n    if (cVar2 == '\\0') {\n        fcn.00403f40(2, 0);\n    }\n    else {\n        cVar2 = fcn.004362d6(&stack0xfffffd90);\n        if ((cVar2 == '\\0') &&\n           (iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(arg_8h_01, piStack660, &stack0xfffffd68), \n           piStack660 = piStack664,  iVar3 != 0)) {\n            fcn.00403f40(3, 0);\n        }\n        else {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                              (piStack660, piStack612, 0, uStack632 | 0x20019, &stack0xfffffd70);\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            if (iVar3 == 0) {\n                puVar4 = &stack0xfffffdac;\n                iVar3 = fcn.0040c8f0(&stack0xfffffdb4, &stack0xfffffd84, 0, 0, 0, puVar4);\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(arg_8h_00, iVar3 + -1);\n                if (iVar3 == 0) {\n                    fcn.0040e8e0();\n                }\n                else {\n                    fcn.00403f40(0xffffffff, 0);\n                }\n                (*pcVar1)(puVar4);\n            }\n            else {\n                fcn.00403f40(1, 0);\n            }\n            if (unaff_EDI != 0) {\n                (*pcVar1)(unaff_EDI);\n            }\n        }\n    }\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 870
    },
    "00476eaf": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00476eaf(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_stack_ffffff90;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    \n    uVar1 = *(arg_10h + 8);\n    uStack60 = 0xffffffff;\n    uStack64 = 0xffffffff;\n    uStack52 = 0xffffffff;\n    uStack56 = 0xffffffff;\n    uStack68 = 0xffffffff;\n    uStack72 = 0xffffffff;\n    if (arg_ch == 0x15) {\n        if (uVar1 != 0) {\n            fcn.004091e0();\n            arg_14h[2] = 1;\n            *arg_14h = 0;\n            fcn.00403f40(2, 0);\n            fcn.004091e0();\n            return 1;\n        }\n    }\n    else if (0x1d < arg_ch) {\n        if (6 < uVar1) {\n            uStack72 = fcn.0040c8f0();\n        }\n        if (5 < uVar1) {\n            uStack68 = fcn.0040c8f0();\n        }\n        if (4 < uVar1) {\n            uStack64 = fcn.0040c8f0();\n        }\n        if (3 < uVar1) {\n            uStack60 = fcn.0040c8f0();\n        }\n        if (2 < uVar1) {\n            uStack56 = fcn.0040c8f0();\n        }\n        if (1 < uVar1) {\n            uStack52 = fcn.0040c8f0();\n        }\n        fcn.0040bc00();\n        uVar2 = fcn.00473295(arg_ch, 0, uStack52, uStack56, uStack60, uStack64, uStack68, uStack72, 0, in_stack_ffffff90\n                            );\n        fcn.004091e0();\n        arg_14h[2] = 1;\n        *arg_14h = uVar2;\n        iVar3 = fcn.0040c8f0();\n        if (iVar3 == 0) {\n            fcn.00403f40(1, 0);\n        }\n        if (arg_ch != 0x1d) {\n            fcn.0041137c(0);\n        }\n        fcn.004091e0();\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x00476f4c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (30 cases) at 0x47715f\n    uVar2 = (**(*(arg_ch + 0x477193) * 4 + 0x47715f))();\n    return uVar2;\n}\n",
        "token_count": 695
    },
    "0047ca9f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ca9f(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uchar *arg_18h;\n    uint *arg_1ch;\n    uint uStack40;\n    uchar auStack36 [4];\n    uchar auStack32 [4];\n    uchar auStack28 [24];\n    \n    arg_1ch = &uStack40;\n    arg_18h = auStack32;\n    *0x4974e3 = 1;\n    fcn.00464ac0(0x4a8178, ***(arg_8h + 4), auStack36, auStack28, arg_18h, arg_1ch);\n    fcn.0046f7aa(arg_1ch);\n    iVar2 = 0;\n    uStack40 = 0;\n    if (0 < *(arg_8h + 0x1c)) {\n        arg_8h_00 = arg_8h + 0x40;\n        do {\n            fcn.0046bd0c(arg_8h_00, &stack0xffffffcc);\n            fcn.00401990();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(arg_8h + 0x1c));\n    }\n    fcn.0047c1b0(0x4a8178, arg_18h + 1, 0, &stack0xffffffcc);\n    fcn.0046f754(0x4a7f34);\n    uVar1 = fcn.00442d6f(&stack0xffffffb8);\n    *0x4974e3 = 0;\n    fcn.004091e0();\n    return uVar1;\n}\n",
        "token_count": 398
    },
    "0040cda0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040cda0(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h;\n    uint extraout_ECX;\n    float10 fVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    uint *puVar12;\n    uint var_20h;\n    uint var_10h;\n    double dStack12;\n    \n    uVar3 = param_1[2];\n    iVar6 = in_EAX[2];\n    // switch table (11 cases) at 0x40ce38\n    switch(*((iVar6 + uVar3 * 0xc) * 4 + 0x4921e8)) {\n    case 1:\n        iVar6 = fcn.0040c8f0();\n        iVar7 = fcn.0040c8f0();\n        if (iVar6 == iVar7) {\n            return 1;\n        }\n        break;\n    case 2:\n        iVar9 = fcn.00442d6f(param_1);\n        iVar10 = fcn.00442d6f(in_EAX);\n        if (iVar9 == iVar10) {\n            return 1;\n        }\n        break;\n    case 3:\n        fVar8 = fcn.0040bd40();\n        dStack12 = fVar8;\n        fVar8 = fcn.0040bd40();\n        if (dStack12 == fVar8) {\n            return 1;\n        }\n        break;\n    case 4:\n        if ((iVar6 != 4) && (in_EAX[3] == 0)) {\n            fcn.00452c26(in_EAX);\n        }\n        puVar12 = in_EAX[3];\n        if ((param_1[2] != 4) && (param_1[3] == 0)) {\n            fcn.00452c26(param_1);\n        }\n        iVar6 = fcn.0040e960(*param_1[3], *puVar12);\n        if (iVar6 == 0) {\n            return 1;\n        }\n        break;\n    case 7:\n        uVar3 = fcn.0044b01e(param_1);\n        uVar2 = fcn.0044b01e(in_EAX);\n        return uVar2 & 0xffffff00 | uVar3 == uVar2;\n    case 8:\n        if (((*param_1 != 0) && (*in_EAX != 0)) && (cVar1 = fcn.0043298c(*param_1, *in_EAX),  cVar1 != '\\0')) {\n            return 1;\n        }\n        break;\n    case 9:\n        cVar1 = fcn.00442cb5(param_1);\n        uVar3 = fcn.00442cb5(in_EAX);\n        return uVar3 & 0xffffff00 | cVar1 == uVar3;\n    case 10:\n        fcn.00442d55(param_1);\n        uVar11 = fcn.00442d55(in_EAX);\n        return uVar11 & 0xffffff00 | uVar11 >> 0x20 == uVar11;\n    case 0xb:\n        if ((uVar3 == 0xb) && (iVar6 == 0xb)) {\n            uVar2 = fcn.00442e6f(param_1);\n            uVar3 = fcn.00442e6f(in_EAX);\n            if (uVar2 == uVar3) {\n                fcn.00442e6f(param_1);\n                uVar4 = fcn.004679dc(in_EAX);\n                uVar5 = fcn.004679dc(param_1);\n                iVar6 = fcn.00411b83(uVar5, param_1, uVar4);\n                return iVar6 == 0;\n            }\n        }\n        else {\n            fcn.0040bc00();\n            fcn.0040bc00();\n            fcn.004673b3(&var_20h);\n            fcn.004673b3(&var_10h);\n            iVar6 = fcn.00442e6f(&var_20h);\n            iVar7 = fcn.00442e6f(&var_10h);\n            if (iVar6 == iVar7) {\n                uVar4 = extraout_ECX;\n                uVar5 = fcn.004679dc(&var_10h);\n                puVar12 = &var_20h;\n                arg_8h = fcn.004679dc(puVar12);\n                iVar7 = fcn.00411b83(arg_8h, puVar12, uVar5);\n                fcn.004091e0(uVar4, iVar6);\n                uVar3 = fcn.004091e0();\n                return uVar3 & 0xffffff00 | iVar7 == 0;\n            }\n            fcn.004091e0();\n            uVar3 = fcn.004091e0();\n        }\n    default:\n        return uVar3 & 0xffffff00;\n    }\n    return 0;\n}\n",
        "token_count": 1177
    },
    "00442d55": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442d55(uint *arg_8h)\n\n{\n    if (arg_8h[2] == 10) {\n        return **arg_8h;\n    }\n    return 0;\n}\n",
        "token_count": 50
    },
    "004435e4": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004435e4(uint hdc, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t var_10h;\n    int32_t var_8h;\n    \n    piVar1 = arg_10h;\n    fcn.00410330();\n    fcn.0040f670();\n    uVar5 = 0;\n    arg_10h[1] = 0;\n    *arg_10h = 0;\n    var_8h = 0;\n    arg_10h = 0x1;\n    iVar2 = fcn.00411361(var_10h);\n    if (iVar2 != 0) {\n        do {\n            if (*(var_10h + uVar5 * 2) == 10) {\n                arg_10h = arg_10h + 1;\n            }\n            uVar5 = uVar5 + 1;\n            uVar3 = fcn.00411361(var_10h);\n        } while (uVar5 < uVar3);\n    }\n    iVar2 = fcn.00414068(var_10h, 0x486e80);\n    while (iVar2 != 0) {\n        piVar6 = piVar1;\n        uVar4 = fcn.00411361(iVar2);\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32W)(hdc, iVar2, uVar4, piVar6);\n        if (var_8h < *piVar1) {\n            var_8h = *piVar1;\n        }\n        iVar2 = fcn.00414068(0, 0x486e80);\n    }\n    *piVar1 = var_8h;\n    piVar1[1] = piVar1[1] * arg_10h;\n    fcn.0040f690();\n    return;\n}\n",
        "token_count": 456
    },
    "0045f0fc": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f0fc(uint arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    \n    fcn.00403600();\n    bVar1 = false;\n    while( true ) {\n        cVar2 = fcn.00443baf(arg_8h, &arg_ch);\n        if (cVar2 == '\\0') {\n            if (bVar1) {\n                return 1;\n            }\n            return 0;\n        }\n        bVar1 = true;\n        if (arg_ch == 0xd) break;\n        if (arg_ch == 10) {\n            return 1;\n        }\n        fcn.004032d0(arg_ch);\n    }\n    cVar2 = fcn.00443baf(arg_8h, &arg_ch);\n    if (cVar2 == '\\0') {\n        return 1;\n    }\n    if (arg_ch == 10) {\n        return 1;\n    }\n    fcn.0040e300(0xfffffffe, 0xffffffff, 1);\n    return 1;\n}\n",
        "token_count": 242
    },
    "00404420": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404420(uint *arg_8h, int32_t arg_ch)\n\n{\n    if ((*0x4a9544 & 1) == 0) {\n        *0x4a9544 = *0x4a9544 | 1;\n        *0x492e44 = fcn.0045a1b7;\n        *0x492e68 = fcn.0045a2f2;\n        *0x492e8c = fcn.00465eee;\n        *0x492eb0 = fcn.00459e95;\n        *0x492ed4 = fcn.0045ae10;\n        *0x492e4c = 0;\n        *0x492e70 = 0;\n        *0x492e94 = 0;\n        *0x492eb8 = 0;\n        *0x492edc = 0;\n        *0x492ef8 = fcn.0045ade1;\n        *0x492f00 = 0;\n        *0x492f24 = 0;\n        *0x492f48 = 0;\n        *0x492f1c = fcn.0045a2b3;\n        *0x492f64 = fcn.0045a331;\n        *0x492f40 = fcn.004724b2;\n        *0x492f88 = fcn.004653fe;\n        *0x492e48 = 0;\n        *0x492e50 = 1;\n        *0x492e54 = 1;\n        *0x492e5c = L\"ACOS\";\n        *0x492e6c = 0;\n        *0x492e74 = 1;\n        *0x492e78 = 1;\n        *0x492e80 = L\"ADLIBREGISTER\";\n        *0x492e90 = 0;\n        *0x492e98 = 1;\n        *0x492e9c = 2;\n        *0x492ea4 = L\"ADLIBUNREGISTER\";\n        *0x492eb4 = 0;\n        *0x492ebc = 0;\n        *0x492ec0 = 1;\n        *0x492ec8 = 0x484ae4;\n        *0x492ed8 = 0;\n        *0x492ee0 = 1;\n        *0x492ee4 = 1;\n        *0x492eec = L\"ASCW\";\n        *0x492efc = 0;\n        *0x492f04 = 1;\n        *0x492f08 = 1;\n        *0x492f10 = L\"ASIN\";\n        *0x492f20 = 0;\n        *0x492f28 = 1;\n        *0x492f2c = 1;\n        *0x492f34 = L\"ASSIGN\";\n        *0x492f44 = 0;\n        *0x492f4c = 2;\n        *0x492f50 = 3;\n        *0x492f58 = L\"ATAN\";\n        *0x492f68 = 0;\n        *0x492f6c = 0;\n        *0x492f70 = 1;\n        *0x492f74 = 1;\n        *0x492f7c = L\"AUTOITSETOPTION\";\n        *0x492f8c = 0;\n        *0x492f90 = 0;\n        *0x492f94 = 1;\n        *0x492f98 = 2;\n        *0x492fa0 = L\"AUTOITWINGETTITLE\";\n        *0x492fac = fcn.00459e22;\n        *0x492fb0 = 0;\n        *0x492fd0 = fcn.00459e70;\n        *0x492fd4 = 0;\n        *0x492ff4 = fcn.0044a376;\n        *0x492ff8 = 0;\n        *0x493018 = fcn.004765ea;\n        *0x49301c = 0;\n        *0x49303c = fcn.0046a720;\n        *0x493040 = 0;\n        *0x493060 = fcn.0046a699;\n        *0x493064 = 0;\n        *0x493084 = fcn.0046a47f;\n        *0x493088 = 0;\n        *0x4930a8 = fcn.0045a8c3;\n        *0x4930ac = 0;\n        *0x4930cc = fcn.0045a842;\n        *0x4930d0 = 0;\n        *0x4930f0 = fcn.0045a871;\n        *0x4930f4 = 0;\n        *0x492fb4 = 0;\n        *0x492fb8 = 0;\n        *0x492fbc = 0;\n        *0x492fc4 = L\"AUTOITWINSETTITLE\";\n        *0x492fd8 = 0;\n        *0x492fdc = 1;\n        *0x492fe0 = 1;\n        *0x492fe8 = L\"BEEP\";\n        *0x492ffc = 0;\n        *0x493000 = 0;\n        *0x493004 = 2;\n        *0x49300c = L\"BINARY\";\n        *0x493020 = 0;\n        *0x493024 = 1;\n        *0x493028 = 1;\n        *0x493030 = L\"BINARYLEN\";\n        *0x493044 = 0;\n        *0x493048 = 1;\n        *0x49304c = 1;\n        *0x493054 = L\"BINARYMID\";\n        *0x493068 = 0;\n        *0x49306c = 2;\n        *0x493070 = 3;\n        *0x493078 = L\"BINARYTOSTRING\";\n        *0x49308c = 0;\n        *0x493090 = 1;\n        *0x493094 = 2;\n        *0x49309c = L\"BITAND\";\n        *0x4930b0 = 0;\n        *0x4930b4 = 2;\n        *0x4930b8 = 0xff;\n        *0x4930c0 = L\"BITNOT\";\n        *0x4930d4 = 0;\n        *0x4930d8 = 1;\n        *0x4930dc = 1;\n        *0x4930e4 = L\"BITOR\";\n        *0x4930f8 = 0;\n        *0x4930fc = 2;\n        *0x493100 = 0xff;\n        *0x493108 = L\"BITROTATE\";\n        *0x493114 = fcn.0045a61e;\n        *0x493118 = 0;\n        *0x493138 = fcn.0045a5ba;\n        *0x49313c = 0;\n        *0x49315c = fcn.0045a7f0;\n        *0x493160 = 0;\n        *0x493180 = fcn.00459de6;\n        *0x493184 = 0;\n        *0x4931a4 = fcn.0044a3c5;\n        *0x4931a8 = 0;\n        *0x4931c8 = fcn.0047db13;\n        *0x4931cc = 0;\n        *0x4931ec = fcn.0045d52d;\n        *0x4931f0 = 0;\n        *0x493210 = fcn.00459fbe;\n        *0x493214 = 0;\n        *0x493234 = fcn.0045ad10;\n        *0x493238 = 0;\n        *0x493258 = fcn.0045ac7b;\n        *0x49325c = 0;\n        *0x49311c = 0;\n        *0x493120 = 1;\n        *0x493124 = 3;\n        *0x49312c = L\"BITSHIFT\";\n        *0x493140 = 0;\n        *0x493144 = 2;\n        *0x493148 = 2;\n        *0x493150 = L\"BITXOR\";\n        *0x493164 = 0;\n        *0x493168 = 2;\n        *0x49316c = 0xff;\n        *0x493174 = L\"BLOCKINPUT\";\n        *0x493188 = 0;\n        *0x49318c = 1;\n        *0x493190 = 1;\n        *0x493198 = L\"BREAK\";\n        *0x4931ac = 0;\n        *0x4931b0 = 1;\n        *0x4931b4 = 1;\n        *0x4931bc = L\"CALL\";\n        *0x4931d0 = 0;\n        *0x4931d4 = 1;\n        *0x4931d8 = 0xff;\n        *0x4931e0 = L\"CDTRAY\";\n        *0x4931f4 = 0;\n        *0x4931f8 = 2;\n        *0x4931fc = 2;\n        *0x493204 = L\"CEILING\";\n        *0x493218 = 0;\n        *0x49321c = 1;\n        *0x493220 = 1;\n        *0x493228 = 0x48995c;\n        *0x49323c = 0;\n        *0x493240 = 1;\n        *0x493244 = 1;\n        *0x49324c = L\"CHRW\";\n        *0x493260 = 0;\n        *0x493264 = 1;\n        *0x493268 = 1;\n        *0x493270 = L\"CLIPGET\";\n        *0x49327c = fcn.0046d557;\n        *0x493378 = fcn.0047b18a;\n        *0x49337c = 0;\n        *0x493380 = 0;\n        *0x493280 = 0;\n        *0x4932d4 = 2;\n        *0x49339c = fcn.0047b1cf;\n        *0x4932a0 = fcn.00459b8c;\n        *0x4932e8 = fcn.0046cd9f;\n        *0x4933a0 = 0;\n        *0x4933a4 = 0;\n        *0x4932a4 = 0;\n        *0x49330c = fcn.0046cd65;\n        *0x4933c0 = fcn.0047b646;\n        *0x4932c4 = fcn.0046a8a6;\n        *0x493330 = fcn.0047b53a;\n        *0x4933c4 = 0;\n        *0x4933c8 = 0;\n        *0x4932c8 = 0;\n        *0x4932f0 = 0;\n        *0x493314 = 0;\n        *0x493338 = 0;\n        *0x493354 = fcn.0047ab7f;\n        *0x49335c = 0;\n        *0x4933e4 = fcn.004791db;\n        *0x493284 = 0;\n        *0x493288 = 0;\n        *0x49328c = 0;\n        *0x493294 = L\"CLIPPUT\";\n        *0x4932a8 = 0;\n        *0x4932ac = 1;\n        *0x4932b0 = 1;\n        *0x4932b8 = L\"CONSOLEREAD\";\n        *0x4932cc = 0;\n        *0x4932d0 = 0;\n        *0x4932dc = L\"CONSOLEWRITE\";\n        *0x4932ec = 0;\n        *0x4932f4 = 1;\n        *0x4932f8 = 1;\n        *0x493300 = L\"CONSOLEWRITEERROR\";\n        *0x493310 = 0;\n        *0x493318 = 1;\n        *0x49331c = 1;\n        *0x493324 = L\"CONTROLCLICK\";\n        *0x493334 = 0;\n        *0x49333c = 3;\n        *0x493340 = 7;\n        *0x493348 = L\"CONTROLCOMMAND\";\n        *0x493358 = 0;\n        *0x493360 = 4;\n        *0x493364 = 5;\n        *0x49336c = L\"CONTROLDISABLE\";\n        *0x493384 = 3;\n        *0x493388 = 3;\n        *0x493390 = L\"CONTROLENABLE\";\n        *0x4933a8 = 3;\n        *0x4933ac = 3;\n        *0x4933b4 = L\"CONTROLFOCUS\";\n        *0x4933cc = 3;\n        *0x4933d0 = 3;\n        *0x4933d8 = L\"CONTROLGETFOCUS\";\n        *0x4933e8 = 0;\n        *0x4933ec = 0;\n        *0x493408 = fcn.0047a396;\n        *0x49340c = 0;\n        *0x493410 = 0;\n        *0x49342c = fcn.0047b300;\n        *0x493430 = 0;\n        *0x493434 = 0;\n        *0x493450 = fcn.0047b424;\n        *0x493454 = 0;\n        *0x493458 = 0;\n        *0x493474 = fcn.0047b100;\n        *0x493478 = 0;\n        *0x49347c = 0;\n        *0x493498 = fcn.0047a7be;\n        *0x49349c = 0;\n        *0x4934a0 = 0;\n        *0x4934bc = fcn.0047b214;\n        *0x4934c0 = 0;\n        *0x4934c4 = 0;\n        *0x4934e0 = fcn.0047a3f2;\n        *0x4934e4 = 0;\n        *0x4934e8 = 0;\n        *0x493504 = fcn.0047b4c7;\n        *0x493508 = 0;\n        *0x49350c = 0;\n        *0x493528 = fcn.0047b145;\n        *0x49352c = 0;\n        *0x493530 = 0;\n        *0x49354c = fcn.0047a48d;\n        *0x4933f0 = 1;\n        *0x4933f4 = 2;\n        *0x4933fc = L\"CONTROLGETHANDLE\";\n        *0x493414 = 3;\n        *0x493418 = 3;\n        *0x493420 = L\"CONTROLGETPOS\";\n        *0x493438 = 3;\n        *0x49343c = 3;\n        *0x493444 = L\"CONTROLGETTEXT\";\n        *0x49345c = 3;\n        *0x493460 = 3;\n        *0x493468 = L\"CONTROLHIDE\";\n        *0x493480 = 3;\n        *0x493484 = 3;\n        *0x49348c = L\"CONTROLLISTVIEW\";\n        *0x4934a4 = 4;\n        *0x4934a8 = 6;\n        *0x4934b0 = L\"CONTROLMOVE\";\n        *0x4934c8 = 5;\n        *0x4934cc = 7;\n        *0x4934d4 = L\"CONTROLSEND\";\n        *0x4934ec = 4;\n        *0x4934f0 = 5;\n        *0x4934f8 = L\"CONTROLSETTEXT\";\n        *0x493510 = 4;\n        *0x493514 = 5;\n        *0x49351c = L\"CONTROLSHOW\";\n        *0x493534 = 3;\n        *0x493538 = 3;\n        *0x493540 = L\"CONTROLTREEVIEW\";\n        *0x493550 = 0;\n        *0x493554 = 0;\n        *0x493558 = 4;\n        *0x493570 = fcn.0045a235;\n        *0x493574 = 0;\n        *0x493578 = 0;\n        *0x493594 = fcn.0045ac24;\n        *0x493598 = 0;\n        *0x49359c = 0;\n        *0x4935b8 = fcn.0045c3dd;\n        *0x4935bc = 0;\n        *0x4935c0 = 0;\n        *0x4935dc = fcn.0045c367;\n        *0x4935e0 = 0;\n        *0x4935e4 = 0;\n        *0x493600 = fcn.00477456;\n        *0x493604 = 0;\n        *0x493608 = 0;\n        *0x493624 = fcn.0045bfc4;\n        *0x493628 = 0;\n        *0x49362c = 0;\n        *0x493648 = fcn.0045c308;\n        *0x49364c = 0;\n        *0x493650 = 0;\n        *0x49366c = fcn.00474a52;\n        *0x493670 = 0;\n        *0x493674 = 0;\n        *0x493690 = fcn.00474a3b;\n        *0x493694 = 0;\n        *0x493698 = 0;\n        *0x4936b4 = fcn.004570ca;\n        *0x49355c = 6;\n        *0x493564 = 0x4896fc;\n        *0x49357c = 1;\n        *0x493580 = 1;\n        *0x493588 = 0x4896f4;\n        *0x4935a0 = 1;\n        *0x4935a4 = 1;\n        *0x4935ac = L\"DIRCOPY\";\n        *0x4935c4 = 2;\n        *0x4935c8 = 3;\n        *0x4935d0 = L\"DIRCREATE\";\n        *0x4935e8 = 1;\n        *0x4935ec = 1;\n        *0x4935f4 = L\"DIRGETSIZE\";\n        *0x49360c = 1;\n        *0x493610 = 2;\n        *0x493618 = L\"DIRMOVE\";\n        *0x493630 = 2;\n        *0x493634 = 3;\n        *0x49363c = L\"DIRREMOVE\";\n        *0x493654 = 1;\n        *0x493658 = 2;\n        *0x493660 = L\"DLLCALL\";\n        *0x493678 = 3;\n        *0x49367c = 0x43;\n        *0x493684 = L\"DLLCALLADDRESS\";\n        *0x49369c = 2;\n        *0x4936a0 = 0x42;\n        *0x4936a8 = L\"DLLCALLBACKFREE\";\n        *0x4936b8 = 0;\n        *0x4936bc = 0;\n        *0x4936c0 = 1;\n        *0x4936c4 = 1;\n        *0x4936d8 = fcn.00457066;\n        *0x4936dc = 0;\n        *0x4936e0 = 0;\n        *0x4936fc = fcn.0046ee85;\n        *0x493700 = 0;\n        *0x493704 = 0;\n        *0x493720 = fcn.00457155;\n        *0x493724 = 0;\n        *0x493728 = 0;\n        *0x493744 = fcn.004571c1;\n        *0x493748 = 0;\n        *0x49374c = 0;\n        *0x493768 = fcn.0047464f;\n        *0x49376c = 0;\n        *0x493770 = 0;\n        *0x49378c = fcn.004743f7;\n        *0x493790 = 0;\n        *0x493794 = 0;\n        *0x4937b0 = fcn.004710c3;\n        *0x4937b4 = 0;\n        *0x4937b8 = 0;\n        *0x4937d4 = fcn.00456fcc;\n        *0x4937d8 = 0;\n        *0x4937dc = 0;\n        *0x4937f8 = fcn.00474521;\n        *0x4937fc = 0;\n        *0x493800 = 0;\n        *0x49381c = fcn.00477921;\n        *0x4936cc = L\"DLLCALLBACKGETPTR\";\n        *0x4936e4 = 1;\n        *0x4936e8 = 1;\n        *0x4936f0 = L\"DLLCALLBACKREGISTER\";\n        *0x493708 = 3;\n        *0x49370c = 3;\n        *0x493714 = L\"DLLCLOSE\";\n        *0x49372c = 1;\n        *0x493730 = 1;\n        *0x493738 = L\"DLLOPEN\";\n        *0x493750 = 1;\n        *0x493754 = 1;\n        *0x49375c = L\"DLLSTRUCTCREATE\";\n        *0x493774 = 1;\n        *0x493778 = 2;\n        *0x493780 = L\"DLLSTRUCTGETDATA\";\n        *0x493798 = 2;\n        *0x49379c = 3;\n        *0x4937a4 = L\"DLLSTRUCTGETPTR\";\n        *0x4937bc = 1;\n        *0x4937c0 = 2;\n        *0x4937c8 = L\"DLLSTRUCTGETSIZE\";\n        *0x4937e0 = 1;\n        *0x4937e4 = 1;\n        *0x4937ec = L\"DLLSTRUCTSETDATA\";\n        *0x493804 = 3;\n        *0x493808 = 4;\n        *0x493810 = L\"DRIVEGETDRIVE\";\n        *0x493820 = 0;\n        *0x493824 = 0;\n        *0x493828 = 1;\n        *0x49382c = 1;\n        *0x493834 = L\"DRIVEGETFILESYSTEM\";\n        *0x493840 = fcn.0045cff8;\n        *0x493844 = 0;\n        *0x493848 = 0;\n        *0x493864 = fcn.0045ce27;\n        *0x493868 = 0;\n        *0x49386c = 0;\n        *0x493888 = fcn.0045cf02;\n        *0x49388c = 0;\n        *0x493890 = 0;\n        *0x4938ac = fcn.0045d405;\n        *0x4938b0 = 0;\n        *0x4938b4 = 0;\n        *0x4938d0 = fcn.00466b04;\n        *0x4938d4 = 0;\n        *0x4938d8 = 0;\n        *0x4938f4 = fcn.00466aa8;\n        *0x4938f8 = 0;\n        *0x4938fc = 0;\n        *0x493918 = fcn.00466a20;\n        *0x49391c = 0;\n        *0x493920 = 0;\n        *0x49393c = fcn.0045cd81;\n        *0x493940 = 0;\n        *0x493944 = 0;\n        *0x493948 = 2;\n        *0x49394c = 2;\n        *0x493960 = fcn.0045d249;\n        *0x493964 = 0;\n        *0x493968 = 0;\n        *0x493984 = fcn.0045d327;\n        *0x49384c = 1;\n        *0x493850 = 1;\n        *0x493858 = L\"DRIVEGETLABEL\";\n        *0x493870 = 1;\n        *0x493874 = 1;\n        *0x49387c = L\"DRIVEGETSERIAL\";\n        *0x493894 = 1;\n        *0x493898 = 1;\n        *0x4938a0 = L\"DRIVEGETTYPE\";\n        *0x4938b8 = 1;\n        *0x4938bc = 1;\n        *0x4938c4 = L\"DRIVEMAPADD\";\n        *0x4938dc = 2;\n        *0x4938e0 = 5;\n        *0x4938e8 = L\"DRIVEMAPDEL\";\n        *0x493900 = 1;\n        *0x493904 = 1;\n        *0x49390c = L\"DRIVEMAPGET\";\n        *0x493924 = 1;\n        *0x493928 = 1;\n        *0x493930 = L\"DRIVESETLABEL\";\n        *0x493954 = L\"DRIVESPACEFREE\";\n        *0x49396c = 1;\n        *0x493970 = 1;\n        *0x493978 = L\"DRIVESPACETOTAL\";\n        *0x493988 = 0;\n        *0x49398c = 0;\n        *0x493990 = 1;\n        *0x493994 = 1;\n        *0x49399c = L\"DRIVESTATUS\";\n        *0x4939a8 = fcn.0045d0d3;\n        *0x4939ac = 0;\n        *0x4939b0 = 0;\n        *0x4939cc = 0x435618;\n        *0x4939d0 = 0;\n        *0x4939d4 = 0;\n        *0x4939f0 = fcn.00459d8f;\n        *0x4939f4 = 0;\n        *0x4939f8 = 0;\n        *0x493a14 = fcn.00459d43;\n        *0x493a18 = 0;\n        *0x493a1c = 0;\n        *0x493a38 = fcn.00459ce9;\n        *0x493a3c = 0;\n        *0x493a40 = 0;\n        *0x493a5c = fcn.00472647;\n        *0x493a60 = 0;\n        *0x493a64 = 0;\n        *0x493a80 = fcn.0047fe6c;\n        *0x493a84 = 0;\n        *0x493a88 = 0;\n        *0x493aa4 = fcn.0045a3af;\n        *0x493aa8 = 0;\n        *0x493aac = 0;\n        *0x493ac8 = fcn.0045c02d;\n        *0x493acc = 0;\n        *0x493ad0 = 0;\n        *0x493aec = fcn.0045dc37;\n        *0x493af0 = 0;\n        *0x493af4 = 0;\n        *0x4939b4 = 1;\n        *0x4939b8 = 1;\n        *0x4939c0 = L\"DUMMYSPEEDTEST\";\n        *0x4939d8 = 0;\n        *0x4939dc = 8;\n        *0x4939e4 = L\"ENVGET\";\n        *0x4939fc = 1;\n        *0x493a00 = 1;\n        *0x493a08 = L\"ENVSET\";\n        *0x493a20 = 1;\n        *0x493a24 = 2;\n        *0x493a2c = L\"ENVUPDATE\";\n        *0x493a44 = 0;\n        *0x493a48 = 0;\n        *0x493a50 = L\"EVAL\";\n        *0x493a68 = 1;\n        *0x493a6c = 1;\n        *0x493a74 = L\"EXECUTE\";\n        *0x493a8c = 1;\n        *0x493a90 = 1;\n        *0x493a98 = 0x489358;\n        *0x493ab0 = 1;\n        *0x493ab4 = 1;\n        *0x493abc = L\"FILECHANGEDIR\";\n        *0x493ad4 = 1;\n        *0x493ad8 = 1;\n        *0x493ae0 = L\"FILECLOSE\";\n        *0x493af8 = 1;\n        *0x493afc = 1;\n        *0x493b04 = L\"FILECOPY\";\n        *0x493b10 = fcn.0045c1d6;\n        *0x493b14 = 0;\n        *0x493b18 = 0;\n        *0x493b34 = fcn.0045cc69;\n        *0x493b38 = 0;\n        *0x493b3c = 0;\n        *0x493b58 = fcn.0046dd30;\n        *0x493b5c = 0;\n        *0x493b60 = 0;\n        *0x493b7c = fcn.0046689e;\n        *0x493b80 = 0;\n        *0x493b84 = 0;\n        *0x493ba0 = fcn.0045c3a2;\n        *0x493ba4 = 0;\n        *0x493ba8 = 0;\n        *0x493bc4 = fcn.0045c5b4;\n        *0x493bc8 = 0;\n        *0x493bcc = 0;\n        *0x493be8 = fcn.004668f0;\n        *0x493bec = 0;\n        *0x493bf0 = 0;\n        *0x493c0c = fcn.00466839;\n        *0x493c10 = 0;\n        *0x493c14 = 0;\n        *0x493c30 = fcn.0045ca6b;\n        *0x493c34 = 0;\n        *0x493c38 = 0;\n        *0x493c54 = fcn.0045dce1;\n        *0x493c58 = 0;\n        *0x493c5c = 0;\n        *0x493b1c = 2;\n        *0x493b20 = 3;\n        *0x493b28 = L\"FILECREATENTFSLINK\";\n        *0x493b40 = 2;\n        *0x493b44 = 3;\n        *0x493b4c = L\"FILECREATESHORTCUT\";\n        *0x493b64 = 2;\n        *0x493b68 = 9;\n        *0x493b70 = L\"FILEDELETE\";\n        *0x493b88 = 1;\n        *0x493b8c = 1;\n        *0x493b94 = L\"FILEEXISTS\";\n        *0x493bac = 1;\n        *0x493bb0 = 1;\n        *0x493bb8 = L\"FILEFINDFIRSTFILE\";\n        *0x493bd0 = 1;\n        *0x493bd4 = 1;\n        *0x493bdc = L\"FILEFINDNEXTFILE\";\n        *0x493bf4 = 1;\n        *0x493bf8 = 1;\n        *0x493c00 = L\"FILEFLUSH\";\n        *0x493c18 = 1;\n        *0x493c1c = 1;\n        *0x493c24 = L\"FILEGETATTRIB\";\n        *0x493c3c = 1;\n        *0x493c40 = 1;\n        *0x493c48 = L\"FILEGETENCODING\";\n        *0x493c60 = 1;\n        *0x493c64 = 2;\n        *0x493c6c = L\"FILEGETLONGNAME\";\n        *0x493c78 = fcn.0045c500;\n        *0x493c7c = 0;\n        *0x493c80 = 0;\n        *0x493c9c = fcn.004667b8;\n        *0x493ca0 = 0;\n        *0x493ca4 = 0;\n        *0x493cc0 = fcn.00477668;\n        *0x493cc4 = 0;\n        *0x493cc8 = 0;\n        *0x493ce4 = fcn.0045c446;\n        *0x493ce8 = 0;\n        *0x493cec = 0;\n        *0x493d08 = fcn.0045d949;\n        *0x493d0c = 0;\n        *0x493d10 = 0;\n        *0x493d2c = fcn.00477b88;\n        *0x493d30 = 0;\n        *0x493d34 = 0;\n        *0x493d50 = fcn.0045c734;\n        *0x493d54 = 0;\n        *0x493d58 = 0;\n        *0x493d74 = fcn.0046da49;\n        *0x493d78 = 0;\n        *0x493d7c = 0;\n        *0x493d98 = fcn.0045c066;\n        *0x493d9c = 0;\n        *0x493da0 = 0;\n        *0x493dbc = fcn.00467186;\n        *0x493dc0 = 0;\n        *0x493dc4 = 0;\n        *0x493de0 = fcn.0046716b;\n        *0x493c84 = 1;\n        *0x493c88 = 2;\n        *0x493c90 = L\"FILEGETPOS\";\n        *0x493ca8 = 1;\n        *0x493cac = 1;\n        *0x493cb4 = L\"FILEGETSHORTCUT\";\n        *0x493ccc = 1;\n        *0x493cd0 = 1;\n        *0x493cd8 = L\"FILEGETSHORTNAME\";\n        *0x493cf0 = 1;\n        *0x493cf4 = 2;\n        *0x493cfc = L\"FILEGETSIZE\";\n        *0x493d14 = 1;\n        *0x493d18 = 1;\n        *0x493d20 = L\"FILEGETTIME\";\n        *0x493d38 = 1;\n        *0x493d3c = 3;\n        *0x493d44 = L\"FILEGETVERSION\";\n        *0x493d5c = 1;\n        *0x493d60 = 2;\n        *0x493d68 = L\"FILEINSTALL\";\n        *0x493d80 = 2;\n        *0x493d84 = 3;\n        *0x493d8c = L\"FILEMOVE\";\n        *0x493da4 = 2;\n        *0x493da8 = 3;\n        *0x493db0 = L\"FILEOPEN\";\n        *0x493dc8 = 1;\n        *0x493dcc = 2;\n        *0x493dd4 = L\"FILEOPENDIALOG\";\n        *0x493de4 = 0;\n        *0x493de8 = 0;\n        *0x493e04 = fcn.0046f236;\n        *0x493e08 = 0;\n        *0x493e0c = 0;\n        *0x493e28 = fcn.0046f447;\n        *0x493e2c = 0;\n        *0x493e30 = 0;\n        *0x493e4c = fcn.0045cbd7;\n        *0x493e50 = 0;\n        *0x493e54 = 0;\n        *0x493e70 = fcn.0045cb93;\n        *0x493e74 = 0;\n        *0x493e78 = 0;\n        *0x493e94 = fcn.00467150;\n        *0x493e98 = 0;\n        *0x493e9c = 0;\n        *0x493eb8 = fcn.0045d706;\n        *0x493ebc = 0;\n        *0x493ec0 = 0;\n        *0x493edc = fcn.0045c7d8;\n        *0x493ee0 = 0;\n        *0x493ee4 = 0;\n        *0x493f00 = fcn.00466736;\n        *0x493f04 = 0;\n        *0x493f08 = 0;\n        *0x493f24 = fcn.0045d9dd;\n        *0x493f28 = 0;\n        *0x493f2c = 0;\n        *0x493f48 = fcn.0046e1bf;\n        *0x493dec = 3;\n        *0x493df0 = 6;\n        *0x493df8 = L\"FILEREAD\";\n        *0x493e10 = 1;\n        *0x493e14 = 2;\n        *0x493e1c = L\"FILEREADLINE\";\n        *0x493e34 = 1;\n        *0x493e38 = 2;\n        *0x493e40 = L\"FILERECYCLE\";\n        *0x493e58 = 1;\n        *0x493e5c = 1;\n        *0x493e64 = L\"FILERECYCLEEMPTY\";\n        *0x493e7c = 0;\n        *0x493e80 = 1;\n        *0x493e88 = L\"FILESAVEDIALOG\";\n        *0x493ea0 = 3;\n        *0x493ea4 = 6;\n        *0x493eac = L\"FILESELECTFOLDER\";\n        *0x493ec4 = 2;\n        *0x493ec8 = 5;\n        *0x493ed0 = L\"FILESETATTRIB\";\n        *0x493ee8 = 2;\n        *0x493eec = 3;\n        *0x493ef4 = L\"FILESETPOS\";\n        *0x493f0c = 3;\n        *0x493f10 = 3;\n        *0x493f18 = L\"FILESETTIME\";\n        *0x493f30 = 2;\n        *0x493f34 = 4;\n        *0x493f3c = L\"FILEWRITE\";\n        *0x493f4c = 0;\n        *0x493f50 = 0;\n        *0x493f54 = 2;\n        *0x493f58 = 2;\n        *0x493f6c = fcn.0046e1d6;\n        *0x493f70 = 0;\n        *0x493f74 = 0;\n        *0x493f78 = 2;\n        *0x493f7c = 2;\n        *0x493f90 = fcn.0045a01c;\n        *0x493f94 = 0;\n        *0x493f98 = 0;\n        *0x493fb4 = fcn.0045af44;\n        *0x493fb8 = 0;\n        *0x493fbc = 0;\n        *0x493fd8 = fcn.00472b63;\n        *0x493fdc = 0;\n        *0x493fe0 = 0;\n        *0x493ffc = fcn.00478c8e;\n        *0x494000 = 0;\n        *0x494004 = 0;\n        *0x494020 = fcn.00478c60;\n        *0x494024 = 0;\n        *0x494028 = 0;\n        *0x494044 = fcn.00478c49;\n        *0x494048 = 0;\n        *0x49404c = 0;\n        *0x494068 = fcn.00478c32;\n        *0x49406c = 0;\n        *0x494070 = 0;\n        *0x49408c = fcn.00478c1b;\n        *0x494090 = 0;\n        *0x494094 = 0;\n        *0x4940b0 = fcn.00478c04;\n        *0x493f60 = L\"FILEWRITELINE\";\n        *0x493f84 = L\"FLOOR\";\n        *0x493f9c = 1;\n        *0x493fa0 = 1;\n        *0x493fa8 = L\"FTPSETPROXY\";\n        *0x493fc0 = 1;\n        *0x493fc4 = 4;\n        *0x493fcc = L\"GUICREATE\";\n        *0x493fe4 = 1;\n        *0x493fe8 = 8;\n        *0x493ff0 = L\"GUICTRLCREATEAVI\";\n        *0x494008 = 4;\n        *0x49400c = 8;\n        *0x494014 = L\"GUICTRLCREATEBUTTON\";\n        *0x49402c = 3;\n        *0x494030 = 7;\n        *0x494038 = L\"GUICTRLCREATECHECKBOX\";\n        *0x494050 = 3;\n        *0x494054 = 7;\n        *0x49405c = L\"GUICTRLCREATECOMBO\";\n        *0x494074 = 3;\n        *0x494078 = 7;\n        *0x494080 = L\"GUICTRLCREATECONTEXTMENU\";\n        *0x494098 = 0;\n        *0x49409c = 1;\n        *0x4940a4 = L\"GUICTRLCREATEDATE\";\n        *0x4940b4 = 0;\n        *0x4940b8 = 0;\n        *0x4940d4 = fcn.00478a21;\n        *0x4940d8 = 0;\n        *0x4940dc = 0;\n        *0x4940f8 = fcn.00478bd6;\n        *0x4940fc = 0;\n        *0x494100 = 0;\n        *0x49411c = fcn.00478bbf;\n        *0x494120 = 0;\n        *0x494124 = 0;\n        *0x494140 = fcn.00478ba8;\n        *0x494144 = 0;\n        *0x494148 = 0;\n        *0x494164 = fcn.00478b91;\n        *0x494168 = 0;\n        *0x49416c = 0;\n        *0x494188 = fcn.00478b7a;\n        *0x49418c = 0;\n        *0x494190 = 0;\n        *0x4941ac = fcn.00478c77;\n        *0x4941b0 = 0;\n        *0x4941b4 = 0;\n        *0x4941d0 = fcn.00478b63;\n        *0x4941d4 = 0;\n        *0x4941d8 = 0;\n        *0x4941f4 = fcn.00478b4c;\n        *0x4941f8 = 0;\n        *0x4941fc = 0;\n        *0x494218 = fcn.00478b35;\n        *0x4940bc = 3;\n        *0x4940c0 = 7;\n        *0x4940c8 = L\"GUICTRLCREATEDUMMY\";\n        *0x4940e0 = 0;\n        *0x4940e4 = 0;\n        *0x4940ec = L\"GUICTRLCREATEEDIT\";\n        *0x494104 = 3;\n        *0x494108 = 7;\n        *0x494110 = L\"GUICTRLCREATEGRAPHIC\";\n        *0x494128 = 2;\n        *0x49412c = 5;\n        *0x494134 = L\"GUICTRLCREATEGROUP\";\n        *0x49414c = 3;\n        *0x494150 = 7;\n        *0x494158 = L\"GUICTRLCREATEICON\";\n        *0x494170 = 4;\n        *0x494174 = 8;\n        *0x49417c = L\"GUICTRLCREATEINPUT\";\n        *0x494194 = 3;\n        *0x494198 = 7;\n        *0x4941a0 = L\"GUICTRLCREATELABEL\";\n        *0x4941b8 = 3;\n        *0x4941bc = 7;\n        *0x4941c4 = L\"GUICTRLCREATELIST\";\n        *0x4941dc = 3;\n        *0x4941e0 = 7;\n        *0x4941e8 = L\"GUICTRLCREATELISTVIEW\";\n        *0x494200 = 3;\n        *0x494204 = 7;\n        *0x49420c = L\"GUICTRLCREATELISTVIEWITEM\";\n        *0x49421c = 0;\n        *0x494220 = 0;\n        *0x494224 = 2;\n        *0x494228 = 2;\n        *0x49423c = fcn.00478b1e;\n        *0x494240 = 0;\n        *0x494244 = 0;\n        *0x494260 = fcn.00478b07;\n        *0x494264 = 0;\n        *0x494268 = 0;\n        *0x494284 = fcn.00478bed;\n        *0x494288 = 0;\n        *0x49428c = 0;\n        *0x4942a8 = fcn.00478a0a;\n        *0x4942ac = 0;\n        *0x4942b0 = 0;\n        *0x4942cc = fcn.00478af0;\n        *0x4942d0 = 0;\n        *0x4942d4 = 0;\n        *0x4942f0 = fcn.00478ad9;\n        *0x4942f4 = 0;\n        *0x4942f8 = 0;\n        *0x494314 = fcn.00478aab;\n        *0x494318 = 0;\n        *0x49431c = 0;\n        *0x494338 = fcn.00478ac2;\n        *0x49433c = 0;\n        *0x494340 = 0;\n        *0x49435c = fcn.00478a94;\n        *0x494360 = 0;\n        *0x494364 = 0;\n        *0x494380 = fcn.00478a7d;\n        *0x494230 = L\"GUICTRLCREATEMENU\";\n        *0x494248 = 1;\n        *0x49424c = 3;\n        *0x494254 = L\"GUICTRLCREATEMENUITEM\";\n        *0x49426c = 2;\n        *0x494270 = 4;\n        *0x494278 = L\"GUICTRLCREATEMONTHCAL\";\n        *0x494290 = 3;\n        *0x494294 = 7;\n        *0x49429c = L\"GUICTRLCREATEOBJ\";\n        *0x4942b4 = 3;\n        *0x4942b8 = 7;\n        *0x4942c0 = L\"GUICTRLCREATEPIC\";\n        *0x4942d8 = 3;\n        *0x4942dc = 7;\n        *0x4942e4 = L\"GUICTRLCREATEPROGRESS\";\n        *0x4942fc = 2;\n        *0x494300 = 6;\n        *0x494308 = L\"GUICTRLCREATERADIO\";\n        *0x494320 = 3;\n        *0x494324 = 7;\n        *0x49432c = L\"GUICTRLCREATESLIDER\";\n        *0x494344 = 2;\n        *0x494348 = 6;\n        *0x494350 = L\"GUICTRLCREATETAB\";\n        *0x494368 = 2;\n        *0x49436c = 6;\n        *0x494374 = L\"GUICTRLCREATETABITEM\";\n        *0x494384 = 0;\n        *0x494388 = 0;\n        *0x4943a4 = fcn.00478a66;\n        *0x4943a8 = 0;\n        *0x4943ac = 0;\n        *0x4943c8 = fcn.00478a4f;\n        *0x4943cc = 0;\n        *0x4943d0 = 0;\n        *0x4943d4 = 2;\n        *0x4943d8 = 2;\n        *0x4943ec = fcn.00478a38;\n        *0x4943f0 = 0;\n        *0x4943f4 = 0;\n        *0x494410 = fcn.0045b985;\n        *0x494414 = 0;\n        *0x494418 = 0;\n        *0x494434 = fcn.0045b4a7;\n        *0x494438 = 0;\n        *0x49443c = 0;\n        *0x494458 = fcn.0045b474;\n        *0x49445c = 0;\n        *0x494460 = 0;\n        *0x49447c = fcn.0045b2b0;\n        *0x494480 = 0;\n        *0x494484 = 0;\n        *0x4944a0 = fcn.00476d28;\n        *0x4944a4 = 0;\n        *0x4944a8 = 0;\n        *0x4944c4 = fcn.00466389;\n        *0x4944c8 = 0;\n        *0x4944cc = 0;\n        *0x4944d0 = 2;\n        *0x4944d4 = 2;\n        *0x4944e8 = fcn.0045b0e7;\n        *0x49438c = 1;\n        *0x494390 = 1;\n        *0x494398 = L\"GUICTRLCREATETREEVIEW\";\n        *0x4943b0 = 2;\n        *0x4943b4 = 6;\n        *0x4943bc = L\"GUICTRLCREATETREEVIEWITEM\";\n        *0x4943e0 = L\"GUICTRLCREATEUPDOWN\";\n        *0x4943f8 = 1;\n        *0x4943fc = 2;\n        *0x494404 = L\"GUICTRLDELETE\";\n        *0x49441c = 1;\n        *0x494420 = 1;\n        *0x494428 = L\"GUICTRLGETHANDLE\";\n        *0x494440 = 1;\n        *0x494444 = 1;\n        *0x49444c = L\"GUICTRLGETSTATE\";\n        *0x494464 = 0;\n        *0x494468 = 1;\n        *0x494470 = L\"GUICTRLREAD\";\n        *0x494488 = 1;\n        *0x49448c = 2;\n        *0x494494 = L\"GUICTRLRECVMSG\";\n        *0x4944ac = 2;\n        *0x4944b0 = 4;\n        *0x4944b8 = L\"GUICTRLREGISTERLISTVIEWSORT\";\n        *0x4944dc = L\"GUICTRLSENDMSG\";\n        *0x4944ec = 0;\n        *0x4944f0 = 0;\n        *0x49450c = fcn.00472a44;\n        *0x494510 = 0;\n        *0x494514 = 0;\n        *0x494530 = fcn.0046650f;\n        *0x494534 = 0;\n        *0x494538 = 0;\n        *0x49453c = 2;\n        *0x494540 = 2;\n        *0x494554 = fcn.00466569;\n        *0x494558 = 0;\n        *0x49455c = 0;\n        *0x494560 = 2;\n        *0x494564 = 2;\n        *0x494578 = fcn.0045b837;\n        *0x49457c = 0;\n        *0x494580 = 0;\n        *0x494584 = 2;\n        *0x494588 = 2;\n        *0x49459c = fcn.0045b730;\n        *0x4945a0 = 0;\n        *0x4945a4 = 0;\n        *0x4945c0 = fcn.0045bc6a;\n        *0x4945c4 = 0;\n        *0x4945c8 = 0;\n        *0x4945e4 = fcn.0045bcbe;\n        *0x4945e8 = 0;\n        *0x4945ec = 0;\n        *0x494608 = fcn.0045b875;\n        *0x49460c = 0;\n        *0x494610 = 0;\n        *0x49462c = fcn.0045b5cd;\n        *0x494630 = 0;\n        *0x494634 = 0;\n        *0x4944f4 = 4;\n        *0x4944f8 = 4;\n        *0x494500 = L\"GUICTRLSENDTODUMMY\";\n        *0x494518 = 1;\n        *0x49451c = 2;\n        *0x494524 = L\"GUICTRLSETBKCOLOR\";\n        *0x494548 = L\"GUICTRLSETCOLOR\";\n        *0x49456c = L\"GUICTRLSETCURSOR\";\n        *0x494590 = L\"GUICTRLSETDATA\";\n        *0x4945a8 = 2;\n        *0x4945ac = 3;\n        *0x4945b4 = L\"GUICTRLSETDEFBKCOLOR\";\n        *0x4945cc = 1;\n        *0x4945d0 = 2;\n        *0x4945d8 = L\"GUICTRLSETDEFCOLOR\";\n        *0x4945f0 = 1;\n        *0x4945f4 = 2;\n        *0x4945fc = L\"GUICTRLSETFONT\";\n        *0x494614 = 2;\n        *0x494618 = 6;\n        *0x494620 = L\"GUICTRLSETGRAPHIC\";\n        *0x494638 = 2;\n        *0x49463c = 8;\n        *0x494644 = L\"GUICTRLSETIMAGE\";\n        *0x494650 = fcn.00472ab7;\n        *0x494654 = 0;\n        *0x494658 = 0;\n        *0x494674 = fcn.0045b6de;\n        *0x494678 = 0;\n        *0x49467c = 0;\n        *0x494698 = fcn.004665c3;\n        *0x49469c = 0;\n        *0x4946a0 = 0;\n        *0x4946a4 = 2;\n        *0x4946a8 = 2;\n        *0x4946bc = fcn.0045b542;\n        *0x4946c0 = 0;\n        *0x4946c4 = 0;\n        *0x4946e0 = fcn.0045b4fa;\n        *0x4946e4 = 0;\n        *0x4946e8 = 0;\n        *0x4946ec = 2;\n        *0x4946f0 = 2;\n        *0x494704 = fcn.0045b7f9;\n        *0x494708 = 0;\n        *0x49470c = 0;\n        *0x494710 = 2;\n        *0x494714 = 2;\n        *0x494728 = fcn.0045b421;\n        *0x49472c = 0;\n        *0x494730 = 0;\n        *0x49474c = fcn.0045b343;\n        *0x494750 = 0;\n        *0x494754 = 0;\n        *0x494770 = fcn.0045b0ac;\n        *0x494774 = 0;\n        *0x494778 = 0;\n        *0x494794 = fcn.00476c0b;\n        *0x49465c = 2;\n        *0x494660 = 4;\n        *0x494668 = L\"GUICTRLSETLIMIT\";\n        *0x494680 = 2;\n        *0x494684 = 3;\n        *0x49468c = L\"GUICTRLSETONEVENT\";\n        *0x4946b0 = L\"GUICTRLSETPOS\";\n        *0x4946c8 = 2;\n        *0x4946cc = 5;\n        *0x4946d4 = L\"GUICTRLSETRESIZING\";\n        *0x4946f8 = L\"GUICTRLSETSTATE\";\n        *0x49471c = L\"GUICTRLSETSTYLE\";\n        *0x494734 = 2;\n        *0x494738 = 3;\n        *0x494740 = L\"GUICTRLSETTIP\";\n        *0x494758 = 2;\n        *0x49475c = 5;\n        *0x494764 = L\"GUIDELETE\";\n        *0x49477c = 0;\n        *0x494780 = 1;\n        *0x494788 = L\"GUIGETCURSORINFO\";\n        *0x494798 = 0;\n        *0x49479c = 0;\n        *0x4947a0 = 0;\n        *0x4947a4 = 1;\n        *0x4947b8 = fcn.00477256;\n        *0x4947bc = 0;\n        *0x4947c0 = 0;\n        *0x4947dc = fcn.004771b1;\n        *0x4947e0 = 0;\n        *0x4947e4 = 0;\n        *0x494800 = fcn.00466460;\n        *0x494804 = 0;\n        *0x494808 = 0;\n        *0x49480c = 2;\n        *0x494810 = 2;\n        *0x494824 = fcn.00476a2d;\n        *0x494828 = 0;\n        *0x49482c = 0;\n        *0x494848 = fcn.0045bd12;\n        *0x49484c = 0;\n        *0x494850 = 0;\n        *0x49486c = fcn.0045b21b;\n        *0x494870 = 0;\n        *0x494874 = 0;\n        *0x494890 = fcn.0045bb42;\n        *0x494894 = 0;\n        *0x494898 = 0;\n        *0x4948b4 = fcn.0045ba20;\n        *0x4948b8 = 0;\n        *0x4948bc = 0;\n        *0x4948d8 = fcn.0045bbab;\n        *0x4948dc = 0;\n        *0x4948e0 = 0;\n        *0x4948fc = fcn.0045bbfe;\n        *0x4947ac = L\"GUIGETMSG\";\n        *0x4947c4 = 0;\n        *0x4947c8 = 1;\n        *0x4947d0 = L\"GUIGETSTYLE\";\n        *0x4947e8 = 0;\n        *0x4947ec = 1;\n        *0x4947f4 = L\"GUIREGISTERMSG\";\n        *0x494818 = L\"GUISETACCELERATORS\";\n        *0x494830 = 1;\n        *0x494834 = 2;\n        *0x49483c = L\"GUISETBKCOLOR\";\n        *0x494854 = 1;\n        *0x494858 = 2;\n        *0x494860 = L\"GUISETCOORD\";\n        *0x494878 = 2;\n        *0x49487c = 5;\n        *0x494884 = L\"GUISETCURSOR\";\n        *0x49489c = 0;\n        *0x4948a0 = 3;\n        *0x4948a8 = L\"GUISETFONT\";\n        *0x4948c0 = 1;\n        *0x4948c4 = 6;\n        *0x4948cc = L\"GUISETHELP\";\n        *0x4948e4 = 1;\n        *0x4948e8 = 2;\n        *0x4948f0 = L\"GUISETICON\";\n        *0x494900 = 0;\n        *0x494904 = 0;\n        *0x494908 = 1;\n        *0x49490c = 3;\n        *0x494920 = fcn.00466672;\n        *0x494924 = 0;\n        *0x494928 = 0;\n        *0x494944 = fcn.0045bd64;\n        *0x494948 = 0;\n        *0x49494c = 0;\n        *0x494968 = fcn.0045b9bd;\n        *0x49496c = 0;\n        *0x494970 = 0;\n        *0x49498c = fcn.0045b7aa;\n        *0x494990 = 0;\n        *0x494994 = 0;\n        *0x4949b0 = fcn.0045bdbd;\n        *0x4949b4 = 0;\n        *0x4949b8 = 0;\n        *0x4949d4 = fcn.00472793;\n        *0x4949d8 = 0;\n        *0x4949dc = 0;\n        *0x4949f8 = fcn.0046cdd9;\n        *0x4949fc = 0;\n        *0x494a00 = 0;\n        *0x494a1c = fcn.0045af5d;\n        *0x494a20 = 0;\n        *0x494a24 = 0;\n        *0x494a40 = fcn.0045aeeb;\n        *0x494a44 = 0;\n        *0x494a48 = 0;\n        *0x494a64 = fcn.0045a9bf;\n        *0x494914 = L\"GUISETONEVENT\";\n        *0x49492c = 2;\n        *0x494930 = 3;\n        *0x494938 = L\"GUISETSTATE\";\n        *0x494950 = 0;\n        *0x494954 = 2;\n        *0x49495c = L\"GUISETSTYLE\";\n        *0x494974 = 1;\n        *0x494978 = 3;\n        *0x494980 = L\"GUISTARTGROUP\";\n        *0x494998 = 0;\n        *0x49499c = 1;\n        *0x4949a4 = L\"GUISWITCH\";\n        *0x4949bc = 1;\n        *0x4949c0 = 2;\n        *0x4949c8 = 0x4885c0;\n        *0x4949e0 = 1;\n        *0x4949e4 = 2;\n        *0x4949ec = L\"HOTKEYSET\";\n        *0x494a04 = 1;\n        *0x494a08 = 2;\n        *0x494a10 = L\"HTTPSETPROXY\";\n        *0x494a28 = 1;\n        *0x494a2c = 4;\n        *0x494a34 = L\"HTTPSETUSERAGENT\";\n        *0x494a4c = 1;\n        *0x494a50 = 1;\n        *0x494a58 = L\"HWND\";\n        *0x494a68 = 0;\n        *0x494a6c = 0;\n        *0x494a70 = 1;\n        *0x494a74 = 1;\n        *0x494a7c = L\"INETCLOSE\";\n        *0x494a88 = fcn.0045af76;\n        *0x494a8c = 0;\n        *0x494a90 = 0;\n        *0x494aac = fcn.0046d8e5;\n        *0x494ab0 = 0;\n        *0x494ab4 = 0;\n        *0x494ad0 = fcn.0047660c;\n        *0x494ad4 = 0;\n        *0x494ad8 = 0;\n        *0x494af4 = fcn.0046d81f;\n        *0x494af8 = 0;\n        *0x494afc = 0;\n        *0x494b18 = fcn.0047691c;\n        *0x494b1c = 0;\n        *0x494b20 = 0;\n        *0x494b3c = fcn.0045ddec;\n        *0x494b40 = 0;\n        *0x494b44 = 0;\n        *0x494b60 = fcn.0045df5f;\n        *0x494b64 = 0;\n        *0x494b68 = 0;\n        *0x494b84 = fcn.00478261;\n        *0x494b88 = 0;\n        *0x494b8c = 0;\n        *0x494b90 = 2;\n        *0x494b94 = 2;\n        *0x494ba8 = fcn.00477e12;\n        *0x494bac = 0;\n        *0x494bb0 = 0;\n        *0x494bcc = fcn.0045be67;\n        *0x494a94 = 1;\n        *0x494a98 = 1;\n        *0x494aa0 = L\"INETGET\";\n        *0x494ab8 = 1;\n        *0x494abc = 4;\n        *0x494ac4 = L\"INETGETINFO\";\n        *0x494adc = 0;\n        *0x494ae0 = 2;\n        *0x494ae8 = L\"INETGETSIZE\";\n        *0x494b00 = 1;\n        *0x494b04 = 2;\n        *0x494b0c = L\"INETREAD\";\n        *0x494b24 = 1;\n        *0x494b28 = 2;\n        *0x494b30 = L\"INIDELETE\";\n        *0x494b48 = 2;\n        *0x494b4c = 3;\n        *0x494b54 = L\"INIREAD\";\n        *0x494b6c = 4;\n        *0x494b70 = 4;\n        *0x494b78 = L\"INIREADSECTION\";\n        *0x494b9c = L\"INIREADSECTIONNAMES\";\n        *0x494bb4 = 1;\n        *0x494bb8 = 1;\n        *0x494bc0 = L\"INIRENAMESECTION\";\n        *0x494bd0 = 0;\n        *0x494bd4 = 0;\n        *0x494bd8 = 3;\n        *0x494bdc = 4;\n        *0x494be4 = L\"INIWRITE\";\n        *0x494bf0 = fcn.0045decd;\n        *0x494bf4 = 0;\n        *0x494bf8 = 0;\n        *0x494c14 = fcn.00477fc7;\n        *0x494c18 = 0;\n        *0x494c1c = 0;\n        *0x494c38 = fcn.0046d0fd;\n        *0x494c3c = 0;\n        *0x494c40 = 0;\n        *0x494c5c = fcn.00472955;\n        *0x494c60 = 0;\n        *0x494c64 = 0;\n        *0x494c80 = fcn.0045955a;\n        *0x494c84 = 0;\n        *0x494c88 = 0;\n        *0x494ca4 = fcn.0045abf2;\n        *0x494ca8 = 0;\n        *0x494cac = 0;\n        *0x494cc8 = fcn.0045ab8e;\n        *0x494ccc = 0;\n        *0x494cd0 = 0;\n        *0x494cec = fcn.004583b9;\n        *0x494cf0 = 0;\n        *0x494cf4 = 0;\n        *0x494d10 = fcn.004585e4;\n        *0x494d14 = 0;\n        *0x494d18 = 0;\n        *0x494d34 = fcn.00457034;\n        *0x494d38 = 0;\n        *0x494d3c = 0;\n        *0x494bfc = 4;\n        *0x494c00 = 4;\n        *0x494c08 = L\"INIWRITESECTION\";\n        *0x494c20 = 3;\n        *0x494c24 = 4;\n        *0x494c2c = L\"INPUTBOX\";\n        *0x494c44 = 2;\n        *0x494c48 = 10;\n        *0x494c50 = 0x488418;\n        *0x494c68 = 1;\n        *0x494c6c = 1;\n        *0x494c74 = L\"ISADMIN\";\n        *0x494c8c = 0;\n        *0x494c90 = 0;\n        *0x494c98 = L\"ISARRAY\";\n        *0x494cb0 = 1;\n        *0x494cb4 = 1;\n        *0x494cbc = L\"ISBINARY\";\n        *0x494cd4 = 1;\n        *0x494cd8 = 1;\n        *0x494ce0 = L\"ISBOOL\";\n        *0x494cf8 = 1;\n        *0x494cfc = 1;\n        *0x494d04 = L\"ISDECLARED\";\n        *0x494d1c = 1;\n        *0x494d20 = 1;\n        *0x494d28 = L\"ISDLLSTRUCT\";\n        *0x494d40 = 1;\n        *0x494d44 = 1;\n        *0x494d4c = L\"ISFLOAT\";\n        *0x494d58 = fcn.0045aa85;\n        *0x494d5c = 0;\n        *0x494d60 = 0;\n        *0x494d7c = fcn.0045a975;\n        *0x494d80 = 0;\n        *0x494d84 = 0;\n        *0x494da0 = fcn.0045ab06;\n        *0x494da4 = 0;\n        *0x494da8 = 0;\n        *0x494dc4 = fcn.004585b2;\n        *0x494dc8 = 0;\n        *0x494dcc = 0;\n        *0x494de8 = fcn.0045aa53;\n        *0x494dec = 0;\n        *0x494df0 = 0;\n        *0x494e0c = fcn.00458026;\n        *0x494e10 = 0;\n        *0x494e14 = 0;\n        *0x494e30 = fcn.0045a915;\n        *0x494e34 = 0;\n        *0x494e38 = 0;\n        *0x494e54 = fcn.0045abc0;\n        *0x494e58 = 0;\n        *0x494e5c = 0;\n        *0x494e78 = fcn.0045a370;\n        *0x494e7c = 0;\n        *0x494e80 = 0;\n        *0x494e9c = fcn.00476149;\n        *0x494ea0 = 0;\n        *0x494ea4 = 0;\n        *0x494d64 = 1;\n        *0x494d68 = 1;\n        *0x494d70 = L\"ISHWND\";\n        *0x494d88 = 1;\n        *0x494d8c = 1;\n        *0x494d94 = L\"ISINT\";\n        *0x494dac = 1;\n        *0x494db0 = 1;\n        *0x494db8 = L\"ISKEYWORD\";\n        *0x494dd0 = 1;\n        *0x494dd4 = 1;\n        *0x494ddc = L\"ISNUMBER\";\n        *0x494df4 = 1;\n        *0x494df8 = 1;\n        *0x494e00 = L\"ISOBJ\";\n        *0x494e18 = 1;\n        *0x494e1c = 1;\n        *0x494e24 = L\"ISPTR\";\n        *0x494e3c = 1;\n        *0x494e40 = 1;\n        *0x494e48 = L\"ISSTRING\";\n        *0x494e60 = 1;\n        *0x494e64 = 1;\n        *0x494e6c = 0x48831c;\n        *0x494e84 = 1;\n        *0x494e88 = 1;\n        *0x494e90 = L\"MEMGETSTATS\";\n        *0x494ea8 = 0;\n        *0x494eac = 0;\n        *0x494eb4 = 0x4882fc;\n        *0x494ec0 = fcn.0045a0b9;\n        *0x494ec4 = 0;\n        *0x494ec8 = 0;\n        *0x494ecc = 2;\n        *0x494ed0 = 2;\n        *0x494ee4 = fcn.004597b3;\n        *0x494ee8 = 0;\n        *0x494eec = 0;\n        *0x494f08 = fcn.00459683;\n        *0x494f0c = 0;\n        *0x494f10 = 0;\n        *0x494f2c = fcn.004595be;\n        *0x494f30 = 0;\n        *0x494f34 = 0;\n        *0x494f50 = fcn.00458928;\n        *0x494f54 = 0;\n        *0x494f58 = 0;\n        *0x494f74 = fcn.00476232;\n        *0x494f78 = 0;\n        *0x494f7c = 0;\n        *0x494f98 = fcn.0044a404;\n        *0x494f9c = 0;\n        *0x494fa0 = 0;\n        *0x494fbc = fcn.00459583;\n        *0x494fc0 = 0;\n        *0x494fc4 = 0;\n        *0x494fe0 = fcn.004595f9;\n        *0x494fe4 = 0;\n        *0x494fe8 = 0;\n        *0x495004 = fcn.00458646;\n        *0x495008 = 0;\n        *0x49500c = 0;\n        *0x494ed8 = L\"MOUSECLICK\";\n        *0x494ef0 = 1;\n        *0x494ef4 = 5;\n        *0x494efc = L\"MOUSECLICKDRAG\";\n        *0x494f14 = 5;\n        *0x494f18 = 6;\n        *0x494f20 = L\"MOUSEDOWN\";\n        *0x494f38 = 1;\n        *0x494f3c = 1;\n        *0x494f44 = L\"MOUSEGETCURSOR\";\n        *0x494f5c = 0;\n        *0x494f60 = 0;\n        *0x494f68 = L\"MOUSEGETPOS\";\n        *0x494f80 = 0;\n        *0x494f84 = 1;\n        *0x494f8c = L\"MOUSEMOVE\";\n        *0x494fa4 = 2;\n        *0x494fa8 = 3;\n        *0x494fb0 = L\"MOUSEUP\";\n        *0x494fc8 = 1;\n        *0x494fcc = 1;\n        *0x494fd4 = L\"MOUSEWHEEL\";\n        *0x494fec = 1;\n        *0x494ff0 = 2;\n        *0x494ff8 = L\"MSGBOX\";\n        *0x495010 = 3;\n        *0x495014 = 5;\n        *0x49501c = L\"NUMBER\";\n        *0x495028 = fcn.0047286e;\n        *0x49502c = 0;\n        *0x495030 = 0;\n        *0x49504c = fcn.0046f16e;\n        *0x495050 = 0;\n        *0x495054 = 0;\n        *0x495070 = fcn.0046bec8;\n        *0x495074 = 0;\n        *0x495078 = 0;\n        *0x495094 = fcn.0047519b;\n        *0x495098 = 0;\n        *0x49509c = 0;\n        *0x4950b8 = fcn.0046c796;\n        *0x4950bc = 0;\n        *0x4950c0 = 0;\n        *0x4950dc = fcn.00457ad5;\n        *0x4950e0 = 0;\n        *0x4950e4 = 0;\n        *0x495100 = fcn.00465306;\n        *0x495104 = 0;\n        *0x495108 = 0;\n        *0x495124 = fcn.00465251;\n        *0x495128 = 0;\n        *0x49512c = 0;\n        *0x495148 = fcn.004653fe;\n        *0x49514c = 0;\n        *0x495150 = 0;\n        *0x49516c = fcn.00464e25;\n        *0x495170 = 0;\n        *0x495174 = 0;\n        *0x495190 = fcn.00459a3d;\n        *0x495034 = 1;\n        *0x495038 = 1;\n        *0x495040 = L\"OBJCREATE\";\n        *0x495058 = 1;\n        *0x49505c = 4;\n        *0x495064 = L\"OBJCREATEINTERFACE\";\n        *0x49507c = 2;\n        *0x495080 = 4;\n        *0x495088 = L\"OBJEVENT\";\n        *0x4950a0 = 1;\n        *0x4950a4 = 3;\n        *0x4950ac = L\"OBJGET\";\n        *0x4950c4 = 1;\n        *0x4950c8 = 2;\n        *0x4950d0 = L\"OBJNAME\";\n        *0x4950e8 = 1;\n        *0x4950ec = 2;\n        *0x4950f4 = L\"ONAUTOITEXITREGISTER\";\n        *0x49510c = 1;\n        *0x495110 = 1;\n        *0x495118 = L\"ONAUTOITEXITUNREGISTER\";\n        *0x495130 = 1;\n        *0x495134 = 1;\n        *0x49513c = 0x488158;\n        *0x495154 = 1;\n        *0x495158 = 2;\n        *0x495160 = L\"PING\";\n        *0x495178 = 1;\n        *0x49517c = 2;\n        *0x495184 = L\"PIXELCHECKSUM\";\n        *0x495194 = 0;\n        *0x495198 = 0;\n        *0x4951b4 = fcn.0045996e;\n        *0x4951b8 = 0;\n        *0x4951bc = 0;\n        *0x4951d8 = fcn.0047633a;\n        *0x4951dc = 0;\n        *0x4951e0 = 0;\n        *0x4951fc = fcn.00456f6b;\n        *0x495200 = 0;\n        *0x495204 = 0;\n        *0x495220 = fcn.0046347a;\n        *0x495224 = 0;\n        *0x495228 = 0;\n        *0x495244 = fcn.0046484a;\n        *0x495248 = 0;\n        *0x49524c = 0;\n        *0x495268 = fcn.00457850;\n        *0x49526c = 0;\n        *0x495270 = 0;\n        *0x49528c = fcn.00474c4c;\n        *0x495290 = 0;\n        *0x495294 = 0;\n        *0x4952b0 = fcn.00474a69;\n        *0x4952b4 = 0;\n        *0x4952b8 = 0;\n        *0x4952d4 = fcn.004574ea;\n        *0x4952d8 = 0;\n        *0x4952dc = 0;\n        *0x4952e0 = 2;\n        *0x4952e4 = 2;\n        *0x4952f8 = fcn.0047fddd;\n        *0x49519c = 4;\n        *0x4951a0 = 7;\n        *0x4951a8 = L\"PIXELGETCOLOR\";\n        *0x4951c0 = 2;\n        *0x4951c4 = 3;\n        *0x4951cc = L\"PIXELSEARCH\";\n        *0x4951e4 = 5;\n        *0x4951e8 = 8;\n        *0x4951f0 = L\"PLUGINCLOSE\";\n        *0x495208 = 1;\n        *0x49520c = 1;\n        *0x495214 = L\"PLUGINOPEN\";\n        *0x49522c = 1;\n        *0x495230 = 1;\n        *0x495238 = L\"PROCESSCLOSE\";\n        *0x495250 = 1;\n        *0x495254 = 1;\n        *0x49525c = L\"PROCESSEXISTS\";\n        *0x495274 = 1;\n        *0x495278 = 1;\n        *0x495280 = L\"PROCESSGETSTATS\";\n        *0x495298 = 0;\n        *0x49529c = 2;\n        *0x4952a4 = L\"PROCESSLIST\";\n        *0x4952bc = 0;\n        *0x4952c0 = 1;\n        *0x4952c8 = L\"PROCESSSETPRIORITY\";\n        *0x4952ec = L\"PROCESSWAIT\";\n        *0x4952fc = 0;\n        *0x495300 = 0;\n        *0x49531c = fcn.0047fcef;\n        *0x495320 = 0;\n        *0x495324 = 0;\n        *0x495340 = fcn.00458f3a;\n        *0x495344 = 0;\n        *0x495348 = 0;\n        *0x495364 = fcn.00458f50;\n        *0x495368 = 0;\n        *0x49536c = 0;\n        *0x495388 = fcn.00458e84;\n        *0x49538c = 0;\n        *0x495390 = 0;\n        *0x4953ac = fcn.0045a947;\n        *0x4953b0 = 0;\n        *0x4953b4 = 0;\n        *0x4953d0 = fcn.0045a3ee;\n        *0x4953d4 = 0;\n        *0x4953d8 = 0;\n        *0x4953f4 = fcn.0046af79;\n        *0x4953f8 = 0;\n        *0x4953fc = 0;\n        *0x495418 = fcn.0046ad9d;\n        *0x49541c = 0;\n        *0x495420 = 0;\n        *0x495424 = 2;\n        *0x495428 = 2;\n        *0x49543c = fcn.0046ab63;\n        *0x495440 = 0;\n        *0x495444 = 0;\n        *0x495448 = 2;\n        *0x49544c = 2;\n        *0x495304 = 1;\n        *0x495308 = 2;\n        *0x495310 = L\"PROCESSWAITCLOSE\";\n        *0x495328 = 1;\n        *0x49532c = 2;\n        *0x495334 = L\"PROGRESSOFF\";\n        *0x49534c = 0;\n        *0x495350 = 0;\n        *0x495358 = L\"PROGRESSON\";\n        *0x495370 = 2;\n        *0x495374 = 6;\n        *0x49537c = L\"PROGRESSSET\";\n        *0x495394 = 1;\n        *0x495398 = 3;\n        *0x4953a0 = 0x487fa8;\n        *0x4953b8 = 1;\n        *0x4953bc = 1;\n        *0x4953c4 = L\"RANDOM\";\n        *0x4953dc = 0;\n        *0x4953e0 = 3;\n        *0x4953e8 = L\"REGDELETE\";\n        *0x495400 = 1;\n        *0x495404 = 2;\n        *0x49540c = L\"REGENUMKEY\";\n        *0x495430 = L\"REGENUMVAL\";\n        *0x495454 = L\"REGREAD\";\n        *0x495460 = fcn.0046b780;\n        *0x495464 = 0;\n        *0x495468 = 0;\n        *0x49546c = 2;\n        *0x495470 = 2;\n        *0x495484 = fcn.0046b2a5;\n        *0x495488 = 0;\n        *0x49548c = 0;\n        *0x4954a8 = fcn.0040c980;\n        *0x4954ac = 0;\n        *0x4954b0 = 0;\n        *0x4954cc = fcn.00464831;\n        *0x4954d0 = 0;\n        *0x4954d4 = 0;\n        *0x4954f0 = fcn.00464818;\n        *0x4954f4 = 0;\n        *0x4954f8 = 0;\n        *0x495514 = fcn.0047fc37;\n        *0x495518 = 0;\n        *0x49551c = 0;\n        *0x495538 = fcn.0047fc93;\n        *0x49553c = 0;\n        *0x495540 = 0;\n        *0x49555c = fcn.004651e3;\n        *0x495560 = 0;\n        *0x495564 = 0;\n        *0x495580 = fcn.00478ca5;\n        *0x495584 = 0;\n        *0x495588 = 0;\n        *0x4955a4 = fcn.00472731;\n        *0x4955a8 = 0;\n        *0x4955ac = 0;\n        *0x495478 = L\"REGWRITE\";\n        *0x495490 = 1;\n        *0x495494 = 4;\n        *0x49549c = L\"ROUND\";\n        *0x4954b4 = 1;\n        *0x4954b8 = 2;\n        *0x4954c0 = 0x487f1c;\n        *0x4954d8 = 1;\n        *0x4954dc = 4;\n        *0x4954e4 = L\"RUNAS\";\n        *0x4954fc = 5;\n        *0x495500 = 8;\n        *0x495508 = L\"RUNASWAIT\";\n        *0x495520 = 5;\n        *0x495524 = 8;\n        *0x49552c = L\"RUNWAIT\";\n        *0x495544 = 1;\n        *0x495548 = 4;\n        *0x495550 = L\"SEND\";\n        *0x495568 = 1;\n        *0x49556c = 2;\n        *0x495574 = L\"SENDKEEPACTIVE\";\n        *0x49558c = 1;\n        *0x495590 = 2;\n        *0x495598 = L\"SETERROR\";\n        *0x4955b0 = 1;\n        *0x4955b4 = 3;\n        *0x4955bc = L\"SETEXTENDED\";\n        *0x4955c8 = fcn.004726ef;\n        *0x4955cc = 0;\n        *0x4955d0 = 0;\n        *0x4955ec = fcn.00457833;\n        *0x4955f0 = 0;\n        *0x4955f4 = 0;\n        *0x495610 = fcn.0047fbd9;\n        *0x495614 = 0;\n        *0x495618 = 0;\n        *0x495634 = fcn.004575f6;\n        *0x495638 = 0;\n        *0x49563c = 0;\n        *0x495658 = fcn.0045a1f6;\n        *0x49565c = 0;\n        *0x495660 = 0;\n        *0x49567c = fcn.0040d650;\n        *0x495680 = 0;\n        *0x495684 = 0;\n        *0x4956a0 = fcn.0046519a;\n        *0x4956a4 = 0;\n        *0x4956a8 = 0;\n        *0x4956c4 = fcn.004588af;\n        *0x4956c8 = 0;\n        *0x4956cc = 0;\n        *0x4956e8 = fcn.00459511;\n        *0x4956ec = 0;\n        *0x4956f0 = 0;\n        *0x49570c = fcn.004594fb;\n        *0x495710 = 0;\n        *0x495714 = 0;\n        *0x495730 = fcn.00459527;\n        *0x4955d4 = 1;\n        *0x4955d8 = 2;\n        *0x4955e0 = L\"SHELLEXECUTE\";\n        *0x4955f8 = 1;\n        *0x4955fc = 5;\n        *0x495604 = L\"SHELLEXECUTEWAIT\";\n        *0x49561c = 1;\n        *0x495620 = 5;\n        *0x495628 = L\"SHUTDOWN\";\n        *0x495640 = 1;\n        *0x495644 = 2;\n        *0x49564c = 0x487e38;\n        *0x495664 = 1;\n        *0x495668 = 1;\n        *0x495670 = L\"SLEEP\";\n        *0x495688 = 1;\n        *0x49568c = 1;\n        *0x495694 = L\"SOUNDPLAY\";\n        *0x4956ac = 1;\n        *0x4956b0 = 2;\n        *0x4956b8 = L\"SOUNDSETWAVEVOLUME\";\n        *0x4956d0 = 1;\n        *0x4956d4 = 1;\n        *0x4956dc = L\"SPLASHIMAGEON\";\n        *0x4956f4 = 2;\n        *0x4956f8 = 7;\n        *0x495700 = L\"SPLASHOFF\";\n        *0x495718 = 0;\n        *0x49571c = 0;\n        *0x495724 = L\"SPLASHTEXTON\";\n        *0x495734 = 0;\n        *0x495738 = 0;\n        *0x495754 = fcn.0045a07a;\n        *0x495758 = 0;\n        *0x49575c = 0;\n        *0x495778 = fcn.0044a449;\n        *0x49577c = 0;\n        *0x495780 = 0;\n        *0x49579c = fcn.0047cb86;\n        *0x4957a0 = 0;\n        *0x4957a4 = 0;\n        *0x4957c0 = fcn.0046ee3d;\n        *0x4957c4 = 0;\n        *0x4957c8 = 0;\n        *0x4957e4 = fcn.0046a759;\n        *0x4957e8 = 0;\n        *0x4957ec = 0;\n        *0x495808 = fcn.00456ec6;\n        *0x49580c = 0;\n        *0x495810 = 0;\n        *0x49582c = fcn.0046ee61;\n        *0x495830 = 0;\n        *0x495834 = 0;\n        *0x495850 = fcn.0045aa32;\n        *0x495854 = 0;\n        *0x495858 = 0;\n        *0x495874 = fcn.00456b0b;\n        *0x495878 = 0;\n        *0x49587c = 0;\n        *0x495898 = fcn.00456ddd;\n        *0x49573c = 2;\n        *0x495740 = 10;\n        *0x495748 = L\"SQRT\";\n        *0x495760 = 1;\n        *0x495764 = 1;\n        *0x49576c = L\"SRANDOM\";\n        *0x495784 = 1;\n        *0x495788 = 1;\n        *0x495790 = L\"STATUSBARGETTEXT\";\n        *0x4957a8 = 1;\n        *0x4957ac = 3;\n        *0x4957b4 = L\"STDERRREAD\";\n        *0x4957cc = 1;\n        *0x4957d0 = 3;\n        *0x4957d8 = L\"STDINWRITE\";\n        *0x4957f0 = 1;\n        *0x4957f4 = 2;\n        *0x4957fc = L\"STDIOCLOSE\";\n        *0x495814 = 1;\n        *0x495818 = 1;\n        *0x495820 = L\"STDOUTREAD\";\n        *0x495838 = 1;\n        *0x49583c = 3;\n        *0x495844 = L\"STRING\";\n        *0x49585c = 1;\n        *0x495860 = 1;\n        *0x495868 = L\"STRINGADDCR\";\n        *0x495880 = 1;\n        *0x495884 = 1;\n        *0x49588c = L\"STRINGCOMPARE\";\n        *0x49589c = 0;\n        *0x4958a0 = 0;\n        *0x4958bc = fcn.00469fd0;\n        *0x4958c0 = 0;\n        *0x4958c4 = 0;\n        *0x4958e0 = fcn.00473b75;\n        *0x4958e4 = 0;\n        *0x4958e8 = 0;\n        *0x495904 = fcn.00456c59;\n        *0x495908 = 0;\n        *0x49590c = 0;\n        *0x495928 = fcn.004567f9;\n        *0x49592c = 0;\n        *0x495930 = 0;\n        *0x49594c = fcn.0045685c;\n        *0x495950 = 0;\n        *0x495954 = 0;\n        *0x495970 = fcn.0045659f;\n        *0x495974 = 0;\n        *0x495978 = 0;\n        *0x495994 = fcn.00456794;\n        *0x495998 = 0;\n        *0x49599c = 0;\n        *0x4959b8 = fcn.00456adc;\n        *0x4959bc = 0;\n        *0x4959c0 = 0;\n        *0x4959dc = fcn.0045697e;\n        *0x4959e0 = 0;\n        *0x4959e4 = 0;\n        *0x495a00 = fcn.004566cc;\n        *0x4958a4 = 2;\n        *0x4958a8 = 3;\n        *0x4958b0 = L\"STRINGFORMAT\";\n        *0x4958c8 = 1;\n        *0x4958cc = 0x21;\n        *0x4958d4 = L\"STRINGFROMASCIIARRAY\";\n        *0x4958ec = 1;\n        *0x4958f0 = 4;\n        *0x4958f8 = L\"STRINGINSTR\";\n        *0x495910 = 2;\n        *0x495914 = 6;\n        *0x49591c = L\"STRINGISALNUM\";\n        *0x495934 = 1;\n        *0x495938 = 1;\n        *0x495940 = L\"STRINGISALPHA\";\n        *0x495958 = 1;\n        *0x49595c = 1;\n        *0x495964 = L\"STRINGISASCII\";\n        *0x49597c = 1;\n        *0x495980 = 1;\n        *0x495988 = L\"STRINGISDIGIT\";\n        *0x4959a0 = 1;\n        *0x4959a4 = 1;\n        *0x4959ac = L\"STRINGISFLOAT\";\n        *0x4959c4 = 1;\n        *0x4959c8 = 1;\n        *0x4959d0 = L\"STRINGISINT\";\n        *0x4959e8 = 1;\n        *0x4959ec = 1;\n        *0x4959f4 = L\"STRINGISLOWER\";\n        *0x495a04 = 0;\n        *0x495a08 = 0;\n        *0x495a24 = fcn.00456604;\n        *0x495a28 = 0;\n        *0x495a2c = 0;\n        *0x495a48 = fcn.00456669;\n        *0x495a4c = 0;\n        *0x495a50 = 0;\n        *0x495a6c = fcn.0045672f;\n        *0x495a70 = 0;\n        *0x495a74 = 0;\n        *0x495a90 = fcn.00463107;\n        *0x495a94 = 0;\n        *0x495a98 = 0;\n        *0x495a9c = 2;\n        *0x495aa0 = 2;\n        *0x495ab4 = fcn.00456e53;\n        *0x495ab8 = 0;\n        *0x495abc = 0;\n        *0x495ad8 = fcn.00456c05;\n        *0x495adc = 0;\n        *0x495ae0 = 0;\n        *0x495afc = fcn.00463002;\n        *0x495b00 = 0;\n        *0x495b04 = 0;\n        *0x495b20 = fcn.0047c281;\n        *0x495b24 = 0;\n        *0x495b28 = 0;\n        *0x495b44 = fcn.0046ed10;\n        *0x495b48 = 0;\n        *0x495b4c = 0;\n        *0x495b68 = fcn.00462cc9;\n        *0x495a0c = 1;\n        *0x495a10 = 1;\n        *0x495a18 = L\"STRINGISSPACE\";\n        *0x495a30 = 1;\n        *0x495a34 = 1;\n        *0x495a3c = L\"STRINGISUPPER\";\n        *0x495a54 = 1;\n        *0x495a58 = 1;\n        *0x495a60 = L\"STRINGISXDIGIT\";\n        *0x495a78 = 1;\n        *0x495a7c = 1;\n        *0x495a84 = L\"STRINGLEFT\";\n        *0x495aa8 = L\"STRINGLEN\";\n        *0x495ac0 = 1;\n        *0x495ac4 = 1;\n        *0x495acc = L\"STRINGLOWER\";\n        *0x495ae4 = 1;\n        *0x495ae8 = 1;\n        *0x495af0 = L\"STRINGMID\";\n        *0x495b08 = 2;\n        *0x495b0c = 3;\n        *0x495b14 = L\"STRINGREGEXP\";\n        *0x495b2c = 2;\n        *0x495b30 = 4;\n        *0x495b38 = L\"STRINGREGEXPREPLACE\";\n        *0x495b50 = 3;\n        *0x495b54 = 4;\n        *0x495b5c = L\"STRINGREPLACE\";\n        *0x495b6c = 0;\n        *0x495b70 = 0;\n        *0x495b78 = 5;\n        *0x495b8c = fcn.0046309d;\n        *0x495b90 = 0;\n        *0x495b98 = 2;\n        *0x495b9c = 2;\n        *0x495bb0 = fcn.00473ed9;\n        *0x495bb4 = 0;\n        *0x495bd4 = fcn.00456b71;\n        *0x495bd8 = 0;\n        *0x495bf8 = fcn.00462ad2;\n        *0x495bfc = 0;\n        *0x495c04 = 2;\n        *0x495c08 = 2;\n        *0x495c1c = fcn.00473d3c;\n        *0x495c20 = 0;\n        *0x495c40 = fcn.0046a364;\n        *0x495c44 = 0;\n        *0x495c64 = fcn.00462f90;\n        *0x495c68 = 0;\n        *0x495c70 = 2;\n        *0x495c74 = 2;\n        *0x495c88 = fcn.00462f21;\n        *0x495c8c = 0;\n        *0x495c94 = 2;\n        *0x495c98 = 2;\n        *0x495cac = fcn.00456bb3;\n        *0x495cb0 = 0;\n        *0x495b74 = 3;\n        *0x495b80 = L\"STRINGRIGHT\";\n        *0x495b94 = 0;\n        *0x495ba4 = L\"STRINGSPLIT\";\n        *0x495bb8 = 0;\n        *0x495bbc = 2;\n        *0x495bc0 = 3;\n        *0x495bc8 = L\"STRINGSTRIPCR\";\n        *0x495bdc = 0;\n        *0x495be0 = 1;\n        *0x495be4 = 1;\n        *0x495bec = L\"STRINGSTRIPWS\";\n        *0x495c00 = 0;\n        *0x495c10 = L\"STRINGTOASCIIARRAY\";\n        *0x495c24 = 0;\n        *0x495c28 = 1;\n        *0x495c2c = 4;\n        *0x495c34 = L\"STRINGTOBINARY\";\n        *0x495c48 = 0;\n        *0x495c4c = 1;\n        *0x495c50 = 2;\n        *0x495c58 = L\"STRINGTRIMLEFT\";\n        *0x495c6c = 0;\n        *0x495c7c = L\"STRINGTRIMRIGHT\";\n        *0x495c90 = 0;\n        *0x495ca0 = L\"STRINGUPPER\";\n        *0x495cb4 = 0;\n        *0x495cb8 = 1;\n        *0x495cbc = 1;\n        *0x495cc4 = 0x48798c;\n        *0x495cd0 = fcn.0045a274;\n        *0x495cd4 = 0;\n        *0x495cf4 = fcn.004584de;\n        *0x495cf8 = 0;\n        *0x495d18 = fcn.0045847b;\n        *0x495d1c = 0;\n        *0x495d3c = fcn.00464d64;\n        *0x495d40 = 0;\n        *0x495d48 = 2;\n        *0x495d4c = 2;\n        *0x495d60 = fcn.00464c5a;\n        *0x495d64 = 0;\n        *0x495d84 = fcn.0046cca5;\n        *0x495d88 = 0;\n        *0x495da8 = fcn.0046cad3;\n        *0x495dac = 0;\n        *0x495dcc = fcn.0046ca49;\n        *0x495dd0 = 0;\n        *0x495dd8 = 2;\n        *0x495ddc = 2;\n        *0x495df0 = fcn.004583eb;\n        *0x495df4 = 0;\n        *0x495e14 = fcn.00458429;\n        *0x495e18 = 0;\n        *0x495cd8 = 0;\n        *0x495cdc = 1;\n        *0x495ce0 = 1;\n        *0x495ce8 = L\"TCPACCEPT\";\n        *0x495cfc = 0;\n        *0x495d00 = 1;\n        *0x495d04 = 1;\n        *0x495d0c = L\"TCPCLOSESOCKET\";\n        *0x495d20 = 0;\n        *0x495d24 = 1;\n        *0x495d28 = 1;\n        *0x495d30 = L\"TCPCONNECT\";\n        *0x495d44 = 0;\n        *0x495d54 = L\"TCPLISTEN\";\n        *0x495d68 = 0;\n        *0x495d6c = 2;\n        *0x495d70 = 3;\n        *0x495d78 = L\"TCPNAMETOIP\";\n        *0x495d8c = 0;\n        *0x495d90 = 1;\n        *0x495d94 = 1;\n        *0x495d9c = L\"TCPRECV\";\n        *0x495db0 = 0;\n        *0x495db4 = 2;\n        *0x495db8 = 3;\n        *0x495dc0 = L\"TCPSEND\";\n        *0x495dd4 = 0;\n        *0x495de4 = L\"TCPSHUTDOWN\";\n        *0x495df8 = 0;\n        *0x495dfc = 0;\n        *0x495e00 = 0;\n        *0x495e08 = L\"TCPSTARTUP\";\n        *0x495e1c = 0;\n        *0x495e20 = 0;\n        *0x495e24 = 0;\n        *0x495e2c = L\"TIMERDIFF\";\n        *0x495e38 = fcn.0040ce70;\n        *0x495e3c = 0;\n        *0x495e5c = fcn.0040d3f0;\n        *0x495e60 = 0;\n        *0x495e80 = fcn.00456027;\n        *0x495e84 = 0;\n        *0x495ea4 = fcn.00469fb9;\n        *0x495ea8 = 0;\n        *0x495ec8 = fcn.00469fa2;\n        *0x495ecc = 0;\n        *0x495eec = fcn.0045651b;\n        *0x495ef0 = 0;\n        *0x495f10 = fcn.0046299d;\n        *0x495f14 = 0;\n        *0x495f34 = fcn.004564cf;\n        *0x495f38 = 0;\n        *0x495f58 = fcn.00456482;\n        *0x495f5c = 0;\n        *0x495f7c = fcn.00456414;\n        *0x495f80 = 0;\n        *0x495e40 = 0;\n        *0x495e44 = 1;\n        *0x495e48 = 1;\n        *0x495e50 = L\"TIMERINIT\";\n        *0x495e64 = 0;\n        *0x495e68 = 0;\n        *0x495e6c = 0;\n        *0x495e74 = L\"TOOLTIP\";\n        *0x495e88 = 0;\n        *0x495e8c = 1;\n        *0x495e90 = 6;\n        *0x495e98 = L\"TRAYCREATEITEM\";\n        *0x495eac = 0;\n        *0x495eb0 = 1;\n        *0x495eb4 = 4;\n        *0x495ebc = L\"TRAYCREATEMENU\";\n        *0x495ed0 = 0;\n        *0x495ed4 = 1;\n        *0x495ed8 = 4;\n        *0x495ee0 = L\"TRAYGETMSG\";\n        *0x495ef4 = 0;\n        *0x495ef8 = 0;\n        *0x495efc = 1;\n        *0x495f04 = L\"TRAYITEMDELETE\";\n        *0x495f18 = 0;\n        *0x495f1c = 1;\n        *0x495f20 = 1;\n        *0x495f28 = L\"TRAYITEMGETHANDLE\";\n        *0x495f3c = 0;\n        *0x495f40 = 1;\n        *0x495f44 = 1;\n        *0x495f4c = L\"TRAYITEMGETSTATE\";\n        *0x495f60 = 0;\n        *0x495f64 = 1;\n        *0x495f68 = 1;\n        *0x495f70 = L\"TRAYITEMGETTEXT\";\n        *0x495f84 = 0;\n        *0x495f88 = 1;\n        *0x495f8c = 1;\n        *0x495f94 = L\"TRAYITEMSETONEVENT\";\n        *0x495fa0 = fcn.00469ef3;\n        *0x495fa4 = 0;\n        *0x495fac = 2;\n        *0x495fb0 = 2;\n        *0x495fc4 = fcn.0046295a;\n        *0x495fc8 = 0;\n        *0x495fd0 = 2;\n        *0x495fd4 = 2;\n        *0x495fe8 = fcn.00462919;\n        *0x495fec = 0;\n        *0x495ff4 = 2;\n        *0x495ff8 = 2;\n        *0x49600c = fcn.00449f7e;\n        *0x496010 = 0;\n        *0x496030 = fcn.004628a3;\n        *0x496034 = 0;\n        *0x496054 = fcn.00469e22;\n        *0x496058 = 0;\n        *0x496060 = 2;\n        *0x496064 = 2;\n        *0x496078 = fcn.0045639e;\n        *0x49607c = 0;\n        *0x49609c = fcn.00469ece;\n        *0x4960a0 = 0;\n        *0x4960c0 = fcn.0046280a;\n        *0x4960c4 = 0;\n        *0x4960e4 = fcn.004587d3;\n        *0x495fa8 = 0;\n        *0x495fb8 = L\"TRAYITEMSETSTATE\";\n        *0x495fcc = 0;\n        *0x495fdc = L\"TRAYITEMSETTEXT\";\n        *0x495ff0 = 0;\n        *0x496000 = L\"TRAYSETCLICK\";\n        *0x496014 = 0;\n        *0x496018 = 0;\n        *0x49601c = 1;\n        *0x496024 = L\"TRAYSETICON\";\n        *0x496038 = 0;\n        *0x49603c = 0;\n        *0x496040 = 2;\n        *0x496048 = L\"TRAYSETONEVENT\";\n        *0x49605c = 0;\n        *0x49606c = L\"TRAYSETPAUSEICON\";\n        *0x496080 = 0;\n        *0x496084 = 0;\n        *0x496088 = 2;\n        *0x496090 = L\"TRAYSETSTATE\";\n        *0x4960a4 = 0;\n        *0x4960a8 = 0;\n        *0x4960ac = 1;\n        *0x4960b4 = L\"TRAYSETTOOLTIP\";\n        *0x4960c8 = 0;\n        *0x4960cc = 0;\n        *0x4960d0 = 1;\n        *0x4960d8 = L\"TRAYTIP\";\n        *0x4960e8 = 0;\n        *0x4960ec = 0;\n        *0x4960f0 = 3;\n        *0x4960f4 = 4;\n        *0x496108 = fcn.00458a7e;\n        *0x49610c = 0;\n        *0x49612c = fcn.00475abe;\n        *0x496130 = 0;\n        *0x496138 = 2;\n        *0x49613c = 2;\n        *0x496150 = fcn.0047586f;\n        *0x496154 = 0;\n        *0x496174 = fcn.00475976;\n        *0x496178 = 0;\n        *0x496198 = fcn.00475c44;\n        *0x49619c = 0;\n        *0x4961bc = fcn.00475fbc;\n        *0x4961c0 = 0;\n        *0x4961c8 = 2;\n        *0x4961cc = 2;\n        *0x4961e0 = fcn.004583eb;\n        *0x4961e4 = 0;\n        *0x496204 = fcn.00458429;\n        *0x496208 = 0;\n        *0x496228 = fcn.00458265;\n        *0x49622c = 0;\n        *0x49624c = fcn.00479e8f;\n        *0x4960fc = L\"UBOUND\";\n        *0x496110 = 0;\n        *0x496114 = 1;\n        *0x496118 = 2;\n        *0x496120 = L\"UDPBIND\";\n        *0x496134 = 0;\n        *0x496144 = L\"UDPCLOSESOCKET\";\n        *0x496158 = 0;\n        *0x49615c = 1;\n        *0x496160 = 1;\n        *0x496168 = L\"UDPOPEN\";\n        *0x49617c = 0;\n        *0x496180 = 2;\n        *0x496184 = 3;\n        *0x49618c = L\"UDPRECV\";\n        *0x4961a0 = 0;\n        *0x4961a4 = 2;\n        *0x4961a8 = 3;\n        *0x4961b0 = L\"UDPSEND\";\n        *0x4961c4 = 0;\n        *0x4961d4 = L\"UDPSHUTDOWN\";\n        *0x4961e8 = 0;\n        *0x4961ec = 0;\n        *0x4961f0 = 0;\n        *0x4961f8 = L\"UDPSTARTUP\";\n        *0x49620c = 0;\n        *0x496210 = 0;\n        *0x496214 = 0;\n        *0x49621c = L\"VARGETTYPE\";\n        *0x496230 = 0;\n        *0x496234 = 1;\n        *0x496238 = 1;\n        *0x496240 = L\"WINACTIVATE\";\n        *0x496250 = 0;\n        *0x496254 = 0;\n        *0x496258 = 1;\n        *0x496270 = fcn.00479fbe;\n        *0x496274 = 0;\n        *0x496294 = fcn.00479b6e;\n        *0x496298 = 0;\n        *0x4962b8 = fcn.00479f73;\n        *0x4962bc = 0;\n        *0x4962dc = fcn.00478d20;\n        *0x4962e0 = 0;\n        *0x496300 = fcn.00473a2d;\n        *0x496304 = 0;\n        *0x496324 = fcn.004793ec;\n        *0x496328 = 0;\n        *0x496348 = fcn.00479302;\n        *0x49634c = 0;\n        *0x49636c = fcn.00479292;\n        *0x496370 = 0;\n        *0x496390 = fcn.0047964e;\n        *0x496394 = 0;\n        *0x4963b4 = fcn.00478dfd;\n        *0x49625c = 2;\n        *0x496264 = L\"WINACTIVE\";\n        *0x496278 = 0;\n        *0x49627c = 1;\n        *0x496280 = 2;\n        *0x496288 = L\"WINCLOSE\";\n        *0x49629c = 0;\n        *0x4962a0 = 1;\n        *0x4962a4 = 2;\n        *0x4962ac = L\"WINEXISTS\";\n        *0x4962c0 = 0;\n        *0x4962c4 = 1;\n        *0x4962c8 = 2;\n        *0x4962d0 = L\"WINFLASH\";\n        *0x4962e4 = 0;\n        *0x4962e8 = 1;\n        *0x4962ec = 4;\n        *0x4962f4 = L\"WINGETCARETPOS\";\n        *0x496308 = 0;\n        *0x49630c = 0;\n        *0x496310 = 0;\n        *0x496318 = L\"WINGETCLASSLIST\";\n        *0x49632c = 0;\n        *0x496330 = 1;\n        *0x496334 = 2;\n        *0x49633c = L\"WINGETCLIENTSIZE\";\n        *0x496350 = 0;\n        *0x496354 = 1;\n        *0x496358 = 2;\n        *0x496360 = L\"WINGETHANDLE\";\n        *0x496374 = 0;\n        *0x496378 = 1;\n        *0x49637c = 2;\n        *0x496384 = L\"WINGETPOS\";\n        *0x496398 = 0;\n        *0x49639c = 1;\n        *0x4963a0 = 2;\n        *0x4963a8 = L\"WINGETPROCESS\";\n        *0x4963b8 = 0;\n        *0x4963bc = 0;\n        *0x4963c0 = 1;\n        *0x4963c4 = 2;\n        *0x4963d8 = fcn.0047911d;\n        *0x4963dc = 0;\n        *0x4963fc = fcn.0047996b;\n        *0x496400 = 0;\n        *0x496420 = fcn.00479a05;\n        *0x496424 = 0;\n        *0x496444 = fcn.00479aff;\n        *0x496448 = 0;\n        *0x496468 = fcn.00478e90;\n        *0x49646c = 0;\n        *0x49648c = fcn.0047945b;\n        *0x496490 = 0;\n        *0x4964b0 = 0x44191c;\n        *0x4964b4 = 0;\n        *0x4964d4 = 0x4418e4;\n        *0x4964d8 = 0;\n        *0x496504 = 4;\n        *0x4964f8 = fcn.00479bdb;\n        *0x49651c = fcn.00479765;\n        *0x4963cc = L\"WINGETSTATE\";\n        *0x4963e0 = 0;\n        *0x4963e4 = 1;\n        *0x4963e8 = 2;\n        *0x4963f0 = L\"WINGETTEXT\";\n        *0x496404 = 0;\n        *0x496408 = 1;\n        *0x49640c = 2;\n        *0x496414 = L\"WINGETTITLE\";\n        *0x496428 = 0;\n        *0x49642c = 1;\n        *0x496430 = 2;\n        *0x496438 = L\"WINKILL\";\n        *0x49644c = 0;\n        *0x496450 = 1;\n        *0x496454 = 2;\n        *0x49645c = L\"WINLIST\";\n        *0x496470 = 0;\n        *0x496474 = 0;\n        *0x496478 = 2;\n        *0x496480 = L\"WINMENUSELECTITEM\";\n        *0x496494 = 0;\n        *0x496498 = 3;\n        *0x49649c = 9;\n        *0x4964a4 = L\"WINMINIMIZEALL\";\n        *0x4964b8 = 0;\n        *0x4964bc = 0;\n        *0x4964c0 = 0;\n        *0x4964c8 = L\"WINMINIMIZEALLUNDO\";\n        *0x4964dc = 0;\n        *0x4964e0 = 0;\n        *0x4964e4 = 0;\n        *0x4964ec = L\"WINMOVE\";\n        *0x4964fc = 0;\n        *0x496500 = 0;\n        *0x496508 = 7;\n        *0x496510 = L\"WINSETONTOP\";\n        *0x496520 = 0;\n        *0x496524 = 0;\n        *0x496528 = 3;\n        *0x49652c = 3;\n        *0x496534 = L\"WINSETSTATE\";\n        *0x496540 = fcn.00479dda;\n        *0x496564 = fcn.00479a91;\n        *0x496588 = fcn.00479057;\n        *0x4965ac = fcn.00480035;\n        *0x4965d0 = fcn.0047ffdc;\n        *0x4965f4 = fcn.0047ff2a;\n        *0x496548 = 0;\n        *0x49656c = 0;\n        *0x496590 = 0;\n        *0x4965b4 = 0;\n        *0x4965d8 = 0;\n        *0x4965fc = 0;\n        *0x49661c = 0;\n        *0x496618 = fcn.0047ff83;\n        *0x49654c = 3;\n        *0x496550 = 3;\n        *0x496570 = 3;\n        *0x496574 = 3;\n        *0x496594 = 3;\n        *0x496598 = 3;\n        *0x4965bc = 3;\n        *0x4965e0 = 3;\n        *0x496604 = 3;\n        *0x496628 = 3;\n        *0x496544 = 0;\n        *0x496558 = L\"WINSETTITLE\";\n        *0x496568 = 0;\n        *0x49657c = L\"WINSETTRANS\";\n        *0x49658c = 0;\n        *0x4965a0 = L\"WINWAIT\";\n        *0x4965b0 = 0;\n        *0x4965b8 = 1;\n        *0x4965c4 = L\"WINWAITACTIVE\";\n        *0x4965d4 = 0;\n        *0x4965dc = 1;\n        *0x4965e8 = L\"WINWAITCLOSE\";\n        *0x4965f8 = 0;\n        *0x496600 = 1;\n        *0x49660c = L\"WINWAITNOTACTIVE\";\n        *0x496620 = 0;\n        *0x496624 = 1;\n    }\n    if ((*0x4a9544 & 2) != 0) {\n        return arg_ch * 0x24 + 0x492e38;\n    }\n    *arg_8h = 0x18e;\n    *0x4a9544 = *0x4a9544 | 2;\n    *0x4a9548 = 0x18e;\n    return arg_ch * 0x24 + 0x492e38;\n}\n",
        "token_count": 29610
    },
    "0040c980": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c980(int32_t arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    int32_t iVar2;\n    float10 fVar3;\n    ulong uVar4;\n    \n    iVar2 = arg_8h;\n    if (*(arg_8h + 8) == 1) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = fcn.0040c8f0();\n    }\n    fVar3 = fcn.0042616b(*0x48bdc0, arg_8h);\n    dVar1 = fVar3;\n    fVar3 = fcn.0040bd40();\n    if (fVar3 < *0x48bd88) {\n        fVar3 = fcn.0040bd40();\n        fVar3 = fcn.004261b6(fVar3 * dVar1 - *0x48bdd8);\n    }\n    else {\n        fVar3 = fcn.0040bd40();\n        fVar3 = fcn.0042618e(fVar3 * dVar1 + *0x48bdd8);\n    }\n    fcn.004091e0();\n    *arg_ch = fVar3 / dVar1;\n    *(arg_ch + 1) = 3;\n    if (*(iVar2 + 8) == 1) {\n        uVar4 = fcn.00442d6f(arg_ch);\n        fcn.004091e0();\n        *(arg_ch + 1) = 2;\n        *arg_ch = uVar4;\n        *(arg_ch + 4) = uVar4 >> 0x20;\n    }\n    return 0;\n}\n",
        "token_count": 378
    },
    "0040df40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 fcn.0040df40(void)\n\n{\n    if ((*0x4a95b8 & 1) != 0) {\n        return *0x4a95b0;\n    }\n    *0x4a95b8 = *0x4a95b8 | 1;\n    fcn.0040f470();\n    return *0x4a95b0;\n}\n",
        "token_count": 88
    },
    "0040e530": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e530(uint32_t arg_8h)\n\n{\n    fcn.004091e0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040eed0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eed0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h & 2) == 0) {\n        fcn.0040ef20();\n        if ((arg_8h & 1) != 0) {\n            fcn.0041137c();\n        }\n    }\n    else {\n        iVar1 = *(in_ECX + -4);\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            fcn.0040ef20();\n        }\n        if ((arg_8h & 1) != 0) {\n            fcn.0041137c(in_ECX + -4);\n        }\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0040f2f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040f2f0(void)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    uVar1 = *(unaff_ESI + 0x28);\n    if ((((uVar1 & 3) != 0) && ((uVar1 & 0x10) == 0)) &&\n       (((uVar1 & 1) == 0 || ((*(unaff_ESI + 0x10) | *(unaff_ESI + 0x14)) == 0)))) {\n        if ((uVar1 & 0x20) != 0) {\n            fcn.00443b7c(unaff_ESI, 0x486004, 2);\n            *(unaff_ESI + 0x2c) = 1;\n            *(unaff_ESI + 0x30) = 2;\n            return;\n        }\n        if ((uVar1 & 0x40) != 0) {\n            fcn.00443b7c(unaff_ESI, 0x48606c, 2);\n            *(unaff_ESI + 0x2c) = 2;\n            *(unaff_ESI + 0x30) = 2;\n            return;\n        }\n        if (uVar1 < '\\0') {\n            fcn.00443b7c(unaff_ESI, 0x486b24, 3);\n            *(unaff_ESI + 0x30) = 3;\n            *(unaff_ESI + 0x2c) = 4;\n            return;\n        }\n        if ((uVar1 & 0x100) != 0) {\n            *(unaff_ESI + 0x30) = 0;\n            *(unaff_ESI + 0x2c) = 4;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "00411777": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411777(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *var_10h;\n    char *var_4h;\n    \n    do {\n        iVar2 = fcn.0041376b(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00411b28(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x49664c & 1) == 0) {\n        *0x49664c = *0x49664c | 1;\n        var_4h = \"bad allocation\";\n        fcn.00418180(&var_4h);\n        *0x496640 = vtable.std::bad_alloc.0;\n        fcn.004114aa(0x42636e);\n    }\n    fcn.0041826f(0x496640);\n    var_10h = vtable.std::bad_alloc.0;\n    fcn.004182c5(&var_10h, 0x48bf04);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 268
    },
    "0041b972": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041b972(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00416e30(0x48c2b8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0041814a();\n        *puVar2 = 0;\n        puVar2 = fcn.00418137();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4a9610)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4a9620;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0041b016(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00418137();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0041814a();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0041b275(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0041ba3e();\n                goto code_r0x0041ba35;\n            }\n        }\n        puVar2 = fcn.0041814a();\n        *puVar2 = 0;\n        puVar2 = fcn.00418137();\n        *puVar2 = 9;\n        fcn.004180e5();\n    }\ncode_r0x0041ba35:\n    fcn.00416e75();\n    return;\n}\n",
        "token_count": 612
    },
    "0041e3d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e3d4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00416e30(0x48c378, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0041814a();\n        *puVar2 = 0;\n        puVar2 = fcn.00418137();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4a9610)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4a9620;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0041b016(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00418137();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0041814a();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0041e35f(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0041e4a0();\n                goto code_r0x0041e497;\n            }\n        }\n        puVar2 = fcn.0041814a();\n        *puVar2 = 0;\n        puVar2 = fcn.00418137();\n        *puVar2 = 9;\n        fcn.004180e5();\n    }\ncode_r0x0041e497:\n    fcn.00416e75();\n    return;\n}\n",
        "token_count": 614
    },
    "0042f201": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f201(int32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    puVar3 = *(arg_14h + 0x68) + *(*(arg_14h + 0xc) + arg_8h * 4);\n    if (*(arg_14h + 0x6c) - arg_ch < arg_10h) {\n        return 0;\n    }\n    if ((arg_18h & 1) == 0) {\n        if (0 < arg_10h) {\n            do {\n                uVar2 = *puVar3;\n                uVar1 = *arg_ch;\n                arg_10h = arg_10h + -1;\n                arg_ch = arg_ch + 1;\n                puVar3 = puVar3 + 1;\n                if (uVar2 != uVar1) {\n                    return 0;\n                }\n            } while (0 < arg_10h);\n            return 1;\n        }\n    }\n    else if (0 < arg_10h) {\n        iVar4 = puVar3 - arg_ch;\n        do {\n            uVar2 = *arg_ch;\n            puVar3 = arg_ch + iVar4;\n            arg_10h = arg_10h + -1;\n            arg_ch = arg_ch + 1;\n            if (*(*puVar3 + *(arg_14h + 0x30)) != *(uVar2 + *(arg_14h + 0x30))) {\n                return 0;\n            }\n        } while (0 < arg_10h);\n    }\n    return 1;\n}\n",
        "token_count": 409
    },
    "00434db8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00434db8(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t arg_14h;\n    \n    arg_14h = arg_ch & 0xff;\n    uVar1 = (*_sym.imp.USER32.dll_GetKeyState)(arg_14h);\n    uVar3 = uVar1 & 0xffffff01;\n    if (arg_10h != uVar3) {\n        uVar3 = arg_14h;\n        uVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(arg_14h, 0, 0);\n        fcn.00434d00(arg_8h, arg_ch, uVar2, uVar3);\n        fcn.00434d5f(arg_8h);\n        uVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(arg_14h, 0, 2);\n        fcn.00434d00(arg_8h, arg_ch, uVar2, arg_14h);\n        uVar3 = fcn.00434d8c(arg_8h);\n        uVar3 = uVar3 & 0xffffff00 | uVar1 & 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 302
    },
    "00440522": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440522(uint32_t arg_8h)\n\n{\n    fcn.004305e7();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0044276b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044276b(uint32_t arg_8h)\n\n{\n    fcn.00432374();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00443420": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443420(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x487114;\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0044481d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044481d(uint32_t arg_8h)\n\n{\n    fcn.00434e71();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00449fbe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449fbe(uint32_t arg_8h)\n\n{\n    fcn.00441954();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0044a468": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a468(uint32_t arg_8h)\n\n{\n    fcn.00441fd3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0044cac6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044cac6(uint32_t arg_8h)\n\n{\n    fcn.00410d40();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00451184": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451184(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    char cVar1;\n    double in_stack_00000018;\n    uint var_14h;\n    \n    fcn.00401c30();\n    cVar1 = fcn.004417f1(0x4a8630, arg_8h, &arg_10h, &arg_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = **(*0x4a8690 + arg_10h * 4);\n        arg_ch_00 = **(*0x4a86a4 + arg_8h * 4);\n        if ((*(arg_ch_00 + 0x89) & 1) == 0) {\n            if (*0x48bdc8 == in_stack_00000018) {\n                arg_10h = *(arg_8h_00 + 0x7c);\n            }\n            else {\n                arg_10h = fcn.00426200();\n            }\n            if (arg_ch == -1) {\n                arg_ch = *(arg_8h_00 + 0x80);\n            }\n            if (arg_14h == -1) {\n                arg_14h = *(arg_8h_00 + 0x84);\n            }\n            cVar1 = fcn.004362d6(&var_14h);\n            if (cVar1 != '\\0') {\n                fcn.0040e410(arg_8h_00 + 0x6c);\n            }\n            fcn.00440c06(arg_8h_00, arg_ch_00, &var_14h, arg_10h, arg_ch, arg_14h, arg_18h, 1);\n            fcn.00402260();\n            return 1;\n        }\n    }\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 469
    },
    "00454390": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454390(uint32_t arg_8h)\n\n{\n    fcn.0044c991();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004547bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004547bf(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t lParam)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.00431228(0x4a8630, arg_8h);\n    iVar1 = **(*0x4a8690 + iVar1 * 4);\n    uVar2 = arg_ch & 0xfff0;\n    if (uVar2 < 0xf031) {\n        if (uVar2 == 0xf030) {\n            fcn.004513d8(0x4a8630, 0xfffffffa, iVar1, 0, 0);\n        }\n        else {\n            if (uVar2 == 0xf000) {\n                *(iVar1 + 0x188) = 1;\n                goto code_r0x00454887;\n            }\n            if (uVar2 != 0xf020) goto code_r0x00454887;\n            fcn.004513d8(0x4a8630, 0xfffffffc, iVar1, 0, 0);\n            fcn.00449ef9();\n        }\n    }\n    else {\n        if (uVar2 == 0xf060) {\n            fcn.004513d8(0x4a8630, 0xfffffffd, iVar1, 0, 0);\n            return;\n        }\n        if (uVar2 != 0xf120) goto code_r0x00454887;\n        fcn.004513d8(0x4a8630, 0xfffffffb, iVar1, 0, 0);\n    }\n    if ((*0x4a8640 & 1) != 0) {\n        return;\n    }\ncode_r0x00454887:\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x112, arg_ch, arg_10h & 0xffff | lParam << 0x10);\n    return;\n}\n",
        "token_count": 452
    },
    "0045b01e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045b01e(uint32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    \n    arg_8h_00 = in_ECX + -0x88;\n    fcn.0045affc(arg_8h_00);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c(arg_8h_00);\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 118
    },
    "0045ea32": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ea32(uint32_t arg_8h)\n\n{\n    fcn.00452fba();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0046738c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046738c(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00410b60();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c(in_ECX + -0x49c);\n    }\n    return in_ECX + -0x49c;\n}\n",
        "token_count": 89
    },
    "004682e3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004682e3(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    \n    uVar2 = *(arg_8h + 0x2c);\n    if ((uVar2 & 1) != 0) {\n        uVar2 = fcn.00443cbc(arg_8h, arg_ch);\n        return uVar2;\n    }\n    if ((uVar2 & 2) != 0) {\n        uVar2 = fcn.00443c50(arg_8h, arg_ch);\n        return uVar2;\n    }\n    if ((uVar2 & 4) == 0) {\n        fcn.0040d610();\n        fcn.004581ef(arg_ch, &var_10h);\n    }\n    else {\n        fcn.0040d610();\n        fcn.00453c1d(arg_ch, &var_10h);\n    }\n    uVar1 = fcn.00443ce1(arg_8h, &var_10h);\n    uVar2 = fcn.00401350();\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 277
    },
    "0046f712": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f712(uint32_t arg_8h)\n\n{\n    fcn.00410e00();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041137c();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "004499ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004499ad(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    \n    puVar2 = arg_ch;\n    uVar1 = arg_8h;\n    cVar3 = fcn.004417f1(0x4a8630, arg_8h, &arg_8h, &arg_ch);\n    if (cVar3 != '\\0') {\n    // switch table (29 cases) at 0x449a81\n        switch(*(**(*0x4a86a4 + arg_ch * 4) + 0x88)) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 0x10:\n        case 0x12:\n        case 0x13:\n        case 0x16:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n            *puVar2 = ***(*0x4a86a4 + arg_ch * 4);\n            return 1;\n        case 0xc:\n            *puVar2 = *(**(*0x4a86a4 + arg_ch * 4) + 8);\n            return 1;\n        case 0xe:\n            var_30h = 0x30;\n            var_2ch = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*(**(*0x4a86a4 + arg_ch * 4) + 8), uVar1, 0, &var_30h);\n            if (iVar4 != 0) {\n                *puVar2 = var_1ch;\n                return 1;\n            }\n            break;\n        case 0x11:\n            *puVar2 = *(**(*0x4a86a4 + arg_ch * 4) + 0xc);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 526
    },
    "0040f790": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint8_t __cdecl fcn.0040f790(uint *arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t unaff_EBX;\n    int32_t unaff_EDI;\n    char acStackY65572 [65516];\n    uint uStackY56;\n    uint *puStackY52;\n    char *pcStackY48;\n    uint var_20h;\n    uint *var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    char *var_4h;\n    \n    var_4h = 0x40f79d;\n    fcn.00422880();\n    iVar2 = 0;\n    do {\n        uVar1 = *(iVar2 + 0x492198);\n        *(&fcn.0040f790::var_20h + iVar2) = *(iVar2 + 0x4921a0);\n        (&stack0xffffffe4)[iVar2] = uVar1;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 8);\n    var_8h = &fcn.0040f790::var_8h;\n    var_4h = \"AU3!\";\n    var_ch = 0x40f7c8;\n    fcn.00413800();\n    var_ch = 4;\n    var_10h = &fcn.0040f790::var_8h;\n    fcn.00411000(&fcn.0040f790::var_10h, var_10h, 4);\n    var_ch = unaff_EDI;\n    var_4h = unaff_EBX;\n    do {\n        var_10h = *arg_8h;\n        var_20h = 0x40f7fd;\n        iVar2 = fcn.00414eb4(&stack0xfffeffdc, 1, 0x10000, var_10h);\n        if (iVar2 < 0x18) {\n            return 3;\n        }\n        if (0 < iVar2 + -0x14) {\n            iVar4 = 0;\n            do {\n                iVar3 = 0;\n                do {\n                    if (*(&fcn.0040f790::var_20h + iVar3) != (&stack0xfffeffdc)[iVar3 + iVar4]) break;\n                    if (*(&fcn.0040f790::var_20h + iVar3 + 1) != (&stack0xfffeffdd)[iVar3 + iVar4]) {\n                        iVar3 = iVar3 + 1;\n                        break;\n                    }\n                    if (*(&fcn.0040f790::var_20h + iVar3 + 2) != (&stack0xfffeffde)[iVar3 + iVar4]) {\n                        iVar3 = iVar3 + 2;\n                        break;\n                    }\n                    if (*(&fcn.0040f790::var_20h + iVar3 + 3) != (&stack0xfffeffdf)[iVar3 + iVar4]) {\n                        iVar3 = iVar3 + 3;\n                        break;\n                    }\n                    if ((&stack0xffffffe0)[iVar3] != (&stack0xfffeffe0)[iVar3 + iVar4]) {\n                        iVar3 = iVar3 + 4;\n                        break;\n                    }\n                    iVar3 = iVar3 + 5;\n                } while (iVar3 < 0x14);\n                if (iVar3 == 0x14) {\n                    var_10h = NULL;\n                    fcn.00415281(*arg_8h, var_ch + 0x14 + iVar4, 0);\n                    var_20h = 4;\n                    pcStackY48 = 0x4264a5;\n                    fcn.00414eb4(&fcn.0040f790::var_8h, 1, 4, *arg_8h);\n                    puStackY52 = &fcn.0040f790::var_8h;\n                    pcStackY48 = \"EA06\";\n                    var_4h = var_4h & 0xffffff00;\n                    uStackY56 = 0x4264b7;\n                    iVar2 = fcn.00414ee0();\n                    return -(iVar2 != 0) & 4;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2 + -0x14);\n        }\n        var_ch = var_ch + -0x14 + iVar2;\n        var_10h = 0x1;\n        fcn.00415281(*arg_8h, 0xffffffec, 1);\n    } while( true );\n}\n",
        "token_count": 1101
    },
    "0042618e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nfloat fcn.0042618e(double param_1)\n\n{\n    return param_1 - (param_1 / 1.0) * 1.0;\n}\n",
        "token_count": 38
    },
    "004261b6": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nfloat fcn.004261b6(double param_1)\n\n{\n    return -param_1 - (-param_1 / 1.0) * 1.0;\n}\n",
        "token_count": 39
    },
    "004333b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004333ec)\n// WARNING: Removing unreachable block (ram,0x004333fb)\n\nvoid __cdecl fcn.004333b0(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    \n    puVar3 = L\"0123456789ABCDEF\";\n    puVar4 = &var_24h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    iVar2 = arg_10h + -1;\n    *arg_ch = 0x780030;\n    if (iVar2 < 0) {\n        *(arg_ch + arg_10h + 1) = 0;\n        return;\n    }\n    puVar3 = arg_ch + arg_10h;\n    do {\n        uVar1 = *(iVar2 + arg_8h);\n        *(puVar3 + 2) = *(&var_24h + (uVar1 & 0x8000000f) * 2);\n        *puVar3 = *(&var_24h + (uVar1 >> 4) * 2);\n        puVar3 = puVar3 + -1;\n        iVar2 = iVar2 + -1;\n    } while (-1 < iVar2);\n    *(arg_ch + arg_10h + 1) = 0;\n    return;\n}\n",
        "token_count": 394
    },
    "0040dd30": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040dd30(uint arg_8h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t var_10h;\n    uint hKey;\n    uint32_t var_4h;\n    \n    fcn.00403600();\n    uVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, L\"Software\\\\AutoIt v3\\\\AutoIt\", 0, 1, &hKey);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    if (uVar3 == 0) {\n        bVar5 = false;\n        iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"Include\", 0, 0, 0, &var_4h);\n        if (iVar4 == 0) {\n            iVar1 = (var_4h + 1) * 2;\n            fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n            fcn.0040f670();\n            iVar4 = (*pcVar2)(hKey, L\"Include\", 0, 0, var_10h, &var_4h);\n            bVar5 = iVar4 == 0;\n            if (bVar5) {\n                *(var_10h + (var_4h & 0xfffffffe)) = 0;\n                var_4h = var_4h >> 1;\n                fcn.00402170();\n            }\n            fcn.0040f690();\n        }\n        uVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return uVar3 & 0xffffff00 | bVar5;\n    }\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 431
    },
    "0040f3e0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f3e0(uint hKey, uint lpValueName, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ushort *unaff_ESI;\n    uint phkResult;\n    uint lpcbData;\n    \n    *unaff_ESI = 0;\n    uVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey);\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffff00;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, lpValueName, 0, 0);\n    if (iVar2 == 0) {\n        if ((arg_10h & 0x7fffffff) < arg_10h) {\n            unaff_ESI[arg_10h] = 0;\n        }\n        else {\n            unaff_ESI[arg_10h - 1] = 0;\n        }\n        uVar1 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        return uVar1 & 0xffffff00 | 1;\n    }\n    uVar1 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 300
    },
    "00436a48": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00436a48(uint arg_8h, uint lpszDomain, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_LogonUserW)(arg_8h, lpszDomain, arg_10h, (arg_14h & 2U | 4) >> 1, 0, arg_18h);\n    return iVar1 != 0;\n}\n",
        "token_count": 115
    },
    "00458058": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00458058(uint arg_8h, int16_t *arg_ch, uint pclsid, int32_t arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint lpsz;\n    uint var_5ch;\n    uint var_58h;\n    uint var_48h;\n    uint var_3ch;\n    uint lpSubKey;\n    uint var_1ch;\n    uint phkResult;\n    uint hKey;\n    \n    piVar2 = arg_ch;\n    hKey = 0;\n    phkResult = 0;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.00402170();\n    fcn.0040d510();\n    fcn.0040d510();\n    fcn.00402170();\n    if (((piVar2 != NULL) && (*piVar2 != 0x5c)) && (piVar2[1] != 0x5c)) {\n        fcn.00402170();\n        fcn.0040d510();\n    }\n    iVar3 = arg_14h;\n    if (arg_14h != 0) {\n        fcn.004130e0(&var_5ch, 0, 0x20);\n        var_58h = 0;\n        fcn.0040e410(&var_1ch);\n        fcn.0040d510();\n        var_48h = var_3ch;\n        iVar3 = (*_sym.imp.MPR.dll_WNetAddConnection2W)(&var_5ch, arg_18h, iVar3, 0);\n        if (iVar3 < 0) goto code_r0x004581ce;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(var_1ch, reloc.WSOCK32.dll_bind, &hKey);\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, 0x20019, &phkResult);\n        pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            arg_ch = 0x1fe;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, 0, 0, 0, &lpsz, &arg_ch);\n            if (iVar3 == 0) {\n                *(&lpsz + (arg_ch & 0xfffffffe)) = 0;\n                arg_ch = arg_ch >> 1;\n                iVar3 = (*_sym.imp.ole32.dll_CLSIDFromString)(&lpsz, pclsid);\n            }\n            (*pcVar1)(phkResult);\n        }\n        (*pcVar1)(hKey);\n    }\ncode_r0x004581ce:\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    return iVar3;\n}\n",
        "token_count": 695
    },
    "0040fba0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fba0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        puVar2 = param_1 + 1;\n        puVar1 = in_EAX + 2;\n        iVar3 = (param_2 - 1U >> 2) + 1;\n        do {\n            puVar2[-1] = puVar1[-2];\n            *puVar2 = puVar1[-1];\n            puVar2[1] = *puVar1;\n            puVar2[2] = puVar1[1];\n            puVar1 = puVar1 + 4;\n            puVar2 = puVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0040fbe0": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fbe0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *(arg_8h + 0x40);\n    uVar4 = *(arg_8h + 0x38);\n    uVar3 = *(arg_8h + 0x3c);\n    fcn.00410290();\n    uVar1 = (~uVar4 & var_4h | uVar3 & uVar4) + *(arg_8h + 0x34) + -0x28955b88 + var_44h;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar4;\n    var_4h = (~uVar1 & uVar3 | uVar4 & uVar1) + var_40h + -0x173848aa + var_4h;\n    uVar2 = (var_4h * 0x1000 | var_4h >> 0x14) + uVar1;\n    uVar3 = (~uVar2 & uVar4 | uVar2 & uVar1) + var_3ch + 0x242070db + uVar3;\n    uVar3 = (uVar3 >> 0xf | uVar3 * 0x20000) + uVar2;\n    uVar4 = (~uVar3 & uVar1 | uVar2 & uVar3) + var_38h + -0x3e423112 + uVar4;\n    uVar4 = (uVar4 >> 10 | uVar4 * 0x400000) + uVar3;\n    uVar1 = (~uVar4 & uVar2 | uVar3 & uVar4) + var_34h + -0xa83f051 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar4;\n    uVar2 = (~uVar1 & uVar3 | uVar4 & uVar1) + var_30h + 0x4787c62a + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar3 = (~uVar2 & uVar4 | uVar2 & uVar1) + var_2ch + -0x57cfb9ed + uVar3;\n    uVar3 = (uVar3 >> 0xf | uVar3 * 0x20000) + uVar2;\n    uVar4 = (~uVar3 & uVar1 | uVar2 & uVar3) + var_28h + -0x2b96aff + uVar4;\n    uVar4 = (uVar4 >> 10 | uVar4 * 0x400000) + uVar3;\n    uVar1 = (~uVar4 & uVar2 | uVar3 & uVar4) + var_24h + 0x698098d8 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar4;\n    uVar2 = (~uVar1 & uVar3 | uVar4 & uVar1) + var_20h + -0x74bb0851 + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar3 = (~uVar2 & uVar4 | uVar2 & uVar1) + var_1ch + -0xa44f + uVar3;\n    uVar3 = (uVar3 >> 0xf | uVar3 * 0x20000) + uVar2;\n    uVar4 = (~uVar3 & uVar1 | uVar2 & uVar3) + var_18h + -0x76a32842 + uVar4;\n    uVar4 = (uVar4 >> 10 | uVar4 * 0x400000) + uVar3;\n    uVar1 = (~uVar4 & uVar2 | uVar3 & uVar4) + var_14h + 0x6b901122 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar4;\n    uVar2 = (~uVar1 & uVar3 | uVar4 & uVar1) + var_10h + -0x2678e6d + uVar2;\n    uVar2 = (uVar2 * 0x1000 | uVar2 >> 0x14) + uVar1;\n    uVar3 = (~uVar2 & uVar4 | uVar2 & uVar1) + var_ch + -0x5986bc72 + uVar3;\n    uVar3 = (uVar3 >> 0xf | uVar3 * 0x20000) + uVar2;\n    var_4h = ~uVar3;\n    uVar4 = (var_4h & uVar1 | uVar2 & uVar3) + var_8h + 0x49b40821 + uVar4;\n    uVar4 = (uVar4 >> 10 | uVar4 * 0x400000) + uVar3;\n    uVar1 = (~uVar2 & uVar3 | uVar2 & uVar4) + var_40h + -0x9e1da9e + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar4;\n    uVar2 = (var_4h & uVar4 | uVar3 & uVar1) + var_2ch + -0x3fbf4cc0 + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar3 = (~uVar4 & uVar1 | uVar2 & uVar4) + var_18h + 0x265e5a51 + uVar3;\n    uVar3 = (uVar3 * 0x4000 | uVar3 >> 0x12) + uVar2;\n    uVar4 = (~uVar1 & uVar2 | uVar3 & uVar1) + var_44h + -0x16493856 + uVar4;\n    uVar4 = (uVar4 >> 0xc | uVar4 * 0x100000) + uVar3;\n    uVar1 = (~uVar2 & uVar3 | uVar2 & uVar4) + var_30h + -0x29d0efa3 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar4;\n    uVar2 = (~uVar3 & uVar4 | uVar3 & uVar1) + var_1ch + 0x2441453 + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar3 = (~uVar4 & uVar1 | uVar2 & uVar4) + var_8h + -0x275e197f + uVar3;\n    uVar3 = (uVar3 * 0x4000 | uVar3 >> 0x12) + uVar2;\n    uVar4 = (~uVar1 & uVar2 | uVar3 & uVar1) + var_34h + -0x182c0438 + uVar4;\n    uVar4 = (uVar4 >> 0xc | uVar4 * 0x100000) + uVar3;\n    uVar1 = (~uVar2 & uVar3 | uVar2 & uVar4) + var_20h + 0x21e1cde6 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar4;\n    uVar2 = (~uVar3 & uVar4 | uVar3 & uVar1) + var_ch + -0x3cc8f82a + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar3 = (~uVar4 & uVar1 | uVar2 & uVar4) + var_38h + -0xb2af279 + uVar3;\n    uVar3 = (uVar3 * 0x4000 | uVar3 >> 0x12) + uVar2;\n    uVar4 = (~uVar1 & uVar2 | uVar3 & uVar1) + var_24h + 0x455a14ed + uVar4;\n    uVar4 = (uVar4 >> 0xc | uVar4 * 0x100000) + uVar3;\n    uVar1 = (~uVar2 & uVar3 | uVar2 & uVar4) + var_10h + -0x561c16fb + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar4;\n    uVar2 = (~uVar3 & uVar4 | uVar3 & uVar1) + var_3ch + -0x3105c08 + uVar2;\n    uVar2 = (uVar2 * 0x200 | uVar2 >> 0x17) + uVar1;\n    uVar3 = (~uVar4 & uVar1 | uVar2 & uVar4) + var_28h + 0x676f02d9 + uVar3;\n    uVar3 = (uVar3 * 0x4000 | uVar3 >> 0x12) + uVar2;\n    uVar4 = (~uVar1 & uVar2 | uVar3 & uVar1) + var_14h + -0x72d5b376 + uVar4;\n    uVar4 = (uVar4 >> 0xc | uVar4 * 0x100000) + uVar3;\n    uVar1 = (uVar2 ^ uVar3 ^ uVar4) + var_30h + -0x5c6be + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar4;\n    uVar2 = (uVar3 ^ uVar4 ^ uVar1) + var_24h + -0x788e097f + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar1;\n    uVar3 = (uVar2 ^ uVar4 ^ uVar1) + var_18h + 0x6d9d6122 + uVar3;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar2;\n    uVar4 = (uVar2 ^ uVar3 ^ uVar1) + var_ch + -0x21ac7f4 + uVar4;\n    uVar4 = (uVar4 >> 9 | uVar4 * 0x800000) + uVar3;\n    uVar1 = (uVar2 ^ uVar3 ^ uVar4) + var_40h + -0x5b4115bc + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar4;\n    uVar2 = (uVar3 ^ uVar4 ^ uVar1) + var_34h + 0x4bdecfa9 + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar1;\n    uVar3 = (uVar2 ^ uVar4 ^ uVar1) + var_28h + -0x944b4a0 + uVar3;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar2;\n    uVar4 = (uVar2 ^ uVar3 ^ uVar1) + var_1ch + -0x41404390 + uVar4;\n    uVar4 = (uVar4 >> 9 | uVar4 * 0x800000) + uVar3;\n    uVar1 = (uVar2 ^ uVar3 ^ uVar4) + var_10h + 0x289b7ec6 + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar4;\n    uVar2 = (uVar3 ^ uVar4 ^ uVar1) + var_44h + -0x155ed806 + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar1;\n    uVar3 = (uVar2 ^ uVar4 ^ uVar1) + var_38h + -0x2b10cf7b + uVar3;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar2;\n    uVar4 = (uVar2 ^ uVar3 ^ uVar1) + var_2ch + 0x4881d05 + uVar4;\n    uVar4 = (uVar4 >> 9 | uVar4 * 0x800000) + uVar3;\n    uVar1 = (uVar2 ^ uVar3 ^ uVar4) + var_20h + -0x262b2fc7 + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar4;\n    uVar2 = (uVar3 ^ uVar4 ^ uVar1) + var_14h + -0x1924661b + uVar2;\n    uVar2 = (uVar2 * 0x800 | uVar2 >> 0x15) + uVar1;\n    uVar3 = (uVar2 ^ uVar4 ^ uVar1) + var_8h + 0x1fa27cf8 + uVar3;\n    uVar3 = (uVar3 * 0x10000 | uVar3 >> 0x10) + uVar2;\n    uVar4 = (uVar2 ^ uVar3 ^ uVar1) + var_3ch + -0x3b53a99b + uVar4;\n    uVar4 = (uVar4 >> 9 | uVar4 * 0x800000) + uVar3;\n    uVar1 = ((~uVar2 | uVar4) ^ uVar3) + var_44h + -0xbd6ddbc + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar4;\n    uVar2 = ((~uVar3 | uVar1) ^ uVar4) + var_28h + 0x432aff97 + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar1;\n    uVar3 = ((~uVar4 | uVar2) ^ uVar1) + var_ch + -0x546bdc59 + uVar3;\n    uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar2;\n    uVar4 = ((~uVar1 | uVar3) ^ uVar2) + var_30h + -0x36c5fc7 + uVar4;\n    uVar4 = (uVar4 >> 0xb | uVar4 * 0x200000) + uVar3;\n    uVar1 = ((~uVar2 | uVar4) ^ uVar3) + var_14h + 0x655b59c3 + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar4;\n    uVar2 = ((~uVar3 | uVar1) ^ uVar4) + var_38h + -0x70f3336e + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar1;\n    uVar3 = ((~uVar4 | uVar2) ^ uVar1) + var_1ch + -0x100b83 + uVar3;\n    uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar2;\n    uVar4 = ((~uVar1 | uVar3) ^ uVar2) + var_40h + -0x7a7ba22f + uVar4;\n    uVar4 = (uVar4 >> 0xb | uVar4 * 0x200000) + uVar3;\n    uVar1 = ((~uVar2 | uVar4) ^ uVar3) + var_24h + 0x6fa87e4f + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar4;\n    uVar2 = ((~uVar3 | uVar1) ^ uVar4) + var_8h + -0x1d31920 + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar1;\n    uVar3 = ((~uVar4 | uVar2) ^ uVar1) + var_2ch + -0x5cfebcec + uVar3;\n    uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar2;\n    uVar4 = ((~uVar1 | uVar3) ^ uVar2) + var_10h + 0x4e0811a1 + uVar4;\n    uVar4 = (uVar4 >> 0xb | uVar4 * 0x200000) + uVar3;\n    uVar1 = ((~uVar2 | uVar4) ^ uVar3) + var_34h + -0x8ac817e + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar4;\n    uVar2 = ((~uVar3 | uVar1) ^ uVar4) + var_18h + -0x42c50dcb + uVar2;\n    uVar2 = (uVar2 * 0x400 | uVar2 >> 0x16) + uVar1;\n    uVar3 = ((~uVar4 | uVar2) ^ uVar1) + var_3ch + 0x2ad7d2bb + uVar3;\n    uVar3 = (uVar3 * 0x8000 | uVar3 >> 0x11) + uVar2;\n    *(arg_8h + 0x34) = *(arg_8h + 0x34) + uVar1;\n    uVar4 = ((~uVar1 | uVar3) ^ uVar2) + var_20h + -0x14792c6f + uVar4;\n    *(arg_8h + 0x38) = (uVar4 >> 0xb | uVar4 * 0x200000) + *(arg_8h + 0x38) + uVar3;\n    *(arg_8h + 0x3c) = *(arg_8h + 0x3c) + uVar3;\n    *(arg_8h + 0x40) = *(arg_8h + 0x40) + uVar2;\n    fcn.004130e0(&var_44h, 0, 0x40);\n    return;\n}\n",
        "token_count": 4787
    },
    "00410290": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410290(uint *param_1)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = in_EAX + 2;\n    iVar2 = 0x10;\n    do {\n        *param_1 = CONCAT31(CONCAT21(*puVar1, *(puVar1 + -1)), *(puVar1 + -1));\n        param_1 = param_1 + 1;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 144
    },
    "0043edd0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043edd0(uint8_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *arg_8h_01;\n    \n    do {\n        arg_8h_00 = fcn.0042f8a5(arg_8h + *(*arg_8h + 0x485228), 0, 0, 0);\n        cVar1 = *arg_8h_00;\n        if (cVar1 == '`') {\n            arg_8h_01 = arg_8h_00 + 3;\n            if (*arg_8h_01 == 0x53) {\n                arg_8h_01 = arg_8h_00 + 9;\n            }\n            if ((99 < *arg_8h_01) && (*arg_8h_01 < 0x69)) {\n                return 0;\n            }\n            iVar2 = fcn.0043edd0(arg_8h_01, arg_ch, arg_10h);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            do {\n                arg_8h_01 = arg_8h_01 + CONCAT11(arg_8h_01[1], arg_8h_01[2]);\n            } while (*arg_8h_01 == 0x54);\n            arg_8h_00 = fcn.0042f8a5(arg_8h_01 + 3, 0, 0, 0);\n            cVar1 = *arg_8h_00;\n        }\n        uVar3 = arg_ch;\n        if (cVar1 == '^') {\ncode_r0x0043ee8a:\n            iVar2 = fcn.0043edd0(arg_8h_00, uVar3, arg_10h);\njoined_r0x0043eedb:\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if (cVar1 == '_') {\n                uVar3 = 1;\n                if (CONCAT11(arg_8h_00[3], arg_8h_00[4]) < 0x20) {\n                    uVar3 = 1 << (arg_8h_00[4] & 0x1fU);\n                }\n                uVar3 = uVar3 | arg_ch;\n                goto code_r0x0043ee8a;\n            }\n            if ((cVar1 == 'X') || (cVar1 == ']')) {\n                iVar2 = fcn.0043edd0(arg_8h_00, arg_ch, arg_10h);\n                goto joined_r0x0043eedb;\n            }\n            if (((cVar1 == '9') || (cVar1 == ':')) || (cVar1 == 'B')) {\n                if (arg_8h_00[1] != '\\f') {\n                    return 0;\n                }\n                if ((arg_ch & arg_10h) != 0) {\n                    return 0;\n                }\n            }\n            else if (cVar1 != '\\x1a') {\n                return 0;\n            }\n        }\n        arg_8h = arg_8h + CONCAT11(arg_8h[1], arg_8h[2]);\n        if (*arg_8h != 0x54) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 787
    },
    "0043fbac": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043fbac(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uchar *arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint var_4h;\n    \n    uVar2 = arg_8h;\n    do {\n        iVar1 = fcn.0042f321(uVar2, arg_10h);\n        if (iVar1 == 0) {\n            return;\n        }\n        puVar3 = arg_18h;\n        if (arg_18h < *(arg_14h + 0x24)) {\n            do {\n                uVar2 = CONCAT11(*puVar3, puVar3[1]);\n                if (*(arg_14h + 0x14) + uVar2 == iVar1 + 1) {\n                    *puVar3 = uVar2 + arg_ch >> 8;\n                    puVar3[1] = puVar3[1] + arg_ch;\n                    break;\n                }\n                puVar3 = puVar3 + 2;\n            } while (puVar3 < *(arg_14h + 0x24));\n        }\n        if (*(arg_14h + 0x24) <= puVar3) {\n            uVar2 = CONCAT11(*(iVar1 + 1), *(iVar1 + 2));\n            if (arg_8h <= *(arg_14h + 0x14) + uVar2) {\n                *(iVar1 + 1) = uVar2 + arg_ch >> 8;\n                *(iVar1 + 2) = *(iVar1 + 2) + arg_ch;\n            }\n        }\n        uVar2 = iVar1 + 3;\n    } while( true );\n}\n",
        "token_count": 399
    },
    "0042fd6c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042fd6c(uint8_t *arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar2 = *arg_8h;\n    uVar4 = 0;\n    if ((*(uVar2 + 0x486b28) & 4) != 0) {\n        do {\n            arg_8h = arg_8h + 1;\n            uVar4 = (uVar2 - 0x30) + uVar4 * 10;\n            uVar2 = *arg_8h;\n        } while ((*(uVar2 + 0x486b28) & 4) != 0);\n        if (0xffff < uVar4) goto code_r0x0042fdfa;\n    }\n    uVar2 = uVar4;\n    if (*arg_8h != 0x7d) {\n        puVar1 = arg_8h + 1;\n        uVar2 = 0xffffffff;\n        if (arg_8h[1] != 0x7d) {\n            uVar3 = arg_8h[1];\n            uVar2 = 0;\n            if ((*(uVar3 + 0x486b28) & 4) != 0) {\n                do {\n                    puVar1 = puVar1 + 1;\n                    uVar2 = (uVar3 - 0x30) + uVar2 * 10;\n                    uVar3 = *puVar1;\n                } while ((*(uVar3 + 0x486b28) & 4) != 0);\n                if (0xffff < uVar2) {\ncode_r0x0042fdfa:\n                    *arg_14h = 5;\n                    return;\n                }\n            }\n            if (uVar2 < uVar4) {\n                *arg_14h = 4;\n                return;\n            }\n        }\n    }\n    *arg_ch = uVar4;\n    *arg_10h = uVar2;\n    return;\n}\n",
        "token_count": 491
    },
    "0042320b": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0042320b(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_EDI) {\n        if (*(unaff_EBP + -0x20) != unaff_EDI) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0x4a9620) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0041b0b5(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00430438": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430438(uint hWnd, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xffffffec);\n    if ((uVar1 & 0x10000) != 0) {\n        return 2;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_DefDlgProcW)(hWnd, 0x84, 0, arg_ch & 0xffff | arg_10h << 0x10);\n    return uVar2;\n}\n",
        "token_count": 145
    },
    "004327f0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004327f0(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg_10h != 0) {\n        uVar1 = *(arg_8h + 2);\n        uVar2 = *arg_8h;\n        iVar3 = 0;\n        if (0 < arg_10h) {\n            do {\n                uVar2 = (*(iVar3 + arg_ch) + uVar2) % 0xfff1;\n                iVar3 = iVar3 + 1;\n                uVar1 = (uVar1 + uVar2) % 0xfff1;\n            } while (iVar3 < arg_10h);\n        }\n        *arg_8h = uVar1 * 0x10000 + uVar2;\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00433146": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433146(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *arg_8h;\n    if (0 < uVar1) {\n        *arg_8h = uVar1 >> 0x10 & 0xffU | (uVar1 & 0xff) << 0x10 | uVar1 & 0xff00;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00441ce9": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441ce9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.004318a3(*(arg_8h + 0x100), &iStack40, uVar2);\n    arg_ch = arg_ch + iStack52;\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&iStack36);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar2);\n    arg_8h_00 = ((arg_ch + 1) * 0x10000) / iStack36 + -1;\n    arg_ch_00 = ((arg_10h + iStack48 + 1) * 0x10000) / iStack32 + -1;\n    if (arg_14h == 0) {\n        (*_sym.imp.USER32.dll_mouse_event)(0x8001, arg_8h_00, arg_ch_00, 0, 0);\n        if (arg_18h != '\\0') {\n            fcn.0043374b(10);\n        }\n    }\n    else {\n        if ((arg_14h < 1) || (100 < arg_14h)) {\n            arg_14h = 10;\n        }\n        (*_sym.imp.USER32.dll_GetCursorPos)(&iStack52);\n        iVar3 = (unaff_EBX * 0xffff) / (iStack40 + -1) + 1;\n        iVar4 = (iStack52 * 0xffff) / (iStack36 + -1) + 1;\n        while( true ) {\n            cVar1 = fcn.00433818(arg_8h_00, arg_ch_00, arg_14h, 0x20, &stack0xffffffbc, &stack0xffffffb8);\n            if (cVar1 == '\\0') break;\n            (*_sym.imp.USER32.dll_mouse_event)(0x8001, iVar3, iVar4, 0, 0);\n            fcn.0043374b(10);\n        }\n    }\n    return;\n}\n",
        "token_count": 589
    },
    "00449827": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449827(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    char cVar5;\n    \n    uVar4 = arg_ch;\n    cVar5 = fcn.004417f1(0x4a8630, arg_8h, &arg_8h, &arg_ch);\n    pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n    if (cVar5 == '\\0') {\n        return 0;\n    }\n    puVar1 = **(*0x4a86a4 + arg_ch * 4);\n    uVar2 = *puVar1;\n    // switch table (6 cases) at 0x449927\n    switch(*(puVar1 + 0x22)) {\n    case 1:\n        if (0 < uVar4) {\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x194, uVar4, 0);\n            return 1;\n        }\n        break;\n    case 3:\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0xb1, 0, 0xffffffff);\n    case 2:\n        if (0 < uVar4) {\n            (*pcVar3)(uVar2, 0xc5, uVar4, 0);\n            return 1;\n        }\n        break;\n    default:\n        return 0;\n    case 0x12:\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x406, 1, uVar4 << 0x10 | arg_10h & 0xffff);\n        break;\n    case 0x16:\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x465, 0, arg_10h << 0x10 | uVar4 & 0xffff);\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 456
    },
    "004588af": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004588af(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0040c8f0();\n    if (uVar1 < 0x65) {\n        uVar1 = (uVar1 * 0xffff) / 100 & 0xffff;\n        (*_sym.imp.WINMM.dll_waveOutSetVolume)(0, uVar1 << 0x10 | uVar1);\n        return 0;\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 164
    },
    "00431a91": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00431a91(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint8_t *arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    float10 fVar7;\n    \n    puVar1 = arg_8h + arg_ch;\n    iVar6 = arg_10h * arg_14h;\n    uVar5 = 0xffffffff;\n    puVar2 = arg_8h + arg_10h * 4;\n    iVar4 = arg_14h * 4;\n    arg_14h = arg_8h;\n    do {\n        uVar5 = uVar5 >> 8 ^ *((uVar5 & 0xff ^ arg_8h[2]) * 4 + 0x491be8);\n        uVar3 = *arg_8h;\n        uVar5 = uVar5 >> 8 ^ *((uVar5 & 0xff ^ arg_8h[1]) * 4 + 0x491be8);\n        arg_8h = arg_8h + iVar6 * 4;\n        uVar5 = uVar5 >> 8 ^ *((uVar5 & 0xff ^ uVar3) * 4 + 0x491be8);\n        if (puVar1 <= arg_8h) {\n            arg_8h = arg_14h + iVar4;\n            arg_14h = arg_8h;\n        }\n    } while (arg_14h < puVar2);\n    fVar7 = ~uVar5;\n    if (-1 < uVar5) {\n        fVar7 = fVar7 + *0x48bd70;\n    }\n    return fVar7;\n}\n",
        "token_count": 421
    },
    "00435201": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435201(uint lpString)\n\n{\n    ushort *puVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    bool bVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    ushort extraout_var;\n    uint var_4h;\n    \n    lpString._0_2_ = 0;\n    bVar4 = false;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    iVar3 = (iVar5 + 1) * 2;\n    iVar6 = fcn.00411777(-(iVar3 >> 0x20 != 0) | iVar3);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(iVar6, lpString);\n    iVar2 = *(iVar6 + -2 + iVar5 * 2);\n    *(iVar6 + iVar5 * 2) = 0;\n    puVar1 = iVar6 + -2 + iVar5 * 2;\n    if (iVar2 == 0x2a) {\n        *puVar1 = 0;\n        lpString._0_2_ = 0x4000;\n    }\n    else if (iVar2 == 0x5e) {\n        *puVar1 = 0;\n        lpString._0_2_ = 0xc000;\n    }\n    iVar5 = 0;\n    do {\n        iVar7 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(iVar5 * 4 + 0x492d60), iVar6);\n        if (iVar7 == 0) {\n            lpString._0_2_ = lpString | *(iVar5 * 2 + 0x492df0);\n            bVar4 = true;\n            break;\n        }\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 0x23);\n    fcn.0041137c(iVar6);\n    if (!bVar4) {\n        return 0xffff;\n    }\n    return CONCAT22(extraout_var, lpString);\n}\n",
        "token_count": 456
    },
    "00469fd0": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00469fd0(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar *arg_ch_00;\n    int32_t iVar1;\n    int16_t *piVar2;\n    ushort *puVar3;\n    uint arg_ch_01;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar4;\n    float10 fVar5;\n    uchar *arg_8h_00;\n    uint uVar6;\n    uchar *arg_8h_01;\n    uchar *puVar7;\n    uchar *puVar8;\n    uchar *arg_ch_02;\n    uchar *arg_8h_02;\n    uchar *arg_ch_03;\n    uchar *puVar9;\n    int32_t **ppiStack160;\n    int32_t iStack156;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    int32_t iStack136;\n    uchar auStack128 [8];\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t iStack104;\n    uchar auStack96 [12];\n    uchar auStack84 [80];\n    \n    fcn.004013c0();\n    fcn.00411777(0x20000);\n    fcn.0040f670();\n    fcn.00411777(0x20000);\n    fcn.0040f670();\n    iStack116 = **(arg_8h + 4);\n    arg_ch_00 = fcn.00452e60(iStack116);\n    fcn.0040bf10();\n    fcn.0040d5d0();\n    fcn.00401c30();\n    arg_ch_03 = &stack0xffffff78;\n    arg_8h_02 = &stack0xffffffac;\n    fcn.0046895c(arg_8h_02, arg_ch_03, &stack0xffffff80);\n    fcn.00402260();\n    puVar7 = &stack0xffffffa0;\n    puVar8 = arg_ch_00;\n    fcn.004605cb(puVar7, arg_ch_00);\n    iStack116 = iStack116 + -1;\n    uStack148 = 0x48b6f0;\n    uStack144 = 0;\n    uStack140 = 0;\n    iStack136 = 0;\n    iVar4 = 0;\n    if (0 < *(arg_ch_00 + 4)) {\n        do {\n            arg_8h_01 = &stack0xffffff98;\n            iVar1 = fcn.00453c99(arg_8h_01, &stack0xffffff6c, iVar4);\n            puVar7 = arg_8h_01;\n            if (iVar1 < 1) break;\n            arg_ch_02 = **ppiStack160;\n            arg_8h_00 = arg_ch_00;\n            puVar7 = (*ppiStack160)[2];\n            fcn.0040c020(arg_ch_00);\n            arg_ch_00 = puVar7;\n            puVar8 = arg_ch_00;\n            puVar9 = arg_ch_00;\n            piVar2 = fcn.004362b4(arg_ch_00, arg_ch_02);\n            if ((*piVar2 == 0x25) &&\n               (puVar9 = arg_ch_00,  piVar2 = fcn.004362b4(arg_ch_00, arg_ch_02 + 1),  *piVar2 == 0x25)) {\n                puVar7 = 0x25;\n                fcn.004032d0(0x25);\n                goto code_r0x0046a27e;\n            }\n            arg_8h_02 = 0x46a12f;\n            puVar7 = arg_ch_00;\n            piVar2 = fcn.004362b4(arg_ch_00, arg_ch_02);\n            if (*piVar2 == 0x5c) {\n                arg_8h_02 = arg_ch_02 + 1;\n                puVar7 = 0x46a13d;\n                puVar3 = fcn.004362b4(0x46a13d, arg_8h_02);\n    // switch table (25 cases) at 0x46a2f0\n                switch(*puVar3) {\n                case 0x5c:\n                    puVar7 = 0x5c;\n                    fcn.004032d0(0x5c);\n                    break;\n                case 0x6e:\n                    puVar7 = 0xa;\n                    fcn.004032d0(10);\n                    break;\n                case 0x72:\n                    puVar7 = 0xd;\n                    fcn.004032d0(0xd);\n                    break;\n                case 0x74:\n                    puVar7 = 0x9;\n                    fcn.004032d0(9);\n                }\n                goto code_r0x0046a27e;\n            }\n            if (unaff_ESI == iStack104) goto code_r0x0046a27e;\n            unaff_ESI = unaff_ESI + 1;\n            puVar7 = arg_ch_00;\n            fcn.00460e76(&stack0xffffff88, arg_ch_00, arg_ch_02, arg_8h_01);\n            puVar3 = fcn.00402150();\n    // switch table (52 cases) at 0x46a320\n            switch(*puVar3) {\n            case 0x45:\n            case 0x47:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n                fVar5 = fcn.0040bd40();\n                fcn.0041343b(unaff_EDI, iStack136, SUB84(fVar5, 0));\n                break;\n            case 0x58:\n            case 100:\n            case 0x69:\n            case 0x6f:\n            case 0x75:\n            case 0x78:\n                fcn.0040c8f0();\n                uVar6 = unaff_EDI;\n                iVar4 = iStack136;\n                goto code_r0x0046a269;\n            case 0x73:\n                uVar6 = *(*(arg_8h + 4) + arg_ch_03 * 4);\n                arg_ch_01 = fcn.00452e81(uVar6);\n                iVar4 = iStack120;\n                arg_8h_00 = puVar9;\n                fcn.0041315a(iStack120, arg_ch_01, uVar6);\n                *(iVar4 + 0x1fffe) = 0;\n                uVar6 = uStack140;\ncode_r0x0046a269:\n                fcn.0041343b(arg_8h_00, uVar6, iVar4);\n            }\n            fcn.0040d510();\n            puVar8 = arg_ch_02;\n            arg_8h_02 = arg_8h_01;\ncode_r0x0046a27e:\n            iVar4 = iStack156;\n        } while (iStack156 < *(arg_ch_00 + 4));\n    }\n    if (iVar4 < *(arg_ch_00 + 4)) {\n        fcn.0040c020(arg_ch_00);\n    }\n    fcn.0040e8e0(puVar7, puVar8, arg_8h_02);\n    fcn.00441954();\n    fcn.00401380();\n    fcn.00402260();\n    fcn.0040f690();\n    fcn.0040f690();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1701
    },
    "0044af76": {
        "rules": [
            "encrypt data using HC-128/96968cc2d377418d85ec89c0278a8523"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nfloat10 __fastcall fcn.0044af76(uint param_1)\n\n{\n    uint32_t uVar1;\n    float10 fVar2;\n    uint var_4h;\n    \n    *0x49205c = *0x49205c + -1;\n    if (*0x49205c == 0) {\n        fcn.00442b75(param_1);\n    }\n    uVar1 = **0x4a753c ^ **0x4a753c >> 0xb;\n    uVar1 = uVar1 ^ (uVar1 & 0xff3a58ad) << 7;\n    uVar1 = uVar1 ^ (uVar1 & 0xffffdf8c) << 0xf;\n    uVar1 = uVar1 >> 0x12 ^ uVar1;\n    fVar2 = uVar1;\n    if (uVar1 < 0) {\n        fVar2 = fVar2 + *0x48bd70;\n    }\n    *0x4a753c = *0x4a753c + 1;\n    return fVar2 * *0x48bd78;\n}\n",
        "token_count": 269
    },
    "00401000": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401000(int32_t param_1)\n\n{\n    uint lpData;\n    uint var_3a4h;\n    uint var_3a0h;\n    \n    // [00] -r-x section size 524288 named .text\n    if (*0x4974ea != '\\0') {\n        *0x4974ea = '\\0';\n        *(param_1 + 0x19c) = 0;\n        fcn.004130e0(&var_3a4h, 0, 0x3a4);\n        lpData = 0x3a8;\n        var_3a4h = *0x497518;\n        var_3a0h = 1;\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(2, &lpData);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00402410": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00402410(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar8 = *0x4a90f0;\n    if (*0x4a912c == NULL) {\n        if (*0x4a90f8 == 0) {\n            return 0;\n        }\n        *0x4a90fc = fcn.00411777(-(*0x4a90f8 * 4 >> 0x20 != 0) | *0x4a90f8 * 4);\n        if (0 < *0x4a90f8) {\n            iVar5 = 0;\n            while( true ) {\n                *(*0x4a90fc + iVar5 * 4) = *puVar8;\n                iVar5 = iVar5 + 1;\n                if (*0x4a90f8 <= iVar5) break;\n                puVar8 = puVar8[3];\n            }\n        }\n        uVar7 = *0x4a90f8;\n        uVar1 = *0x4a90f8 + 1;\n        iVar2 = uVar1 * 0x10;\n        iVar5 = 1;\n        var_10h = 0x484adc;\n        var_ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n        uVar6 = -(iVar2 >> 0x20 != 0) | iVar2;\n        *0x4a912c = fcn.00411777(-(0xfffffffb < uVar6) | uVar6 + 4);\n        if (*0x4a912c == NULL) {\n            *0x4a912c = NULL;\n        }\n        else {\n            **0x4a912c = uVar1;\n            *0x4a912c = *0x4a912c + 1;\n            puVar3 = *0x4a912c;\n            for (; -1 < uVar7; uVar7 = uVar7 - 1) {\n                *puVar3 = 0x484adc;\n                puVar3[1] = 0;\n                puVar3[2] = 0;\n                puVar3[3] = 0;\n                puVar3 = puVar3 + 4;\n            }\n        }\n        iVar9 = 0x10;\n        for (; (((iVar5 <= *0x4a90f8 && (*0x4a90fc != 0)) && (0 < iVar5)) &&\n               (iVar4 = *(*0x4a90fc + -4 + iVar5 * 4),  iVar4 != 0)); iVar5 = iVar5 + 1) {\n            iVar4 = fcn.00402b30(iVar5, iVar4, &var_10h);\n            if (iVar4 != 0) {\n                fcn.0040ef20();\n                return 0;\n            }\n            fcn.004022e0(iVar9 + *0x4a912c, &var_10h);\n            iVar9 = iVar9 + 0x10;\n        }\n        var_10h = 0x484adc;\n        fcn.0040d7d0();\n        fcn.0041137c(var_ch);\n    }\n    return 1;\n}\n",
        "token_count": 808
    },
    "00409030": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409030(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t arg_14h;\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    int32_t var_1ch;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    *in_EAX = *in_EAX + 1;\n    var_ch = *in_EAX;\n    if (*(*(*(arg_ch + 4) + var_ch * 4) + 8) == 0x47) {\n        var_8h = var_ch;\n        var_1ch = fcn.0040c160(arg_8h, &var_ch);\n        arg_14h = var_ch;\n        if (var_1ch == 0) {\n            *arg_10h = 0;\n            if (var_ch <= var_8h) {\n                return 0;\n            }\n            do {\n                var_14h = 1;\n                var_10h = var_1ch;\n                fcn.0040bcb0(&var_1ch);\n                iVar1 = fcn.0040aa20(arg_ch, &var_8h, *(*(unaff_EDI + 4) + -4 + *(unaff_EDI + 8) * 4), arg_14h);\n                if (iVar1 != 0) {\ncode_r0x00428ffa:\n                    fcn.004091e0();\n                    return 1;\n                }\n                *arg_10h = *arg_10h + 1;\n                if (var_8h == arg_14h) {\n                    fcn.004091e0();\n                    return 0;\n                }\n                if ((*(*(*(arg_ch + 4) + var_8h * 4) + 8) != 0x40) || (var_8h + 1 == arg_14h)) {\n                    fcn.0045e1ee(arg_8h, 0x6f, *(*(*(arg_ch + 4) + var_8h * 4) + 10));\n                    goto code_r0x00428ffa;\n                }\n                var_8h = var_8h + 1;\n                fcn.004091e0();\n                if (arg_14h <= var_8h) {\n                    return 0;\n                }\n                var_1ch = 0;\n            } while( true );\n        }\n    }\n    else {\n        fcn.0045e1ee(arg_8h, 0x6f, *(*(*(arg_ch + 4) + var_ch * 4 + -4) + 10));\n    }\n    return 1;\n}\n",
        "token_count": 626
    },
    "0040bff0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bff0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    uint var_14h;\n    \n    if (in_EAX == arg_8h) {\n        arg_8h_00 = fcn.0044ca6c(in_EAX, &var_14h, in_EAX);\n        fcn.0040e410(arg_8h_00);\n        fcn.00402260();\n    }\n    else {\n        fcn.0040c020(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0040c8c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040c8c0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t unaff_ESI;\n    \n    uVar1 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    if ((0x7fffffff < unaff_ESI) && (0x7fffffff < uVar1)) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040f3a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar fcn.0040f3a0(void)\n\n{\n    uint var_8h;\n    \n    fcn.0040f3e0(0x80000001, L\"SwapMouseButtons\", 4);\n    if (var_8h != 0x31) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 85
    },
    "00415aa3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415aa3(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.004138f8(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00430cb8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430cb8(uint hWnd)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n    iVar2 = (var_4h - var_ch) * (var_8h - lpRect);\n    if ((((lpRect <= *0x4a86d4) && (*0x4a86d4 <= var_8h)) && (var_ch <= *0x4a86d8)) &&\n       (((*0x4a86d8 <= var_4h && (iVar2 - *0x4a86d0 == 0 || iVar2 < *0x4a86d0)) &&\n        (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(hWnd),  iVar1 != 0)))) {\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if (iVar1 != 0) {\n            *0x4a86cc = hWnd;\n            *0x4a86d0 = iVar2;\n            return 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 289
    },
    "00431c2b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431c2b(uint arg_8h, int32_t arg_ch, uint8_t *arg_10h, uchar *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h - arg_ch;\n    *arg_10h = (iVar1 < 0) - 1U & iVar1;\n    arg_ch = arg_8h + arg_ch;\n    if (0xff < arg_ch) {\n        arg_ch = 0xff;\n    }\n    *arg_14h = arg_ch;\n    return;\n}\n",
        "token_count": 129
    },
    "00431e69": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431e69(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        var_8h = 0;\n        var_4h = 0;\n        fcn.00431cea(arg_8h, &var_8h);\n        fcn.0041137c(0);\n        **(*(arg_8h + 4) + -4 + *(arg_8h + 8) * 4) = arg_ch;\n        iVar1 = *(*(arg_8h + 4) + -4 + *(arg_8h + 8) * 4);\n        *(iVar1 + 4) = arg_10h;\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "00432894": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.00432894(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    double dVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    float10 extraout_ST0;\n    float10 extraout_ST1;\n    int64_t iVar4;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if ((CONCAT44(arg_ch, arg_8h) == 0.0) || (*0x48bd90 == CONCAT44(arg_ch, arg_8h))) {\n        return 0;\n    }\n    iVar4 = fcn.00426236();\n    var_10h = SUB84(iVar4, 0);\n    var_ch = iVar4 >> 0x20;\n    if (extraout_ST1 <= extraout_ST0) {\n        dVar1 = iVar4 + *0x48bd80;\n        var_8h = SUB84(dVar1, 0);\n        var_4h = dVar1 >> 0x20;\n        iVar2 = ((var_4h - var_ch) - (var_8h < var_10h)) - (var_8h - var_10h < 10);\n        iVar3 = (arg_ch - var_ch) - (arg_8h < var_10h);\n        if ((iVar2 <= iVar3) && ((iVar2 < iVar3 || ((var_8h - var_10h) - 10 <= arg_8h - var_10h)))) {\n            iVar4 = iVar4 + 1;\n        }\n    }\n    else {\n        dVar1 = iVar4 - *0x48bd80;\n        var_8h = SUB84(dVar1, 0);\n        var_4h = dVar1 >> 0x20;\n        iVar2 = ((var_4h - var_ch) - (var_8h < var_10h)) - (var_8h - var_10h < 10);\n        iVar3 = (arg_ch - var_ch) - (arg_8h < var_10h);\n        if ((iVar2 <= iVar3) && ((iVar2 < iVar3 || ((var_8h - var_10h) - 10 <= arg_8h - var_10h)))) {\n            return iVar4 + -1;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 554
    },
    "0043332a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0043332a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_8h;\n    ushort var_4h;\n    \n    uVar1 = fcn.00411361(arg_8h);\n    uVar2 = (uVar1 / 2) * 2;\n    if (uVar1 != uVar2) {\n        return uVar2 & 0xffffff00;\n    }\n    iVar3 = 0;\n    if (0 < uVar1) {\n        do {\n            var_8h._0_2_ = *(arg_8h + iVar3 * 2);\n            var_8h._2_2_ = *(arg_8h + 2 + iVar3 * 2);\n            var_4h = 0;\n            uVar2 = fcn.00433276(&var_8h, &var_10h, 8);\n            if (uVar2 == '\\0') {\n                return uVar2 & 0xffffff00;\n            }\n            uVar2 = iVar3 / 2;\n            iVar3 = iVar3 + 2;\n            *(uVar2 + arg_ch) = var_10h;\n        } while (iVar3 < uVar1);\n    }\n    return CONCAT31(uVar2 >> 8, 1);\n}\n",
        "token_count": 333
    },
    "00433556": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433556(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t lprc;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == -0x80000000) {\n        arg_8h = 0;\n    }\n    if (arg_ch == -0x80000000) {\n        arg_ch = 0;\n    }\n    var_8h = arg_8h + arg_10h;\n    var_4h = arg_ch + arg_14h;\n    lprc = arg_8h;\n    var_ch = arg_ch;\n    (*_sym.imp.USER32.dll_MonitorFromRect)(&lprc, 0);\n    return;\n}\n",
        "token_count": 197
    },
    "0043374b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "delay execution"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043374b(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpFrequency;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_QueryPerformanceCounter;\n    if (-1 < arg_8h) {\n        if (arg_8h == 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            return;\n        }\n        if (arg_8h < 0xf) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_18h);\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_QueryPerformanceFrequency)(&lpFrequency);\n                do {\n                    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                    (*pcVar1)(&var_10h);\n                    var_20h = var_10h - var_18h;\n                    var_1ch = (var_ch - var_14h) - (var_10h < var_18h);\n                    _var_8h = ROUND((CONCAT44(var_1ch, var_20h) / _lpFrequency) * *0x48bd98);\n                } while (var_8h < arg_8h);\n                return;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "00433818": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00433818(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *arg_18h;\n    if ((iVar2 == arg_8h) && (*arg_1ch == arg_ch)) {\n        return 0;\n    }\n    if (iVar2 < arg_8h) {\n        iVar1 = (arg_8h - iVar2) / arg_10h;\n        if ((iVar1 == 0) || (iVar1 < arg_14h)) {\n            iVar1 = arg_14h;\n        }\n        iVar2 = iVar2 + iVar1;\n        if (arg_8h < iVar2) {\ncode_r0x004338ab:\n            *arg_18h = arg_8h;\n            goto code_r0x00433860;\n        }\n    }\n    else {\n        if (iVar2 <= arg_8h) goto code_r0x00433860;\n        iVar1 = (iVar2 - arg_8h) / arg_10h;\n        if ((iVar1 == 0) || (iVar1 < arg_14h)) {\n            iVar1 = arg_14h;\n        }\n        iVar2 = iVar2 - iVar1;\n        if (iVar2 < arg_8h) goto code_r0x004338ab;\n    }\n    *arg_18h = iVar2;\ncode_r0x00433860:\n    iVar2 = *arg_1ch;\n    if (iVar2 < arg_ch) {\n        arg_10h = (arg_ch - iVar2) / arg_10h;\n        if ((arg_10h == 0) || (arg_10h < arg_14h)) {\n            arg_10h = arg_14h;\n        }\n        iVar2 = iVar2 + arg_10h;\n        if (arg_ch < iVar2) {\n            *arg_1ch = arg_ch;\n            return 1;\n        }\n    }\n    else {\n        if (iVar2 <= arg_ch) {\n            return 1;\n        }\n        arg_10h = (iVar2 - arg_ch) / arg_10h;\n        if ((arg_10h == 0) || (arg_10h < arg_14h)) {\n            arg_10h = arg_14h;\n        }\n        iVar2 = iVar2 - arg_10h;\n        if (iVar2 < arg_ch) {\n            *arg_1ch = arg_ch;\n            return 1;\n        }\n    }\n    *arg_1ch = iVar2;\n    return 1;\n}\n",
        "token_count": 604
    },
    "004349fb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "log keystrokes",
            "find graphical window",
            "find taskbar"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004349fb(int32_t hWnd)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    if (hWnd == iVar2) {\n        return 1;\n    }\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_FindWindowW)(L\"Shell_TrayWnd\", 0);\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsIconic)(hWnd);\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(hWnd, 9);\n    }\n    var_8h = 0;\n    iVar3 = (*_sym.imp.USER32.dll_SetForegroundWindow)(hWnd);\n    pcVar1 = _sym.imp.USER32.dll_GetWindowThreadProcessId;\n    if (iVar3 == 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, 0);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar6 = (*pcVar1)(hWnd, 0);\n        pcVar1 = _sym.imp.USER32.dll_AttachThreadInput;\n        (*_sym.imp.USER32.dll_AttachThreadInput)(uVar5, uVar6, 1);\n        (*pcVar1)(uVar5, uVar4, 1);\n        (*pcVar1)(uVar4, uVar6, 1);\n        iVar2 = (*_sym.imp.USER32.dll_SetForegroundWindow)(hWnd);\n        if (iVar2 == 0) {\n            uVar7 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x12, 0, 0, 0);\n            (*_sym.imp.USER32.dll_keybd_event)(0x12, uVar7);\n            uVar7 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x12, 0, 2, 0);\n            (*_sym.imp.USER32.dll_keybd_event)(0x12, uVar7);\n            uVar7 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x12, 0, 0, 0);\n            (*_sym.imp.USER32.dll_keybd_event)(0x12, uVar7);\n            uVar7 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x12, 0, 2, 0);\n            (*_sym.imp.USER32.dll_keybd_event)(0x12, uVar7);\n            iVar2 = (*_sym.imp.USER32.dll_SetForegroundWindow)(hWnd);\n            if (iVar2 != 0) {\n                var_8h = 4;\n            }\n        }\n        else {\n            var_8h = 3;\n        }\n        (*pcVar1)(uVar5, uVar6, 0);\n        (*pcVar1)(uVar5, uVar4, 0);\n        (*pcVar1)(uVar4, uVar6, 0);\n        return var_8h;\n    }\n    return 2;\n}\n",
        "token_count": 726
    },
    "0043630f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043630f(uint *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_a4h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    fcn.004107b0();\n    var_14h = arg_ch;\n    uVar1 = fcn.00434990(&var_a4h, 0x10, *arg_8h);\n    fcn.004348fc(&var_a4h, &var_14h, uVar1, 0x10);\n    (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x1104, 0, uVar1);\n    fcn.004348c0(&var_a4h, uVar1, &var_14h, 0x10);\n    iVar2 = var_14h;\n    var_20h = (var_8h - var_10h) / 2 + var_10h;\n    arg_10h[1] = var_20h;\n    uVar1 = fcn.00434990(&var_a4h, 0x10, *arg_8h);\n    if (iVar2 <= var_ch) {\n        while( true ) {\n            var_24h = iVar2;\n            fcn.004348fc(&var_a4h, &var_24h, uVar1, 0x10);\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x1111, 0, uVar1);\n            fcn.004348c0(&var_a4h, uVar1, &var_24h, 0x10);\n            if ((var_1ch & 0x40) != 0) break;\n            iVar2 = iVar2 + 1;\n            if (var_ch < iVar2) {\n                fcn.004107d0();\n                return 0;\n            }\n        }\n        iVar3 = iVar2;\n        if (iVar2 <= var_ch) {\n            while( true ) {\n                var_24h = iVar3;\n                fcn.004348fc(&var_a4h, &var_24h, uVar1, 0x10);\n                (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x1111, 0, uVar1);\n                fcn.004348c0(&var_a4h, uVar1, &var_24h, 0x10);\n                if ((var_1ch & 0x40) == 0) break;\n                iVar3 = iVar3 + 1;\n                if (var_ch < iVar3) {\n                    fcn.004107d0();\n                    return 0;\n                }\n            }\n            if (iVar3 <= var_ch) {\n                *arg_10h = (iVar3 - iVar2) / 2 + iVar2;\n                fcn.004107d0();\n                return 1;\n            }\n        }\n    }\n    fcn.004107d0();\n    return 0;\n}\n",
        "token_count": 752
    },
    "00441994": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441994(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint *arg_8h_00;\n    uint uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint lpSubKey;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    var_4h = 0xff;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(arg_8h, 0, &lpSubKey, &var_4h, 0, 0, 0, &var_20h);\n    if (iVar2 != 0x103) {\n        var_ch = arg_ch | 0x20019;\n        do {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h, &lpSubKey, 0, var_ch, &hKey);\n            if (iVar2 != 0) {\n                return 0;\n            }\n            cVar1 = fcn.00441994(hKey, arg_ch);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            var_18h = 0;\n            var_10h = 0;\n            cVar1 = fcn.004312d0(&var_18h);\n            if (cVar1 == '\\0') {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(arg_8h, &lpSubKey);\n            }\n            else {\n                uVar7 = 0;\n                puVar5 = &lpSubKey;\n                arg_8h_00 = &var_18h;\n                uVar4 = arg_8h;\n                uVar6 = arg_ch;\n                pcVar3 = fcn.00441971(arg_8h_00);\n                iVar2 = (*pcVar3)(arg_8h_00, uVar4, puVar5, uVar6, uVar7);\n            }\n            if (iVar2 != 0) {\n                fcn.00431858(&var_18h);\n                return 0;\n            }\n            fcn.00431858(&var_18h);\n            var_4h = 0xff;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(arg_8h, 0, &lpSubKey, &var_4h, 0, 0, 0, &var_20h);\n        } while (iVar2 != 0x103);\n    }\n    return 1;\n}\n",
        "token_count": 634
    },
    "004429c3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442a00)\n\nint32_t __cdecl fcn.004429c3(int32_t arg_8h)\n\n{\n    uint arg_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.00414a63(0);\n    fcn.0044291d(arg_8h, arg_ch);\n    *(arg_8h + 0xd4) = 0;\n    return arg_8h;\n}\n",
        "token_count": 112
    },
    "0044bd2a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bd2a(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    \n    uVar2 = arg_ch + 1;\n    if (uVar2 <= arg_8h[2]) {\n        return;\n    }\n    if (uVar2 < 0x41c2) {\n        var_8h = uVar2 * 2;\n    }\n    else {\n        if (uVar2 < 0x2000000) {\n            dVar1 = uVar2;\n            if (uVar2 < 0) {\n                dVar1 = dVar1 + *0x48bd70;\n            }\n            var_8h = ROUND(dVar1 * *0x48bda8);\n            arg_8h[2] = var_8h;\n            goto code_r0x0044bdfd;\n        }\n        if (uVar2 < 0x8000000) {\n            dVar1 = uVar2;\n            if (uVar2 < 0) {\n                dVar1 = dVar1 + *0x48bd70;\n            }\n            var_8h = ROUND(dVar1 * *0x48bdb8);\n            arg_8h[2] = var_8h;\n            goto code_r0x0044bdfd;\n        }\n        dVar1 = uVar2;\n        if (uVar2 < 0) {\n            dVar1 = dVar1 + *0x48bd70;\n        }\n        var_8h = ROUND(dVar1 * *0x48bdb0);\n    }\n    arg_8h[2] = var_8h;\ncode_r0x0044bdfd:\n    iVar3 = fcn.00444b08(arg_8h[2]);\n    arg_8h[2] = iVar3;\n    iVar3 = fcn.00411777(iVar3);\n    if (*arg_8h != 0) {\n        fcn.00411000(iVar3, *arg_8h, arg_8h[1] + 1);\n        fcn.0041137c(*arg_8h);\n    }\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 515
    },
    "00451447": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451447(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint *arg_ch_00;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint arg_18h_00;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    iVar2 = arg_ch[0x72];\n    puVar3 = NULL;\n    if (0 < iVar2) {\n        arg_ch[0x72] = 0;\n        arg_ch_00 = arg_ch;\n        arg_10h_00 = arg_10h;\n        arg_14h_00 = arg_14h;\n        arg_18h_00 = arg_18h;\n        arg_8h_00 = fcn.0041365d(iVar2);\n        fcn.00451447(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h_00, arg_18h_00);\n    }\n    cVar1 = fcn.004417f1(in_ECX, arg_8h, &var_4h, &var_8h);\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00411777(0x24);\n        if (iVar2 != 0) {\n            puVar3 = fcn.0044ab95(iVar2);\n        }\n        var_4h = puVar3;\n        fcn.0040e410(**(*(in_ECX + 0x74) + var_8h * 4) + 0x10);\n        *puVar3 = arg_8h;\n        puVar3[5] = *arg_ch;\n        puVar3[6] = arg_10h;\n        puVar3[7] = arg_14h;\n        puVar3[8] = arg_18h;\n        fcn.0043471a(in_ECX + 0x2c, &var_4h);\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "00453902": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00453902(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00444794(&var_14h);\n    fcn.0044c3e8(&var_14h, arg_ch);\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    fcn.004536cc(arg_8h, &var_8h);\n    fcn.0044433a(arg_8h, arg_8h + 0x14);\n    if (arg_10h != 0) {\n        do {\n            fcn.0044c348(arg_8h, &var_14h);\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    fcn.00444142(arg_8h, arg_8h + 0x14);\n    return;\n}\n",
        "token_count": 247
    },
    "00453c99": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453c99(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_8h;\n    iVar2 = 0;\n    if ((*(arg_8h + 0x24) != 0) && (*(arg_8h + 0x10) != '\\0')) {\n        fcn.00431376(arg_ch);\n        iVar1 = fcn.0044c678(arg_8h, &arg_10h, 1);\n        if (0 < iVar1) {\n            var_1ch = -1;\n            var_4h = 0;\n            var_8h = 0;\n            if (0 < *(arg_8h + 0x34)) {\n                arg_8h = 0;\n                do {\n                    puVar3 = *(arg_8h_00 + 0x2c) + arg_8h;\n                    var_18h = *puVar3;\n                    fcn.00444c53(arg_8h_00, &var_8h, &var_1ch);\n                    var_ch = puVar3[1];\n                    var_10h = -1;\n                    fcn.00444c53(arg_8h_00, &var_8h, &var_10h);\n                    var_14h = var_10h - var_1ch;\n                    fcn.00444b25(arg_ch, &var_1ch);\n                    fcn.00435085(&var_8h, &var_1ch);\n                    arg_8h = arg_8h + 8;\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < *(arg_8h_00 + 0x34));\n            }\n            return *(arg_8h_00 + 0x34);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 503
    },
    "0045651b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045651b(uint noname_0, uint *arg_ch)\n\n{\n    char cVar1;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.0044ab95(&var_14h);\n    if (*0x4a87b0 != '\\x01') {\n        cVar1 = fcn.0045363b(0x4a8710, &var_14h);\n        if (cVar1 != '\\0') goto code_r0x00456566;\n    }\n    var_14h = 0;\n    fcn.00402170();\ncode_r0x00456566:\n    if (*0x4a87b0 == '\\x01') {\n        fcn.00403f40(1, 0);\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = var_14h;\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 221
    },
    "0045725e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045725e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    char cVar2;\n    ushort uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    float fVar6;\n    int32_t *extraout_EDX;\n    double *pdVar7;\n    float10 fVar8;\n    ulong uVar9;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x1c) = 0;\n    *(arg_8h + 0x2c) = 0;\n    var_4h = 0;\n    if (0 < *(arg_8h + 0xc)) {\n        arg_10h = arg_10h * 4;\n        pdVar7 = arg_8h + 0x30;\n        do {\n            *pdVar7 = 0.0;\n            *(pdVar7 + 0x14) = 0.0;\n    // switch table (16 cases) at 0x4574aa\n            switch(*(pdVar7 + 1)) {\n            case 0.0:\n                uVar1 = fcn.0040c8f0();\n                *pdVar7 = uVar1;\n                break;\n            case 1.401298e-45:\n                uVar1 = fcn.0040c8f0();\n                *pdVar7 = uVar1;\n                break;\n            case 2.802597e-45:\n                uVar3 = fcn.0040c8f0();\n                *pdVar7 = uVar3;\n                break;\n            case 4.203895e-45:\n                uVar3 = fcn.0040c8f0();\n                *pdVar7 = uVar3;\n                break;\n            case 5.605194e-45:\n                fVar6 = fcn.0040c8f0();\n                *pdVar7 = fVar6;\n                break;\n            case 7.006492e-45:\n            case 1.681558e-44:\n                fVar6 = fcn.00442d6f(*(arg_10h + *(arg_ch + 4)));\n                *pdVar7 = fVar6;\n                break;\n            case 8.407791e-45:\n                uVar4 = fcn.00452e81(*(arg_10h + *(arg_ch + 4)));\n                uVar5 = fcn.00411361(uVar4);\n                if (uVar5 < 0x10000) {\n                    uVar5 = 0x10000;\n                }\n                fVar6 = fcn.0041376b(uVar5 + 1);\n                fcn.00452e81(*(arg_10h + *(arg_ch + 4)));\n                uVar4 = fcn.0040f8c0();\n                fcn.00413800(fVar6, uVar4);\n                fcn.0041137c(uVar4);\n                *pdVar7 = fVar6;\n                *(pdVar7 + 0x14) = fVar6;\n                break;\n            case 9.809089e-45:\n                uVar4 = fcn.00452e81(*(arg_10h + *(arg_ch + 4)));\n                uVar5 = fcn.00411361(uVar4);\n                if (uVar5 < 0x10000) {\n                    uVar5 = 0x10000;\n                }\n                fVar6 = fcn.0041376b(uVar5 * 2 + 2);\n                uVar4 = fcn.00452e81(*(arg_10h + *(arg_ch + 4)));\n                fcn.00411707(fVar6, uVar4);\n                *pdVar7 = fVar6;\n                *(pdVar7 + 0x14) = fVar6;\n                break;\n            case 1.121039e-44:\n                fVar6 = fcn.0044b01e(*(arg_10h + *(arg_ch + 4)));\n                *pdVar7 = fVar6;\n                break;\n            case 1.261169e-44:\n                fVar8 = fcn.0040bd40();\n                *pdVar7 = fVar8;\n                break;\n            case 1.401298e-44:\n                fVar8 = fcn.0040bd40();\n                *pdVar7 = fVar8;\n                break;\n            case 1.541428e-44:\n                fVar6 = fcn.00442d6f(*(arg_10h + *(arg_ch + 4)));\n                *pdVar7 = fVar6;\n                break;\n            case 1.821688e-44:\n                uVar9 = fcn.00442d6f(*(arg_10h + *(arg_ch + 4)));\n                *pdVar7 = uVar9;\n                *(pdVar7 + 4) = uVar9 >> 0x20;\n                break;\n            case 1.961818e-44:\n                uVar9 = fcn.00442d6f(*(arg_10h + *(arg_ch + 4)));\n                *pdVar7 = uVar9;\n                *(pdVar7 + 4) = uVar9 >> 0x20;\n                break;\n            case 2.101948e-44:\n                cVar2 = fcn.004329dd(*(arg_10h + *(arg_ch + 4)));\n                if (cVar2 == '\\0') {\n                    *pdVar7 = 0.0;\n                }\n                else {\n                    *pdVar7 = *(*extraout_EDX + 8);\n                }\n            }\n            var_4h = var_4h + 1;\n            arg_10h = arg_10h + 8;\n            pdVar7 = pdVar7 + 3;\n        } while (var_4h < *(arg_8h + 0xc));\n    }\n    return;\n}\n",
        "token_count": 1349
    },
    "0045cd81": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045cd81(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int16_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    puVar3 = fcn.00452e60(**(arg_8h + 4));\n    uVar1 = *puVar3;\n    *puVar3[3] = *puVar3[3] + 1;\n    piVar4 = fcn.00402150();\n    if (*piVar4 != 0x5c) {\n        fcn.0040d510();\n    }\n    uVar5 = fcn.00452e81(*(*(arg_8h + 4) + 4));\n    iVar6 = (*_sym.imp.KERNEL32.dll_SetVolumeLabelW)(uVar1, uVar5);\n    if (iVar6 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    fcn.00402260();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar2);\n    return 0;\n}\n",
        "token_count": 329
    },
    "0045ce27": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get disk information"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ce27(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint var_424h;\n    uint var_224h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_14h = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    puVar1 = fcn.00452e60(**(arg_8h + 4));\n    var_10h = *puVar1;\n    var_ch = puVar1[1];\n    var_8h = puVar1[2];\n    var_4h = puVar1[3];\n    *var_4h = *var_4h + 1;\n    piVar2 = fcn.00402150();\n    if (*piVar2 != 0x5c) {\n        fcn.0040d510();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)\n                      (var_10h, &var_224h, 0xff, &var_24h, &var_1ch, &var_20h, &var_424h, 0xff);\n    if (iVar3 == 0) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n    }\n    else {\n        fcn.0040e8e0();\n    }\n    fcn.00402260();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(var_14h);\n    return 0;\n}\n",
        "token_count": 413
    },
    "0045cf02": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get disk information"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045cf02(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint var_424h;\n    uint var_224h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_18h = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    puVar1 = fcn.00452e60(**(arg_8h + 4));\n    var_10h = *puVar1;\n    var_ch = puVar1[1];\n    var_8h = puVar1[2];\n    var_4h = puVar1[3];\n    *var_4h = *var_4h + 1;\n    piVar2 = fcn.00402150();\n    if (*piVar2 != 0x5c) {\n        fcn.0040d510();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)\n                      (var_10h, &var_224h, 0xff, &var_1ch, &var_24h, &var_20h, &var_424h, 0xff);\n    if (iVar3 == 0) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n    }\n    else {\n        fcn.0041343b(&var_224h, 0x489d60, var_1ch);\n        fcn.0040e8e0();\n    }\n    fcn.00402260();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(var_18h);\n    return 0;\n}\n",
        "token_count": 439
    },
    "0045cff8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get disk information"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045cff8(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint var_420h;\n    uint var_220h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.0040e8e0();\n    uVar1 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    puVar2 = fcn.00452e60(**(arg_8h + 4));\n    var_10h = *puVar2;\n    var_ch = puVar2[1];\n    var_8h = puVar2[2];\n    var_4h = puVar2[3];\n    *var_4h = *var_4h + 1;\n    piVar3 = fcn.00402150();\n    if (*piVar3 != 0x5c) {\n        fcn.0040d510();\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)\n                      (var_10h, &var_420h, 0xff, &var_18h, &var_1ch, &var_20h, &var_220h, 0xff);\n    if (iVar4 == 0) {\n        fcn.00403f40(1, 0);\n    }\n    else {\n        fcn.0040e8e0();\n    }\n    fcn.00402260();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar1);\n    return 0;\n}\n",
        "token_count": 410
    },
    "0045d249": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get disk size"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045d249(int32_t arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    double dStack12;\n    \n    dStack12 = CONCAT44(in_ECX, uStack12);\n    var_ch = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.004091e0();\n    *(arg_ch + 1) = 1;\n    *arg_ch = 0;\n    puVar2 = fcn.00452e60(**(arg_8h + 4));\n    uVar1 = *puVar2;\n    *puVar2[3] = *puVar2[3] + 1;\n    piVar3 = fcn.00402150();\n    if (*piVar3 != 0x5c) {\n        fcn.0040d510();\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(uVar1, &var_14h, &var_24h, &var_1ch);\n    if (iVar4 == 0) {\n        fcn.00403f40(1, 0);\n    }\n    else {\n        dStack12 = _var_14h * *0x48bde0;\n        fcn.004091e0();\n        *(arg_ch + 1) = 3;\n        *arg_ch = dStack12;\n    }\n    fcn.00402260();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(var_ch);\n    return 0;\n}\n",
        "token_count": 446
    },
    "0045d327": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get disk size"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045d327(int32_t arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    double dStack12;\n    \n    dStack12 = CONCAT44(in_ECX, uStack12);\n    var_ch = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.004091e0();\n    *(arg_ch + 1) = 1;\n    *arg_ch = 0;\n    puVar2 = fcn.00452e60(**(arg_8h + 4));\n    uVar1 = *puVar2;\n    *puVar2[3] = *puVar2[3] + 1;\n    piVar3 = fcn.00402150();\n    if (*piVar3 != 0x5c) {\n        fcn.0040d510();\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(uVar1, &var_24h, &var_14h, &var_1ch);\n    if (iVar4 == 0) {\n        fcn.00403f40(1, 0);\n    }\n    else {\n        dStack12 = _var_14h * *0x48bde0;\n        fcn.004091e0();\n        *(arg_ch + 1) = 3;\n        *arg_ch = dStack12;\n    }\n    fcn.00402260();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(var_ch);\n    return 0;\n}\n",
        "token_count": 446
    },
    "00461b7c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461b7c(uint *hWnd, uint arg_ch)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xb0, &var_8h, &var_4h);\n    if (var_8h < var_4h) {\n        uVar3 = (*pcVar2)(*hWnd, 0xe, 0, 0);\n        if (((uVar3 != 0) && (var_8h <= uVar3)) && (var_4h <= uVar3)) {\n            iVar1 = (uVar3 + 1) * 2;\n            iVar4 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n            iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xd, uVar3 + 1, iVar4);\n            if (iVar5 != 0) {\n                if (var_4h != uVar3) {\n                    *(iVar4 + var_4h * 2) = 0;\n                }\n                fcn.00402170();\n                fcn.0041137c(iVar4);\n                return 1;\n            }\n            fcn.0041137c(iVar4);\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 364
    },
    "0046885f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046885f(uint *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint uVar1;\n    uint var_14h;\n    \n    arg_ch_00 = arg_10h;\n    if (arg_8h[0xd] <= arg_ch) {\n        fcn.0040c8a0(arg_10h, 0);\n        return;\n    }\n    fcn.0042f19c(*arg_8h, arg_8h[0xb], arg_8h[0xd], arg_ch, &arg_10h);\n    uVar1 = arg_10h;\n    fcn.00444bc2(&var_14h, arg_10h);\n    fcn.0046043a(&var_14h, arg_ch_00);\n    fcn.00401350();\n    (**0x491494)(uVar1);\n    return;\n}\n",
        "token_count": 213
    },
    "0046bd0c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046bd0c(double *arg_8h, double *arg_ch)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    float fVar4;\n    uint uVar5;\n    uint var_18h;\n    float var_10h;\n    float var_4h;\n    double dStack12;\n    \n    if (*(arg_8h + 1) < 0x10) {\n    // switch table (16 cases) at 0x46be88\n        switch(*(*(arg_8h + 1) * 4 + 0x46be88)) {\n        case 0x46bd2e:\n            uVar5 = fcn.00432f4e(*arg_8h, 0xffffffff);\n            fcn.0040e8e0();\n            fcn.0041137c(uVar5);\n            break;\n        case 0x46bd56:\n            fcn.0040e8e0();\n            break;\n        default:\n            fVar4 = *arg_8h;\n            fcn.004091e0();\n            *(arg_ch + 1) = 1.401298e-45;\n            *arg_ch = fVar4;\n            break;\n        case 0x46bd79:\n            fVar4 = *arg_8h;\n            fcn.004091e0();\n            *(arg_ch + 1) = 2.802597e-45;\n            *arg_ch = fVar4;\n            *(arg_ch + 4) = 0.0;\n            break;\n        case 0x46bd93:\n            iVar2 = *arg_8h;\n            fcn.004091e0();\n            *(arg_ch + 1) = 1.401298e-45;\n            *arg_ch = iVar2;\n            break;\n        case 0x46bda9:\n            uVar3 = *arg_8h;\n            fcn.004091e0();\n            *(arg_ch + 1) = 1.401298e-45;\n            *arg_ch = uVar3;\n            break;\n        case 0x46bdbf:\n            uVar1 = *arg_8h;\n            fcn.004091e0();\n            *(arg_ch + 1) = 1.401298e-45;\n            *arg_ch = uVar1;\n            break;\n        case 0x46bdd5:\n            dStack12 = *arg_8h;\n            fcn.004091e0();\n            *(arg_ch + 1) = 4.203895e-45;\n            *arg_ch = dStack12;\n            break;\n        case 0x46bded:\n            dStack12 = *arg_8h;\n            fcn.004091e0();\n            *(arg_ch + 1) = 4.203895e-45;\n            *arg_ch = dStack12;\n            break;\n        case 0x46be05:\n            fVar4 = *arg_8h;\n            fcn.004091e0();\n            *(arg_ch + 1) = 9.809089e-45;\n            *arg_ch = fVar4;\n            break;\n        case 0x46be17:\n            fVar4 = *arg_8h;\n            dStack12 = dStack12 & 0xffffffff | *(arg_8h + 4) << 0x20;\n            fcn.004091e0();\n            *(arg_ch + 1) = 2.802597e-45;\n            *arg_ch = fVar4;\n            *(arg_ch + 4) = var_4h;\n            break;\n        case 0x46be35:\n            fVar4 = *arg_8h;\n            dStack12 = dStack12 & 0xffffffff | *(arg_8h + 4) << 0x20;\n            fcn.004091e0();\n            *(arg_ch + 1) = 2.802597e-45;\n            *arg_ch = fVar4;\n            *(arg_ch + 4) = var_4h;\n            break;\n        case 0x46be53:\n            var_10h = *arg_8h;\n            var_18h._0_2_ = 9;\n            fcn.0046795f(&var_18h);\n        }\n    }\n    if (*(arg_8h + 0x14) != 0.0) {\n        fcn.004138f8(*(arg_8h + 0x14));\n    }\n    return;\n}\n",
        "token_count": 1017
    },
    "00472e57": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.00472e57(uint *arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t *arg_20h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    \n    fcn.004091e0();\n    arg_8h_00 = fcn.00411777(0x14);\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        *arg_8h_00 = 0;\n        arg_8h_00[1] = 0;\n        arg_8h_00[2] = 0;\n        arg_8h_00[3] = 0;\n        arg_8h_00[4] = 0;\n    }\n    *arg_20h = *arg_20h + 1;\n    iVar1 = fcn.0046fe20(arg_8h_00, arg_10h, arg_14h, arg_18h);\n    *arg_ch = iVar1;\n    if (iVar1 != 0) {\n        if (arg_8h_00 != NULL) {\n            fcn.0044b04b(arg_8h_00);\n        }\n        fcn.00402260();\n        return NULL;\n    }\n    arg_8h[2] = 0xc;\n    *arg_8h = arg_8h_00;\n    fcn.00402260();\n    return arg_8h_00;\n}\n",
        "token_count": 361
    },
    "00476c0b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00476c0b(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_ch;\n    arg_8h_00 = 0;\n    fcn.0040ea00(1);\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.0044b01e(**(arg_8h + 4));\n    }\n    cVar1 = fcn.00462713(arg_8h_00, &arg_ch, &arg_8h, &var_4h, &var_8h, &var_ch);\n    if (cVar1 != '\\0') {\n        puVar2 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar2[2] = 1;\n        *puVar2 = arg_ch;\n        piVar3 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        piVar3[2] = 1;\n        *piVar3 = arg_8h;\n        puVar2 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar2[2] = 1;\n        *puVar2 = var_4h;\n        puVar2 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar2[2] = 1;\n        *puVar2 = var_8h;\n        puVar2 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar2[2] = 1;\n        *puVar2 = var_ch;\n        return 0;\n    }\n    fcn.004091e0();\n    puVar2[2] = 1;\n    *puVar2 = 0;\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 520
    },
    "00477256": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00477256(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044ab95(&var_24h);\n    if ((*0x4a863c == '\\x01') || (cVar1 = fcn.0045135a(0x4a8630, &var_24h),  cVar1 == '\\0')) {\n        var_24h = 0;\n        fcn.00402170();\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n    }\n    if (*0x4a863c == '\\x01') {\n        fcn.00403f40(1, 0);\n    }\n    if ((*(arg_8h + 8) == 0) || (iVar2 = fcn.0040c8f0(),  iVar2 != 1)) {\n        fcn.004091e0();\n        *arg_ch = var_24h;\n    }\n    else {\n        fcn.0040ea00(1);\n        puVar3 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar3[2] = 1;\n        *puVar3 = var_24h;\n        puVar3 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar3[2] = 7;\n        *puVar3 = var_10h;\n        puVar3 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar3[2] = 7;\n        *puVar3 = var_ch;\n        puVar3 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar3[2] = 1;\n        *puVar3 = var_8h;\n        arg_ch = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        *arg_ch = var_4h;\n    }\n    arg_ch[2] = 1;\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 573
    },
    "00477668": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00477668(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    int32_t iStack2796;\n    int32_t *piVar7;\n    uint uVar8;\n    uint arg_8h_00;\n    uint uStack2680;\n    int32_t iStack2676;\n    uint uStack2672;\n    int32_t *piStack2668;\n    uchar auStack2240 [516];\n    uchar auStack1724 [552];\n    uchar auStack1172 [492];\n    uchar auStack680 [676];\n    \n    puVar2 = fcn.00452e60(**(arg_8h + 4));\n    uStack2680 = *puVar2;\n    iVar4 = puVar2[1];\n    uStack2672 = puVar2[2];\n    piStack2668 = puVar2[3];\n    arg_8h_00 = 1;\n    *piStack2668 = *piStack2668 + 1;\n    iStack2676 = iVar4;\n    iVar3 = fcn.004423f2(&stack0xfffff588, L\".lnk\", 2, 1, 0xffffffff, 0xffffffff, 0xffffffff);\n    if (iVar3 == iVar4) {\n        fcn.0040d510();\n    }\n    fcn.0040e8e0();\n    uVar8 = 1;\n    fcn.00403f40(1, 0);\n    cVar1 = fcn.00433fa3(arg_8h_00);\n    if (cVar1 != '\\0') {\n        (*_sym.imp.ole32.dll_CoInitialize)();\n        iVar4 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n        if (-1 < iVar4) {\n            iVar4 = (***0x4818a0)();\n            if (-1 < iVar4) {\n                iVar4 = (**(_pe_dos_header + 0x14))();\n                if (-1 < iVar4) {\n                    iStack2796 = 0x477777;\n                    fcn.0040ea00(1);\n                    piVar7 = NULL;\n                    iStack2796 = 0x104;\n                    (*(*0x4818a0)[3])();\n                    fcn.0040d1a0(0, 1);\n                    fcn.0040e8e0();\n                    puVar6 = &stack0xfffffb6c;\n                    (**(*piVar7 + 0x20))();\n                    fcn.0040d1a0(0, 1);\n                    fcn.0040e8e0();\n                    piVar5 = 0x4818a0;\n                    (*(*0x4818a0)[10])(0x4818a0, &stack0xfffff740, 0x104);\n                    fcn.0040d1a0(0, 1);\n                    fcn.0040e8e0();\n                    (**(*piVar7 + 0x18))(piVar7, &stack0xfffff944, 0x104);\n                    fcn.0040d1a0(0, 1);\n                    fcn.0040e8e0();\n                    (**(*piVar5 + 0x40))(piVar5, &stack0xfffffd58, 0x104);\n                    fcn.0040d1a0(0, 1);\n                    fcn.0040e8e0();\n                    piVar5 = fcn.0040d1a0(0, 1);\n                    fcn.004091e0();\n                    piVar5[2] = 1;\n                    *piVar5 = puVar6;\n                    (**(iStack2796 + 0x38))(&stack0xfffff514, &stack0xfffff500);\n                    puVar2 = fcn.0040d1a0(0, 1);\n                    fcn.004091e0();\n                    puVar2[2] = 1;\n                    *puVar2 = uVar8;\n                    fcn.00403f40(0, 0);\n                }\n                (**(*0x481960 + 8))();\n            }\n            (**(*0x481a00 + 8))();\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1015
    },
    "0047b6c2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b6c2(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_8h = 1;\n    var_4h = 0;\n    if (((arg_14h == 0) || (*(arg_14h + 8) == 0)) || (*(**(arg_14h + 4) + 8) != 8)) {\n        uVar1 = 4;\n    }\n    else {\n        uVar1 = 8;\n    }\n    uVar1 = fcn.0047a029(arg_8h, uVar1, &var_10h, arg_ch, arg_10h, arg_14h);\n    fcn.004091e0();\n    return uVar1;\n}\n",
        "token_count": 218
    },
    "0047ccdd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ccdd(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint in_stack_ffffff70;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    \n    var_2ch = 0x4870e0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_14h = 1;\n    var_10h = 0;\n    fcn.0040bf10();\n    iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n    if ((iVar1 == 0x35) || (iVar1 == 0x47)) {\n        fcn.0046f6d5(&var_2ch);\n        puVar2 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(puVar2 + 2) == 0x47) {\n            *arg_ch = *arg_ch + -1;\n            fcn.00402170();\n        }\n        else {\n            fcn.0040e410(*puVar2);\n        }\n        if (*(*(*(arg_8h + 4) + 4 + *arg_ch * 4) + 8) == 0x47) {\n            iVar4 = fcn.00474f0c(var_8h, arg_8h, arg_ch, &var_2ch);\n            if (iVar4 != 0) {\n                fcn.0045dfef(var_8h, L\"Incorrect parameters to object property !\");\n                goto code_r0x0047cde2;\n            }\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n        }\n        iVar4 = fcn.0047b686(var_8h, &arg_14h, var_3ch, &var_2ch, &var_1ch);\n        if (iVar4 != 0) {\n            fcn.0040e8e0();\n            fcn.0040e8e0();\n            fcn.00403f40(1, 0);\ncode_r0x0047cde2:\n            fcn.00402260();\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.00410e00();\n            fcn.004091e0();\n            return 1;\n        }\n        cVar3 = fcn.004329dd(&var_1ch);\n        if (cVar3 != '\\0') {\n            fcn.0040bc00();\n            uVar6 = fcn.0047ccdd(arg_8h, arg_ch, arg_10h, in_stack_ffffff70);\n            fcn.00402260();\n            fcn.004091e0();\n            fcn.004091e0();\n            fcn.00410e00();\n            fcn.004091e0();\n            return uVar6;\n        }\n        if ((((*0x4a7f18 != '\\0') && (*(var_8h + 0x480) == '\\0')) && (*0x4a7f1c != 0)) && (*(*0x4a7f1c + 0x40) != '\\0'))\n        {\n            iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n            iVar4 = *arg_ch;\n            while (iVar1 == 0x35) {\n                iVar5 = iVar4 + 1;\n                *arg_ch = iVar5;\n                if (*(*(*(arg_8h + 4) + iVar5 * 4) + 8) == 0x47) {\n                    iVar4 = iVar4 + 2;\n                    *arg_ch = iVar4;\n                    iVar1 = *(*(*(arg_8h + 4) + iVar4 * 4) + 8);\n                    while (iVar1 != 0x48) {\n                        iVar4 = iVar4 + 1;\n                        *arg_ch = iVar4;\n                        iVar1 = *(*(*(arg_8h + 4) + iVar4 * 4) + 8);\n                    }\n                    iVar5 = iVar4 + 1;\n                    *arg_ch = iVar5;\n                }\n                iVar4 = iVar5;\n                iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n            }\n        }\n        fcn.00409120(&var_1ch);\n        fcn.0040e8e0();\n    }\n    else {\n        fcn.00409120(&arg_14h);\n    }\n    fcn.00402260();\n    fcn.004091e0();\n    fcn.004091e0();\n    fcn.00410e00();\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 1205
    },
    "0047e771": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.0047e771(int32_t arg_8h, uint32_t *arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    ulong uVar5;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    *arg_ch = *arg_ch + 1;\n    var_1ch = 0;\n    var_14h = 1;\n    var_10h = 0;\n    var_8h = in_ECX;\n    if (*(arg_8h + 8) <= *arg_ch) {\ncode_r0x0047e901:\n        fcn.004091e0();\n        return 0;\n    }\ncode_r0x0047e79f:\n    uVar5 = fcn.004329a8(arg_10h, 0);\n    if (arg_18h <= uVar5) {\n        var_ch = *(*(arg_8h + 4) + (uVar5 >> 0x20) * 4);\n        if (*(var_ch + 8) == 0x4e) {\n            *(arg_14h + arg_18h * 4) = 0;\n            cVar3 = fcn.0047e771(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (cVar3 == '\\0') goto code_r0x0047e901;\ncode_r0x0047e86b:\n            uVar2 = *arg_ch;\n            if (*(*(*(arg_8h + 4) + uVar2 * 4) + 8) != 0x40) {\n                iVar4 = *(*(arg_8h + 4) + uVar2 * 4);\n                if (*(iVar4 + 8) == 0x4f) {\n                    *arg_ch = uVar2 + 1;\n                    fcn.004091e0();\n                    return 1;\n                }\n                unaff_EBX = *(iVar4 + 10);\n                unaff_ESI = 0x6b;\n                goto code_r0x0047e8fc;\n            }\n            piVar1 = arg_14h + -4 + arg_18h * 4;\n            *piVar1 = *piVar1 + 1;\n            *arg_ch = *arg_ch + 1;\n            if (*(arg_8h + 8) <= *arg_ch) {\n                fcn.004091e0();\n                return 0;\n            }\n            goto code_r0x0047e79f;\n        }\n        iVar4 = fcn.004329a8(arg_10h, 0);\n        if (iVar4 <= arg_18h) {\n            var_ch = *(var_ch + 10);\n            iVar4 = fcn.0040aa20(arg_8h, arg_ch, &var_1ch, 0xffffffff);\n            if (iVar4 == 0) {\n                fcn.0045e408(arg_10h);\n                iVar4 = 0;\n                if (0 < arg_18h) {\n                    do {\n                        fcn.0040d260();\n                        iVar4 = iVar4 + 1;\n                    } while (iVar4 < arg_18h);\n                }\n                iVar4 = fcn.0040d1a0(0, 0);\n                if (iVar4 != 0) {\n                    fcn.00409120(&var_1ch);\n                    goto code_r0x0047e86b;\n                }\n                goto code_r0x0047e8fc;\n            }\n            goto code_r0x0047e901;\n        }\n        unaff_ESI = 0x7e;\n    }\ncode_r0x0047e8fc:\n    fcn.0045e1ee(var_8h, unaff_ESI, unaff_EBX);\n    goto code_r0x0047e901;\n}\n",
        "token_count": 958
    },
    "00401070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401070(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x24) != 0) {\n        fcn.004138f8(*(unaff_ESI + 0x24));\n    }\n    *(unaff_ESI + 0x24) = 0;\n    if (*(unaff_ESI + 0x2c) != 0) {\n        fcn.0041137c(*(unaff_ESI + 0x2c));\n    }\n    *(unaff_ESI + 0x2c) = 0;\n    *(unaff_ESI + 0x30) = 0;\n    *(unaff_ESI + 0x34) = 0;\n    *(unaff_ESI + 0x38) = 0;\n    *(unaff_ESI + 0x10) = 0;\n    return;\n}\n",
        "token_count": 202
    },
    "004012f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012f0(void)\n\n{\n    int32_t *unaff_EBX;\n    uint unaff_ESI;\n    \n    if (*unaff_EBX != 0) {\n        fcn.0041137c(*unaff_EBX);\n    }\n    unaff_EBX[0x3b] = 0x489b68;\n    fcn.00410c00();\n    fcn.0041137c(unaff_EBX[0x3c]);\n    fcn.00402260();\n    fcn.00401380();\n    fcn.00401380();\n    fcn.00402260();\n    *unaff_EBX[8] = *unaff_EBX[8] + -1;\n    if (*unaff_EBX[8] == 0) {\n        fcn.0041137c(unaff_EBX[5], unaff_ESI);\n        fcn.0041137c(unaff_EBX[8]);\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "004013a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004013a0(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_ESI;\n    \n    puVar1 = fcn.00411777(4);\n    if (puVar1 != NULL) {\n        *puVar1 = 1;\n        *(unaff_ESI + 0xc) = puVar1;\n        return;\n    }\n    *(unaff_ESI + 0xc) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "004013c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004013c0(uint *param_1)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    ushort *puVar2;\n    \n    param_1[2] = in_EAX + 1U;\n    iVar1 = (in_EAX + 1U) * 2;\n    param_1[1] = 0;\n    puVar2 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n    *param_1 = puVar2;\n    *puVar2 = 0;\n    fcn.004013a0();\n    return param_1;\n}\n",
        "token_count": 148
    },
    "00401400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401400(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI != 0) {\n        fcn.0041137c(*unaff_ESI);\n    }\n    fcn.00401380();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.00402260();\n    fcn.004107d0();\n    return;\n}\n",
        "token_count": 103
    },
    "00401460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401460(uint lpFileName, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint lpBuffer;\n    uint var_214h;\n    int32_t lpFilePart;\n    \n    cVar1 = fcn.00402410();\n    if (((cVar1 != '\\0') && (iVar2 = fcn.00401510(),  iVar2 == 0)) && (iVar2 = fcn.0040d6e0(),  iVar2 == 0)) {\n        (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(lpFileName, 0x104, &lpBuffer, &lpFilePart);\n        fcn.00402170();\n        fcn.00402170();\n        *(lpFilePart + -2) = 0;\n        if (var_214h == 0) {\n            fcn.004116d6(&lpBuffer, 0x4846b4);\n        }\n        fcn.00402170();\n        *0x4a822c = arg_ch;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 254
    },
    "00401500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401500(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 != 0) {\n        do {\n            iVar1 = *(iVar2 + 4);\n            fcn.0041137c(iVar2);\n            iVar2 = iVar1;\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00403da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403da0(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = arg_8h[1];\n    uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, *arg_8h, iVar1 + 1, 0, 0);\n    if (uVar2 == 0) {\n        fcn.00403600();\n    }\n    else {\n        uVar3 = fcn.00411777(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, *arg_8h, iVar1 + 1, uVar3, uVar2);\n        fcn.00403e20(0);\n        fcn.0041137c(uVar3);\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "00403fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403fc0(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.004091e0();\n    arg_10h[2] = 1;\n    *arg_10h = 1;\n    fcn.00403f40(0, 0);\n    fcn.00403f80(0, 0);\n    iVar1 = fcn.00404420(in_ECX + 0x47c, arg_8h);\n    (**(iVar1 + 0xc))(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 151
    },
    "004040c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040c0(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *unaff_EDI;\n    \n    cVar1 = fcn.00404150(in_EAX, unaff_EDI);\n    if ((cVar1 != '\\0') && (*unaff_EDI != 0)) {\n        fcn.00409120(arg_8h);\n        return;\n    }\n    iVar2 = fcn.00411777(0x20);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        fcn.0040bf10();\n    }\n    if (iVar2 != in_EAX) {\n        fcn.00403ee0();\n    }\n    *(iVar2 + 0x10) = arg_ch & 0xff00;\n    iVar3 = fcn.00411777(0x10);\n    if (iVar3 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = fcn.0040bc00();\n    }\n    *(iVar2 + 0x14) = uVar4;\n    *(iVar2 + 0x1c) = 0;\n    *(iVar2 + 0x18) = 0;\n    iVar2 = fcn.00404050(*unaff_EDI);\n    *unaff_EDI = iVar2;\n    return;\n}\n",
        "token_count": 343
    },
    "004043b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004043b0(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t arg_ch;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + -0x20) + -1;\n    if (-1 < iVar4) {\n        iVar3 = 0;\n        do {\n            arg_ch = (iVar4 + iVar3) / 2;\n            puVar1 = fcn.00404420(in_ECX + -0x20, arg_ch);\n            iVar2 = fcn.004132dc(arg_8h, *puVar1);\n            if (iVar2 < 0) {\n                iVar4 = arg_ch + -1;\n            }\n            else {\n                if (iVar2 < 1) {\n                    if (iVar4 < iVar3) {\n                        return -1;\n                    }\n                    return arg_ch;\n                }\n                iVar3 = arg_ch + 1;\n            }\n        } while (iVar3 <= iVar4);\n    }\n    return -1;\n}\n",
        "token_count": 255
    },
    "00408f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408f60(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint arg_ch;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t unaff_EBX;\n    uint32_t uVar3;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_1ch = 0x4870e0;\n    puVar1 = *(*(in_EDX + 4) + *in_EAX * 4);\n    arg_ch = *puVar1;\n    var_ch = *(puVar1 + 10);\n    iVar2 = fcn.00409030(unaff_EBX, in_EDX, &var_8h);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00404420(unaff_EBX + 0x47c, arg_ch);\n        if ((var_8h < *(iVar2 + 0x18)) || (iVar2 = fcn.00404420(unaff_EBX + 0x47c, arg_ch),  *(iVar2 + 0x1c) < var_8h))\n        {\n            fcn.0045e1ee(unaff_EBX, 0x70, var_ch);\n        }\n        else {\n            iVar2 = fcn.00403fc0(arg_ch, &var_1ch, arg_8h);\n            if (iVar2 == 0) {\n                var_1ch = 0x4870e0;\n                if (var_14h != 0) {\n                    uVar3 = 0;\n                    do {\n                        iVar2 = *(var_18h + uVar3 * 4);\n                        if (iVar2 != 0) {\n                            fcn.004091e0();\n                            fcn.0041137c(iVar2);\n                        }\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 < var_14h);\n                }\n                var_14h = 0;\n                fcn.0041137c(var_18h);\n                return 0;\n            }\n        }\n    }\n    fcn.00410e00();\n    return 1;\n}\n",
        "token_count": 549
    },
    "0040bcb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bcb0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 8) == *(unaff_ESI + 0xc)) {\n        uVar3 = *(unaff_ESI + 0xc) * 2;\n        *(unaff_ESI + 0xc) = uVar3;\n        if (uVar3 < 4) {\n            uVar3 = 4;\n        }\n        *(unaff_ESI + 0xc) = uVar3;\n        uVar2 = fcn.00411777(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        fcn.00411000(uVar2, *(unaff_ESI + 4), *(unaff_ESI + 8) * 4);\n        fcn.0041137c(*(unaff_ESI + 4));\n        *(unaff_ESI + 4) = uVar2;\n    }\n    iVar1 = fcn.00411777(0x10);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0040bc00();\n    }\n    *(*(unaff_ESI + 4) + *(unaff_ESI + 8) * 4) = uVar2;\n    *(unaff_ESI + 8) = *(unaff_ESI + 8) + 1;\n    return;\n}\n",
        "token_count": 358
    },
    "0040bf10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040bf10(uint *param_1)\n\n{\n    ushort *puVar1;\n    uint *puVar2;\n    \n    param_1[2] = 8;\n    param_1[1] = 0;\n    puVar1 = fcn.00411777(0x10);\n    *param_1 = puVar1;\n    *puVar1 = 0;\n    puVar2 = fcn.00411777(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = 1;\n    }\n    param_1[3] = puVar2;\n    return param_1;\n}\n",
        "token_count": 157
    },
    "0040bf60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040bf60(uint16_t **param_1)\n\n{\n    uint16_t **in_EAX;\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    \n    puVar3 = param_1[1];\n    puVar2 = in_EAX[1];\n    if (puVar2 == NULL) {\n        if (puVar3 != NULL) {\n            return -1;\n        }\n    }\n    else if (puVar3 != NULL) goto code_r0x0040bf79;\n    if (puVar2 != NULL) {\n        return 1;\n    }\ncode_r0x0040bf79:\n    if (puVar2 < puVar3) {\n        puVar2 = *in_EAX;\n        puVar1 = *param_1;\n        while( true ) {\n            if (puVar3 == NULL) {\n                return 0;\n            }\n            if (*puVar2 != *puVar1) break;\n            puVar2 = puVar2 + 1;\n            puVar1 = puVar1 + 1;\n            puVar3 = puVar3 + -1;\n        }\n        return (-(*puVar2 < *puVar1) & 0xfffffffe) + 1;\n    }\n    if (puVar2 != NULL) {\n        puVar3 = *param_1;\n        puVar1 = *in_EAX;\n        do {\n            if (*puVar1 != *puVar3) {\n                return (-(*puVar1 < *puVar3) & 0xfffffffe) + 1;\n            }\n            puVar1 = puVar1 + 1;\n            puVar3 = puVar3 + 1;\n            puVar2 = puVar2 + -1;\n        } while (puVar2 != NULL);\n    }\n    return 0;\n}\n",
        "token_count": 413
    },
    "0040d430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040d430(uint16_t *param_1, int32_t param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if (param_2 != 0) {\n        do {\n            if (*in_EAX != *param_1) {\n                return (-(*in_EAX < *param_1) & 0xfffffffe) + 1;\n            }\n            in_EAX = in_EAX + 1;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "0040ce70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ce70(uint arg_8h, double *arg_ch)\n\n{\n    int32_t iVar1;\n    float10 fVar2;\n    float10 fVar3;\n    uint var_8h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n    if (iVar1 == 0) {\n        fcn.004091e0();\n        *arg_ch = 0.0;\n        *(arg_ch + 1) = 3;\n        fcn.00403f40(1, 0);\n    }\n    else {\n        fVar2 = fcn.0040bd40();\n        fVar3 = fcn.0040df40();\n        fcn.004091e0();\n        *arg_ch = (_var_8h - fVar2) / fVar3;\n        *(arg_ch + 1) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "0040d2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040d2e0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    unkuint3 Var3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    iVar1 = *in_EAX;\n    iVar2 = *(iVar1 + 0x20c);\n    Var3 = iVar2 >> 8;\n    if (iVar2 != *(iVar1 + 0x210)) {\n        return Var3 << 8;\n    }\n    if (0 < iVar2) {\n        iVar5 = 0;\n        piVar4 = iVar1 + 0x10c;\n        do {\n            if ((*piVar4 < 0) || (piVar4[-0x40] <= *piVar4)) {\n                return Var3 << 8;\n            }\n            iVar5 = iVar5 + 1;\n            piVar4 = piVar4 + 1;\n        } while (iVar5 < iVar2);\n    }\n    return CONCAT31(Var3, 1);\n}\n",
        "token_count": 238
    },
    "0040d370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d370(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *unaff_ESI;\n    \n    *unaff_ESI = 0;\n    fcn.004107b0();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040d5d0();\n    puVar1 = fcn.00411777(4);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0;\n    }\n    *unaff_ESI = puVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"WM_GETCONTROLNAME\");\n    unaff_ESI[1] = uVar2;\n    return;\n}\n",
        "token_count": 199
    },
    "0040d3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d3f0(uint noname_0, double *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n    if (iVar1 == 0) {\n        fcn.004091e0();\n        *arg_ch = 0.0;\n        *(arg_ch + 1) = 3;\n        fcn.00403f40(1, 0);\n    }\n    else {\n        fcn.004091e0();\n        *(arg_ch + 1) = 3;\n        *arg_ch = _var_8h;\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "0040d530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d530(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    \n    *(unaff_EBX + 8) = 4;\n    iVar1 = fcn.00411777(0x10);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00401c30();\n    }\n    *(unaff_EBX + 0xc) = uVar2;\n    return;\n}\n",
        "token_count": 122
    },
    "0040d560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d560(void)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    *unaff_ESI = 0;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040d5d0();\n    fcn.0040d5d0();\n    fcn.0040bf10();\n    unaff_ESI[0x3b] = 0x489b68;\n    unaff_ESI[0x3c] = 0;\n    unaff_ESI[0x3d] = 0;\n    unaff_ESI[0x3e] = 0;\n    puVar1 = fcn.00411777(4);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n        *unaff_ESI = puVar1;\n        return;\n    }\n    *unaff_ESI = 0;\n    return;\n}\n",
        "token_count": 214
    },
    "0040d610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d610(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint *unaff_ESI;\n    \n    unaff_ESI[1] = 0;\n    unaff_ESI[2] = 0x10;\n    puVar1 = fcn.00411777(0x10);\n    *unaff_ESI = puVar1;\n    *puVar1 = 0;\n    puVar2 = fcn.00411777(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = 1;\n    }\n    unaff_ESI[3] = puVar2;\n    return;\n}\n",
        "token_count": 161
    },
    "0040da60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040da60(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint arg_8h;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (*(unaff_ESI + 8) == *(unaff_ESI + 0xc)) {\n        uVar3 = *(unaff_ESI + 0xc) * 2;\n        *(unaff_ESI + 0xc) = uVar3;\n        if (uVar3 < 4) {\n            uVar3 = 4;\n        }\n        *(unaff_ESI + 0xc) = uVar3;\n        arg_8h = fcn.00411777(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        fcn.00411000(arg_8h, *(unaff_ESI + 4), *(unaff_ESI + 8) * 4);\n        fcn.0041137c(*(unaff_ESI + 4));\n        *(unaff_ESI + 4) = arg_8h;\n    }\n    puVar2 = fcn.00411777(0x10);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = *unaff_EDI;\n        puVar2[1] = unaff_EDI[1];\n        puVar2[2] = unaff_EDI[2];\n        piVar1 = unaff_EDI[3];\n        puVar2[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n    }\n    *(*(unaff_ESI + 4) + *(unaff_ESI + 8) * 4) = puVar2;\n    *(unaff_ESI + 8) = *(unaff_ESI + 8) + 1;\n    return;\n}\n",
        "token_count": 439
    },
    "0040df70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df70(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 8) == *(unaff_ESI + 0xc)) {\n        uVar2 = *(unaff_ESI + 0xc) * 2;\n        *(unaff_ESI + 0xc) = uVar2;\n        if (uVar2 < 4) {\n            uVar2 = 4;\n        }\n        *(unaff_ESI + 0xc) = uVar2;\n        arg_8h_00 = fcn.00411777(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        fcn.00411000(arg_8h_00, *(unaff_ESI + 4), *(unaff_ESI + 8) * 4);\n        fcn.0041137c(*(unaff_ESI + 4));\n        *(unaff_ESI + 4) = arg_8h_00;\n    }\n    puVar1 = fcn.00411777(4);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = *arg_8h;\n    }\n    *(*(unaff_ESI + 4) + *(unaff_ESI + 8) * 4) = puVar1;\n    *(unaff_ESI + 8) = *(unaff_ESI + 8) + 1;\n    return;\n}\n",
        "token_count": 367
    },
    "0040e140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e140(void)\n\n{\n    int32_t in_EAX;\n    \n    *(*(*(in_EAX + -0x88) + 4) + -0x88 + in_EAX) = 0x489dd4;\n    fcn.0040f300();\n    fcn.0040dee0();\n    fcn.0040f380();\n    return;\n}\n",
        "token_count": 86
    },
    "0040e180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e180(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    \n    *in_EAX = 0;\n    uVar1 = fcn.00411777(0x10000);\n    in_EAX[1] = uVar1;\n    fcn.0040dcc0();\n    return;\n}\n",
        "token_count": 77
    },
    "0040e870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e870(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    \n    fcn.004091e0();\n    *(unaff_ESI + 8) = 4;\n    puVar2 = fcn.00411777(0x10);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = *unaff_EDI;\n        puVar2[1] = unaff_EDI[1];\n        puVar2[2] = unaff_EDI[2];\n        piVar1 = unaff_EDI[3];\n        puVar2[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n    }\n    *(unaff_ESI + 0xc) = puVar2;\n    return;\n}\n",
        "token_count": 209
    },
    "0040e8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e8e0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    \n    fcn.004091e0();\n    *(unaff_EBX + 8) = 4;\n    iVar1 = fcn.00411777(0x10);\n    if (in_EAX == 0) {\n        if (iVar1 != 0) {\n            uVar2 = fcn.0040bf10();\n            goto code_r0x0040e913;\n        }\n    }\n    else if (iVar1 != 0) {\n        uVar2 = fcn.00401c30();\n        goto code_r0x0040e913;\n    }\n    uVar2 = 0;\ncode_r0x0040e913:\n    *(unaff_EBX + 0xc) = uVar2;\n    return;\n}\n",
        "token_count": 206
    },
    "0040ed80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ed80(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t unaff_EBX;\n    uint32_t uVar3;\n    \n    puVar2 = *(unaff_EBX + 8);\n    while (puVar2 != NULL) {\n        puVar1 = puVar2[3];\n        fcn.0041137c(*puVar2);\n        fcn.0041137c(puVar2);\n        puVar2 = puVar1;\n    }\n    puVar2 = *(unaff_EBX + 0x44);\n    if (puVar2 != NULL) {\n        if (puVar2[-1] == 0) {\n            fcn.0041137c(puVar2 + -1);\n        }\n        else {\n            (***puVar2)(3);\n        }\n    }\n    fcn.0041137c(*(unaff_EBX + 0x14));\n    *(unaff_EBX + 8) = 0;\n    *(unaff_EBX + 0xc) = 0;\n    *(unaff_EBX + 0x10) = 0;\n    *(unaff_EBX + 0x14) = 0;\n    *(unaff_EBX + 0x44) = 0;\n    if (*(unaff_EBX + 0x20) != 0) {\n        uVar3 = 0;\n        do {\n            fcn.0041137c(**(*(unaff_EBX + 0x1c) + uVar3 * 4));\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(unaff_EBX + 0x20));\n    }\n    fcn.0040ee10();\n    fcn.0040ee10();\n    return;\n}\n",
        "token_count": 399
    },
    "0040f090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __fastcall fcn.0040f090(int16_t **param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int16_t *var_4h;\n    \n    if (param_1[1] != NULL) {\n        piVar3 = *param_1;\n        var_4h = NULL;\n        do {\n            iVar2 = 0;\n            iVar4 = 0;\n            iVar1 = 0x20;\n            do {\n                if (*piVar3 == iVar1) {\n                    iVar4 = iVar4 + 1;\n                }\n                iVar1 = *(iVar2 * 2 + 0x4843f2);\n                iVar2 = iVar2 + 1;\n            } while (iVar1 != 0);\n            if (iVar4 == 0) {\n                return var_4h;\n            }\n            var_4h = var_4h + 1;\n            piVar3 = piVar3 + 1;\n        } while (var_4h < param_1[1]);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 255
    },
    "0040f5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040f5a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((in_EAX <= *0x4a90f8) && (0 < in_EAX)) {\n        return in_EAX * 0x10 + *0x4a912c;\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "0040f670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f670(void)\n\n{\n    uint in_EAX;\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    *unaff_ESI = in_EAX;\n    puVar1 = fcn.00411777(4);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 1;\n    }\n    unaff_ESI[1] = puVar1;\n    return;\n}\n",
        "token_count": 109
    },
    "0040f690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f690(void)\n\n{\n    int32_t *piVar1;\n    uint *unaff_ESI;\n    \n    piVar1 = unaff_ESI[1];\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        fcn.0041137c(unaff_ESI[1]);\n        fcn.0041137c(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0040f930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "read file on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f930(uint arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *unaff_EDI;\n    uint8_t auStack416 [412];\n    \n    uVar5 = fcn.0040f8c0();\n    fcn.00413800();\n    fcn.0041137c(uVar5);\n    fcn.0040f9f0();\n    fcn.0040fa20();\n    unaff_EDI[2] = 0;\n    iVar7 = 0;\n    iVar6 = 0;\n    do {\n        puVar1 = auStack416 + iVar7;\n        iVar2 = iVar7 + 1;\n        iVar3 = iVar7 + 2;\n        iVar4 = iVar7 + 3;\n        iVar7 = iVar7 + 4;\n        iVar6 = iVar6 + *puVar1 + auStack416[iVar2] + auStack416[iVar3] + auStack416[iVar4];\n    } while (iVar7 < 0x10);\n    unaff_EDI[2] = iVar6;\n    iVar6 = fcn.00414b72(arg_8h, 0x487178);\n    *unaff_EDI = iVar6;\n    if (iVar6 == 0) {\n        iVar6 = 1;\n    }\n    else {\n        iVar6 = fcn.0040f790(unaff_EDI);\n        if (iVar6 == 0) {\n            fcn.00414eb4(&stack0xfffffe4c, 1, 0x10, *unaff_EDI);\n            fcn.0044ac61(&stack0xfffffe4c, 0x10, 0x99f2);\n            iVar6 = 0;\n            unaff_EDI[2] = 0;\n            do {\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < 0x10);\n            unaff_EDI[2] = 0;\n            iVar6 = fcn.00415192(*unaff_EDI);\n            unaff_EDI[1] = iVar6;\n            iVar6 = 0;\n        }\n        else {\n            fcn.00414bf6(*unaff_EDI);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 541
    },
    "0040f9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.0040f9f0(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.004130e0(unaff_ESI + 0x44, 0, 8);\n    *(unaff_ESI + 0x34) = 0x67452301;\n    *(unaff_ESI + 0x38) = 0xefcdab89;\n    *(unaff_ESI + 0x3c) = 0x98badcfe;\n    *(unaff_ESI + 0x40) = 0x10325476;\n    return;\n}\n",
        "token_count": 134
    },
    "004102d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004102d0(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040f930(in_EAX);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00452332(&var_14h, L\">>>AUTOIT NO CMDEXECUTE<<<\", &var_4h, &var_8h);\n        if (iVar1 == 0) {\n            fcn.004138f8(var_4h);\n            fcn.0043241f(&var_14h);\n            return 1;\n        }\n        fcn.0043241f(&var_14h);\n    }\n    return 0;\n}\n",
        "token_count": 178
    },
    "004102f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004102f0(void)\n\n{\n    uint uVar1;\n    uint lpFilePart;\n    \n    uVar1 = fcn.00410330();\n    (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(uVar1, 0x104);\n    fcn.00410460();\n    fcn.0041137c(uVar1);\n    return;\n}\n",
        "token_count": 84
    },
    "00410330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00410330(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint unaff_EDI;\n    \n    iVar2 = fcn.00411361(unaff_EDI);\n    iVar1 = (iVar2 + 1) * 2;\n    arg_8h = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n    fcn.00411707(arg_8h, unaff_EDI);\n    return arg_8h;\n}\n",
        "token_count": 123
    },
    "004103d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004103d0(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 8) == *(unaff_ESI + 0xc)) {\n        uVar1 = *(unaff_ESI + 0xc) * 2;\n        *(unaff_ESI + 0xc) = uVar1;\n        if (uVar1 < 4) {\n            uVar1 = 4;\n        }\n        *(unaff_ESI + 0xc) = uVar1;\n        arg_8h_00 = fcn.00411777(-(uVar1 * 4 >> 0x20 != 0) | uVar1 * 4);\n        fcn.00411000(arg_8h_00, *(unaff_ESI + 4), *(unaff_ESI + 8) * 4);\n        fcn.0041137c(*(unaff_ESI + 4));\n        *(unaff_ESI + 4) = arg_8h_00;\n    }\n    puVar2 = fcn.00411777(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = *arg_8h;\n    }\n    *(*(unaff_ESI + 4) + *(unaff_ESI + 8) * 4) = puVar2;\n    *(unaff_ESI + 8) = *(unaff_ESI + 8) + 1;\n    return;\n}\n",
        "token_count": 367
    },
    "00410460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410460(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    iVar1 = fcn.00411361(unaff_ESI);\n    if (*(unaff_ESI + -2 + iVar1 * 2) != 0x5c) {\n        return;\n    }\n    *(unaff_ESI + -2 + iVar1 * 2) = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "00410480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00410480(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    int32_t iVar2;\n    uint unaff_EDI;\n    uint pszPath;\n    uint var_218h;\n    uint var_10h;\n    uint pidl;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = (*_sym.imp.SHELL32.dll_SHGetMalloc)(&var_4h);\n    if (iVar1 == 0) {\n        iVar2 = 0;\n        iVar1 = (*_sym.imp.SHELL32.dll_SHGetDesktopFolder)(&var_8h);\n        if (iVar1 == 0) {\n            fcn.00411707(&var_218h, unaff_EDI);\n            iVar1 = (**(*var_8h + 0xc))(var_8h, 0, 0, &var_218h, &var_10h, &pidl, 0);\n            if (iVar1 == 0) {\n                iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(pidl, &pszPath);\n                if (iVar2 != 0) {\n                    fcn.00411707(unaff_EBX, &pszPath);\n                }\n                (**(*var_4h + 0x14))(var_4h, pidl);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n        (**(*var_4h + 8))(var_4h);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    fcn.00411707(unaff_EBX, unaff_EDI);\n    return 0;\n}\n",
        "token_count": 383
    },
    "004107b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004107b0(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = in_EAX + 4;\n    iVar2 = 0x10;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 104
    },
    "00410ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410ae0(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    *(unaff_EDI + 8) = 4;\n    puVar2 = fcn.00411777(0x10);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = *unaff_ESI;\n        puVar2[1] = unaff_ESI[1];\n        puVar2[2] = unaff_ESI[2];\n        piVar1 = unaff_ESI[3];\n        puVar2[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n    }\n    *(unaff_EDI + 0xc) = puVar2;\n    return;\n}\n",
        "token_count": 200
    },
    "00410ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410ba0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[2] != 0) {\n        fcn.0041137c(in_EAX[2]);\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        do {\n            iVar1 = *(iVar1 + 0x20);\n            fcn.00410cf0();\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00410cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410cf0(void)\n\n{\n    fcn.00402260();\n    fcn.0041137c();\n    return;\n}\n",
        "token_count": 33
    },
    "00410d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410d40(uint *param_1)\n\n{\n    *param_1 = 0x483f6c;\n    fcn.004019e0();\n    fcn.0041137c(param_1[1]);\n    return;\n}\n",
        "token_count": 59
    },
    "00410dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410dc0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, code *arg_14h)\n\n{\n    arg_ch = arg_ch * arg_10h;\n    for (arg_10h = arg_10h + -1; -1 < arg_10h; arg_10h = arg_10h + -1) {\n        arg_ch = (*arg_14h)();\n    }\n    return arg_ch;\n}\n",
        "token_count": 109
    },
    "00410e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410e40(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    code *unaff_EBX;\n    int32_t iVar1;\n    \n    for (iVar1 = in_EAX + -1; -1 < iVar1; iVar1 = iVar1 + -1) {\n        (*unaff_EBX)();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00411a7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411a7a(uint arg_8h)\n\n{\n    fcn.0041193a(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "00413330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413330(uint arg_8h)\n\n{\n    fcn.00418e17(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 40
    },
    "00413810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00413810(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x00413863;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x00413875;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x00413875;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x00413875;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x00413863:\n    puVar5 = puVar3 + -1;\ncode_r0x00413875:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x004138f0;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x004138f0:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 745
    },
    "00413800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00413800(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x004138f0;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x004138f0:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 438
    },
    "00413c4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413c4e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0041a0bd(arg_8h, 0xffffffff, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 81
    },
    "00413c6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00413c6e(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00416e30(0x48bf78, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00418137();\n        *puVar1 = 0x16;\n        fcn.004180e5();\n    }\n    else {\n        iVar2 = fcn.0041553b();\n        fcn.00415653(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0041553b();\n        arg_8h_00 = fcn.0041a1d6(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0041553b();\n        uVar4 = fcn.00419352(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0041553b();\n        fcn.0041a272(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00413d02();\n    }\n    fcn.00416e75();\n    return;\n}\n",
        "token_count": 449
    },
    "00413d02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413d02(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041553b();\n    fcn.004156c1(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 55
    },
    "00414b72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414b72(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00414ab4(arg_8h, arg_ch, 0x40);\n    return;\n}\n",
        "token_count": 47
    },
    "0041872b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041873f)\n// WARNING: Removing unreachable block (ram,0x00418745)\n// WARNING: Removing unreachable block (ram,0x00418747)\n\nvoid fcn.0041872b(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00418e17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418e17(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00418c55(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 56
    },
    "0041e5cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e5cb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    \n    fcn.0041e78d(arg_8h, arg_ch);\n    fcn.0041e78d(arg_10h, arg_14h);\n    fcn.0041e837();\n    fcn.0041e60c();\n    return;\n}\n",
        "token_count": 104
    },
    "0041e75a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e75a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.0041e78d(arg_8h, arg_ch);\n    fcn.0041e7d0();\n    fcn.0041e60c();\n    return;\n}\n",
        "token_count": 75
    },
    "0041e78d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nfloat10 __cdecl fcn.0041e78d(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    float10 fVar1;\n    uint var_ah;\n    uint var_6h;\n    uint var_2h;\n    \n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        fVar1 = CONCAT28(arg_ch._2_2_, CONCAT44(arg_ch << 0xb | arg_8h >> 0x15, arg_8h)) | 0x7fff;\n    }\n    else {\n        fVar1 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n    }\n    return fVar1;\n}\n",
        "token_count": 182
    },
    "00423175": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00423175(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00416e30(0x48c458, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.00418137();\n        *puVar1 = 0x16;\n        fcn.004180e5();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00422a40(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0042320b();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00416e75();\n    return;\n}\n",
        "token_count": 439
    },
    "00423239": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423239(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00423175(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 76
    },
    "00426236": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00426236(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 305
    },
    "0042f19c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f19c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_10h_00;\n    \n    if ((-1 < arg_14h) && (arg_14h < arg_10h)) {\n        arg_10h_00 = *(arg_ch + 4 + arg_14h * 8) - *(arg_ch + arg_14h * 8);\n        arg_8h_00 = (**0x491490)(arg_10h_00 + 1);\n        if (arg_8h_00 == 0) {\n            return -6;\n        }\n        fcn.00411000(arg_8h_00, *(arg_ch + arg_14h * 8) + arg_8h, arg_10h_00);\n        *(arg_8h_00 + arg_10h_00) = 0;\n        *arg_18h = arg_8h_00;\n        return arg_10h_00;\n    }\n    return -7;\n}\n",
        "token_count": 272
    },
    "0042f2d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f2d5(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = *(arg_8h + 2);\n    iVar2 = arg_8h + 2;\n    do {\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        if ((cVar1 == '\\\\') && (*(iVar2 + 1) == ']')) {\n            iVar2 = iVar2 + 1;\n        }\n        else {\n            if (cVar1 == ']') {\n                return 0;\n            }\n            if ((cVar1 == *(arg_8h + 1)) && (*(iVar2 + 1) == ']')) {\n                *arg_ch = iVar2;\n                return 1;\n            }\n        }\n        cVar1 = *(iVar2 + 1);\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 217
    },
    "0042fe05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042fe05(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    \n    puVar2 = arg_8h + 1;\n    if ((*(*arg_8h + 0x486b28) & 4) != 0) {\n        uVar1 = *(*puVar2 + 0x486b28);\n        while ((uVar1 & 4) != 0) {\n            puVar3 = puVar2 + 1;\n            puVar2 = puVar2 + 1;\n            uVar1 = *(*puVar3 + 0x486b28);\n        }\n        if (*puVar2 == 0x7d) {\n            return true;\n        }\n        if (*puVar2 == 0x2c) {\n            if (puVar2[1] == 0x7d) {\n                return true;\n            }\n            puVar3 = puVar2 + 2;\n            if ((*(puVar2[1] + 0x486b28) & 4) != 0) {\n                uVar1 = *(*puVar3 + 0x486b28);\n                while ((uVar1 & 4) != 0) {\n                    puVar2 = puVar3 + 1;\n                    puVar3 = puVar3 + 1;\n                    uVar1 = *(*puVar2 + 0x486b28);\n                }\n                return *puVar3 == 0x7d;\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 356
    },
    "0043047a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0043047a(uint *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    puVar3 = fcn.00411777(0xc);\n    if (puVar3 != NULL) {\n        uVar1 = arg_ch[1];\n        *puVar3 = *arg_ch;\n        uVar2 = arg_ch[2];\n        puVar3[1] = uVar1;\n        puVar3[2] = uVar2;\n        *arg_8h = puVar3;\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 186
    },
    "004305e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004305e7(uint *param_1)\n\n{\n    *param_1 = 0x48bc80;\n    fcn.00410950();\n    fcn.0041137c(param_1[1]);\n    return;\n}\n",
        "token_count": 57
    },
    "00430603": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430603(int32_t arg_8h)\n\n{\n    *(arg_8h + 8) = *(arg_8h + 8) + -1;\n    fcn.0041137c(*(*(arg_8h + 4) + *(arg_8h + 8) * 4));\n    return;\n}\n",
        "token_count": 79
    },
    "00430c45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00430c45(uint32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h_00;\n    \n    uVar1 = fcn.00413ff6(*arg_ch, arg_10h);\n    if (uVar1 == 0) {\n        uVar2 = fcn.00411361(*arg_ch);\n        arg_10h_00 = uVar2;\n    }\n    else {\n        uVar2 = uVar1;\n        arg_10h_00 = uVar1 - *arg_ch >> 1;\n    }\n    if (0xffe < arg_10h_00) {\n        return uVar2 & 0xffffff00;\n    }\n    fcn.0041315a(arg_8h, *arg_ch, arg_10h_00);\n    *(arg_8h + arg_10h_00 * 2) = 0;\n    if (uVar1 != 0) {\n        arg_10h_00 = arg_10h_00 + 1;\n    }\n    *arg_ch = *arg_ch + arg_10h_00 * 2;\n    return arg_8h & 0xffffff00 | arg_10h_00 != 0;\n}\n",
        "token_count": 303
    },
    "0043112e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043112e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    fcn.004130e0(0x4a9568, 0, 0x44);\n    fcn.004130e0(0x4a9554, 0, 0x10);\n    *0x4a9568 = 0x44;\n    *0x4a9594 = 1;\n    *0x4a9598 = 1;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, arg_8h, 0, 0, 0, 0x20, 0, 0, 0x4a9568, 0x4a9554);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x4a9554);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00431276": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00431276(int16_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        do {\n            if (*arg_8h == arg_ch) {\n                return arg_8h;\n            }\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 118
    },
    "00431359": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00431359(uint *arg_8h)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00414a63(0);\n    *arg_8h = uVar1;\n    arg_8h[1] = uVar1 >> 0x20;\n    return arg_8h;\n}\n",
        "token_count": 78
    },
    "00431376": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431376(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(arg_8h + 8) != 0) {\n        do {\n            fcn.0041137c(*(*(arg_8h + 4) + uVar1 * 4));\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(arg_8h + 8));\n        *(arg_8h + 8) = 0;\n        return;\n    }\n    *(arg_8h + 8) = 0;\n    return;\n}\n",
        "token_count": 147
    },
    "0043171c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043171c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        *arg_ch = 0;\n        return 0;\n    }\n    iVar1 = fcn.00411361(arg_8h);\n    iVar1 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)((iVar1 + 1) * 2);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        return 0x8007000e;\n    }\n    fcn.00411707(iVar1, arg_8h);\n    return 0;\n}\n",
        "token_count": 157
    },
    "00431c88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431c88(int32_t arg_8h, uint arg_ch)\n\n{\n    fcn.00431c65(arg_ch, arg_8h + 4, arg_8h + 5);\n    return;\n}\n",
        "token_count": 55
    },
    "00431ca3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431ca3(int32_t arg_8h, uint arg_ch)\n\n{\n    fcn.00431c65(arg_ch, arg_8h + 2, arg_8h + 3);\n    return;\n}\n",
        "token_count": 55
    },
    "00431cea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431cea(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    \n    if (*(arg_8h + 8) == *(arg_8h + 0xc)) {\n        uVar1 = fcn.00431cd6(*(arg_8h + 0xc) * 2);\n        *(arg_8h + 0xc) = uVar1;\n        arg_8h_00 = fcn.00411777(-(uVar1 * 4 >> 0x20 != 0) | uVar1 * 4);\n        fcn.00411000(arg_8h_00, *(arg_8h + 4), *(arg_8h + 8) * 4);\n        fcn.0041137c(*(arg_8h + 4));\n        *(arg_8h + 4) = arg_8h_00;\n    }\n    puVar2 = fcn.00411777(8);\n    if (puVar2 != NULL) {\n        *puVar2 = *arg_ch;\n        puVar2[1] = arg_ch[1];\n        *(*(arg_8h + 4) + *(arg_8h + 8) * 4) = puVar2;\n        *(arg_8h + 8) = *(arg_8h + 8) + 1;\n        return;\n    }\n    *(*(arg_8h + 4) + *(arg_8h + 8) * 4) = 0;\n    *(arg_8h + 8) = *(arg_8h + 8) + 1;\n    return;\n}\n",
        "token_count": 388
    },
    "00431d81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431d81(int32_t *arg_8h)\n\n{\n    if (*arg_8h != 0) {\n        (*arg_8h[1])(*arg_8h);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00431db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00431db0(int16_t *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    pcVar1 = _sym.imp.WININET.dll_InternetQueryOptionW;\n    uVar3 = 0;\n    if (*arg_8h == 1) {\n        return 0;\n    }\n    if (*arg_8h != 2) {\n        arg_8h = NULL;\n        (*_sym.imp.WININET.dll_InternetQueryOptionW)(0, 0x26, 0, &arg_8h);\n        if (arg_8h != NULL) {\n            iVar2 = fcn.00411777(arg_8h);\n            fcn.004130e0(iVar2, 0, arg_8h);\n            (*pcVar1)(0, 0x26, iVar2, &arg_8h);\n            uVar3 = *(iVar2 + 4) != 0;\n            arg_8h = fcn.0041137c(iVar2);\n        }\n        return arg_8h & 0xffffff00 | uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 269
    },
    "00431ece": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431ece(int32_t arg_8h)\n\n{\n    if (arg_8h == 0) {\n        return;\n    }\n    fcn.00411777(arg_8h);\n    return;\n}\n",
        "token_count": 52
    },
    "00431f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431f64(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    \n    if (*(arg_8h + 8) == *(arg_8h + 0xc)) {\n        uVar1 = fcn.00431cd6(*(arg_8h + 0xc) * 2);\n        *(arg_8h + 0xc) = uVar1;\n        arg_8h_00 = fcn.00411777(-(uVar1 * 4 >> 0x20 != 0) | uVar1 * 4);\n        fcn.00411000(arg_8h_00, *(arg_8h + 4), *(arg_8h + 8) * 4);\n        fcn.0041137c(*(arg_8h + 4));\n        *(arg_8h + 4) = arg_8h_00;\n    }\n    puVar2 = fcn.00411777(4);\n    if (puVar2 != NULL) {\n        *puVar2 = *arg_ch;\n        *(*(arg_8h + 4) + *(arg_8h + 8) * 4) = puVar2;\n        *(arg_8h + 8) = *(arg_8h + 8) + 1;\n        return;\n    }\n    *(*(arg_8h + 4) + *(arg_8h + 8) * 4) = 0;\n    *(arg_8h + 8) = *(arg_8h + 8) + 1;\n    return;\n}\n",
        "token_count": 376
    },
    "00432346": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432346(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(*0x4a8628 + 4);\n    fcn.0041137c(*0x4a8628);\n    *0x4a8624 = *0x4a8624 + -1;\n    if (iVar1 == 0) {\n        *0x4a862c = 0;\n    }\n    *0x4a8628 = iVar1;\n    return;\n}\n",
        "token_count": 110
    },
    "00432374": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432374(uint *param_1)\n\n{\n    *param_1 = 0x489b68;\n    fcn.00410c00();\n    fcn.0041137c(param_1[1]);\n    return;\n}\n",
        "token_count": 57
    },
    "0043241f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043241f(int32_t *arg_8h)\n\n{\n    if (*arg_8h != 0) {\n        fcn.00414bf6(*arg_8h);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00432438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432438(int32_t arg_8h, uint arg_ch)\n\n{\n    fcn.0041315a(arg_8h + 0x22e, arg_ch, 0x104);\n    *(arg_8h + 0x436) = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "00432465": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432465(int32_t arg_8h, uint arg_ch)\n\n{\n    fcn.0041315a(arg_8h + 0x24, arg_ch, 0x104);\n    *(arg_8h + 0x22c) = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "0043248f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0043248f(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    float10 fVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00414fec(arg_8h[*arg_8h + 2], 9);\n    iVar3 = fcn.00414fec(arg_8h[arg_8h[1] + 2], 0xd);\n    uVar4 = iVar2 + iVar3;\n    arg_8h[*arg_8h + 2] = uVar4;\n    *arg_8h = *arg_8h + -1;\n    if (*arg_8h < 0) {\n        *arg_8h = 0x10;\n    }\n    piVar1 = arg_8h + 1;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 < 0) {\n        arg_8h[1] = 0x10;\n    }\n    if (arg_8h[*arg_8h + 2] == arg_8h[0x13]) {\n        iVar2 = fcn.00411b83(arg_8h + 2, arg_8h + (0x24 - *arg_8h), 0x44);\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    if (arg_8h[0x35] != 0) {\n        if (arg_8h[0x35] != 1) {\n            fVar5 = uVar4;\n            if (uVar4 < 0) {\n                fVar5 = fVar5 + *0x48bd70;\n            }\n            return fVar5 * *0x48bd78;\n        }\n        return (CONCAT44(uVar4 * 0x100000, uVar4 >> 0xc) | 0x3ff00000) - *0x48bd80;\n    }\n    return (CONCAT44(uVar4 >> 0xc, uVar4 * 0x100000) | 0x3ff0000000000000) - *0x48bd80;\n}\n",
        "token_count": 517
    },
    "00432582": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432582(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (0x1000 < *0x4a9540) {\n        *0x4a9540 = 0;\n        if (*(arg_8h + 0x454) != NULL) {\n            iVar1 = (**(arg_8h + 0x454))(*(arg_8h + 0xc), *(arg_8h + 8), (*(arg_8h + 8) * 100) / *(arg_8h + 0x10));\n            if (iVar1 == 0) {\n                *(arg_8h + 0x448) = 1;\n            }\n        }\n        return;\n    }\n    *0x4a9540 = *0x4a9540 + 1;\n    return;\n}\n",
        "token_count": 192
    },
    "004325de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004325de(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg_8h + 0x464);\n    if ((uVar2 == 0) || (uVar2 == 0x10000)) {\n        uVar2 = fcn.00414eb4(*(arg_8h + 0x45c), 1, 0x10000, *(arg_8h + 0x1c));\n        *(arg_8h + 0x464) = 0;\n    }\n    uVar1 = *(*(arg_8h + 0x464) + *(arg_8h + 0x45c));\n    *(arg_8h + 0x464) = *(arg_8h + 0x464) + 1;\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 214
    },
    "00432635": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432635(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 0x460) != 0) {\n        fcn.00414466(*(arg_8h + 0x458), 1, *(arg_8h + 0x460), *(arg_8h + 0x20));\n        *(arg_8h + 0x460) = 0;\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0043266b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043266b(int32_t arg_8h, uint arg_ch)\n\n{\n    *(*(arg_8h + 0x458) + *(arg_8h + 0x460)) = arg_ch;\n    *(arg_8h + 0x460) = *(arg_8h + 0x460) + 1;\n    if (*(arg_8h + 0x460) == 0x10000) {\n        fcn.00414466(*(arg_8h + 0x458), 1, 0x10000, *(arg_8h + 0x20));\n        *(arg_8h + 0x460) = 0;\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "004326bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004326bf(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 0x438) != 0) {\n        fcn.004138f8(*(arg_8h + 0x438));\n    }\n    if (*(arg_8h + 0x45c) != 0) {\n        fcn.004138f8(*(arg_8h + 0x45c));\n    }\n    if (*(arg_8h + 0x458) != 0) {\n        fcn.004138f8(*(arg_8h + 0x458));\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00432704": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432704(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0041376b(0x20000);\n    *(arg_8h + 0x438) = iVar1;\n    iVar2 = fcn.0041376b(0x10000);\n    *(arg_8h + 0x45c) = iVar2;\n    iVar3 = fcn.0041376b(0x10000);\n    *(arg_8h + 0x458) = iVar3;\n    if (((iVar1 != 0) && (iVar2 != 0)) && (iVar3 != 0)) {\n        return 0;\n    }\n    fcn.004326bf(arg_8h);\n    return 5;\n}\n",
        "token_count": 192
    },
    "00432848": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432848(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    \n    *0x4a7540 = arg_8h;\n    iVar2 = 1;\n    puVar1 = 0x4a7540;\n    do {\n        puVar1[1] = (*puVar1 >> 0x1e ^ *puVar1) * 0x6c078965 + iVar2;\n        puVar1 = puVar1 + 1;\n        iVar2 = iVar2 + 1;\n    } while (puVar1 < 0x4a7efc);\n    *0x49205c = 1;\n    *0x4a7f10 = 1;\n    return;\n}\n",
        "token_count": 174
    },
    "0043298c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043298c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00411b83(arg_8h, arg_ch, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 63
    },
    "00432ef3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432ef3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, arg_8h, 0xffffffff, 0, 0);\n    if (uVar1 == 0) {\n        return 0;\n    }\n    uVar2 = fcn.00411777(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, arg_8h, 0xffffffff, uVar2, uVar1);\n    return uVar2;\n}\n",
        "token_count": 177
    },
    "00433608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433608(uint arg_8h, uint noname_1, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint8_t *puVar6;\n    uint var_18h;\n    uint var_ch;\n    \n    fcn.0041343b(&var_ch, 0x485184, arg_10h);\n    fcn.0041343b(&var_18h, 0x485184, arg_14h);\n    iVar1 = fcn.0041164b(&var_18h, &var_ch);\n    if (((iVar1 != 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceW)(arg_8h, arg_10h, 0xe),  iVar1 == 0)) ||\n       (iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(arg_8h, iVar1),  iVar1 == 0)) {\n        return 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    arg_10h = 0;\n    if (*(iVar1 + 4) == 0) {\n        return 0;\n    }\n    puVar6 = iVar1 + 6;\n    while( true ) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceW)(arg_8h, *(puVar6 + 0xc), 3);\n        if (iVar2 == 0) {\n            return 1;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(arg_8h, iVar2);\n        if (iVar3 == 0) break;\n        uVar4 = (*_sym.imp.KERNEL32.dll_SizeofResource)(arg_8h, iVar2);\n        uVar5 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        if (((*puVar6 == *0x497530) && (puVar6[1] == *0x49752c)) && (*(puVar6 + 6) == *0x497528)) {\n            *0x497534 = (*_sym.imp.USER32.dll_CreateIconFromResourceEx)\n                                  (uVar5, uVar4, 1, 0x30000, *0x497530, *0x49752c, 0);\n            return 0;\n        }\n        arg_10h = arg_10h + 1;\n        puVar6 = puVar6 + 0xe;\n        if (*(iVar1 + 4) <= arg_10h) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 610
    },
    "004337ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004337ed(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        fcn.0041315a(arg_8h, arg_ch, arg_10h + -1);\n        *(arg_8h + -2 + arg_10h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004338e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004338e5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041164b(arg_8h, 0x485028);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_mouse_event)(0x800, 0, 0, 0x78, 0);\n        return 1;\n    }\n    iVar1 = fcn.0041164b(arg_8h, L\"DOWN\");\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_mouse_event)(0x800, 0, 0, 0xffffff88, 0);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 166
    },
    "00433b2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433b2d(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00411361(arg_ch);\n    if (0x7ffe < uVar1) {\n        *(arg_ch + uVar1 * 2) = 0;\n        return;\n    }\n    do {\n        if (*arg_8h == 0) break;\n        *(arg_ch + uVar1 * 2) = *arg_8h;\n        uVar1 = uVar1 + 1;\n        arg_8h = arg_8h + 1;\n    } while (uVar1 < 0x7fff);\n    *(arg_ch + uVar1 * 2) = 0;\n    return;\n}\n",
        "token_count": 180
    },
    "004342ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004342ae(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_200h;\n    \n    (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, &var_200h, 0x100);\n    iVar1 = fcn.004132dc(&var_200h, L\"#32770\");\n    if (iVar1 == 0) {\n        *0x4a7538 = arg_8h;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 118
    },
    "00434695": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434695(int32_t arg_8h)\n\n{\n    fcn.0040dcc0();\n    fcn.0041137c(*(arg_8h + 4));\n    return;\n}\n",
        "token_count": 49
    },
    "004346b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004346b2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h + 0x2c);\n    if (iVar1 == 1) {\n        return 0x20;\n    }\n    if (iVar1 != 2) {\n        if (iVar1 != 4) {\n            return 0;\n        }\n        return (-(*(arg_8h + 0x30) != 0) & 0xffffff80) + 0x100;\n    }\n    return 0x40;\n}\n",
        "token_count": 132
    },
    "004346f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004346f1(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h[1] + 4);\n    fcn.0041137c(arg_8h[1]);\n    *arg_8h = *arg_8h + -1;\n    arg_8h[1] = iVar1;\n    if (iVar1 == 0) {\n        arg_8h[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004347c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004347c9(int32_t arg_8h, uint arg_ch, int16_t *arg_10h, uchar *arg_14h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = arg_14h;\n    *arg_14h = 0;\n    arg_14h = NULL;\n    iVar2 = 0;\n    if (*arg_10h != 0) {\n        iVar2 = fcn.0041164b(arg_10h, 0x4851d0);\n        if (iVar2 == 0) {\n            return *(arg_8h + 0x1b0);\n        }\n        iVar2 = fcn.0041164b(arg_10h, L\"info\");\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.USER32.dll_LoadIconW)(0, 0x7f04);\n        }\n        else {\n            iVar2 = fcn.0041164b(arg_10h, L\"question\");\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_LoadIconW)(0, 0x7f02);\n                return iVar2;\n            }\n            iVar2 = fcn.0041164b(arg_10h, L\"stop\");\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_LoadIconW)(0, 0x7f01);\n                return iVar2;\n            }\n            iVar2 = fcn.0041164b(arg_10h, L\"warning\");\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_LoadIconW)(0, 0x7f03);\n                return iVar2;\n            }\n            (*_sym.imp.SHELL32.dll_ExtractIconExW)(arg_10h, arg_ch, 0, &arg_14h, 1);\n            iVar2 = arg_14h;\n            if (arg_14h != NULL) {\n                *puVar1 = 1;\n                return arg_14h;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 480
    },
    "004348c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004348c0(int32_t arg_8h, int32_t arg_ch, uint lpBuffer, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    piVar2 = arg_8h + 4;\n    do {\n        if (*piVar2 == arg_ch) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        (*_sym.imp.KERNEL32.dll_ReadProcessMemory)(*(arg_8h + iVar1 * 8), arg_ch, lpBuffer, arg_14h, 0);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "004348fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004348fc(int32_t arg_8h, uint lpBuffer, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    piVar2 = arg_8h + 4;\n    do {\n        if (*piVar2 == arg_10h) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(*(arg_8h + iVar1 * 8), arg_10h, lpBuffer, arg_14h, 0);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "00434938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434938(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = arg_8h + 4;\n    do {\n        if (*piVar1 == arg_ch) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(*(arg_8h + iVar2 * 8), *(arg_8h + 4 + iVar2 * 8), 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(arg_8h + iVar2 * 8));\n            *(arg_8h + 4 + iVar2 * 8) = 0;\n            return;\n        }\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 2;\n    } while (iVar2 < 0x10);\n    return;\n}\n",
        "token_count": 213
    },
    "00434b4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434b4c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00413e50(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "00434e71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434e71(uint *param_1)\n\n{\n    *param_1 = 0x484ae0;\n    fcn.0040ee10();\n    fcn.0041137c(param_1[1]);\n    return;\n}\n",
        "token_count": 58
    },
    "00434fb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434fb4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004133ee(arg_8h);\n    if (iVar1 != 0) {\n        iVar1 = fcn.004133c5(arg_8h);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "0043500b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043500b(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00411777(4);\n    if (puVar1 != NULL) {\n        *puVar1 = 1;\n        *(arg_8h + 0xc) = puVar1;\n        return;\n    }\n    *(arg_8h + 0xc) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "00435038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00435038(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    if (arg_ch < arg_8h[1]) {\n        return *arg_8h + arg_ch;\n    }\n    return *arg_8h + arg_8h[1];\n}\n",
        "token_count": 71
    },
    "00435564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435564(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    \n    piVar1 = *(arg_8h + 0x18);\n    if (piVar1 != NULL) {\n        uVar2 = (**(*piVar1 + 4))(piVar1);\n        *(arg_8h + 0x20) = uVar2;\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 0x20);\n    return *(arg_8h + 0x20);\n}\n",
        "token_count": 141
    },
    "004358b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004358b6(uint *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043298c(arg_ch, 0x481990);\n    if (iVar1 != 0) {\n        *arg_10h = *arg_8h;\n        return 0;\n    }\n    iVar1 = fcn.0043298c(arg_ch, 0x4818b0);\n    if (iVar1 != 0) {\n        *arg_10h = *arg_8h;\n        return 0;\n    }\n    iVar1 = fcn.0043298c(arg_ch, 0x4819a0);\n    if (iVar1 != 0) {\n        *arg_10h = arg_8h[1];\n        return 0;\n    }\n    iVar1 = fcn.0043298c(arg_ch, 0x4819d0);\n    if (iVar1 != 0) {\n        *arg_10h = arg_8h[2];\n        return 0;\n    }\n    iVar1 = fcn.0043298c(arg_ch, 0x481900);\n    if (iVar1 != 0) {\n        *arg_10h = arg_8h[3];\n        return 0;\n    }\n    return 0x80004002;\n}\n",
        "token_count": 307
    },
    "004359bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004359bf(int32_t *arg_8h)\n\n{\n    if (arg_8h[3] != 0) {\n        fcn.0041137c(arg_8h[3]);\n        arg_8h[3] = 0;\n    }\n    if (arg_8h[2] != 0) {\n        fcn.0041137c(arg_8h[2]);\n        arg_8h[2] = 0;\n    }\n    if (arg_8h[1] != 0) {\n        fcn.0041137c(arg_8h[1]);\n        arg_8h[1] = 0;\n    }\n    if (*arg_8h != 0) {\n        fcn.0041137c(*arg_8h);\n        *arg_8h = 0;\n    }\n    arg_8h[5] = 0;\n    return;\n}\n",
        "token_count": 206
    },
    "00435a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435a1c(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043298c(arg_ch, 0x4818c0);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0043298c(arg_ch, 0x4818e0);\n        if (iVar1 != 0) {\n            *arg_10h = arg_8h[0xc];\n            return 0;\n        }\n        iVar1 = fcn.0043298c(arg_ch, 0x481920);\n        if (iVar1 != 0) {\n            *arg_10h = arg_8h[0xc];\n            return 0;\n        }\n        iVar1 = fcn.0043298c(arg_ch, 0x481900);\n        if (iVar1 != 0) {\n            *arg_10h = *(*arg_8h + 0xc);\n            return 0;\n        }\n        iVar1 = fcn.0043298c(arg_ch, 0x4818f0);\n        if (iVar1 != 0) {\n            *arg_10h = *(*arg_8h + 0xc);\n            return 0;\n        }\n        iVar1 = fcn.0043298c(arg_ch, 0x481980);\n        if (iVar1 != 0) {\n            *arg_10h = arg_8h[0xd];\n            return 0;\n        }\n        iVar1 = fcn.0043298c(arg_ch, 0x481950);\n        if (iVar1 != 0) {\n            *arg_10h = arg_8h[0xb];\n            return 0;\n        }\n        iVar1 = fcn.0043298c(arg_ch, 0x481990);\n        if (iVar1 == 0) {\n            if (*arg_8h != 0) {\n                uVar2 = fcn.004358b6(*arg_8h, arg_ch, arg_10h);\n                return uVar2;\n            }\n            return 0x80004002;\n        }\n    }\n    *arg_10h = arg_8h[10];\n    return 0;\n}\n",
        "token_count": 510
    },
    "00435ea6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435ea6(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = arg_8h;\n    iVar3 = *(arg_8h[1] + 4);\n    *(arg_8h[1] + 0x10) = *(iVar3 + 0x80);\n    *(arg_8h[1] + 0x18) = *(iVar3 + 0x84) + *(iVar3 + 0x80);\n    *(arg_8h[1] + 0x14) = *(iVar3 + 0x82);\n    *(arg_8h[1] + 0x1c) = *(iVar3 + 0x86) + *(iVar3 + 0x82);\n    iVar3 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0x481910, &arg_8h);\n    if (-1 < iVar3) {\n        iVar3 = piVar2[1];\n        piVar1 = *(iVar3 + 0xc);\n        (**(*piVar1 + 0x48))(piVar1, 1, iVar3 + 0x20);\n        (**(*arg_8h + 0x1c))(arg_8h, arg_ch, piVar2[1] + 0x10);\n        (**(*arg_8h + 8))(arg_8h);\n        return 0;\n    }\n    return 0x8000ffff;\n}\n",
        "token_count": 368
    },
    "00435f69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435f69(int32_t arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    code *pcVar1;\n    \n    *arg_10h = 0;\n    *arg_ch = *(**(arg_8h + 4) + 0xc);\n    pcVar1 = _sym.imp.USER32.dll_CopyRect;\n    (*_sym.imp.USER32.dll_CopyRect)(arg_14h, *(arg_8h + 4) + 0x10);\n    (*pcVar1)(arg_18h, *(arg_8h + 4) + 0x10);\n    *arg_1ch = 0x14;\n    arg_1ch[1] = 0;\n    arg_1ch[2] = *(**(arg_8h + 4) + 0x14);\n    arg_1ch[3] = 0;\n    arg_1ch[4] = 0;\n    return 0;\n}\n",
        "token_count": 239
    },
    "004368b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004368b8(uint arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(arg_8h, 2, *arg_ch, 0, arg_10h);\n    if (iVar2 != 0) {\n        return 1;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar2 == 0x7a) {\n        iVar2 = fcn.0043691e(*arg_10h);\n        *arg_ch = iVar2;\n        if ((iVar2 != 0) && (iVar2 = (*pcVar1)(arg_8h, 2, iVar2, *arg_10h, arg_10h),  iVar2 != 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 235
    },
    "00436936": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436936(uint arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(arg_8h, 3, *arg_ch, 0, arg_10h);\n    if (iVar2 != 0) {\n        return 1;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar2 == 0x7a) {\n        iVar2 = fcn.0043691e(*arg_10h);\n        *arg_ch = iVar2;\n        if ((iVar2 != 0) && (iVar2 = (*pcVar1)(arg_8h, 3, iVar2, *arg_10h, arg_10h),  iVar2 != 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "0043699c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043699c(uint *arg_8h)\n\n{\n    code *pcVar1;\n    \n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*arg_8h, 0xffffffff);\n    (*_sym.imp.USERENV.dll_UnloadUserProfile)(arg_8h[2], arg_8h[1]);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h[2]);\n    (*pcVar1)(*arg_8h);\n    fcn.0043689c(arg_8h);\n    return 0;\n}\n",
        "token_count": 141
    },
    "00436a7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00436a7a(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t *arg_8h_00;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *var_8h;\n    uint nDestinationSidLength;\n    \n    uVar4 = 0;\n    var_8h = NULL;\n    nDestinationSidLength = 0;\n    cVar2 = fcn.004368b8(arg_8h, &var_8h, &nDestinationSidLength);\n    arg_8h_00 = var_8h;\n    if (cVar2 != '\\0') {\n        uVar5 = 0;\n        puVar1 = var_8h;\n        if (*var_8h != 0) {\n            while ((puVar1[2] & 0xc0000000) != 0xc0000000) {\n                uVar5 = uVar5 + 1;\n                puVar1 = puVar1 + 2;\n                if (*var_8h <= uVar5) {\n                    uVar4 = fcn.0043689c(var_8h);\n                    return uVar4 & 0xffffff00;\n                }\n            }\n            nDestinationSidLength = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(var_8h[uVar5 * 2 + 1]);\n            iVar3 = fcn.0043691e(nDestinationSidLength);\n            *arg_ch = iVar3;\n            if ((iVar3 != 0) &&\n               (iVar3 = (*_sym.imp.ADVAPI32.dll_CopySid)(nDestinationSidLength, iVar3, arg_8h_00[uVar5 * 2 + 1]), \n               iVar3 != 0)) {\n                uVar4 = 1;\n            }\n        }\n    }\n    uVar5 = fcn.0043689c(arg_8h_00);\n    return uVar5 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 465
    },
    "00436b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436b30(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043691e(arg_ch);\n    *arg_8h = iVar1;\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeAcl)(iVar1, arg_ch, 2);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00436b68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436b68(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043691e(arg_ch);\n    *arg_8h = iVar1;\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(iVar1, 1);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "00436b9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436b9c(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetUserObjectSecurity)(arg_8h, arg_ch, *arg_10h, 0, arg_14h);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar1 == 0x7a) {\n        iVar1 = fcn.0043691e(*arg_14h);\n        *arg_10h = iVar1;\n        if ((iVar1 != 0) &&\n           (iVar1 = (*_sym.imp.USER32.dll_GetUserObjectSecurity)(arg_8h, arg_ch, iVar1, *arg_14h, arg_14h),  iVar1 != 0)\n           ) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 231
    },
    "00436e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00436e40(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    iVar2 = fcn.0042ec78(*arg_8h, 4);\n    if (iVar2 != 0x50435245) {\n        return NULL;\n    }\n    puVar4 = arg_8h;\n    puVar5 = arg_ch;\n    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    uVar3 = fcn.0042ec78(arg_8h[1], 4);\n    arg_ch[1] = uVar3;\n    uVar3 = fcn.0042ec78(arg_8h[2], 4);\n    arg_ch[2] = uVar3;\n    uVar1 = fcn.0042ec78(*(arg_8h + 3), 2);\n    *(arg_ch + 3) = uVar1;\n    uVar1 = fcn.0042ec78(*(arg_8h + 4), 2);\n    *(arg_ch + 4) = uVar1;\n    uVar1 = fcn.0042ec78(*(arg_8h + 0x12), 2);\n    *(arg_ch + 0x12) = uVar1;\n    uVar1 = fcn.0042ec78(*(arg_8h + 5), 2);\n    *(arg_ch + 5) = uVar1;\n    uVar1 = fcn.0042ec78(*(arg_8h + 0x16), 2);\n    *(arg_ch + 0x16) = uVar1;\n    uVar1 = fcn.0042ec78(*(arg_8h + 6), 2);\n    *(arg_ch + 6) = uVar1;\n    uVar1 = fcn.0042ec78(*(arg_8h + 0x1a), 2);\n    *(arg_ch + 0x1a) = uVar1;\n    uVar1 = fcn.0042ec78(*(arg_8h + 7), 2);\n    *(arg_ch + 7) = uVar1;\n    if (arg_10h != NULL) {\n        puVar4 = arg_10h;\n        puVar5 = arg_14h;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uVar3 = fcn.0042ec78(*arg_10h, 4);\n        *arg_14h = uVar3;\n        uVar3 = fcn.0042ec78(arg_10h[1], 4);\n        arg_14h[1] = uVar3;\n        uVar3 = fcn.0042ec78(arg_10h[10], 4);\n        arg_14h[10] = uVar3;\n    }\n    return arg_ch;\n}\n",
        "token_count": 773
    },
    "0043ec7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ec7a(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint var_54h;\n    uint var_28h;\n    \n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        if (*arg_8h != 0x50435245) {\n            arg_8h = fcn.00436e40(arg_8h, &var_28h, 0, &var_54h);\n            if (arg_8h == NULL) {\n                return 0xfffffffc;\n            }\n        }\n        *arg_ch = *(arg_8h + 4);\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 162
    },
    "0043ff8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ff8f(char *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    int32_t arg_ch_00;\n    uint arg_18h_00;\n    uint arg_1ch;\n    int32_t iVar2;\n    uint var_4h;\n    \n    arg_1ch = arg_18h;\n    arg_18h_00 = arg_14h;\n    arg_ch_00 = arg_8h;\n    arg_8h = *(arg_8h + 0x18);\n    var_4h = 0;\n    iVar2 = fcn.0042f9a6(&arg_8h, arg_ch_00, arg_ch, arg_10h, arg_14h, arg_18h, &var_4h);\n    while ((iVar2 < 1 && (cVar1 = *arg_8h,  arg_8h = arg_8h + 1,  cVar1 != '\\0'))) {\n        iVar2 = fcn.0042f9a6(&arg_8h, arg_ch_00, arg_ch, arg_10h, arg_18h_00, arg_1ch, &var_4h);\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00440066": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440066(int32_t arg_8h, uint hDlg, uint wParam, uint lParam)\n\n{\n    char cVar1;\n    uint *arg_8h_00;\n    \n    arg_8h_00 = **(*0x4a8690 + arg_8h * 4) + 0x28;\n    cVar1 = fcn.004362d6(arg_8h_00);\n    if (cVar1 == '\\0') {\n        fcn.0043112e(*arg_8h_00);\n        return;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x53, wParam, lParam);\n    return;\n}\n",
        "token_count": 157
    },
    "0044055f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044055f(uint arg_8h)\n\n{\n    fcn.004359bf(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 51
    },
    "00440676": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440676(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar1 = *(arg_8h + 0x78);\n    iVar2 = puVar1[1];\n    while (iVar2 != 0) {\n        puVar1 = puVar1[1];\n        iVar2 = puVar1[1];\n    }\n    puVar3 = puVar1;\n    if (0xff < puVar1[3] + arg_18h) {\n        puVar3 = fcn.00411777(0x910);\n        puVar3[3] = 0;\n        puVar3[1] = 0;\n        *puVar3 = 0;\n        puVar1[1] = puVar3;\n    }\n    iVar2 = puVar3[3];\n    *(iVar2 + 0x810 + puVar3) = arg_ch;\n    if (arg_ch == 8) {\n        if (arg_10h != -1) {\n            fcn.00433146(&arg_10h);\n        }\n        if (arg_14h != -1) {\n            fcn.00433146(&arg_14h);\n        }\n    }\n    puVar3[iVar2 * 2 + 4] = arg_10h;\n    puVar3[iVar2 * 2 + 5] = arg_14h;\n    puVar3[3] = iVar2 + 1;\n    return;\n}\n",
        "token_count": 369
    },
    "0044112e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044112e(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    char cVar3;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = arg_8h;\n    arg_8h = *0x4a86b8;\n    while( true ) {\n        ppiVar2 = arg_8h;\n        cVar3 = fcn.00441fc1(&arg_8h, 0);\n        if (cVar3 == '\\0') {\n            var_ch = 1;\n            var_8h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(var_10h);\n            fcn.0043055e(0x4a86b8, &var_10h);\n            return var_8h;\n        }\n        piVar1 = *ppiVar2;\n        if (*piVar1 == var_10h) break;\n        fcn.00440543(&arg_8h, &var_4h);\n    }\n    piVar1 = piVar1 + 1;\n    *piVar1 = *piVar1 + arg_ch;\n    return (*ppiVar2)[2];\n}\n",
        "token_count": 302
    },
    "00441954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441954(uint *param_1)\n\n{\n    *param_1 = 0x48b6f0;\n    fcn.00431376(param_1);\n    fcn.0041137c(param_1[1]);\n    return;\n}\n",
        "token_count": 61
    },
    "00441bcd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441bcd(int32_t *arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.00411361(arg_ch);\n        if (iVar1 != 0) {\n            arg_ch = fcn.00410330();\n            uVar2 = (**(*arg_8h + 0x14))(arg_8h, 0x481a10, &arg_ch, 1, 0x800, arg_10h);\n            fcn.004136cc(arg_ch);\n            return uVar2;\n        }\n    }\n    *arg_10h = 0;\n    return 0;\n}\n",
        "token_count": 173
    },
    "00441e53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00441e53(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_ch_00;\n    \n    arg_ch_00 = arg_10h;\n    fcn.00433146(&arg_ch);\n    uVar1 = arg_ch;\n    if (arg_ch_00 < 0) {\n        arg_ch_00 = 0;\n    }\n    else if (0xff < arg_ch_00) {\n        arg_ch_00 = 0xff;\n    }\n    fcn.00431c2b(arg_ch, arg_ch_00, arg_8h, arg_8h + 1);\n    fcn.00431c2b(uVar1 >> 8, arg_ch_00, arg_8h + 2, arg_8h + 3);\n    fcn.00431c2b(uVar1 >> 0x10, arg_ch_00, arg_8h + 4, arg_8h + 5);\n    return arg_8h;\n}\n",
        "token_count": 246
    },
    "00441f66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00441f66(uint *arg_8h)\n\n{\n    fcn.0041137c(*arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 55
    },
    "00441fd3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441fd3(uint *param_1)\n\n{\n    *param_1 = 0x489dd0;\n    fcn.00441f85(param_1);\n    fcn.0041137c(param_1[1]);\n    return;\n}\n",
        "token_count": 61
    },
    "00441ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00441ff0(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    *(arg_8h + 0x18) = arg_ch;\n    if (arg_10h == -0x21524111) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(arg_8h + 0x1c) = uVar1;\n    }\n    uVar2 = fcn.00431f0b(arg_8h + 0xd4);\n    return uVar2 & 0xffffff00 | arg_14h & 0xff;\n}\n",
        "token_count": 169
    },
    "004420ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "write file on Windows",
            "read data from Internet",
            "receive data",
            "download and write a file",
            "receive and write data from server to client"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004420ff(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t arg_8h_00;\n    uint8_t uVar2;\n    int32_t arg_14h;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_408h;\n    int32_t var_8h;\n    code *var_4h;\n    \n    arg_8h_00 = arg_8h;\n    var_4h = fcn.00414bf6;\n    arg_14h = fcn.00414b72(*(arg_8h + 0x34), 0x4871ac);\n    var_8h = arg_14h;\n    if (arg_14h == 0) {\n        uVar2 = fcn.00441ff0(arg_8h_00, 0x1f, 0xdeadbeef, 0);\n        uVar3 = fcn.00431d81(&var_8h);\n        return uVar3 & 0xffffff00 | uVar2;\n    }\n    arg_8h = 1;\n    do {\n        iVar4 = (*_sym.imp.WININET.dll_InternetReadFile)(arg_ch, &var_408h, 0x400, &arg_8h);\n        if (iVar4 == 0) {\n            uVar2 = fcn.00441ff0(arg_8h_00, 0x20, 0xdeadbeef, 0);\n            uVar3 = fcn.00431d81(&var_8h);\n            return uVar3 & 0xffffff00 | uVar2;\n        }\n        if (arg_8h == 0) break;\n        fcn.00414466(&var_408h, arg_8h, 1, arg_14h);\n        puVar1 = arg_8h_00 + 8;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + arg_8h;\n        *(arg_8h_00 + 0xc) = *(arg_8h_00 + 0xc) + CARRY4(uVar3, arg_8h);\n    } while (arg_8h != 0);\n    if ((*(arg_8h_00 + 8) | *(arg_8h_00 + 0xc)) == 0) {\n        uVar2 = fcn.00441ff0(arg_8h_00, 0x21, 0xdeadbeef, 0);\n        uVar3 = fcn.00431d81(&var_8h);\n        return uVar3 & 0xffffff00 | uVar2;\n    }\n    uVar2 = fcn.00441ff0(arg_8h_00, 0, 0, 1);\n    uVar3 = fcn.00431d81(&var_8h);\n    return uVar3 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 675
    },
    "00442376": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442376(uint *arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.WININET.dll_InternetCloseHandle;\n    (*_sym.imp.WININET.dll_InternetCloseHandle)(arg_8h[1]);\n    (*pcVar1)(*arg_8h);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    fcn.00431ee5(arg_8h + 0x35, 10000);\n    return;\n}\n",
        "token_count": 123
    },
    "0044274e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044274e(uint arg_8h)\n\n{\n    fcn.00442738(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 51
    },
    "00442900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442900(uint arg_8h)\n\n{\n    fcn.004428e4(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 51
    },
    "0044291d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044291d(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *arg_ch_00;\n    uint32_t *puVar1;\n    int32_t iVar2;\n    \n    arg_ch = arg_ch & 0xffff;\n    arg_ch_00 = arg_8h + 2;\n    iVar2 = 0x11;\n    puVar1 = arg_ch_00;\n    do {\n        arg_ch = arg_ch * -0x53a9b4fb + 1;\n        *puVar1 = arg_ch;\n        puVar1 = puVar1 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *arg_8h = 0;\n    arg_8h[1] = 10;\n    fcn.00411000(arg_8h + 0x13, arg_ch_00, 0x44);\n    fcn.00411000(arg_8h + 0x24, arg_ch_00, 0x44);\n    iVar2 = 9;\n    do {\n        fcn.0043248f(arg_8h);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 283
    },
    "00442ab1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442ab1(int32_t *arg_8h)\n\n{\n    if (arg_8h[6] == 1) {\n        if (arg_8h[0x111] < arg_8h[0x10f]) {\n            do {\n                *(*arg_8h + arg_8h[2]) = *((arg_8h[0x111] & 0x1ffffU) + arg_8h[0x10e]);\n                arg_8h[2] = arg_8h[2] + 1;\n                arg_8h[0x111] = arg_8h[0x111] + 1;\n            } while (arg_8h[0x111] < arg_8h[0x10f]);\n            arg_8h[0x110] = 0;\n            return;\n        }\n    }\n    else if (arg_8h[0x111] < arg_8h[0x10f]) {\n        do {\n            fcn.0043266b(arg_8h, *((arg_8h[0x111] & 0x1ffffU) + arg_8h[0x10e]));\n            arg_8h[0x111] = arg_8h[0x111] + 1;\n            arg_8h[2] = arg_8h[2] + 1;\n        } while (arg_8h[0x111] < arg_8h[0x10f]);\n    }\n    arg_8h[0x110] = 0;\n    return;\n}\n",
        "token_count": 354
    },
    "00442c49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00442c49(uint *arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    \n    arg_8h[1] = 0;\n    arg_8h[2] = arg_ch + 1;\n    puVar1 = fcn.00411777(arg_ch + 1);\n    *arg_8h = puVar1;\n    *puVar1 = 0;\n    fcn.0043500b(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 119
    },
    "00442ef7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442ef7(uint arg_8h)\n\n{\n    fcn.00402260();\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 47
    },
    "00442faa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00442faa(uint *arg_8h, uint arg_ch)\n\n{\n    arg_8h[1] = 1;\n    *arg_8h = 0x487110;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(arg_8h + 5, 4000);\n    arg_8h[0xc] = 0;\n    fcn.00432ba7(arg_ch, arg_8h + 0xb, 0);\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(arg_8h + 0xd, 500);\n    return arg_8h;\n}\n",
        "token_count": 170
    },
    "0044300a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044300a(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    \n    arg_8h_00 = fcn.00411777(0x38);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.00442faa(arg_8h_00, arg_8h);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 107
    },
    "00443281": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443281(int32_t arg_8h)\n\n{\n    fcn.00432bdb(arg_8h + 0x1c);\n    fcn.00432bdb(arg_8h + 0xc);\n    fcn.00432bdb(arg_8h + 0x14);\n    return;\n}\n",
        "token_count": 74
    },
    "004432ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004432ab(uint arg_8h, int32_t arg_ch, int32_t lpNumberOfBytesWritten)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint extraout_EDX;\n    \n    iVar2 = lpNumberOfBytesWritten;\n    lpNumberOfBytesWritten = 0;\n    cVar1 = fcn.00432bf8(arg_8h);\n    if (((cVar1 != '\\0') && (arg_ch != 0)) && (iVar2 != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (*(extraout_ECX + 0x18), arg_ch, iVar2, &lpNumberOfBytesWritten, extraout_EDX);\n        if (iVar2 == 0) {\n            fcn.00432bdb(extraout_ECX + 0x18);\n        }\n        return lpNumberOfBytesWritten;\n    }\n    return extraout_EDX;\n}\n",
        "token_count": 213
    },
    "00443387": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00443387(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    *arg_8h = *arg_ch;\n    arg_8h[1] = arg_ch[1];\n    iVar1 = arg_ch[8];\n    arg_8h[8] = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    iVar1 = arg_ch[9];\n    arg_8h[9] = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.00432ba7(arg_ch[2], arg_8h + 2, 0);\n    fcn.00432ba7(arg_ch[3], arg_8h + 3, 0);\n    fcn.00432ba7(arg_ch[4], arg_8h + 4, 0);\n    fcn.00432ba7(arg_ch[5], arg_8h + 5, 0);\n    fcn.00432ba7(arg_ch[6], arg_8h + 6, 0);\n    fcn.00432ba7(arg_ch[7], arg_8h + 7, 0);\n    return arg_8h;\n}\n",
        "token_count": 315
    },
    "00443442": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443442(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043298c(arg_ch, 0x481990);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0043298c(arg_ch, 0x4819a0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0043298c(arg_ch, arg_8h + 0xc);\n            if (iVar1 == 0) {\n                return 0x80004002;\n            }\n        }\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 185
    },
    "004434a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004434a2(int32_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00434ff6(arg_8h);\n    if (cVar1 != '\\0') {\n        *arg_8h[3] = *arg_8h[3] + -1;\n        fcn.004013a0();\n        arg_8h[2] = 8;\n        iVar2 = fcn.00411777(0x10);\n        *arg_8h = iVar2;\n    }\n    arg_8h[1] = 1;\n    **arg_8h = arg_ch;\n    *(*arg_8h + 2) = 0;\n    return arg_8h;\n}\n",
        "token_count": 184
    },
    "00443507": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00443507(int32_t arg_8h)\n\n{\n    fcn.00410dc0(arg_8h, 0x20, *(arg_8h + -4), 0x4434ff);\n    fcn.0041137c(arg_8h + -4);\n    return arg_8h + -4;\n}\n",
        "token_count": 82
    },
    "00443532": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443532(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    if (arg_8h[1] != 0) {\n        fcn.00443507(arg_8h[1]);\n        arg_8h[1] = 0;\n    }\n    piVar1 = arg_8h[4];\n    if (piVar1 != NULL) {\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0041137c(arg_8h[4]);\n            fcn.0041137c(arg_8h[2]);\n        }\n        arg_8h[4] = 0;\n    }\n    arg_8h[2] = 0;\n    *arg_8h = 0;\n    arg_8h[3] = 0;\n    return;\n}\n",
        "token_count": 202
    },
    "00443b7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443b7c(uint *lpNumberOfBytesWritten, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    puVar3 = lpNumberOfBytesWritten;\n    fcn.00443b5f(lpNumberOfBytesWritten);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*puVar3, arg_ch, arg_10h, &lpNumberOfBytesWritten, 0);\n    puVar1 = puVar3 + 4;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + lpNumberOfBytesWritten;\n    puVar3[5] = puVar3[5] + CARRY4(uVar2, lpNumberOfBytesWritten);\n    return;\n}\n",
        "token_count": 181
    },
    "00443c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00443c50(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t arg_ch_00;\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    puVar1 = *arg_ch;\n    arg_8h_00 = arg_ch[1] * 2;\n    arg_ch_00 = fcn.00411777(arg_8h_00);\n    uVar2 = 0;\n    if (arg_8h_00 != 0) {\n        iVar3 = arg_ch_00 - puVar1;\n        do {\n            puVar1[iVar3] = puVar1[1];\n            *(arg_ch_00 + 1 + uVar2) = *puVar1;\n            uVar2 = uVar2 + 2;\n            puVar1 = puVar1 + 2;\n        } while (uVar2 < arg_8h_00);\n    }\n    uVar2 = fcn.00443b7c(arg_8h, arg_ch_00, arg_8h_00);\n    fcn.0041137c(arg_ch_00);\n    return uVar2 == arg_8h_00;\n}\n",
        "token_count": 281
    },
    "00443cbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00443cbc(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = arg_ch[1];\n    uVar2 = fcn.00443b7c(arg_8h, *arg_ch, iVar1 * 2);\n    return uVar2 & 0xffffff00 | uVar2 == iVar1 * 2;\n}\n",
        "token_count": 99
    },
    "00443f54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443f54(uint arg_8h)\n\n{\n    fcn.00402260();\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 47
    },
    "004447c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004447c4(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    do {\n        iVar1 = fcn.004132dc(*(iVar2 * 4 + 0x492490), *arg_8h);\n        if (iVar1 == 0) {\n            return iVar2;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x2b);\n    return -1;\n}\n",
        "token_count": 121
    },
    "0044483e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044483e(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    \n    iVar2 = *(*arg_ch + arg_8h);\n    *arg_ch = *arg_ch + 4;\n    iVar3 = (iVar2 + 1) * 2;\n    arg_8h_00 = fcn.00411777(-(iVar3 >> 0x20 != 0) | iVar3);\n    fcn.00411000(arg_8h_00, *arg_ch + arg_8h, iVar2 * 2);\n    *arg_ch = *arg_ch + iVar2 * 2;\n    *(iVar2 * 2 + arg_8h_00) = 0;\n    iVar4 = 0;\n    if (0 < iVar2) {\n        do {\n            puVar1 = arg_8h_00 + iVar4 * 2;\n            *puVar1 = *puVar1 ^ iVar2;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar2);\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 287
    },
    "004448a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004448a5(ushort *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    while( true ) {\n        iVar2 = fcn.00434fb4(arg_8h[iVar3]);\n        if (iVar2 == 0) break;\n        iVar3 = iVar3 + 1;\n    }\n    iVar1 = arg_8h[iVar3];\n    if (iVar1 != 0) {\n        iVar2 = 0;\n        do {\n            iVar3 = iVar3 + 1;\n            arg_8h[iVar2] = iVar1;\n            iVar1 = arg_8h[iVar3];\n            iVar2 = iVar2 + 1;\n        } while (iVar1 != 0);\n        arg_8h[iVar2] = 0;\n        return;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 211
    },
    "00444901": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444901(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00411361(arg_8h);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (iVar1 < 0) break;\n            iVar2 = fcn.00434fb4(*(arg_8h + iVar1 * 2));\n        } while (iVar2 != 0);\n        *(arg_8h + 2 + iVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00444ac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444ac8(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.00434ff6(arg_8h);\n    if (cVar1 != '\\0') {\n        *arg_8h[3] = *arg_8h[3] + -1;\n        fcn.0043500b(arg_8h);\n        arg_8h[2] = 0x10;\n        uVar2 = fcn.00411777(0x10);\n        *arg_8h = uVar2;\n    }\n    arg_8h[1] = 0;\n    **arg_8h = 0;\n    return;\n}\n",
        "token_count": 164
    },
    "00444b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00444b08(int32_t arg_8h)\n\n{\n    if (arg_8h == 0) {\n        return 0x10;\n    }\n    return arg_8h + 0xfU & 0xfffffff0;\n}\n",
        "token_count": 62
    },
    "00444b25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444b25(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    \n    if (*(arg_8h + 8) == *(arg_8h + 0xc)) {\n        uVar1 = fcn.00431cd6(*(arg_8h + 0xc) * 2);\n        *(arg_8h + 0xc) = uVar1;\n        arg_8h_00 = fcn.00411777(-(uVar1 * 4 >> 0x20 != 0) | uVar1 * 4);\n        fcn.00411000(arg_8h_00, *(arg_8h + 4), *(arg_8h + 8) * 4);\n        fcn.0041137c(*(arg_8h + 4));\n        *(arg_8h + 4) = arg_8h_00;\n    }\n    puVar2 = fcn.00411777(0xc);\n    if (puVar2 != NULL) {\n        *puVar2 = *arg_ch;\n        puVar2[1] = arg_ch[1];\n        puVar2[2] = arg_ch[2];\n        *(*(arg_8h + 4) + *(arg_8h + 8) * 4) = puVar2;\n        *(arg_8h + 8) = *(arg_8h + 8) + 1;\n        return;\n    }\n    *(*(arg_8h + 4) + *(arg_8h + 8) * 4) = 0;\n    *(arg_8h + 8) = *(arg_8h + 8) + 1;\n    return;\n}\n",
        "token_count": 403
    },
    "00444bc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00444bc2(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.004136e0(arg_ch);\n    arg_8h[1] = iVar1;\n    uVar2 = fcn.00444b08(iVar1 + 1);\n    arg_8h[2] = uVar2;\n    uVar2 = fcn.00411777(uVar2);\n    *arg_8h = uVar2;\n    fcn.00411000(uVar2, arg_ch, arg_8h[1] + 1);\n    fcn.0043500b(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "00444c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444c08(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.00434ff6(arg_8h);\n    if (cVar1 != '\\0') {\n        *arg_8h[3] = *arg_8h[3] + -1;\n        fcn.0043500b(arg_8h);\n        uVar2 = fcn.00444b08(arg_8h[1] + 1);\n        arg_8h[2] = uVar2;\n        uVar2 = fcn.00411777(uVar2);\n        fcn.00411000(uVar2, *arg_8h, arg_8h[1] + 1);\n        *arg_8h = uVar2;\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00445207": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445207(uint arg_8h)\n\n{\n    fcn.00435593(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 50
    },
    "0044525d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044525d(uint arg_8h)\n\n{\n    fcn.00435cb8(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 52
    },
    "0044527a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044527a(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    piVar2 = arg_8h;\n    piVar1 = arg_8h[3];\n    var_4h = NULL;\n    arg_8h = NULL;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x2c))(piVar1, 0xfffffffd, 0, piVar2[10], 0xffffffff, *(*piVar2 + 0x14), piVar2 + 4);\n        if ((*(piVar2 + 0x3d) != '\\0') || (*(piVar2 + 0xf) != '\\0')) {\n            (***piVar2[3])(piVar2[3], 0x481910, &var_4h);\n            if (var_4h != NULL) {\n                if (*(piVar2 + 0x3d) != '\\0') {\n                    (**(*var_4h + 0x18))(var_4h);\n                }\n                if (*(piVar2 + 0xf) != '\\0') {\n                    (**(*var_4h + 0x14))(var_4h);\n                }\n            }\n        }\n        (*_sym.imp.ole32.dll_OleSetContainedObject)(piVar2[3], 0);\n        (***piVar2[3])(piVar2[3], 0x481930, &arg_8h);\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 0x1c))(arg_8h, 1, 2, 0);\n            (**(*arg_8h + 8))(arg_8h);\n            arg_8h = NULL;\n        }\n        (**(*piVar2[3] + 0x50))(piVar2[3], piVar2[0xe]);\n        (**(*piVar2[3] + 0xc))(piVar2[3], 0);\n        (**(*piVar2[3] + 0x14))(piVar2[3], 0x483f68, 0);\n        iVar3 = (*_sym.imp.USER32.dll_IsWindow)(piVar2[2]);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(piVar2[2]);\n        }\n        (**(*piVar2[3] + 8))(piVar2[3]);\n        piVar2[3] = 0;\n    }\n    piVar2[2] = 0;\n    *(piVar2 + 0xf) = 0;\n    if (piVar2[0xd] != 0) {\n        fcn.0041137c(piVar2[0xd]);\n        piVar2[0xd] = 0;\n    }\n    if (piVar2[0xb] != 0) {\n        fcn.0044525d(piVar2[0xb]);\n        piVar2[0xb] = 0;\n    }\n    if (piVar2[0xc] != 0) {\n        fcn.0041137c(piVar2[0xc]);\n        piVar2[0xc] = 0;\n    }\n    if (piVar2[10] != 0) {\n        fcn.0041137c(piVar2[10]);\n        piVar2[10] = 0;\n    }\n    return;\n}\n",
        "token_count": 787
    },
    "004453db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004453db(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    \n    fcn.004360cc((-(arg_8h != -0x7ff8fff2) & 6) + 0xc0000017);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 82
    },
    "004453f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004453f9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    \n    if (arg_8h != arg_ch) {\n        fcn.00410c00();\n        if (*(arg_8h + 0xc) < *(arg_ch + 8)) {\n            uVar2 = fcn.00431cd6(*(arg_ch + 8));\n            *(arg_8h + 0xc) = uVar2;\n            uVar3 = fcn.00411777(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n            fcn.0041137c(*(arg_8h + 4));\n            *(arg_8h + 4) = uVar3;\n        }\n        iVar1 = *(arg_ch + 8);\n        uVar2 = 0;\n        *(arg_8h + 8) = iVar1;\n        if (iVar1 != 0) {\n            do {\n                puVar4 = fcn.00411777(4);\n                if (puVar4 == NULL) {\n                    puVar4 = NULL;\n                }\n                else {\n                    *puVar4 = **(*(arg_ch + 4) + uVar2 * 4);\n                }\n                *(*(arg_8h + 4) + uVar2 * 4) = puVar4;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(arg_8h + 8));\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 374
    },
    "004456fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004456fa(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *(arg_8h + 4);\n    uVar2 = fcn.00411361(arg_ch);\n    if (uVar1 == uVar2) {\n        uVar2 = fcn.0040d430();\n        if (uVar2 == 0) {\n            return 1;\n        }\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 127
    },
    "00445733": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445733(int32_t arg_8h, int32_t hWnd)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint lpClassName;\n    \n    (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, &lpClassName, 0x100);\n    arg_8h_00 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar1 = fcn.004132dc(*(arg_8h + 0x8c), &lpClassName);\n    if ((iVar1 == 0) && (*(arg_8h + 0x130) = *(arg_8h + 0x130) + 1,  hWnd == *(arg_8h + 0xd8))) {\n        iVar1 = fcn.00436283(arg_8h_00, *(arg_8h + 0xd4));\n        if (iVar1 != 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 219
    },
    "004457c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004457c6(uint arg_8h)\n\n{\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 39
    },
    "004457fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004457fe(uint *hWnd, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint lpClassName;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetParent)(*hWnd);\n    (*_sym.imp.USER32.dll_GetClassNameW)(uVar1, &lpClassName, 0x100);\n    iVar2 = fcn.004132dc(&lpClassName, 0x484048);\n    if (iVar2 != 0) {\n        return 0;\n    }\n    iVar2 = fcn.0041164b(*arg_ch, L\"largeicons\");\n    if (iVar2 == 0) {\n        uVar3 = 0x7029;\n    }\n    else {\n        iVar2 = fcn.0041164b(*arg_ch, L\"details\");\n        if (iVar2 == 0) {\n            uVar3 = 0x702c;\n        }\n        else {\n            iVar2 = fcn.0041164b(*arg_ch, L\"smallicons\");\n            if (iVar2 == 0) {\n                uVar3 = 0x702a;\n            }\n            else {\n                iVar2 = fcn.0041164b(*arg_ch, L\"list\");\n                if (iVar2 != 0) {\n                    return 1;\n                }\n                uVar3 = 0x702b;\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x111, uVar3, iVar2);\n    return 1;\n}\n",
        "token_count": 352
    },
    "00446d5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446d5f(uint32_t arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_10h != NULL) {\n        do {\n            if (arg_10h[1] < arg_8h) {\n                return 1;\n            }\n            iVar1 = fcn.0043fc4f(arg_10h[1], arg_ch, arg_14h, arg_18h);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            arg_10h = *arg_10h;\n        } while (arg_10h != NULL);\n    }\n    return 1;\n}\n",
        "token_count": 172
    },
    "00447315": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447315(uint hdc, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar4 = arg_ch;\n    var_4h = 0;\n    arg_ch = -2;\n    var_ch = 1;\n    (*_sym.imp.GDI32.dll_BeginPath)(hdc);\n    *0x4a86ec = 1;\n    if (iVar4 != 0) {\n        do {\n            puVar5 = NULL;\n            fcn.00446da3(hdc, var_4h, arg_ch, 0, var_ch);\n            if (0 < *(iVar4 + 0xc)) {\n                var_8h = iVar4 + 0x10;\n                iVar2 = -iVar4;\n                puVar3 = iVar4 + 0x810;\n                do {\n                    if (7 < *puVar3) {\n                        if (puVar5 != puVar3 + iVar2 + -0x810) {\n                            (*_sym.imp.GDI32.dll_PolyDraw)\n                                      (hdc, iVar4 + 0x10 + puVar5 * 8, puVar5 + iVar4 + 0x810, \n                                       (puVar3 + iVar2 + -0x810) - puVar5);\n                        }\n                        uVar1 = *puVar3;\n                        puVar5 = puVar3 + iVar2 + -0x80f;\n                        if (uVar1 != 0x14) {\n                            if (uVar1 == 8) {\n                                if (var_4h != -1) {\n                                    fcn.0043035c(hdc, arg_ch);\n                                }\n                                if (*var_8h != -1) {\n                                    var_4h = *var_8h;\n                                }\n                                if (var_8h[1] != -1) {\n                                    arg_ch = var_8h[1];\n                                }\n                                fcn.00446da3(hdc, var_4h, arg_ch, 0, var_ch);\n                            }\n                            else if (uVar1 == 0x18) {\n                                var_ch = *var_8h;\n                            }\n                        }\n                    }\n                    var_8h = var_8h + 2;\n                    puVar3 = puVar3 + 1;\n                } while (puVar3 + iVar2 + -0x810 < *(iVar4 + 0xc));\n            }\n            if (puVar5 != *(iVar4 + 0xc)) {\n                (*_sym.imp.GDI32.dll_PolyDraw)\n                          (hdc, iVar4 + 0x10 + puVar5 * 8, puVar5 + iVar4 + 0x810, *(iVar4 + 0xc) - puVar5);\n            }\n            iVar4 = *(iVar4 + 4);\n        } while (iVar4 != 0);\n    }\n    fcn.0043035c(hdc, arg_ch);\n    return;\n}\n",
        "token_count": 702
    },
    "0044792a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044792a(uint arg_8h)\n\n{\n    fcn.00402260();\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 47
    },
    "0044798a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044798a(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    \n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h_00 = fcn.00411777(0x14);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.00447949(arg_8h_00, arg_ch);\n        *arg_8h = uVar1;\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 158
    },
    "004479cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004479cb(uint arg_8h)\n\n{\n    fcn.00447974(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 50
    },
    "0044a04b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044a04b(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    \n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h_00 = fcn.00411777(0x28);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.00443387(arg_8h_00, arg_ch);\n        *arg_8h = uVar1;\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 159
    },
    "0044a13f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044a13f(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    if (arg_ch == NULL) {\n        fcn.004453db(0x80004005);\n    }\n    else {\n        iVar1 = fcn.0041581b(&var_24h, arg_8h);\n        if (iVar1 != 0) {\n            return NULL;\n        }\n    }\n    puVar2 = &var_24h;\n    puVar3 = arg_ch;\n    for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return arg_ch;\n}\n",
        "token_count": 209
    },
    "0044a2ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044a2ac(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    \n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h_00 = fcn.00411777(0x1c);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.0044a26d(arg_8h_00, arg_ch);\n        *arg_8h = uVar1;\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 162
    },
    "0044a449": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044a449(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0040c8f0();\n    fcn.00432848(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 66
    },
    "0044a998": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044a998(uint *arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[5] = 0;\n    arg_8h[6] = 0;\n    arg_8h[7] = 0;\n    fcn.00401c30();\n    fcn.00401c30();\n    fcn.004423b3(arg_8h + 0x11);\n    arg_8h[0x15] = 0;\n    fcn.0044a957(arg_8h + 0x16, &arg_1ch);\n    *(arg_8h + 0x34) = arg_18h;\n    *0x4a7f14 = *0x4a7f14 + 1;\n    arg_8h[0x35] = 0;\n    arg_8h[0x36] = *0x4a7f14;\n    *(arg_8h + 0x37) = 1;\n    *(arg_8h + 0xc) = arg_8h[0xe] == 0;\n    if ((arg_14h & 1) != 0) {\n        arg_8h[0x15] = arg_8h[0x15] | 0x80000000;\n    }\n    if ((arg_14h & 2) != 0) {\n        arg_8h[0x15] = arg_8h[0x15] | 0x3000;\n    }\n    if ((arg_14h & 4) == 0) {\ncode_r0x0044aa49:\n        if ((arg_14h & 8) == 0) goto code_r0x0044aa55;\n    }\n    else if ((arg_14h & 8) == 0) {\n        arg_8h[0x15] = arg_8h[0x15] | 1;\n        goto code_r0x0044aa49;\n    }\n    if ((arg_14h & 4) == 0) {\n        arg_8h[0x15] = arg_8h[0x15] | 2;\n    }\ncode_r0x0044aa55:\n    if ((arg_14h & 0x10) != 0) {\n        *(arg_8h + 0x37) = 0;\n    }\n    fcn.0040dee0();\n    return arg_8h;\n}\n",
        "token_count": 633
    },
    "0044aa71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044aa71(uint arg_8h)\n\n{\n    fcn.00443d25(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 52
    },
    "0044aab7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044aab7(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    \n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    puVar2 = fcn.00411777(0x10);\n    if (puVar2 != NULL) {\n        *puVar2 = *arg_ch;\n        puVar2[1] = arg_ch[1];\n        puVar2[2] = arg_ch[2];\n        piVar1 = arg_ch[3];\n        puVar2[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n        *arg_8h = puVar2;\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 202
    },
    "0044abab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044abab(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_10h;\n    \n    fcn.00401c30();\n    fcn.0044ab0c(in_ECX + -0x380, &var_10h);\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 79
    },
    "0044ac43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ac43(uint arg_8h)\n\n{\n    fcn.00410d40();\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 48
    },
    "0044ae1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044ae1b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_8h + 0x14) == 0) {\n        iVar1 = fcn.00414b72(arg_8h + 0x24, 0x487178);\n        *(arg_8h + 0x1c) = iVar1;\n        if (iVar1 == 0) {\n            return 2;\n        }\n    }\n    else {\n        *(arg_8h + 0x1c) = 0;\n    }\n    if (*(arg_8h + 0x18) == 0) {\n        iVar1 = fcn.00414b72(arg_8h + 0x22e, 0x487180);\n        *(arg_8h + 0x20) = iVar1;\n        if (iVar1 == 0) {\n            if (*(arg_8h + 0x1c) != 0) {\n                fcn.00414bf6(*(arg_8h + 0x1c));\n            }\n            return 3;\n        }\n    }\n    else {\n        *(arg_8h + 0x20) = 0;\n    }\n    *(arg_8h + 0xc) = 0;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0x43c) = 0;\n    *(arg_8h + 0x440) = 0;\n    *(arg_8h + 0x444) = 0;\n    *(arg_8h + 0x44c) = 0;\n    *(arg_8h + 0x450) = 0;\n    *(arg_8h + 0x448) = 0;\n    *(arg_8h + 0x460) = 0;\n    *(arg_8h + 0x464) = 0;\n    iVar1 = fcn.0043276b(arg_8h, arg_8h + 0x10);\n    if (iVar1 != 0) {\n        if (*(arg_8h + 0x1c) != 0) {\n            fcn.00414bf6(*(arg_8h + 0x1c));\n        }\n        if (*(arg_8h + 0x20) != 0) {\n            fcn.00414bf6(*(arg_8h + 0x20));\n        }\n        return 1;\n    }\n    iVar1 = fcn.00432704(arg_8h);\n    if (iVar1 != 0) {\n        if (*(arg_8h + 0x1c) != 0) {\n            fcn.00414bf6(*(arg_8h + 0x1c));\n        }\n        if (*(arg_8h + 0x20) != 0) {\n            fcn.00414bf6(*(arg_8h + 0x20));\n        }\n        return iVar1;\n    }\n    fcn.0044ad31(arg_8h);\n    fcn.004326bf(arg_8h);\n    if (*(arg_8h + 0x1c) != 0) {\n        fcn.00414bf6(*(arg_8h + 0x1c));\n    }\n    if (*(arg_8h + 0x20) != 0) {\n        fcn.00414bf6(*(arg_8h + 0x20));\n    }\n    return 0;\n}\n",
        "token_count": 782
    },
    "0044b04b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044b04b(uint arg_8h)\n\n{\n    fcn.00443532(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 52
    },
    "0044b0a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044b0a3(int32_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00432b85(arg_8h);\n    if ((cVar1 != '\\0') && (*arg_8h != 0)) {\n        fcn.00442ef7(*arg_8h);\n    }\n    iVar2 = fcn.00411777(0x10);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00401c30();\n        *arg_8h = iVar2;\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 172
    },
    "0044b35d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044b35d(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    cVar1 = '\\0';\n    if (*(arg_8h + 0x20) != 0) {\n        cVar1 = fcn.0044b26f(*(arg_8h + 0x20));\n        if (cVar1 == '\\0') {\n            fcn.00432bdb(arg_8h + 8);\n            fcn.00432cb4(*(arg_8h + 0x20));\n            *(arg_8h + 0x20) = 0;\n        }\n        else {\n            uVar3 = 2;\n        }\n    }\n    cVar2 = fcn.00432c18(arg_8h);\n    if (cVar2 == '\\0') {\n        if (*(arg_8h + 0x24) != 0) {\n            cVar1 = fcn.0044b26f(*(arg_8h + 0x24));\n            if (cVar1 == '\\0') {\n                fcn.00432bdb(arg_8h + 0x10);\n                fcn.00432cb4(*(arg_8h + 0x24));\n                *(arg_8h + 0x24) = 0;\n            }\n            else {\n                uVar3 = uVar3 | 4;\n            }\n        }\n    }\n    else if (cVar1 == '\\0') {\n        fcn.00432bdb(arg_8h + 0x10);\n    }\n    else {\n        uVar3 = uVar3 | 8;\n    }\n    cVar1 = fcn.00432bf8(arg_8h);\n    if (cVar1 != '\\0') {\n        uVar3 = uVar3 | 1;\n    }\n    if (uVar3 == 0) {\n        *(arg_8h + 4) = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 460
    },
    "0044b4a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b4a8(int32_t arg_8h)\n\n{\n    fcn.00443281(arg_8h);\n    fcn.00432bdb(arg_8h + 8);\n    fcn.00432bdb(arg_8h + 0x10);\n    fcn.00432bdb(arg_8h + 0x18);\n    *(arg_8h + 4) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "0044b598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044b598(uint arg_8h)\n\n{\n    fcn.004091e0();\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 48
    },
    "0044b6ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044b6ef(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044b613(arg_8h);\n    if (iVar1 == 1) {\n        (*_sym.imp.USER32.dll_mouse_event)(4, 0, 0, 0, 0);\n        return 1;\n    }\n    if (iVar1 != 2) {\n        if (iVar1 != 3) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_mouse_event)(0x40, 0, 0, 0, 0);\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_mouse_event)(0x10, 0, 0, 0, 0);\n    return 1;\n}\n",
        "token_count": 179
    },
    "0044b753": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044b753(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044b613(arg_8h);\n    if (iVar1 == 1) {\n        (*_sym.imp.USER32.dll_mouse_event)(2, 0, 0, 0, 0);\n        return 1;\n    }\n    if (iVar1 != 2) {\n        if (iVar1 != 3) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_mouse_event)(0x20, 0, 0, 0, 0);\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_mouse_event)(8, 0, 0, 0, 0);\n    return 1;\n}\n",
        "token_count": 176
    },
    "0044b7b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delete directory"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044b7b7(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpPathName;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.004102f0();\n    uVar1 = fcn.00433f41(&lpPathName);\n    if (uVar1 == '\\0') {\n        return uVar1;\n    }\n    if (arg_ch == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)(&lpPathName);\n        return uVar1 & 0xffffff00 | uVar1 != 0;\n    }\n    iVar2 = fcn.00411361(&lpPathName);\n    *(&lpPathName + iVar2 * 2 + 2) = 0;\n    var_18h = &lpPathName;\n    var_14h = 0;\n    var_ah = 0;\n    var_6h = 0;\n    var_eh = 0;\n    lpFileOp = 0;\n    var_1ch = 3;\n    var_10h = 0x614;\n    uVar1 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 349
    },
    "0044b859": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044b859(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.004102f0();\n    fcn.004102f0();\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpExistingFileName, &lpNewFileName);\n    if (iVar2 == 0) {\n        if (arg_10h != '\\0') {\n            iVar2 = fcn.004132dc(&lpExistingFileName, &lpNewFileName);\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_MoveFileW)(&lpExistingFileName, &lpNewFileName);\n            }\n            return true;\n        }\n    }\n    else {\n        cVar1 = fcn.00433f41(&lpExistingFileName);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00433f41(&lpNewFileName);\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.00433b76(&lpNewFileName);\n                if (cVar1 == '\\0') {\n                    return false;\n                }\n                cVar1 = fcn.00433f41(&lpNewFileName);\n                bVar3 = cVar1 != '\\0';\n            }\n            else {\n                bVar3 = arg_10h != '\\0';\n            }\n            if (bVar3) {\n                fcn.004116d6(&lpExistingFileName, L\"\\\\*.*\");\n                iVar2 = fcn.00411361(&lpExistingFileName);\n                *(&lpExistingFileName + iVar2 * 2 + 2) = 0;\n                iVar2 = fcn.00411361(&lpNewFileName);\n                *(&lpNewFileName + iVar2 * 2 + 2) = 0;\n                var_18h = &lpExistingFileName;\n                var_14h = &lpNewFileName;\n                var_ah = 0;\n                var_6h = 0;\n                var_eh = 0;\n                lpFileOp = 0;\n                var_1ch = 2;\n                var_10h = 0x614;\n                iVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n                return iVar2 == 0;\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 600
    },
    "0044be3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044be3c(int32_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00434ff6(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.0044bd2a(arg_8h, arg_8h[1] + 1);\n    }\n    else {\n        *arg_8h[3] = *arg_8h[3] + -1;\n        fcn.0043500b(arg_8h);\n        iVar2 = fcn.00444b08(arg_8h[1] + 2);\n        arg_8h[2] = iVar2;\n        iVar2 = fcn.00411777(iVar2);\n        fcn.00411000(iVar2, *arg_8h, arg_8h[1] + 1);\n        *arg_8h = iVar2;\n    }\n    *(arg_8h[1] + *arg_8h) = arg_ch;\n    arg_8h[1] = arg_8h[1] + 1;\n    *(arg_8h[1] + *arg_8h) = 0;\n    return arg_8h;\n}\n",
        "token_count": 292
    },
    "0044c431": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c431(uint arg_8h)\n\n{\n    fcn.0044b0f0(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 54
    },
    "0044c44e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c44e(uchar *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004135bf(arg_ch, L\"#notrayicon\", 0xb);\n    if (iVar1 == 0) {\n        *arg_8h = 1;\n        return 1;\n    }\n    iVar1 = fcn.004135bf(arg_ch, L\"#requireadmin\", 0xd);\n    if (iVar1 == 0) {\n        arg_8h[1] = 1;\n    }\n    else {\n        iVar1 = fcn.004135bf(arg_ch, L\"#OnAutoItStartRegister\", 0x16);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00410330();\n            fcn.004448a5(iVar1);\n            fcn.00444901(iVar1);\n            iVar2 = fcn.00411361(iVar1);\n            if (*(iVar1 + -2 + iVar2 * 2) == 0x22) {\n                arg_8h_00 = iVar1 + 2;\n                *(iVar1 + -2 + iVar2 * 2) = 0;\n                fcn.004448a5(arg_8h_00);\n                fcn.00444901(arg_8h_00);\n                (**(**(arg_8h + 4) + 8))(arg_8h_00);\n                fcn.0041137c(iVar1);\n                return 1;\n            }\n            (**(**(arg_8h + 4) + 8))(iVar1);\n            fcn.0041137c(iVar1);\n            return 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 405
    },
    "0044c53e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c53e(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h[1];\n    if (iVar1 != 0) {\n        fcn.00444c08(arg_8h);\n        fcn.00411000(*arg_8h, *arg_8h + iVar1, (arg_8h[1] - iVar1) + 1);\n        arg_8h[1] = arg_8h[1] - iVar1;\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0044c572": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c572(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00434fe2(arg_8h, arg_ch);\n    if (cVar1 == '\\0') {\n        iVar2 = fcn.00444b08(arg_ch + 1);\n        arg_8h[2] = iVar2;\n        if (*arg_8h != 0) {\n            fcn.0041137c(*arg_8h);\n        }\n        iVar2 = fcn.00411777(arg_8h[2]);\n        *arg_8h = iVar2;\n        *(iVar2 + arg_ch) = 0;\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0044c5bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044c5bb(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    fcn.00444c08(arg_8h);\n    if (arg_ch < arg_8h[1]) {\n        return *arg_8h + arg_ch;\n    }\n    return *arg_8h + arg_8h[1];\n}\n",
        "token_count": 86
    },
    "0044c8b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c8b7(uint arg_8h)\n\n{\n    fcn.0044527a(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 54
    },
    "0044c974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c974(uint arg_8h)\n\n{\n    fcn.0044c957(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 52
    },
    "0044ca16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044ca16(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004456fa(arg_8h, arg_ch);\n    return uVar1 & 0xffffff00 | uVar1 == '\\0';\n}\n",
        "token_count": 71
    },
    "0044ca32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ca32(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    \n    if (*arg_8h != 0) {\n        fcn.004457c6(*arg_8h);\n    }\n    puVar1 = fcn.00411777(4);\n    if (puVar1 != NULL) {\n        *puVar1 = arg_ch;\n        *arg_8h = puVar1;\n        return 1;\n    }\n    *arg_8h = 0;\n    return 1;\n}\n",
        "token_count": 128
    },
    "0044ca6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044ca6c(uint *arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    fcn.004013c0();\n    fcn.00411000(*arg_ch, *arg_8h, arg_8h[1] * 2);\n    fcn.00411000(*arg_ch + arg_8h[1] * 2, *arg_10h, (arg_10h[1] + 1) * 2);\n    arg_ch[1] = arg_8h[1] + arg_10h[1];\n    return arg_ch;\n}\n",
        "token_count": 146
    },
    "004500e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004500e7(int32_t arg_8h, int32_t **arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t **ppiVar1;\n    char cVar2;\n    int32_t var_14h;\n    uint var_10h;\n    \n    arg_8h_00 = arg_ch;\n    var_14h = arg_8h;\n    arg_ch = *0x4a86fc;\n    while( true ) {\n        ppiVar1 = arg_ch;\n        cVar2 = fcn.00441fc1(&arg_ch, 0);\n        if (cVar2 == '\\0') {\n            cVar2 = fcn.004362d6(arg_8h_00);\n            if (cVar2 != '\\0') {\n                return 0;\n            }\n            fcn.0044ab95(&var_14h);\n            fcn.0040e410(arg_8h_00);\n            fcn.00447a2c(0x4a86fc, &var_14h);\n            fcn.00402260();\n            return 1;\n        }\n        if (**ppiVar1 == var_14h) break;\n        fcn.00440543(&arg_ch, &arg_8h);\n    }\n    cVar2 = fcn.004362d6(arg_8h_00);\n    if (cVar2 != '\\0') {\n        fcn.004479e8(0x4a86fc, &arg_ch);\n        return 1;\n    }\n    fcn.0040e410(arg_8h_00);\n    return 1;\n}\n",
        "token_count": 362
    },
    "004510d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004510d7(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_4h;\n    \n    cVar1 = fcn.004417f1(0x4a8630, arg_8h, &var_4h, &arg_8h);\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    fcn.0040e410(arg_ch);\n    return 1;\n}\n",
        "token_count": 108
    },
    "004513d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004513d8(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    int32_t *piVar2;\n    \n    piVar1 = arg_10h;\n    arg_8h_00 = fcn.00411777(0x24);\n    if (arg_8h_00 == 0) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = fcn.0044ab95(arg_8h_00);\n    }\n    arg_10h = piVar2;\n    fcn.0040e410(piVar1 + arg_ch * 4 + 0x57);\n    *piVar2 = arg_ch;\n    piVar2[5] = *piVar1;\n    piVar2[6] = 0;\n    piVar2[7] = arg_14h;\n    piVar2[8] = arg_18h;\n    fcn.0043471a(arg_8h + 0x2c, &arg_10h);\n    return;\n}\n",
        "token_count": 278
    },
    "0045152e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045152e(uint arg_8h)\n\n{\n    fcn.00451500(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 51
    },
    "00451678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00451678(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_124h;\n    uint var_24h;\n    \n    if (arg_10h == 0) {\n        fcn.00401c30();\n        return arg_ch;\n    }\n    fcn.0044a13f(arg_8h, &var_24h);\n    iVar1 = fcn.00416508(&var_124h, 0x80, arg_10h, &var_24h);\n    if (iVar1 == 0) {\n        var_124h._0_2_ = 0;\n    }\n    fcn.00401c30();\n    return arg_ch;\n}\n",
        "token_count": 182
    },
    "00451bf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451bf4(uint *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.0044c53e(arg_8h);\n        return;\n    }\n    uVar2 = fcn.004136e0(arg_ch);\n    arg_8h[1] = uVar2;\n    cVar1 = fcn.00434ff6(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.0044c572(arg_8h, uVar2);\n    }\n    else {\n        *arg_8h[3] = *arg_8h[3] + -1;\n        fcn.0043500b(arg_8h);\n        uVar2 = fcn.00444b08(arg_8h[1] + 1);\n        arg_8h[2] = uVar2;\n        uVar2 = fcn.00411777(uVar2);\n        *arg_8h = uVar2;\n    }\n    fcn.00411000(*arg_8h, arg_ch, arg_8h[1] + 1);\n    return;\n}\n",
        "token_count": 275
    },
    "00451c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451c6c(uint arg_8h)\n\n{\n    fcn.0044a8b5(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 55
    },
    "00451d6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00451d6d(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    \n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h_00 = fcn.00411777(0xe0);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.00451c89(arg_8h_00, arg_ch);\n        *arg_8h = uVar1;\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 160
    },
    "00451db1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451db1(uint arg_8h)\n\n{\n    fcn.00451d57(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 52
    },
    "00452095": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452095(uint arg_8h)\n\n{\n    fcn.0044b4fe(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 52
    },
    "004520c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004520c8(uint arg_8h)\n\n{\n    fcn.004520b2(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 52
    },
    "00452103": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452103(uint arg_8h)\n\n{\n    fcn.004520e5(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 51
    },
    "00452120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452120(uint arg_8h)\n\n{\n    fcn.00402260();\n    fcn.00402260();\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 46
    },
    "00452144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452144(uint arg_8h)\n\n{\n    fcn.00452120(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 50
    },
    "0045218e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045218e(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_430h;\n    uint var_220h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puVar1 = arg_8h;\n    var_4h = 0;\n    while( true ) {\n        fcn.00414eb4(&var_ch, 1, 4, *puVar1);\n        fcn.0044ac61(&var_ch, 4, 0x18ee);\n        var_8h._0_1_ = 0;\n        iVar2 = fcn.00414ee0(&var_ch, \"FILE\");\n        if (iVar2 != 0) {\n            return 6;\n        }\n        var_4h = var_4h + 1;\n        fcn.00414eb4(&arg_8h, 4, 1, *puVar1);\n        uVar3 = arg_8h ^ 0xadbc;\n        iVar2 = uVar3 * 2;\n        fcn.00414eb4(&var_220h, 1, iVar2, *puVar1);\n        fcn.0044ac61(&var_220h, iVar2, uVar3 + 0xb33f);\n        *(&var_220h + iVar2) = 0;\n        fcn.00411707(&var_430h, &var_220h);\n        fcn.00414eb4(&arg_8h, 4, 1, *puVar1);\n        uVar3 = arg_8h ^ 0xf820;\n        iVar2 = uVar3 * 2;\n        fcn.00414eb4(&var_220h, 1, iVar2, *puVar1);\n        fcn.0044ac61(&var_220h, iVar2, uVar3 + 0xf479);\n        *(&var_220h + iVar2) = 0;\n        fcn.00411707(arg_10h, &var_220h);\n        arg_8h_00 = arg_ch;\n        iVar2 = fcn.004132dc(&var_430h, arg_ch);\n        if (iVar2 == 0) break;\n        iVar2 = fcn.004132dc(arg_8h_00, 0x4871a8);\n        if ((iVar2 == 0) && (var_4h == 0)) {\n            return 0;\n        }\n        fcn.00415281(*puVar1, 1, 1);\n        fcn.00414eb4(&var_10h, 4, 1, *puVar1);\n        var_10h = var_10h ^ 0x87bc;\n        fcn.00415281(*puVar1, var_10h + 0x18, 1);\n    }\n    return 0;\n}\n",
        "token_count": 705
    },
    "00452aff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00452aff(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    \n    fcn.004091e0();\n    arg_8h[2] = 10;\n    arg_8h_00 = fcn.00411777(0x18);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.0044b52a(arg_8h_00, arg_ch);\n        *arg_8h = uVar1;\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 156
    },
    "00452b5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00452b5d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.004091e0();\n    *(arg_8h + 8) = 4;\n    iVar1 = fcn.00411777(0x10);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00401c30();\n        *(arg_8h + 0xc) = uVar2;\n        return arg_8h;\n    }\n    *(arg_8h + 0xc) = 0;\n    return arg_8h;\n}\n",
        "token_count": 150
    },
    "00452ba7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00452ba7(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    fcn.004091e0();\n    piVar1 = fcn.00411777(8);\n    *arg_8h = piVar1;\n    *piVar1 = arg_ch;\n    if (arg_ch != 0) {\n        iVar2 = fcn.00411777(**arg_8h);\n        (*arg_8h)[1] = iVar2;\n        fcn.004130e0((*arg_8h)[1], 0, **arg_8h);\n        arg_8h[2] = 0xb;\n        return (*arg_8h)[1];\n    }\n    iVar2 = fcn.00411777(1);\n    (*arg_8h)[1] = iVar2;\n    *(*arg_8h)[1] = 0;\n    arg_8h[2] = 0xb;\n    return (*arg_8h)[1];\n}\n",
        "token_count": 241
    },
    "00452eb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452eb8(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    for (; arg_ch != 0; arg_ch = *(arg_ch + 0x1c)) {\n        iVar1 = fcn.00411777(0x20);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = fcn.0044b08e(iVar1);\n        }\n        *arg_8h = iVar1;\n        fcn.0040e410(arg_ch);\n        *(*arg_8h + 0x10) = *(arg_ch + 0x10);\n        *(*arg_8h + 0x14) = *(arg_ch + 0x14);\n        *(*arg_8h + 0x18) = 0;\n        *(*arg_8h + 0x1c) = 0;\n        fcn.00452eb8(*arg_8h + 0x18, *(arg_ch + 0x18));\n        arg_8h = *arg_8h + 0x1c;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 280
    },
    "00452fba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452fba(uint *param_1)\n\n{\n    code *pcVar1;\n    \n    *param_1 = 0x487110;\n    fcn.0044b2c2(param_1);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[0xb]);\n    (*pcVar1)(param_1[0xc]);\n    fcn.0041137c(param_1[2]);\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 5);\n    *param_1 = 0x487114;\n    return;\n}\n",
        "token_count": 148
    },
    "00452ffb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452ffb(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    *arg_8h = 0x4870e4;\n    *(arg_8h + 2) = 1;\n    if (arg_8h[0x11] != 0) {\n        fcn.0041137c(arg_8h[0x11]);\n        arg_8h[0x11] = 0;\n    }\n    fcn.00432ccb(arg_8h);\n    piVar1 = arg_8h[4];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x18))(piVar1, arg_8h[3]);\n        (**(*arg_8h[4] + 8))(arg_8h[4]);\n        arg_8h[4] = 0;\n    }\n    piVar1 = arg_8h[10];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n        arg_8h[10] = 0;\n    }\n    fcn.004091e0();\n    arg_8h[8] = 1;\n    arg_8h[6] = 0;\n    fcn.004091e0();\n    return;\n}\n",
        "token_count": 295
    },
    "00453308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "move file"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00453308(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_a54h;\n    uint var_848h;\n    uint var_644h;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint var_28h;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.004102f0();\n    fcn.004102f0();\n    uVar2 = fcn.00433f41(&lpExistingFileName);\n    if (uVar2 == '\\0') {\n        return uVar2;\n    }\n    uVar2 = fcn.00433f41(&lpNewFileName);\n    if (uVar2 != '\\0') {\n        if (arg_10h == '\\0') goto code_r0x00453488;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpExistingFileName, &lpNewFileName);\n        if (iVar3 == 0) {\n            iVar3 = fcn.004132dc(&lpExistingFileName, &lpNewFileName);\n            if (iVar3 != 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_MoveFileW)(&lpExistingFileName, &lpNewFileName);\n                return uVar2 & 0xffffff00 | uVar2 != 0;\n            }\n            return 1;\n        }\n        fcn.00413bbe(&lpExistingFileName, &var_28h, &var_a54h, &var_848h, &var_644h);\n        fcn.004116d6(&lpNewFileName, 0x4846b4);\n        fcn.004116d6(&lpNewFileName, &var_848h);\n        if (var_644h != 0) {\n            fcn.004116d6(&lpNewFileName, &var_644h);\n        }\n    }\n    cVar1 = fcn.00433eb1(&lpExistingFileName, &lpNewFileName);\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.004132dc(&lpExistingFileName, &lpNewFileName);\n        if (uVar2 != 0) {\n            iVar3 = fcn.00411361(&lpExistingFileName);\n            *(&lpExistingFileName + iVar3 * 2 + 2) = 0;\n            iVar3 = fcn.00411361(&lpNewFileName);\n            var_18h = &lpExistingFileName;\n            *(&lpNewFileName + iVar3 * 2 + 2) = 0;\n            var_14h = &lpNewFileName;\n            var_ah = 0;\n            var_6h = 0;\n            var_eh = 0;\n            lpFileOp = 0;\n            var_1ch = 1;\n            var_10h = 0x614;\n            uVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n            return uVar2 & 0xffffff00 | uVar2 == 0;\n        }\n    }\n    else {\n        uVar2 = fcn.0044b859(&lpExistingFileName, &lpNewFileName, 1);\n        if (uVar2 != '\\0') {\n            uVar2 = fcn.0044b7b7(&lpExistingFileName, 1);\n            return uVar2 & 0xffffff00 | uVar2 != '\\0';\n        }\n    }\ncode_r0x00453488:\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 848
    },
    "00453500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453500(int32_t arg_8h, uint arg_ch)\n\n{\n    if (arg_8h + 0xeU < 0xc) {\n        fcn.0040e410(arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 65
    },
    "0045358b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045358b(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t *piVar2;\n    \n    iVar1 = arg_ch;\n    arg_8h_00 = fcn.00411777(0x14);\n    if (arg_8h_00 == 0) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = fcn.0044ab95(arg_8h_00);\n    }\n    arg_ch = piVar2;\n    fcn.0040e410(arg_8h + 0x184 + iVar1 * 0x10);\n    *piVar2 = iVar1;\n    fcn.0043471a(arg_8h + 0x8c, &arg_ch);\n    return;\n}\n",
        "token_count": 198
    },
    "004535e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004535e4(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t *piVar2;\n    \n    iVar1 = arg_ch;\n    arg_8h_00 = fcn.00411777(0x14);\n    if (arg_8h_00 == 0) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = fcn.0044ab95(arg_8h_00);\n    }\n    arg_ch = piVar2;\n    fcn.0040e410(*(arg_8h + 0x1b4 + iVar1 * 4) + 8);\n    *piVar2 = iVar1;\n    fcn.0043471a(arg_8h + 0x8c, &arg_ch);\n    return;\n}\n",
        "token_count": 203
    },
    "00453c1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453c1d(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    iVar1 = arg_8h[1];\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, *arg_8h, iVar1 + 1, 0, 0, 0, 0);\n    if (arg_8h_00 == 0) {\n        fcn.00444ac8(arg_ch);\n        return;\n    }\n    arg_ch_00 = fcn.00411777(arg_8h_00);\n    iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, *arg_8h, iVar1 + 1, arg_ch_00, arg_8h_00, 0, 0);\n    fcn.00453ba2(arg_ch, arg_ch_00, iVar1 + -1);\n    fcn.0041137c(arg_ch_00);\n    return;\n}\n",
        "token_count": 261
    },
    "004542ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004542ee(uint *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00411777(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x484390;\n        puVar1[2] = 1;\n        puVar1[1] = arg_8h;\n    }\n    *arg_8h = puVar1;\n    puVar1 = fcn.00411777(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x4842ec;\n        puVar1[1] = arg_8h;\n    }\n    arg_8h[1] = puVar1;\n    puVar1 = fcn.00411777(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x4843c8;\n        puVar1[1] = arg_8h;\n    }\n    arg_8h[2] = puVar1;\n    puVar1 = fcn.00411777(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x484308;\n        puVar1[1] = arg_8h;\n        puVar1[2] = arg_ch;\n    }\n    arg_8h[5] = arg_ch;\n    arg_8h[3] = puVar1;\n    *(arg_8h + 6) = 0;\n    arg_8h[4] = 0;\n    return arg_8h;\n}\n",
        "token_count": 406
    },
    "00456414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456414(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *arg_ch_00;\n    uint *arg_10h;\n    uint var_4h;\n    \n    arg_10h = &var_4h;\n    arg_ch_00 = &arg_8h;\n    uVar1 = fcn.0040c8f0();\n    iVar2 = fcn.00443e26(uVar1, arg_ch_00, arg_10h);\n    uVar1 = arg_8h;\n    if (iVar2 != 0) {\n        fcn.0040e8e0();\n        fcn.0041137c(uVar1);\n        return 0;\n    }\n    fcn.00403f40(1, 0);\n    fcn.0040e8e0();\n    return 0;\n}\n",
        "token_count": 203
    },
    "00456482": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456482(uint arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint *arg_ch_00;\n    uint *puVar2;\n    uint var_4h;\n    \n    puVar2 = &arg_8h;\n    arg_ch_00 = &var_4h;\n    arg_8h_00 = fcn.0040c8f0();\n    iVar1 = fcn.00443e26(arg_8h_00, arg_ch_00, puVar2);\n    puVar2 = arg_ch;\n    if (iVar1 != 0) {\n        fcn.004091e0();\n        puVar2[2] = 1;\n        *puVar2 = arg_8h;\n        fcn.0041137c(var_4h);\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0045659f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045659f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    \n    puVar2 = fcn.00452e81(**(arg_8h + 4));\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    uVar1 = *puVar2;\n    if (uVar1 != 0) {\n        do {\n            iVar3 = fcn.004133ee(uVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            uVar1 = puVar2[1];\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 223
    },
    "00456604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456604(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    \n    puVar2 = fcn.00452e81(**(arg_8h + 4));\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    uVar1 = *puVar2;\n    if (uVar1 != 0) {\n        do {\n            iVar3 = fcn.00434fb4(uVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            uVar1 = puVar2[1];\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 223
    },
    "00456669": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456669(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = fcn.00452e81(**(arg_8h + 4));\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    iVar1 = *piVar2;\n    if (iVar1 != 0) {\n        do {\n            iVar3 = (*_sym.imp.USER32.dll_IsCharUpperW)(iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            iVar1 = piVar2[1];\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "004566cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004566cc(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = fcn.00452e81(**(arg_8h + 4));\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    iVar1 = *piVar2;\n    if (iVar1 != 0) {\n        do {\n            iVar3 = (*_sym.imp.USER32.dll_IsCharLowerW)(iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            iVar1 = piVar2[1];\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "0045672f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045672f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    \n    puVar2 = fcn.00452e81(**(arg_8h + 4));\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    uVar1 = *puVar2;\n    if (uVar1 != 0) {\n        do {\n            iVar3 = fcn.004133af(uVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            uVar1 = puVar2[1];\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 223
    },
    "00456794": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456794(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    \n    puVar2 = fcn.00452e81(**(arg_8h + 4));\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    uVar1 = *puVar2;\n    if (uVar1 != 0) {\n        do {\n            iVar3 = fcn.0041339c(uVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            uVar1 = puVar2[1];\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 223
    },
    "004567f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004567f9(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = fcn.00452e81(**(arg_8h + 4));\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    iVar1 = *piVar2;\n    if (iVar1 != 0) {\n        do {\n            iVar3 = (*_sym.imp.USER32.dll_IsCharAlphaNumericW)(iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            iVar1 = piVar2[1];\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "0045685c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045685c(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = fcn.00452e81(**(arg_8h + 4));\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    iVar1 = *piVar2;\n    if (iVar1 != 0) {\n        do {\n            iVar3 = (*_sym.imp.USER32.dll_IsCharAlphaW)(iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            iVar1 = piVar2[1];\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 223
    },
    "00456b0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456b0b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint uVar4;\n    \n    uVar1 = fcn.00452e81(**(arg_8h + 4));\n    uVar2 = fcn.0043420f(uVar1);\n    uVar3 = fcn.00411777(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n    uVar1 = **(arg_8h + 4);\n    uVar4 = uVar3;\n    arg_8h_00 = fcn.00452e81(uVar1);\n    fcn.00434239(arg_8h_00, uVar1);\n    fcn.0040e8e0(uVar4);\n    fcn.0041137c(uVar3);\n    return 0;\n}\n",
        "token_count": 227
    },
    "00456b71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456b71(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    fcn.00452e81(**(arg_8h + 4));\n    arg_8h_00 = fcn.00410330();\n    fcn.0043427f(arg_8h_00);\n    fcn.0040e8e0();\n    fcn.0041137c(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 114
    },
    "00456ec6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456ec6(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    fcn.0040bd40();\n    fcn.00449fdf(&arg_8h, in_ECX + 0x468);\n    cVar2 = fcn.0040f360(0);\n    if (cVar2 != '\\0') {\n        fcn.00456e82(in_ECX + 0x468, &arg_8h);\n        puVar1 = arg_ch;\n        fcn.004091e0();\n        puVar1[2] = 1;\n        *puVar1 = 1;\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "00456f6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456f6b(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.00453140(**(arg_8h + 4));\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    arg_ch_00 = fcn.0040c8f0();\n    iVar2 = fcn.004350a0(in_ECX + 0x15c, arg_ch_00);\n    arg_8h = arg_8h & 0xffffff00 | iVar2 == 0;\n    fcn.00452b3e(arg_ch, arg_8h);\n    return 0;\n}\n",
        "token_count": 203
    },
    "00456fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456fcc(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    uVar1 = **(arg_8h + 4);\n    cVar2 = fcn.00441abb(uVar1);\n    if (cVar2 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    iVar3 = fcn.00432ae7(uVar1);\n    uVar1 = *(iVar3 + 0xc);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 195
    },
    "004581ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004581ef(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    iVar1 = arg_8h[1];\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, *arg_8h, iVar1 + 1, 0, 0, 0, 0);\n    if (arg_8h_00 == 0) {\n        fcn.00444ac8(arg_ch);\n        return;\n    }\n    arg_ch_00 = fcn.00411777(arg_8h_00);\n    iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, *arg_8h, iVar1 + 1, arg_ch_00, arg_8h_00, 0, 0);\n    fcn.00453ba2(arg_ch, arg_ch_00, iVar1 + -1);\n    fcn.0041137c(arg_ch_00);\n    return;\n}\n",
        "token_count": 253
    },
    "004583eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004583eb(uint noname_0, uint arg_ch)\n\n{\n    int32_t arg_8h;\n    uint var_4h;\n    \n    arg_8h = (*_sym.imp.WSOCK32.dll_WSACleanup)();\n    fcn.00403f40(arg_8h, 0);\n    fcn.00452b3e(arg_ch, arg_8h == 0);\n    return 0;\n}\n",
        "token_count": 99
    },
    "00458429": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458429(uint noname_0, uint arg_ch)\n\n{\n    int32_t arg_8h;\n    uchar auStackY512 [64];\n    uint32_t uStack428;\n    \n    arg_8h = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x202);\n    fcn.00403f40(arg_8h, 0);\n    uStack428 = auStackY512 | arg_8h == 0;\n    fcn.00452b3e(arg_ch, uStack428);\n    return 0;\n}\n",
        "token_count": 127
    },
    "0045847b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045847b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    \n    uVar1 = fcn.0040c8f0();\n    iVar2 = (*_sym.imp.WSOCK32.dll_closesocket)(uVar1);\n    if (iVar2 != 0) {\n        arg_ch_00 = 0;\n        uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00403f40(uVar1, arg_ch_00);\n        arg_8h = arg_8h._1_3_ << 8;\n        fcn.00452b3e(arg_ch, arg_8h);\n        return 0;\n    }\n    arg_8h = CONCAT31(arg_8h._1_3_, 1);\n    fcn.00452b3e(arg_ch, arg_8h);\n    return 0;\n}\n",
        "token_count": 222
    },
    "004584de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004584de(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint var_10ch;\n    uint var_108h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = fcn.0040c8f0();\n    var_8h = *(in_ECX + 0x478) / 1000;\n    var_4h = *(in_ECX + 0x478) - var_8h;\n    var_10ch = 1;\n    var_108h = uVar1;\n    iVar2 = (*_sym.imp.WSOCK32.dll_select)(0, &var_10ch, 0, 0, &var_8h);\n    if (0 < iVar2) {\n        iVar2 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(uVar1, &var_10ch);\n        if (iVar2 != 0) {\n            uVar1 = (*_sym.imp.WSOCK32.dll_accept)(uVar1, 0, 0);\n            fcn.004091e0();\n            *arg_ch = uVar1;\n            arg_ch[2] = 1;\n            return 0;\n        }\n    }\n    arg_ch_00 = 0;\n    uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n    fcn.00403f40(uVar1, arg_ch_00);\n    fcn.004091e0();\n    *arg_ch = 0xffffffff;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 386
    },
    "00459583": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459583(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00452e81(**(arg_8h + 4));\n    cVar1 = fcn.0044b6ef(arg_8h_00);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 131
    },
    "004595be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004595be(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00452e81(**(arg_8h + 4));\n    cVar1 = fcn.0044b753(arg_8h_00);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 130
    },
    "00459b8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459b8c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.00452e60(**(arg_8h + 4));\n    iVar2 = puVar1[1];\n    arg_ch_00 = *puVar1;\n    *puVar1[3] = *puVar1[3] + 1;\n    if (iVar2 == 0) {\n        (*_sym.imp.USER32.dll_OpenClipboard)(*0x497518);\n        (*_sym.imp.USER32.dll_EmptyClipboard)();\n        (*_sym.imp.USER32.dll_CloseClipboard)();\n        fcn.00402260();\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, iVar2 * 2 + 2);\n    if (iVar2 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(3, 0);\n        fcn.00402260();\n        return 0;\n    }\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar2);\n    if (arg_8h_00 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(4, 0);\n        fcn.00402260();\n        return 0;\n    }\n    fcn.00411707(arg_8h_00, arg_ch_00);\n    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n    (*_sym.imp.USER32.dll_OpenClipboard)(*0x497518);\n    (*_sym.imp.USER32.dll_EmptyClipboard)();\n    iVar2 = (*_sym.imp.USER32.dll_SetClipboardData)(0xd, iVar2);\n    if (iVar2 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n    }\n    (*_sym.imp.USER32.dll_CloseClipboard)();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 557
    },
    "00459ce9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459ce9(uint noname_0, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(0xffff, 0x1a, 0, 0x489de0, 1, 15000, &var_4h);\n    if (iVar1 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "00459d8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459d8f(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    ushort *var_8h;\n    \n    fcn.00411777(0x10000);\n    fcn.0040f670();\n    *var_8h = 0;\n    arg_8h_00 = **(arg_8h + 4);\n    uVar2 = 0x7fff;\n    uVar1 = fcn.00452e81(arg_8h_00);\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(uVar1, arg_8h_00, var_8h, uVar2);\n    fcn.00452b5d(arg_ch, &var_8h);\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 202
    },
    "00459e22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get graphical window text"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459e22(uint noname_0, uint arg_ch)\n\n{\n    uint var_8h;\n    \n    fcn.00411777(0x10000);\n    fcn.0040f670();\n    (*_sym.imp.USER32.dll_GetWindowTextW)(*0x497518, var_8h, 0x7fff);\n    fcn.0040e8e0();\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 106
    },
    "0045a9bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a9bf(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0044b01e(**(arg_8h + 4));\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.0044b01e(**(arg_8h + 4));\n        fcn.004091e0();\n        *arg_ch = uVar1;\n        arg_ch[2] = 7;\n        return 0;\n    }\n    fcn.004091e0();\n    arg_ch[2] = 7;\n    *arg_ch = 0;\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 196
    },
    "0045ac24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ac24(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint *arg_10h;\n    uint uVar2;\n    uint var_8h;\n    \n    arg_8h_01 = **(arg_8h + 4);\n    uVar2 = 8;\n    arg_10h = &var_8h;\n    arg_8h_00 = fcn.00452e81(arg_8h_01);\n    cVar1 = fcn.00433276(arg_8h_00, arg_8h_01, arg_10h);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(1, 0);\n    }\n    fcn.004091e0(uVar2);\n    arg_ch[2] = 1;\n    *arg_ch = var_8h;\n    return 0;\n}\n",
        "token_count": 226
    },
    "0045ac7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ac7b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    \n    iVar1 = fcn.0040c8f0();\n    if (iVar1 == 0) {\n        fcn.0040bf10();\n        fcn.004434a2(&var_10h, 0);\n        fcn.0040e870();\n        fcn.00402260();\n        return 0;\n    }\n    if (0xffff < iVar1) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    fcn.0040e8e0();\n    return 0;\n}\n",
        "token_count": 171
    },
    "0045ae10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ae10(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    \n    fcn.00452e81(**(arg_8h + 4));\n    puVar2 = fcn.0040f8c0();\n    uVar1 = *puVar2;\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = uVar1;\n    fcn.0041137c(puVar2);\n    return 0;\n}\n",
        "token_count": 135
    },
    "0045af44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045af44(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0045ae64(in_ECX + 0x44, arg_8h);\n    return 0;\n}\n",
        "token_count": 55
    },
    "0045af5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045af5d(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0045ae64(in_ECX + 0x10, arg_8h);\n    return 0;\n}\n",
        "token_count": 56
    },
    "0045af76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045af76(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar2 = fcn.0040c8f0();\n    arg_8h_00 = arg_ch;\n    arg_8h = *(in_ECX + 4);\n    while( true ) {\n        cVar1 = fcn.00441fc1(&arg_8h, 0);\n        if (cVar1 == '\\0') break;\n        if (*(*arg_8h + 0xd8) == iVar2) {\n            fcn.00451dce(in_ECX + 4, &arg_8h);\n            arg_ch = CONCAT31(arg_ch._1_3_, 1);\n            fcn.00452b3e(arg_8h_00, arg_ch);\n        }\n        fcn.00440543(&arg_8h, &var_4h);\n    }\n    arg_8h = arg_8h & 0xffffff00;\n    fcn.00452b3e(arg_8h_00, arg_8h);\n    return 0;\n}\n",
        "token_count": 282
    },
    "0045b044": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b044(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    \n    iVar3 = *(arg_8h + 8);\n    iVar2 = 0;\n    if (iVar3 != 0) {\n        piVar4 = *(arg_8h + 4);\n        do {\n            iVar2 = iVar2 + *(*piVar4 + 4);\n            piVar4 = piVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = fcn.00452ba7(arg_ch, iVar2);\n    iVar2 = 0;\n    uVar5 = 0;\n    if (*(arg_8h + 8) != 0) {\n        do {\n            puVar1 = *(*(arg_8h + 4) + uVar5 * 4);\n            fcn.00411000(iVar2 + iVar3, *puVar1, puVar1[1]);\n            iVar2 = iVar2 + *(*(*(arg_8h + 4) + uVar5 * 4) + 4);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "0045c367": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c367(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00452e81(**(arg_8h + 4));\n    cVar1 = fcn.00433b76(arg_8h_00);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 131
    },
    "0045c3a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c3a2(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00452e81(**(arg_8h + 4));\n    cVar1 = fcn.00433fa3(arg_8h_00);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 133
    },
    "0045cbd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045cbd7(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_22ch;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.00452e81(**(arg_8h + 4));\n    fcn.004102f0();\n    iVar1 = fcn.00411361(&var_22ch);\n    *(&var_22ch + iVar1 * 2 + 2) = 0;\n    var_18h = &var_22ch;\n    var_ah = 0;\n    var_6h = 0;\n    var_eh = 0;\n    var_20h = 0;\n    var_14h = 0;\n    var_1ch = 3;\n    var_10h = 0x54;\n    iVar1 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&var_20h);\n    if (iVar1 != 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "0045df5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "read .ini file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045df5f(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint uVar5;\n    uint *puVar6;\n    uint var_214h;\n    uint var_8h;\n    \n    fcn.00411777(0x1fffe);\n    fcn.0040f670();\n    fcn.00452e81(**(arg_8h + 4));\n    fcn.004102f0();\n    iVar1 = *(arg_8h + 4);\n    arg_8h_02 = *(iVar1 + 0xc);\n    arg_8h_01 = *(iVar1 + 8);\n    arg_8h_00 = *(iVar1 + 4);\n    puVar6 = &var_214h;\n    uVar5 = 0xffff;\n    uVar2 = fcn.00452e81(arg_8h_02);\n    uVar3 = fcn.00452e81(arg_8h_01);\n    uVar4 = fcn.00452e81(arg_8h_00);\n    (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)\n              (uVar4, arg_8h_00, uVar3, arg_8h_01, uVar2, arg_8h_02, var_8h, uVar5, puVar6);\n    fcn.0040e8e0();\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 380
    },
    "0045e9be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e9be(uint *arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00452f35(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x14) = arg_10h;\n        return;\n    }\n    iVar1 = fcn.00411777(0x20);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0044b08e(iVar1);\n    }\n    fcn.0040e410(arg_ch);\n    *(iVar1 + 0x14) = arg_10h;\n    *(iVar1 + 0x10) = arg_14h & 0xff00 | 1;\n    *(iVar1 + 0x1c) = 0;\n    *(iVar1 + 0x18) = 0;\n    uVar2 = fcn.00404050(*arg_8h);\n    *arg_8h = uVar2;\n    return;\n}\n",
        "token_count": 269
    },
    "0045ea53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ea53(uint arg_8h)\n\n{\n    fcn.00452ffb(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 51
    },
    "0046043a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046043a(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = arg_8h[1];\n    uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, *arg_8h, iVar1 + 1, 0, 0);\n    if (uVar2 == 0) {\n        fcn.00403600();\n        return;\n    }\n    uVar3 = fcn.00411777(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, *arg_8h, iVar1 + 1, uVar3, uVar2);\n    fcn.00403e20(0);\n    fcn.0041137c(uVar3);\n    return;\n}\n",
        "token_count": 232
    },
    "00460d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get graphical window text/640bf5383e7d4308bf669f3aa2649f29"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460d94(uint *hWnd, uint arg_ch)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    fcn.00402170();\n    cVar2 = fcn.00436226(hWnd);\n    if (cVar2 == '\\0') {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xe, 0, 0);\n        if (iVar3 == 0) {\n            iVar3 = 0x7fff;\n        }\n        iVar1 = (iVar3 + 1U) * 2;\n        iVar4 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xd, iVar3 + 1U, iVar4);\n        *(iVar4 + iVar3 * 2) = 0;\n        if (iVar5 != 0) {\n            fcn.00402170();\n            fcn.0041137c(iVar4);\n            return 1;\n        }\n        fcn.00402170();\n        fcn.0041137c(iVar4);\n    }\n    return 0;\n}\n",
        "token_count": 292
    },
    "00460f65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460f65(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint lpClassName;\n    \n    fcn.00402170();\n    fcn.00436238(arg_ch, 1);\n    iVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n    *(arg_8h + 0xd8) = iVar1;\n    if (iVar1 != 0) {\n        iVar1 = fcn.00436283(iVar1, arg_ch);\n        if (iVar1 != 0) {\n            fcn.0044ca32(arg_8h, *(arg_8h + 0xd8));\n            *(arg_8h + 0xd4) = arg_ch;\n            (*_sym.imp.USER32.dll_GetClassNameW)(*(arg_8h + 0xd8), &lpClassName, 0x100);\n            fcn.00402170();\n            *(arg_8h + 0x130) = 0;\n            (*_sym.imp.USER32.dll_EnumChildWindows)(arg_ch, fcn.004457b2, arg_8h);\n            fcn.0041343b(&lpClassName, L\"%s%d\", *(arg_8h + 0x8c));\n            fcn.00402170();\n            fcn.00436238(arg_ch, 0);\n            return 1;\n        }\n    }\n    fcn.00436238(arg_ch, 0);\n    return 0;\n}\n",
        "token_count": 334
    },
    "0046180b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046180b(uint *hWnd, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_ch_00;\n    int16_t *piVar2;\n    uint16_t *puVar3;\n    uint32_t arg_ch_01;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    arg_ch_00 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x110a, 0, 0);\n    if (arg_ch_00 == 0) {\n        return 0;\n    }\n    uVar1 = *(arg_ch + 4);\n    var_4h = uVar1;\n    fcn.0040bf10();\n    arg_ch_01 = 0;\n    if (uVar1 != 0) {\n        do {\n            if (arg_ch_01 != 0) {\n                arg_ch_00 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x110a, 4, arg_ch_00);\n                if (arg_ch_00 == 0) break;\n            }\n            fcn.00402170();\n            if (arg_ch_01 < var_4h) {\n                do {\n                    piVar2 = fcn.004362b4(arg_ch, arg_ch_01);\n                    if (*piVar2 == 0x7c) {\n                        piVar2 = fcn.004362b4(arg_ch, arg_ch_01 + 1);\n                        if (*piVar2 != 0x7c) break;\n                        fcn.004032d0(0x7c);\n                        arg_ch_01 = arg_ch_01 + 2;\n                    }\n                    puVar3 = fcn.004362b4(arg_ch, arg_ch_01);\n                    fcn.004032d0(*puVar3);\n                    arg_ch_01 = arg_ch_01 + 1;\n                } while (arg_ch_01 < var_4h);\n            }\n            arg_ch_00 = fcn.0046173c(hWnd, arg_ch_00, &var_14h);\n            if ((arg_ch_00 == 0) || (arg_ch_01 = arg_ch_01 + 1,  var_4h <= arg_ch_01)) break;\n        } while( true );\n    }\n    fcn.00402260();\n    return arg_ch_00;\n}\n",
        "token_count": 531
    },
    "00461afb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461afb(uint *hWnd, int32_t wParam, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *lParam;\n    \n    fcn.00411777(0x10000);\n    fcn.0040f670();\n    *lParam = 0x7fff;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xc4, wParam + -1, lParam);\n    if (iVar1 != 0) {\n        *(lParam + iVar1 * 2) = 0;\n        fcn.00402170();\n        fcn.0040f690();\n        return 1;\n    }\n    fcn.00402170();\n    fcn.0040f690();\n    return 0;\n}\n",
        "token_count": 176
    },
    "0046347a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046347a(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    fcn.0040d610();\n    arg_8h_00 = fcn.00452e60(**(arg_8h + 4));\n    fcn.004581ef(arg_8h_00, &var_14h);\n    fcn.004350fa(in_ECX + 0x15c, var_14h, &var_4h);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = var_4h;\n    fcn.00401350();\n    return 0;\n}\n",
        "token_count": 192
    },
    "0046407c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046407c(uint *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t arg_ch_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    *(arg_ch + 4) = 0;\n    fcn.0045316c(arg_8h);\n    arg_ch_00 = fcn.004423f2(arg_8h, 0x48b474, 1, 1, 0xffffffff, 0xffffffff, 0xffffffff);\n    if ((arg_ch_00 != 0) && (arg_ch_00 < arg_8h[1])) {\n        fcn.0040bf10();\n        fcn.00460e76(&var_10h, arg_8h, arg_ch_00 + 1, (arg_8h[1] - arg_ch_00) + -1);\n        fcn.0040c8a0(arg_8h, arg_ch_00);\n        cVar1 = fcn.004456fa(&var_10h, 0x48b478);\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004456fa(&var_10h, L\"winapi\");\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.004456fa(&var_10h, L\"stdcall\");\n                if (cVar1 == '\\0') goto code_r0x0046412f;\n            }\n            *(arg_ch + 4) = 0;\n        }\n        else {\n            *(arg_ch + 4) = 1;\n        }\n        fcn.00402260();\n    }\n    *(arg_ch + 0x10) = 1;\n    var_10h = *arg_8h;\n    var_ch = arg_8h[1];\n    var_8h = arg_8h[2];\n    var_4h = arg_8h[3];\n    *var_4h = *var_4h + 1;\n    cVar1 = fcn.004634e2(&var_10h, arg_ch + 0x18);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004456fa(arg_8h, L\"none\");\n        if (cVar1 == '\\0') {\ncode_r0x0046412f:\n            fcn.00402260();\n            return 0;\n        }\n        *(arg_ch + 0x10) = 0;\n    }\n    fcn.00402260();\n    return 1;\n}\n",
        "token_count": 591
    },
    "00464ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464ac0(uint arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h, uint *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint in_stack_ffffffe4;\n    \n    fcn.00401c30();\n    iVar2 = fcn.0040f4a0(in_stack_ffffffe4);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *arg_14h = *(iVar2 + 0x14);\n    *arg_18h = *(iVar2 + 0x18);\n    uVar1 = *(iVar2 + 0x1c);\n    *arg_10h = *(iVar2 + 0x10);\n    *arg_1ch = uVar1;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 208
    },
    "00464b45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464b45(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = arg_8h[1];\n    uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, *arg_8h, iVar1 + 1, 0, 0);\n    if (uVar2 == 0) {\n        fcn.00403600();\n        return;\n    }\n    uVar3 = fcn.00411777(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, *arg_8h, iVar1 + 1, uVar3, uVar2);\n    fcn.00403e20(0);\n    fcn.0041137c(uVar3);\n    return;\n}\n",
        "token_count": 226
    },
    "00465306": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465306(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint arg_ch_00;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    arg_8h_00 = **(arg_8h + 4);\n    puVar3 = &var_4h;\n    arg_18h = &var_8h;\n    arg_14h = &var_ch;\n    arg_ch_00 = fcn.00452e81(arg_8h_00);\n    cVar2 = fcn.00464ac0(in_ECX, arg_ch_00, arg_8h_00, arg_14h, arg_18h, puVar3);\n    puVar3 = arg_ch;\n    if (cVar2 == '\\0') {\n        fcn.004091e0();\n        puVar3[2] = 1;\n        *puVar3 = 0;\n        return 0;\n    }\n    puVar3 = fcn.00452e60(**(iVar1 + 4));\n    var_1ch = *puVar3;\n    var_18h = puVar3[1];\n    var_14h = puVar3[2];\n    var_10h = puVar3[3];\n    *var_10h = *var_10h + 1;\n    arg_8h = *(in_ECX + 0x128);\n    while( true ) {\n        cVar2 = fcn.00441fc1(&arg_8h, 0);\n        if (cVar2 == '\\0') {\n            fcn.0044ab0c(in_ECX + 0x128, &var_1ch);\n            fcn.00402260();\n            return 0;\n        }\n        cVar2 = fcn.0040df20();\n        if (cVar2 != '\\0') break;\n        fcn.00440543(&arg_8h, &arg_ch);\n    }\n    fcn.00403f80(1, 0);\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 560
    },
    "00466389": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466389(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    uint in_ECX;\n    int32_t iVar4;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *puVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = arg_8h;\n    uVar3 = *(*(arg_8h + 4) + 4);\n    puVar5 = &var_8h;\n    arg_18h = &arg_8h;\n    arg_14h = &var_ch;\n    uVar2 = fcn.00452e81(uVar3);\n    cVar1 = fcn.00464ac0(in_ECX, uVar2, uVar3, arg_14h, arg_18h, puVar5);\n    puVar5 = arg_ch;\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        puVar5[2] = 1;\n        *puVar5 = 0;\n        fcn.00403f40(2, 0);\n        return 1;\n    }\n    if (4 < arg_8h) {\n        fcn.00403f40(1, 0);\n        puVar5 = arg_ch;\n        fcn.004091e0();\n        *puVar5 = 0;\n        puVar5[2] = 1;\n        return 0;\n    }\n    uVar3 = *(*(iVar4 + 4) + 4);\n    iVar4 = arg_8h;\n    uVar2 = fcn.00452e60(uVar3);\n    arg_8h_00 = fcn.0040c8f0(uVar2, uVar3, iVar4);\n    uVar3 = fcn.00450074(arg_8h_00, uVar2, uVar3);\n    puVar5 = arg_ch;\n    fcn.004091e0();\n    *puVar5 = uVar3;\n    puVar5[2] = 1;\n    return 0;\n}\n",
        "token_count": 500
    },
    "00466460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466460(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint in_ECX;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00452e26(*(*(arg_8h + 4) + 4));\n    if (iVar2 != 0) {\n        uVar4 = *(*(arg_8h + 4) + 4);\n        arg_1ch = &var_4h;\n        arg_18h = &var_8h;\n        arg_14h = &var_ch;\n        uVar3 = fcn.00452e81(uVar4);\n        cVar1 = fcn.00464ac0(in_ECX, uVar3, uVar4, arg_14h, arg_18h, arg_1ch);\n        if (cVar1 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            fcn.00403f40(1, 0);\n            return 1;\n        }\n    }\n    uVar4 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n    uVar3 = fcn.0040c8f0();\n    uVar4 = fcn.004500e7(uVar3, uVar4);\n    fcn.004091e0();\n    *arg_ch = uVar4;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 398
    },
    "0046650f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046650f(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.0040c8f0();\n    arg_8h_00 = fcn.0040c8f0();\n    iVar1 = fcn.00448989(arg_8h_00, arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.00403f80(-iVar1, 0);\n        iVar1 = 1;\n    }\n    fcn.004091e0();\n    *arg_ch = iVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 172
    },
    "00466569": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466569(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.0040c8f0();\n    arg_8h_00 = fcn.0040c8f0();\n    iVar1 = fcn.00448c34(arg_8h_00, arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.00403f80(-iVar1, 0);\n        iVar1 = 1;\n    }\n    fcn.004091e0();\n    *arg_ch = iVar1;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 172
    },
    "004665c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004665c3(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint in_ECX;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00452e26(*(*(arg_8h + 4) + 4));\n    if (iVar2 != 0) {\n        uVar4 = *(*(arg_8h + 4) + 4);\n        arg_1ch = &var_4h;\n        arg_18h = &var_8h;\n        arg_14h = &var_ch;\n        uVar3 = fcn.00452e81(uVar4);\n        cVar1 = fcn.00464ac0(in_ECX, uVar3, uVar4, arg_14h, arg_18h, arg_1ch);\n        if (cVar1 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            fcn.00403f40(1, 0);\n            return 1;\n        }\n    }\n    uVar4 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n    uVar3 = fcn.0040c8f0();\n    uVar4 = fcn.004510d7(uVar3, uVar4);\n    fcn.004091e0();\n    *arg_ch = uVar4;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 399
    },
    "004667b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004667b8(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    char cVar5;\n    int32_t in_ECX;\n    \n    cVar5 = fcn.0045be08(in_ECX, &arg_8h, **(arg_8h + 4), 0);\n    puVar4 = arg_ch;\n    if (cVar5 != '\\0') {\n        iVar1 = *(**(*(in_ECX + 0x17c) + arg_8h * 4) + 4);\n        uVar2 = *(iVar1 + 0x14);\n        uVar3 = *(iVar1 + 0x10);\n        fcn.004091e0();\n        *puVar4 = uVar3;\n        puVar4[1] = uVar2;\n        puVar4[2] = 2;\n        return 0;\n    }\n    fcn.00403f40(1, 0);\n    puVar4 = arg_ch;\n    fcn.004091e0();\n    puVar4[2] = 1;\n    *puVar4 = 0;\n    return 0;\n}\n",
        "token_count": 284
    },
    "0046689e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046689e(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    uVar2 = fcn.00452e81(**(arg_8h + 4));\n    cVar1 = fcn.0044bc12(uVar2);\n    if (cVar1 == '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00403f80(uVar2, 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "004668f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004668f0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    int32_t iVar3;\n    uchar auStack604 [600];\n    \n    arg_10h = **(arg_8h + 4);\n    iVar3 = 1;\n    cVar2 = fcn.0045be08(in_ECX, auStack604, arg_10h, 1);\n    if (cVar2 == '\\0') {\n        fcn.00403f40(1, 0);\n        fcn.0040e8e0();\n        return 0;\n    }\n    piVar1 = *(*(in_ECX + 0x17c) + iVar3 * 4);\n    if (*(*piVar1 + 0xc) != 0) {\n        fcn.0040e8e0();\n        if ((*(**(*(in_ECX + 0x17c) + iVar3 * 4) + 0x10) & 0x10) != 0) {\n            fcn.00403f80(1, 0);\n        }\n        fcn.0041137c(*(**(*(in_ECX + 0x17c) + iVar3 * 4) + 0xc));\n        *(**(*(in_ECX + 0x17c) + iVar3 * 4) + 0xc) = 0;\n        return 0;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(*(*piVar1 + 8), &stack0xfffffd98);\n    if (iVar3 == 0) {\n        fcn.00403f40(1, 0);\n        fcn.0040e8e0();\n        return 0;\n    }\n    fcn.0040e8e0();\n    if ((arg_10h & 0x10) != 0) {\n        fcn.00403f80(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 469
    },
    "00466a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466a20(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_804h;\n    uint var_4h;\n    \n    var_4h = 0x400;\n    arg_8h_01 = **(arg_8h + 4);\n    puVar3 = &var_4h;\n    puVar2 = &var_804h;\n    uVar1 = fcn.00452e81(arg_8h_01);\n    arg_8h_00 = (*_sym.imp.MPR.dll_WNetGetConnectionW)(uVar1, arg_8h_01, puVar2, puVar3);\n    if (arg_8h_00 != 0) {\n        fcn.0040e8e0();\n        fcn.00403f40(1, 0);\n        fcn.00403f80(arg_8h_00, 0);\n        return 0;\n    }\n    fcn.0040e8e0();\n    return 0;\n}\n",
        "token_count": 270
    },
    "00466aa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466aa8(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    uint uVar2;\n    uint uVar3;\n    \n    arg_8h_01 = **(arg_8h + 4);\n    uVar3 = 1;\n    uVar2 = 1;\n    uVar1 = fcn.00452e81(arg_8h_01);\n    arg_8h_00 = (*_sym.imp.MPR.dll_WNetCancelConnection2W)(uVar1, arg_8h_01, uVar2, uVar3);\n    if (arg_8h_00 != 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f80(arg_8h_00, 0);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    return 0;\n}\n",
        "token_count": 239
    },
    "0046757d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046757d(int32_t **arg_8h, uint *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char *psa;\n    int32_t var_4h;\n    \n    ppiVar1 = arg_8h;\n    if ((*arg_ch & 0x2000) == 0) {\n        return 0;\n    }\n    if ((*arg_ch & 0x4000) == 0) {\n        pcVar8 = arg_ch[2];\n    }\n    else {\n        pcVar8 = *arg_ch[2];\n    }\n    if (pcVar8 == NULL) {\n        return 0;\n    }\n    psa = pcVar8;\n    fcn.0040eb20();\n    (*arg_8h)[0x84] = *pcVar8;\n    piVar3 = *arg_8h;\n    iVar6 = 0;\n    if (0 < piVar3[0x84]) {\n        arg_ch = pcVar8 + 0x10;\n        iVar7 = 0x10c;\n        do {\n            uVar4 = *arg_ch;\n            arg_ch = arg_ch + 2;\n            *(iVar7 + piVar3) = uVar4;\n            piVar3 = *arg_8h;\n            iVar6 = iVar6 + 1;\n            iVar7 = iVar7 + 4;\n        } while (iVar6 < piVar3[0x84]);\n    }\n    fcn.0040ea00(0);\n    iVar6 = (*arg_8h)[2];\n    uVar2 = *(pcVar8 + 2) & 0xf00;\n    if (uVar2 < 0x401) {\n        if (uVar2 == 0x400) {\n            iVar7 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_10h);\n            if (iVar7 < 0) {\n                return 1;\n            }\n            iVar7 = 0;\n            if (0 < iVar6) {\n                do {\n                    puVar5 = fcn.00411777(0x10);\n                    if (puVar5 == NULL) {\n                        puVar5 = NULL;\n                    }\n                    else {\n                        *puVar5 = 0;\n                        puVar5[2] = 1;\n                        puVar5[3] = 0;\n                    }\n                    *(**arg_8h + iVar7 * 4) = puVar5;\n                    var_20h = var_10h + iVar7 * 4;\n                    var_28h._0_2_ = 9;\n                    fcn.0046795f(&var_28h);\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar6);\n            }\n            (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n            return 1;\n        }\n        if (uVar2 == 0x100) {\n            iVar7 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_ch);\n            if (iVar7 < 0) {\n                return 1;\n            }\n            iVar7 = 0;\n            if (0 < iVar6) {\n                do {\n                    puVar5 = fcn.00411777(0x10);\n                    if (puVar5 == NULL) {\n                        puVar5 = NULL;\n                    }\n                    else {\n                        *puVar5 = 0;\n                        puVar5[2] = 1;\n                        puVar5[3] = 0;\n                    }\n                    *(**arg_8h + iVar7 * 4) = puVar5;\n                    var_28h._0_2_ = 8;\n                    var_20h = *(var_ch + iVar7 * 4);\n                    fcn.0046795f(&var_28h);\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar6);\n            }\ncode_r0x0046791b:\n            (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n            return 1;\n        }\n        if (uVar2 == 0x200) goto code_r0x0046763d;\n    }\n    else if (uVar2 == 0x800) {\n        iVar7 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_14h);\n        if (iVar7 < 0) {\n            return 1;\n        }\n        iVar7 = 0;\n        if (0 < iVar6) {\n            arg_8h = NULL;\n            do {\n                puVar5 = fcn.00411777(0x10);\n                if (puVar5 == NULL) {\n                    puVar5 = NULL;\n                }\n                else {\n                    *puVar5 = 0;\n                    puVar5[2] = 1;\n                    puVar5[3] = 0;\n                }\n                *(**ppiVar1 + iVar7 * 4) = puVar5;\n                var_20h = arg_8h + var_14h;\n                var_28h._0_2_ = 0x400c;\n                fcn.0046795f(&var_28h);\n                arg_8h = arg_8h + 0x10;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar6);\n        }\n        goto code_r0x0046791b;\n    }\n    if (-1 < *(pcVar8 + 2)) goto code_r0x0046763d;\n    (*_sym.imp.OLEAUT32.dll_VarR8FromUI1)(pcVar8, &arg_ch);\n    if ((arg_ch & 0xffff) - 2 < 0x16) {\n    // switch table (22 cases) at 0x467931\n        switch(*(*((arg_ch & 0xffff) + 0x467947) * 4 + 0x467931)) {\n        case 0x467787:\n            iVar7 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_4h);\n            if (-1 < iVar7) {\n                iVar7 = iVar6;\n                uVar4 = fcn.00452ba7(arg_8h, iVar6);\n                fcn.00411000(uVar4, arg_8h, iVar6);\n                (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(pcVar8, var_4h, iVar7);\n                return 1;\n            }\n            goto code_r0x0046763d;\n        case 0x4677c1:\n            arg_8h = 0x1;\n            break;\n        case 0x467809:\n            arg_8h = 0x2;\n            break;\n        case 0x467812:\n            arg_8h = 0x8;\n            break;\n        case 0x46781b:\n            goto code_r0x0046781b;\n        case 0x46782a:\ncode_r0x0046782a:\n            arg_8h = 0x4;\n        }\n        iVar7 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_4h);\n        if (iVar7 < 0) {\n            return 1;\n        }\n        iVar7 = 0;\n        if (0 < iVar6) {\n            do {\n                puVar5 = fcn.00411777(0x10);\n                if (puVar5 == NULL) {\n                    puVar5 = NULL;\n                }\n                else {\n                    *puVar5 = 0;\n                    puVar5[2] = 1;\n                    puVar5[3] = 0;\n                }\n                *(**ppiVar1 + iVar7 * 4) = puVar5;\n                if ((arg_ch & 0x4000) == 0) {\n                    var_28h._0_2_ = arg_ch | 0x4000;\n                    var_20h = var_4h;\n                }\n                else {\n                    var_28h._0_2_ = arg_ch;\n                    fcn.00411000(&var_20h, var_4h, arg_8h);\n                }\n                fcn.0046795f(&var_28h);\n                var_4h = var_4h + arg_8h;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar6);\n        }\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n        return 1;\n    }\ncode_r0x0046781b:\n    if ((arg_ch & 0x4000) == 0) {\ncode_r0x0046763d:\n        fcn.004091e0();\n        return 0;\n    }\n    goto code_r0x0046782a;\n}\n",
        "token_count": 2066
    },
    "00467a51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467a51(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint arg_10h;\n    uint uVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg_8h + 0x14);\n    uVar1 = *(arg_8h + 0xc);\n    fcn.00452ba7(arg_ch, *(arg_8h + 0xc));\n    uVar2 = *(arg_8h + 0xc);\n    arg_10h = *(arg_8h + 8);\n    arg_8h_00 = fcn.004679dc(arg_ch);\n    fcn.00411000(arg_8h_00, arg_ch, arg_10h);\n    fcn.004130e0(*(arg_8h + 8), 0, *(arg_8h + 0xc));\n    *(arg_8h + 0xc) = 0;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h + 0x14, uVar2);\n    return uVar1;\n}\n",
        "token_count": 259
    },
    "0046895c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0046895c(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint *arg_ch_00;\n    uint32_t *arg_ch_01;\n    uint32_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t arg_8h_00;\n    uint uVar5;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    \n    puVar4 = arg_ch;\n    iVar3 = arg_8h;\n    var_ch = 0xffffffff;\n    fcn.00401070();\n    arg_ch_00 = iVar3 + 0x14;\n    fcn.00453c1d(arg_10h, arg_ch_00);\n    arg_8h_00 = fcn.0046238c(*arg_ch_00, *(iVar3 + 0x3c), &arg_8h, &arg_ch);\n    *(iVar3 + 0x24) = arg_8h_00;\n    if (arg_8h_00 == 0) {\n        var_8h = arg_ch;\n        fcn.00444bc2(&var_24h, *arg_ch_00);\n        var_14h = 0xffffffff;\n        var_10h = 0xffffffff;\n        fcn.00444c53(&var_24h, &var_14h, &var_ch);\n        fcn.00401350();\n        puVar4[1] = var_8h;\n        *puVar4 = var_ch;\n        return puVar4;\n    }\n    arg_ch_01 = iVar3 + 0x30;\n    fcn.0043ec7a(arg_8h_00, arg_ch_01);\n    uVar1 = *arg_ch_01 * 3 + 3;\n    *arg_ch_01 = uVar1;\n    iVar2 = uVar1 * 4;\n    uVar5 = fcn.00411777(-(iVar2 >> 0x20 != 0) | iVar2);\n    *(iVar3 + 0x2c) = uVar5;\n    *puVar4 = 0;\n    puVar4[1] = 0;\n    return puVar4;\n}\n",
        "token_count": 525
    },
    "00468b85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468b85(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_34h;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.0040bf10();\n    fcn.0040bf10();\n    cVar1 = fcn.004362d6(arg_8h);\n    if (((cVar1 == '\\0') && (iVar2 = fcn.0041164b(*arg_8h, L\"LAST\"),  iVar2 != 0)) &&\n       (iVar2 = fcn.0041164b(*arg_8h, L\"ACTIVE\"),  iVar2 != 0)) {\n        iVar2 = fcn.004135bf(*arg_8h, L\"HANDLE=\", 7);\n        if (iVar2 == 0) {\n            fcn.00402170();\n            uVar3 = 7;\n        }\n        else {\n            iVar2 = fcn.004135bf(*arg_8h, L\"REGEXP=\", 7);\n            if (iVar2 == 0) {\n                fcn.00402170();\n                uVar3 = 7;\n            }\n            else {\n                iVar2 = fcn.004135bf(*arg_8h, L\"CLASSNAME=\", 10);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.0041164b(*arg_8h, 0x48421c);\n                    if (iVar2 != 0) goto code_r0x00468ccb;\n                    goto code_r0x00468cad;\n                }\n                fcn.00402170();\n                uVar3 = 10;\n            }\n        }\n        uVar3 = fcn.00460f20(arg_8h, &var_34h, uVar3, 0xffffffff);\n        fcn.0040e410(uVar3);\n        fcn.00402260();\n        fcn.00460d32(&var_24h);\n        fcn.0040bff0(&var_24h);\n    }\n    else {\ncode_r0x00468cad:\n        fcn.00402170();\n    }\n    fcn.0040d510();\n    fcn.0040e410(&var_14h);\ncode_r0x00468ccb:\n    fcn.00402260();\n    fcn.00402260();\n    return;\n}\n",
        "token_count": 535
    },
    "00469e22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00469e22(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint in_ECX;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00452e26(*(*(arg_8h + 4) + 4));\n    if (iVar2 != 0) {\n        uVar4 = *(*(arg_8h + 4) + 4);\n        arg_1ch = &var_4h;\n        arg_18h = &var_8h;\n        arg_14h = &var_ch;\n        uVar3 = fcn.00452e81(uVar4);\n        cVar1 = fcn.00464ac0(in_ECX, uVar3, uVar4, arg_14h, arg_18h, arg_1ch);\n        if (cVar1 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            fcn.00403f40(1, 0);\n            return 0;\n        }\n    }\n    uVar4 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n    uVar3 = fcn.0040c8f0();\n    uVar4 = fcn.00453500(uVar3, uVar4);\n    fcn.004091e0();\n    *arg_ch = uVar4;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 398
    },
    "00469ef3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00469ef3(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint in_ECX;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *arg_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00452e26(*(*(arg_8h + 4) + 4));\n    if (iVar2 != 0) {\n        uVar4 = *(*(arg_8h + 4) + 4);\n        arg_1ch = &var_4h;\n        arg_18h = &var_8h;\n        arg_14h = &var_ch;\n        uVar3 = fcn.00452e81(uVar4);\n        cVar1 = fcn.00464ac0(in_ECX, uVar3, uVar4, arg_14h, arg_18h, arg_1ch);\n        if (cVar1 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            fcn.00403f40(1, 0);\n            return 1;\n        }\n    }\n    uVar4 = fcn.00452e60(*(*(arg_8h + 4) + 4));\n    uVar3 = fcn.0040c8f0();\n    uVar4 = fcn.00453532(uVar3, uVar4);\n    fcn.004091e0();\n    *arg_ch = uVar4;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 398
    },
    "0046bc34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046bc34(uint *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    \n    cVar3 = fcn.00464ac0(arg_8h, *arg_ch, &var_8h, &arg_8h, &arg_ch, &var_ch);\n    if ((cVar3 == '\\0') || (arg_8h != arg_ch)) {\n        return 0;\n    }\n    fcn.0040da60();\n    var_8h = fcn.0040f5a0();\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        arg_ch = 0xc;\n        do {\n            iVar2 = var_8h;\n            iVar5 = arg_ch;\n            fcn.0040bf10();\n            if (iVar4 != 0) {\n                if (*(*(*(iVar2 + 4) + iVar5) + 8) != 0x40) goto code_r0x0046bcf9;\n                iVar5 = iVar5 + 4;\n                arg_ch = iVar5;\n            }\n            puVar1 = *(iVar5 + *(iVar2 + 4));\n            if (*(puVar1 + 2) != 0x33) {\ncode_r0x0046bcf9:\n                fcn.00402260();\n                return 0;\n            }\n            fcn.0040e410(*puVar1);\n            fcn.0040da60();\n            arg_ch = arg_ch + 4;\n            fcn.00402260();\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 427
    },
    "0046cca5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046cca5(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t arg_ch_00;\n    uint var_24h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040d610();\n    uVar1 = fcn.00452e60(**(arg_8h + 4));\n    fcn.004581ef(uVar1, &var_14h);\n    arg_ch_00 = (*_sym.imp.WSOCK32.dll_gethostbyname)(var_14h);\n    if (arg_ch_00 == 0) {\n        uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00403f40(uVar1, arg_ch_00);\n        fcn.0040e8e0();\n        fcn.00401350();\n        return 0;\n    }\n    fcn.00411000(&var_4h, **(arg_ch_00 + 0xc), 4);\n    uVar1 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(var_4h);\n    fcn.00451bf4(&var_14h, uVar1);\n    fcn.004660b1(&var_14h, &var_24h);\n    fcn.0040e870();\n    fcn.00402260();\n    fcn.00401350();\n    return 0;\n}\n",
        "token_count": 327
    },
    "0046cd65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046cd65(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = **(arg_8h + 4);\n    iVar1 = fcn.0041553b();\n    uVar2 = fcn.0046817a(iVar1 + 0x40, uVar2);\n    fcn.004091e0();\n    *arg_ch = uVar2;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 125
    },
    "0046cd9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046cd9f(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = **(arg_8h + 4);\n    iVar1 = fcn.0041553b();\n    uVar2 = fcn.0046817a(iVar1 + 0x20, uVar2);\n    fcn.004091e0();\n    *arg_ch = uVar2;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 126
    },
    "0046d557": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d557(uint noname_0, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uchar auStack596 [8];\n    uchar auStack588 [8];\n    uchar auStack580 [4];\n    uchar auStack576 [572];\n    \n    fcn.0040bf10();\n    fcn.0040e8e0();\n    (*_sym.imp.USER32.dll_OpenClipboard)(*0x497518);\n    pcVar1 = _sym.imp.USER32.dll_IsClipboardFormatAvailable;\n    iVar2 = (*_sym.imp.USER32.dll_IsClipboardFormatAvailable)(0xd);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(1);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)(0xf);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_CountClipboardFormats)();\n                if (iVar2 == 0) {\n                    arg_8h = 1;\n                }\n                else {\n                    arg_8h = 2;\n                }\n                fcn.00403f40(arg_8h, 0);\n            }\n            else {\n                iVar2 = (*_sym.imp.USER32.dll_GetClipboardData)(0xf);\n                if (iVar2 == 0) {\n                    (*_sym.imp.USER32.dll_CloseClipboard)();\n                    fcn.00403f40(3, 0);\n                    fcn.00402260();\n                    return 0;\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar2);\n                if (iVar3 == 0) {\n                    (*_sym.imp.USER32.dll_CloseClipboard)();\n                    fcn.00403f40(4, 0);\n                    fcn.00402260();\n                    return 0;\n                }\n                iVar3 = (*_sym.imp.SHELL32.dll_DragQueryFileW)(iVar2, 0xffffffff, 0, 0);\n                iVar3 = iVar3 + -1;\n                iVar4 = 0;\n                if (0 < iVar3) {\n                    do {\n                        (*_sym.imp.SHELL32.dll_DragQueryFileW)(iVar2, iVar4, auStack576, 0x104);\n                        fcn.0040d510();\n                        fcn.004032d0(10);\n                        iVar4 = iVar4 + 1;\n                    } while (iVar4 < iVar3);\n                }\n                (*_sym.imp.SHELL32.dll_DragQueryFileW)(iVar2, iVar4, auStack576, 0x104);\n                fcn.0040d510();\n                fcn.0040e870();\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n                fcn.00403f80(1, 0);\n            }\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_GetClipboardData)(1);\n            if (iVar2 == 0) {\n                (*_sym.imp.USER32.dll_CloseClipboard)();\n                fcn.00403f40(3, 0);\n                fcn.00402260();\n                return 0;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar2);\n            if (iVar3 == 0) {\n                (*_sym.imp.USER32.dll_CloseClipboard)();\n                fcn.00403f40(4, 0);\n                fcn.00402260();\n                return 0;\n            }\n            fcn.00444bc2(auStack588, iVar3);\n            fcn.004660b1(auStack596, auStack580);\n            fcn.0040e870();\n            fcn.00402260();\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n            fcn.00401350();\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetClipboardData)(0xd);\n        if (iVar2 == 0) {\n            (*_sym.imp.USER32.dll_CloseClipboard)();\n            fcn.00403f40(3, 0);\n            fcn.00402260();\n            return 0;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar2);\n        if (iVar3 == 0) {\n            (*_sym.imp.USER32.dll_CloseClipboard)();\n            fcn.00403f40(4, 0);\n            fcn.00402260();\n            return 0;\n        }\n        fcn.0040e8e0();\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n    }\n    (*_sym.imp.USER32.dll_CloseClipboard)();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1041
    },
    "0046ec64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ec64(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t arg_20h;\n    uint arg_ch_00;\n    uint32_t arg_24h;\n    int32_t arg_14h;\n    int32_t arg_18h;\n    \n    iVar1 = arg_8h;\n    arg_18h = arg_8h + 0x2e0;\n    fcn.00410c00();\n    iVar4 = iVar1 + 0x1b8;\n    cVar2 = fcn.004423e0(iVar4);\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0044357d(iVar4);\n        if (cVar2 != '\\0') {\n            arg_24h = *(iVar1 + 0x2dc);\n            arg_20h = *(iVar1 + 0x2dd);\n            uVar3 = *(iVar1 + 0x2d4);\n            arg_14h = iVar1 + 0x1c8;\n            arg_ch_00 = fcn.00452e60(iVar4);\n            uVar3 = fcn.0046e631(iVar1 + 0x1d8, arg_ch_00, iVar4, arg_14h, arg_18h, uVar3, arg_20h, arg_24h);\n            return uVar3;\n        }\n    }\n    else {\n        uVar3 = fcn.0044b01e(iVar4);\n        arg_8h = uVar3;\n        iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar3);\n        if (iVar4 != 0) {\n            fcn.0044ca32(iVar1 + 0x1d8, uVar3);\n            fcn.00431f64(arg_18h, &arg_8h);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 459
    },
    "0046f60f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f60f(int32_t arg_8h, ushort *arg_ch)\n\n{\n    uint *arg_ch_00;\n    char cVar1;\n    \n    arg_ch_00 = arg_8h + 0x18;\n    *arg_ch = 0;\n    fcn.00403600();\n    cVar1 = fcn.0046e2ba(arg_8h, arg_ch_00);\n    if (cVar1 != '\\0') {\n        fcn.0040c8a0(arg_ch_00, 0xffe);\n        fcn.00411707(arg_ch, *arg_ch_00);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "0046f662": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046f662(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    iVar1 = fcn.0046ec64(arg_8h, 0);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n        }\n        return iVar1;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar2 = 1;\n    if (0 < *(arg_8h + 0x2e8)) {\n        ppiVar3 = *(arg_8h + 0x2e4);\n        do {\n            if (**ppiVar3 == iVar1) {\n                return 1;\n            }\n            iVar2 = iVar2 + 1;\n            ppiVar3 = ppiVar3 + 1;\n        } while (iVar2 <= *(arg_8h + 0x2e8));\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "0046f733": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0046f733(uint *arg_8h)\n\n{\n    fcn.0040b6a0(*arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 57
    },
    "0046f8ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f8ae(uint arg_8h)\n\n{\n    fcn.0046f87d(arg_8h);\n    fcn.0041137c(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 54
    },
    "0046fa03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.0046fa03(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    \n    puVar3 = arg_ch;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    piVar1 = arg_ch[4];\n    arg_8h[4] = piVar1;\n    if (piVar1 != NULL) {\n        *piVar1 = *piVar1 + 1;\n    }\n    arg_8h[2] = arg_ch[2];\n    arg_8h[3] = arg_ch[3];\n    uVar2 = *arg_ch;\n    *arg_8h = uVar2;\n    if (uVar2 != 0) {\n        uVar6 = -(uVar2 * 0x20 >> 0x20 != 0) | uVar2 * 0x20;\n        puVar4 = fcn.00411777(-(0xfffffffb < uVar6) | uVar6 + 4);\n        if (puVar4 == NULL) {\n            puVar5 = NULL;\n        }\n        else {\n            puVar5 = puVar4 + 1;\n            *puVar4 = uVar2;\n            fcn.00410e40(0x20);\n        }\n        iVar7 = 0;\n        arg_8h[1] = puVar5;\n        arg_ch = NULL;\n        if (0 < *arg_8h) {\n            do {\n                fcn.00453109(arg_8h[1] + iVar7, puVar3[1] + iVar7);\n                arg_ch = arg_ch + 1;\n                iVar7 = iVar7 + 0x20;\n            } while (arg_ch < *arg_8h);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 467
    },
    "0046fcff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.0046fcff(uint *arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint arg_20h, uint arg_24h, uint arg_28h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    *arg_8h = 0x4870e4;\n    arg_8h[8] = 1;\n    arg_8h[6] = 0;\n    arg_8h[9] = 0;\n    arg_8h[1] = 1;\n    arg_8h[0xc] = arg_1ch;\n    arg_8h[0xd] = arg_20h;\n    arg_8h[0xe] = arg_24h;\n    arg_8h[0xf] = arg_28h;\n    *(arg_8h + 2) = 0;\n    *(arg_8h + 0xb) = 0;\n    *(arg_8h + 0x10) = 0;\n    arg_8h[0x11] = 0;\n    arg_8h[4] = 0;\n    arg_8h[10] = 0;\n    if (arg_18h != 0) {\n        iVar3 = fcn.00411361(arg_18h);\n        iVar1 = (iVar3 + 1) * 2;\n        arg_8h_00 = fcn.00411777(-(iVar1 >> 0x20 != 0) | iVar1);\n        arg_8h[0x11] = arg_8h_00;\n        fcn.00411707(arg_8h_00, arg_18h);\n        if (((arg_ch != NULL) && (arg_10h != 0)) && (arg_14h != NULL)) {\n            arg_8h[4] = arg_ch;\n            (**(*arg_ch + 4))(arg_ch);\n            arg_8h[10] = arg_14h;\n            (**(*arg_14h + 4))(arg_14h);\n            fcn.00409120(arg_10h);\n            return arg_8h;\n        }\n        *(arg_8h + 0xb) = 1;\n        fcn.004091e0();\n        arg_8h[8] = 1;\n        arg_8h[6] = 0;\n        pcVar2 = _sym.imp.OLEAUT32.dll_VariantClear;\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(arg_8h + 0x12);\n        (*pcVar2)(arg_8h + 0x1a);\n        (*pcVar2)(arg_8h + 0x1e);\n        (*pcVar2)(arg_8h + 0x22);\n        (*pcVar2)(arg_8h + 0x26);\n        (*pcVar2)(arg_8h + 0x16);\n        (*pcVar2)(arg_8h + 0x2a);\n        (*pcVar2)(arg_8h + 0x2e);\n    }\n    return arg_8h;\n}\n",
        "token_count": 742
    },
    "0047230b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0047230b(uint *arg_8h, uint *arg_ch)\n\n{\n    *arg_8h = *arg_ch;\n    arg_8h[1] = arg_ch[1];\n    arg_8h[2] = arg_ch[2];\n    arg_8h[3] = arg_ch[3];\n    fcn.00409120(arg_ch + 4);\n    fcn.00409120(arg_ch + 8);\n    return arg_8h;\n}\n",
        "token_count": 112
    },
    "00472647": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00472647(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    puVar1 = fcn.00452e60(**(arg_8h + 4));\n    var_14h = *puVar1;\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    fcn.00410d60();\n    iVar2 = fcn.004532b1(&var_14h);\n    if (iVar2 != 0) {\n        fcn.0040c560(&arg_8h, &var_4h);\n        fcn.00409120(arg_8h);\n        fcn.00402260();\n        return 0;\n    }\n    fcn.00403f40(1, 0);\n    fcn.0040e8e0();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 288
    },
    "00472d85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00472d85(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *puVar1;\n    uint var_3ch;\n    \n    arg_8h_00 = fcn.00411777(0x58);\n    if (arg_8h_00 == 0) {\n        puVar1 = NULL;\n    }\n    else {\n        puVar1 = fcn.00452161(arg_8h_00);\n    }\n    *puVar1 = *(arg_8h + 0xf4);\n    fcn.00409120(arg_8h + 0x1b8);\n    fcn.0040e410(arg_8h + 0x1c8);\n    puVar1[10] = *(arg_8h + 0x98);\n    puVar1[0xb] = *(arg_8h + 0x2f0);\n    puVar1[0xc] = **(arg_8h + 0x1d8);\n    puVar1[0xd] = *(arg_8h + 0x2f8);\n    fcn.0040e410(arg_8h + 0x438);\n    puVar1[0x12] = *(arg_8h + 0x448);\n    puVar1[0x13] = *(arg_8h + 0x44c);\n    puVar1[0x14] = *(arg_8h + 0x454);\n    puVar1[0x15] = *(arg_8h + 0xf8);\n    fcn.00410ca0();\n    fcn.0040e680();\n    fcn.0044c957(&var_3ch);\n    return puVar1;\n}\n",
        "token_count": 396
    },
    "00473a2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473a2d(uint noname_0, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetForegroundWindow;\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    var_4h = uVar2;\n    fcn.0044370a(uVar2, 1);\n    iVar3 = (*_sym.imp.USER32.dll_GetCaretPos)(&var_ch);\n    if (iVar3 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n    }\n    else {\n        (*_sym.imp.USER32.dll_ClientToScreen)(uVar2, &var_ch);\n        uVar2 = (*pcVar1)();\n        fcn.004318a3(*(in_ECX + 0x108), &var_14h, uVar2);\n        var_8h = var_8h - var_10h;\n        var_ch = var_ch - var_14h;\n        fcn.0040ea00(1);\n        piVar4 = fcn.0040d1a0(0, 1);\n        iVar3 = var_ch;\n        fcn.004091e0();\n        piVar4[2] = 1;\n        *piVar4 = iVar3;\n        piVar4 = fcn.0040d1a0(0, 1);\n        iVar3 = var_8h;\n        fcn.004091e0();\n        piVar4[2] = 1;\n        *piVar4 = iVar3;\n        uVar2 = var_4h;\n    }\n    fcn.0044370a(uVar2, 0);\n    return 0;\n}\n",
        "token_count": 479
    },
    "00474521": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474521(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint uVar4;\n    uint arg_8h_01;\n    uchar *arg_10h;\n    \n    puVar1 = *(arg_8h + 4);\n    cVar2 = fcn.00441abb(*puVar1);\n    if (cVar2 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    if (3 < *(arg_8h + 8)) {\n        cVar2 = fcn.0044aa8e(puVar1[3]);\n        if (cVar2 == '\\0') {\n            iVar3 = fcn.0040c8f0();\n            if (iVar3 + -1 < 0) {\n                fcn.004091e0();\n                arg_ch[2] = 1;\n                *arg_ch = 0;\n                fcn.00403f40(5, 0);\n                return 0;\n            }\n        }\n    }\n    fcn.0040bc00();\n    cVar2 = fcn.0044357d(&stack0xffffffe0);\n    if (cVar2 == '\\0') {\n        fcn.0040c8f0();\n        fcn.004091e0();\n    }\n    uVar4 = (*(arg_8h + 4))[2];\n    arg_8h_01 = **(arg_8h + 4);\n    arg_10h = &stack0xffffffdc;\n    arg_8h_00 = fcn.00432ae7(arg_8h_01);\n    uVar4 = fcn.00468137(arg_8h_00, arg_8h_01, arg_10h, uVar4, arg_ch);\n    fcn.00403f40(uVar4, arg_8h_01);\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 491
    },
    "0047583e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047583e(uint arg_8h, uint arg_ch)\n\n{\n    ulong *puVar1;\n    ulong in_stack_0000000c;\n    \n    puVar1 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    *puVar1 = in_stack_0000000c;\n    *(puVar1 + 1) = 3;\n    return;\n}\n",
        "token_count": 100
    },
    "0047586f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047586f(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    \n    iVar1 = fcn.0040d1a0(1, 1);\n    if (iVar1 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(0xffffffff, 0);\n        return 0;\n    }\n    iVar1 = fcn.0040c8f0();\n    if (iVar1 != 0x2b594d1) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(0xfffffffe, 0);\n        return 0;\n    }\n    fcn.0040d1a0(1, 1);\n    uVar2 = fcn.0040c8f0();\n    iVar1 = (*_sym.imp.WSOCK32.dll_closesocket)(uVar2);\n    if (iVar1 != 0) {\n        fcn.004091e0();\n        arg_ch_00 = 0;\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00403f40(uVar2, arg_ch_00);\n        return 0;\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 1;\n    return 0;\n}\n",
        "token_count": 376
    },
    "004771b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004771b1(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint arg_10h;\n    \n    puVar2 = arg_ch;\n    arg_10h = 0;\n    fcn.0040ea00(1);\n    if (*(arg_8h + 8) != 0) {\n        arg_10h = fcn.0044b01e(**(arg_8h + 4));\n    }\n    iVar1 = fcn.00440d14(&arg_ch, &arg_8h, arg_10h);\n    if (iVar1 != 0) {\n        puVar2 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        puVar2[2] = 1;\n        *puVar2 = arg_ch;\n        piVar3 = fcn.0040d1a0(0, 1);\n        fcn.004091e0();\n        piVar3[2] = 1;\n        *piVar3 = arg_8h;\n        return 0;\n    }\n    fcn.004091e0();\n    puVar2[2] = 1;\n    *puVar2 = 0;\n    return 0;\n}\n",
        "token_count": 304
    },
    "004773a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004773a2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040d1a0(0, 1);\n    fcn.0040e8e0();\n    return;\n}\n",
        "token_count": 59
    },
    "004773ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004773ca(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    puVar1[2] = 1;\n    *puVar1 = arg_ch;\n    return;\n}\n",
        "token_count": 82
    },
    "004773f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004773f9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040d1a0(0, 2);\n    fcn.0040e8e0();\n    return;\n}\n",
        "token_count": 65
    },
    "00477425": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00477425(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.0040d1a0(0, 2);\n    fcn.004091e0();\n    puVar1[2] = 1;\n    *puVar1 = arg_ch;\n    return;\n}\n",
        "token_count": 82
    },
    "00478ca5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478ca5(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x98) = 0;\n    cVar1 = fcn.0040d110();\n    if (cVar1 != '\\0') {\n        fcn.0047106a(in_ECX, arg_8h);\n        iVar2 = fcn.0046ec64(in_ECX, 1);\n        if (iVar2 < 1) {\n            if (iVar2 < 0) {\n                fcn.00403f40(-iVar2, 0);\n            }\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n            return 0;\n        }\n        *(in_ECX + 0x98) = **(in_ECX + 0x1d8);\n    }\n    return 0;\n}\n",
        "token_count": 223
    },
    "00478dfd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478dfd(int32_t arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    double *pdVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar3 = fcn.0046ec64(in_ECX, 1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00403f40(-iVar3, 0);\n        }\n        pdVar2 = arg_ch;\n        fcn.004091e0();\n        *(pdVar2 + 1) = 1;\n        *pdVar2 = 0xffffffff;\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(**(in_ECX + 0x1d8), &arg_8h);\n    pdVar2 = arg_ch;\n    dVar1 = arg_8h;\n    if (arg_8h < 0) {\n        dVar1 = dVar1 + *0x48bd70;\n    }\n    fcn.004091e0();\n    *pdVar2 = dVar1;\n    *(pdVar2 + 1) = 3;\n    return 0;\n}\n",
        "token_count": 290
    },
    "00479057": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479057(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    uVar4 = arg_8h;\n    fcn.0040c8f0();\n    uVar2 = fcn.0040c8f0();\n    arg_8h = arg_8h & 0xffffff00 | uVar2;\n    fcn.0047106a(in_ECX, uVar4);\n    iVar3 = fcn.0046ec64(in_ECX, 1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00403f40(-iVar3, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    uVar1 = **(in_ECX + 0x1d8);\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar1, 0xffffffec);\n    if ((uVar2 == 0xff) && ((uVar4 & 0x80000) != 0)) {\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, uVar4 ^ 0x80000);\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, uVar4 | 0x80000);\n    (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)(uVar1, 0, arg_8h, 2);\n    return 0;\n}\n",
        "token_count": 401
    },
    "0047911d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047911d(uint arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    \n    uVar3 = 1;\n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.00403f40(iVar1, 0);\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    iVar1 = **(in_ECX + 0x1d8);\n    iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(iVar1);\n    if (iVar2 != 0) {\n        uVar3 = 3;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar1);\n    if (iVar2 != 0) {\n        uVar3 = uVar3 | 4;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    if (iVar2 == iVar1) {\n        uVar3 = uVar3 | 8;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_IsIconic)(iVar1);\n    if (iVar2 != 0) {\n        uVar3 = uVar3 | 0x10;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_IsZoomed)(iVar1);\n    if (iVar1 != 0) {\n        uVar3 = uVar3 | 0x20;\n    }\n    fcn.004091e0();\n    *arg_ch = uVar3;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 448
    },
    "004791db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004791db(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uchar auStack344 [340];\n    \n    fcn.0040e8e0();\n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (0 < iVar1) {\n        fcn.0040d370();\n        fcn.0040bf10();\n        fcn.00460f65(auStack344, **(in_ECX + 0x1d8), &stack0xfffffe98);\n        fcn.0040e870();\n        fcn.00402260();\n        fcn.00401400();\n        return 0;\n    }\n    if (iVar1 < 0) {\n        fcn.00403f40(-iVar1, 0);\n        return 0;\n    }\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 235
    },
    "00479292": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479292(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar2 = fcn.0046ec64(in_ECX, 1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n        }\n        else {\n            iVar2 = 1;\n        }\n        fcn.00403f40(iVar2, 0);\n        fcn.0040e8e0();\n        return 0;\n    }\n    uVar1 = **(in_ECX + 0x1d8);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 7;\n    return 0;\n}\n",
        "token_count": 206
    },
    "00479302": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479302(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n            return 0;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetClientRect)(**(in_ECX + 0x1d8), &var_10h);\n        if (iVar1 != 0) {\n            fcn.0040ea00(1);\n            piVar2 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            piVar2[2] = 1;\n            *piVar2 = var_8h - var_10h;\n            piVar2 = fcn.0040d1a0(0, 1);\n            fcn.004091e0();\n            *piVar2 = var_4h - var_ch;\n            piVar2[2] = 1;\n            return 0;\n        }\n    }\n    fcn.00403f40(1, 0);\n    return 0;\n}\n",
        "token_count": 382
    },
    "004793ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004793ec(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.00403f40(iVar1, 0);\n        fcn.0040e8e0();\n        return 0;\n    }\n    fcn.004437a7(**(in_ECX + 0x1d8));\n    fcn.0040e8e0();\n    return 0;\n}\n",
        "token_count": 185
    },
    "0047964e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047964e(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.00403f40(iVar1, 0);\n        fcn.004091e0();\n        *arg_ch = 0;\n        arg_ch[2] = 1;\n        return 0;\n    }\n    fcn.0044c99f(*(in_ECX + 0x1d8), &var_10h, 0);\n    fcn.0040ea00(1);\n    piVar2 = fcn.0040d1a0(0, 1);\n    iVar1 = var_10h;\n    fcn.004091e0();\n    piVar2[2] = 1;\n    *piVar2 = iVar1;\n    piVar2 = fcn.0040d1a0(0, 1);\n    iVar1 = var_ch;\n    fcn.004091e0();\n    piVar2[2] = 1;\n    *piVar2 = iVar1;\n    piVar2 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    piVar2[2] = 1;\n    *piVar2 = var_8h - var_10h;\n    piVar2 = fcn.0040d1a0(0, 1);\n    fcn.004091e0();\n    *piVar2 = var_4h - var_ch;\n    piVar2[2] = 1;\n    return 0;\n}\n",
        "token_count": 479
    },
    "00479806": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00479806(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    fcn.00409120(**(arg_ch + 4));\n    uVar3 = fcn.00452e60(*(*(arg_ch + 4) + 4));\n    fcn.0040e410(uVar3);\n    iVar4 = fcn.0046ec64(arg_8h, 1);\n    if (iVar4 < 1) {\n        return 0;\n    }\n    uVar3 = **(arg_8h + 0x1d8);\n    fcn.0040bc00();\n    cVar1 = fcn.004423e0(&stack0xffffffc4);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0044357d(&stack0xffffffc0);\n        if ((cVar1 == '\\0') && (cVar1 = fcn.00453140(&stack0xffffffbc),  cVar1 == '\\0')) {\n            fcn.004091e0();\n            return 0;\n        }\n        cVar1 = fcn.0040d110();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00453140(&stack0xffffffb8);\n            if (cVar1 == '\\0') {\n                uVar5 = fcn.00452e60(&stack0xffffffb4);\n                uVar2 = fcn.00468d2e(arg_8h + 0x2fc, uVar3, uVar5);\n            }\n            else {\n                uVar5 = fcn.0040c8f0();\n                uVar2 = fcn.0046140f(arg_8h + 0x2fc, uVar3, uVar5);\n            }\n            fcn.004091e0();\n            return uVar2;\n        }\n        fcn.0040bf10();\n        cVar1 = fcn.00460f65(arg_8h + 0x2fc, uVar3, &stack0xffffffc8);\n        if (cVar1 == '\\0') {\n            fcn.0044ca32(arg_8h + 0x2fc, uVar3);\n        }\n        fcn.00402260();\n        fcn.004091e0();\n        return 1;\n    }\n    uVar3 = fcn.0044b01e(&stack0xffffffc4);\n    fcn.0044ca32(arg_8h + 0x2fc, uVar3);\n    fcn.004091e0();\n    return 1;\n}\n",
        "token_count": 609
    },
    "0047996b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047996b(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar2 = fcn.0046ec64(in_ECX, 1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.00403f40(-iVar2, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    cVar1 = fcn.00436226(*(in_ECX + 0x1d8));\n    if (cVar1 != '\\0') {\n        fcn.0040e8e0();\n        return 0;\n    }\n    fcn.00443878(**(in_ECX + 0x1d8), *(in_ECX + 0x2dc));\n    fcn.0040e8e0();\n    return 0;\n}\n",
        "token_count": 251
    },
    "00479a05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479a05(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    fcn.0040bf10();\n    fcn.00460d94(*(in_ECX + 0x1d8), &stack0xffffffd8);\n    fcn.0040e870();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 204
    },
    "00479a91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479a91(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    char cVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    int32_t in_ECX;\n    uint arg_8h_01;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar2 = fcn.0046ec64(in_ECX, 1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.00403f40(-iVar2, 0);\n        }\n    }\n    else {\n        arg_8h_01 = *(*(arg_8h + 4) + 8);\n        arg_8h_00 = *(in_ECX + 0x1d8);\n        arg_ch_00 = fcn.00452e60(arg_8h_01);\n        cVar1 = fcn.0044562b(arg_8h_00, arg_ch_00, arg_8h_01);\n        if (cVar1 != '\\0') {\n            return 0;\n        }\n    }\n    fcn.004091e0();\n    *arg_ch = 0;\n    arg_ch[2] = 1;\n    return 0;\n}\n",
        "token_count": 295
    },
    "00479aff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479aff(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    fcn.00434573(**(in_ECX + 0x1d8));\n    fcn.0043374b(*(in_ECX + 0x2f4));\n    return 0;\n}\n",
        "token_count": 190
    },
    "00479b6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479b6e(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    fcn.0043614c(*(in_ECX + 0x1d8));\n    fcn.0043374b(*(in_ECX + 0x2f4));\n    return 0;\n}\n",
        "token_count": 192
    },
    "00479dda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479dda(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    iVar1 = fcn.0040c8f0();\n    if (iVar1 == 0x40) {\n        fcn.00436195(*(in_ECX + 0x1d8), 1);\n        return 0;\n    }\n    if (iVar1 == 0x41) {\n        fcn.00436195(*(in_ECX + 0x1d8), 0);\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(**(in_ECX + 0x1d8), iVar1);\n    fcn.0043374b(*(in_ECX + 0x2f4));\n    return 0;\n}\n",
        "token_count": 292
    },
    "00479e8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479e8f(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    iVar1 = **(in_ECX + 0x1d8);\n    iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    if (iVar1 == iVar2) {\n        fcn.0043374b(*(in_ECX + 0x2f4));\n    }\n    iVar1 = fcn.004349fb(**(in_ECX + 0x1d8));\n    if (iVar1 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        uVar3 = **(in_ECX + 0x1d8);\n        fcn.004091e0();\n        arg_ch[2] = 7;\n        *arg_ch = uVar3;\n        fcn.00403f80(iVar1, 0);\n    }\n    fcn.0043374b(*(in_ECX + 0x2f4));\n    return 0;\n}\n",
        "token_count": 377
    },
    "00479f73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479f73(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046ec64(in_ECX, 1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "00479fbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479fbe(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    \n    fcn.0047106a(in_ECX, arg_8h);\n    iVar1 = fcn.0046f662(in_ECX);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00403f40(-iVar1, 0);\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.004091e0();\n    *arg_ch = uVar2;\n    arg_ch[2] = 7;\n    return 0;\n}\n",
        "token_count": 195
    },
    "0047a396": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a396(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    cVar2 = fcn.00479806(in_ECX, arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00403f40(1, 0);\n        fcn.0040e8e0();\n        return 0;\n    }\n    uVar1 = **(in_ECX + 0x2fc);\n    fcn.004091e0();\n    *arg_ch = uVar1;\n    arg_ch[2] = 7;\n    return 0;\n}\n",
        "token_count": 158
    },
    "0047a48d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a48d(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint arg_8h_00;\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint in_ECX;\n    int32_t unaff_EDI;\n    int32_t *piStack56;\n    uchar auStack36 [32];\n    \n    cVar1 = fcn.00479806(in_ECX, arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    fcn.0040bf10();\n    iVar2 = fcn.00452e60(*(*(arg_8h + 4) + 0xc));\n    piStack56 = *(iVar2 + 0xc);\n    *piStack56 = *piStack56 + 1;\n    fcn.00410d60();\n    fcn.0040d530();\n    uVar3 = *(arg_8h + 8);\n    while (uVar3 < 6) {\n        fcn.0040bcb0(&stack0xffffffdc);\n        uVar3 = *(arg_8h + 8);\n    }\n    arg_8h_00 = *(unaff_EDI + 0x2fc);\n    cVar1 = fcn.004456fa(&stack0xffffffbc, L\"GETTOTALCOUNT\");\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.004364b9(arg_8h_00);\n        goto code_r0x0047a566;\n    }\n    cVar1 = fcn.004456fa(&stack0xffffffbc, L\"CHECK\");\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004456fa(&stack0xffffffbc, L\"COLLAPSE\");\n        if (cVar1 != '\\0') {\n            uVar5 = *(*(arg_8h + 4) + 0x10);\n            uVar4 = fcn.00452e60(uVar5);\n            cVar1 = fcn.004691e7(arg_8h_00, uVar4, uVar5);\n            goto code_r0x0047a5a6;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffbc, L\"EXISTS\");\n        if (cVar1 != '\\0') {\n            uVar5 = fcn.00452e60(*(*(arg_8h + 4) + 0x10));\n            uVar3 = fcn.0046943a(arg_8h_00, uVar5);\n            uVar3 = uVar3 & 0xff;\ncode_r0x0047a566:\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = uVar3;\n            goto code_r0x0047a5be;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffbc, L\"EXPAND\");\n        if (cVar1 != '\\0') {\n            uVar5 = *(*(arg_8h + 4) + 0x10);\n            uVar4 = fcn.00452e60(uVar5);\n            cVar1 = fcn.004691e7(arg_8h_00, uVar4, uVar5);\n            goto code_r0x0047a5a6;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffbc, L\"GETITEMCOUNT\");\n        if (cVar1 != '\\0') {\n            uVar5 = fcn.00452e60(*(*(arg_8h + 4) + 0x10));\n            uVar3 = fcn.004618fa(arg_8h_00, uVar5);\n            goto code_r0x0047a566;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffbc, L\"GETSELECTED\");\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.00442cb5(*(*(arg_8h + 4) + 0x10));\n            cVar1 = fcn.004693d7(arg_8h_00, &stack0xffffffc8, uVar3 & 0xff);\n            fcn.0040e870();\n            goto code_r0x0047a5a6;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffbc, L\"GETTEXT\");\n        if (cVar1 != '\\0') {\n            uVar5 = *(*(arg_8h + 4) + 0x10);\n            uVar4 = fcn.00452e60(uVar5);\n            cVar1 = fcn.004694a4(arg_8h_00, uVar4, uVar5);\n            fcn.0040e870();\n            goto code_r0x0047a5a6;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffbc, L\"ISCHECKED\");\n        if (cVar1 != '\\0') {\n            uVar5 = fcn.00452e60(*(*(arg_8h + 4) + 0x10));\n            uVar3 = fcn.004691ad(arg_8h_00, uVar5);\n            goto code_r0x0047a566;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffbc, L\"SELECT\");\n        if (cVar1 != '\\0') {\n            uVar5 = fcn.00452e60(*(*(arg_8h + 4) + 0x10));\n            cVar1 = fcn.00469453(arg_8h_00, uVar5);\n            goto code_r0x0047a5a6;\n        }\n        cVar1 = fcn.004456fa(&stack0xffffffbc, L\"UNCHECK\");\n        if (cVar1 != '\\0') {\n            uVar5 = *(*(arg_8h + 4) + 0x10);\n            goto code_r0x0047a597;\n        }\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        uVar5 = *(*(arg_8h + 4) + 0x10);\ncode_r0x0047a597:\n        uVar4 = fcn.00452e60(uVar5);\n        cVar1 = fcn.00469128(arg_8h_00, uVar4, uVar5);\ncode_r0x0047a5a6:\n        if (cVar1 != '\\0') goto code_r0x0047a5be;\n    }\n    fcn.00403f40(0x47a5be, 0);\ncode_r0x0047a5be:\n    fcn.004091e0();\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1607
    },
    "0047a7be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a7be(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint in_ECX;\n    int32_t unaff_EDI;\n    uchar *arg_14h;\n    uchar auStack52 [16];\n    uchar auStack36 [32];\n    \n    cVar2 = fcn.00479806(in_ECX, arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    fcn.0040bf10();\n    iVar3 = fcn.00452e60(*(*(arg_8h + 4) + 0xc));\n    **(iVar3 + 0xc) = **(iVar3 + 0xc) + 1;\n    fcn.00410d60();\n    fcn.0040d530();\n    uVar1 = *(arg_8h + 8);\n    while (uVar1 < 6) {\n        fcn.0040bcb0(auStack36);\n        uVar1 = *(arg_8h + 8);\n    }\n    uVar4 = *(unaff_EDI + 0x2fc);\n    cVar2 = fcn.004456fa(&stack0xffffffbc, L\"GETITEMCOUNT\");\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.004456fa(&stack0xffffffbc, L\"GETSUBITEMCOUNT\");\n        if (cVar2 == '\\0') {\n            cVar2 = fcn.004456fa(&stack0xffffffbc, L\"GETTEXT\");\n            if (cVar2 != '\\0') {\n                arg_14h = auStack52;\n                uVar5 = fcn.0040c8f0();\n                uVar6 = fcn.0040c8f0();\n                fcn.00461a45(uVar4, uVar6, uVar5, arg_14h);\n                fcn.0040e870();\n                goto code_r0x0047ab59;\n            }\n            cVar2 = fcn.004456fa(&stack0xffffffbc, L\"GETSELECTEDCOUNT\");\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.004456fa(&stack0xffffffbc, L\"ISSELECTED\");\n                if (cVar2 != '\\0') {\n                    uVar5 = fcn.0040c8f0();\n                    cVar2 = fcn.004364d5(uVar4, uVar5);\n                    if (cVar2 == '\\0') {\n                        fcn.004091e0();\n                        arg_ch[2] = 1;\n                        *arg_ch = 0;\n                    }\n                    else {\n                        fcn.004091e0();\n                        arg_ch[2] = 1;\n                        *arg_ch = 1;\n                    }\n                    goto code_r0x0047ab59;\n                }\n                cVar2 = fcn.004456fa(&stack0xffffffbc, L\"SELECTALL\");\n                if (cVar2 != '\\0') {\n                    fcn.0043655c(uVar4, 1, 0xffffffff, 0xffffffff);\n                    goto code_r0x0047ab59;\n                }\n                cVar2 = fcn.004456fa(&stack0xffffffbc, L\"SELECTCLEAR\");\n                if (cVar2 != '\\0') {\n                    fcn.0043655c(uVar4, 0, 0xffffffff, 0xffffffff);\n                    goto code_r0x0047ab59;\n                }\n                cVar2 = fcn.004456fa(&stack0xffffffbc, L\"SELECT\");\n                if (cVar2 != '\\0') {\n                    iVar7 = fcn.0040c8f0();\n                    iVar3 = fcn.0040c8f0();\n                    if (iVar3 == 0) {\n                        iVar3 = iVar7;\n                    }\n                    fcn.0043655c(uVar4, 1, iVar7, iVar3);\n                    goto code_r0x0047ab59;\n                }\n                cVar2 = fcn.004456fa(&stack0xffffffbc, L\"SELECTINVERT\");\n                if (cVar2 != '\\0') {\n                    fcn.004459d0(uVar4);\n                    goto code_r0x0047ab59;\n                }\n                cVar2 = fcn.004456fa(&stack0xffffffbc, L\"DESELECT\");\n                if (cVar2 != '\\0') {\n                    iVar7 = fcn.0040c8f0();\n                    iVar3 = fcn.0040c8f0();\n                    if (iVar3 == 0) {\n                        iVar3 = iVar7;\n                    }\n                    fcn.0043655c(uVar4, 0, iVar7, iVar3);\n                    goto code_r0x0047ab59;\n                }\n                cVar2 = fcn.004456fa(&stack0xffffffbc, L\"GETSELECTED\");\n                if (cVar2 != '\\0') {\n                    iVar3 = fcn.0040c8f0();\n                    if (iVar3 != 0) {\n                        iVar3 = 1;\n                    }\n                    fcn.00461964(uVar4, iVar3, auStack52);\n                    fcn.0040e870();\n                    goto code_r0x0047ab59;\n                }\n                cVar2 = fcn.004456fa(&stack0xffffffbc, L\"FINDITEM\");\n                if (cVar2 == '\\0') {\n                    cVar2 = fcn.004456fa(&stack0xffffffbc, L\"VIEWCHANGE\");\n                    if (cVar2 == '\\0') {\n                        fcn.004091e0();\n                        arg_ch[2] = 1;\n                        *arg_ch = 0;\n                        fcn.00403f40(1, 0);\n                    }\n                    else {\n                        uVar5 = fcn.00452e60(*(*(arg_8h + 4) + 0x10));\n                        fcn.004457fe(uVar4, uVar5);\n                    }\n                    goto code_r0x0047ab59;\n                }\n                uVar5 = *(*(arg_8h + 4) + 0x10);\n                fcn.0040c8f0();\n                uVar6 = fcn.00452e60(uVar5);\n                uVar4 = fcn.004458d3(uVar4, uVar6, uVar5);\n            }\n            else {\n                uVar4 = fcn.004364f8(uVar4);\n            }\n        }\n        else {\n            uVar4 = fcn.00436514(uVar4);\n        }\n    }\n    else {\n        uVar4 = fcn.00436540(uVar4);\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = uVar4;\ncode_r0x0047ab59:\n    fcn.004091e0();\n    fcn.00402260();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 1626
    },
    "0047ab7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint __cdecl fcn.0047ab7f(uint *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    int32_t unaff_ESI;\n    uchar *puVar5;\n    uint *arg_8h_01;\n    uchar auStack48 [24];\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    auStack24[0] = 0;\n    uStack16 = 1;\n    uStack12 = 0;\n    fcn.0040bf10();\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = 0;\n    arg_8h_01 = arg_8h;\n    cVar2 = fcn.00479806(in_ECX, arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00403f40(1, 0);\n        goto code_r0x0047ad2c;\n    }\n    fcn.0040e8e0();\n    uVar1 = arg_8h[2];\n    while (uVar1 < 5) {\n        arg_8h_01 = auStack24;\n        fcn.0040bcb0(arg_8h_01);\n        uVar1 = arg_8h[2];\n    }\n    iVar3 = fcn.00452e60(*(arg_8h[1] + 0xc));\n    **(iVar3 + 0xc) = **(iVar3 + 0xc) + 1;\n    fcn.00410d60();\n    arg_8h_00 = *(unaff_ESI + 0x2fc);\n    cVar2 = fcn.004456fa(&stack0xffffffc0, 0x48b6f4);\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.004456fa(&stack0xffffffc0, L\"ISENABLED\");\n        if (cVar2 != '\\0') {\n            cVar2 = fcn.0043611c(arg_8h_00);\n            goto code_r0x0047ac6b;\n        }\n        cVar2 = fcn.004456fa(&stack0xffffffc0, L\"TABLEFT\");\n        if (cVar2 == '\\0') {\n            cVar2 = fcn.004456fa(&stack0xffffffc0, L\"TABRIGHT\");\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.004456fa(&stack0xffffffc0, L\"CURRENTTAB\");\n                if (cVar2 == '\\0') {\n                    cVar2 = fcn.004456fa(&stack0xffffffc0, L\"SHOWDROPDOWN\");\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.004456fa(&stack0xffffffc0, L\"HIDEDROPDOWN\");\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.004456fa(&stack0xffffffc0, L\"ADDSTRING\");\n                            if (cVar2 == '\\0') {\n                                cVar2 = fcn.004456fa(&stack0xffffffc0, L\"DELSTRING\");\n                                if (cVar2 == '\\0') {\n                                    cVar2 = fcn.004456fa(&stack0xffffffc0, L\"FINDSTRING\");\n                                    if (cVar2 != '\\0') {\n                                        puVar5 = &stack0xffffffbc;\n                                        uVar4 = fcn.00452e60(*(arg_8h[1] + 0x10));\n                                        cVar2 = fcn.004697c8(arg_8h_00, uVar4, arg_8h_00);\n                                        if (cVar2 == '\\0') goto code_r0x0047ad18;\n                                        fcn.004091e0();\n                                        arg_ch[2] = 1;\n                                        *arg_ch = puVar5;\n                                        goto code_r0x0047ad23;\n                                    }\n                                    cVar2 = fcn.004456fa(&stack0xffffffc0, L\"SETCURRENTSELECTION\");\n                                    if (cVar2 == '\\0') {\n                                        cVar2 = fcn.004456fa(&stack0xffffffc0, L\"GETCURRENTSELECTION\");\n                                        if (cVar2 != '\\0') {\n                                            cVar2 = fcn.004695ca(arg_8h_00, auStack48);\n                                            goto joined_r0x0047aec6;\n                                        }\n                                        cVar2 = fcn.004456fa(&stack0xffffffc0, L\"SELECTSTRING\");\n                                        if (cVar2 == '\\0') {\n                                            cVar2 = fcn.004456fa(&stack0xffffffc0, L\"ISCHECKED\");\n                                            if (cVar2 != '\\0') {\n                                                cVar2 = fcn.004366ec(arg_8h_00);\n                                                goto code_r0x0047ac6b;\n                                            }\n                                            cVar2 = fcn.004456fa(&stack0xffffffc0, L\"CHECK\");\n                                            if (cVar2 == '\\0') {\n                                                cVar2 = fcn.004456fa(&stack0xffffffc0, L\"UNCHECK\");\n                                                if (cVar2 == '\\0') {\n                                                    cVar2 = fcn.004456fa(&stack0xffffffc0, L\"GETSELECTED\");\n                                                    if (cVar2 == '\\0') {\n                                                        cVar2 = fcn.004456fa(&stack0xffffffc0, L\"GETLINECOUNT\");\n                                                        if (cVar2 == '\\0') {\n                                                            cVar2 = fcn.004456fa(&stack0xffffffc0, L\"GETCURRENTLINE\");\n                                                            if (cVar2 == '\\0') {\n                                                                cVar2 = fcn.004456fa(&stack0xffffffc0, L\"GETCURRENTCOL\")\n                                                                ;\n                                                                if (cVar2 == '\\0') {\n                                                                    cVar2 = fcn.004456fa(&stack0xffffffc0, L\"EDITPASTE\")\n                                                                    ;\n                                                                    if (cVar2 != '\\0') {\n                                                                        fcn.00452e60(*(arg_8h[1] + 0x10));\n                                                                        fcn.00445a18(arg_8h_00, arg_8h_00);\n                                                                        goto code_r0x0047ad23;\n                                                                    }\n                                                                    cVar2 = fcn.004456fa(&stack0xffffffc0, L\"GETLINE\");\n                                                                    if (cVar2 == '\\0') {\n                                                                        cVar2 = fcn.004456fa(&stack0xffffffc0, \n                                                                                             L\"SENDCOMMANDID\");\n                                                                        if (cVar2 == '\\0') goto code_r0x0047ad18;\n                                                                        uVar4 = fcn.0040c8f0();\n                                                                        cVar2 = fcn.004362e8(arg_8h_00, uVar4);\n                                                                        goto joined_r0x0047b0f0;\n                                                                    }\n                                                                    puVar5 = auStack48;\n                                                                    fcn.0040c8f0();\n                                                                    cVar2 = fcn.00461afb(arg_8h_00, arg_8h_00, puVar5);\n                                                                    goto joined_r0x0047aec6;\n                                                                }\n                                                                fcn.00436611(arg_8h_00, &stack0xffffffbc);\n                                                            }\n                                                            else {\n                                                                fcn.004366a5(arg_8h_00, &stack0xffffffbc);\n                                                            }\n                                                        }\n                                                        else {\n                                                            fcn.004366c9(arg_8h_00, &stack0xffffffbc);\n                                                        }\ncode_r0x0047b02c:\n                                                        fcn.004091e0();\n                                                        arg_ch[2] = 1;\n                                                        *arg_ch = arg_8h_01;\n                                                    }\n                                                    else {\n                                                        cVar2 = fcn.00461b7c(arg_8h_00, auStack48);\njoined_r0x0047aec6:\n                                                        if (cVar2 == '\\0') goto code_r0x0047ad18;\n                                                        fcn.0040e870();\n                                                    }\n                                                }\n                                                else {\n                                                    fcn.00445a3a(arg_8h_00, 0);\n                                                }\n                                            }\n                                            else {\n                                                fcn.00445a3a(arg_8h_00, 1);\n                                            }\n                                            goto code_r0x0047ad23;\n                                        }\n                                        fcn.00452e60(*(arg_8h[1] + 0x10));\n                                        cVar2 = fcn.004694e2(arg_8h_00, arg_8h_00);\n                                    }\n                                    else {\n                                        uVar4 = fcn.0040c8f0();\n                                        cVar2 = fcn.004696e2(arg_8h_00, uVar4);\n                                    }\n                                }\n                                else {\n                                    uVar4 = fcn.0040c8f0();\n                                    cVar2 = fcn.00469859(arg_8h_00, uVar4);\n                                }\n                            }\n                            else {\n                                fcn.00452e60(*(arg_8h[1] + 0x10));\n                                cVar2 = fcn.004698e2(arg_8h_00, arg_8h_00);\n                            }\n                        }\n                        else {\n                            cVar2 = fcn.0043670e(arg_8h_00, 0);\n                        }\n                    }\n                    else {\n                        cVar2 = fcn.0043670e(arg_8h_00, 1);\n                    }\njoined_r0x0047b0f0:\n                    if (cVar2 != '\\0') goto code_r0x0047ad23;\n                }\n                else {\n                    cVar2 = fcn.00436748(arg_8h_00, &stack0xffffffbc);\n                    if (cVar2 != '\\0') goto code_r0x0047b02c;\n                }\ncode_r0x0047ad18:\n                fcn.00403f40(1, 0);\n            }\n            else {\n                fcn.00445a6c(arg_8h_00, 1);\n            }\n        }\n        else {\n            fcn.00445a6c(arg_8h_00, 0xffffffff);\n        }\n    }\n    else {\n        cVar2 = fcn.00436134(arg_8h_00);\ncode_r0x0047ac6b:\n        if (cVar2 == '\\0') {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 0;\n        }\n        else {\n            fcn.004091e0();\n            arg_ch[2] = 1;\n            *arg_ch = 1;\n        }\n    }\ncode_r0x0047ad23:\n    fcn.00402260();\ncode_r0x0047ad2c:\n    fcn.00402260();\n    fcn.004091e0();\n    return 0;\n}\n",
        "token_count": 2456
    },
    "0047b424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b424(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    \n    fcn.0040e8e0();\n    cVar1 = fcn.00479806(in_ECX, arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    fcn.0040bf10();\n    cVar1 = fcn.00460d94(*(in_ECX + 0x2fc), &stack0xffffffe0);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(1, 0);\n        fcn.00402260();\n        return 0;\n    }\n    fcn.0040e870();\n    fcn.00402260();\n    return 0;\n}\n",
        "token_count": 202
    },
    "0047db13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047db13(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint arg_ch_00;\n    uint32_t in_ECX;\n    uint arg_8h_00;\n    uint arg_1ch;\n    int32_t arg_20h;\n    uint uStack12;\n    \n    if (0xf3b < *(in_ECX + 0xf0)) {\n        *0x4974e2 = 0;\n        fcn.0045e1ee(in_ECX, 0x9a, 0xffffffff);\n        return 1;\n    }\n    arg_20h = &uStack12 + 3;\n    *(in_ECX + 0xf0) = *(in_ECX + 0xf0) + 1;\n    arg_8h_00 = **(arg_8h + 4);\n    arg_1ch = 1;\n    uStack12 = in_ECX & 0xffffff;\n    arg_ch_00 = fcn.00452e81(arg_8h_00);\n    cVar1 = fcn.0047d027(in_ECX, arg_ch_00, arg_8h_00, arg_8h, arg_ch, arg_1ch, arg_20h);\n    if (cVar1 == '\\0') {\n        fcn.00403f40(0xdead, 0);\n        fcn.00403f80(0xbeef, 0);\n    }\n    *(in_ECX + 0xf0) = *(in_ECX + 0xf0) + -1;\n    return 0;\n}\n",
        "token_count": 361
    },
    "0047fddd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fddd(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.004578f3(in_ECX, arg_8h, *(arg_8h + 8));\n    if (cVar1 == '\\0') {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n        fcn.00403f40(1, 0);\n        return 0;\n    }\n    fcn.0040d6b0();\n    *(in_ECX + 0xf8) = 8;\n    fcn.00409480(0);\n    arg_8h_00 = fcn.00403f70();\n    fcn.00409120(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 210
    },
    "0047ff2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ff2a(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.00473b18(in_ECX, arg_8h);\n    fcn.0040d6b0();\n    *(in_ECX + 0xf8) = 4;\n    fcn.00409480(0);\n    arg_8h_00 = fcn.00403f70();\n    fcn.00409120(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 130
    },
    "0047ff83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ff83(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.00473b18(in_ECX, arg_8h);\n    fcn.0040d6b0();\n    *(in_ECX + 0xf8) = 6;\n    fcn.00409480(0);\n    arg_8h_00 = fcn.00403f70();\n    fcn.00409120(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 129
    },
    "0047ffdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ffdc(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.00473b18(in_ECX, arg_8h);\n    fcn.0040d6b0();\n    *(in_ECX + 0xf8) = 5;\n    fcn.00409480(0);\n    arg_8h_00 = fcn.00403f70();\n    fcn.00409120(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 129
    },
    "00480035": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480035(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.00473b18(in_ECX, arg_8h);\n    fcn.0040d6b0();\n    *(in_ECX + 0xf8) = 3;\n    fcn.00409480(0);\n    arg_8h_00 = fcn.00403f70();\n    fcn.00409120(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 128
    },
    "00403f40": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f40(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403f70();\n    *(iVar1 + 0x14) = arg_8h;\n    iVar1 = fcn.00403f70();\n    *(iVar1 + 0x18) = arg_ch;\n    return;\n}\n",
        "token_count": 88
    },
    "0040e640": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0040e640(void)\n\n{\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    fcn.0040bc00();\n    *(unaff_ESI + 0x10) = *(unaff_EDI + 0x10);\n    *(unaff_ESI + 0x14) = *(unaff_EDI + 0x14);\n    *(unaff_ESI + 0x18) = *(unaff_EDI + 0x18);\n    fcn.0040bc00();\n    *(unaff_ESI + 0x30) = *(unaff_EDI + 0x30);\n    return;\n}\n",
        "token_count": 149
    },
    "0040e8b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0040e8b0(void)\n\n{\n    uint *unaff_ESI;\n    \n    *unaff_ESI = 0;\n    fcn.0040bf10();\n    unaff_ESI[5] = 0x483f6c;\n    unaff_ESI[6] = 0;\n    unaff_ESI[7] = 0;\n    unaff_ESI[8] = 0;\n    return;\n}\n",
        "token_count": 99
    },
    "00410c30": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "log keystrokes"
        ],
        "decompiled_code": "\nvoid fcn.00410c30(void)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    uint *unaff_ESI;\n    \n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    *unaff_ESI = 5;\n    unaff_ESI[1] = 5;\n    *(unaff_ESI + 2) = 1;\n    unaff_ESI[4] = 0;\n    unaff_ESI[5] = 0;\n    *(unaff_ESI + 6) = 0;\n    *(unaff_ESI + 0x1a) = 0;\n    *(unaff_ESI + 0x1e) = 0;\n    unaff_ESI[3] = 4;\n    uVar2 = (*pcVar1)(0x5b, 0);\n    *(unaff_ESI + 0x29) = uVar2;\n    uVar2 = (*pcVar1)(0x10, 0);\n    *(unaff_ESI + 0x26) = uVar2;\n    uVar2 = (*pcVar1)(0xa0, 0);\n    *(unaff_ESI + 0x27) = uVar2;\n    uVar2 = (*pcVar1)(0xa1, 0);\n    *(unaff_ESI + 10) = uVar2;\n    uVar2 = (*pcVar1)(0x11, 0);\n    *(unaff_ESI + 9) = uVar2;\n    uVar2 = (*pcVar1)(0x12, 0);\n    *(unaff_ESI + 0x25) = uVar2;\n    return;\n}\n",
        "token_count": 375
    },
    "00410ca0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00410ca0(void)\n\n{\n    uint *in_EAX;\n    \n    *in_EAX = 0;\n    in_EAX[2] = 1;\n    in_EAX[3] = 0;\n    *(in_EAX + 4) = 0;\n    in_EAX[5] = 0;\n    *(in_EAX + 6) = 0;\n    in_EAX[8] = 0;\n    in_EAX[10] = 1;\n    in_EAX[0xb] = 0;\n    *(in_EAX + 0xc) = 0;\n    return;\n}\n",
        "token_count": 140
    },
    "00410d10": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00410d10(void)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EDI;\n    \n    fcn.0040e410(unaff_EDI);\n    *(in_EAX + 0x10) = *(unaff_EDI + 0x10);\n    *(in_EAX + 0x14) = *(unaff_EDI + 0x14);\n    *(in_EAX + 0x18) = *(unaff_EDI + 0x18);\n    *(in_EAX + 0x1c) = *(unaff_EDI + 0x1c);\n    return;\n}\n",
        "token_count": 141
    },
    "00432c6b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432c6b(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    *arg_8h = arg_ch;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[5] = 0;\n    arg_8h[6] = 0;\n    arg_8h[7] = 0;\n    arg_8h[8] = 0;\n    arg_8h[9] = 0;\n    *(arg_8h + 2) = 0;\n    if ((*arg_8h & 8) != 0) {\n        *arg_8h = *arg_8h | 6;\n    }\n    if ((*arg_8h & 0x10) != 0) {\n        *arg_8h = 0x10;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0044a26d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a26d(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    \n    *arg_8h = *arg_ch;\n    arg_8h[1] = arg_ch[1];\n    arg_8h[2] = arg_ch[2];\n    piVar1 = arg_ch[3];\n    arg_8h[3] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(arg_8h + 4) = *(arg_ch + 4);\n    *(arg_8h + 0x11) = *(arg_ch + 0x11);\n    arg_8h[5] = arg_ch[5];\n    arg_8h[6] = arg_ch[6];\n    return;\n}\n",
        "token_count": 183
    },
    "0044a8f6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a8f6(ushort *arg_8h, ushort *arg_ch)\n\n{\n    int32_t *piVar1;\n    \n    *arg_8h = *arg_ch;\n    *(arg_8h + 2) = *(arg_ch + 2);\n    *(arg_8h + 4) = *(arg_ch + 4);\n    *(arg_8h + 6) = *(arg_ch + 6);\n    piVar1 = *(arg_ch + 8);\n    *(arg_8h + 8) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(arg_8h + 10) = *(arg_ch + 10);\n    *(arg_8h + 0xc) = *(arg_ch + 0xc);\n    *(arg_8h + 0xe) = *(arg_ch + 0xe);\n    piVar1 = *(arg_ch + 0x10);\n    *(arg_8h + 0x10) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(arg_8h + 0x12) = *(arg_ch + 0x12);\n    *(arg_8h + 0x14) = *(arg_ch + 0x14);\n    *(arg_8h + 0x16) = *(arg_ch + 0x16);\n    piVar1 = *(arg_ch + 0x18);\n    *(arg_8h + 0x18) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 361
    },
    "0044c7f8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044c7f8(uint *arg_8h, uint rclsid, int32_t *pdwRegister, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = arg_8h;\n    piVar1 = arg_8h + 7;\n    *arg_8h = 0x484630;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[5] = 0;\n    arg_8h[6] = 0;\n    *piVar1 = 0;\n    arg_8h[8] = 1;\n    arg_8h[9] = 1;\n    if (pdwRegister == NULL) {\n        if (arg_14h == 0) {\n            return arg_8h;\n        }\n    }\n    else {\n        fcn.00444d04(arg_8h, pdwRegister);\n        iVar3 = (*_sym.imp.OLEAUT32.dll_CreateStdDispatch)(arg_8h_00[4], 0x800, piVar1);\n        if (iVar3 < 0) {\n            return arg_8h_00;\n        }\n    }\n    if (*piVar1 != 0) {\n        fcn.004352d1(arg_8h_00);\n        uVar2 = rclsid;\n        iVar3 = *piVar1;\n        arg_8h_00[9] = arg_14h;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_RegisterActiveObject)(0, rclsid, iVar3, &pdwRegister);\n        if (-1 < iVar3) {\n            arg_8h_00[5] = uVar2;\n            arg_8h = NULL;\n            iVar3 = (***pdwRegister)(pdwRegister, 0x4819a0, &arg_8h);\n            (**(*pdwRegister + 8))(pdwRegister);\n            if (-1 < iVar3) {\n                arg_8h_00[6] = arg_8h;\n            }\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 525
    },
    "0045131d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0045131d(uint *arg_8h, uint *arg_ch)\n\n{\n    *arg_8h = *arg_ch;\n    fcn.0040e410(arg_ch + 1);\n    arg_8h[5] = arg_ch[5];\n    arg_8h[6] = arg_ch[6];\n    arg_8h[7] = arg_ch[7];\n    arg_8h[8] = arg_ch[8];\n    return arg_8h;\n}\n",
        "token_count": 114
    },
    "00451c89": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00451c89(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    \n    *arg_8h = *arg_ch;\n    arg_8h[1] = arg_ch[1];\n    arg_8h[2] = arg_ch[2];\n    arg_8h[3] = arg_ch[3];\n    arg_8h[4] = arg_ch[4];\n    arg_8h[5] = arg_ch[5];\n    arg_8h[6] = arg_ch[6];\n    arg_8h[7] = arg_ch[7];\n    arg_8h[8] = arg_ch[8];\n    arg_8h[9] = arg_ch[9];\n    arg_8h[10] = arg_ch[10];\n    piVar1 = arg_ch[0xb];\n    arg_8h[0xb] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(arg_8h + 0xc) = *(arg_ch + 0xc);\n    arg_8h[0xd] = arg_ch[0xd];\n    arg_8h[0xe] = arg_ch[0xe];\n    arg_8h[0xf] = arg_ch[0xf];\n    piVar1 = arg_ch[0x10];\n    arg_8h[0x10] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    fcn.00441ed0(arg_8h + 0x11, arg_ch + 0x11);\n    arg_8h[0x15] = arg_ch[0x15];\n    fcn.0044a957(arg_8h + 0x16, arg_ch + 0x16);\n    *(arg_8h + 0x34) = *(arg_ch + 0x34);\n    arg_8h[0x35] = arg_ch[0x35];\n    arg_8h[0x36] = arg_ch[0x36];\n    *(arg_8h + 0x37) = *(arg_ch + 0x37);\n    return arg_8h;\n}\n",
        "token_count": 492
    },
    "00452161": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00452161(int32_t arg_8h)\n\n{\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0x10) = 1;\n    *(arg_8h + 0x14) = 0;\n    fcn.0040bf10();\n    fcn.0040bf10();\n    return arg_8h;\n}\n",
        "token_count": 93
    },
    "004606d2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004606d2(uint *arg_8h)\n\n{\n    fcn.0040bf10();\n    fcn.0040bf10();\n    fcn.0040bf10();\n    *(arg_8h + 8) = 0;\n    arg_8h[0x15] = 0;\n    fcn.00402170();\n    *(arg_8h + 6) = *0x48bdc8;\n    arg_8h[2] = 0x80000000;\n    arg_8h[3] = 0x80000000;\n    arg_8h[0x16] = 0;\n    arg_8h[5] = 0;\n    arg_8h[4] = 0;\n    *arg_8h = 0xffffffff;\n    arg_8h[1] = 0xffffffff;\n    fcn.00402170();\n    fcn.00402170();\n    return arg_8h;\n}\n",
        "token_count": 220
    },
    "0046f8cb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0046f8cb(uint *arg_8h)\n\n{\n    *arg_8h = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 2;\n    arg_8h[5] = 0;\n    arg_8h[6] = 0;\n    arg_8h[7] = 0xffffffff;\n    arg_8h[8] = 0;\n    arg_8h[9] = 0;\n    fcn.0040bf10();\n    *(arg_8h + 0xe) = 0;\n    *(arg_8h + 0x3a) = 1;\n    arg_8h[0xf] = 0;\n    arg_8h[0x10] = 0;\n    arg_8h[0x13] = 0xffffffff;\n    arg_8h[0x14] = 0xffffffff;\n    arg_8h[0x15] = 0xffffffff;\n    arg_8h[0x16] = 0xffffffff;\n    arg_8h[0x17] = 0xffffffff;\n    arg_8h[0x18] = 0xffffffff;\n    arg_8h[0x19] = 0xffffffff;\n    fcn.0040bf10();\n    arg_8h[0x21] = 0;\n    arg_8h[0x1f] = 0x55;\n    arg_8h[0x20] = 400;\n    arg_8h[0x22] = 2;\n    fcn.00410e40(0x10);\n    arg_8h[100] = 0xffffffff;\n    arg_8h[0x65] = 0xffffffff;\n    arg_8h[0x70] = 0xffffffff;\n    arg_8h[0x71] = 0xffffffff;\n    *(arg_8h + 0x5b) = 0;\n    arg_8h[0x5c] = 0;\n    arg_8h[0x5d] = 0;\n    arg_8h[0x5e] = 0;\n    arg_8h[0x5f] = 0;\n    arg_8h[0x60] = 0;\n    arg_8h[0x61] = 0;\n    *(arg_8h + 0x62) = 0;\n    arg_8h[99] = 0;\n    arg_8h[0x66] = 0;\n    *(arg_8h + 0x67) = 0;\n    *(arg_8h + 0x19e) = 0;\n    arg_8h[0x68] = 0;\n    arg_8h[0x69] = 0;\n    arg_8h[0x6a] = 0;\n    arg_8h[0x6c] = 0;\n    arg_8h[0x6d] = 0;\n    arg_8h[0x72] = 0;\n    arg_8h[0x73] = 0;\n    arg_8h[0x74] = 0;\n    *(arg_8h + 0x6b) = 1;\n    return arg_8h;\n}\n",
        "token_count": 760
    },
    "00472c8d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00472c8d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    fcn.00409120(arg_ch);\n    *(arg_8h + 0x10) = *(arg_ch + 0x10);\n    *(arg_8h + 0x14) = *(arg_ch + 0x14);\n    *(arg_8h + 0x18) = *(arg_ch + 0x18);\n    fcn.00409120(arg_ch + 0x20);\n    *(arg_8h + 0x30) = *(arg_ch + 0x30);\n    return arg_8h;\n}\n",
        "token_count": 150
    },
    "0044331b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044331b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044302b(arg_8h, arg_8h + 0x14, arg_8h + 0x10, arg_8h + 0xc, arg_8h + 8);\n    if (iVar1 == 0) {\n        fcn.0044318c(arg_8h, 4, 0xfffffff4, arg_8h + 0x14, arg_8h + 0x10);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00443351": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443351(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044302b(arg_8h, arg_8h + 0xc, arg_8h + 8, arg_8h + 0x14, arg_8h + 0x10);\n    if (iVar1 == 0) {\n        fcn.0044318c(arg_8h, 2, 0xfffffff5, arg_8h + 0xc, arg_8h + 8);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00443afa": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443afa(uint *arg_8h)\n\n{\n    ulong uVar1;\n    \n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    uVar1 = fcn.0040e3c0(arg_8h);\n    (*_sym.imp.KERNEL32.dll_SetFilePointerEx)\n              (*arg_8h, arg_8h[4] - uVar1, (arg_8h[5] - (uVar1 >> 0x20)) - (arg_8h[4] < uVar1), 0, 1);\n    uVar1 = fcn.0040e3c0(arg_8h);\n    arg_8h[4] = uVar1;\n    arg_8h[5] = uVar1 >> 0x20;\n    return;\n}\n",
        "token_count": 194
    },
    "00443b3f": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443b3f(int32_t arg_8h)\n\n{\n    ulong uVar1;\n    \n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0xc) = 0;\n    uVar1 = fcn.0040e3c0(arg_8h);\n    *(arg_8h + 0x10) = uVar1;\n    *(arg_8h + 0x14) = uVar1 >> 0x20;\n    return;\n}\n",
        "token_count": 119
    },
    "0044b068": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b068(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    \n    *arg_ch = *(arg_8h + 8);\n    arg_ch[1] = *(arg_8h + 0xc);\n    uVar1 = *(arg_8h + 0x10);\n    piVar2 = *(arg_8h + 0x14);\n    *piVar2 = *piVar2 + 1;\n    arg_ch[2] = uVar1;\n    arg_ch[3] = piVar2;\n    return;\n}\n",
        "token_count": 144
    },
    "0044b52a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b52a(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    \n    *arg_8h = *arg_ch;\n    arg_8h[1] = arg_ch[1];\n    arg_8h[2] = arg_ch[2];\n    arg_8h[3] = arg_ch[3];\n    arg_8h[4] = arg_ch[4];\n    piVar1 = arg_ch[5];\n    arg_8h[5] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 143
    },
    "0044b55b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044b55b(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    *arg_8h = 0x29;\n    arg_8h[1] = 0xffffffff;\n    arg_8h[2] = arg_ch;\n    arg_8h[3] = arg_10h;\n    arg_8h[4] = arg_14h;\n    arg_8h[5] = arg_18h;\n    *arg_18h = *arg_18h + 1;\n    fcn.00402260();\n    return arg_8h;\n}\n",
        "token_count": 157
    },
    "00478627": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478627(int32_t param_1)\n\n{\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    ushort auStack24 [4];\n    uint uStack16;\n    \n    uStack40 = 0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = 0;\n    auStack24[0] = 8;\n    uStack16 = 0x483f68;\n    *(param_1 + 0x40) = 1;\n    fcn.00472ef4(param_1, auStack24, &uStack40);\n    return;\n}\n",
        "token_count": 152
    },
    "00476149": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00476149(uint noname_0, uint arg_ch)\n\n{\n    int32_t aiStack76 [18];\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    aiStack76[0] = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(aiStack76);\n    fcn.0040ea00(1);\n    fcn.0047583e(arg_ch, 0);\n    fcn.0047583e(arg_ch, 1);\n    fcn.0047583e(arg_ch, 2);\n    fcn.0047583e(arg_ch, 3);\n    fcn.0047583e(arg_ch, 4);\n    fcn.0047583e(arg_ch, 5);\n    fcn.0047583e(arg_ch, 6);\n    return 0;\n}\n",
        "token_count": 192
    },
    "0040d650": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d650(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040c8f0();\n    if (iVar1 < 1) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    }\n    else {\n        uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        *(in_ECX + 0x2f8) = uVar2;\n        uVar2 = fcn.0040c8f0();\n        *(in_ECX + 0x2f0) = uVar2;\n        *(in_ECX + 0xf8) = 2;\n        fcn.00409480(0);\n    }\n    return 0;\n}\n",
        "token_count": 184
    },
    "00431ee5": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00431ee5(int32_t *arg_8h, uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    \n    if (*arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*arg_8h, dwMilliseconds);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 86
    },
    "00434b65": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434b65(uint32_t arg_8h)\n\n{\n    double dVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    float10 fVar6;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_QueryPerformanceCounter;\n    if (-1 < arg_8h) {\n        if (arg_8h == 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            return;\n        }\n        if ((arg_8h < 0xf) && (iVar3 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_10h),  iVar3 != 0)) {\n            dVar1 = arg_8h;\n            if (arg_8h < 0) {\n                dVar1 = dVar1 + *0x48bd70;\n            }\n            do {\n                (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                (*pcVar2)(&var_8h);\n                bVar5 = var_8h < var_10h;\n                iVar4 = var_8h - var_10h;\n                iVar3 = var_4h - var_ch;\n                fVar6 = fcn.0040df40();\n            } while (CONCAT44(iVar3 - bVar5, iVar4) / fVar6 < dVar1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "00431ff2": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431ff2(int32_t *arg_8h, int16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if (arg_8h[1] != 0) {\n        uVar4 = 0;\n        do {\n            iVar3 = 0;\n            if (*arg_ch != 0) {\n                iVar2 = *arg_ch;\n                do {\n                    if (*(*arg_8h + iVar1 * 2) == iVar2) {\n                        return iVar1;\n                    }\n                    iVar2 = arg_ch[iVar3 + 1];\n                    iVar3 = iVar3 + 1;\n                } while (iVar2 != 0);\n            }\n            uVar4 = uVar4 + 1;\n            iVar1 = iVar1 + 1;\n        } while (uVar4 < arg_8h[1]);\n    }\n    return -1;\n}\n",
        "token_count": 234
    },
    "00434d00": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00434d00(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint pInputs;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    if ((*(arg_8h + 0xc) & 4) != 0) {\n        var_18h._0_2_ = arg_ch & 0xff;\n        var_18h._2_2_ = arg_10h & 0xff;\n        var_14h = arg_14h;\n        pInputs = 1;\n        var_10h = 0;\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n        return;\n    }\n    (*_sym.imp.USER32.dll_keybd_event)(arg_ch, arg_10h, arg_14h, 0);\n    return;\n}\n",
        "token_count": 232
    },
    "00434e14": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434e14(uchar *arg_8h, uchar *arg_ch)\n\n{\n    if (arg_8h != arg_ch) {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n        arg_8h[3] = arg_ch[3];\n        arg_8h[2] = arg_ch[2];\n        arg_8h[4] = arg_ch[4];\n        arg_8h[5] = arg_ch[5];\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00424024": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00424024(void)\n\n{\n    *0x491480 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x483c2c, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00410720": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00410720(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_CreateWindowExW;\n    *0x497518 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (0, L\"AutoIt v3\", L\"AutoIt v3\", 0xcf0000, 0x80000000, 0x80000000, 300, 100, 0, 0, *0x497520, 0\n                          );\n    *0x497514 = (*pcVar1)(0, L\"edit\", 0, 0x50b008c4, 0, 0, 0, 0, *0x497518, 1, *0x497520, 0);\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    (*_sym.imp.USER32.dll_ShowWindow)(*0x497518, 0);\n    (*pcVar1)(*0x497518, 0);\n    return;\n}\n",
        "token_count": 226
    },
    "0044ac61": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ac61(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint var_dch;\n    \n    fcn.004429c3(&var_dch);\n    fcn.0044291d(&var_dch, arg_10h);\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = fcn.00442992(&var_dch);\n            *(uVar2 + arg_8h) = *(uVar2 + arg_8h) ^ uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0045a7f0": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a7f0(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(arg_8h + 8);\n    arg_8h = fcn.0040c8f0();\n    uVar3 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar2 = fcn.0040c8f0();\n            arg_8h = arg_8h ^ uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = arg_8h;\n    return 0;\n}\n",
        "token_count": 196
    },
    "00434573": {
        "rules": [
            "open process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434573(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint lpdwProcessId;\n    \n    (*_sym.imp.USER32.dll_PostMessageW)(arg_8h, 0x10, 0, 0);\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(arg_8h, 0x10, 0, 0, 2, 500, &var_8h);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &lpdwProcessId);\n        uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1f0fff, 0, lpdwProcessId);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "004369df": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004369df(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    iVar3 = fcn.0043688a();\n    pcVar2 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(iVar3, 0, 0, 2);\n    uVar4 = (*pcVar2)(*arg_8h, uVar4);\n    pcVar1 = _sym.imp.KERNEL32.dll_DuplicateHandle;\n    (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4);\n    uVar4 = (*pcVar2)(iVar3 + 8, 0, 0, 2);\n    uVar4 = (*pcVar2)(*arg_10h, uVar4);\n    (*pcVar1)(uVar4);\n    *(iVar3 + 4) = *arg_ch;\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0043699c, iVar3, 0, 0);\n    return;\n}\n",
        "token_count": 272
    },
    "0040c160": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c160(uint arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t *in_EDX;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    \n    *in_EAX = *in_EAX + 1;\n    iVar3 = 0;\n    *in_EDX = *in_EAX;\ncode_r0x0040c170:\n    do {\n        while( true ) {\n            iVar2 = *in_EAX;\n            iVar1 = *(*(*(unaff_ESI + 4) + iVar2 * 4) + 8);\n            if (0x46 < iVar1) break;\ncode_r0x0040c181:\n            *in_EAX = iVar2 + 1;\n        }\n        if (iVar1 == 0x47) {\n            iVar3 = iVar3 + 1;\n            *in_EAX = iVar2 + 1;\n            goto code_r0x0040c170;\n        }\n        if (iVar1 != 0x48) {\n            if (iVar1 == 0x7f) {\n                fcn.0045e1ee(arg_8h, 0x6f, *(*(*(unaff_ESI + 4) + -4 + iVar2 * 4) + 10));\n                return 1;\n            }\n            goto code_r0x0040c181;\n        }\n        if (iVar3 == 0) {\n            *arg_ch = iVar2;\n            *in_EAX = iVar2 + 1;\n            return 0;\n        }\n        iVar3 = iVar3 + -1;\n        *in_EAX = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 395
    },
    "0040e000": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040e000(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    *0x4a8630 = 1;\n    *0x4a8634 = 1;\n    *0x4a8638 = 0;\n    *0x4a863c = 0;\n    *0x4a8640 = 0;\n    *0x4a8648 = 1;\n    *0x4a864c = 2;\n    *0x4a8650 = 0;\n    *0x4a8654 = 0;\n    *0x4a8658 = 0xffffffff;\n    *0x4a865c = 0;\n    *0x4a8660 = 0;\n    *0x4a8664 = 0;\n    *0x4a8668 = 0;\n    fcn.0040bf10();\n    *0x4a868c = 0x489b68;\n    *0x4a8690 = 0;\n    *0x4a8694 = 0;\n    *0x4a8698 = 0;\n    *0x4a869c = 0xffffffff;\n    *0x4a86a0 = 0x48bc80;\n    *0x4a86a4 = 0;\n    *0x4a86a8 = 0;\n    *0x4a86ac = 0;\n    *0x4a86b0 = 3;\n    *0x4a86b4 = 2;\n    *0x4a86b8 = 0;\n    *0x4a86bc = 0;\n    *0x4a86c0 = 0;\n    *0x4a86c4 = 0xffffffff;\n    *0x4a86c8 = 0xffffffff;\n    *0x4a86fc = 0;\n    *0x4a8700 = 0;\n    *0x4a8704 = 0;\n    *0x4a8708 = 0xffffffff;\n    *0x4a8644 = 0x7c;\n    cVar1 = fcn.0040f3a0();\n    if (cVar1 != '\\0') {\n        *0x4a8648 = 2;\n        *0x4a864c = 1;\n    }\n    var_4h = 0;\n    iVar2 = 3;\n    do {\n        fcn.0040df70(&var_4h);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return 0x4a8630;\n}\n",
        "token_count": 603
    },
    "0040f300": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040f300(void)\n\n{\n    int32_t in_EAX;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_4h = *(in_EAX + 4);\n    while (var_4h != NULL) {\n        fcn.00442376(*var_4h);\n        var_8h = &var_4h;\n        fcn.00440543(var_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0040f320": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040f320(void)\n\n{\n    char cVar1;\n    int32_t unaff_ESI;\n    uint *var_8h;\n    uint *var_4h;\n    \n    fcn.0040f300();\n    var_4h = *(unaff_ESI + 0x468);\n    while( true ) {\n        cVar1 = fcn.0040f360(0);\n        if (cVar1 == '\\0') break;\n        fcn.0044b422(*var_4h);\n        var_8h = &var_4h;\n        fcn.00440543(var_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0040f380": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040f380(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    int32_t *unaff_ESI;\n    \n    arg_8h = *unaff_ESI;\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00451db1(arg_8h);\n        arg_8h = iVar1;\n    }\n    unaff_ESI[2] = 0;\n    return;\n}\n",
        "token_count": 116
    },
    "0040f620": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f620(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t extraout_ECX;\n    ulong uVar2;\n    \n    while( true ) {\n        do {\n            *param_2 = *param_2 + 1;\n            uVar2 = fcn.0040f5a0(param_1);\n            param_2 = uVar2 >> 0x20;\n            if (uVar2 == 0) {\n                return 0;\n            }\n            *0x4a826c = extraout_ECX + -1;\n            piVar1 = **(uVar2 + 4);\n        } while (*(piVar1 + 2) != 0);\n        if (*piVar1 == 0x20) break;\n        if (*piVar1 == 0x21) {\n            return 0;\n        }\n    }\n    fcn.0045e1ee(0x4a8178, 0x83, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 237
    },
    "004107d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004107d0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar2 = 0;\n    do {\n        iVar1 = *(unaff_EDI + 4 + iVar2 * 8);\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(*(unaff_EDI + iVar2 * 8), iVar1, 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(unaff_EDI + iVar2 * 8));\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x10);\n    return;\n}\n",
        "token_count": 165
    },
    "00410b20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410b20(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    int32_t *unaff_ESI;\n    \n    arg_8h = *unaff_ESI;\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.004520c8(arg_8h);\n        arg_8h = iVar1;\n    }\n    unaff_ESI[2] = 0;\n    return;\n}\n",
        "token_count": 116
    },
    "00410b40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410b40(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    int32_t *unaff_ESI;\n    \n    arg_8h = *unaff_ESI;\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.0044274e(arg_8h);\n        arg_8h = iVar1;\n    }\n    unaff_ESI[2] = 0;\n    return;\n}\n",
        "token_count": 116
    },
    "00410b60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410b60(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t arg_8h;\n    \n    fcn.00401ca0();\n    *(in_EAX + 0x49c) = 0x484288;\n    arg_8h = *(in_EAX + 0x4a4);\n    if (arg_8h != 0) {\n        do {\n            iVar1 = *(arg_8h + 0x38);\n            fcn.0044c974(arg_8h);\n            arg_8h = iVar1;\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00410c20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410c20(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t arg_8h;\n    \n    arg_8h = *(in_EAX + 4);\n    if (arg_8h != 0) {\n        do {\n            iVar1 = *(arg_8h + 0x30);\n            fcn.00452103(arg_8h);\n            arg_8h = iVar1;\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00410ff3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410ff3(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *apcStack20 [3];\n    char *pcStack8;\n    \n    do {\n        iVar2 = fcn.0041376b(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00411b28(param_1);\n    } while (iVar2 != 0);\n    if ((*0x49664c & 1) == 0) {\n        *0x49664c = *0x49664c | 1;\n        pcStack8 = \"bad allocation\";\n        fcn.00418180(&pcStack8);\n        *0x496640 = vtable.std::bad_alloc.0;\n        fcn.004114aa(0x42636e);\n    }\n    fcn.0041826f(0x496640);\n    apcStack20[0] = vtable.std::bad_alloc.0;\n    fcn.004182c5(apcStack20, 0x48bf04);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 265
    },
    "00420630": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00420630(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00416e30(0x48c418, 0xc);\n    fcn.0041848b(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x497150;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x49714c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00420674;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004138f8(arg_8h_00);\ncode_r0x00420674:\n        fcn.004138f8(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00420697();\n    fcn.00416e75();\n    return;\n}\n",
        "token_count": 392
    },
    "00430333": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00430333(int32_t arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = \"no error\";\n    if (0 < arg_8h) {\n        while( true ) {\n            do {\n                cVar1 = *pcVar2;\n                pcVar2 = pcVar2 + 1;\n            } while (cVar1 != '\\0');\n            if (*pcVar2 == '\\0') break;\n            arg_8h = arg_8h + -1;\n            if (arg_8h < 1) {\n                return pcVar2;\n            }\n        }\n        pcVar2 = \"Error text not found (please report)\";\n    }\n    return pcVar2;\n}\n",
        "token_count": 167
    },
    "0043343c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043343c(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    puVar2 = L\"0123456789ABCDEF\";\n    puVar3 = &var_24h;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    iVar1 = arg_10h + -1;\n    *puVar3 = *puVar2;\n    for (; -1 < iVar1; iVar1 = iVar1 + -1) {\n        *(arg_ch + iVar1 * 2) = *(&var_24h + (arg_8h & 0xf) * 2);\n        arg_8h = arg_8h >> 4;\n    }\n    *(arg_ch + arg_10h * 2) = 0;\n    return arg_8h == 0;\n}\n",
        "token_count": 269
    },
    "00434e8d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434e8d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x4a90f0 != 0) && (arg_8h <= *0x4a90f8)) && (0 < arg_8h)) {\n        arg_8h = arg_8h + -1;\n        iVar1 = *0x4a90f0;\n        if (0 < arg_8h) {\n            do {\n                arg_8h = arg_8h + -1;\n                iVar1 = *(iVar1 + 0xc);\n            } while (arg_8h != 0);\n        }\n        return *(iVar1 + 4);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 169
    },
    "00434f12": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434f12(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x4a90f0 != 0) && (arg_8h <= *0x4a90f8)) && (0 < arg_8h)) {\n        arg_8h = arg_8h + -1;\n        iVar1 = *0x4a90f0;\n        if (0 < arg_8h) {\n            do {\n                arg_8h = arg_8h + -1;\n                iVar1 = *(iVar1 + 0xc);\n            } while (arg_8h != 0);\n        }\n        return *(iVar1 + 8);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 168
    },
    "00436283": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436283(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    iVar2 = (*_sym.imp.USER32.dll_GetParent)(arg_8h);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        if (iVar2 == arg_ch) break;\n        iVar2 = (*pcVar1)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 125
    },
    "00441f85": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441f85(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = *(*(arg_8h + 4) + uVar1 * 4);\n            if (arg_8h_00 != 0) {\n                fcn.00441f66(arg_8h_00);\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(arg_8h + 8));\n        *(arg_8h + 8) = 0;\n        return;\n    }\n    *(arg_8h + 8) = 0;\n    return;\n}\n",
        "token_count": 190
    },
    "0044567b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044567b(uint *arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint hWnd;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongW;\n    hWnd = *arg_8h;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0);\n    while (((uVar2 & 0x40000000) != 0 && (iVar3 = fcn.004361ed(hWnd),  iVar3 != 0))) {\n        hWnd = fcn.004361ed(hWnd);\n        uVar2 = (*pcVar1)(hWnd, 0xfffffff0);\n    }\n    return hWnd;\n}\n",
        "token_count": 172
    },
    "004459d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004459d0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_10h;\n    \n    iVar1 = fcn.00436540(arg_8h);\n    arg_10h = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x102c, arg_10h, 2);\n            fcn.0043655c(arg_8h, iVar2 == 0, arg_10h, arg_10h);\n            arg_10h = arg_10h + 1;\n        } while (arg_10h < iVar1);\n    }\n    return 1;\n}\n",
        "token_count": 176
    },
    "00449fdf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00449fdf(int32_t **arg_8h, int32_t **arg_ch)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    char cVar5;\n    double in_stack_0000000c;\n    \n    ppiVar3 = arg_8h;\n    arg_8h = *arg_ch;\n    while( true ) {\n        piVar4 = arg_8h;\n        cVar5 = fcn.0040f360(0);\n        if (cVar5 == '\\0') {\n            *ppiVar3 = NULL;\n            return ppiVar3;\n        }\n        iVar1 = *piVar4;\n        dVar2 = *(iVar1 + 4);\n        if (*(iVar1 + 4) < 0) {\n            dVar2 = dVar2 + *0x48bd70;\n        }\n        if (in_stack_0000000c == dVar2) break;\n        fcn.00440543(&arg_8h, &arg_ch);\n    }\n    *ppiVar3 = piVar4;\n    return ppiVar3;\n}\n",
        "token_count": 265
    },
    "0044b5b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b5b4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    \n    arg_8h_00 = *(arg_8h + 8);\n    while (arg_8h_00 != 0) {\n        iVar1 = *(arg_8h_00 + 0x10);\n        fcn.0044b598(arg_8h_00);\n        arg_8h_00 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0044beaf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044beaf(uint arg_8h, uint arg_ch, uint32_t *arg_10h)\n\n{\n    bool bVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    \n    puVar2 = arg_10h;\n    fcn.00444ac8(arg_ch);\n    uVar4 = 0;\n    bVar1 = false;\n    if (*puVar2 != 0) {\n        do {\n            cVar3 = fcn.00443c0a(arg_8h, &arg_10h);\n            if (cVar3 == '\\0') {\n                if (!bVar1) {\n                    return 0;\n                }\n                break;\n            }\n            bVar1 = true;\n            fcn.0044be3c(arg_ch, arg_10h);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *puVar2);\n    }\n    *puVar2 = uVar4;\n    return 1;\n}\n",
        "token_count": 233
    },
    "0044c991": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c991(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    *param_1 = 0x484288;\n    arg_8h = param_1[2];\n    if (arg_8h != 0) {\n        do {\n            iVar1 = *(arg_8h + 0x38);\n            fcn.0044c974(arg_8h);\n            arg_8h = iVar1;\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00453965": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453965(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint var_ch;\n    \n    fcn.00444794(&var_ch);\n    fcn.0044c367(&var_ch, arg_ch);\n    cVar1 = fcn.00434e5f(&var_ch);\n    if (cVar1 != '\\0') {\n        fcn.004536cc(arg_8h, &var_ch + 1);\n        fcn.0044433a(arg_8h, arg_8h + 0x14);\n    }\n    if (arg_10h != 0) {\n        do {\n            fcn.0044c348(arg_8h, &var_ch);\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    if (cVar1 != '\\0') {\n        fcn.00444142(arg_8h, arg_8h + 0x14);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00458928": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458928(uint noname_0, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorW;\n    var_54h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f8a);\n    var_50h = (*pcVar1)(0, 0x7f00);\n    var_4ch = (*pcVar1)(0, 0x7f03);\n    var_48h = (*pcVar1)(0, 0x7f8b);\n    var_44h = (*pcVar1)(0, 0x7f01);\n    var_40h = (*pcVar1)(0, 0x7f81);\n    var_3ch = (*pcVar1)(0, 0x7f88);\n    var_38h = (*pcVar1)(0, 0x7f80);\n    var_34h = (*pcVar1)(0, 0x7f86);\n    var_30h = (*pcVar1)(0, 0x7f83);\n    var_2ch = (*pcVar1)(0, 0x7f85);\n    var_28h = (*pcVar1)(0, 0x7f82);\n    var_24h = (*pcVar1)(0, 0x7f84);\n    var_20h = (*pcVar1)(0, 0x7f04);\n    var_1ch = (*pcVar1)(0, 0x7f02);\n    var_18h = (*pcVar1)(0, 0x7f89);\n    var_14h = 0x14;\n    iVar2 = (*_sym.imp.USER32.dll_GetCursorInfo)(&var_14h);\n    if (iVar2 == 0) {\n        fcn.004091e0();\n        *arg_ch = 0;\n        arg_ch[2] = 1;\n        return 0;\n    }\n    iVar2 = 0;\n    while ((var_ch == 0 || (var_ch != (&var_54h)[iVar2]))) {\n        iVar2 = iVar2 + 1;\n        if (0xf < iVar2) {\ncode_r0x00458a3e:\n            fcn.004091e0();\n            *arg_ch = 0;\n            arg_ch[2] = 1;\n            return 0;\n        }\n    }\n    if (iVar2 < 0x10) {\n        fcn.004091e0();\n        *arg_ch = iVar2 + 1;\n        arg_ch[2] = 1;\n        return 0;\n    }\n    goto code_r0x00458a3e;\n}\n",
        "token_count": 742
    },
    "0045a871": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a871(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(arg_8h + 8);\n    arg_8h = fcn.0040c8f0();\n    uVar3 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar2 = fcn.0040c8f0();\n            arg_8h = arg_8h | uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = arg_8h;\n    return 0;\n}\n",
        "token_count": 194
    },
    "0045a8c3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a8c3(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(arg_8h + 8);\n    arg_8h = fcn.0040c8f0();\n    uVar3 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar2 = fcn.0040c8f0();\n            arg_8h = arg_8h & uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    fcn.004091e0();\n    arg_ch[2] = 1;\n    *arg_ch = arg_8h;\n    return 0;\n}\n",
        "token_count": 196
    },
    "0045f170": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f170(uint arg_8h, uint arg_ch, uint32_t *arg_10h)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    \n    fcn.00403600();\n    uVar3 = 0;\n    bVar1 = false;\n    if (*arg_10h != 0) {\n        do {\n            cVar2 = fcn.00443baf(arg_8h, &arg_ch);\n            if (cVar2 == '\\0') {\n                if (!bVar1) {\n                    return 0;\n                }\n                break;\n            }\n            bVar1 = true;\n            fcn.004032d0(arg_ch);\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *arg_10h);\n    }\n    *arg_10h = uVar3;\n    return 1;\n}\n",
        "token_count": 205
    },
    "004618fa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004618fa(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0046180b(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = 0;\n    cVar1 = fcn.004362d6(arg_ch);\n    if (cVar1 == '\\0') {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x110a, 4, iVar2);\n    }\n    for (; iVar2 != 0; iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x110a, 1, iVar2)) {\n        iVar3 = iVar3 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 207
    },
    "00465251": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465251(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint arg_ch_00;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint *arg_14h;\n    uint *arg_18h;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    arg_8h_00 = **(arg_8h + 4);\n    puVar3 = &var_4h;\n    arg_18h = &var_8h;\n    arg_14h = &var_ch;\n    arg_ch_00 = fcn.00452e81(arg_8h_00);\n    cVar2 = fcn.00464ac0(in_ECX, arg_ch_00, arg_8h_00, arg_14h, arg_18h, puVar3);\n    if (cVar2 != '\\0') {\n        arg_8h = *(in_ECX + 0x128);\n        while( true ) {\n            cVar2 = fcn.00441fc1(&arg_8h, 0);\n            if (cVar2 == '\\0') break;\n            fcn.00452e60(**(iVar1 + 4));\n            cVar2 = fcn.0040df20();\n            if (cVar2 != '\\0') {\n                fcn.004427a8(in_ECX + 0x128, &arg_8h);\n                return 0;\n            }\n            fcn.00440543(&arg_8h, &var_ch);\n        }\n    }\n    puVar3 = arg_ch;\n    fcn.004091e0();\n    puVar3[2] = 1;\n    *puVar3 = 0;\n    return 0;\n}\n",
        "token_count": 426
    },
    "0046f6d5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f6d5(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(arg_8h + 8) != 0) {\n        do {\n            if (*(*(arg_8h + 4) + uVar1 * 4) != 0) {\n                fcn.0040e530(1);\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(arg_8h + 8));\n        *(arg_8h + 8) = 0;\n        return;\n    }\n    *(arg_8h + 8) = 0;\n    return;\n}\n",
        "token_count": 162
    },
    "0046f7ee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f7ee(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t unaff_EBX;\n    uint unaff_ESI;\n    \n    if (arg_10h != '\\0') {\n        fcn.0046f7aa(arg_ch);\n    }\n    fcn.00409480(arg_ch);\n    if (arg_10h != '\\0') {\n        fcn.0046f754(0x4a7f34);\n    }\n    if (*(arg_8h + 0x16c) <= unaff_EBX) {\n        *(arg_8h + 0xf4) = unaff_ESI;\n        return;\n    }\n    do {\n        fcn.0040ca30();\n    } while (unaff_EBX < *(arg_8h + 0x16c));\n    *(arg_8h + 0xf4) = unaff_ESI;\n    return;\n}\n",
        "token_count": 214
    },
    "004323e6": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004323e6(uint arg_8h)\n\n{\n    uint lpPathName;\n    \n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpPathName);\n    (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&lpPathName, 0x4871a0, 0, arg_8h);\n    return;\n}\n",
        "token_count": 87
    },
    "0045c02d": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c02d(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00452e81(**(arg_8h + 4));\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(uVar1);\n    if (iVar2 == 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 128
    },
    "0044c367": {
        "rules": [
            "log keystrokes",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c367(ushort *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint16_t uVar3;\n    \n    *(arg_8h + 7) = 0;\n    *arg_8h = 0xff;\n    *(arg_8h + 1) = 0;\n    *(arg_8h + 3) = 0;\n    *(arg_8h + 5) = 0;\n    arg_8h[4] = arg_ch;\n    cVar1 = fcn.00434e4c(arg_8h);\n    if (cVar1 != '\\0') {\n        uVar3 = (*_sym.imp.USER32.dll_VkKeyScanW)(arg_ch);\n        if (uVar3 != 0xffff) {\n            *arg_8h = uVar3;\n            uVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(uVar3 & 0xff, 0);\n            *(arg_8h + 7) = uVar2;\n            if ((uVar3 & 0x100) != 0) {\n                *(arg_8h + 1) = 1;\n            }\n            if ((uVar3 & 0x200) != 0) {\n                *(arg_8h + 3) = 1;\n            }\n            if ((uVar3 & 0x400) == 0) {\n                return 1;\n            }\n            *(arg_8h + 2) = 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 359
    },
    "0044c3e8": {
        "rules": [
            "log keystrokes"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0044c3e8(uchar *arg_8h, uint uCode)\n\n{\n    char cVar1;\n    uchar uVar2;\n    \n    *(arg_8h + 8) = 0;\n    arg_8h[7] = 0;\n    *(arg_8h + 1) = 0;\n    *(arg_8h + 5) = 0;\n    arg_8h[10] = 0;\n    *arg_8h = uCode;\n    cVar1 = fcn.00434e5f(arg_8h);\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(uCode, 0);\n    arg_8h[7] = uVar2;\n    return 1;\n}\n",
        "token_count": 193
    },
    "00433967": {
        "rules": [
            "shutdown system",
            "modify access privileges"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433967(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &var_4h);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    if (iVar2 != 0) {\n        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, L\"SeShutdownPrivilege\", &var_10h);\n        var_14h = 1;\n        var_8h = 2;\n        (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(var_4h, 0, &var_14h, 0, 0, 0);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 0) {\n            if (arg_8h == 0x20) {\n                uVar1 = (*_sym.imp.KERNEL32.dll_SetSystemPowerState)(1, 0);\n                return uVar1;\n            }\n            if (arg_8h != 0x40) {\n                if ((arg_8h & 0xb) == 0) {\n                    uVar1 = (*_sym.imp.USER32.dll_ExitWindowsEx)(arg_8h, 0);\n                    return uVar1;\n                }\n                uVar1 = (*_sym.imp.ADVAPI32.dll_InitiateSystemShutdownExW)\n                                  (0, 0, 0, (arg_8h & 0x14) != 0, (arg_8h & 2) != 0, arg_ch);\n                return uVar1;\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_SetSystemPowerState)(0, 0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 455
    },
    "0045cb93": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045cb93(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = 0;\n    if (*(arg_8h + 8) != 0) {\n        uVar1 = fcn.00452e81(**(arg_8h + 4));\n    }\n    iVar2 = (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, uVar1, 7);\n    if (iVar2 != 0) {\n        fcn.004091e0();\n        arg_ch[2] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 162
    }
}