{
    "00401286": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401286(uint arg_8h)\n\n{\n    uint *var_30h;\n    uint var_2ch;\n    code *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    code *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404580(0x41b040, 0x1bd, 0xb, 3, &var_4h);\n    var_4h._3_1_ = 0;\n    fcn.00404580(0x41b040, 0xc6, 0xb, 3, &var_8h);\n    var_8h._3_1_ = 0;\n    fcn.00404580(0x41b040, 0x52a, 8, 3, &var_ch);\n    var_30h = &var_4h;\n    var_ch._3_1_ = 0;\n    var_24h = &var_8h;\n    var_18h = &var_ch;\n    var_2ch = 2;\n    var_28h = fcn.00401254;\n    var_20h = 2;\n    var_1ch = fcn.00401222;\n    var_14h = 2;\n    var_10h = fcn.004011f0;\n    fcn.00404d6d(arg_8h, &var_30h, 3);\n    return;\n}\n",
        "token_count": 369
    },
    "00402d43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d43(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char16_t *var_30h;\n    char16_t *var_2ch;\n    char16_t *var_28h;\n    char16_t *var_24h;\n    char16_t *var_20h;\n    char16_t *var_1ch;\n    char16_t *var_18h;\n    char16_t *var_14h;\n    char16_t *var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.004048e3(arg_8h);\n    iVar2 = fcn.0040352c(iVar2 * 2 + 0x800);\n    if (iVar2 != 0) {\n        fcn.0040483a(iVar2, L\"https://\");\n        fcn.00404776(iVar2, arg_8h);\n        fcn.00404776(iVar2, 0x40b01c);\n        var_2ch = 0x40b020;\n        var_28h = L\"static\";\n        var_24h = L\"content\";\n        var_20h = L\"include\";\n        var_1ch = L\"uploads\";\n        var_18h = L\"news\";\n        var_14h = L\"data\";\n        var_10h = L\"admin\";\n        iVar3 = fcn.00403e9c(0, 7);\n        fcn.00404776(iVar2, (&var_2ch)[iVar3]);\n        fcn.00404776(iVar2, 0x40b01c);\n        var_30h = L\"images\";\n        var_2ch = L\"pictures\";\n        var_28h = L\"image\";\n        var_24h = L\"temp\";\n        var_20h = 0x40b0d8;\n        var_1ch = L\"graphic\";\n        var_18h = L\"assets\";\n        var_14h = L\"pics\";\n        var_10h = L\"game\";\n        iVar3 = fcn.00403e9c(0, 8);\n        fcn.00404776(iVar2, (&var_30h)[iVar3]);\n        fcn.00404776(iVar2, 0x40b01c);\n        uVar4 = 0;\n        iVar3 = fcn.00403e9c(0, 9);\n        if (iVar3 != -1) {\n            do {\n                uVar1 = fcn.00403e9c(0x61, 0x7a);\n                var_8h = var_8h & 0xffff0000 | uVar1;\n                uVar1 = fcn.00403e9c(0x61, 0x7a);\n                var_8h = var_8h & 0xffff | uVar1 << 0x10;\n                var_4h = var_4h & 0xffff0000;\n                fcn.00404776(iVar2, &var_8h);\n                uVar4 = uVar4 + 1;\n                iVar3 = fcn.00403e9c(0, 9);\n            } while (uVar4 < iVar3 + 1U);\n        }\n        fcn.00404776(iVar2, 0x40b118);\n        var_ch = 0x40b11c;\n        var_8h = 0x40b124;\n        var_4h = 0x40b12c;\n        iVar3 = fcn.00403e9c(0, 2);\n        fcn.00404776(iVar2, (&var_ch)[iVar3]);\n    }\n    return;\n}\n",
        "token_count": 865
    },
    "00402f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00402f10(void)\n\n{\n    uint var_30h;\n    code *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_2ch = fcn.00402ec4;\n    var_30h = 0;\n    var_28h = 0x402f0c;\n    var_24h = 0;\n    var_20h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0x402eef;\n    var_4h = 0x402eef;\n    fcn.00405ca3(&var_30h);\n    fcn.00405d21(&var_30h, 0);\n    return;\n}\n",
        "token_count": 239
    },
    "00402f65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f65(uint arg_8h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_2ch = 0x402f0c;\n    var_30h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_28h = 0x402f0c;\n    var_8h = 0x402eef;\n    var_4h = fcn.00402ef5;\n    fcn.00405974(arg_8h, &var_30h);\n    return 1;\n}\n",
        "token_count": 235
    },
    "00404fd3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404fd3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_30h;\n    \n    if (*0x41c188 == 0) {\n        iVar1 = fcn.00404f64();\n        if (iVar1 == 0) {\n            return 0;\n        }\n        fcn.00403cc7(0x41c170);\n        *0x41c188 = 1;\n    }\n    fcn.00403715(0x41c170);\n    if (((*0x41c144 < 0x1000001) ||\n        ((iVar1 = fcn.00403e6c(&var_30h, 0x30),  iVar1 != 0 &&\n         (iVar1 = fcn.00406520(0x41c050, &var_30h, 0x30, 0, 0),  iVar1 != 0)))) &&\n       (iVar1 = fcn.004064d8(0x41c050, arg_8h, arg_ch),  iVar1 != 0)) {\n        fcn.00403db3(0x41c170);\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 299
    },
    "004054ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004054ad(code *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar9 = (arg_8h ^ 0x183c) << 0x10 ^ arg_8h;\n    uVar4 = uVar9 >> 0x15;\n    if (uVar4 < 0x4c6) {\n        if (uVar4 == 0x4c5) {\n            arg_8h = fcn.0040533f;\n        }\n        else if (uVar4 == 0xbd) {\n            arg_8h = fcn.0040561f;\n        }\n        else if (uVar4 == 0x246) {\n            arg_8h = fcn.00405378;\n        }\n        else if (uVar4 == 0x27e) {\n            arg_8h = 0x4053b1;\n        }\n        else if (uVar4 == 0x309) {\n            arg_8h = fcn.00405691;\n        }\n        else if (uVar4 == 0x339) {\n            arg_8h = fcn.00405306;\n        }\n        else if (uVar4 == 0x35f) {\n            arg_8h = 0x4053f5;\n        }\n    }\n    else if (uVar4 == 0x4d2) {\n        arg_8h = fcn.004053bd;\n    }\n    else if (uVar4 == 0x538) {\n        arg_8h = fcn.00405401;\n    }\n    else if (uVar4 == 0x5ac) {\n        arg_8h = fcn.00405658;\n    }\n    else if (uVar4 == 0x6bb) {\n        arg_8h = fcn.004056ca;\n    }\n    else if (uVar4 == 0x733) {\n        arg_8h = fcn.004055e6;\n    }\n    iVar5 = (*arg_8h)();\n    if (iVar5 != 0) {\n        uVar8 = 0;\n        iVar7 = *(*(iVar5 + 0x3c) + 0x78 + iVar5) + iVar5;\n        iVar1 = *(iVar7 + 0x24);\n        iVar2 = *(iVar7 + 0x20);\n        iVar3 = *(iVar7 + 0x1c);\n        uVar4 = *(iVar7 + 0x18);\n        if (uVar4 != 0) {\n            do {\n                uVar6 = fcn.0040528c(*(iVar2 + iVar5 + uVar8 * 4) + iVar5);\n                if ((uVar6 & 0x1fffff) == ((uVar9 ^ 0x9973) & 0x1fffff)) {\n                    return *(iVar3 + iVar5 + *(iVar1 + iVar5 + uVar8 * 2) * 4) + iVar5;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < uVar4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 781
    },
    "00406520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406520(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint var_30h;\n    \n    if ((arg_18h < 0x31) && (arg_10h == 0x30)) {\n        uVar1 = 0;\n        if ((arg_18h == 0) || (fcn.0040358e(&var_30h, arg_14h, arg_18h),  uVar1 = arg_18h,  arg_18h != 0x30)) {\n            fcn.004035b3(&var_30h + uVar1, 0, 0x30 - uVar1);\n        }\n        fcn.004050b5(&var_30h, arg_ch, 0x30);\n        fcn.00406598(arg_8h, &var_30h);\n        *(arg_8h + 0xf4) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 253
    },
    "00406598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406598(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint32_t uVar1;\n    uint var_30h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uVar1 = 0;\n    arg_8h_00 = arg_8h + 0xf8;\n    do {\n        fcn.004050a1(arg_8h_00, 0x10);\n        fcn.004062ab(arg_8h, arg_8h_00, &var_30h + uVar1);\n        uVar1 = uVar1 + 0x10;\n    } while (uVar1 < 0x30);\n    fcn.004050b5(&var_30h, arg_ch, 0x30);\n    fcn.004062c7(arg_8h, 0x100, &var_30h);\n    *(arg_8h + 0x118) = 1;\n    *arg_8h_00 = var_10h;\n    *(arg_8h + 0xfc) = uStack16;\n    *(arg_8h + 0x100) = uStack12;\n    *(arg_8h + 0x104) = uStack8;\n    return;\n}\n",
        "token_count": 309
    },
    "00409ad9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409ad9(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    unkbyte3 Var3;\n    \n    if (arg_8h - 0x30U < 10) {\n        return in_EAX & 0xffffff00 | arg_8h - 0x30;\n    }\n    iVar1 = arg_8h;\n    if (iVar1 < 0x62) {\n        iVar2 = iVar1;\n        if ((iVar1 == 0x61) || (iVar2 = iVar1 + -0x41,  iVar2 == 0)) {\n            return CONCAT31(iVar2 >> 8, 10);\n        }\n        iVar1 = iVar1 + -0x42;\n    }\n    else {\n        iVar1 = iVar1 + -0x62;\n    }\n    if (iVar1 == 0) {\n        return 0xb;\n    }\n    if (iVar1 != 1) {\n        if (iVar1 == 2) {\n            return 0xd;\n        }\n        if (iVar1 != 3) {\n            Var3 = iVar1 + -4 >> 8;\n            if (iVar1 + -4 != 0) {\n                return CONCAT31(Var3, 0xff);\n            }\n            return CONCAT31(Var3, 0xf);\n        }\n        return 0xe;\n    }\n    return 0xc;\n}\n",
        "token_count": 323
    },
    "00409b65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00409b65(uint *arg_8h, uint8_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t iVar6;\n    char cVar7;\n    uint8_t uVar8;\n    char cVar9;\n    uint8_t uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t extraout_EDX;\n    uint32_t extraout_EDX_00;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    int32_t **ppiVar17;\n    uint *puVar18;\n    int32_t *piVar19;\n    float10 fVar20;\n    int64_t iVar21;\n    uint uVar22;\n    uint var_70h;\n    int32_t *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    code *var_58h;\n    int32_t var_4ch;\n    uint8_t *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint8_t *var_34h;\n    int32_t var_30h;\n    uint32_t var_28h;\n    double dStack48;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint8_t *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t **var_10h;\n    int32_t **var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_20h = 0;\n    fcn.004035b3(&var_70h, 0, 0x34);\n    var_24h = 0;\n    var_30h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_34h = arg_ch;\n    if ((((2 < arg_10h) && (*arg_ch == 0xef)) && (arg_ch[1] == 0xbb)) && (arg_ch[2] == 0xbf)) {\n        var_34h = arg_ch + 3;\n        arg_10h = arg_10h - 3;\n    }\n    puVar16 = var_34h;\n    var_1ch = var_34h + arg_10h;\n    puVar18 = &var_64h;\n    for (iVar11 = 6; iVar11 != 0; iVar11 = iVar11 + -1) {\n        *puVar18 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar18 = puVar18 + 1;\n    }\n    var_6ch = 0xfffffff7;\n    var_68h = 0xfffffff7;\n    var_4ch = 1;\n    uVar5 = *0x41a758;\ncode_r0x00409be2:\n    var_14h = NULL;\n    piVar19 = NULL;\n    var_18h = 0;\n    ppiVar17 = NULL;\n    uVar14 = 8;\n    arg_10h = NULL;\n    var_ch = NULL;\n    var_10h = NULL;\n    var_8h = 8;\n    var_44h = 1;\n    iVar11 = var_4ch;\n    do {\n        if (puVar16 == var_1ch) {\n            uVar8 = 0;\n        }\n        else {\n            uVar8 = *puVar16;\n        }\n        var_48h = puVar16;\n        if ((uVar14 & 0x20) == 0) {\ncode_r0x00409f56:\n            if ((var_60h & 1) == 0) {\ncode_r0x0040a079:\n                if (uVar14 < '\\0') {\n                    if (uVar8 == 0) break;\n                    iVar11 = var_4ch;\n                    if (uVar8 != 9) {\n                        if (uVar8 == 10) {\ncode_r0x0040a0af:\n                            var_44h = var_44h + 1;\n                            var_40h = 0;\n                            iVar11 = var_4ch;\n                        }\n                        else if ((uVar8 != 0xd) && (uVar8 != 0x20)) goto code_r0x0040a776;\n                    }\n                }\n                else if ((uVar14 & 8) == 0) {\n                    ppiVar1 = ppiVar17 + 1;\n                    piVar2 = *ppiVar1;\n                    if (piVar2 == 0x1) {\n                        iVar11 = var_4ch;\n                        ppiVar17 = var_ch;\n                        if (uVar8 != 9) {\n                            if (uVar8 == 10) {\n                                var_44h = var_44h + 1;\n                                var_40h = 0;\n                            }\n                            else if ((uVar8 != 0xd) && (uVar8 != 0x20)) {\n                                if (uVar8 == 0x22) {\n                                    if ((uVar14 & 4) != 0) goto code_r0x0040a776;\n                                    uVar14 = uVar14 | 0x20;\n                                    piVar19 = NULL;\n                                    arg_10h = NULL;\n                                    var_14h = var_ch[4];\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                }\n                                else if (uVar8 == 0x2c) {\n                                    if ((uVar14 & 4) == 0) goto code_r0x0040a776;\n                                    uVar14 = uVar14 & 0xfffffffb;\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                }\n                                else {\n                                    if (uVar8 != 0x7d) goto code_r0x0040a776;\n                                    uVar14 = uVar14 & 0xfffffffb | 1;\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                }\n                                goto code_r0x0040a6c6;\n                            }\n                        }\n                    }\n                    else {\n                        ppiVar17 = var_ch;\n                        if (piVar2 - 3U < 2) {\n                            if (uVar8 - 0x30 < 10) {\n                                var_24h = var_24h + 1;\n                                if (piVar2 == 0x3) {\n                                    if ((uVar14 & 0x400) != 0) goto code_r0x0040a4d6;\n                                    if ((uVar14 & 0x200) != 0) goto code_r0x0040a776;\n                                    if ((var_24h == 1) && (uVar8 == 0x30)) {\n                                        var_8h = uVar14 | 0x200;\n                                    }\n                                    iVar21 = fcn.0040a940(var_ch[2], var_ch[3], 10, 0);\n                                    iVar21 = iVar21 + (uVar8 + -0x30);\n                                    var_ch[2] = iVar21;\n                                    var_ch[3] = iVar21 >> 0x20;\n                                    iVar11 = var_4ch;\n                                    uVar14 = var_8h;\n                                    ppiVar17 = var_ch;\n                                    piVar19 = arg_10h;\n                                }\n                                else if ((uVar14 & 0x400) == 0) {\n                                    iVar21 = fcn.0040a940(_var_3ch, 10, 0);\n                                    _var_3ch = iVar21 + (uVar8 + -0x30);\n                                    iVar11 = var_4ch;\n                                    uVar14 = var_8h;\n                                    ppiVar17 = var_ch;\n                                    piVar19 = arg_10h;\n                                }\n                                else {\ncode_r0x0040a4d6:\n                                    uVar14 = uVar14 | 0x800;\n                                    var_30h = uVar8 + -0x30 + var_30h * 10;\n                                    iVar11 = var_4ch;\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                }\n                            }\n                            else if ((uVar8 == 0x2b) || (uVar8 == 0x2d)) {\n                                if ((uVar14 & 0xc00) != 0x400) goto code_r0x0040a55c;\n                                uVar12 = uVar14 | 0x800;\n                                uVar14 = uVar14 | 0x1800;\n                                iVar11 = var_4ch;\n                                ppiVar17 = var_ch;\n                                var_8h = uVar14;\n                                if (uVar8 != 0x2d) {\n                                    uVar14 = uVar12;\n                                    var_8h = uVar12;\n                                }\n                            }\n                            else {\n                                if ((uVar8 != 0x2e) || (piVar2 != 0x3)) {\ncode_r0x0040a55c:\n                                    uVar22 = uVar5 >> 0x20;\n                                    if ((uVar14 & 0x400) == 0) {\n                                        if (piVar2 == 0x4) {\n                                            if (var_24h == 0) goto code_r0x0040a776;\n                                            dStack48 = _var_3ch;\n                                            fVar20 = fcn.0040a815(uVar5, uVar22, var_24h);\n                                            ppiVar17 = var_ch;\n                                            var_ch = var_10h;\n                                            *(ppiVar17 + 2) = dStack48 / fVar20 + *(ppiVar17 + 2);\n                                            uVar14 = var_8h;\n                                        }\n                                        var_8h = uVar14;\n                                        puVar16 = var_48h;\n                                        if ((uVar8 == 0x65) || (uVar8 == 0x45)) {\n                                            if (*ppiVar1 == 0x3) {\n                                                *ppiVar1 = 0x4;\n                                                *(var_ch + 2) = *(var_ch + 2);\n                                            }\n                                            var_24h = 0;\n                                            uVar14 = var_8h & 0xfffffdff | 0x400;\n                                            iVar11 = var_4ch;\n                                            ppiVar17 = var_ch;\n                                            var_8h = uVar14;\n                                            goto code_r0x0040a74d;\n                                        }\n                                    }\n                                    else {\n                                        if (var_24h == 0) goto code_r0x0040a776;\n                                        iVar11 = var_30h;\n                                        if ((uVar14 & 0x1000) != 0) {\n                                            iVar11 = -var_30h;\n                                        }\n                                        fVar20 = fcn.0040a815(uVar5, uVar22, iVar11);\n                                        *(var_ch + 2) = fVar20 * *(var_ch + 2);\n                                    }\n                                    if ((var_8h & 0x100) != 0) {\n                                        if (*ppiVar1 == 0x3) {\n                                            piVar2 = var_ch[2];\n                                            var_ch[2] = -piVar2;\n                                            var_ch[3] = -(var_ch[3] + (piVar2 != NULL));\n                                        }\n                                        else {\n                                            *(var_ch + 2) = -*(var_ch + 2);\n                                        }\n                                    }\n                                    uVar14 = var_8h | 3;\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                    goto code_r0x0040a6c6;\n                                }\n                                if (var_24h == 0) goto code_r0x0040a776;\n                                var_24h = 0;\n                                *ppiVar1 = 0x4;\n                                *(var_ch + 2) = *(var_ch + 2);\n                                iVar11 = var_4ch;\n                                ppiVar17 = var_ch;\n                            }\n                        }\n                        else {\ncode_r0x0040a6c6:\n                            if ((uVar14 & 2) != 0) {\n                                uVar14 = uVar14 & 0xfffffffd;\n                                puVar16 = puVar16 + -1;\n                                var_48h = puVar16;\n                                var_8h = uVar14;\n                            }\n                            iVar11 = var_4ch;\n                            if ((uVar14 & 1) != 0) {\n                                piVar2 = *ppiVar17;\n                                uVar14 = uVar14 & 0xfffffffe;\n                                if (piVar2 == NULL) {\n                                    uVar14 = uVar14 | 0x84;\n                                    var_8h = uVar14;\n                                }\n                                else {\n                                    var_8h = uVar14 | 0xc;\n                                    if (piVar2[1] != 2) {\n                                        var_8h = uVar14 | 4;\n                                    }\n                                    if (var_4ch == 0) {\n                                        if (piVar2[1] == 1) {\n                                            *(piVar2[2] * 0xc + 8 + piVar2[3]) = ppiVar17;\n                                        }\n                                        else if (piVar2[1] == 2) {\n                                            *(piVar2[3] + piVar2[2] * 4) = ppiVar17;\n                                        }\n                                    }\n                                    piVar3 = *ppiVar17;\n                                    piVar2 = piVar3 + 2;\n                                    *piVar2 = *piVar2 + 1;\n                                    if (var_6ch < piVar3[2]) {\ncode_r0x0040a776:\n                                        iVar6 = var_4ch;\n                                        iVar11 = var_20h;\n                                        if (var_4ch != 0) {\n                                            iVar11 = var_18h;\n                                        }\n                                        while (iVar11 != 0) {\n                                            iVar4 = *(iVar11 + 0x10);\n                                            (*var_58h)(iVar11);\n                                            iVar11 = iVar4;\n                                        }\n                                        if (iVar6 == 0) {\n                                            fcn.0040a7af(&var_64h, var_18h);\n                                        }\n                                        return 0;\n                                    }\n                                    var_10h = *ppiVar17;\n                                    uVar14 = var_8h;\n                                    ppiVar17 = var_10h;\n                                    var_ch = var_10h;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    iVar11 = var_4ch;\n                    if (uVar8 != 9) {\n                        if (uVar8 == 10) goto code_r0x0040a0af;\n                        if ((uVar8 != 0xd) && (uVar8 != 0x20)) {\n                            if (uVar8 == 0x5d) {\n                                if ((ppiVar17 == NULL) || (ppiVar17[1] != 0x2)) goto code_r0x0040a776;\n                                uVar14 = uVar14 & 0xfffffff3 | 1;\n                                var_8h = uVar14;\n                                goto code_r0x0040a6c6;\n                            }\n                            if ((uVar14 & 4) == 0) {\n                                if ((uVar14 & 0x40) == 0) {\n                                    var_8h = uVar14 & 0xfffffff7;\n                                    if (uVar8 == 0x22) {\n                                        iVar11 = fcn.0040a85a(&var_70h, &var_10h, &var_18h, &var_20h, 5);\n                                        if (iVar11 == 0) goto code_r0x0040a776;\n                                        var_14h = var_10h[3];\n                                        var_ch = var_10h;\n                                        arg_10h = NULL;\n                                        iVar11 = var_4ch;\n                                        uVar14 = var_8h | 0x20;\n                                        puVar16 = var_48h;\n                                        ppiVar17 = var_10h;\n                                        piVar19 = NULL;\n                                        var_8h = var_8h | 0x20;\n                                    }\n                                    else {\n                                        if (uVar8 != 0x5b) {\n                                            if (uVar8 == 0x66) {\n                                                if ((((var_1ch - puVar16 < 4) ||\n                                                     (var_48h = puVar16 + 1,  puVar16[1] != 0x61)) ||\n                                                    (var_48h = puVar16 + 2,  puVar16[2] != 0x6c)) ||\n                                                   ((var_48h = puVar16 + 3,  puVar16[3] != 0x73 ||\n                                                    (var_48h = puVar16 + 4,  *var_48h != 0x65)))) goto code_r0x0040a776;\n                                                uVar22 = 6;\n                                            }\n                                            else {\n                                                if (uVar8 != 0x6e) {\n                                                    if (uVar8 == 0x74) {\n                                                        if ((((var_1ch - puVar16 < 3) ||\n                                                             (var_48h = puVar16 + 1,  puVar16[1] != 0x72)) ||\n                                                            (var_48h = puVar16 + 2,  puVar16[2] != 0x75)) ||\n                                                           (var_48h = puVar16 + 3,  *var_48h != 0x65))\n                                                        goto code_r0x0040a776;\n                                                        iVar11 = fcn.0040a85a(&var_70h, &var_10h, &var_18h, &var_20h, 6)\n                                                        ;\n                                                        if (iVar11 == 0) goto code_r0x0040a776;\n                                                        uVar14 = var_8h | 1;\n                                                        var_ch = var_10h;\n                                                        var_10h[2] = 0x1;\n                                                        puVar16 = var_48h;\n                                                        ppiVar17 = var_10h;\n                                                        var_8h = uVar14;\n                                                    }\n                                                    else {\n                                                        if (uVar8 == 0x7b) {\n                                                            iVar11 = fcn.0040a85a(&var_70h, &var_10h, &var_18h, &var_20h\n                                                                                  , 1);\n                                                            if (iVar11 == 0) goto code_r0x0040a776;\n                                                            var_ch = var_10h;\n                                                            iVar11 = var_4ch;\n                                                            uVar14 = var_8h;\n                                                            puVar16 = var_48h;\n                                                            ppiVar17 = var_10h;\n                                                            goto code_r0x0040a74d;\n                                                        }\n                                                        if (((uVar8 < '0') || ('9' < uVar8)) && (uVar8 != 0x2d))\n                                                        goto code_r0x0040a776;\n                                                        iVar11 = fcn.0040a85a(&var_70h, &var_10h, &var_18h, &var_20h, 3)\n                                                        ;\n                                                        if (iVar11 == 0) goto code_r0x0040a776;\n                                                        ppiVar17 = var_10h;\n                                                        if (var_4ch == 0) {\n                                                            while ((((('/' < uVar8 && (uVar8 < ':')) ||\n                                                                     ((uVar8 == 0x2b ||\n                                                                      (((uVar8 == 0x2d || (uVar8 == 0x65)) ||\n                                                                       (uVar8 == 0x45)))))) || (uVar8 == 0x2e)) &&\n                                                                   (var_48h = var_48h + 1,  var_48h != var_1ch))) {\n                                                                uVar8 = *var_48h;\n                                                            }\n                                                            uVar14 = var_8h | 3;\n                                                            var_ch = var_10h;\n                                                            puVar16 = var_48h;\n                                                            piVar19 = arg_10h;\n                                                            var_8h = uVar14;\n                                                        }\n                                                        else {\n                                                            var_24h = 0;\n                                                            _var_3ch = 0;\n                                                            var_30h = 0;\n                                                            var_ch = var_10h;\n                                                            puVar16 = var_48h;\n                                                            if (uVar8 == 0x2d) {\n                                                                uVar14 = var_8h & 0xffffe0ff | 0x100;\n                                                                iVar11 = var_4ch;\n                                                                ppiVar17 = var_10h;\n                                                                var_8h = uVar14;\n                                                                goto code_r0x0040a74d;\n                                                            }\n                                                            uVar14 = var_8h & 0xffffe0ff | 2;\n                                                            var_8h = uVar14;\n                                                            _var_3ch = 0;\n                                                        }\n                                                    }\n                                                    goto code_r0x0040a6c6;\n                                                }\n                                                if (((var_1ch - puVar16 < 3) ||\n                                                    (var_48h = puVar16 + 1,  puVar16[1] != 0x75)) ||\n                                                   ((var_48h = puVar16 + 2,  puVar16[2] != 0x6c ||\n                                                    (var_48h = puVar16 + 3,  *var_48h != 0x6c)))) goto code_r0x0040a776;\n                                                uVar22 = 7;\n                                            }\n                                            iVar11 = fcn.0040a85a(&var_70h, &var_10h, &var_18h, &var_20h, uVar22);\n                                            if (iVar11 == 0) goto code_r0x0040a776;\n                                            uVar14 = var_8h | 1;\n                                            var_ch = var_10h;\n                                            puVar16 = var_48h;\n                                            ppiVar17 = var_10h;\n                                            var_8h = uVar14;\n                                            goto code_r0x0040a6c6;\n                                        }\n                                        iVar11 = fcn.0040a85a(&var_70h, &var_10h, &var_18h, &var_20h, 2);\n                                        if (iVar11 == 0) goto code_r0x0040a776;\n                                        var_ch = var_10h;\n                                        iVar11 = var_4ch;\n                                        uVar14 = var_8h | 8;\n                                        puVar16 = var_48h;\n                                        ppiVar17 = var_10h;\n                                        var_8h = var_8h | 8;\n                                    }\n                                }\n                                else {\n                                    if (uVar8 != 0x3a) goto code_r0x0040a776;\n                                    uVar14 = uVar14 & 0xffffffbf;\n                                    var_8h = uVar14;\n                                }\n                            }\n                            else {\n                                if (uVar8 != 0x2c) goto code_r0x0040a776;\n                                uVar14 = uVar14 & 0xfffffffb;\n                                var_8h = uVar14;\n                            }\n                        }\n                    }\n                }\n            }\n            else if ((uVar14 & 0x6000) == 0) {\n                if (uVar8 != 0x2f) goto code_r0x0040a079;\n                if ((((uVar14 & 0x88) == 0) && (ppiVar17[1] != 0x1)) ||\n                   (puVar16 = puVar16 + 1,  var_48h = puVar16,  puVar16 == var_1ch)) goto code_r0x0040a776;\n                if (*puVar16 == 0x2a) {\n                    uVar14 = uVar14 | 0x4000;\n                    iVar11 = var_4ch;\n                    var_8h = uVar14;\n                }\n                else {\n                    if (*puVar16 != 0x2f) goto code_r0x0040a776;\n                    uVar14 = uVar14 | 0x2000;\n                    iVar11 = var_4ch;\n                    var_8h = uVar14;\n                }\n            }\n            else if ((uVar14 & 0x2000) == 0) {\n                if ((uVar14 & 0x4000) == 0) goto code_r0x0040a079;\n                if (uVar8 == 0) goto code_r0x0040a776;\n                if (((uVar8 == 0x2a) && (iVar11 = var_4ch,  puVar16 < var_1ch + -1)) && (puVar16[1] == 0x2f)) {\n                    uVar14 = uVar14 & 0xffffbfff;\n                    puVar16 = puVar16 + 1;\n                    var_8h = uVar14;\n                }\n            }\n            else if (((uVar8 == 0xd) || (uVar8 == 10)) || (uVar8 == 0)) {\n                uVar14 = uVar14 & 0xffffdfff;\n                puVar16 = puVar16 + -1;\n                var_8h = uVar14;\n            }\n        }\n        else {\n            if ((uVar8 == 0) || (var_6ch < piVar19)) goto code_r0x0040a776;\n            if ((uVar14 & 0x10) == 0) {\n                if (uVar8 == 0x5c) {\n                    uVar14 = uVar14 | 0x10;\n                    var_8h = uVar14;\n                }\n                else {\n                    if (uVar8 != 0x22) {\ncode_r0x00409fd5:\n                        if (iVar11 == 0) {\n                            *(piVar19 + var_14h) = uVar8;\n                            ppiVar17 = var_ch;\n                        }\n                        goto code_r0x00409f04;\n                    }\n                    if (iVar11 == 0) {\n                        *(piVar19 + var_14h) = 0;\n                    }\n                    uVar14 = uVar14 & 0xffffffdf;\n                    var_14h = NULL;\n                    if (ppiVar17[1] != 0x1) {\n                        iVar11 = var_4ch;\n                        var_8h = uVar14;\n                        if (ppiVar17[1] == 0x5) {\n                            uVar14 = uVar14 | 1;\n                            ppiVar17[2] = piVar19;\n                            var_8h = uVar14;\n                        }\n                        goto code_r0x00409f56;\n                    }\n                    if (var_4ch == 0) {\n                        ppiVar17[3][ppiVar17[2] * 3] = ppiVar17[4];\n                        ppiVar17[3][ppiVar17[2] * 3 + 1] = piVar19;\n                        ppiVar17[4] = ppiVar17[4] + piVar19 + 1;\n                    }\n                    else {\n                        ppiVar17[3] = ppiVar17[3] + piVar19 + 1;\n                    }\n                    uVar14 = uVar14 | 0x48;\n                    iVar11 = var_4ch;\n                    var_8h = uVar14;\n                }\n            }\n            else {\n                uVar14 = uVar14 & 0xffffffef;\n                var_8h = uVar14;\n                if (uVar8 == 0x62) {\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 8;\n                    }\n                }\n                else if (uVar8 == 0x66) {\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 0xc;\n                    }\n                }\n                else if (uVar8 == 0x6e) {\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 10;\n                    }\n                }\n                else if (uVar8 == 0x72) {\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 0xd;\n                    }\n                }\n                else {\n                    if (uVar8 != 0x74) {\n                        iVar11 = var_4ch;\n                        if (uVar8 != 0x75) goto code_r0x00409fd5;\n                        if (var_1ch - puVar16 < 5) goto code_r0x0040a776;\n                        var_48h = puVar16 + 1;\n                        cVar7 = fcn.00409ad9(*var_48h);\n                        if (cVar7 == -1) goto code_r0x0040a776;\n                        var_48h = puVar16 + 2;\n                        uVar8 = fcn.00409ad9(*var_48h);\n                        if (uVar8 == 0xff) goto code_r0x0040a776;\n                        var_48h = puVar16 + 3;\n                        cVar9 = fcn.00409ad9(*var_48h);\n                        if (cVar9 == -1) goto code_r0x0040a776;\n                        puVar15 = puVar16 + 4;\n                        var_48h = puVar15;\n                        var_1h._0_1_ = fcn.00409ad9(*puVar15);\n                        if (var_1h == 0xff) goto code_r0x0040a776;\n                        uVar12 = CONCAT11(cVar7 << 4 | uVar8, cVar9 << 4);\n                        uVar13 = uVar12 | var_1h;\n                        dStack48 = dStack48 & 0xffffffff | uVar13 << 0x20;\n                        uVar14 = extraout_EDX;\n                        if ((uVar12 & 0xf800) == 0xd800) {\n                            if (((var_1ch - puVar15 < 7) || (var_48h = puVar16 + 5,  puVar16[5] != 0x5c)) ||\n                               (var_48h = puVar16 + 6,  puVar16[6] != 0x75)) goto code_r0x0040a776;\n                            var_48h = puVar16 + 7;\n                            cVar7 = fcn.00409ad9(*var_48h);\n                            if (cVar7 == -1) goto code_r0x0040a776;\n                            var_48h = puVar16 + 8;\n                            uVar8 = fcn.00409ad9(*var_48h);\n                            if (uVar8 == 0xff) goto code_r0x0040a776;\n                            var_48h = puVar16 + 9;\n                            cVar7 = fcn.00409ad9(*var_48h);\n                            if (cVar7 == -1) goto code_r0x0040a776;\n                            puVar15 = puVar16 + 10;\n                            var_48h = puVar15;\n                            uVar10 = fcn.00409ad9(*puVar15);\n                            if (uVar10 == 0xff) goto code_r0x0040a776;\n                            uVar14 = (var_28h & 0x3bf | 0x40) << 2 | uVar8 & 3;\n                            dStack48 = dStack48 & 0xffffffff | uVar14 << 0x20;\n                            uVar13 = uVar14 << 8 | cVar7 << 4 | uVar10;\n                            uVar14 = extraout_EDX_00;\n                        }\n                        uVar8 = uVar13;\n                        puVar16 = puVar15;\n                        iVar11 = var_4ch;\n                        ppiVar17 = var_ch;\n                        if (uVar13 < 0x80) {\n                            if (var_4ch == 0) {\n                                *(piVar19 + var_14h) = uVar8;\n                            }\n                            piVar19 = piVar19 + 1;\n                            arg_10h = piVar19;\n                        }\n                        else if (uVar13 < 0x800) {\n                            if (var_4ch == 0) {\n                                *(piVar19 + var_14h) = uVar13 >> 6 | 0xc0;\n                                *(piVar19 + 1 + var_14h) = uVar8 & 0x3f | 0x80;\n                                piVar19 = piVar19 + 2;\n                                arg_10h = piVar19;\n                            }\n                            else {\n                                piVar19 = piVar19 + 2;\n                                arg_10h = piVar19;\n                            }\n                        }\n                        else if (uVar13 < 0x10000) {\n                            if (var_4ch == 0) {\n                                *(piVar19 + var_14h) = uVar13 >> 0xc | 0xe0;\n                                *(piVar19 + 1 + var_14h) = uVar13 >> 6 & 0x3f | 0x80;\n                                *(piVar19 + 2 + var_14h) = uVar8 & 0x3f | 0x80;\n                                piVar19 = piVar19 + 3;\n                                arg_10h = piVar19;\n                            }\n                            else {\n                                piVar19 = piVar19 + 3;\n                                arg_10h = piVar19;\n                            }\n                        }\n                        else if (var_4ch == 0) {\n                            *(piVar19 + var_14h) = uVar13 >> 0x12 | 0xf0;\n                            *(piVar19 + 1 + var_14h) = uVar13 >> 0xc & 0x3f | 0x80;\n                            *(piVar19 + 2 + var_14h) = uVar13 >> 6 & 0x3f | 0x80;\n                            *(piVar19 + 3 + var_14h) = uVar8 & 0x3f | 0x80;\n                            piVar19 = piVar19 + 1;\n                            arg_10h = piVar19;\n                        }\n                        else {\n                            piVar19 = piVar19 + 1;\n                            arg_10h = piVar19;\n                        }\n                        goto code_r0x0040a74d;\n                    }\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 9;\n                    }\n                }\ncode_r0x00409f04:\n                piVar19 = piVar19 + 1;\n                arg_10h = piVar19;\n            }\n        }\ncode_r0x0040a74d:\n        puVar16 = puVar16 + 1;\n        uVar5 = *0x41a758;\n    } while( true );\n    var_4ch = var_4ch + -1;\n    var_20h = var_18h;\n    puVar16 = var_34h;\n    if (var_4ch < 0) {\n        return var_18h;\n    }\n    goto code_r0x00409be2;\n}\n",
        "token_count": 7996
    },
    "00401365": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00401365(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    var_14h = 0x41c2d4;\n    var_10h = 0x41c2e0;\n    uVar2 = 0;\n    var_ch = 0x41c2ec;\n    var_8h = 0x41c2f8;\n    var_4h = 0x41c304;\n    do {\n        fcn.00404a9d((&var_14h)[uVar2]);\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 5);\n    var_58h = *0x41c290;\n    var_54h = *0x41c294;\n    var_50h = *0x41c298;\n    var_4ch = *0x41c29c;\n    var_48h = *0x41c2a0;\n    var_44h = *0x41c2a4;\n    var_40h = *0x41c2a8;\n    var_3ch = *0x41c2ac;\n    var_38h = *0x41c2b0;\n    var_34h = *0x41c2b4;\n    var_30h = *0x41c2b8;\n    var_2ch = *0x41c2bc;\n    var_28h = *0x41c2c0;\n    var_24h = *0x41c2c4;\n    var_20h = *0x41c2c8;\n    var_1ch = *0x41c2cc;\n    var_18h = *0x41c2d0;\n    do {\n        if ((&var_58h)[uVar1] != 0) {\n            fcn.00403579((&var_58h)[uVar1]);\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x11);\n    return;\n}\n",
        "token_count": 625
    },
    "00404d32": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404d32(int32_t arg_8h, uint arg_ch, code *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(arg_8h + 8) != 0) {\n        do {\n            iVar1 = *(*(arg_8h + 0xc) + uVar2 * 4);\n            if (*(iVar1 + 4) != 5) {\n                return 0;\n            }\n            (*arg_10h)(arg_ch, *(iVar1 + 0xc), *(iVar1 + 8));\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(arg_8h + 8));\n    }\n    return 1;\n}\n",
        "token_count": 180
    },
    "00401447": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00401447(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h;\n    uint var_138h;\n    uint var_134h;\n    code *var_130h;\n    code *var_12ch;\n    uint uStack300;\n    uint uStack296;\n    uint var_120h;\n    ushort var_116h;\n    uint *var_114h;\n    uint var_110h;\n    code *var_10ch;\n    uint *var_108h;\n    uint var_104h;\n    code *var_100h;\n    uint *var_fch;\n    uint var_f8h;\n    code *var_f4h;\n    uint *var_f0h;\n    uint var_ech;\n    code *var_e8h;\n    uint *var_e4h;\n    uint var_e0h;\n    code *var_dch;\n    uint *var_d8h;\n    uint var_d4h;\n    code *var_d0h;\n    uint *var_cch;\n    uint var_c8h;\n    code *var_c4h;\n    uint *var_c0h;\n    uint var_bch;\n    code *var_b8h;\n    uint *var_b4h;\n    uint var_b0h;\n    code *var_ach;\n    uint *var_a8h;\n    uint var_a4h;\n    code *var_a0h;\n    uint *var_9ch;\n    uint var_98h;\n    code *var_94h;\n    uint *var_90h;\n    uint var_8ch;\n    code *var_88h;\n    uint *var_84h;\n    uint var_80h;\n    code *var_7ch;\n    uint *var_78h;\n    uint var_74h;\n    code *var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_60h;\n    uchar var_5bh;\n    uint var_58h;\n    int32_t var_53h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h [8];\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004019d8();\n    if (iVar1 != 0) {\n        var_138h = 0;\n        var_134h = 0;\n        uStack300 = 0;\n        uStack296 = 0;\n        var_130h = fcn.0040352c;\n        var_12ch = fcn.00403579;\n        uVar2 = fcn.004048d0(iVar1);\n        iVar3 = fcn.00409b65(&var_138h, iVar1, uVar2);\n        var_4ch = iVar3;\n        if (iVar3 == 0) {\n            fcn.00403579(iVar1);\n        }\n        else {\n            fcn.00404580(0x41b040, 0x22d, 0xe, 2, &var_4h);\n            var_4h._2_1_ = 0;\n            fcn.00404580(0x41b040, 0x31, 4, 3, &var_14h);\n            var_14h._3_1_ = 0;\n            fcn.00404580(0x41b040, 0x6f, 0xf, 3, &var_18h);\n            var_18h._3_1_ = 0;\n            fcn.00404580(0x41b040, 0x24d, 7, 3, &var_1ch);\n            var_1ch._3_1_ = 0;\n            fcn.00404580(0x41b040, 0x25f, 10, 3, &var_20h);\n            var_20h._3_1_ = 0;\n            fcn.00404580(0x41b040, 0x4cd, 0xc, 4, &var_38h);\n            var_34h._0_1_ = 0;\n            fcn.00404580(0x41b040, 0x1a0, 0xe, 4, &var_40h);\n            var_3ch._0_1_ = 0;\n            fcn.00404580(0x41b040, 0x8a, 0xc, 3, &var_24h);\n            var_24h._3_1_ = 0;\n            fcn.00404580(0x41b040, 0x185, 8, 3, &var_28h);\n            var_28h._3_1_ = 0;\n            fcn.00404580(0x41b040, 0xab, 5, 3, &var_2ch);\n            var_2ch._3_1_ = 0;\n            fcn.00404580(0x41b040, 0x5b, 10, 5, &var_58h);\n            var_53h._0_1_ = 0;\n            fcn.00404580(0x41b040, 0x299, 0xe, 5, &var_60h);\n            var_5bh = 0;\n            fcn.00404580(0x41b040, 0xfe, 8, 3, &var_30h);\n            var_30h._3_1_ = 0;\n            fcn.00404580(0x41b040, 499, 0xd, 4, &var_48h);\n            var_114h = &var_4h;\n            var_110h = 5;\n            var_108h = &var_14h;\n            var_fch = &var_18h;\n            var_f0h = &var_1ch;\n            var_e4h = &var_20h;\n            var_d8h = &var_38h;\n            var_cch = &var_40h;\n            var_c0h = &var_24h;\n            var_104h = 5;\n            var_f8h = 5;\n            var_d4h = 2;\n            var_b4h = &var_28h;\n            var_bch = 2;\n            var_44h._0_1_ = 0;\n            var_10ch = fcn.00401142;\n            var_100h = fcn.00401123;\n            var_f4h = fcn.004011d1;\n            var_ech = 6;\n            var_e8h = fcn.00401019;\n            var_e0h = 1;\n            var_dch = fcn.00401286;\n            var_d0h = fcn.00401320;\n            var_c8h = 6;\n            var_c4h = fcn.00401352;\n            var_b8h = fcn.0040119f;\n            var_b0h = 5;\n            var_a8h = &var_2ch;\n            var_ach = fcn.0040102c;\n            var_9ch = &var_58h;\n            var_90h = &var_60h;\n            var_84h = &var_30h;\n            var_78h = &var_48h;\n            var_a4h = 6;\n            var_a0h = fcn.004010b1;\n            var_98h = 5;\n            var_94h = fcn.004010c4;\n            var_8ch = 5;\n            var_88h = fcn.00401104;\n            var_80h = 5;\n            var_7ch = fcn.00401071;\n            var_74h = 6;\n            var_70h = fcn.0040105e;\n            iVar3 = fcn.00404d6d(iVar3, &var_114h, 0xe);\n            fcn.0040a7af(&var_138h, var_4ch);\n            fcn.00403579(iVar1);\n            if (iVar3 != 0) {\n                fcn.00404580(0x41b040, 0x300, 7, 8, var_10h);\n                var_8h._0_2_ = 0;\n                fcn.00404580(0x41b040, 0xe6, 7, 8, &var_6ch);\n                var_64h._0_2_ = 0;\n                fcn.00404580(0x41b040, 0x569, 8, 10, &var_120h);\n                var_116h = 0;\n                *0x41c2ac = fcn.004044dd(0x41c1a0, 0x20, 0);\n                *0x41c2b0 = fcn.00403a82();\n                if (*0x41c2b0 == 0) {\n                    *0x41c2b0 = fcn.00404895(var_10h);\n                }\n                *0x41c2b4 = fcn.004020af();\n                *0x41c2a8 = fcn.00401ae2();\n                *0x41c2b8 = fcn.00403bc6();\n                if (*0x41c2b8 == 0) {\n                    *0x41c2b8 = fcn.00404895(var_10h);\n                }\n                *0x41c2bc = fcn.00403731();\n                if (*0x41c2bc == 0) {\n                    *0x41c2bc = fcn.00404895(var_10h);\n                }\n                *0x41c2c0 = fcn.00403897();\n                if (*0x41c2c0 == 0) {\n                    *0x41c2c0 = fcn.00404895(var_10h);\n                }\n                *0x41c2c4 = fcn.004039b3();\n                if (*0x41c2c4 == 0) {\n                    *0x41c2c4 = fcn.00404895(var_10h);\n                }\n                iVar1 = fcn.00403cd5();\n                arg_8h = &var_6ch;\n                if (iVar1 == 0) {\n                    arg_8h = &var_120h;\n                }\n                *0x41c2c8 = fcn.00404895(arg_8h);\n                *0x41c2cc = fcn.00403b50();\n                if (*0x41c2cc == 0) {\n                    *0x41c2cc = fcn.00404895(var_10h);\n                }\n                uVar2 = fcn.00403770(&var_53h + 3);\n                *0x41c2d0 = fcn.004044dd(uVar2, stack0xffffffac * 0x16, 0);\n                fcn.00403579(uVar2);\n                iVar1 = fcn.00403d8f();\n                *0x41c318 = (-(iVar1 != 0) & 0xffffffea) + 0x56;\n                fcn.00401f39();\n                fcn.00402023();\n                fcn.00401dad();\n                if (((((*0x41c2ac != 0) && (*0x41c2b0 != 0)) && (*0x41c2b4 != 0)) &&\n                    ((((*0x41c2a8 != 0 && (*0x41c2b8 != 0)) &&\n                      ((*0x41c2bc != 0 && ((*0x41c2c0 != 0 && (*0x41c2c4 != 0)))))) && (*0x41c2c8 != 0)))) &&\n                   ((((*0x41c2cc != 0 && (*0x41c2d0 != 0)) && (*0x41c29c != 0)) &&\n                    ((*0x41c2a0 != 0 && (*0x41c2a4 != 0)))))) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2865
    },
    "00401ae2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401ae2(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint var_38h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_ah;\n    int32_t var_4h;\n    \n    fcn.00404580(0x41b040, 0x2b9, 0xc, 0x1c, &var_38h);\n    var_1ch._0_2_ = 0;\n    fcn.00404580(0x41b040, 0x10e, 0xc, 0xe, &var_18h);\n    var_ah._0_2_ = 0;\n    arg_8h = fcn.00403f5b(0x80000002, &var_38h, &var_18h, &var_ah + 2, &var_4h);\n    if ((arg_8h != 0) || (arg_8h = fcn.00403f5b(0x80000001, &var_38h, &var_18h, &var_ah + 2, &var_4h),  arg_8h != 0)) {\n        if (stack0xfffffff4 == 1) goto code_r0x00401bfd;\n        if (arg_8h != 0) {\n            fcn.00403579(arg_8h);\n        }\n    }\n    arg_8h = fcn.004023be(5, 10);\n    while( true ) {\n        if (arg_8h == 0) {\n            return 0;\n        }\n        iVar1 = fcn.00404b49(0x41c2ec, arg_8h + 2);\n        if (iVar1 == 0) break;\n        fcn.00403579(arg_8h);\n        arg_8h = fcn.004023be(5, 10);\n    }\n    iVar1 = fcn.004048e3(arg_8h);\n    var_4h = iVar1 * 2 + 2;\n    iVar1 = fcn.00403fd9(0x80000002, &var_38h, &var_18h, 1, arg_8h, var_4h);\n    if (iVar1 == 0) {\n        fcn.00403fd9(0x80000001, &var_38h, &var_18h, 1, arg_8h, var_4h);\n    }\ncode_r0x00401bfd:\n    fcn.00404c8d(0x41c2ec, arg_8h + 2);\n    return arg_8h;\n}\n",
        "token_count": 622
    },
    "004023be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004023be(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    int16_t *piVar5;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        piVar2 = fcn.00403e9c(arg_8h, arg_ch);\n        piVar3 = piVar2;\n        if ((piVar2 != NULL) && (piVar3 = fcn.0040352c(piVar2 * 2 + 4),  piVar3 != NULL)) {\n            *piVar3 = 0x2e;\n            piVar5 = piVar3;\n            for (; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                piVar5 = piVar5 + 1;\n                iVar4 = fcn.00403e9c(0, 1);\n                arg_ch_00 = 9;\n                if (iVar4 != 0) {\n                    arg_ch_00 = 0x19;\n                }\n                iVar1 = fcn.00403e9c(0, arg_ch_00);\n                *piVar5 = iVar1 + *(iVar4 * 2 + 0x40b000);\n            }\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 336
    },
    "004025e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004025e2(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if ((arg_14h < 1) && ((arg_14h < 0 || (arg_10h < 0x100000)))) {\n        uVar3 = arg_10h;\n    }\n    iVar1 = fcn.0040584a(arg_8h, uVar3 + 0x150);\n    while( true ) {\n        if (iVar1 != 0) {\n            *(iVar1 + 0x14c) = uVar3;\n            iVar2 = fcn.004058c5(iVar1, arg_ch, arg_10h, arg_14h, 0xc0000000, 0, 3);\n            if (iVar2 == 0) {\n                fcn.0040585e(arg_8h, iVar1);\n                iVar1 = 0;\n            }\n            else {\n                fcn.00402677(iVar1);\n            }\n            return iVar1;\n        }\n        iVar1 = fcn.00403dad();\n        if (iVar1 != 8) break;\n        fcn.004040e1(100);\n        iVar1 = fcn.0040584a(arg_8h, uVar3 + 0x150);\n    }\n    return 0;\n}\n",
        "token_count": 342
    },
    "00402947": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402947(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00403c02();\n    while (iVar1 = fcn.00405872(arg_8h, &var_8h, &var_ch, &var_4h, 0xffffffff),  *0x41c030 == 0) {\n        if (iVar1 == 0) {\n            iVar1 = fcn.00403dad();\n            if (iVar1 == 0x26) {\n                fcn.00402596(arg_8h, var_4h);\n            }\n        }\n        else {\n            fcn.00405940(var_4h, var_8h, 0);\n            iVar1 = *(var_4h + 0x148);\n            if (iVar1 == 0) {\n                fcn.00402813(arg_8h, var_4h, 1);\n            }\n            else if (iVar1 == 1) {\n                fcn.00402a0d(var_4h, var_8h, -(*0x41c32c != 0) & 2);\n            }\n            else if (iVar1 == 2) {\n                fcn.00402a7a(var_4h, 3);\n            }\n            else if (iVar1 == 3) {\n                fcn.00402732(arg_8h, var_4h);\n            }\n        }\n    }\n    LOCK();\n    *(arg_8h + 8) = *(arg_8h + 8) + -1;\n    fcn.00403caa();\n    return 0;\n}\n",
        "token_count": 383
    },
    "00402a7a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a7a(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    *(arg_8h + 0x148) = arg_ch;\n    if (*0x41c32c != 0) {\n        iVar2 = *(arg_8h + 0x24);\n        uVar1 = *(arg_8h + 0x20);\n        if ((-1 < iVar2) && ((0 < iVar2 || (0x100000 < uVar1)))) {\n            fcn.00405940(arg_8h, uVar1 - 0x100000, iVar2 - (uVar1 < 0x100000));\n        }\n    }\n    iVar2 = fcn.0040595a(arg_8h, arg_8h + 0x28, 0xe0);\n    while( true ) {\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00403dad();\n        if (iVar2 == 0x3e5) break;\n        fcn.004040e1(100);\n        iVar2 = fcn.0040595a(arg_8h, arg_8h + 0x28, 0xe0);\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "004034ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034ce(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if (arg_ch == 0) {\n        return 0;\n    }\n    uVar1 = (**0x41b768)(arg_8h, 8, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 77
    },
    "004034eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004034eb(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x100000;\n    if (arg_8h != 0) {\n        iVar1 = arg_8h;\n    }\n    (**0x41b778)(0, iVar1, 0);\n    return;\n}\n",
        "token_count": 80
    },
    "0040352c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040352c(uint arg_8h)\n\n{\n    if (*0x41c038 == 0) {\n        *0x41c034 = (**0x41b778)(0, 0x100000, 0);\n        if (*0x41c034 == 0) {\n            *0x41c034 = (**0x41b6c0)();\n        }\n        *0x41c038 = 1;\n    }\n    fcn.004034ce(*0x41c034, arg_8h);\n    return;\n}\n",
        "token_count": 125
    },
    "0040360e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040360e(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        (**0x41b6e4)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00403770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403770(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_18h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    iVar2 = 0;\n    do {\n        if (iVar2 != 0) {\n            if ((iVar3 == 0) || (var_4h = fcn.0040352c(iVar3 * 0x16),  var_4h == 0)) {\n                *arg_8h = 0;\n                return var_4h;\n            }\n            *arg_8h = iVar3;\n            iVar3 = 0;\n        }\n        var_10h = *0x40b134;\n        var_ch = *0x40b138;\n        if (*0x40b134 < 0x5b) {\n            puVar4 = var_4h + 0xe + iVar3 * 0x16;\n            do {\n                var_8h = (**0x41b6c4)(&var_10h);\n                iVar1 = fcn.00405ba0(var_8h);\n                if (iVar1 != 0) {\n                    if (iVar2 != 0) {\n                        *(puVar4 + -0xe) = var_10h;\n                        puVar4[-3] = var_8h;\n                        iVar1 = (**0x41b820)(&var_10h, &var_18h, puVar4 + -2, puVar4);\n                        if (iVar1 == 0) {\n                            *puVar4 = 0;\n                            puVar4[1] = 0;\n                            puVar4[-2] = 0;\n                            puVar4[-1] = 0;\n                        }\n                    }\n                    iVar3 = iVar3 + 1;\n                    puVar4 = puVar4 + 0x16;\n                }\n                var_10h = var_10h & 0xffff0000 | var_10h + 1U;\n            } while (var_10h + 1U < 0x5b);\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 2);\n    return var_4h;\n}\n",
        "token_count": 556
    },
    "00403897": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.00403897(void)\n\n{\n    int16_t *piVar1;\n    uint var_94h;\n    uint var_30h;\n    uint var_2ch;\n    ushort var_1ah;\n    uint var_18h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00404580(0x41b838, 800, 10, 100, &var_94h);\n    var_30h._0_2_ = 0;\n    fcn.00404580(0x41b838, 0x205, 7, 0xc, &var_18h);\n    var_ch._0_2_ = 0;\n    var_4h = 0;\n    piVar1 = fcn.00403f5b(0x80000002, &var_94h, &var_18h, &var_8h, &var_4h);\n    if (piVar1 != NULL) {\n        if (var_8h == 1) {\n            if (*piVar1 != 0) {\n                return piVar1;\n            }\n            fcn.00404580(0x41b838, 0x649, 9, 0x12, &var_2ch);\n            var_1ah = 0;\n            fcn.00403579(piVar1);\n            piVar1 = fcn.00404895(&var_2ch);\n            return piVar1;\n        }\n        fcn.00403579(piVar1);\n    }\n    return NULL;\n}\n",
        "token_count": 367
    },
    "004039b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004039b3(void)\n\n{\n    int32_t arg_8h;\n    uint var_58h;\n    uint var_22h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00404580(0x41b838, 0x763, 8, 0x36, &var_58h);\n    var_22h._0_2_ = 0;\n    fcn.00404580(0x41b838, 0x6ed, 7, 0x14, &var_22h + 2);\n    var_4h = 0;\n    var_ch._0_2_ = 0;\n    arg_8h = fcn.00403f5b(0x80000001, &var_58h, &var_22h + 2, &var_8h, &var_4h);\n    if (arg_8h != 0) {\n        if (var_8h == 1) {\n            return arg_8h;\n        }\n        fcn.00403579(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 275
    },
    "00403b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00403b50(void)\n\n{\n    int32_t arg_8h;\n    uint var_7ch;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_ah;\n    uint var_4h;\n    \n    fcn.00404580(0x41b838, 0x675, 0xe, 0x58, &var_7ch);\n    var_24h._0_2_ = 0;\n    fcn.00404580(0x41b838, 0x609, 4, 0x16, &var_20h);\n    var_4h = 0;\n    var_ah._0_2_ = 0;\n    arg_8h = fcn.00403f5b(0x80000002, &var_7ch, &var_20h, &var_ah + 2, &var_4h);\n    if (arg_8h != 0) {\n        if (stack0xfffffff4 == 1) {\n            return arg_8h;\n        }\n        fcn.00403579(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 274
    },
    "00403df5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403df5(int32_t arg_8h, uint arg_ch, code *arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_22ch;\n    \n    iVar2 = 0;\n    arg_8h_00 = (**0x41b810)(2, 0);\n    if (arg_8h_00 == -1) {\n        iVar2 = 0;\n    }\n    else {\n        var_22ch = 0x22c;\n        iVar1 = (**0x41b818)(arg_8h_00, &var_22ch);\n        while (iVar1 != 0) {\n            iVar2 = (*arg_10h)(arg_ch, &var_22ch);\n            if ((iVar2 != 0) && (arg_8h != 0)) break;\n            iVar1 = (**0x41b798)(arg_8h_00, &var_22ch);\n        }\n        fcn.0040360e(arg_8h_00);\n    }\n    return iVar2;\n}\n",
        "token_count": 254
    },
    "00403e6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403e6c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint unaff_EBP;\n    \n    iVar1 = fcn.004041ef(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00403edd(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            if (*0x41c044 == 0) {\n                iVar1 = (**0x41b6cc)(0x41c040, 0, 0, 1, 0xf0000000, unaff_EBP);\n                if (iVar1 == 0) {\n                    return false;\n                }\n                *0x41c044 = 1;\n            }\n            iVar1 = (**0x41b7e8)(*0x41c040, arg_ch, arg_8h);\n            return iVar1 != 0;\n        }\n    }\n    return true;\n}\n",
        "token_count": 219
    },
    "00403edd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403ef8)\n\nint32_t __cdecl fcn.00403edd(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    uint var_10h;\n    uint var_8h;\n    \n    if (*0x41c048 == 0) {\n        iVar1 = cpuid_Version_info(1);\n        if ((*(iVar1 + 0xc) & 0x40000000) != 0) {\n            *0x41c04c = 1;\n        }\n        *0x41c048 = 1;\n    }\n    iVar1 = *0x41c04c;\n    if ((*0x41c04c != 0) && (uVar2 = 0,  arg_ch != 0)) {\n        do {\n            iVar3 = 0;\n            while( true ) {\n                uVar4 = rdrand();\n                bVar5 = rdrandIsValid();\n                if (bVar5) break;\n                iVar3 = iVar3 + 1;\n                if (0xf < iVar3) {\n                    return 0;\n                }\n            }\n            *(uVar2 + arg_8h) = uVar4;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 327
    },
    "0040462e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040462e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t arg_10h_00;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h != 0) && (arg_ch != 0)) && (arg_10h != 0)) {\n        iVar1 = fcn.004048e3(arg_ch);\n        iVar2 = fcn.004048e3(arg_10h);\n        iVar5 = 0;\n        iVar3 = fcn.00404940(arg_8h, arg_ch);\n        if (iVar3 != 0) {\n            do {\n                iVar5 = iVar5 + 1;\n                iVar3 = fcn.00404940(iVar3 + iVar1 * 2, arg_ch);\n            } while (iVar3 != 0);\n            if (iVar5 != 0) {\n                iVar3 = fcn.004048e3(arg_8h);\n                iVar3 = fcn.0040352c((iVar3 + (iVar2 - iVar1) * iVar5) * 2 + 2);\n                if (iVar3 != 0) {\n                    arg_8h_00 = arg_8h;\n                    arg_8h = iVar3;\n                    do {\n                        iVar5 = iVar5 + -1;\n                        iVar4 = fcn.00404940(arg_8h_00, arg_ch);\n                        arg_10h_00 = iVar4 - arg_8h_00 >> 1;\n                        iVar4 = fcn.004048fc(arg_8h, arg_8h_00, arg_10h_00);\n                        arg_8h = fcn.0040483a(iVar4 + arg_10h_00 * 2, arg_10h);\n                        arg_8h = arg_8h + iVar2 * 2;\n                        arg_8h_00 = arg_8h_00 + (iVar1 + arg_10h_00) * 2;\n                    } while (iVar5 != 0);\n                    fcn.0040483a(arg_8h, arg_8h_00);\n                    return iVar3;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 563
    },
    "00404722": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404722(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        uVar1 = *arg_8h;\n        if (('@' < uVar1) && (uVar1 < '[')) {\n            *arg_8h = uVar1 | 0x20;\n        }\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00404860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404860(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.004048d0(arg_8h);\n    iVar1 = fcn.0040352c(iVar1 + 1);\n    if (iVar1 != 0) {\n        fcn.0040481a(iVar1, arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 117
    },
    "00404895": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404895(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.004048e3(arg_8h);\n    iVar1 = fcn.0040352c(iVar1 * 2 + 2);\n    if (iVar1 != 0) {\n        fcn.0040483a(iVar1, arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 120
    },
    "00404be8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404be8(uint *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *arg_ch_00;\n    uint var_4h;\n    \n    iVar2 = fcn.00404b0b(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = fcn.00404540(arg_ch);\n        uVar1 = arg_8h[1];\n        arg_ch_00 = fcn.004034ce(*arg_8h, 0xc);\n        if (arg_ch_00 != NULL) {\n            iVar2 = fcn.00404860(arg_ch);\n            *arg_ch_00 = iVar2;\n            if (iVar2 != 0) {\n                iVar2 = fcn.0040442a(arg_ch);\n                arg_ch_00[1] = iVar2;\n                if (iVar2 != 0) {\n                    arg_ch_00[2] = *(arg_8h[2] + (uVar3 % uVar1) * 4);\n                    *(arg_8h[2] + (uVar3 % uVar1) * 4) = arg_ch_00;\n                    return 1;\n                }\n            }\n            if (*arg_ch_00 != 0) {\n                fcn.00403579(*arg_ch_00);\n            }\n            if (arg_ch_00[1] != 0) {\n                fcn.00403579(arg_ch_00[1]);\n            }\n            fcn.00403516(*arg_8h, arg_ch_00);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 377
    },
    "00404c8d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c8d(uint *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *arg_ch_00;\n    uint var_4h;\n    \n    iVar2 = fcn.00404b49(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = fcn.0040455e(arg_ch);\n        uVar1 = arg_8h[1];\n        arg_ch_00 = fcn.004034ce(*arg_8h, 0xc);\n        if (arg_ch_00 != NULL) {\n            iVar2 = fcn.00404a4a(arg_ch);\n            *arg_ch_00 = iVar2;\n            if (iVar2 != 0) {\n                iVar2 = fcn.00404895(arg_ch);\n                arg_ch_00[1] = iVar2;\n                if (iVar2 != 0) {\n                    arg_ch_00[2] = *(arg_8h[2] + (uVar3 % uVar1) * 4);\n                    *(arg_8h[2] + (uVar3 % uVar1) * 4) = arg_ch_00;\n                    return 1;\n                }\n            }\n            if (*arg_ch_00 != 0) {\n                fcn.00403579(*arg_ch_00);\n            }\n            if (arg_ch_00[1] != 0) {\n                fcn.00403579(arg_ch_00[1]);\n            }\n            fcn.00403516(*arg_8h, arg_ch_00);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 379
    },
    "00405974": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405974(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *arg_8h_00;\n    bool bVar7;\n    ulong uVar8;\n    uint32_t var_268h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_23ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = NULL;\n    var_8h = 0;\n    var_4h = 0;\n    fcn.00405c4c(&var_10h, arg_8h);\n    iVar4 = *arg_ch;\n    arg_8h_00 = var_10h;\n    while (iVar4 == 0) {\n        uVar3 = var_8h | var_4h;\n        puVar6 = arg_8h_00;\n        if (uVar3 != 0) {\n            fcn.0040483a(arg_8h, *arg_8h_00);\n            puVar6 = arg_8h_00[1];\n            var_10h = puVar6;\n            fcn.00403579(*arg_8h_00);\n            fcn.00403579(arg_8h_00);\n            bVar7 = var_8h != 0;\n            var_8h = var_8h - 1;\n            var_4h = (var_4h - 1) + bVar7;\n            if ((var_8h | var_4h) == 0) {\n                var_ch = 0;\n            }\n            uVar3 = 1;\n        }\n        arg_8h_00 = puVar6;\n        if (uVar3 == 0) break;\n        var_14h = fcn.004048e3(arg_8h);\n        fcn.00404776(arg_8h, 0x40b248);\n        iVar4 = (**0x41b70c)(arg_8h, &var_268h);\n        if (iVar4 != -1) {\n            do {\n                iVar5 = fcn.004047d9(&var_23ch, 0x40b118);\n                if (((iVar5 != 0) && (iVar5 = fcn.004047d9(&var_23ch, 0x40b240),  iVar5 != 0)) &&\n                   ((var_268h & 0x400) == 0)) {\n                    fcn.0040483a(arg_8h + var_14h * 2, &var_23ch);\n                    uVar2 = var_248h;\n                    if ((var_268h & 0x10) == 0) {\n                        var_18h = var_24ch;\n                        iVar5 = (*arg_ch[2])(arg_8h, &var_23ch, var_248h, var_24ch);\n                        if (iVar5 != 0) {\n                            uVar8 = (*arg_ch[0xb])(arg_ch[4], arg_8h, &var_23ch, uVar2, var_18h);\n                            puVar1 = arg_ch + 8;\n                            uVar3 = *puVar1;\n                            *puVar1 = *puVar1 + uVar8;\n                            arg_ch[9] = arg_ch[9] + (uVar8 >> 0x20) + CARRY4(uVar3, uVar8);\n                        }\n                    }\n                    else {\n                        fcn.00404776(arg_8h, 0x40b24c);\n                        iVar5 = (*arg_ch[1])(arg_8h, &var_23ch);\n                        if (iVar5 != 0) {\n                            fcn.00405c4c(&var_10h, arg_8h);\n                            uVar8 = (*arg_ch[10])(arg_ch[3], arg_8h, &var_23ch);\n                            puVar1 = arg_ch + 6;\n                            uVar3 = *puVar1;\n                            *puVar1 = *puVar1 + uVar8;\n                            arg_ch[7] = arg_ch[7] + (uVar8 >> 0x20) + CARRY4(uVar3, uVar8);\n                        }\n                    }\n                }\n            } while ((*arg_ch == 0) && (iVar5 = (**0x41b62c)(iVar4, &var_268h),  iVar5 != 0));\n            (**0x41b75c)(iVar4);\n            arg_8h_00 = var_10h;\n        }\n        iVar4 = *arg_ch;\n    }\n    while (arg_8h_00 != NULL) {\n        puVar6 = arg_8h_00[1];\n        fcn.00403579(*arg_8h_00);\n        fcn.00403579(arg_8h_00);\n        arg_8h_00 = puVar6;\n    }\n    return;\n}\n",
        "token_count": 1177
    },
    "00405bb3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00405bb3(uint arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    uint32_t uVar1;\n    \n    arg_8h_00 = (**0x41b7f0)(arg_8h);\n    if ((*arg_8h_00 == 0x2e) && (uVar1 = fcn.004048e3(arg_8h_00),  1 < uVar1)) {\n        return arg_8h_00 + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 128
    },
    "00405d21": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405d21(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = (**0x41b71c)(2, 1, 0, arg_ch, &var_8h);\n    if (iVar1 == 0) {\n        var_4h = 0xffffffff;\n        var_ch = 0x4000;\n        iVar1 = fcn.0040352c(0x4000);\n        if (iVar1 == 0) {\n            (**0x41b728)(var_8h);\n            bVar5 = false;\n        }\n        else {\ncode_r0x00405d6e:\n            do {\n                iVar2 = (**0x41b80c)(var_8h, &var_4h, iVar1, &var_ch);\n                if (iVar2 == 0) {\n                    uVar3 = 0;\n                    if (var_4h == 0) goto code_r0x00405d6e;\n                    puVar4 = iVar1 + 0x14;\n                    do {\n                        if (puVar4[-4] == 1) {\n                            fcn.00405bde(*puVar4, arg_8h);\n                        }\n                        if ((*(puVar4 + -2) & 2) != 0) {\n                            fcn.00405d21(arg_8h, puVar4 + -5);\n                        }\n                        uVar3 = uVar3 + 1;\n                        puVar4 = puVar4 + 8;\n                    } while (uVar3 < var_4h);\n                }\n            } while (iVar2 != 0x103);\n            fcn.00403579(iVar1);\n            iVar1 = (**0x41b728)(var_8h);\n            bVar5 = iVar1 == 0;\n        }\n    }\n    else {\n        bVar5 = false;\n    }\n    return bVar5;\n}\n",
        "token_count": 484
    },
    "00408d94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00408d94(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint arg_1ch, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint var_cch;\n    int32_t var_4h;\n    \n    if ((arg_8h == 0) || (((arg_10h == 0 && (arg_14h != 0)) || (199 < arg_18h)))) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.004035b3(&var_cch, 0, 200);\n        if (arg_18h <= arg_14h) {\n            var_4h = arg_10h - &var_cch;\n            do {\n                iVar3 = var_4h;\n                uVar4 = 0;\n                if (arg_18h != 0) {\n                    do {\n                        puVar2 = &var_cch + uVar4;\n                        *puVar2 = *puVar2 ^ puVar2[iVar3];\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < arg_18h);\n                }\n                fcn.00408ed0(&var_cch);\n                var_4h = var_4h + arg_18h;\n                arg_14h = arg_14h - arg_18h;\n                arg_10h = arg_10h + arg_18h;\n            } while (arg_18h <= arg_14h);\n        }\n        *(&var_cch + arg_14h) = *(&var_cch + arg_14h) ^ arg_1ch;\n        (&stack0xffffff2f)[arg_18h] = (&stack0xffffff2f)[arg_18h] ^ 0x80;\n        if (arg_14h != 0) {\n            uVar4 = 0;\n            do {\n                puVar2 = &var_cch + uVar4;\n                *puVar2 = *puVar2 ^ puVar2[arg_10h - &var_cch];\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < arg_14h);\n        }\n        fcn.00408ed0(&var_cch);\n        for (; arg_18h <= arg_ch; arg_ch = arg_ch - arg_18h) {\n            if (arg_18h != 0) {\n                fcn.0040358e(arg_8h, &var_cch, arg_18h);\n            }\n            fcn.00408ed0(&var_cch);\n            arg_8h = arg_8h + arg_18h;\n        }\n        if (arg_ch != 0) {\n            fcn.0040358e(arg_8h, &var_cch, arg_ch);\n        }\n        puVar5 = &var_cch;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 902
    },
    "00409b34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409b34(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (arg_8h[2] - *arg_8h < arg_ch) {\ncode_r0x00409b49:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_8h[3] != 0) {\n            uVar1 = *arg_8h + arg_ch;\n            *arg_8h = uVar1;\n            if (arg_8h[3] <= uVar1 && uVar1 != arg_8h[3]) goto code_r0x00409b49;\n        }\n        uVar2 = (*arg_8h[5])(arg_ch);\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "00405ca3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405ca3(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_2h;\n    \n    arg_8h_00 = fcn.0040352c(0xfffe);\n    if (arg_8h_00 != 0) {\n        fcn.00404580(0x41b838, 0x79, 7, 0xe, &var_10h);\n        var_2h._0_2_ = 0;\n        fcn.0040483a(arg_8h_00, &var_10h);\n        while( true ) {\n            if (0x5a < *(arg_8h_00 + 8)) break;\n            iVar1 = (**0x41b6c4)();\n            if (iVar1 - 2U < 3) {\n                fcn.00405974(arg_8h_00, arg_8h);\n            }\n            *(arg_8h_00 + 8) = *(arg_8h_00 + 8) + 1;\n            *(arg_8h_00 + 0xe) = 0;\n        }\n        fcn.00403579(arg_8h_00);\n        arg_8h_00 = 1;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 339
    },
    "00405ecd": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00405ecd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_15ch;\n    uint var_cch;\n    uint var_c8h;\n    ushort var_56h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int16_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    fcn.00404580(0x41b838, 0x108, 4, 0x90, &var_15ch);\n    uVar6 = 0;\n    var_cch._0_2_ = 0;\n    iVar2 = (**0x41b748)(&var_15ch, 0, 0, 0, 0);\n    if (iVar2 != 0) {\n        var_30h = var_30h._2_2_ << 0x10;\n        var_48h = 0x3c;\n        var_44h = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_38h = 0;\n        var_34h = 1;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = NULL;\n        var_18h = 1;\n        var_14h = 0;\n        var_10h = 0;\n        var_8h = iVar2;\n        iVar3 = (*str.__X._0_4_)(arg_8h, 0, 0, &var_48h);\n        if (iVar3 == 0) {\n            (**0x41b790)(iVar2);\n        }\n        else {\n            *(var_38h + var_34h * 2) = 0;\n            iVar3 = (**0x41b7a8)(iVar2, var_38h, var_30h, 0);\n            var_ch = iVar3;\n            if (iVar3 != 0) {\n                if (*var_1ch == 0) {\n                    *var_1ch = 0x2f;\n                }\n                fcn.00404580(0x41b838, 0x7a6, 9, 8, &var_54h);\n                uVar4 = 0;\n                var_4ch._0_2_ = 0;\n                if (var_3ch == 2) {\n                    uVar4 = 0x800000;\n                }\n                iVar3 = (**0x41b830)(iVar3, &var_54h, var_1ch, 0, 0, 0, uVar4 | 0x100);\n                if (iVar3 != 0) {\n                    bVar1 = false;\n                    fcn.00404580(0x41b838, 0x394, 7, 0x72, &var_c8h);\n                    var_56h = 0;\n                    do {\n                        iVar2 = (**0x41b7c4)(iVar3, &var_c8h, 0xffffffff, arg_ch, arg_10h, arg_10h, 0);\n                        if (iVar2 != 0) break;\n                        iVar2 = fcn.00403dad();\n                        if (iVar2 == 0x2f8f) {\n                            var_4h = 0x13300;\n                            iVar2 = (**0x41b7f4)(iVar3, 0x1f, &var_4h, 4);\n                            if (iVar2 != 0) {\n                                bVar1 = true;\n                            }\n                        }\n                    } while (bVar1);\n                    *arg_18h = 0;\n                    iVar5 = (**0x41b73c)(iVar3, 0);\n                    iVar2 = var_8h;\n                    if (iVar5 != 0) {\n                        var_4h = 0;\n                        var_8h = 4;\n                        iVar5 = (**0x41b824)(iVar3, 0x20000013, 0, &var_4h, &var_8h, 0);\n                        uVar4 = -(iVar5 != 0) & var_4h;\n                        *arg_18h = uVar4;\n                        if (uVar4 == 200) {\n                            uVar6 = fcn.00405de6(iVar3, arg_14h);\n                        }\n                    }\n                    (**0x41b790)(iVar2);\n                    (**0x41b790)(var_ch);\n                    (**0x41b790)(iVar3);\n                    return uVar6;\n                }\n                (**0x41b790)(iVar2);\n                iVar2 = var_ch;\n            }\n            (**0x41b790)(iVar2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1263
    },
    "00406154": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00406154(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint var_288h;\n    uint var_80h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_40h;\n    uint var_3ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    ushort var_ch;\n    ushort var_ah;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h._0_2_ = 0x7e2;\n    uVar6 = 1;\n    var_10h._2_2_ = 9;\n    var_ch = 0;\n    var_ah = 0xb;\n    var_8h = 0;\n    var_4h = 0;\n    iVar2 = (**0x41b7e0)(&var_10h, &var_24h);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00403dd8();\n        if ((0x501 < uVar1) && (iVar2 = (**0x41b7cc)(&var_14h),  iVar2 == 0)) {\n            return 1;\n        }\n        iVar2 = (**0x41b814)(&var_288h, 0x104);\n        if (iVar2 != 0) {\n            fcn.00404776(&var_288h, 0x40b24c);\n            iVar2 = fcn.004048e3(&var_288h);\n            fcn.00404580(0x41b838, 0x1a5, 7, 0x1c, &var_5ch);\n            var_40h._0_2_ = 0;\n            fcn.00404580(0x41b838, 0xbf, 4, 0x14, &var_3ch);\n            var_28h._0_2_ = 0;\n            iVar5 = 0;\n            var_1ch = &var_5ch;\n            var_18h = &var_3ch;\n            do {\n                puVar8 = &var_80h;\n                uVar7 = 0;\n                uVar3 = fcn.00404776(&var_288h, (&var_1ch)[iVar5]);\n                iVar4 = (**0x41b708)(uVar3, uVar7, puVar8);\n                if ((iVar4 != 0) && (iVar4 = (**0x41b780)(&var_6ch, &var_24h),  -1 < iVar4)) {\n                    uVar6 = 0;\n                }\n                iVar5 = iVar5 + 1;\n                *(&var_288h + iVar2 * 2) = 0;\n            } while (iVar5 < 2);\n            uVar1 = fcn.00403dd8();\n            if (uVar1 < 0x502) {\n                return uVar6;\n            }\n            (**0x41b7c0)(var_14h);\n            return uVar6;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 776
    },
    "00401c12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401c12(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_14h;\n    uint var_158h;\n    uint var_34h;\n    uint var_30h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00404580(0x41b040, 0x2b9, 0xc, 0x1c, &var_30h);\n    var_14h._0_2_ = 0;\n    fcn.00404580(0x41b040, 0x214, 8, 8, &var_10h);\n    var_8h._0_2_ = 0;\n    iVar1 = fcn.00403f5b(0x80000002, &var_30h, &var_10h, &var_4h, arg_8h);\n    if (((iVar1 == 0) && (iVar1 = fcn.00403f5b(0x80000001, &var_30h, &var_10h, &var_4h, arg_8h),  iVar1 == 0)) ||\n       (var_4h != 3)) {\n        iVar1 = fcn.0040352c(0x20000);\n        if (iVar1 != 0) {\n            fcn.00404580(0x41b040, 0x36e, 6, 0x124, &var_158h);\n            var_34h._0_2_ = 0;\n            (**0x41b688)(iVar1, 0x20000, &var_158h, 0x100, *0x41c290, *0x41c294, *0x41c2ac, *0x41c2b0, *0x41c2b4, \n                         *0x41c2b8, *0x41c2bc, *0x41c2c0, *0x41c2c4, *0x41c2c8, *0x41c2cc, *0x41c318, *0x41c2d0);\n            arg_14h = arg_8h;\n            iVar2 = fcn.004048e3(iVar1);\n            iVar2 = fcn.004051c3(str.6I0, iVar1, iVar2 * 2, arg_14h);\n            fcn.00403579(iVar1);\n            if (iVar2 != 0) {\n                iVar1 = fcn.00403fd9(0x80000002, &var_30h, &var_10h, 3, iVar2, *arg_8h);\n                if (iVar1 != 0) {\n                    return iVar2;\n                }\n                fcn.00403fd9(0x80000001, &var_30h, &var_10h, 3, iVar2, *arg_8h);\n                return iVar2;\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 727
    },
    "004020af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004020af(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t arg_ch_00;\n    uint uVar2;\n    uint var_88h;\n    uint var_68h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_1eh;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00404580(0x41b040, 0x2b9, 0xc, 0x1c, &var_48h);\n    var_2ch._0_2_ = 0;\n    fcn.00404580(0x41b040, 0x2ea, 5, 0xc, &var_58h);\n    var_4ch._0_2_ = 0;\n    fcn.00404580(0x41b040, 0x15b, 0xc, 0xc, &var_68h);\n    var_5ch._0_2_ = 0;\n    fcn.00404580(0x41b040, 0x1d1, 0xc, 10, &var_28h);\n    var_1eh._0_2_ = 0;\n    iVar1 = fcn.00403f5b(0x80000002, &var_48h, &var_58h, &var_10h, &var_ch);\n    if (iVar1 == 0) {\n        unique0x100006fb = iVar1;\n        iVar1 = fcn.00403f5b(0x80000001, &var_48h, &var_58h, &var_10h, &var_ch);\n    }\n    unique0x100006ff = iVar1;\n    arg_ch = fcn.00403f5b(0x80000002, &var_48h, &var_68h, &var_14h, &var_4h);\n    if (arg_ch == 0) {\n        arg_ch = fcn.00403f5b(0x80000001, &var_48h, &var_68h, &var_14h, &var_4h);\n    }\n    arg_ch_00 = fcn.00403f5b(0x80000002, &var_48h, &var_28h, &var_18h, &var_8h);\n    if (arg_ch_00 == 0) {\n        arg_ch_00 = fcn.00403f5b(0x80000001, &var_48h, &var_28h, &var_18h, &var_8h);\n    }\n    if ((((((iVar1 == 0) || (var_ch != 0x20)) || (var_10h != 3)) || ((arg_ch == 0 || (var_4h != 0x58)))) ||\n        ((var_14h != 3 || ((arg_ch_00 == 0 || (var_8h != 0x58)))))) || (var_18h != 3)) {\n        fcn.00404e00(&var_88h, 0x41c1c0);\n        var_ch = 0x20;\n        arg_ch = fcn.004051c3(0x41c1a0, &var_88h, 0x20, &var_4h);\n        arg_ch_00 = fcn.004051c3(0x41b020, &var_88h, 0x20, &var_8h);\n        fcn.004051ae(&var_88h, 0x20);\n        if ((arg_ch == 0) || (arg_ch_00 == 0)) {\n            return 0;\n        }\n        fcn.0040358e(0x41c1e0, arg_ch, var_4h);\n        fcn.0040358e(0x41c238, arg_ch_00, var_8h);\n        iVar1 = fcn.00403fd9(0x80000002, &var_48h, &var_58h, 3, 0x41c1c0, var_ch);\n        if (iVar1 == 0) {\n            fcn.00403fd9(0x80000001, &var_48h, &var_58h, 3, 0x41c1c0, var_ch);\n        }\n        iVar1 = fcn.00403fd9(0x80000002, &var_48h, &var_68h, 3, 0x41c1e0, var_4h);\n        if (iVar1 == 0) {\n            fcn.00403fd9(0x80000001, &var_48h, &var_68h, 3, 0x41c1e0, var_4h);\n        }\n        iVar1 = fcn.00403fd9(0x80000002, &var_48h, &var_28h, 3, 0x41c238, var_8h);\n        if (iVar1 == 0) {\n            fcn.00403fd9(0x80000001, &var_48h, &var_28h, 3, 0x41c238, var_8h);\n        }\n    }\n    else {\n        fcn.0040358e(0x41c1c0, iVar1, 0x20);\n        fcn.0040358e(0x41c1e0, arg_ch, 0x58);\n        fcn.0040358e(0x41c238, arg_ch_00, 0x58);\n    }\n    if (stack0xffffffe0 != 0) {\n        fcn.00403579(stack0xffffffe0);\n    }\n    fcn.00403579(arg_ch);\n    fcn.00403579(arg_ch_00);\n    uVar2 = fcn.004044dd(0x41c1e0, var_4h, 0);\n    return uVar2;\n}\n",
        "token_count": 1441
    },
    "00403622": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403622(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_18h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_8h;\n    do {\n        iVar2 = var_4h + -0x7ffffffe;\n        if (iVar2 == 0) {\n            puVar1 = cpuid_basic_info(0);\n        }\n        else if (iVar2 == 1) {\n            puVar1 = cpuid_Version_info(1);\n        }\n        else if (iVar2 == 2) {\n            puVar1 = cpuid_cache_tlb_info(2);\n        }\n        else if (iVar2 == 3) {\n            puVar1 = cpuid_serial_info(3);\n        }\n        else if (iVar2 == 4) {\n            puVar1 = cpuid_Deterministic_Cache_Parameters_info(4);\n        }\n        else if (iVar2 == 5) {\n            puVar1 = cpuid_MONITOR_MWAIT_Features_info(5);\n        }\n        else if (iVar2 == 6) {\n            puVar1 = cpuid_Thermal_Power_Management_info(6);\n        }\n        else if (iVar2 == 7) {\n            puVar1 = cpuid_Extended_Feature_Enumeration_info(7);\n        }\n        else if (iVar2 == 9) {\n            puVar1 = cpuid_Direct_Cache_Access_info(9);\n        }\n        else if (iVar2 == 10) {\n            puVar1 = cpuid_Architectural_Performance_Monitoring_info(10);\n        }\n        else if (iVar2 == 0xb) {\n            puVar1 = cpuid_Extended_Topology_info(0xb);\n        }\n        else if (iVar2 == 0xd) {\n            puVar1 = cpuid_Processor_Extended_States_info(0xd);\n        }\n        else if (iVar2 == 0xf) {\n            puVar1 = cpuid_Quality_of_Service_info(0xf);\n        }\n        else if (iVar2 == -0x7ffffffe) {\n            puVar1 = cpuid_brand_part1_info(0x80000002);\n        }\n        else if (iVar2 == -0x7ffffffd) {\n            puVar1 = cpuid_brand_part2_info(0x80000003);\n        }\n        else if (iVar2 == -0x7ffffffc) {\n            puVar1 = cpuid_brand_part3_info(0x80000004);\n        }\n        else {\n            puVar1 = cpuid(iVar2);\n        }\n        uVar5 = puVar1[1];\n        uVar4 = puVar1[2];\n        uVar3 = puVar1[3];\n        var_4h = var_4h + 1;\n        *var_8h = *puVar1;\n        var_8h[1] = uVar5;\n        var_8h[2] = uVar3;\n        var_8h[3] = uVar4;\n        var_8h = var_8h + 4;\n    } while (var_4h < 3);\n    return arg_8h;\n}\n",
        "token_count": 745
    },
    "00404307": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00404307(void)\n\n{\n    uint16_t uVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    ushort var_6h;\n    uint var_4h;\n    \n    arg_8h = (**0x41b78c)();\n    uVar1 = fcn.00403dd8();\n    if (0x5ff < uVar1) {\n        iVar2 = fcn.0040384e(arg_8h);\n        if (iVar2 == 3) {\n            uVar3 = fcn.00403956(arg_8h);\n            if (uVar3 < 0x3000) {\n                fcn.0040407c();\n                iVar2 = fcn.00403a29(0, &var_4h);\n                if (iVar2 == 0) {\n                    (**0x41b690)(0);\n                }\n                fcn.00404580(0x41b838, 0x5e7, 6, 10, &var_10h);\n                var_4ch = 0x3c;\n                var_48h = 0;\n                var_6h = 0;\n                var_44h = (**0x41b6d8)();\n                var_40h = &var_10h;\n                var_38h = 0;\n                var_34h = 0;\n                var_30h = 1;\n                var_2ch = 0;\n                var_28h = 0;\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                var_18h = 0;\n                var_14h = 0;\n                var_3ch = iVar2;\n                do {\n                    iVar4 = (**0x41b654)(&var_4ch);\n                } while (iVar4 == 0);\n                fcn.00403579(iVar2);\n                (**0x41b690)(0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "00402c2f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c2f(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t arg_8h_01;\n    bool bVar2;\n    uint var_3ch;\n    uint32_t var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = 0;\n    arg_8h_01 = 0;\n    var_8h = 0;\n    var_ch = 0;\n    (**0x41b65c)(&var_3ch);\n    arg_8h_00 = (**0x41b6a8)(arg_8h, 0xc0000000, 1, 0, 3, 0, 0);\n    var_18h = arg_8h_00;\n    if (arg_8h_00 != -1) {\n        var_10h = arg_ch;\n        var_14h = arg_10h;\n        arg_8h_00 = (**0x41b76c)(arg_8h_00, 0, 4, 0, 0, 0);\n        if (arg_8h_00 == 0) goto code_r0x00402d23;\n        if (-1 < arg_10h) {\n            if (arg_10h < 1) goto code_r0x00402d01;\n            do {\n                do {\n                    var_4h = var_20h;\n                    if ((arg_10h < 1) && ((arg_10h < 0 || (arg_ch < var_20h)))) {\n                        var_4h = arg_ch;\n                    }\n                    arg_8h_01 = (**0x41b784)(arg_8h_00, 0xf001f, var_ch, var_8h, var_4h);\n                    if (arg_8h_01 == 0) goto code_r0x00402d18;\n                    fcn.00404fd3(arg_8h_01, var_4h);\n                    (**0x41b670)(arg_8h_01);\n                    bVar2 = CARRY4(var_8h, var_4h);\n                    var_8h = var_8h + var_4h;\n                    var_ch = var_ch + bVar2;\n                    arg_ch = var_10h - var_4h;\n                    arg_10h = var_14h - (var_10h < var_4h);\n                    var_14h = arg_10h;\n                    var_10h = arg_ch;\n                } while (0 < arg_10h);\n                if (arg_10h < 0) break;\ncode_r0x00402d01:\n            } while (arg_ch != 0);\n        }\n        uVar1 = 1;\n        if (arg_8h_01 != 0) {\n            (**0x41b670)(arg_8h_01);\n        }\n    }\ncode_r0x00402d18:\n    if (arg_8h_00 != 0) {\n        fcn.0040360e(arg_8h_00);\n    }\ncode_r0x00402d23:\n    if (var_18h != 0) {\n        fcn.0040360e(var_18h);\n    }\n    (**0x41b6a0)(arg_8h);\n    return uVar1;\n}\n",
        "token_count": 813
    },
    "00403004": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403004(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int16_t var_1ch;\n    uint var_1ah;\n    int32_t var_14h;\n    uint var_eh;\n    int32_t var_ah;\n    uint var_4h;\n    \n    iVar5 = 0x18;\n    iVar2 = (**0x41b79c)(arg_8h, 0x18, &var_2ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    uVar1 = var_1ah * var_1ch;\n    iVar2 = 1;\n    if ((((uVar1 != 1) && (iVar2 = 4,  4 < uVar1)) && (iVar2 = 8,  8 < uVar1)) && (iVar2 = 0x10,  0x10 < uVar1)) {\n        if (uVar1 < 0x19) {\n            iVar4 = 0x28;\n            goto code_r0x00403070;\n        }\n        iVar2 = 0x20;\n    }\n    iVar4 = (1 << (iVar2 & 0x1f)) * 4 + 0x28;\n    iVar5 = iVar2;\ncode_r0x00403070:\n    piVar3 = (**0x41b6b0)(0x40, iVar4);\n    *piVar3 = 0x28;\n    piVar3[1] = var_28h;\n    piVar3[2] = var_24h;\n    *(piVar3 + 3) = var_1ch;\n    *(piVar3 + 0xe) = var_1ah;\n    if (iVar5 < 0x18) {\n        piVar3[8] = 1 << (iVar5 & 0x1f);\n    }\n    piVar3[4] = 0;\n    piVar3[9] = 0;\n    iVar5 = (piVar3[1] + 7 + (piVar3[1] + 7 >> 0x1f & 7U) >> 3) * iVar5 * piVar3[2];\n    piVar3[5] = iVar5;\n    iVar5 = (**0x41b64c)(0, iVar5);\n    if (((iVar5 != 0) && (iVar2 = (**0x41b7a4)(arg_ch, arg_8h, 0, *(piVar3 + 2), iVar5, piVar3, 0),  iVar2 != 0)) &&\n       (iVar2 = (**0x41b6a8)(arg_10h, 0xc0000000, 0, 0, 2, 0x80, 0),  iVar2 != -1)) {\n        var_14h._0_2_ = 0x4d42;\n        *NULL = *piVar3 + piVar3[5] + piVar3[8] * 4 + 0xe;\n        var_eh = 0;\n        var_ah = *piVar3 + piVar3[8] * 4 + 0xe;\n        iVar4 = (**0x41b6bc)(iVar2, &var_14h, 0xe, &var_4h, 0);\n        if (((iVar4 == 0) || (iVar4 = (**0x41b6bc)(iVar2, piVar3, piVar3[8] * 4 + 0x28, &var_4h, 0),  iVar4 == 0)) ||\n           (iVar4 = (**0x41b6bc)(iVar2, iVar5, piVar3[5], &var_4h, 0),  iVar4 == 0)) {\n            fcn.0040360e(iVar2);\n        }\n        else {\n            fcn.0040360e(iVar2);\n            (**0x41b658)(iVar5);\n        }\n    }\n    return;\n}\n",
        "token_count": 970
    },
    "00403e9c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403e9c(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar1 = arg_8h;\n    if ((arg_8h <= arg_ch) && (iVar2 = fcn.00404fd3(&arg_8h, 4),  iVar2 != 0)) {\n        uVar3 = (arg_ch - uVar1) + 1;\n        if ((uVar1 == 0) && (arg_ch == 0xffffffff)) {\n            uVar3 = arg_ch - uVar1;\n        }\n        return uVar1 + arg_8h % uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "00404238": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00404238(char *arg_8h)\n\n{\n    ulong uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t arg_8h_00;\n    uint32_t uVar5;\n    uint32_t arg_8h_01;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    uint var_10h;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar10 = 0;\n    do {\n        uVar1 = rdtsc();\n        iVar8 = uVar1 >> 0x20;\n        uVar4 = uVar1;\n        fcn.004042e2();\n        uVar1 = rdtsc();\n        arg_8h_00 = uVar1 - uVar4;\n        iVar7 = ((uVar1 >> 0x20) - iVar8) - (uVar1 < uVar4);\n        fcn.004042e2();\n        uVar1 = rdtsc();\n        uVar5 = uVar1 - arg_8h_00;\n        arg_8h_01 = uVar5 - uVar4;\n        if ((iVar7 == 0) && ((((uVar1 >> 0x20) - iVar7) - (uVar1 < arg_8h_00)) - iVar8 == uVar5 < uVar4)) {\n            uVar9 = -(arg_8h_00 < arg_8h_01) >> 0x1f;\n            uVar6 = -(arg_8h_00 < arg_8h_01) ^ uVar9;\n            uVar11 = arg_8h_00 - arg_8h_01 ^ uVar9;\n            uVar4 = uVar11 < uVar9;\n            uVar5 = uVar6 - uVar9;\n            bVar12 = uVar5 - uVar4 < 0;\n            if ((!bVar12) &&\n               ((uVar5 != uVar4 && (SBORROW4(uVar6, uVar9) != SBORROW4(uVar5, uVar4)) == bVar12 ||\n                (0x3f < uVar11 - uVar9)))) {\n                cVar2 = fcn.0040416c(arg_8h_00);\n                cVar3 = fcn.0040416c(arg_8h_01);\n                if (cVar3 != cVar2) {\n                    *arg_8h = cVar2;\n                    return 1;\n                }\n            }\n        }\n        iVar10 = iVar10 + 1;\n    } while (iVar10 < 0x80);\n    return 0;\n}\n",
        "token_count": 648
    },
    "004058c5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004058c5(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    \n    *(arg_8h + 0xc) = 0;\n    *(arg_8h + 8) = 0;\n    iVar1 = (**0x41b6a8)(arg_ch, arg_18h, arg_1ch, 0, arg_20h, 0x48000000, 0);\n    *(arg_8h + 0x14) = iVar1;\n    if (iVar1 != -1) {\n        iVar1 = fcn.00404895(arg_ch);\n        *(arg_8h + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(arg_8h + 0x20) = arg_10h;\n            *(arg_8h + 0x24) = arg_14h;\n            return 1;\n        }\n        fcn.0040360e(*(arg_8h + 0x14));\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "00405b61": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405b61(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**0x41b6a8)(arg_8h, arg_ch, arg_10h, 0, arg_14h, arg_18h, 0);\n    if (iVar1 == -1) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 117
    },
    "004032be": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.004032be(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = (**0x41b704)(0);\n    if (iVar1 != 0) {\n        var_1ch = iVar1;\n        iVar2 = (**0x41b754)(iVar1);\n        var_10h = iVar2;\n        if (iVar2 != 0) {\n            iVar3 = (**0x41b7b0)(iVar1, 8);\n            var_ch = 10;\n            var_18h = iVar3;\n            var_4h = (**0x41b7b0)(iVar1, 10);\n            var_14h = (**0x41b788)(iVar1, iVar3, var_4h);\n            iVar9 = iVar2;\n            if (var_14h != 0) {\n                (**0x41b77c)(iVar2, var_14h);\n                uVar4 = (**0x41b7b0)(iVar1, 0x5a);\n                var_20h = (**0x41b6ac)(0x12, uVar4, 0x48);\n                var_20h = -var_20h;\n                var_24h = (**0x41b648)(var_20h, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0);\n                if (var_24h != 0) {\n                    (**0x41b77c)(iVar2, var_24h);\n                    (**0x41b794)(iVar2, 1);\n                    (**0x41b6d0)(iVar2, 0xffffff);\n                    uVar4 = (**0x41b6e8)(2);\n                    var_34h = 0;\n                    var_30h = 0;\n                    var_28h = var_4h;\n                    var_2ch = iVar3;\n                    (**0x41b63c)(iVar2, &var_34h, uVar4);\n                    if ((0 < (var_4h * iVar3) / var_ch) && (var_8h = 0,  iVar8 = var_4h,  0 < iVar3)) {\n                        do {\n                            var_ch = 0;\n                            if (0 < iVar8) {\n                                do {\n                                    uVar5 = fcn.00403e9c(0, 0xffffffff);\n                                    uVar6 = fcn.00403e9c(0, 0xffffffff);\n                                    uVar7 = fcn.00403e9c(0, 0xffffffff);\n                                    iVar1 = var_ch;\n                                    (**0x41b734)(iVar2, var_8h, var_ch, \n                                                 uVar7 % 0x1e | (uVar6 % 0x1e | uVar5 % 200 << 8) << 8);\n                                    var_ch = iVar1 + 1;\n                                    iVar8 = var_4h;\n                                    iVar3 = var_18h;\n                                } while (var_ch < var_4h);\n                            }\n                            var_8h = var_8h + 1;\n                            iVar1 = var_1ch;\n                            iVar9 = var_10h;\n                        } while (var_8h < iVar3);\n                    }\n                    var_30h = (var_28h / 2 - var_4h / 2) - var_20h;\n                    (**0x41b774)(iVar9, *0x41c2a4, 0xffffffff, &var_34h, 0x11);\n                    iVar2 = fcn.004031b9();\n                    if (iVar2 != 0) {\n                        fcn.00403004(var_14h, iVar1, iVar2);\n                        (**0x41b668)(0x14, 0, iVar2, 3);\n                        fcn.00403579(iVar2);\n                    }\n                    (**0x41b650)(var_24h);\n                }\n                (**0x41b650)(var_14h);\n            }\n            (**0x41b7f8)(iVar9);\n        }\n        (**0x41b644)(0, iVar1);\n    }\n    return;\n}\n",
        "token_count": 1106
    },
    "00403dd8": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nushort fcn.00403dd8(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return CONCAT11(*(*(in_FS_OFFSET + 0x30) + 0xa4), *(*(in_FS_OFFSET + 0x30) + 0xa8));\n}\n",
        "token_count": 60
    },
    "00407c77": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c77(uint32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    unkuint3 Var4;\n    \n    uVar3 = *(arg_ch + 2);\n    uVar1 = *arg_ch;\n    uVar2 = arg_ch[1];\n    arg_8h[1] = 0;\n    *arg_8h = (uVar3 & 0x3ff) << 0x10 | uVar1 | uVar2 << 8;\n    Var4 = *(arg_ch + 4);\n    uVar1 = arg_ch[3];\n    arg_8h[3] = 0;\n    arg_8h[2] = (Var4 & 0x7ffff) << 6 | uVar1 >> 2;\n    arg_8h[4] = (*(arg_ch + 7) & 0x1fffff) << 5 | arg_ch[6] >> 3;\n    arg_8h[5] = 0;\n    Var4 = *(arg_ch + 10);\n    uVar1 = arg_ch[9];\n    arg_8h[7] = 0;\n    arg_8h[6] = (Var4 & 0x3fffff) << 3 | uVar1 >> 5;\n    Var4 = *(arg_ch + 0xd);\n    uVar1 = arg_ch[0xc];\n    arg_8h[9] = 0;\n    arg_8h[8] = Var4 << 2 | uVar1 >> 6;\n    arg_8h[10] = (*(arg_ch + 0x12) & 0x1ff) << 0x10 | arg_ch[0x10] | arg_ch[0x11] << 8;\n    arg_8h[0xb] = 0;\n    Var4 = *(arg_ch + 0x14);\n    uVar1 = arg_ch[0x13];\n    arg_8h[0xd] = 0;\n    arg_8h[0xc] = (Var4 & 0x7ffff) << 7 | uVar1 >> 1;\n    Var4 = *(arg_ch + 0x17);\n    uVar1 = arg_ch[0x16];\n    arg_8h[0xf] = 0;\n    arg_8h[0xe] = (Var4 & 0xfffff) << 5 | uVar1 >> 3;\n    arg_8h[0x10] = (*(arg_ch + 0x1a) & 0x3fffff) << 4 | arg_ch[0x19] >> 4;\n    arg_8h[0x11] = 0;\n    Var4 = *(arg_ch + 0x1d);\n    uVar1 = arg_ch[0x1c];\n    arg_8h[0x13] = 0;\n    arg_8h[0x12] = (Var4 & 0x7fffff) << 2 | uVar1 >> 6;\n    return;\n}\n",
        "token_count": 707
    },
    "00408d1b": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408d1b(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = ~(arg_8h ^ arg_ch) & ~(arg_8h ^ arg_ch) << 0x10;\n    uVar1 = uVar1 & uVar1 << 8;\n    uVar1 = uVar1 & uVar1 << 4;\n    uVar1 = uVar1 & uVar1 << 2;\n    return (uVar1 * 2 & uVar1) >> 0x1f;\n}\n",
        "token_count": 138
    },
    "00408ed0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408ed0(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = 0x41a698;\n    do {\n        uVar9 = arg_8h[4] ^ arg_8h[0xe] ^ arg_8h[0x18] ^ arg_8h[0x22] ^ arg_8h[0x2c];\n        uVar2 = *arg_8h ^ arg_8h[10] ^ arg_8h[0x14] ^ arg_8h[0x1e] ^ arg_8h[0x28];\n        uVar4 = arg_8h[1] ^ arg_8h[0xb] ^ arg_8h[0x15] ^ arg_8h[0x1f] ^ arg_8h[0x29];\n        uVar7 = arg_8h[5] ^ arg_8h[0xf] ^ arg_8h[0x19] ^ arg_8h[0x23] ^ arg_8h[0x2d];\n        uVar13 = arg_8h[8] ^ arg_8h[0x12] ^ arg_8h[0x1c] ^ arg_8h[0x26] ^ arg_8h[0x30];\n        uVar10 = arg_8h[6] ^ arg_8h[0x10] ^ arg_8h[0x1a] ^ arg_8h[0x24] ^ arg_8h[0x2e];\n        uVar3 = arg_8h[2] ^ arg_8h[0xc] ^ arg_8h[0x16] ^ arg_8h[0x20] ^ arg_8h[0x2a];\n        uVar5 = arg_8h[3] ^ arg_8h[0xd] ^ arg_8h[0x17] ^ arg_8h[0x21] ^ arg_8h[0x2b];\n        uVar8 = arg_8h[7] ^ arg_8h[0x11] ^ arg_8h[0x1b] ^ arg_8h[0x25] ^ arg_8h[0x2f];\n        uVar11 = arg_8h[9] ^ arg_8h[0x13] ^ arg_8h[0x1d] ^ arg_8h[0x27] ^ arg_8h[0x31];\n        uVar6 = uVar5 << 1 | uVar3 >> 0x1f;\n        uVar12 = uVar5 >> 0x1f | uVar3 * 2;\n        *arg_8h = uVar12 ^ *arg_8h ^ uVar13;\n        arg_8h[1] = uVar6 ^ arg_8h[1] ^ uVar11;\n        arg_8h[10] = arg_8h[10] ^ uVar12 ^ uVar13;\n        arg_8h[0xb] = arg_8h[0xb] ^ uVar6 ^ uVar11;\n        arg_8h[0x14] = uVar12 ^ arg_8h[0x14] ^ uVar13;\n        arg_8h[0x15] = uVar6 ^ arg_8h[0x15] ^ uVar11;\n        arg_8h[0x1e] = uVar12 ^ arg_8h[0x1e] ^ uVar13;\n        arg_8h[0x1f] = uVar6 ^ arg_8h[0x1f] ^ uVar11;\n        arg_8h[0x28] = uVar12 ^ arg_8h[0x28] ^ uVar13;\n        arg_8h[0x29] = uVar6 ^ arg_8h[0x29] ^ uVar11;\n        uVar6 = uVar7 << 1 | uVar9 >> 0x1f;\n        uVar12 = uVar7 >> 0x1f | uVar9 * 2;\n        arg_8h[2] = uVar12 ^ arg_8h[2] ^ uVar2;\n        arg_8h[3] = uVar6 ^ arg_8h[3] ^ uVar4;\n        arg_8h[0xc] = uVar12 ^ arg_8h[0xc] ^ uVar2;\n        arg_8h[0xd] = uVar6 ^ arg_8h[0xd] ^ uVar4;\n        arg_8h[0x16] = arg_8h[0x16] ^ uVar12 ^ uVar2;\n        arg_8h[0x17] = arg_8h[0x17] ^ uVar6 ^ uVar4;\n        arg_8h[0x20] = arg_8h[0x20] ^ uVar12 ^ uVar2;\n        arg_8h[0x21] = arg_8h[0x21] ^ uVar6 ^ uVar4;\n        arg_8h[0x2a] = arg_8h[0x2a] ^ uVar12 ^ uVar2;\n        arg_8h[0x2b] = arg_8h[0x2b] ^ uVar6 ^ uVar4;\n        uVar6 = uVar8 << 1 | uVar10 >> 0x1f;\n        uVar12 = uVar8 >> 0x1f | uVar10 * 2;\n        arg_8h[4] = uVar12 ^ arg_8h[4] ^ uVar3;\n        arg_8h[5] = uVar6 ^ arg_8h[5] ^ uVar5;\n        arg_8h[0xe] = uVar12 ^ arg_8h[0xe] ^ uVar3;\n        arg_8h[0xf] = uVar6 ^ arg_8h[0xf] ^ uVar5;\n        arg_8h[0x18] = uVar12 ^ arg_8h[0x18] ^ uVar3;\n        arg_8h[0x19] = uVar6 ^ arg_8h[0x19] ^ uVar5;\n        arg_8h[0x22] = uVar12 ^ arg_8h[0x22] ^ uVar3;\n        arg_8h[0x23] = uVar6 ^ arg_8h[0x23] ^ uVar5;\n        arg_8h[0x2c] = uVar12 ^ arg_8h[0x2c] ^ uVar3;\n        arg_8h[0x2d] = uVar6 ^ arg_8h[0x2d] ^ uVar5;\n        uVar3 = uVar11 << 1 | uVar13 >> 0x1f;\n        uVar5 = uVar11 >> 0x1f | uVar13 * 2;\n        arg_8h[6] = arg_8h[6] ^ uVar5 ^ uVar9;\n        arg_8h[7] = arg_8h[7] ^ uVar3 ^ uVar7;\n        arg_8h[0x10] = uVar5 ^ arg_8h[0x10] ^ uVar9;\n        arg_8h[0x11] = uVar3 ^ arg_8h[0x11] ^ uVar7;\n        arg_8h[0x1a] = uVar5 ^ arg_8h[0x1a] ^ uVar9;\n        arg_8h[0x1b] = uVar3 ^ arg_8h[0x1b] ^ uVar7;\n        arg_8h[0x24] = uVar5 ^ arg_8h[0x24] ^ uVar9;\n        arg_8h[0x25] = uVar3 ^ arg_8h[0x25] ^ uVar7;\n        arg_8h[0x2e] = uVar5 ^ arg_8h[0x2e] ^ uVar9;\n        arg_8h[0x2f] = uVar3 ^ arg_8h[0x2f] ^ uVar7;\n        uVar3 = uVar4 << 1 | uVar2 >> 0x1f;\n        uVar2 = uVar4 >> 0x1f | uVar2 * 2;\n        arg_8h[8] = uVar2 ^ arg_8h[8] ^ uVar10;\n        arg_8h[9] = uVar3 ^ arg_8h[9] ^ uVar8;\n        arg_8h[0x12] = arg_8h[0x12] ^ uVar2 ^ uVar10;\n        arg_8h[0x13] = arg_8h[0x13] ^ uVar3 ^ uVar8;\n        arg_8h[0x1c] = uVar2 ^ arg_8h[0x1c] ^ uVar10;\n        arg_8h[0x1d] = uVar3 ^ arg_8h[0x1d] ^ uVar8;\n        arg_8h[0x26] = uVar2 ^ arg_8h[0x26] ^ uVar10;\n        arg_8h[0x27] = uVar3 ^ arg_8h[0x27] ^ uVar8;\n        arg_8h[0x30] = uVar2 ^ arg_8h[0x30] ^ uVar10;\n        arg_8h[0x31] = uVar3 ^ arg_8h[0x31] ^ uVar8;\n        uVar2 = arg_8h[0x14];\n        uVar3 = arg_8h[0x15];\n        arg_8h[0x14] = arg_8h[3] >> 0x1f | arg_8h[2] * 2;\n        arg_8h[0x15] = arg_8h[3] << 1 | arg_8h[2] >> 0x1f;\n        uVar4 = arg_8h[0xe];\n        uVar5 = arg_8h[0xf];\n        arg_8h[0xf] = uVar3 << 3 | uVar2 >> 0x1d;\n        arg_8h[0xe] = uVar3 >> 0x1d | uVar2 << 3;\n        uVar2 = arg_8h[0x16];\n        uVar3 = arg_8h[0x17];\n        arg_8h[0x16] = uVar5 >> 0x1a | uVar4 << 6;\n        arg_8h[0x17] = uVar5 << 6 | uVar4 >> 0x1a;\n        uVar4 = arg_8h[0x22];\n        uVar5 = arg_8h[0x23];\n        arg_8h[0x22] = uVar3 >> 0x16 | uVar2 << 10;\n        arg_8h[0x23] = uVar3 << 10 | uVar2 >> 0x16;\n        uVar2 = arg_8h[0x24];\n        uVar3 = arg_8h[0x25];\n        arg_8h[0x24] = uVar5 >> 0x11 | uVar4 << 0xf;\n        arg_8h[0x25] = uVar5 << 0xf | uVar4 >> 0x11;\n        uVar4 = arg_8h[6];\n        uVar5 = arg_8h[7];\n        arg_8h[6] = uVar3 >> 0xb | uVar2 << 0x15;\n        arg_8h[7] = uVar3 << 0x15 | uVar2 >> 0xb;\n        uVar2 = arg_8h[10];\n        uVar3 = arg_8h[0xb];\n        arg_8h[10] = uVar5 >> 4 | uVar4 << 0x1c;\n        arg_8h[0xb] = uVar5 << 0x1c | uVar4 >> 4;\n        uVar4 = arg_8h[0x20];\n        uVar5 = arg_8h[0x21];\n        arg_8h[0x21] = uVar2 << 4 | uVar3 >> 0x1c;\n        arg_8h[0x20] = uVar2 >> 0x1c | uVar3 << 4;\n        uVar2 = arg_8h[0x10];\n        uVar3 = arg_8h[0x11];\n        arg_8h[0x11] = uVar4 << 0xd | uVar5 >> 0x13;\n        arg_8h[0x10] = uVar4 >> 0x13 | uVar5 << 0xd;\n        uVar4 = arg_8h[0x2a];\n        uVar5 = arg_8h[0x2b];\n        arg_8h[0x2b] = uVar2 << 0x17 | uVar3 >> 9;\n        arg_8h[0x2a] = uVar2 >> 9 | uVar3 << 0x17;\n        uVar2 = arg_8h[0x30];\n        uVar3 = arg_8h[0x31];\n        arg_8h[0x30] = uVar5 >> 0x1e | uVar4 << 2;\n        arg_8h[0x31] = uVar5 << 2 | uVar4 >> 0x1e;\n        uVar4 = arg_8h[8];\n        uVar5 = arg_8h[9];\n        arg_8h[8] = uVar3 >> 0x12 | uVar2 << 0xe;\n        arg_8h[9] = uVar3 << 0xe | uVar2 >> 0x12;\n        uVar2 = arg_8h[0x1e];\n        uVar3 = arg_8h[0x1f];\n        arg_8h[0x1e] = uVar5 >> 5 | uVar4 << 0x1b;\n        arg_8h[0x1f] = uVar5 << 0x1b | uVar4 >> 5;\n        uVar4 = arg_8h[0x2e];\n        uVar5 = arg_8h[0x2f];\n        arg_8h[0x2f] = uVar2 << 9 | uVar3 >> 0x17;\n        arg_8h[0x2e] = uVar2 >> 0x17 | uVar3 << 9;\n        uVar2 = arg_8h[0x26];\n        uVar3 = arg_8h[0x27];\n        arg_8h[0x27] = uVar4 << 0x18 | uVar5 >> 8;\n        arg_8h[0x26] = uVar4 >> 8 | uVar5 << 0x18;\n        uVar4 = arg_8h[0x1a];\n        uVar5 = arg_8h[0x1b];\n        arg_8h[0x1a] = uVar3 >> 0x18 | uVar2 << 8;\n        arg_8h[0x1b] = uVar3 << 8 | uVar2 >> 0x18;\n        uVar2 = arg_8h[0x18];\n        uVar3 = arg_8h[0x19];\n        arg_8h[0x18] = uVar5 >> 7 | uVar4 << 0x19;\n        arg_8h[0x19] = uVar5 << 0x19 | uVar4 >> 7;\n        uVar4 = arg_8h[4];\n        uVar5 = arg_8h[5];\n        arg_8h[5] = uVar2 << 0xb | uVar3 >> 0x15;\n        arg_8h[4] = uVar2 >> 0x15 | uVar3 << 0xb;\n        uVar2 = arg_8h[0x28];\n        uVar3 = arg_8h[0x29];\n        arg_8h[0x28] = uVar4 >> 2 | uVar5 << 0x1e;\n        arg_8h[0x29] = uVar4 << 0x1e | uVar5 >> 2;\n        uVar4 = arg_8h[0x1c];\n        uVar5 = arg_8h[0x1d];\n        arg_8h[0x1c] = uVar3 >> 0xe | uVar2 << 0x12;\n        arg_8h[0x1d] = uVar3 << 0x12 | uVar2 >> 0xe;\n        uVar2 = arg_8h[0x2c];\n        uVar3 = arg_8h[0x2d];\n        arg_8h[0x2c] = uVar4 >> 0x19 | uVar5 << 7;\n        arg_8h[0x2d] = uVar4 << 7 | uVar5 >> 0x19;\n        uVar4 = arg_8h[0x12];\n        uVar5 = arg_8h[0x13];\n        arg_8h[0x13] = uVar2 << 0x1d | uVar3 >> 3;\n        arg_8h[0x12] = uVar2 >> 3 | uVar3 << 0x1d;\n        uVar2 = arg_8h[0xc];\n        uVar3 = arg_8h[0xd];\n        arg_8h[0xc] = uVar5 >> 0xc | uVar4 << 0x14;\n        arg_8h[0xd] = uVar5 << 0x14 | uVar4 >> 0xc;\n        arg_8h[2] = uVar2 >> 0x14 | uVar3 << 0xc;\n        arg_8h[3] = uVar2 << 0xc | uVar3 >> 0x14;\n        uVar2 = *arg_8h;\n        uVar3 = arg_8h[2];\n        uVar4 = arg_8h[6];\n        uVar5 = arg_8h[4];\n        uVar6 = arg_8h[5];\n        uVar7 = arg_8h[1];\n        uVar8 = arg_8h[3];\n        uVar9 = arg_8h[7];\n        uVar10 = arg_8h[8];\n        uVar11 = arg_8h[9];\n        *arg_8h = ~uVar3 & uVar5 ^ uVar2;\n        arg_8h[1] = ~uVar8 & uVar6 ^ uVar7;\n        arg_8h[2] = ~uVar5 & uVar4 ^ uVar3;\n        arg_8h[3] = ~uVar6 & uVar9 ^ uVar8;\n        arg_8h[5] = ~uVar9 & uVar11 ^ uVar6;\n        arg_8h[4] = ~uVar4 & uVar10 ^ uVar5;\n        arg_8h[7] = ~uVar11 & uVar7 ^ uVar9;\n        arg_8h[6] = ~uVar10 & uVar2 ^ uVar4;\n        arg_8h[9] = ~uVar7 & uVar8 ^ uVar11;\n        arg_8h[8] = ~uVar2 & uVar3 ^ uVar10;\n        uVar2 = arg_8h[10];\n        uVar3 = arg_8h[0xc];\n        uVar4 = arg_8h[0x10];\n        uVar5 = arg_8h[0xe];\n        uVar6 = arg_8h[0xf];\n        uVar7 = arg_8h[0xb];\n        uVar8 = arg_8h[0xd];\n        uVar9 = arg_8h[0x11];\n        uVar10 = arg_8h[0x12];\n        uVar11 = arg_8h[0x13];\n        arg_8h[10] = ~uVar3 & uVar5 ^ uVar2;\n        arg_8h[0xb] = ~uVar8 & uVar6 ^ uVar7;\n        arg_8h[0xc] = ~uVar5 & uVar4 ^ uVar3;\n        arg_8h[0xd] = ~uVar6 & uVar9 ^ uVar8;\n        arg_8h[0xf] = ~uVar9 & uVar11 ^ uVar6;\n        arg_8h[0xe] = ~uVar4 & uVar10 ^ uVar5;\n        arg_8h[0x10] = ~uVar10 & uVar2 ^ uVar4;\n        arg_8h[0x11] = ~uVar11 & uVar7 ^ uVar9;\n        arg_8h[0x12] = ~uVar2 & uVar3 ^ uVar10;\n        arg_8h[0x13] = ~uVar7 & uVar8 ^ uVar11;\n        uVar2 = arg_8h[0x14];\n        uVar3 = arg_8h[0x16];\n        uVar4 = arg_8h[0x1a];\n        uVar5 = arg_8h[0x18];\n        uVar6 = arg_8h[0x19];\n        uVar7 = arg_8h[0x15];\n        uVar8 = arg_8h[0x17];\n        uVar9 = arg_8h[0x1b];\n        uVar10 = arg_8h[0x1c];\n        uVar11 = arg_8h[0x1d];\n        arg_8h[0x14] = ~uVar3 & uVar5 ^ uVar2;\n        arg_8h[0x15] = ~uVar8 & uVar6 ^ uVar7;\n        arg_8h[0x16] = ~uVar5 & uVar4 ^ uVar3;\n        arg_8h[0x17] = ~uVar6 & uVar9 ^ uVar8;\n        arg_8h[0x18] = ~uVar4 & uVar10 ^ uVar5;\n        arg_8h[0x19] = ~uVar9 & uVar11 ^ uVar6;\n        arg_8h[0x1a] = ~uVar10 & uVar2 ^ uVar4;\n        arg_8h[0x1b] = ~uVar11 & uVar7 ^ uVar9;\n        arg_8h[0x1c] = ~uVar2 & uVar3 ^ uVar10;\n        arg_8h[0x1d] = ~uVar7 & uVar8 ^ uVar11;\n        uVar2 = arg_8h[0x1e];\n        uVar3 = arg_8h[0x20];\n        uVar4 = arg_8h[0x24];\n        uVar5 = arg_8h[0x22];\n        uVar6 = arg_8h[0x23];\n        uVar7 = arg_8h[0x1f];\n        uVar8 = arg_8h[0x21];\n        uVar9 = arg_8h[0x25];\n        uVar10 = arg_8h[0x26];\n        uVar11 = arg_8h[0x27];\n        arg_8h[0x1e] = ~uVar3 & uVar5 ^ uVar2;\n        arg_8h[0x1f] = ~uVar8 & uVar6 ^ uVar7;\n        arg_8h[0x20] = ~uVar5 & uVar4 ^ uVar3;\n        arg_8h[0x21] = ~uVar6 & uVar9 ^ uVar8;\n        arg_8h[0x22] = ~uVar4 & uVar10 ^ uVar5;\n        arg_8h[0x23] = ~uVar9 & uVar11 ^ uVar6;\n        arg_8h[0x24] = ~uVar10 & uVar2 ^ uVar4;\n        arg_8h[0x25] = ~uVar11 & uVar7 ^ uVar9;\n        arg_8h[0x26] = ~uVar2 & uVar3 ^ uVar10;\n        arg_8h[0x27] = ~uVar7 & uVar8 ^ uVar11;\n        uVar2 = arg_8h[0x28];\n        uVar3 = arg_8h[0x2a];\n        uVar4 = arg_8h[0x2c];\n        uVar5 = arg_8h[0x2e];\n        uVar6 = arg_8h[0x29];\n        uVar7 = arg_8h[0x2d];\n        uVar8 = arg_8h[0x2b];\n        uVar9 = arg_8h[0x2f];\n        uVar10 = arg_8h[0x30];\n        uVar11 = arg_8h[0x31];\n        arg_8h[0x28] = ~uVar3 & uVar4 ^ uVar2;\n        arg_8h[0x29] = ~uVar8 & uVar7 ^ uVar6;\n        arg_8h[0x2a] = ~uVar4 & uVar5 ^ uVar3;\n        arg_8h[0x2b] = ~uVar7 & uVar9 ^ uVar8;\n        arg_8h[0x2c] = ~uVar5 & uVar10 ^ uVar4;\n        arg_8h[0x2d] = ~uVar9 & uVar11 ^ uVar7;\n        arg_8h[0x2e] = ~uVar10 & uVar2 ^ uVar5;\n        arg_8h[0x2f] = ~uVar11 & uVar6 ^ uVar9;\n        arg_8h[0x30] = ~uVar2 & uVar3 ^ uVar10;\n        arg_8h[0x31] = ~uVar6 & uVar8 ^ uVar11;\n        *arg_8h = *arg_8h ^ *var_28h;\n        puVar1 = var_28h + 1;\n        var_28h = var_28h + 2;\n        arg_8h[1] = arg_8h[1] ^ *puVar1;\n    } while (var_28h < 0x41a758);\n    return;\n}\n",
        "token_count": 6300
    },
    "004035b3": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004035b3(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    \n    if (arg_10h != 0) {\n        piVar2 = arg_8h;\n        for (uVar1 = arg_10h >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *piVar2 = arg_ch * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n        for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n            *piVar2 = arg_ch * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 218
    },
    "00403d8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00403d8f(void)\n\n{\n    uint var_24h;\n    \n    (**0x41b6f8)(&var_24h);\n    return var_24h == 9;\n}\n",
        "token_count": 58
    },
    "004079a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004079a6(uchar *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    ulong uVar8;\n    uint arg_ch_00;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    do {\n        (&var_40h)[iVar4] = *(arg_ch + iVar4 * 8);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 10);\n    iVar7 = 2;\n    iVar4 = iVar7;\n    do {\n        uVar6 = 0;\n        do {\n            iVar1 = (&var_40h)[uVar6];\n            if ((uVar6 & 1) == 0) {\n                uVar5 = iVar1 >> 0x1f & iVar1 >> 0x1a;\n                iVar2 = uVar5 * -0x4000000;\n            }\n            else {\n                uVar5 = iVar1 >> 0x1f & iVar1 >> 0x19;\n                iVar2 = uVar5 * -0x2000000;\n            }\n            (&var_3ch)[uVar6] = (&var_3ch)[uVar6] + uVar5;\n            (&var_40h)[uVar6] = iVar2 + iVar1;\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < 9);\n        uVar6 = var_1ch >> 0x1f & var_1ch >> 0x19;\n        var_1ch = var_1ch + uVar6 * -0x2000000;\n        var_40h = var_40h + uVar6 * 0x13;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    uVar6 = var_40h >> 0x1f & var_40h >> 0x1a;\n    var_3ch = var_3ch + uVar6;\n    var_40h = var_40h + uVar6 * -0x4000000;\n    do {\n        uVar6 = 0;\n        do {\n            uVar5 = (&var_40h)[uVar6];\n            if ((uVar6 & 1) == 0) {\n                iVar4 = 0x1a;\n                uVar3 = uVar5 & 0x3ffffff;\n            }\n            else {\n                iVar4 = 0x19;\n                uVar3 = uVar5 & 0x1ffffff;\n            }\n            (&var_3ch)[uVar6] = (&var_3ch)[uVar6] + (uVar5 >> iVar4);\n            (&var_40h)[uVar6] = uVar3;\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < 9);\n        iVar4 = var_1ch >> 0x19;\n        var_1ch = var_1ch & 0x1ffffff;\n        iVar4 = var_40h + iVar4 * 0x13;\n        var_40h = iVar4;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    uVar6 = 1;\n    var_8h = 1;\n    var_4h = 1;\n    do {\n        if ((uVar6 & 1) == 0) {\n            arg_ch_00 = 0x3ffffff;\n        }\n        else {\n            arg_ch_00 = 0x1ffffff;\n        }\n        uVar8 = fcn.00408d1b((&var_40h)[uVar6], arg_ch_00);\n        uVar5 = uVar8 >> 0x20 & uVar8;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 10);\n    var_40h = iVar4 - (uVar5 & 0x3ffffed);\n    do {\n        if ((var_8h & 1) == 0) {\n            uVar6 = uVar5 & 0x3ffffff;\n        }\n        else {\n            uVar6 = uVar5 & 0x1ffffff;\n        }\n        (&var_40h)[var_8h] = (&var_40h)[var_8h] - uVar6;\n        var_8h = var_8h + 1;\n    } while (var_8h < 10);\n    var_34h = var_34h << 5;\n    var_30h = var_30h << 6;\n    var_28h = var_28h * 2;\n    var_24h = var_24h << 3;\n    var_20h = var_20h << 4;\n    iVar4 = var_1ch << 6;\n    arg_8h[1] = var_40h >> 8;\n    arg_8h[2] = var_40h >> 0x10;\n    iVar7 = var_3ch << 2;\n    var_38h = var_38h << 3;\n    arg_8h[4] = iVar7 >> 8;\n    arg_8h[5] = iVar7 >> 0x10;\n    arg_8h[7] = var_38h >> 8;\n    *arg_8h = var_40h;\n    arg_8h[8] = var_38h >> 0x10;\n    arg_8h[3] = var_40h >> 0x18 | iVar7;\n    arg_8h[10] = var_34h >> 8;\n    arg_8h[0xb] = var_34h >> 0x10;\n    arg_8h[6] = iVar7 >> 0x18 | var_38h;\n    arg_8h[0xd] = var_30h >> 8;\n    arg_8h[0xe] = var_30h >> 0x10;\n    arg_8h[0xc] = var_34h >> 0x18 | var_30h;\n    arg_8h[0x11] = var_2ch >> 8;\n    arg_8h[0xf] = var_30h >> 0x18;\n    arg_8h[0x10] = var_2ch;\n    arg_8h[9] = var_38h >> 0x18 | var_34h;\n    arg_8h[0x12] = var_2ch >> 0x10;\n    arg_8h[0x14] = var_28h >> 8;\n    arg_8h[0x15] = var_28h >> 0x10;\n    arg_8h[0x13] = var_2ch >> 0x18 | var_28h;\n    arg_8h[0x17] = var_24h >> 8;\n    arg_8h[0x18] = var_24h >> 0x10;\n    arg_8h[0x16] = var_28h >> 0x18 | var_24h;\n    arg_8h[0x1a] = var_20h >> 8;\n    arg_8h[0x1b] = var_20h >> 0x10;\n    arg_8h[0x19] = var_24h >> 0x18 | var_20h;\n    arg_8h[0x1d] = iVar4 >> 8;\n    arg_8h[0x1c] = var_20h >> 0x18 | iVar4;\n    arg_8h[0x1e] = iVar4 >> 0x10;\n    arg_8h[0x1f] = iVar4 >> 0x18;\n    return;\n}\n",
        "token_count": 1910
    },
    "0040416c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040416c(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_8h;\n    uVar3 = arg_8h >> 0x10;\n    uVar1 = 0;\n    var_8h = 0x40;\n    do {\n        uVar1 = uVar1 + 0x9e3779b9;\n        uVar2 = uVar2 + (uVar1 + uVar3 ^ uVar3 >> 5 ^ uVar3 << 4);\n        arg_8h = uVar2;\n        uVar3 = uVar3 + (uVar1 + uVar2 ^ uVar2 >> 5 ^ uVar2 * 0x10);\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    return uVar1 & 0xffff0000 | (uVar2 & 0xe000) >> 5 | arg_8h & 1;\n}\n",
        "token_count": 271
    },
    "00406998": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406998(uint32_t *arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = *arg_10h;\n    uVar1 = arg_10h[1];\n    uVar2 = (uVar4 >> 8 & 0xff00ff00 | uVar4 << 0x18 | (uVar4 & 0xff00) << 8 | uVar4 >> 0x18) ^ *arg_8h;\n    uVar4 = arg_10h[2];\n    uVar3 = (uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18) ^ arg_8h[1];\n    uVar1 = arg_10h[3];\n    uVar5 = (uVar4 >> 8 & 0xff00ff00 | uVar4 << 0x18 | (uVar4 & 0xff00) << 8 | uVar4 >> 0x18) ^ arg_8h[2];\n    uVar4 = (uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18) ^ arg_8h[3];\n    var_ch = *((uVar5 >> 8 & 0xff) * 4 + 0x418670) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x418270) ^\n             *((uVar2 >> 0x18) * 4 + 0x417e70) ^ *((uVar4 & 0xff) * 4 + 0x418a70) ^ arg_8h[4];\n    var_4h = *((uVar4 >> 8 & 0xff) * 4 + 0x418670) ^ *((uVar5 >> 0x10 & 0xff) * 4 + 0x418270) ^\n             *((uVar3 >> 0x18) * 4 + 0x417e70) ^ *((uVar2 & 0xff) * 4 + 0x418a70) ^ arg_8h[5];\n    arg_10h = *((uVar4 >> 0x10 & 0xff) * 4 + 0x418270) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x418670) ^\n              *((uVar5 >> 0x18) * 4 + 0x417e70) ^ *((uVar3 & 0xff) * 4 + 0x418a70) ^ arg_8h[6];\n    uVar4 = *((uVar3 >> 8 & 0xff) * 4 + 0x418670) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x418270) ^\n            *((uVar4 >> 0x18) * 4 + 0x417e70) ^ *((uVar5 & 0xff) * 4 + 0x418a70) ^ arg_8h[7];\n    arg_ch = arg_ch >> 1;\n    while( true ) {\n        arg_ch = arg_ch + -1;\n        puVar6 = arg_8h + 8;\n        if (arg_ch == 0) break;\n        uVar1 = *((arg_10h >> 8 & 0xff) * 4 + 0x418670) ^ *((var_4h >> 0x10 & 0xff) * 4 + 0x418270) ^\n                *((var_ch >> 0x18) * 4 + 0x417e70) ^ *((uVar4 & 0xff) * 4 + 0x418a70) ^ *puVar6;\n        uVar2 = *((uVar4 >> 8 & 0xff) * 4 + 0x418670) ^ *((arg_10h >> 0x10 & 0xff) * 4 + 0x418270) ^\n                *((var_4h >> 0x18) * 4 + 0x417e70) ^ *((var_ch & 0xff) * 4 + 0x418a70) ^ arg_8h[9];\n        uVar3 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x418270) ^ *((var_ch >> 8 & 0xff) * 4 + 0x418670) ^\n                *((arg_10h >> 0x18) * 4 + 0x417e70) ^ *((var_4h & 0xff) * 4 + 0x418a70) ^ arg_8h[10];\n        uVar4 = *((var_4h >> 8 & 0xff) * 4 + 0x418670) ^ *((var_ch >> 0x10 & 0xff) * 4 + 0x418270) ^\n                *((uVar4 >> 0x18) * 4 + 0x417e70) ^ *((arg_10h & 0xff) * 4 + 0x418a70) ^ arg_8h[0xb];\n        var_ch = *((uVar3 >> 8 & 0xff) * 4 + 0x418670) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x418270) ^\n                 *((uVar1 >> 0x18) * 4 + 0x417e70) ^ *((uVar4 & 0xff) * 4 + 0x418a70) ^ arg_8h[0xc];\n        var_4h = *((uVar4 >> 8 & 0xff) * 4 + 0x418670) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x418270) ^\n                 *((uVar2 >> 0x18) * 4 + 0x417e70) ^ *((uVar1 & 0xff) * 4 + 0x418a70) ^ arg_8h[0xd];\n        arg_10h = *((uVar4 >> 0x10 & 0xff) * 4 + 0x418270) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x418670) ^\n                  *((uVar3 >> 0x18) * 4 + 0x417e70) ^ *((uVar2 & 0xff) * 4 + 0x418a70) ^ arg_8h[0xe];\n        uVar4 = *((uVar2 >> 8 & 0xff) * 4 + 0x418670) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x418270) ^\n                *((uVar4 >> 0x18) * 4 + 0x417e70) ^ *((uVar3 & 0xff) * 4 + 0x418a70) ^ arg_8h[0xf];\n        arg_8h = puVar6;\n    }\n    uVar1 = *(str.ccccwwww + (var_4h >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.ccccwwww + (arg_10h >> 8 & 0xff) * 4) & 0xff00 ^ *(str.ccccwwww + (var_ch >> 0x18) * 4) & 0xff000000 ^\n            str.ccccwwww[(uVar4 & 0xff) * 4] ^ *puVar6;\n    *arg_14h = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = *(str.ccccwwww + (arg_10h >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.ccccwwww + (uVar4 >> 8 & 0xff) * 4) & 0xff00 ^ *(str.ccccwwww + (var_4h >> 0x18) * 4) & 0xff000000 ^\n            str.ccccwwww[(var_ch & 0xff) * 4] ^ arg_8h[9];\n    arg_14h[1] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = *(str.ccccwwww + (uVar4 >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.ccccwwww + (var_ch >> 8 & 0xff) * 4) & 0xff00 ^ *(str.ccccwwww + (arg_10h >> 0x18) * 4) & 0xff000000 ^\n            str.ccccwwww[(var_4h & 0xff) * 4] ^ arg_8h[10];\n    arg_14h[2] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar4 = *(str.ccccwwww + (var_ch >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.ccccwwww + (var_4h >> 8 & 0xff) * 4) & 0xff00 ^ *(str.ccccwwww + (uVar4 >> 0x18) * 4) & 0xff000000 ^\n            str.ccccwwww[(arg_10h & 0xff) * 4] ^ arg_8h[0xb];\n    arg_14h[3] = uVar4 >> 8 & 0xff00ff00 | uVar4 << 0x18 | (uVar4 & 0xff00) << 8 | uVar4 >> 0x18;\n    return;\n}\n",
        "token_count": 2442
    },
    "00406ebb": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406ebb(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint uStack20;\n    \n    uVar1 = *arg_ch;\n    puVar5 = arg_8h + 1;\n    *arg_8h = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = arg_ch[1];\n    *puVar5 = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = arg_ch[2];\n    arg_8h[2] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = arg_ch[3];\n    uVar3 = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | uVar1 << 8 & 0xff00ff | uVar1 >> 0x18;\n    arg_8h[3] = uVar3;\n    if (arg_10h == 0x80) {\n        uVar2 = (*(str.ccccwwww + ((uVar1 << 8 & 0xff0000) >> 0x10) * 4) ^ 0x1000000) & 0xff000000 ^\n                *(str.ccccwwww + ((uVar1 >> 8 & 0xff00) >> 8) * 4) & 0xff0000 ^ str.ccccwwww[(uVar1 & 0xff) * 4] ^\n                *(str.ccccwwww + (uVar1 >> 0x18) * 4) & 0xff00 ^ *arg_8h;\n        uVar1 = *puVar5 ^ uVar2;\n        arg_8h[4] = uVar2;\n        arg_8h[5] = uVar1;\n        uVar1 = arg_8h[2] ^ uVar1;\n        arg_8h[6] = uVar1;\n        arg_8h[7] = uVar3 ^ uVar1;\n        puVar4 = 0x41a674;\n        do {\n            uVar1 = puVar5[6];\n            uVar1 = *(str.ccccwwww + (uVar1 >> 8 & 0xff) * 4) & 0xff0000 ^\n                    *(str.ccccwwww + (uVar1 >> 0x10 & 0xff) * 4) & 0xff000000 ^ str.ccccwwww[(uVar1 >> 0x18) * 4] ^\n                    *(str.ccccwwww + (uVar1 & 0xff) * 4) & 0xff00 ^ puVar5[3] ^ *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5[7] = uVar1;\n            uVar1 = puVar5[4] ^ uVar1;\n            puVar5[8] = uVar1;\n            uVar1 = puVar5[5] ^ uVar1;\n            puVar5[9] = uVar1;\n            puVar5[10] = puVar5[6] ^ uVar1;\n            puVar5 = puVar5 + 4;\n        } while (puVar4 != 0x41a698);\n        uStack20 = 10;\n    }\n    else {\n        uVar1 = arg_ch[4];\n        arg_8h[4] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n        uVar1 = arg_ch[5];\n        arg_8h[5] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | uVar1 << 8 & 0xff00ff | uVar1 >> 0x18;\n        if (arg_10h == 0xc0) {\n            uVar3 = (*(str.ccccwwww + ((uVar1 << 8 & 0xff0000) >> 0x10) * 4) ^ 0x1000000) & 0xff000000 ^\n                    *(str.ccccwwww + ((uVar1 >> 8 & 0xff00) >> 8) * 4) & 0xff0000 ^ str.ccccwwww[(uVar1 & 0xff) * 4] ^\n                    *(str.ccccwwww + (uVar1 >> 0x18) * 4) & 0xff00 ^ *arg_8h;\n            puVar4 = 0x41a674;\n            uVar1 = *puVar5 ^ uVar3;\n            arg_8h[6] = uVar3;\n            uVar3 = arg_8h[2] ^ uVar1;\n            arg_8h[7] = uVar1;\n            arg_8h[8] = uVar3;\n            arg_8h[9] = arg_8h[3] ^ uVar3;\n            puVar5 = arg_8h + 10;\n            do {\n                *puVar5 = puVar5[-6] ^ puVar5[-1];\n                puVar5[1] = puVar5[-5] ^ puVar5[-6] ^ puVar5[-1];\n                uVar1 = puVar5[1];\n                uVar1 = *(str.ccccwwww + (uVar1 >> 8 & 0xff) * 4) & 0xff0000 ^\n                        *(str.ccccwwww + (uVar1 >> 0x10 & 0xff) * 4) & 0xff000000 ^ str.ccccwwww[(uVar1 >> 0x18) * 4] ^\n                        *(str.ccccwwww + (uVar1 & 0xff) * 4) & 0xff00 ^ puVar5[-4] ^ *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5[2] = uVar1;\n                uVar1 = puVar5[-3] ^ uVar1;\n                puVar5[3] = uVar1;\n                uVar1 = puVar5[-2] ^ uVar1;\n                puVar5[4] = uVar1;\n                puVar5[5] = puVar5[-1] ^ uVar1;\n                puVar5 = puVar5 + 6;\n            } while (puVar4 != 0x41a690);\n            uStack20 = 0xc;\n        }\n        else {\n            uVar1 = arg_ch[6];\n            arg_8h[6] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n            uVar1 = arg_ch[7];\n            arg_8h[7] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | uVar1 << 8 & 0xff00ff | uVar1 >> 0x18;\n            if (arg_10h == 0x100) {\n                arg_ch = 0x41a674;\n                uVar3 = (*(str.ccccwwww + ((uVar1 << 8 & 0xff0000) >> 0x10) * 4) ^ 0x1000000) & 0xff000000 ^\n                        *(str.ccccwwww + ((uVar1 >> 8 & 0xff00) >> 8) * 4) & 0xff0000 ^ str.ccccwwww[(uVar1 & 0xff) * 4]\n                        ^ *(str.ccccwwww + (uVar1 >> 0x18) * 4) & 0xff00 ^ *arg_8h;\n                uVar1 = *puVar5 ^ uVar3;\n                arg_8h[8] = uVar3;\n                arg_8h[9] = uVar1;\n                uVar1 = arg_8h[2] ^ uVar1;\n                arg_8h[10] = uVar1;\n                arg_8h[0xb] = arg_8h[3] ^ uVar1;\n                arg_10h = arg_8h + 0xc;\n                do {\n                    uVar1 = arg_10h[-1];\n                    uVar1 = *(str.ccccwwww + (uVar1 >> 0x10 & 0xff) * 4) & 0xff0000 ^\n                            *(str.ccccwwww + (uVar1 >> 8 & 0xff) * 4) & 0xff00 ^\n                            *(str.ccccwwww + (uVar1 >> 0x18) * 4) & 0xff000000 ^ str.ccccwwww[(uVar1 & 0xff) * 4] ^\n                            arg_10h[-8];\n                    *arg_10h = uVar1;\n                    uVar1 = arg_10h[-7] ^ uVar1;\n                    arg_10h[1] = uVar1;\n                    uVar1 = arg_10h[-6] ^ uVar1;\n                    arg_10h[2] = uVar1;\n                    arg_10h[3] = arg_10h[-5] ^ uVar1;\n                    uVar1 = arg_10h[3];\n                    uVar1 = *(str.ccccwwww + (uVar1 >> 8 & 0xff) * 4) & 0xff0000 ^\n                            *(str.ccccwwww + (uVar1 >> 0x10 & 0xff) * 4) & 0xff000000 ^\n                            str.ccccwwww[(uVar1 >> 0x18) * 4] ^ *(str.ccccwwww + (uVar1 & 0xff) * 4) & 0xff00 ^\n                            arg_10h[-4] ^ *arg_ch;\n                    arg_10h[4] = uVar1;\n                    uVar1 = arg_10h[-3] ^ uVar1;\n                    arg_10h[5] = uVar1;\n                    uVar1 = arg_10h[-2] ^ uVar1;\n                    arg_10h[6] = uVar1;\n                    arg_10h[7] = arg_10h[-1] ^ uVar1;\n                    arg_ch = arg_ch + 1;\n                    arg_10h = arg_10h + 8;\n                } while (arg_ch != 0x41a68c);\n                uStack20 = 0xe;\n            }\n            else {\n                uStack20 = 0;\n            }\n        }\n    }\n    return uStack20;\n}\n",
        "token_count": 2559
    },
    "00404f24": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404f24(uint32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    arg_8h = ~arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_10h = arg_10h + -1;\n            arg_8h = arg_8h ^ *arg_ch;\n            arg_ch = arg_ch + 1;\n            iVar1 = 8;\n            do {\n                arg_8h = arg_8h >> 1 ^ ~(arg_8h & 1) + 1 & 0xedb88320;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        } while (arg_10h != 0);\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 198
    },
    "0040a815": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040a815(uint noname_0, uint noname_1, uint32_t arg_10h)\n\n{\n    float10 fVar1;\n    \n    if (arg_10h == 0) {\n        fVar1 = 1;\n    }\n    else {\n        fVar1 = fcn.0040a815(noname_0, noname_1, arg_10h / 2);\n        if ((arg_10h & 1) == 0) {\n            fVar1 = fVar1 * fVar1;\n        }\n        else if (arg_10h < 1) {\n            fVar1 = (fVar1 * fVar1) / CONCAT44(noname_1, noname_0);\n        }\n        else {\n            fVar1 = fVar1 * CONCAT44(noname_1, noname_0) * fVar1;\n        }\n    }\n    return fVar1;\n}\n",
        "token_count": 209
    },
    "00404540": {
        "rules": [
            "hash data using djb2/7c4211d97aa54a3fa9be92a08fd675ee"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404540(uint8_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x1505;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        iVar1 = iVar1 * 0x21 + *arg_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 92
    },
    "0040455e": {
        "rules": [
            "hash data using djb2/7c4211d97aa54a3fa9be92a08fd675ee"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040455e(uint16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x1505;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        iVar1 = iVar1 * 0x21 + *arg_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 93
    },
    "004048fc": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004048fc(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    if (arg_10h != 0) {\n        puVar4 = arg_8h;\n        do {\n            iVar1 = *((arg_ch - arg_8h) + puVar4);\n            *puVar4 = iVar1;\n            puVar4 = puVar4 + 2;\n            if (iVar1 == 0) break;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        if ((arg_10h != 0) && (uVar2 = arg_10h - 1,  uVar2 != 0)) {\n            for (uVar3 = uVar2 >> 1; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            for (uVar2 = (uVar2 & 1) != 0; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 2;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 328
    },
    "00404e53": {
        "rules": [
            "encrypt data using Curve25519/f8ce07bf90384b3481717cbf54aaf528"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404e53(uint8_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404fd3(arg_8h, 0x20);\n    if (iVar1 != 0) {\n        *arg_8h = *arg_8h & 0xf8;\n        arg_8h[0x1f] = arg_8h[0x1f] & 0x3f | 0x40;\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 129
    },
    "0040791b": {
        "rules": [
            "encrypt data using Curve25519/f8ce07bf90384b3481717cbf54aaf528"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040791b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_118h;\n    uint var_c8h;\n    uint var_70h;\n    uint var_20h;\n    uint var_1h;\n    \n    fcn.0040358e(&var_20h, arg_ch, 0x20);\n    var_20h._0_1_ = var_20h & 0xf8;\n    var_1h._0_1_ = var_1h & 0x3f | 0x40;\n    fcn.00407c77(&var_70h, arg_10h);\n    fcn.0040733d(&var_118h, &var_c8h, &var_20h, &var_70h);\n    fcn.0040754c(&var_70h, &var_c8h);\n    fcn.00408191(&var_c8h, &var_118h, &var_70h);\n    fcn.004079a6(arg_8h, &var_c8h);\n    return 0;\n}\n",
        "token_count": 281
    },
    "0040673a": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040673a(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    uint32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_34h = 10;\n    puVar7 = arg_ch;\n    puVar8 = &var_74h;\n    for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    var_4h = var_4ch;\n    var_20h = var_50h;\n    var_14h = var_54h;\n    var_2ch = var_58h;\n    var_28h = var_5ch;\n    var_1ch = var_60h;\n    var_10h = var_64h;\n    var_24h = var_68h;\n    var_ch = var_6ch;\n    var_8h = var_70h;\n    do {\n        var_10h = var_10h ^ ((var_74h + var_44h) * 0x80 | var_74h + var_44h >> 0x19);\n        var_14h = var_14h ^ ((var_10h + var_74h) * 0x200 | var_10h + var_74h >> 0x17);\n        uVar9 = var_44h ^ ((var_14h + var_10h) * 0x2000 | var_14h + var_10h >> 0x13);\n        uVar2 = var_14h + uVar9;\n        uVar1 = var_74h ^ (uVar2 * 0x40000 | uVar2 >> 0xe);\n        var_20h = var_20h ^ ((var_8h + var_1ch) * 0x80 | var_8h + var_1ch >> 0x19);\n        uVar6 = var_40h ^ ((var_20h + var_1ch) * 0x200 | var_20h + var_1ch >> 0x17);\n        var_8h = var_8h ^ ((var_20h + uVar6) * 0x2000 | var_20h + uVar6 >> 0x13);\n        uVar2 = var_8h + uVar6;\n        var_1ch = var_1ch ^ (uVar2 * 0x40000 | uVar2 >> 0xe);\n        uVar4 = var_3ch ^ ((var_4h + var_28h) * 0x80 | var_4h + var_28h >> 0x19);\n        var_ch = var_ch ^ ((var_4h + uVar4) * 0x200 | var_4h + uVar4 >> 0x17);\n        var_28h = var_28h ^ ((var_ch + uVar4) * 0x2000 | var_ch + uVar4 >> 0x13);\n        uVar2 = var_ch + var_28h;\n        var_4h = var_4h ^ (uVar2 * 0x40000 | uVar2 >> 0xe);\n        var_24h = var_24h ^ ((var_48h + var_38h) * 0x80 | var_48h + var_38h >> 0x19);\n        var_2ch = var_2ch ^ ((var_24h + var_38h) * 0x200 | var_24h + var_38h >> 0x17);\n        uVar5 = var_48h ^ ((var_24h + var_2ch) * 0x2000 | var_24h + var_2ch >> 0x13);\n        uVar2 = var_2ch + uVar5;\n        uVar2 = var_38h ^ (uVar2 * 0x40000 | uVar2 >> 0xe);\n        var_8h = var_8h ^ ((uVar1 + var_24h) * 0x80 | uVar1 + var_24h >> 0x19);\n        var_70h = var_8h;\n        var_ch = var_ch ^ ((var_8h + uVar1) * 0x200 | var_8h + uVar1 >> 0x17);\n        var_6ch = var_ch;\n        var_24h = var_24h ^ ((var_ch + var_8h) * 0x2000 | var_ch + var_8h >> 0x13);\n        var_68h = var_24h;\n        var_74h = uVar1 ^ ((var_ch + var_24h) * 0x40000 | var_ch + var_24h >> 0xe);\n        var_28h = var_28h ^ ((var_1ch + var_10h) * 0x80 | var_1ch + var_10h >> 0x19);\n        var_5ch = var_28h;\n        var_18h = var_74h;\n        var_2ch = var_2ch ^ ((var_28h + var_1ch) * 0x200 | var_28h + var_1ch >> 0x17);\n        var_10h = var_10h ^ ((var_28h + var_2ch) * 0x2000 | var_28h + var_2ch >> 0x13);\n        var_64h = var_10h;\n        var_58h = var_2ch;\n        var_1ch = var_1ch ^ ((var_10h + var_2ch) * 0x40000 | var_10h + var_2ch >> 0xe);\n        var_60h = var_1ch;\n        var_48h = uVar5 ^ ((var_4h + var_20h) * 0x80 | var_4h + var_20h >> 0x19);\n        var_14h = var_14h ^ ((var_4h + var_48h) * 0x200 | var_4h + var_48h >> 0x17);\n        var_54h = var_14h;\n        var_20h = var_20h ^ ((var_14h + var_48h) * 0x2000 | var_14h + var_48h >> 0x13);\n        var_50h = var_20h;\n        var_4h = var_4h ^ ((var_20h + var_14h) * 0x40000 | var_20h + var_14h >> 0xe);\n        var_4ch = var_4h;\n        var_44h = uVar9 ^ ((uVar2 + uVar4) * 0x80 | uVar2 + uVar4 >> 0x19);\n        var_30h = var_44h;\n        var_40h = uVar6 ^ ((uVar2 + var_44h) * 0x200 | uVar2 + var_44h >> 0x17);\n        var_3ch = uVar4 ^ ((var_40h + var_44h) * 0x2000 | var_40h + var_44h >> 0x13);\n        var_38h = uVar2 ^ ((var_3ch + var_40h) * 0x40000 | var_3ch + var_40h >> 0xe);\n        var_34h = var_34h + -1;\n    } while (var_34h != 0);\n    iVar3 = 0;\n    do {\n        (&var_74h)[iVar3] = (&var_74h)[iVar3] + arg_ch[iVar3];\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x10);\n    puVar7 = &var_74h;\n    for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *arg_8h = *puVar7;\n        puVar7 = puVar7 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 2191
    },
    "0040733d": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040733d(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_4f0h;\n    uint var_458h;\n    uint var_3c0h;\n    uint var_328h;\n    uint var_320h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    int32_t var_30h;\n    uint8_t *var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    fcn.004035b3(&var_320h, 0, 0x90);\n    var_c4h = 0;\n    var_c8h = 1;\n    fcn.004035b3(&var_c0h, 0, 0x90);\n    var_160h = 1;\n    var_15ch = 0;\n    fcn.004035b3(&var_158h, 0, 0x90);\n    fcn.004035b3(&var_3c0h, 0, 0x98);\n    var_1ch = &var_328h;\n    var_24h = &var_160h;\n    var_14h = &var_c8h;\n    var_ch = &var_3c0h;\n    fcn.004035b3(&var_458h, 0, 0x98);\n    var_1f8h = 1;\n    var_1f4h = 0;\n    fcn.004035b3(&var_1f0h, 0, 0x90);\n    fcn.004035b3(&var_4f0h, 0, 0x98);\n    var_290h = 1;\n    var_28ch = 0;\n    fcn.004035b3(&var_288h, 0, 0x90);\n    var_10h = &var_458h;\n    var_20h = &var_1f8h;\n    var_8h = &var_4f0h;\n    var_18h = &var_290h;\n    puVar5 = arg_14h;\n    puVar7 = &var_328h;\n    for (iVar4 = 0x14; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_2ch = arg_10h + 0x1f;\n    var_30h = 0x20;\n    puVar5 = &var_328h;\n    puVar7 = var_8h;\n    do {\n        var_8h = puVar7;\n        var_1h._0_1_ = *var_2ch;\n        var_28h = 8;\n        puVar3 = var_24h;\n        puVar2 = var_10h;\n        puVar7 = var_8h;\n        do {\n            var_8h = puVar7;\n            var_10h = puVar2;\n            puVar7 = puVar3;\n            arg_10h_00 = var_1h >> 7;\n            fcn.00408d4f(puVar7, puVar5, arg_10h_00, 0);\n            fcn.00408d4f(var_ch, var_14h, arg_10h_00, 0);\n            fcn.00407f4b(var_8h, var_18h, var_10h, var_20h, puVar7, var_ch, var_1ch, var_14h, arg_14h);\n            fcn.00408d4f(var_8h, var_10h, arg_10h_00, 0);\n            puVar6 = var_18h;\n            puVar1 = var_20h;\n            fcn.00408d4f(var_18h, var_20h, arg_10h_00, 0);\n            var_18h = var_ch;\n            puVar2 = var_1ch;\n            var_20h = var_14h;\n            var_1h._0_1_ = var_1h * '\\x02';\n            var_28h = var_28h + -1;\n            puVar5 = var_10h;\n            puVar3 = var_8h;\n            var_1ch = var_10h;\n            var_14h = puVar1;\n            var_ch = puVar6;\n        } while (var_28h != 0);\n        var_2ch = var_2ch + -1;\n        var_30h = var_30h + -1;\n        var_24h = var_8h;\n        var_10h = puVar2;\n    } while (var_30h != 0);\n    for (iVar4 = 0x14; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *arg_8h = *var_8h;\n        var_8h = var_8h + 1;\n        arg_8h = arg_8h + 1;\n    }\n    for (iVar4 = 0x14; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *arg_ch = *puVar6;\n        puVar6 = puVar6 + 1;\n        arg_ch = arg_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 1466
    },
    "004086ab": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004086ab(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 5;\n    arg_8h[0x14] = 0;\n    arg_8h[0x15] = 0;\n    puVar4 = arg_8h + 2;\n    puVar5 = puVar4;\n    do {\n        uVar2 = puVar5[-1];\n        uVar10 = puVar5[-2];\n        uVar7 = (uVar2 >> 0x1f) >> 6;\n        uVar8 = uVar7 + uVar10;\n        uVar6 = uVar2 + CARRY4(uVar7, uVar10);\n        uVar3 = uVar8 >> 0x1a;\n        uVar9 = uVar3 | uVar6 * 0x40;\n        uVar7 = *puVar5;\n        *puVar5 = *puVar5 + uVar9;\n        puVar5[-1] = (uVar2 - ((uVar6 >> 0x1a) << 0x1a | uVar6 & 0x3ffffff)) - (uVar10 < (uVar8 & 0xfc000000));\n        puVar5[1] = puVar5[1] + (uVar6 >> 0x1a) + CARRY4(uVar7, uVar9);\n        uVar2 = puVar5[1];\n        puVar5[-2] = uVar10 + uVar3 * -0x4000000;\n        uVar10 = *puVar5;\n        uVar7 = (uVar2 >> 0x1f) >> 7;\n        uVar8 = uVar7 + uVar10;\n        uVar6 = uVar2 + CARRY4(uVar7, uVar10);\n        uVar3 = uVar8 >> 0x19;\n        uVar9 = uVar3 | uVar6 * 0x80;\n        puVar1 = puVar5 + 2;\n        uVar7 = *puVar1;\n        *puVar1 = *puVar1 + uVar9;\n        *puVar5 = uVar10 + uVar3 * -0x2000000;\n        puVar5[3] = puVar5[3] + (uVar6 >> 0x19) + CARRY4(uVar7, uVar9);\n        puVar5[1] = (uVar2 - ((uVar6 >> 0x19) << 0x19 | uVar6 & 0x1ffffff)) - (uVar10 < (uVar8 & 0xfe000000));\n        puVar5 = puVar5 + 4;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    uVar2 = arg_8h[0x14];\n    uVar10 = arg_8h[0x15];\n    uVar7 = *arg_8h;\n    *arg_8h = *arg_8h + uVar2 * 0x10;\n    arg_8h[1] = arg_8h[1] + (uVar10 << 4 | uVar2 >> 0x1c) + CARRY4(uVar7, uVar2 * 0x10);\n    uVar7 = *arg_8h;\n    *arg_8h = *arg_8h + uVar2 * 2;\n    arg_8h[1] = arg_8h[1] + (uVar10 << 1 | uVar2 >> 0x1f) + CARRY4(uVar7, uVar2 * 2);\n    uVar7 = *arg_8h;\n    *arg_8h = *arg_8h + uVar2;\n    uVar3 = *arg_8h;\n    arg_8h[1] = arg_8h[1] + uVar10 + CARRY4(uVar7, uVar2);\n    arg_8h[0x14] = 0;\n    arg_8h[0x15] = 0;\n    uVar2 = arg_8h[1];\n    uVar10 = (uVar2 >> 0x1f) >> 6;\n    uVar6 = uVar10 + uVar3;\n    uVar7 = uVar2 + CARRY4(uVar10, uVar3);\n    uVar10 = uVar6 >> 0x1a;\n    uVar8 = uVar10 | uVar7 * 0x40;\n    *arg_8h = uVar3 + uVar10 * -0x4000000;\n    arg_8h[1] = (uVar2 - ((uVar7 >> 0x1a) << 0x1a | uVar7 & 0x3ffffff)) - (uVar3 < (uVar6 & 0xfc000000));\n    uVar2 = *puVar4;\n    *puVar4 = *puVar4 + uVar8;\n    arg_8h[3] = arg_8h[3] + (uVar7 >> 0x1a) + CARRY4(uVar2, uVar8);\n    return;\n}\n",
        "token_count": 1275
    },
    "00408cdf": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408cdf(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar5 = 0;\n    puVar4 = arg_8h + 8;\n    do {\n        uVar2 = *(arg_ch + uVar5 * 8);\n        puVar1 = puVar4 + -2;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + uVar2;\n        puVar4[-1] = puVar4[-1] + *(arg_ch + 4 + uVar5 * 8) + CARRY4(uVar3, uVar2);\n        uVar2 = *((arg_ch - arg_8h) + puVar4);\n        uVar3 = *puVar4;\n        *puVar4 = *puVar4 + uVar2;\n        puVar4[1] = puVar4[1] + *((arg_ch - arg_8h) + 4 + puVar4) + CARRY4(uVar3, uVar2);\n        uVar5 = uVar5 + 2;\n        puVar4 = puVar4 + 4;\n    } while (uVar5 < 10);\n    return;\n}\n",
        "token_count": 313
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    \n    // [00] -r-x section size 40960 named .text\n    arg_ch_00 = fcn.00404722(arg_ch);\n    fcn.00404be8(arg_8h, arg_ch_00);\n    return;\n}\n",
        "token_count": 83
    },
    "00401071": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401071(int32_t arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.0040442a(*(arg_8h + 0xc));\n    if (arg_8h_00 != 0) {\n        arg_8h = 0;\n        *0x41c2a4 = fcn.0040447c(arg_8h_00, &arg_8h);\n        fcn.00403579(arg_8h_00);\n        arg_8h_00 = *0x41c2a4 != 0;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 157
    },
    "004010c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004010c4(int32_t arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.0040442a(*(arg_8h + 0xc));\n    if (arg_8h_00 != 0) {\n        arg_8h = 0;\n        *0x41c29c = fcn.0040447c(arg_8h_00, &arg_8h);\n        fcn.00403579(arg_8h_00);\n        arg_8h_00 = *0x41c29c != 0;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 156
    },
    "00401142": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401142(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint *puVar2;\n    uint *puVar3;\n    \n    iVar1 = fcn.0040442a(*(arg_8h + 0xc));\n    if (iVar1 != 0) {\n        arg_8h = 0;\n        arg_8h_00 = fcn.0040447c(iVar1, &arg_8h);\n        fcn.00403579(iVar1);\n        if (arg_8h_00 == NULL) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = 0;\n            if (arg_8h == 0x20) {\n                puVar2 = arg_8h_00;\n                puVar3 = 0x41c1a0;\n                for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar3 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                }\n                iVar1 = 1;\n            }\n            fcn.00403579(arg_8h_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 296
    },
    "0040119f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040119f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404b88(0x41c304, 0, *(arg_8h + 8));\n    if (iVar1 != 0) {\n        fcn.00404d32(arg_8h, 0x41c304, fcn.00401000);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "004011f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011f0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404b88(0x41c2ec, 0, *(arg_8h + 8));\n    if (iVar1 != 0) {\n        fcn.00404d32(arg_8h, 0x41c2ec, fcn.00401000);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00401222": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401222(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404b88(0x41c2e0, 0, *(arg_8h + 8));\n    if (iVar1 != 0) {\n        fcn.00404d32(arg_8h, 0x41c2e0, fcn.00401000);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00401254": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401254(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404b88(0x41c2d4, 0, *(arg_8h + 8));\n    if (iVar1 != 0) {\n        fcn.00404d32(arg_8h, 0x41c2d4, fcn.00401000);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00401320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401320(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404b88(0x41c2f8, 0, *(arg_8h + 8));\n    if (iVar1 != 0) {\n        fcn.00404d32(arg_8h, 0x41c2f8, fcn.00401000);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "004019d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004019d8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404f24(0, 0x41d028, *0x41d024);\n    if (iVar1 != *0x41d020) {\n        return 0;\n    }\n    iVar1 = fcn.0040352c(*0x41d024);\n    if (iVar1 != 0) {\n        fcn.004050da(0x41d000, 0x20, 0x41d028, *0x41d024, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "00401a2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401a2a(void)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_28h;\n    uint var_24h;\n    code *var_20h;\n    code *var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.004019d8();\n    uVar1 = 0;\n    if (arg_8h != 0) {\n        var_28h = 0;\n        var_24h = 0;\n        uStack28 = 0;\n        uStack24 = 0;\n        var_20h = fcn.0040352c;\n        var_1ch = fcn.00403579;\n        uVar1 = fcn.004048d0(arg_8h);\n        arg_8h_00 = fcn.00409b65(&var_28h, arg_8h, uVar1);\n        if (arg_8h_00 == 0) {\n            fcn.00403579(arg_8h);\n            uVar1 = 0;\n        }\n        else {\n            fcn.00404580(0x41b040, 0x45, 0xb, 3, &var_4h);\n            var_10h = &var_4h;\n            var_4h._3_1_ = 0;\n            var_ch = 6;\n            var_8h = fcn.0040104b;\n            iVar2 = fcn.00404d6d(arg_8h_00, &var_10h, 1);\n            fcn.0040a7af(&var_28h, arg_8h_00);\n            fcn.00403579(arg_8h);\n            uVar1 = *0x41c328;\n            if (iVar2 == 0) {\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 482
    },
    "00401dad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401dad(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint var_9ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_60h;\n    uint var_5ch;\n    ushort var_52h;\n    uint var_50h;\n    ushort var_46h;\n    uint var_44h;\n    uint *var_3ah;\n    uint var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401c12(&var_4h);\n    if (iVar1 != 0) {\n        arg_8h = fcn.004044dd(iVar1, var_4h, 1);\n        fcn.00403579(iVar1);\n        if (arg_8h == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00404580(0x41b040, 0x34c, 0xd, 10, &var_44h);\n            var_3ah._0_2_ = 0;\n            fcn.00404580(0x41b040, 800, 0xe, 10, &var_50h);\n            var_46h = 0;\n            fcn.00404580(0x41b040, 0x4e4, 0xe, 10, &var_5ch);\n            var_52h = 0;\n            fcn.00404580(0x41b040, 0x4ac, 8, 0x14, &var_84h);\n            var_70h._0_2_ = 0;\n            fcn.00404580(0x41b040, 0x543, 10, 0x14, &var_9ch);\n            var_88h._0_2_ = 0;\n            fcn.00404580(0x41b040, 0x138, 5, 0xc, &var_6ch);\n            var_60h._0_2_ = 0;\n            fcn.00404580(0x41b040, 0x50b, 0xf, 8, &var_10h);\n            var_8h._0_2_ = 0;\n            iVar1 = fcn.004047d9(*0x41c2b8, &var_6ch);\n            unique0x00001d00 = &var_44h;\n            var_1ch = &var_10h;\n            if (iVar1 != 0) {\n                var_1ch = *0x41c2b8;\n            }\n            var_34h = *0x41c2b0;\n            var_30h = &var_50h;\n            var_28h = &var_5ch;\n            var_24h = *0x41c2a8 + 2;\n            var_20h = &var_84h;\n            var_18h = &var_9ch;\n            var_14h = *0x41c2a0;\n            var_2ch = arg_8h;\n            *0x41c2a4 = fcn.004045ed(*0x41c2a4, &var_3ah + 2, 5);\n            fcn.00403579(arg_8h);\n            iVar1 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 874
    },
    "00401f39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00401f39(void)\n\n{\n    uint32_t arg_8h;\n    int32_t arg_8h_00;\n    uint *var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    int32_t var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    ushort var_1eh;\n    uint var_1ch;\n    ushort var_12h;\n    uint var_10h;\n    ushort var_6h;\n    uint var_4h;\n    \n    arg_8h = fcn.00401c12(&var_4h);\n    if (arg_8h != 0) {\n        arg_8h_00 = fcn.004044dd(arg_8h, var_4h, 1);\n        fcn.00403579(arg_8h);\n        if (arg_8h_00 != 0) {\n            fcn.00404580(0x41b040, 0x34c, 0xd, 10, &var_10h);\n            var_6h = 0;\n            fcn.00404580(0x41b040, 800, 0xe, 10, &var_1ch);\n            var_12h = 0;\n            fcn.00404580(0x41b040, 0x4e4, 0xe, 10, &var_28h);\n            var_1eh = 0;\n            var_40h = &var_10h;\n            var_3ch = *0x41c2b0;\n            var_38h = &var_1ch;\n            var_30h = &var_28h;\n            var_2ch = *0x41c2a8 + 2;\n            var_34h = arg_8h_00;\n            *0x41c29c = fcn.004045ed(*0x41c29c, &var_40h, 3);\n            *0x41c310 = fcn.004048e3(*0x41c29c);\n            fcn.00403579(arg_8h_00);\n        }\n        arg_8h = arg_8h_00 != 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 520
    },
    "00402023": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00402023(void)\n\n{\n    int32_t arg_8h;\n    uint arg_ch;\n    uint var_14h;\n    uint *var_ah;\n    int32_t var_4h;\n    \n    fcn.00404580(0x41b040, 0x4e4, 0xe, 10, &var_14h);\n    var_ah._0_2_ = 0;\n    unique0x00001d00 = &var_14h;\n    var_4h = *0x41c2a8 + 2;\n    *0x41c2a0 = fcn.004045ed(*0x41c2a0, &var_ah + 2, 1);\n    *0x41c314 = fcn.004048e3(*0x41c2a0);\n    arg_8h = fcn.00404895(*0x41c2a0);\n    if (arg_8h != 0) {\n        arg_ch = fcn.00404748(arg_8h);\n        fcn.00404c8d(0x41c2e0, arg_ch);\n        fcn.00403579(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 288
    },
    "00402448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402448(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00404748(arg_ch + 0x24);\n    iVar2 = fcn.00404b49(0x41c304, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (**0x41b744)(1, 0, *(arg_ch + 8));\n        if (iVar2 != 0) {\n            (**0x41b804)(iVar2, 0);\n            fcn.0040360e(iVar2);\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 179
    },
    "00402497": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402497(uint noname_0, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00401c12(&var_4h);\n    if (arg_ch_00 != 0) {\n        arg_8h = fcn.00402d43(arg_ch);\n        if (arg_8h != 0) {\n            arg_ch_00 = fcn.00405ecd(arg_8h, arg_ch_00, var_4h, &var_ch, &var_8h);\n            fcn.00403579(arg_8h);\n            if (arg_ch_00 == 0) {\n                return;\n            }\n        }\n        fcn.00403579(arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "004024ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004024ec(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004048e3(arg_ch);\n    iVar1 = fcn.0040352c((iVar1 + *0x41c314) * 2 + 2);\n    if (iVar1 != 0) {\n        fcn.0040483a(iVar1, arg_ch);\n        fcn.00404776(iVar1, *0x41c2a0);\n        arg_8h = fcn.00405b61(iVar1, 0x40000000, 0, 2, 0);\n        fcn.00403579(iVar1);\n        if (arg_8h != 0) {\n            fcn.00405b87(arg_8h, *0x41c29c, *0x41c310 * 2, &var_4h);\n            fcn.0040360e(arg_8h);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 249
    },
    "00402576": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402576(uint noname_0, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.00404748(arg_ch);\n    iVar1 = fcn.00404b49(0x41c2d4, arg_ch_00);\n    return iVar1 == 0;\n}\n",
        "token_count": 85
    },
    "00402596": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402596(uint arg_8h, int32_t arg_ch)\n\n{\n    *(arg_ch + 0x148) = 2;\n    fcn.0040588f(arg_8h, 0, 0, arg_ch);\n    return;\n}\n",
        "token_count": 63
    },
    "004025b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025b8(uint arg_8h, int32_t arg_ch)\n\n{\n    fcn.004051ae(arg_ch + 0x108, 0x40);\n    fcn.004058a9(arg_ch);\n    fcn.0040585e(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 75
    },
    "00402677": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402677(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_40h;\n    uint var_20h;\n    \n    puVar3 = 0x41c1e0;\n    puVar4 = arg_8h + 0x28;\n    for (iVar2 = 0x16; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    puVar3 = 0x41c238;\n    puVar4 = arg_8h + 0x80;\n    for (iVar2 = 0x16; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.00404e00(&var_20h, arg_8h + 0xd8);\n    fcn.0040506a(&var_20h, 0x41c1c0, &var_40h);\n    fcn.004051ae(&var_20h, 0x20);\n    fcn.004066cb(arg_8h + 0x108, &var_40h, 0x100);\n    fcn.004051ae(&var_40h, 0x20);\n    fcn.00404fd3(arg_8h + 0xf8, 8);\n    fcn.004066ad(arg_8h + 0x108, arg_8h + 0xf8);\n    uVar1 = fcn.00404f24(0, arg_8h + 0xd8, 0x20);\n    *(arg_8h + 0x100) = uVar1;\n    *(arg_8h + 0x104) = *0x41c32c;\n    return;\n}\n",
        "token_count": 482
    },
    "00402732": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027bf)\n// WARNING: Removing unreachable block (ram,0x004027f2)\n\nvoid __cdecl fcn.00402732(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040360e(*(arg_ch + 0x14));\n    *(arg_ch + 0x14) = 0;\n    iVar1 = fcn.004048e3(*(arg_ch + 0x18));\n    iVar1 = fcn.0040352c(iVar1 * 2 + 0x80);\n    if (iVar1 != 0) {\n        uVar2 = *0x41c2a8;\n        arg_8h_00 = fcn.0040483a(iVar1, *(arg_ch + 0x18));\n        uVar2 = fcn.00404776(arg_8h_00, uVar2);\n        fcn.00405c92(*(arg_ch + 0x18), uVar2);\n        fcn.00403579(iVar1);\n    }\n    LOCK();\n    *0x41c020 = CONCAT44(*0x41c024 + *(arg_ch + 0x24) + CARRY4(*0x41c020, *(arg_ch + 0x20)), \n                         *0x41c020 + *(arg_ch + 0x20));\n    LOCK();\n    *0x41c028 = CONCAT44(*0x41c02c + (0xfffffffe < *0x41c028), *0x41c028 + 1);\n    fcn.004025b8(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 408
    },
    "00402813": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402813(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    *(arg_ch + 0x148) = arg_10h;\n    iVar1 = fcn.00405926(arg_ch, arg_ch + 0x150, *(arg_ch + 0x14c));\n    while( true ) {\n        if (iVar1 != 0) {\n            return;\n        }\n        iVar1 = fcn.00403dad();\n        if (iVar1 == 0x3e5) break;\n        if (iVar1 == 0x26) {\n            fcn.00402596(arg_8h, arg_ch);\n            return;\n        }\n        fcn.004040e1(100);\n        iVar1 = fcn.00405926(arg_ch, arg_ch + 0x150, *(arg_ch + 0x14c));\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00402879": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00402879(void)\n\n{\n    int32_t iVar1;\n    uint var_3ch;\n    code *var_38h;\n    code *var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    code *var_14h;\n    code *var_10h;\n    uint var_ch;\n    \n    *0x41c020 = 0;\n    *0x41c024 = 0;\n    *0x41c028 = 0;\n    *0x41c02c = 0;\n    *0x41c030 = 0;\n    iVar1 = fcn.004057e9(&var_ch, 0, 0, fcn.00402947);\n    if (iVar1 != 0) {\n        var_2ch = &var_ch;\n        var_3ch = 0;\n        var_38h = fcn.00402576;\n        var_34h = fcn.00402be1;\n        var_30h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        var_14h = fcn.004024ec;\n        var_10h = fcn.00402b7e;\n        fcn.00405ca3(&var_3ch);\n        fcn.00405d21(&var_3ch, 0);\n        if (var_18h > *0x41c02c || *0x41c02c == var_18h) {\n            if (var_18h <= *0x41c02c) goto code_r0x00402925;\n            do {\n                do {\n                    fcn.004040e1(100);\n                } while (*0x41c02c < var_18h);\n                if (*0x41c02c >= var_18h && *0x41c02c != var_18h) break;\ncode_r0x00402925:\n            } while (*0x41c028 < var_1ch);\n        }\n        fcn.0040573a(&var_ch, 0x41c030);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 533
    },
    "00402a0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a0d(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = arg_8h + 0x150;\n    fcn.00406604(arg_8h + 0x108, arg_ch_00, arg_ch_00, arg_ch);\n    *(arg_8h + 0x148) = arg_10h;\n    fcn.00405940(arg_8h, -arg_ch, -arg_ch >> 0x1f);\n    iVar1 = fcn.0040595a(arg_8h, arg_ch_00, arg_ch);\n    while( true ) {\n        if (iVar1 != 0) {\n            return;\n        }\n        iVar1 = fcn.00403dad();\n        if (iVar1 == 0x3e5) break;\n        fcn.004040e1(100);\n        iVar1 = fcn.0040595a(arg_8h, arg_ch_00, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00402af6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402af6(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    fcn.00403c02();\n    iVar1 = fcn.00401447();\n    if (iVar1 != 0) {\n        if (*0x41c324 == 0) {\n            iVar2 = fcn.00403cd5();\n            if (iVar2 != 0) {\n                fcn.00403723(0);\n            }\n        }\n        fcn.00403df5(0, 0, fcn.00402448);\n        fcn.00403676();\n        if (*0x41c31c != 0) {\n            fcn.00402f10();\n        }\n        iVar2 = fcn.00402879();\n        if (iVar2 != 0) {\n            fcn.004032be();\n            if (*0x41c320 != 0) {\n                fcn.004045a2(*0x41c298, 0x3b, 0, fcn.00402497);\n            }\n        }\n    }\n    fcn.00401365();\n    fcn.00403caa();\n    return iVar1;\n}\n",
        "token_count": 263
    },
    "00402b7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402b7e(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_14h_00;\n    int32_t iVar1;\n    \n    arg_14h_00 = fcn.004025e2(arg_8h, arg_ch, arg_14h, arg_18h);\n    if (arg_14h_00 != 0) {\n        iVar1 = fcn.00405715(arg_8h, *(arg_14h_00 + 0x14), 0);\n        if (iVar1 != 0) {\n            *(arg_14h_00 + 0x148) = 0;\n            iVar1 = fcn.0040588f(arg_8h, 0, 0, arg_14h_00);\n            if (iVar1 != 0) {\n                return 1;\n            }\n        }\n        fcn.004025b8(arg_8h, arg_14h_00);\n        arg_14h_00 = 0;\n    }\n    return arg_14h_00;\n}\n",
        "token_count": 259
    },
    "00402be1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402be1(uint noname_0, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_10h | arg_14h) != 0) {\n        fcn.00404748(arg_ch);\n        iVar1 = fcn.00404b49(0x41c2e0, arg_ch);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00405bb3(arg_ch);\n            if ((iVar1 != 0) && (iVar1 = fcn.00404b49(0x41c2ec, iVar1),  iVar1 != 0)) {\n                return 0;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "00402ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ec4(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.00404748(arg_ch);\n    iVar1 = fcn.00404b49(0x41c2f8, arg_ch_00);\n    if (iVar1 != 0) {\n        fcn.00402f65(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 108
    },
    "00402ef5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ef5(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00402c2f(arg_ch, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 66
    },
    "004031b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004031b9(void)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t arg_8h;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_ch;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.00403e9c(3, 0xd);\n    arg_8h = uVar2;\n    if ((uVar2 != 0) && (arg_8h = fcn.0040352c(uVar2 * 2 + 10),  arg_8h != 0)) {\n        var_4h = 0;\n        if (uVar2 != 0) {\n            do {\n                iVar3 = fcn.00403e9c(0, 1);\n                arg_ch = 9;\n                if (iVar3 != 0) {\n                    arg_ch = 0x19;\n                }\n                iVar1 = fcn.00403e9c(0, arg_ch);\n                *(arg_8h + var_4h * 2) = iVar1 + *(iVar3 * 2 + 0x40b000);\n                var_4h = var_4h + 1;\n            } while (var_4h < uVar2);\n        }\n        fcn.00404580(0x41b040, 0x272, 0xc, 8, &var_10h);\n        var_8h._0_2_ = 0;\n        fcn.00404776(arg_8h, &var_10h);\n        iVar3 = fcn.0040412e();\n        if (iVar3 == 0) {\n            fcn.00403579(arg_8h);\n        }\n        else {\n            iVar4 = fcn.004048e3(iVar3);\n            iVar5 = fcn.004048e3(arg_8h);\n            uVar2 = fcn.0040352c((iVar4 + iVar5) * 2 + 2);\n            if (uVar2 != 0) {\n                fcn.0040483a(uVar2, iVar3);\n                fcn.00404776(uVar2, arg_8h);\n                return uVar2;\n            }\n            fcn.00403579(arg_8h);\n            fcn.00403579(iVar3);\n        }\n        arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 575
    },
    "00403676": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00403676(void)\n\n{\n    int32_t iVar1;\n    uint var_174h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3eh;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404580(0x41b838, 0x599, 10, 0xe, &var_4ch);\n    var_3eh._0_2_ = 0;\n    fcn.00404580(0x41b838, 0x460, 0x10, 0x124, &var_174h);\n    stack0xffffffc0 = 0x3c;\n    var_50h._0_2_ = 0;\n    var_38h = 0;\n    var_34h = (**0x41b6d8)();\n    var_2ch = &var_4ch;\n    var_28h = &var_174h;\n    var_30h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    do {\n        iVar1 = (**0x41b654)(&var_3eh + 2);\n    } while (iVar1 == 0);\n    return;\n}\n",
        "token_count": 436
    },
    "00403a82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00403a82(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_10h;\n    uint var_58h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040352c(0x22);\n    if (iVar1 != 0) {\n        var_4h = fcn.004040ef();\n        uVar2 = fcn.00404f24(0x539, &var_4h, 4);\n        fcn.004035b3(&var_58h, 0, 0x40);\n        fcn.00403622(&var_58h);\n        fcn.00404580(0x41b838, 0x22b, 8, 0x10, &var_18h);\n        var_8h._0_2_ = 0;\n        uVar3 = fcn.004040ef();\n        arg_10h = fcn.004048d0(&var_58h);\n        uVar2 = fcn.00404f24(uVar2, &var_58h, arg_10h);\n        (**0x41b674)(iVar1, &var_18h, uVar2, uVar3);\n    }\n    return iVar1;\n}\n",
        "token_count": 318
    },
    "00403b27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403b27(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    var_8h = arg_8h;\n    fcn.00403df5(1, &var_8h, fcn.004035e1);\n    return var_4h;\n}\n",
        "token_count": 87
    },
    "00403c02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00403c02(void)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404580(0x41b838, 0x98, 7, 0x18, &var_20h);\n    var_8h._0_2_ = 0;\n    uVar2 = (**0x41b78c)();\n    iVar3 = fcn.00403956(uVar2);\n    if (iVar3 == 0x4000) {\n        uVar2 = fcn.00403b27(&var_20h);\n        iVar3 = (**0x41b744)(0x2000000, 0, uVar2);\n        if (iVar3 != 0) {\n            iVar4 = (**0x41b628)(iVar3, 0xf01ff, &var_4h);\n            if (iVar4 != 0) {\n                iVar4 = (**0x41b7d4)(var_4h);\n                fcn.0040360e(iVar3);\n                fcn.0040360e(var_4h);\n                return iVar4 != 0;\n            }\n            fcn.0040360e(iVar3);\n        }\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    return bVar1;\n}\n",
        "token_count": 340
    },
    "00403cd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403cd5(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = (**0x41b69c)(0, 0);\n    if ((iVar1 != 0) && (arg_8h = fcn.0040352c(iVar1 << 2),  arg_8h != 0)) {\n        iVar2 = (**0x41b69c)(iVar1, arg_8h);\n        if ((iVar2 != 0) && (0 < iVar1)) {\n            do {\n                iVar2 = fcn.00403d32(*(arg_8h + iVar3 * 4));\n                if (iVar2 != 0) {\n                    return 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n        fcn.00403579(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 229
    },
    "00403d32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403d32(uint arg_8h)\n\n{\n    if (arg_8h - 0x18 < 0x2d) {\n    // switch table (45 cases) at 0x403d5a\n        switch(*(*(arg_8h + 0x403d4a) * 4 + 0x403d5a)) {\n        case 0x403d4f:\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 110
    },
    "00404029": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404029(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_58h;\n    uint var_2h;\n    \n    fcn.00404580(0x41b838, 0x26a, 7, 0x56, &var_58h);\n    var_2h._0_2_ = 0;\n    uVar2 = 0;\n    *0x41c03c = (**0x41b718)(0, 0, &var_58h);\n    if (*0x41c03c != 0) {\n        iVar1 = (**0x41b7a0)();\n        if (iVar1 == 0xb7) {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 206
    },
    "004044dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004044dd(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0x40000000;\n    if (arg_10h != 0) {\n        uVar2 = 0;\n    }\n    arg_8h_00 = (**0x41b7ac)(arg_8h, arg_ch, uVar2 | 1, 0, &arg_10h);\n    if (((arg_8h_00 != 0) && (arg_8h_00 = fcn.0040352c(arg_10h * 2),  arg_8h_00 != 0)) &&\n       (iVar1 = (**0x41b7ac)(arg_8h, arg_ch, uVar2 | 1, arg_8h_00, &arg_10h),  iVar1 == 0)) {\n        fcn.00403579(arg_8h_00);\n        arg_8h_00 = 0;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 267
    },
    "00404580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404580(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004050da(arg_8h + arg_ch, arg_10h, arg_8h + arg_ch + arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 92
    },
    "004045a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045a2(uint arg_8h, uint arg_ch, uint arg_10h, code *arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004049a7(arg_8h, &arg_ch, &var_4h);\n    while (iVar1 != 0) {\n        (*arg_14h)(arg_10h, iVar1);\n        arg_8h_00 = arg_8h;\n        if (iVar1 != 0) {\n            arg_8h_00 = 0;\n        }\n        iVar1 = fcn.004049a7(arg_8h_00, &arg_ch, &var_4h);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "004045ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004045ed(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_10h != 0) {\n        do {\n            iVar1 = fcn.0040462e(arg_8h, *(arg_ch + uVar2 * 8), *(arg_ch + 4 + uVar2 * 8));\n            if (iVar1 != 0) {\n                fcn.00403579(arg_8h);\n                arg_8h = iVar1;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 183
    },
    "00404748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404748(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        uVar1 = *arg_8h;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            *arg_8h = uVar1 | 0x20;\n        }\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "004047d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004047d9(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *arg_ch;\n    iVar1 = *arg_8h - uVar3;\n    if (iVar1 == 0) {\n        iVar2 = arg_8h - arg_ch;\n        do {\n            if (uVar3 == 0) break;\n            arg_ch = arg_ch + 1;\n            uVar3 = *arg_ch;\n            iVar1 = *(iVar2 + arg_ch) - uVar3;\n        } while (iVar1 == 0);\n    }\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    else if (0 < iVar1) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 204
    },
    "0040481a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040481a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004048d0(arg_ch);\n    fcn.0040358e(arg_8h, arg_ch, iVar1 + 1);\n    return arg_8h;\n}\n",
        "token_count": 74
    },
    "0040483a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040483a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004048e3(arg_ch);\n    fcn.0040358e(arg_8h, arg_ch, iVar1 * 2 + 2);\n    return arg_8h;\n}\n",
        "token_count": 77
    },
    "00404940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00404940(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (*arg_ch != 0) {\n        iVar1 = *arg_8h;\n        if (iVar1 != 0) {\n            iVar3 = arg_8h - arg_ch;\n            piVar2 = arg_ch;\njoined_r0x00404968:\n            do {\n                if (iVar1 != 0) {\n                    if (*piVar2 == 0) {\n                        return arg_8h;\n                    }\n                    if (*(iVar3 + piVar2) == *piVar2) {\n                        iVar1 = *(iVar3 + piVar2 + 1);\n                        piVar2 = piVar2 + 1;\n                        goto joined_r0x00404968;\n                    }\n                }\n                if (*piVar2 == 0) {\n                    return arg_8h;\n                }\n                arg_8h = arg_8h + 1;\n                iVar3 = iVar3 + 2;\n                iVar1 = *arg_8h;\n                piVar2 = arg_ch;\n            } while (iVar1 != 0);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 295
    },
    "004049a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004049a7(int16_t *arg_8h, int16_t *arg_ch, int16_t **arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int16_t iVar4;\n    \n    if (arg_8h == NULL) {\n        arg_8h = *arg_10h;\n    }\n    iVar4 = *arg_8h;\n    if (iVar4 != 0) {\n        iVar1 = *arg_ch;\n        piVar2 = arg_ch;\n        do {\n            while ((iVar1 != 0 && (iVar1 != iVar4))) {\n                iVar1 = piVar2[1];\n                piVar2 = piVar2 + 1;\n            }\n            if (*piVar2 == 0) break;\n            arg_8h = arg_8h + 1;\n            iVar4 = *arg_8h;\n            iVar1 = *arg_ch;\n            piVar2 = arg_ch;\n        } while (iVar4 != 0);\n    }\n    piVar2 = arg_8h;\n    if (*arg_8h != 0) {\n        do {\n            piVar3 = arg_ch;\n            if (*arg_ch != 0) {\n                iVar4 = *arg_ch;\n                do {\n                    if (iVar4 == *piVar2) break;\n                    piVar3 = piVar3 + 1;\n                    iVar4 = *piVar3;\n                } while (iVar4 != 0);\n            }\n            if (*piVar3 != 0) {\n                *piVar2 = 0;\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            piVar2 = piVar2 + 1;\n        } while (*piVar2 != 0);\n    }\n    *arg_10h = piVar2;\n    if (arg_8h == piVar2) {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 446
    },
    "00404a9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a9d(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *arg_ch;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_8h[1] != 0) {\n        do {\n            arg_ch = *(arg_8h[2] + uVar2 * 4);\n            while (arg_ch != NULL) {\n                piVar1 = arg_ch[2];\n                if (*arg_ch != 0) {\n                    fcn.00403579(*arg_ch);\n                }\n                if (arg_ch[1] != 0) {\n                    fcn.00403579(arg_ch[1]);\n                }\n                fcn.00403516(*arg_8h, arg_ch);\n                arg_ch = piVar1;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_8h[1]);\n    }\n    fcn.00403516(*arg_8h, arg_8h[2]);\n    fcn.00403508(*arg_8h);\n    return;\n}\n",
        "token_count": 253
    },
    "00404d6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404d6d(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar5 = 0;\n    if (*(arg_8h + 8) != 0) {\n        iVar4 = 0;\n        do {\n            arg_8h_00 = *(*(arg_8h + 0xc) + iVar4);\n            iVar3 = *(*(arg_8h + 0xc) + 8 + iVar4);\n            var_4h = 0;\n            puVar1 = arg_ch;\n            if (0 < arg_10h) {\n                do {\n                    iVar2 = fcn.00404797(arg_8h_00, *puVar1);\n                    if ((iVar2 == 0) && (*(iVar3 + 4) == puVar1[1])) {\n                        iVar3 = (*arg_ch[var_4h * 3 + 2])(iVar3);\n                        if (iVar3 == 0) {\n                            return 0;\n                        }\n                        break;\n                    }\n                    var_4h = var_4h + 1;\n                    puVar1 = puVar1 + 3;\n                } while (var_4h < arg_10h);\n            }\n            uVar5 = uVar5 + 1;\n            iVar4 = iVar4 + 0xc;\n        } while (uVar5 < *(arg_8h + 8));\n    }\n    return 1;\n}\n",
        "token_count": 391
    },
    "00404e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404e24(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    \n    var_20h._0_1_ = 9;\n    puVar2 = &var_20h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.0040791b(arg_ch, arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 178
    },
    "00404e7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e7b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040791b(arg_10h, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 54
    },
    "00404e91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00404e91(uint arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t arg_10h_00;\n    uint var_114h;\n    uint var_20h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    iVar1 = fcn.004062c7(&var_114h, arg_ch, arg_8h);\n    if (iVar1 != 0) {\n        var_10h = *arg_10h;\n        uStack16 = arg_10h[1];\n        uStack12 = arg_10h[2];\n        _auStack8 = arg_10h[3];\n        if (arg_18h != 0) {\n            do {\n                fcn.004062ab(&var_114h, &var_10h, &var_20h);\n                arg_10h_00 = 0x10;\n                if (arg_18h < 0x10) {\n                    arg_10h_00 = arg_18h;\n                }\n                fcn.004050b5(arg_14h, &var_20h, arg_10h_00);\n                arg_14h = arg_14h + arg_10h_00;\n                arg_18h = arg_18h - arg_10h_00;\n                for (puVar2 = &var_1h; *puVar2 = *puVar2 + '\\x01',  *puVar2 == '\\0'; puVar2 = puVar2 + -1) {\n                }\n            } while (arg_18h != 0);\n        }\n        fcn.004051ae(&var_114h, 0xf4);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 462
    },
    "00404f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404f64(void)\n\n{\n    int32_t iVar1;\n    uint arg_18h;\n    uint var_44h;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.00403e6c(&var_44h, 0x30);\n    if (iVar1 != 0) {\n        fcn.00404580(0x41b838, 0x1cf, 4, 0x10, &var_14h);\n        var_4h._0_1_ = 0;\n        arg_18h = fcn.004048d0(&var_14h);\n        iVar1 = fcn.0040648b(0x41c050, &var_44h, 0x30, &var_14h, arg_18h);\n        if (iVar1 != 0) {\n            fcn.004051ae(&var_44h, 0x30);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0040506a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040506a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_20h;\n    \n    fcn.00404e7b(arg_8h, arg_ch, &var_20h);\n    fcn.00409aae(arg_10h, 0x20, &var_20h, 0x20);\n    fcn.004051ae(&var_20h, 0x20);\n    return;\n}\n",
        "token_count": 110
    },
    "004050a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050a1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    \n    for (pcVar1 = arg_8h + -1 + arg_ch; *pcVar1 = *pcVar1 + '\\x01',  *pcVar1 == '\\0'; pcVar1 = pcVar1 + -1) {\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "004050da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.004050da(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint8_t *arg_14h, uint8_t *arg_18h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    iVar3 = arg_14h;\n    uVar4 = 0;\n    uVar2 = 0;\n    do {\n        *(&var_104h + uVar2) = uVar2;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x100);\n    uVar2 = 0;\n    do {\n        uVar1 = *(&var_104h + uVar2);\n        uVar4 = uVar1 + *(uVar2 % arg_ch + arg_8h) + uVar4 & 0xff;\n        *(&var_104h + uVar2) = *(&var_104h + uVar4);\n        uVar2 = uVar2 + 1;\n        *(&var_104h + uVar4) = uVar1;\n    } while (uVar2 < 0x100);\n    uVar2 = 0;\n    var_4h = 0;\n    if (arg_14h != NULL) {\n        arg_14h = arg_18h;\n        do {\n            uVar4 = var_4h + 1 & 0xff;\n            var_4h = uVar4;\n            uVar1 = *(&var_104h + uVar4);\n            uVar2 = uVar1 + uVar2 & 0xff;\n            *(&var_104h + uVar4) = *(&var_104h + uVar2);\n            *(&var_104h + uVar2) = uVar1;\n            *arg_14h = *(&var_104h + *(&var_104h + uVar4) + uVar1) ^ arg_14h[arg_10h - arg_18h];\n            arg_14h = arg_14h + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return arg_18h;\n}\n",
        "token_count": 528
    },
    "004051ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051ae(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004035b3(arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 44
    },
    "004051c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004051c3(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint *arg_14h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_74h;\n    uint var_54h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    \n    *arg_14h = 0;\n    if (arg_10h == 0) {\n        arg_14h_00 = NULL;\n    }\n    else {\n        arg_14h_00 = fcn.0040352c(arg_10h + 0x38);\n        if (arg_14h_00 != NULL) {\n            *arg_14h_00 = 0;\n            fcn.0040358e(arg_14h_00 + 1, arg_ch, arg_10h);\n            fcn.00404e00(&var_20h, &var_74h);\n            fcn.0040506a(&var_20h, arg_8h, &var_40h);\n            fcn.004051ae(&var_20h, 0x20);\n            fcn.00404fd3(&var_54h, 0x10);\n            fcn.00404e91(&var_40h, 0x100, &var_54h, arg_14h_00, arg_10h + 4);\n            fcn.004051ae(&var_40h, 0x20);\n            var_44h = fcn.00404f24(0, arg_14h_00, arg_10h + 4);\n            puVar2 = &var_74h;\n            puVar3 = arg_10h + 4 + arg_14h_00;\n            for (iVar1 = 0xd; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            *arg_14h = arg_10h + 0x38;\n        }\n    }\n    return arg_14h_00;\n}\n",
        "token_count": 516
    },
    "0040528c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040528c(uint8_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x2b;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        iVar1 = iVar1 * 0x10f + *arg_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 94
    },
    "00405306": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405306(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00404580(0x41b838, 0xdc, 0xe, 0xc, &var_10h);\n    var_4h._0_1_ = 0;\n    puVar2 = &var_10h;\n    pcVar1 = fcn.004054ad(0x57820074);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 139
    },
    "0040533f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040533f(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.00404580(0x41b838, 0x256, 4, 0xb, &var_ch);\n    var_1h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.004054ad(0x57820074);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 150
    },
    "00405378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405378(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_3h;\n    \n    fcn.00404580(0x41b838, 0x740, 0xd, 9, &var_ch);\n    var_3h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.004054ad(0x57820074);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 149
    },
    "004053bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004053bd(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    fcn.00404580(0x41b838, 0x5bf, 0xd, 7, &var_8h);\n    _auStack8 = _auStack8 & 0xffffff;\n    puVar2 = &var_8h;\n    pcVar1 = fcn.004054ad(0x57820074);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 155
    },
    "00405401": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405401(void)\n\n{\n    uint var_ch;\n    uint var_3h;\n    \n    fcn.00404580(0x41b838, 0x1ea, 4, 9, &var_ch);\n    var_3h._0_1_ = 0;\n    fcn.00405700(&var_ch);\n    return;\n}\n",
        "token_count": 109
    },
    "00405432": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00405432(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    uint16_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00403b20();\n    ppiVar5 = *(iVar2 + 0xc) + 0x14;\n    ppiVar4 = *ppiVar5;\n    if (ppiVar4 != ppiVar5) {\n        do {\n            piVar1 = ppiVar4[10];\n            uVar3 = 0x2b;\n            uVar6 = *piVar1;\n            while (uVar6 != 0) {\n                piVar1 = piVar1 + 2;\n                if (uVar6 - 0x41 < 0x1a) {\n                    uVar6 = uVar6 | 0x20;\n                }\n                uVar3 = uVar3 * 0x10f + uVar6;\n                uVar6 = *piVar1;\n            }\n            if (uVar3 == (arg_8h ^ 0x55d53cd6)) {\n                return ppiVar4[4];\n            }\n            ppiVar4 = *ppiVar4;\n        } while (ppiVar4 != ppiVar5);\n    }\n    return NULL;\n}\n",
        "token_count": 333
    },
    "004055e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004055e6(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.00404580(0x41b838, 0x2cd, 0xf, 0xb, &var_ch);\n    var_1h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.004054ad(0x57820074);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 152
    },
    "0040561f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040561f(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.00404580(0x41b838, 0x62d, 5, 0xb, &var_ch);\n    var_1h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.004054ad(0x57820074);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 151
    },
    "00405658": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405658(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_2h;\n    \n    fcn.00404580(0x41b838, 0x41f, 9, 10, &var_ch);\n    var_2h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.004054ad(0x57820074);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 149
    },
    "00405691": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405691(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.00404580(0x41b838, 0x719, 0xf, 0xb, &var_ch);\n    var_1h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.004054ad(0x57820074);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 150
    },
    "004056ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004056ca(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_3h;\n    \n    fcn.00404580(0x41b838, 0x57, 6, 9, &var_ch);\n    var_3h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.004054ad(0x57820074);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 148
    },
    "0040573a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040573a(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *arg_ch = 1;\n    uVar3 = 0;\n    uVar1 = fcn.00403dc1();\n    if ((uVar1 & 0x7fffffff) != 0) {\n        do {\n            (**0x41b724)(arg_8h[1], 0, 0, 0);\n            uVar3 = uVar3 + 1;\n            iVar2 = fcn.00403dc1();\n        } while (uVar3 < iVar2 * 2);\n    }\n    while (arg_8h[2] != 0) {\n        fcn.004040e1(100);\n    }\n    fcn.00403508(*arg_8h);\n    fcn.0040360e(arg_8h[1]);\n    return;\n}\n",
        "token_count": 222
    },
    "00405799": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405799(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    *(arg_8h + 8) = 0;\n    uVar1 = fcn.00403dc1();\n    if ((uVar1 & 0x7fffffff) != 0) {\n        do {\n            iVar2 = (**0x41b698)(0, 0, arg_ch, arg_8h, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            *(arg_8h + 8) = *(arg_8h + 8) + 1;\n            fcn.0040360e(iVar2);\n            uVar3 = uVar3 + 1;\n            iVar2 = fcn.00403dc1();\n        } while (uVar3 < iVar2 * 2);\n    }\n    return 1;\n}\n",
        "token_count": 232
    },
    "00405940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405940(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(arg_8h + 8);\n    *(arg_8h + 8) = uVar1 + arg_ch;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + arg_10h + CARRY4(uVar1, arg_ch);\n    return;\n}\n",
        "token_count": 116
    },
    "00405ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405ba0(int32_t arg_8h)\n\n{\n    return arg_8h - 2U < 3;\n}\n",
        "token_count": 35
    },
    "00405bde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405bde(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_2h;\n    \n    arg_8h_00 = fcn.0040352c(0xfffe);\n    if (arg_8h_00 != 0) {\n        fcn.00404580(0x41b838, 0x2f7, 0xc, 0xe, &var_10h);\n        var_2h._0_2_ = 0;\n        fcn.0040483a(arg_8h_00, &var_10h);\n        fcn.00404776(arg_8h_00, arg_8h + 2);\n        fcn.00404776(arg_8h_00, 0x40b24c);\n        fcn.00405974(arg_8h_00, arg_ch);\n        fcn.00403579(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "00405c4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c4c(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    puVar3 = fcn.0040352c(8);\n    if (puVar3 != NULL) {\n        uVar4 = fcn.00404895(arg_ch);\n        puVar3[1] = 0;\n        *puVar3 = uVar4;\n        if ((arg_8h[2] | arg_8h[3]) == 0) {\n            *arg_8h = puVar3;\n        }\n        else {\n            *(arg_8h[1] + 4) = puVar3;\n        }\n        arg_8h[1] = puVar3;\n        puVar1 = arg_8h + 2;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + 1;\n        arg_8h[3] = arg_8h[3] + (0xfffffffe < uVar2);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "004060f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004060f4(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_18h;\n    uint var_3h;\n    \n    uVar2 = 0;\n    do {\n        uVar1 = fcn.004054ad(*(uVar2 + 0x41b628));\n        *(uVar2 + 0x41b628) = uVar1;\n        uVar2 = uVar2 + 4;\n    } while (uVar2 < 0x210);\n    fcn.00404580(0x41b838, 0x26, 9, 0x15, &var_18h);\n    var_3h._0_1_ = 0;\n    uVar1 = fcn.00405401(&var_18h);\n    *0x41b740 = (**0x41b660)(uVar1);\n    return;\n}\n",
        "token_count": 231
    },
    "004060f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060f9(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    \n    iVar1 = fcn.00406154();\n    if (iVar1 == 0) {\n        return;\n    }\n    iVar1 = fcn.00403d8f();\n    if (iVar1 == 0) {\n        arg_ch = 0x414850;\n        arg_10h = 0x3600;\n    }\n    else {\n        arg_ch = 0x40b250;\n        arg_10h = 0x9600;\n    }\n    arg_8h_00 = (**0x41b834)(0, arg_10h, 0x3000, 0x40);\n    if (arg_8h_00 != NULL) {\n        fcn.0040358e(arg_8h_00, arg_ch, arg_10h);\n        (*arg_8h_00)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "004062ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062ab(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00406998(arg_8h + 1, *arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "004062c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004062c7(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406ebb(arg_8h + 1, arg_10h, arg_ch);\n    *arg_8h = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 84
    },
    "004062ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004062ee(uint *arg_8h, uint *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_40h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    arg_8h_00 = arg_8h;\n    if ((*(arg_8h + 0x118) == 0) || (0x10000 < arg_10h)) {\n        return 0;\n    }\n    if (arg_18h == 0) {\n        fcn.004035b3(&var_40h, 0, 0x30);\n    }\n    else {\n        if (0x30 < arg_18h) {\n            return 0;\n        }\n        fcn.0040358e(&var_40h, arg_14h, arg_18h);\n        if (arg_18h != 0x30) {\n            fcn.004035b3(&var_40h + arg_18h, 0, 0x30 - arg_18h);\n        }\n        fcn.00406598(arg_8h, &var_40h);\n    }\n    if (*(arg_8h + 0x11c) == 0) {\n        fcn.004050a1(arg_8h + 0xf8, 0x10);\n        fcn.004062ab(arg_8h, arg_8h + 0xf8, arg_8h + 0x108);\n        *(arg_8h + 0x11c) = 1;\n    }\n    if (arg_10h < 0x10) {\n        arg_8h = arg_ch;\n    }\n    else {\n        arg_8h = arg_ch;\n        do {\n            iVar1 = 0;\n            fcn.004050a1(arg_8h_00 + 0xf8, 0x10);\n            fcn.004062ab(arg_8h_00, arg_8h_00 + 0xf8, arg_8h);\n            while (arg_8h[iVar1] == (arg_8h_00 + 0x108)[iVar1]) {\n                iVar1 = iVar1 + 1;\n                if (iVar1 == 4) {\n                    return 0;\n                }\n            }\n            arg_10h = arg_10h - 0x10;\n            *(arg_8h_00 + 0x108) = *arg_8h;\n            *(arg_8h_00 + 0x10c) = arg_8h[1];\n            *(arg_8h_00 + 0x110) = arg_8h[2];\n            *(arg_8h_00 + 0x114) = arg_8h[3];\n            arg_8h = arg_8h + 4;\n        } while (0xf < arg_10h);\n    }\n    iVar1 = 0;\n    if (arg_10h == 0) {\ncode_r0x0040645c:\n        if (*(arg_8h_00 + 0xf4) < 0x1000001) {\n            *(arg_8h_00 + 0xf4) = *(arg_8h_00 + 0xf4) + 1;\n            fcn.00406598(arg_8h_00, &var_40h);\n            return 1;\n        }\n    }\n    else {\n        fcn.004050a1(arg_8h_00 + 0xf8, 0x10);\n        fcn.004062ab(arg_8h_00, arg_8h_00 + 0xf8, &var_10h);\n        do {\n            if ((&var_10h)[iVar1] != (arg_8h_00 + 0x108)[iVar1]) {\n                *(arg_8h_00 + 0x108) = var_10h;\n                *(arg_8h_00 + 0x10c) = uStack16;\n                *(arg_8h_00 + 0x110) = uStack12;\n                *(arg_8h_00 + 0x114) = uStack8;\n                fcn.0040358e(arg_8h, &var_10h, arg_10h);\n                goto code_r0x0040645c;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 4);\n    }\n    return 0;\n}\n",
        "token_count": 1032
    },
    "0040648b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040648b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    \n    fcn.004035b3(arg_8h, 0, 0x120);\n    puVar2 = &var_20h;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.004062c7(arg_8h, 0x100, &var_20h);\n    fcn.00406520(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 200
    },
    "004064d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004064d8(uint arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    \n    if (arg_10h != 0) {\n        do {\n            arg_10h_00 = arg_10h;\n            if (0x10000 < arg_10h) {\n                arg_10h_00 = 0x10000;\n            }\n            iVar1 = fcn.004062ee(arg_8h, arg_ch, arg_10h_00, 0, 0);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            arg_ch = arg_ch + arg_10h_00;\n            arg_10h = arg_10h - arg_10h_00;\n        } while (arg_10h != 0);\n    }\n    return 1;\n}\n",
        "token_count": 209
    },
    "00406604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406604(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t var_4h;\n    \n    if (arg_14h != 0) {\n        var_4h = arg_ch - &var_44h;\n        uVar4 = arg_14h;\n        arg_14h = arg_10h - &var_44h;\n        while( true ) {\n            uVar5 = 0;\n            fcn.0040673a(&var_44h, arg_8h);\n            iVar2 = var_4h;\n            piVar1 = arg_8h + 0x20;\n            *piVar1 = *piVar1 + 1;\n            if (*piVar1 == 0) {\n                *(arg_8h + 0x24) = *(arg_8h + 0x24) + 1;\n            }\n            if (uVar4 < 0x41) break;\n            uVar5 = 0;\n            do {\n                puVar3 = &var_44h + uVar5;\n                uVar5 = uVar5 + 1;\n                puVar3[arg_14h] = puVar3[iVar2] ^ *puVar3;\n            } while (uVar5 < 0x40);\n            uVar4 = uVar4 - 0x40;\n            arg_14h = arg_14h + 0x40;\n            arg_10h = arg_10h + 0x40;\n            arg_ch = arg_ch + 0x40;\n            var_4h = var_4h + 0x40;\n        }\n        if (uVar4 != 0) {\n            do {\n                puVar3 = &var_44h + uVar5;\n                uVar5 = uVar5 + 1;\n                puVar3[arg_10h - &var_44h] = puVar3[arg_ch - &var_44h] ^ *puVar3;\n            } while (uVar5 < uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "004066cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066cb(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    arg_8h[1] = *arg_ch;\n    arg_8h[2] = arg_ch[1];\n    arg_8h[3] = arg_ch[2];\n    arg_8h[4] = arg_ch[3];\n    if (arg_10h == 0x100) {\n        arg_ch = arg_ch + 4;\n        *0x41c18c = str.expand_32_byte_kexpand_16_byte_k;\n    }\n    else {\n        *0x41c18c = str.expand_32_byte_kexpand_16_byte_k + 0x10;\n    }\n    arg_8h[0xb] = *arg_ch;\n    arg_8h[0xc] = arg_ch[1];\n    arg_8h[0xd] = arg_ch[2];\n    arg_8h[0xe] = arg_ch[3];\n    *arg_8h = **0x41c18c;\n    arg_8h[5] = *(*0x41c18c + 4);\n    arg_8h[10] = *(*0x41c18c + 8);\n    arg_8h[0xf] = *(*0x41c18c + 0xc);\n    return;\n}\n",
        "token_count": 304
    },
    "0040754c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040754c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_190h;\n    uint var_140h;\n    uint var_f0h;\n    uint var_a0h;\n    uint var_50h;\n    \n    fcn.0040896f(&var_f0h, arg_ch);\n    fcn.0040896f(&var_a0h, &var_f0h);\n    fcn.0040896f(&var_50h, &var_a0h);\n    fcn.00408191(&var_140h, &var_50h, arg_ch);\n    fcn.00408191(&var_190h, &var_140h, &var_f0h);\n    fcn.0040896f(&var_50h, &var_190h);\n    fcn.00408191(&var_f0h, &var_50h, &var_140h);\n    fcn.0040896f(&var_50h, &var_f0h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    fcn.0040896f(&var_50h, &var_a0h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    fcn.0040896f(&var_50h, &var_a0h);\n    fcn.00408191(&var_140h, &var_50h, &var_f0h);\n    fcn.0040896f(&var_50h, &var_140h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    iVar2 = 4;\n    iVar1 = iVar2;\n    do {\n        fcn.0040896f(&var_50h, &var_a0h);\n        fcn.0040896f(&var_a0h, &var_50h);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00408191(&var_f0h, &var_a0h, &var_140h);\n    fcn.0040896f(&var_50h, &var_f0h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    iVar1 = 9;\n    do {\n        fcn.0040896f(&var_50h, &var_a0h);\n        fcn.0040896f(&var_a0h, &var_50h);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00408191(&var_50h, &var_a0h, &var_f0h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    fcn.0040896f(&var_50h, &var_a0h);\n    do {\n        fcn.0040896f(&var_a0h, &var_50h);\n        fcn.0040896f(&var_50h, &var_a0h);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.00408191(&var_f0h, &var_50h, &var_140h);\n    fcn.0040896f(&var_50h, &var_f0h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    iVar2 = 0x18;\n    iVar1 = iVar2;\n    do {\n        fcn.0040896f(&var_50h, &var_a0h);\n        fcn.0040896f(&var_a0h, &var_50h);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00408191(&var_140h, &var_a0h, &var_f0h);\n    fcn.0040896f(&var_a0h, &var_140h);\n    fcn.0040896f(&var_50h, &var_a0h);\n    iVar1 = 0x31;\n    do {\n        fcn.0040896f(&var_a0h, &var_50h);\n        fcn.0040896f(&var_50h, &var_a0h);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00408191(&var_a0h, &var_50h, &var_140h);\n    fcn.0040896f(&var_50h, &var_a0h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    do {\n        fcn.0040896f(&var_50h, &var_a0h);\n        fcn.0040896f(&var_a0h, &var_50h);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.00408191(&var_50h, &var_a0h, &var_f0h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    fcn.0040896f(&var_50h, &var_a0h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    fcn.0040896f(&var_50h, &var_a0h);\n    fcn.0040896f(&var_a0h, &var_50h);\n    fcn.00408191(arg_8h, &var_a0h, &var_190h);\n    return;\n}\n",
        "token_count": 1288
    },
    "00407f4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00407f4b(uint arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h, uint arg_1ch, uint *arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    ulong uVar5;\n    uint var_1c8h;\n    uint var_180h;\n    uint var_130h;\n    uint auStack304 [19];\n    uint var_e0h;\n    uint var_98h;\n    uint auStack152 [37];\n    \n    puVar2 = arg_18h;\n    puVar4 = &var_180h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.00408cdf(arg_18h, arg_1ch);\n    fcn.00407c4a(arg_1ch, &var_180h);\n    puVar2 = arg_20h;\n    puVar4 = &var_180h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.00408cdf(arg_20h, arg_24h);\n    fcn.00407c4a(arg_24h, &var_180h);\n    fcn.004081dd(&var_130h, arg_20h, arg_1ch);\n    fcn.004081dd(&var_98h, arg_18h, arg_24h);\n    fcn.004087bf(&var_130h);\n    fcn.004086ab(&var_130h);\n    fcn.004087bf(&var_98h);\n    fcn.004086ab(&var_98h);\n    puVar2 = &var_130h;\n    puVar4 = &var_180h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.00408cdf(&var_130h, &var_98h);\n    fcn.00407c4a(&var_98h, &var_180h);\n    fcn.0040896f(&var_1c8h, &var_130h);\n    fcn.0040896f(&var_130h, &var_98h);\n    fcn.004081dd(&var_98h, &var_130h, arg_28h);\n    fcn.004087bf(&var_98h);\n    fcn.004086ab(&var_98h);\n    puVar2 = &var_1c8h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_10h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_10h = arg_10h + 1;\n    }\n    puVar2 = &var_98h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_14h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_14h = arg_14h + 1;\n    }\n    fcn.0040896f(&var_1c8h, arg_18h);\n    fcn.0040896f(&var_98h, arg_1ch);\n    puVar2 = &var_1c8h;\n    fcn.004081dd(arg_8h, puVar2, &var_98h);\n    fcn.004087bf(arg_8h);\n    fcn.004086ab(arg_8h);\n    fcn.00407c4a(&var_98h, &var_1c8h);\n    fcn.004035b3(&var_e0h, 0, 0x48);\n    uVar3 = 0;\n    do {\n        uVar5 = fcn.0040a940(puVar2, *(auStack152 + uVar3), 0x1db41, 0, *(auStack152 + (uVar3 - 4)));\n        *(auStack304 + (uVar3 - 4)) = uVar5;\n        *(auStack304 + uVar3) = uVar5 >> 0x20;\n        uVar3 = uVar3 + 8;\n    } while (uVar3 < 0x50);\n    fcn.004086ab(&var_130h);\n    fcn.00408cdf(&var_130h, &var_1c8h);\n    fcn.004081dd(arg_ch, &var_98h, &var_130h);\n    fcn.004087bf(arg_ch);\n    fcn.004086ab(arg_ch);\n    return;\n}\n",
        "token_count": 1226
    },
    "00408191": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408191(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_98h;\n    \n    fcn.004081dd(&var_98h, arg_ch, arg_10h);\n    fcn.004087bf(&var_98h);\n    fcn.004086ab(&var_98h);\n    puVar2 = &var_98h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_8h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "004081dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004081dd(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t uVar28;\n    uint32_t uVar29;\n    uint32_t uVar30;\n    uint32_t uVar31;\n    uint32_t uVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    uint32_t uVar35;\n    uint32_t uVar36;\n    uint32_t uVar37;\n    uint32_t uVar38;\n    \n    iVar1 = *arg_ch;\n    iVar2 = *arg_10h;\n    *arg_8h = iVar1 * iVar2;\n    arg_8h[1] = iVar1 * iVar2 >> 0x20;\n    iVar1 = arg_ch[2];\n    iVar2 = *arg_10h;\n    uVar21 = iVar1 * iVar2;\n    iVar3 = *arg_ch;\n    iVar4 = arg_10h[2];\n    uVar22 = iVar3 * iVar4;\n    arg_8h[2] = uVar21 + uVar22;\n    arg_8h[3] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22);\n    iVar1 = arg_ch[2];\n    iVar2 = arg_10h[2];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = *arg_ch;\n    iVar4 = arg_10h[4];\n    uVar23 = iVar3 * iVar4;\n    uVar21 = uVar22 * 2;\n    uVar25 = uVar21 + uVar23;\n    iVar5 = arg_ch[4];\n    iVar6 = *arg_10h;\n    uVar24 = iVar5 * iVar6;\n    arg_8h[4] = uVar25 + uVar24;\n    arg_8h[5] = ((iVar1 * iVar2 >> 0x20) << 1 | uVar22 >> 0x1f) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar23) +\n                (iVar5 * iVar6 >> 0x20) + CARRY4(uVar25, uVar24);\n    iVar1 = *arg_ch;\n    iVar2 = arg_10h[6];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[2];\n    iVar4 = arg_10h[4];\n    uVar22 = iVar3 * iVar4;\n    uVar25 = uVar21 + uVar22;\n    iVar5 = arg_ch[4];\n    iVar6 = arg_10h[2];\n    uVar23 = iVar5 * iVar6;\n    uVar26 = uVar25 + uVar23;\n    iVar7 = arg_ch[6];\n    iVar8 = *arg_10h;\n    uVar24 = iVar7 * iVar8;\n    arg_8h[6] = uVar26 + uVar24;\n    arg_8h[7] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20) +\n                CARRY4(uVar25, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar26, uVar24);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[2];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[2];\n    iVar4 = arg_10h[6];\n    uVar23 = iVar3 * iVar4;\n    uVar27 = uVar22 + uVar23;\n    iVar5 = arg_ch[4];\n    iVar6 = arg_10h[4];\n    uVar24 = iVar5 * iVar6;\n    uVar21 = uVar27 * 2;\n    uVar28 = uVar21 + uVar24;\n    iVar7 = arg_ch[8];\n    iVar8 = *arg_10h;\n    uVar25 = iVar7 * iVar8;\n    uVar29 = uVar28 + uVar25;\n    iVar9 = *arg_ch;\n    iVar10 = arg_10h[8];\n    uVar26 = iVar9 * iVar10;\n    arg_8h[8] = uVar29 + uVar26;\n    arg_8h[9] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23)) * 2 | uVar27 >> 0x1f) +\n                (iVar5 * iVar6 >> 0x20) + CARRY4(uVar21, uVar24) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar28, uVar25) +\n                (iVar9 * iVar10 >> 0x20) + CARRY4(uVar29, uVar26);\n    iVar1 = *arg_ch;\n    iVar2 = arg_10h[10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[2];\n    iVar4 = arg_10h[8];\n    uVar22 = iVar3 * iVar4;\n    uVar27 = uVar21 + uVar22;\n    iVar5 = arg_ch[6];\n    iVar6 = arg_10h[4];\n    uVar23 = iVar5 * iVar6;\n    uVar28 = uVar27 + uVar23;\n    iVar7 = arg_ch[8];\n    iVar8 = arg_10h[2];\n    uVar24 = iVar7 * iVar8;\n    uVar29 = uVar28 + uVar24;\n    iVar9 = arg_ch[10];\n    iVar10 = *arg_10h;\n    uVar25 = iVar9 * iVar10;\n    uVar30 = uVar29 + uVar25;\n    iVar11 = arg_ch[4];\n    iVar12 = arg_10h[6];\n    uVar26 = iVar11 * iVar12;\n    arg_8h[10] = uVar30 + uVar26;\n    arg_8h[0xb] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20) +\n                  CARRY4(uVar27, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar28, uVar24) + (iVar9 * iVar10 >> 0x20) +\n                  CARRY4(uVar29, uVar25) + (iVar11 * iVar12 >> 0x20) + CARRY4(uVar30, uVar26);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[6];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[10];\n    iVar4 = arg_10h[2];\n    uVar23 = iVar3 * iVar4;\n    uVar29 = uVar22 + uVar23;\n    iVar5 = arg_ch[2];\n    iVar6 = arg_10h[10];\n    uVar24 = iVar5 * iVar6;\n    uVar30 = uVar29 + uVar24;\n    iVar7 = arg_ch[8];\n    iVar8 = arg_10h[4];\n    uVar25 = iVar7 * iVar8;\n    uVar21 = uVar30 * 2;\n    uVar31 = uVar21 + uVar25;\n    iVar9 = *arg_ch;\n    iVar10 = arg_10h[0xc];\n    uVar26 = iVar9 * iVar10;\n    uVar32 = uVar31 + uVar26;\n    iVar11 = arg_ch[0xc];\n    iVar12 = *arg_10h;\n    uVar27 = iVar11 * iVar12;\n    uVar33 = uVar32 + uVar27;\n    iVar13 = arg_ch[4];\n    iVar14 = arg_10h[8];\n    uVar28 = iVar13 * iVar14;\n    arg_8h[0xc] = uVar33 + uVar28;\n    arg_8h[0xd] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar29, uVar24)) * 2 | uVar30 >> 0x1f) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar21, uVar25) +\n                  (iVar9 * iVar10 >> 0x20) + CARRY4(uVar31, uVar26) + (iVar11 * iVar12 >> 0x20) + CARRY4(uVar32, uVar27)\n                  + (iVar13 * iVar14 >> 0x20) + CARRY4(uVar33, uVar28);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[8];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[4];\n    iVar4 = arg_10h[10];\n    uVar22 = iVar3 * iVar4;\n    uVar29 = uVar21 + uVar22;\n    iVar5 = arg_ch[10];\n    iVar6 = arg_10h[4];\n    uVar23 = iVar5 * iVar6;\n    uVar30 = uVar29 + uVar23;\n    iVar7 = arg_ch[0xc];\n    iVar8 = arg_10h[2];\n    uVar24 = iVar7 * iVar8;\n    uVar31 = uVar30 + uVar24;\n    iVar9 = arg_ch[8];\n    iVar10 = arg_10h[6];\n    uVar25 = iVar9 * iVar10;\n    uVar32 = uVar31 + uVar25;\n    iVar11 = *arg_ch;\n    iVar12 = arg_10h[0xe];\n    uVar26 = iVar11 * iVar12;\n    uVar33 = uVar32 + uVar26;\n    iVar13 = arg_ch[2];\n    iVar14 = arg_10h[0xc];\n    uVar27 = iVar13 * iVar14;\n    uVar34 = uVar33 + uVar27;\n    iVar15 = arg_ch[0xe];\n    iVar16 = *arg_10h;\n    uVar28 = iVar15 * iVar16;\n    arg_8h[0xe] = uVar34 + uVar28;\n    arg_8h[0xf] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20) +\n                  CARRY4(uVar29, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar30, uVar24) + (iVar9 * iVar10 >> 0x20) +\n                  CARRY4(uVar31, uVar25) + (iVar11 * iVar12 >> 0x20) + CARRY4(uVar32, uVar26) +\n                  (iVar13 * iVar14 >> 0x20) + CARRY4(uVar33, uVar27) + (iVar15 * iVar16 >> 0x20) +\n                  CARRY4(uVar34, uVar28);\n    iVar1 = arg_ch[0xe];\n    iVar2 = arg_10h[2];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[2];\n    iVar4 = arg_10h[0xe];\n    uVar23 = iVar3 * iVar4;\n    uVar31 = uVar22 + uVar23;\n    iVar5 = arg_ch[6];\n    iVar6 = arg_10h[10];\n    uVar24 = iVar5 * iVar6;\n    uVar32 = uVar31 + uVar24;\n    iVar7 = arg_ch[10];\n    iVar8 = arg_10h[6];\n    uVar25 = iVar7 * iVar8;\n    uVar33 = uVar32 + uVar25;\n    iVar9 = arg_ch[4];\n    iVar10 = arg_10h[0xc];\n    uVar26 = iVar9 * iVar10;\n    uVar21 = uVar33 * 2;\n    uVar34 = uVar21 + uVar26;\n    iVar11 = arg_ch[8];\n    iVar12 = arg_10h[8];\n    uVar27 = iVar11 * iVar12;\n    uVar35 = uVar34 + uVar27;\n    iVar13 = *arg_ch;\n    iVar14 = arg_10h[0x10];\n    uVar28 = iVar13 * iVar14;\n    uVar36 = uVar35 + uVar28;\n    iVar15 = arg_ch[0xc];\n    iVar16 = arg_10h[4];\n    uVar29 = iVar15 * iVar16;\n    uVar37 = uVar36 + uVar29;\n    iVar17 = arg_ch[0x10];\n    iVar18 = *arg_10h;\n    uVar30 = iVar17 * iVar18;\n    arg_8h[0x10] = uVar37 + uVar30;\n    arg_8h[0x11] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) +\n                     (iVar5 * iVar6 >> 0x20) + CARRY4(uVar31, uVar24) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar32, uVar25)\n                    ) * 2 | uVar33 >> 0x1f) + (iVar9 * iVar10 >> 0x20) + CARRY4(uVar21, uVar26) +\n                   (iVar11 * iVar12 >> 0x20) + CARRY4(uVar34, uVar27) + (iVar13 * iVar14 >> 0x20) +\n                   CARRY4(uVar35, uVar28) + (iVar15 * iVar16 >> 0x20) + CARRY4(uVar36, uVar29) +\n                   (iVar17 * iVar18 >> 0x20) + CARRY4(uVar37, uVar30);\n    iVar1 = arg_ch[8];\n    iVar2 = arg_10h[10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0x10];\n    iVar4 = arg_10h[2];\n    uVar22 = iVar3 * iVar4;\n    uVar31 = uVar21 + uVar22;\n    iVar5 = *arg_ch;\n    iVar6 = arg_10h[0x12];\n    uVar23 = iVar5 * iVar6;\n    uVar32 = uVar31 + uVar23;\n    iVar7 = arg_ch[0x12];\n    iVar8 = *arg_10h;\n    uVar24 = iVar7 * iVar8;\n    uVar33 = uVar32 + uVar24;\n    iVar9 = arg_ch[2];\n    iVar10 = arg_10h[0x10];\n    uVar25 = iVar9 * iVar10;\n    uVar34 = uVar33 + uVar25;\n    iVar11 = arg_ch[0xc];\n    iVar12 = arg_10h[6];\n    uVar26 = iVar11 * iVar12;\n    uVar35 = uVar34 + uVar26;\n    iVar13 = arg_ch[6];\n    iVar14 = arg_10h[0xc];\n    uVar27 = iVar13 * iVar14;\n    uVar36 = uVar35 + uVar27;\n    iVar15 = arg_ch[0xe];\n    iVar16 = arg_10h[4];\n    uVar28 = iVar15 * iVar16;\n    uVar37 = uVar36 + uVar28;\n    iVar17 = arg_ch[4];\n    iVar18 = arg_10h[0xe];\n    uVar29 = iVar17 * iVar18;\n    uVar38 = uVar37 + uVar29;\n    iVar19 = arg_ch[10];\n    iVar20 = arg_10h[8];\n    uVar30 = iVar19 * iVar20;\n    arg_8h[0x12] = uVar38 + uVar30;\n    arg_8h[0x13] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar31, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar32, uVar24) +\n                   (iVar9 * iVar10 >> 0x20) + CARRY4(uVar33, uVar25) + (iVar11 * iVar12 >> 0x20) +\n                   CARRY4(uVar34, uVar26) + (iVar13 * iVar14 >> 0x20) + CARRY4(uVar35, uVar27) +\n                   (iVar15 * iVar16 >> 0x20) + CARRY4(uVar36, uVar28) + (iVar17 * iVar18 >> 0x20) +\n                   CARRY4(uVar37, uVar29) + (iVar19 * iVar20 >> 0x20) + CARRY4(uVar38, uVar30);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[0xe];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xe];\n    iVar4 = arg_10h[6];\n    uVar23 = iVar3 * iVar4;\n    uVar31 = uVar22 + uVar23;\n    iVar5 = arg_ch[0x12];\n    iVar6 = arg_10h[2];\n    uVar24 = iVar5 * iVar6;\n    uVar32 = uVar31 + uVar24;\n    iVar7 = arg_ch[10];\n    iVar8 = arg_10h[10];\n    uVar25 = iVar7 * iVar8;\n    uVar33 = uVar32 + uVar25;\n    iVar9 = arg_ch[2];\n    iVar10 = arg_10h[0x12];\n    uVar26 = iVar9 * iVar10;\n    uVar34 = uVar33 + uVar26;\n    iVar11 = arg_ch[8];\n    iVar12 = arg_10h[0xc];\n    uVar27 = iVar11 * iVar12;\n    uVar21 = uVar34 * 2;\n    uVar35 = uVar21 + uVar27;\n    iVar13 = arg_ch[0xc];\n    iVar14 = arg_10h[8];\n    uVar28 = iVar13 * iVar14;\n    uVar36 = uVar35 + uVar28;\n    iVar15 = arg_ch[0x10];\n    iVar16 = arg_10h[4];\n    uVar29 = iVar15 * iVar16;\n    uVar37 = uVar36 + uVar29;\n    iVar17 = arg_ch[4];\n    iVar18 = arg_10h[0x10];\n    uVar30 = iVar17 * iVar18;\n    arg_8h[0x14] = uVar37 + uVar30;\n    arg_8h[0x15] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) +\n                     (iVar5 * iVar6 >> 0x20) + CARRY4(uVar31, uVar24) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar32, uVar25)\n                     + (iVar9 * iVar10 >> 0x20) + CARRY4(uVar33, uVar26)) * 2 | uVar34 >> 0x1f) +\n                   (iVar11 * iVar12 >> 0x20) + CARRY4(uVar21, uVar27) + (iVar13 * iVar14 >> 0x20) +\n                   CARRY4(uVar35, uVar28) + (iVar15 * iVar16 >> 0x20) + CARRY4(uVar36, uVar29) +\n                   (iVar17 * iVar18 >> 0x20) + CARRY4(uVar37, uVar30);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[0x10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xe];\n    iVar4 = arg_10h[8];\n    uVar22 = iVar3 * iVar4;\n    uVar29 = uVar21 + uVar22;\n    iVar5 = arg_ch[0x10];\n    iVar6 = arg_10h[6];\n    uVar23 = iVar5 * iVar6;\n    uVar30 = uVar29 + uVar23;\n    iVar7 = arg_ch[4];\n    iVar8 = arg_10h[0x12];\n    uVar24 = iVar7 * iVar8;\n    uVar31 = uVar30 + uVar24;\n    iVar9 = arg_ch[10];\n    iVar10 = arg_10h[0xc];\n    uVar25 = iVar9 * iVar10;\n    uVar32 = uVar31 + uVar25;\n    iVar11 = arg_ch[8];\n    iVar12 = arg_10h[0xe];\n    uVar26 = iVar11 * iVar12;\n    uVar33 = uVar32 + uVar26;\n    iVar13 = arg_ch[0xc];\n    iVar14 = arg_10h[10];\n    uVar27 = iVar13 * iVar14;\n    uVar34 = uVar33 + uVar27;\n    iVar15 = arg_ch[0x12];\n    iVar16 = arg_10h[4];\n    uVar28 = iVar15 * iVar16;\n    arg_8h[0x16] = uVar34 + uVar28;\n    arg_8h[0x17] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar29, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar30, uVar24) +\n                   (iVar9 * iVar10 >> 0x20) + CARRY4(uVar31, uVar25) + (iVar11 * iVar12 >> 0x20) +\n                   CARRY4(uVar32, uVar26) + (iVar13 * iVar14 >> 0x20) + CARRY4(uVar33, uVar27) +\n                   (iVar15 * iVar16 >> 0x20) + CARRY4(uVar34, uVar28);\n    iVar1 = arg_ch[0x12];\n    iVar2 = arg_10h[6];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xe];\n    iVar4 = arg_10h[10];\n    uVar23 = iVar3 * iVar4;\n    uVar29 = uVar22 + uVar23;\n    iVar5 = arg_ch[6];\n    iVar6 = arg_10h[0x12];\n    uVar24 = iVar5 * iVar6;\n    uVar30 = uVar29 + uVar24;\n    iVar7 = arg_ch[10];\n    iVar8 = arg_10h[0xe];\n    uVar25 = iVar7 * iVar8;\n    uVar31 = uVar30 + uVar25;\n    iVar9 = arg_ch[0x10];\n    iVar10 = arg_10h[8];\n    uVar26 = iVar9 * iVar10;\n    uVar21 = uVar31 * 2;\n    uVar32 = uVar21 + uVar26;\n    iVar11 = arg_ch[8];\n    iVar12 = arg_10h[0x10];\n    uVar27 = iVar11 * iVar12;\n    uVar33 = uVar32 + uVar27;\n    iVar13 = arg_ch[0xc];\n    iVar14 = arg_10h[0xc];\n    uVar28 = iVar13 * iVar14;\n    arg_8h[0x18] = uVar33 + uVar28;\n    arg_8h[0x19] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) +\n                     (iVar5 * iVar6 >> 0x20) + CARRY4(uVar29, uVar24) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar30, uVar25)\n                    ) * 2 | uVar31 >> 0x1f) + (iVar9 * iVar10 >> 0x20) + CARRY4(uVar21, uVar26) +\n                   (iVar11 * iVar12 >> 0x20) + CARRY4(uVar32, uVar27) + (iVar13 * iVar14 >> 0x20) +\n                   CARRY4(uVar33, uVar28);\n    iVar1 = arg_ch[8];\n    iVar2 = arg_10h[0x12];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xc];\n    iVar4 = arg_10h[0xe];\n    uVar22 = iVar3 * iVar4;\n    uVar27 = uVar21 + uVar22;\n    iVar5 = arg_ch[0x12];\n    iVar6 = arg_10h[8];\n    uVar23 = iVar5 * iVar6;\n    uVar28 = uVar27 + uVar23;\n    iVar7 = arg_ch[0xe];\n    iVar8 = arg_10h[0xc];\n    uVar24 = iVar7 * iVar8;\n    uVar29 = uVar28 + uVar24;\n    iVar9 = arg_ch[0x10];\n    iVar10 = arg_10h[10];\n    uVar25 = iVar9 * iVar10;\n    uVar30 = uVar29 + uVar25;\n    iVar11 = arg_ch[10];\n    iVar12 = arg_10h[0x10];\n    uVar26 = iVar11 * iVar12;\n    arg_8h[0x1a] = uVar30 + uVar26;\n    arg_8h[0x1b] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar27, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar28, uVar24) +\n                   (iVar9 * iVar10 >> 0x20) + CARRY4(uVar29, uVar25) + (iVar11 * iVar12 >> 0x20) +\n                   CARRY4(uVar30, uVar26);\n    iVar1 = arg_ch[0xe];\n    iVar2 = arg_10h[0xe];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[10];\n    iVar4 = arg_10h[0x12];\n    uVar23 = iVar3 * iVar4;\n    uVar27 = uVar22 + uVar23;\n    iVar5 = arg_ch[0x12];\n    iVar6 = arg_10h[10];\n    uVar24 = iVar5 * iVar6;\n    uVar28 = uVar27 + uVar24;\n    iVar7 = arg_ch[0xc];\n    iVar8 = arg_10h[0x10];\n    uVar25 = iVar7 * iVar8;\n    uVar21 = uVar28 * 2;\n    uVar29 = uVar21 + uVar25;\n    iVar9 = arg_ch[0x10];\n    iVar10 = arg_10h[0xc];\n    uVar26 = iVar9 * iVar10;\n    arg_8h[0x1c] = uVar29 + uVar26;\n    arg_8h[0x1d] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) +\n                     (iVar5 * iVar6 >> 0x20) + CARRY4(uVar27, uVar24)) * 2 | uVar28 >> 0x1f) + (iVar7 * iVar8 >> 0x20) +\n                   CARRY4(uVar21, uVar25) + (iVar9 * iVar10 >> 0x20) + CARRY4(uVar29, uVar26);\n    iVar1 = arg_ch[0xe];\n    iVar2 = arg_10h[0x10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0x10];\n    iVar4 = arg_10h[0xe];\n    uVar22 = iVar3 * iVar4;\n    uVar25 = uVar21 + uVar22;\n    iVar5 = arg_ch[0xc];\n    iVar6 = arg_10h[0x12];\n    uVar23 = iVar5 * iVar6;\n    uVar26 = uVar25 + uVar23;\n    iVar7 = arg_ch[0x12];\n    iVar8 = arg_10h[0xc];\n    uVar24 = iVar7 * iVar8;\n    arg_8h[0x1e] = uVar26 + uVar24;\n    arg_8h[0x1f] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar25, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar26, uVar24);\n    iVar1 = arg_ch[0x12];\n    iVar2 = arg_10h[0xe];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xe];\n    iVar4 = arg_10h[0x12];\n    uVar23 = iVar3 * iVar4;\n    uVar25 = uVar22 + uVar23;\n    iVar5 = arg_ch[0x10];\n    iVar6 = arg_10h[0x10];\n    uVar24 = iVar5 * iVar6;\n    uVar21 = uVar25 * 2;\n    arg_8h[0x20] = uVar21 + uVar24;\n    arg_8h[0x21] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23)) * 2 | uVar25 >> 0x1f) +\n                   (iVar5 * iVar6 >> 0x20) + CARRY4(uVar21, uVar24);\n    iVar1 = arg_ch[0x12];\n    iVar2 = arg_10h[0x10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0x10];\n    iVar4 = arg_10h[0x12];\n    uVar22 = iVar3 * iVar4;\n    arg_8h[0x22] = uVar21 + uVar22;\n    arg_8h[0x23] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22);\n    uVar21 = arg_ch[0x12] * arg_10h[0x12];\n    arg_8h[0x25] = (arg_ch[0x12] * arg_10h[0x12] >> 0x20) << 1 | uVar21 >> 0x1f;\n    arg_8h[0x24] = uVar21 * 2;\n    return;\n}\n",
        "token_count": 7406
    },
    "004087bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004087bf(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    uVar2 = arg_8h[0x24];\n    uVar3 = arg_8h[0x25];\n    puVar1 = arg_8h + 0x10;\n    uVar4 = *puVar1;\n    *puVar1 = *puVar1 + uVar2 * 0x10;\n    arg_8h[0x11] = arg_8h[0x11] + (uVar3 << 4 | uVar2 >> 0x1c) + CARRY4(uVar4, uVar2 * 0x10);\n    puVar1 = arg_8h + 0x10;\n    uVar4 = *puVar1;\n    *puVar1 = *puVar1 + uVar2 * 2;\n    arg_8h[0x11] = arg_8h[0x11] + (uVar3 << 1 | uVar2 >> 0x1f) + CARRY4(uVar4, uVar2 * 2);\n    puVar1 = arg_8h + 0x10;\n    uVar4 = *puVar1;\n    *puVar1 = *puVar1 + uVar2;\n    uVar5 = arg_8h[0x22];\n    arg_8h[0x11] = arg_8h[0x11] + uVar3 + CARRY4(uVar4, uVar2);\n    uVar2 = arg_8h[0x23];\n    puVar1 = arg_8h + 0xe;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 0x10;\n    arg_8h[0xf] = arg_8h[0xf] + (uVar2 << 4 | uVar5 >> 0x1c) + CARRY4(uVar3, uVar5 * 0x10);\n    puVar1 = arg_8h + 0xe;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 2;\n    arg_8h[0xf] = arg_8h[0xf] + (uVar2 << 1 | uVar5 >> 0x1f) + CARRY4(uVar3, uVar5 * 2);\n    puVar1 = arg_8h + 0xe;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5;\n    uVar4 = arg_8h[0x20];\n    arg_8h[0xf] = arg_8h[0xf] + uVar2 + CARRY4(uVar3, uVar5);\n    uVar2 = arg_8h[0x21];\n    puVar1 = arg_8h + 0xc;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 0x10;\n    arg_8h[0xd] = arg_8h[0xd] + (uVar2 << 4 | uVar4 >> 0x1c) + CARRY4(uVar3, uVar4 * 0x10);\n    puVar1 = arg_8h + 0xc;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 2;\n    arg_8h[0xd] = arg_8h[0xd] + (uVar2 << 1 | uVar4 >> 0x1f) + CARRY4(uVar3, uVar4 * 2);\n    puVar1 = arg_8h + 0xc;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    uVar5 = arg_8h[0x1e];\n    arg_8h[0xd] = arg_8h[0xd] + uVar2 + CARRY4(uVar3, uVar4);\n    uVar2 = arg_8h[0x1f];\n    puVar1 = arg_8h + 10;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 0x10;\n    arg_8h[0xb] = arg_8h[0xb] + (uVar2 << 4 | uVar5 >> 0x1c) + CARRY4(uVar3, uVar5 * 0x10);\n    puVar1 = arg_8h + 10;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 2;\n    arg_8h[0xb] = arg_8h[0xb] + (uVar2 << 1 | uVar5 >> 0x1f) + CARRY4(uVar3, uVar5 * 2);\n    puVar1 = arg_8h + 10;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5;\n    uVar4 = arg_8h[0x1c];\n    arg_8h[0xb] = arg_8h[0xb] + uVar2 + CARRY4(uVar3, uVar5);\n    uVar2 = arg_8h[0x1d];\n    puVar1 = arg_8h + 8;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 0x10;\n    arg_8h[9] = arg_8h[9] + (uVar2 << 4 | uVar4 >> 0x1c) + CARRY4(uVar3, uVar4 * 0x10);\n    puVar1 = arg_8h + 8;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 2;\n    arg_8h[9] = arg_8h[9] + (uVar2 << 1 | uVar4 >> 0x1f) + CARRY4(uVar3, uVar4 * 2);\n    puVar1 = arg_8h + 8;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    uVar5 = arg_8h[0x1a];\n    arg_8h[9] = arg_8h[9] + uVar2 + CARRY4(uVar3, uVar4);\n    uVar2 = arg_8h[0x1b];\n    puVar1 = arg_8h + 6;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 0x10;\n    arg_8h[7] = arg_8h[7] + (uVar2 << 4 | uVar5 >> 0x1c) + CARRY4(uVar3, uVar5 * 0x10);\n    puVar1 = arg_8h + 6;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 2;\n    arg_8h[7] = arg_8h[7] + (uVar2 << 1 | uVar5 >> 0x1f) + CARRY4(uVar3, uVar5 * 2);\n    puVar1 = arg_8h + 6;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5;\n    uVar4 = arg_8h[0x18];\n    arg_8h[7] = arg_8h[7] + uVar2 + CARRY4(uVar3, uVar5);\n    uVar2 = arg_8h[0x19];\n    puVar1 = arg_8h + 4;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 0x10;\n    arg_8h[5] = arg_8h[5] + (uVar2 << 4 | uVar4 >> 0x1c) + CARRY4(uVar3, uVar4 * 0x10);\n    puVar1 = arg_8h + 4;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 2;\n    arg_8h[5] = arg_8h[5] + (uVar2 << 1 | uVar4 >> 0x1f) + CARRY4(uVar3, uVar4 * 2);\n    puVar1 = arg_8h + 4;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    uVar5 = arg_8h[0x16];\n    arg_8h[5] = arg_8h[5] + uVar2 + CARRY4(uVar3, uVar4);\n    uVar2 = arg_8h[0x17];\n    puVar1 = arg_8h + 2;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 0x10;\n    arg_8h[3] = arg_8h[3] + (uVar2 << 4 | uVar5 >> 0x1c) + CARRY4(uVar3, uVar5 * 0x10);\n    puVar1 = arg_8h + 2;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 2;\n    arg_8h[3] = arg_8h[3] + (uVar2 << 1 | uVar5 >> 0x1f) + CARRY4(uVar3, uVar5 * 2);\n    puVar1 = arg_8h + 2;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5;\n    uVar4 = arg_8h[0x14];\n    arg_8h[3] = arg_8h[3] + uVar2 + CARRY4(uVar3, uVar5);\n    uVar2 = arg_8h[0x15];\n    uVar3 = *arg_8h;\n    *arg_8h = *arg_8h + uVar4 * 0x10;\n    arg_8h[1] = arg_8h[1] + (uVar2 << 4 | uVar4 >> 0x1c) + CARRY4(uVar3, uVar4 * 0x10);\n    uVar3 = *arg_8h;\n    *arg_8h = *arg_8h + uVar4 * 2;\n    arg_8h[1] = arg_8h[1] + (uVar2 << 1 | uVar4 >> 0x1f) + CARRY4(uVar3, uVar4 * 2);\n    uVar3 = *arg_8h;\n    *arg_8h = *arg_8h + uVar4;\n    arg_8h[1] = arg_8h[1] + uVar2 + CARRY4(uVar3, uVar4);\n    return;\n}\n",
        "token_count": 2640
    },
    "0040896f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040896f(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_98h;\n    \n    fcn.004089b8(&var_98h, arg_ch);\n    fcn.004087bf(&var_98h);\n    fcn.004086ab(&var_98h);\n    puVar2 = &var_98h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_8h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "004089b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004089b8(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    \n    iVar9 = *arg_ch * *arg_ch;\n    *arg_8h = iVar9;\n    arg_8h[1] = iVar9 >> 0x20;\n    uVar10 = *arg_ch * arg_ch[2];\n    arg_8h[3] = (*arg_ch * arg_ch[2] >> 0x20) << 1 | uVar10 >> 0x1f;\n    arg_8h[2] = uVar10 * 2;\n    uVar10 = *arg_ch * arg_ch[4];\n    iVar9 = arg_ch[2] * arg_ch[2];\n    uVar11 = iVar9;\n    uVar14 = uVar10 + uVar11;\n    arg_8h[5] = ((*arg_ch * arg_ch[4] >> 0x20) + (iVar9 >> 0x20) + CARRY4(uVar10, uVar11)) * 2 | uVar14 >> 0x1f;\n    arg_8h[4] = uVar14 * 2;\n    uVar10 = *arg_ch * arg_ch[6];\n    uVar11 = arg_ch[2] * arg_ch[4];\n    uVar14 = uVar10 + uVar11;\n    arg_8h[7] = ((*arg_ch * arg_ch[6] >> 0x20) + (arg_ch[2] * arg_ch[4] >> 0x20) + CARRY4(uVar10, uVar11)) * 2 |\n                uVar14 >> 0x1f;\n    arg_8h[6] = uVar14 * 2;\n    iVar1 = arg_ch[2];\n    iVar2 = arg_ch[6];\n    uVar14 = iVar1 * iVar2;\n    iVar3 = *arg_ch;\n    iVar4 = arg_ch[8];\n    uVar12 = iVar3 * iVar4;\n    uVar10 = uVar14 * 2;\n    uVar15 = uVar10 + uVar12;\n    iVar9 = arg_ch[4] * arg_ch[4];\n    uVar13 = iVar9;\n    uVar11 = uVar15 * 2;\n    arg_8h[8] = uVar11 + uVar13;\n    arg_8h[9] = ((((iVar1 * iVar2 >> 0x20) << 1 | uVar14 >> 0x1f) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar10, uVar12)) *\n                 2 | uVar15 >> 0x1f) + (iVar9 >> 0x20) + CARRY4(uVar11, uVar13);\n    uVar10 = arg_ch[2] * arg_ch[8];\n    uVar11 = arg_ch[4] * arg_ch[6];\n    uVar12 = uVar10 + uVar11;\n    uVar14 = *arg_ch * arg_ch[10];\n    uVar13 = uVar12 + uVar14;\n    arg_8h[0xb] = ((arg_ch[2] * arg_ch[8] >> 0x20) + (arg_ch[4] * arg_ch[6] >> 0x20) + CARRY4(uVar10, uVar11) +\n                   (*arg_ch * arg_ch[10] >> 0x20) + CARRY4(uVar12, uVar14)) * 2 | uVar13 >> 0x1f;\n    arg_8h[10] = uVar13 * 2;\n    uVar11 = arg_ch[2] * arg_ch[10];\n    uVar10 = uVar11 * 2;\n    uVar14 = arg_ch[4] * arg_ch[8];\n    uVar15 = uVar10 + uVar14;\n    iVar9 = arg_ch[6] * arg_ch[6];\n    uVar12 = iVar9;\n    uVar16 = uVar15 + uVar12;\n    uVar13 = *arg_ch * arg_ch[0xc];\n    uVar17 = uVar16 + uVar13;\n    arg_8h[0xd] = (((arg_ch[2] * arg_ch[10] >> 0x20) << 1 | uVar11 >> 0x1f) + (arg_ch[4] * arg_ch[8] >> 0x20) +\n                   CARRY4(uVar10, uVar14) + (iVar9 >> 0x20) + CARRY4(uVar15, uVar12) + (*arg_ch * arg_ch[0xc] >> 0x20) +\n                  CARRY4(uVar16, uVar13)) * 2 | uVar17 >> 0x1f;\n    arg_8h[0xc] = uVar17 * 2;\n    uVar10 = arg_ch[6] * arg_ch[8];\n    uVar11 = *arg_ch * arg_ch[0xe];\n    uVar13 = uVar10 + uVar11;\n    uVar14 = arg_ch[4] * arg_ch[10];\n    uVar15 = uVar13 + uVar14;\n    uVar12 = arg_ch[2] * arg_ch[0xc];\n    uVar16 = uVar15 + uVar12;\n    arg_8h[0xf] = ((arg_ch[6] * arg_ch[8] >> 0x20) + (*arg_ch * arg_ch[0xe] >> 0x20) + CARRY4(uVar10, uVar11) +\n                   (arg_ch[4] * arg_ch[10] >> 0x20) + CARRY4(uVar13, uVar14) + (arg_ch[2] * arg_ch[0xc] >> 0x20) +\n                  CARRY4(uVar15, uVar12)) * 2 | uVar16 >> 0x1f;\n    arg_8h[0xe] = uVar16 * 2;\n    iVar1 = arg_ch[2];\n    iVar2 = arg_ch[0xe];\n    uVar14 = iVar1 * iVar2;\n    iVar3 = arg_ch[6];\n    iVar4 = arg_ch[10];\n    uVar12 = iVar3 * iVar4;\n    uVar17 = uVar14 + uVar12;\n    iVar5 = *arg_ch;\n    iVar6 = arg_ch[0x10];\n    uVar13 = iVar5 * iVar6;\n    uVar10 = uVar17 * 2;\n    uVar18 = uVar10 + uVar13;\n    iVar7 = arg_ch[4];\n    iVar8 = arg_ch[0xc];\n    uVar15 = iVar7 * iVar8;\n    uVar19 = uVar18 + uVar15;\n    iVar9 = arg_ch[8] * arg_ch[8];\n    uVar16 = iVar9;\n    uVar11 = uVar19 * 2;\n    arg_8h[0x10] = uVar11 + uVar16;\n    arg_8h[0x11] = (((((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar14, uVar12)) * 2 | uVar17 >> 0x1f)\n                     + (iVar5 * iVar6 >> 0x20) + CARRY4(uVar10, uVar13) + (iVar7 * iVar8 >> 0x20) +\n                    CARRY4(uVar18, uVar15)) * 2 | uVar19 >> 0x1f) + (iVar9 >> 0x20) + CARRY4(uVar11, uVar16);\n    uVar10 = arg_ch[8] * arg_ch[10];\n    uVar11 = arg_ch[4] * arg_ch[0xe];\n    uVar15 = uVar10 + uVar11;\n    uVar14 = arg_ch[2] * arg_ch[0x10];\n    uVar16 = uVar15 + uVar14;\n    uVar12 = arg_ch[6] * arg_ch[0xc];\n    uVar17 = uVar16 + uVar12;\n    uVar13 = *arg_ch * arg_ch[0x12];\n    uVar18 = uVar17 + uVar13;\n    arg_8h[0x13] = ((arg_ch[8] * arg_ch[10] >> 0x20) + (arg_ch[4] * arg_ch[0xe] >> 0x20) + CARRY4(uVar10, uVar11) +\n                    (arg_ch[2] * arg_ch[0x10] >> 0x20) + CARRY4(uVar15, uVar14) + (arg_ch[6] * arg_ch[0xc] >> 0x20) +\n                    CARRY4(uVar16, uVar12) + (*arg_ch * arg_ch[0x12] >> 0x20) + CARRY4(uVar17, uVar13)) * 2 |\n                   uVar18 >> 0x1f;\n    arg_8h[0x12] = uVar18 * 2;\n    uVar11 = arg_ch[6] * arg_ch[0xe];\n    uVar14 = arg_ch[2] * arg_ch[0x12];\n    uVar16 = uVar11 + uVar14;\n    uVar12 = arg_ch[8] * arg_ch[0xc];\n    uVar10 = uVar16 * 2;\n    uVar17 = uVar10 + uVar12;\n    uVar13 = arg_ch[4] * arg_ch[0x10];\n    uVar18 = uVar17 + uVar13;\n    iVar9 = arg_ch[10] * arg_ch[10];\n    uVar15 = iVar9;\n    uVar19 = uVar18 + uVar15;\n    arg_8h[0x15] = ((((arg_ch[6] * arg_ch[0xe] >> 0x20) + (arg_ch[2] * arg_ch[0x12] >> 0x20) + CARRY4(uVar11, uVar14)) *\n                     2 | uVar16 >> 0x1f) + (arg_ch[8] * arg_ch[0xc] >> 0x20) + CARRY4(uVar10, uVar12) +\n                    (arg_ch[4] * arg_ch[0x10] >> 0x20) + CARRY4(uVar17, uVar13) + (iVar9 >> 0x20) +\n                   CARRY4(uVar18, uVar15)) * 2 | uVar19 >> 0x1f;\n    arg_8h[0x14] = uVar19 * 2;\n    uVar10 = arg_ch[6] * arg_ch[0x10];\n    uVar11 = arg_ch[8] * arg_ch[0xe];\n    uVar13 = uVar10 + uVar11;\n    uVar14 = arg_ch[10] * arg_ch[0xc];\n    uVar15 = uVar13 + uVar14;\n    uVar12 = arg_ch[4] * arg_ch[0x12];\n    uVar16 = uVar15 + uVar12;\n    arg_8h[0x17] = ((arg_ch[6] * arg_ch[0x10] >> 0x20) + (arg_ch[8] * arg_ch[0xe] >> 0x20) + CARRY4(uVar10, uVar11) +\n                    (arg_ch[10] * arg_ch[0xc] >> 0x20) + CARRY4(uVar13, uVar14) + (arg_ch[4] * arg_ch[0x12] >> 0x20) +\n                   CARRY4(uVar15, uVar12)) * 2 | uVar16 >> 0x1f;\n    arg_8h[0x16] = uVar16 * 2;\n    iVar1 = arg_ch[10];\n    iVar2 = arg_ch[0xe];\n    uVar14 = iVar1 * iVar2;\n    iVar3 = arg_ch[6];\n    iVar4 = arg_ch[0x12];\n    uVar12 = iVar3 * iVar4;\n    uVar16 = uVar14 + uVar12;\n    iVar5 = arg_ch[8];\n    iVar6 = arg_ch[0x10];\n    uVar13 = iVar5 * iVar6;\n    uVar10 = uVar16 * 2;\n    uVar17 = uVar10 + uVar13;\n    iVar9 = arg_ch[0xc] * arg_ch[0xc];\n    uVar15 = iVar9;\n    uVar11 = uVar17 * 2;\n    arg_8h[0x18] = uVar11 + uVar15;\n    arg_8h[0x19] = (((((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar14, uVar12)) * 2 | uVar16 >> 0x1f)\n                     + (iVar5 * iVar6 >> 0x20) + CARRY4(uVar10, uVar13)) * 2 | uVar17 >> 0x1f) + (iVar9 >> 0x20) +\n                   CARRY4(uVar11, uVar15);\n    uVar10 = arg_ch[8] * arg_ch[0x12];\n    uVar11 = arg_ch[10] * arg_ch[0x10];\n    uVar12 = uVar10 + uVar11;\n    uVar14 = arg_ch[0xc] * arg_ch[0xe];\n    uVar13 = uVar12 + uVar14;\n    arg_8h[0x1b] = ((arg_ch[8] * arg_ch[0x12] >> 0x20) + (arg_ch[10] * arg_ch[0x10] >> 0x20) + CARRY4(uVar10, uVar11) +\n                    (arg_ch[0xc] * arg_ch[0xe] >> 0x20) + CARRY4(uVar12, uVar14)) * 2 | uVar13 >> 0x1f;\n    arg_8h[0x1a] = uVar13 * 2;\n    uVar11 = arg_ch[10] * arg_ch[0x12];\n    iVar9 = arg_ch[0xe] * arg_ch[0xe];\n    uVar14 = iVar9;\n    uVar10 = uVar11 * 2;\n    uVar13 = uVar10 + uVar14;\n    uVar12 = arg_ch[0xc] * arg_ch[0x10];\n    uVar15 = uVar13 + uVar12;\n    arg_8h[0x1d] = (((arg_ch[10] * arg_ch[0x12] >> 0x20) << 1 | uVar11 >> 0x1f) + (iVar9 >> 0x20) +\n                    CARRY4(uVar10, uVar14) + (arg_ch[0xc] * arg_ch[0x10] >> 0x20) + CARRY4(uVar13, uVar12)) * 2 |\n                   uVar15 >> 0x1f;\n    arg_8h[0x1c] = uVar15 * 2;\n    uVar10 = arg_ch[0xc] * arg_ch[0x12];\n    uVar11 = arg_ch[0xe] * arg_ch[0x10];\n    uVar14 = uVar10 + uVar11;\n    arg_8h[0x1f] = ((arg_ch[0xc] * arg_ch[0x12] >> 0x20) + (arg_ch[0xe] * arg_ch[0x10] >> 0x20) + CARRY4(uVar10, uVar11)\n                   ) * 2 | uVar14 >> 0x1f;\n    arg_8h[0x1e] = uVar14 * 2;\n    iVar1 = arg_ch[0xe];\n    iVar2 = arg_ch[0x12];\n    uVar10 = iVar1 * iVar2;\n    iVar9 = arg_ch[0x10] * arg_ch[0x10];\n    uVar11 = iVar9;\n    uVar14 = uVar10 * 4;\n    arg_8h[0x20] = uVar14 + uVar11;\n    arg_8h[0x21] = ((iVar1 * iVar2 >> 0x20) << 2 | uVar10 >> 0x1e) + (iVar9 >> 0x20) + CARRY4(uVar14, uVar11);\n    uVar10 = arg_ch[0x10] * arg_ch[0x12];\n    arg_8h[0x23] = (arg_ch[0x10] * arg_ch[0x12] >> 0x20) << 1 | uVar10 >> 0x1f;\n    arg_8h[0x22] = uVar10 * 2;\n    iVar9 = arg_ch[0x12] * arg_ch[0x12];\n    uVar10 = iVar9;\n    arg_8h[0x25] = (iVar9 >> 0x20) << 1 | uVar10 >> 0x1f;\n    arg_8h[0x24] = uVar10 * 2;\n    return;\n}\n",
        "token_count": 4047
    },
    "00409aae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409aae(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    \n    if (0x20 < arg_ch) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.00408d94(arg_8h, arg_ch, arg_10h, arg_14h, 0x88, 6, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, \n                         arg_14h, in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, \n                         in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, \n                         in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, \n                         in_stack_0000004c, in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c);\n    return uVar1;\n}\n",
        "token_count": 471
    },
    "0040a85a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a85a(int32_t arg_8h, int32_t **arg_ch, int32_t **arg_10h, int32_t **arg_14h, int32_t *arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    \n    if (*(arg_8h + 0x24) != 0) {\n        ppiVar3 = fcn.00409b34(arg_8h, *(arg_8h + 0x20) + 0x18);\n        if (ppiVar3 == NULL) {\n            return 0;\n        }\n        if (*arg_10h == NULL) {\n            *arg_10h = ppiVar3;\n        }\n        ppiVar3[1] = arg_18h;\n        *ppiVar3 = *arg_ch;\n        if (*arg_14h != NULL) {\n            (*arg_14h)[4] = ppiVar3;\n        }\n        *arg_ch = ppiVar3;\n        *arg_14h = ppiVar3;\n        return 1;\n    }\n    piVar1 = *arg_14h;\n    *arg_ch = piVar1;\n    *arg_14h = (*arg_14h)[4];\n    if (*arg_10h == NULL) {\n        *arg_10h = piVar1;\n    }\n    iVar2 = piVar1[1];\n    if (iVar2 == 1) {\n        if (piVar1[2] == 0) {\n            return 1;\n        }\n        iVar4 = piVar1[2] * 0xc;\n        iVar2 = fcn.00409b34(arg_8h, piVar1[3] + iVar4);\n        piVar1[3] = iVar2;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        piVar1[4] = iVar2 + iVar4;\n    }\n    else {\n        if (iVar2 == 2) {\n            if (piVar1[2] == 0) {\n                return 1;\n            }\n            iVar2 = piVar1[2] << 2;\n        }\n        else {\n            if (iVar2 != 5) {\n                return 1;\n            }\n            iVar2 = piVar1[2] + 1;\n        }\n        iVar2 = fcn.00409b34(arg_8h, iVar2);\n        piVar1[3] = iVar2;\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    piVar1[2] = 0;\n    return 1;\n}\n",
        "token_count": 601
    },
    "004058a9": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004058a9(int32_t arg_8h)\n\n{\n    fcn.0040360e(*(arg_8h + 0x14));\n    fcn.00403579(*(arg_8h + 0x18));\n    return;\n}\n",
        "token_count": 61
    },
    "00403b20": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00403b20(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 34
    },
    "004050b5": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050b5(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        arg_ch = arg_ch - arg_8h;\n        do {\n            *arg_8h = *arg_8h ^ arg_8h[arg_ch];\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00408d4f": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d4f(int32_t arg_8h, uint32_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    arg_8h = arg_8h - arg_ch;\n    arg_14h = 10;\n    do {\n        uVar2 = (*arg_ch ^ *(arg_8h + arg_ch)) & -arg_10h;\n        uVar1 = *(arg_8h + arg_ch) ^ uVar2;\n        *(arg_8h + arg_ch) = uVar1;\n        *(arg_8h + 4 + arg_ch) = uVar1 >> 0x1f;\n        uVar2 = *arg_ch ^ uVar2;\n        arg_14h = arg_14h + -1;\n        *arg_ch = uVar2;\n        arg_ch[1] = uVar2 >> 0x1f;\n        arg_ch = arg_ch + 2;\n    } while (arg_14h != 0);\n    return;\n}\n",
        "token_count": 249
    },
    "0040358e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040358e(int32_t arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        arg_8h = arg_8h - arg_ch;\n        do {\n            arg_ch[arg_8h] = *arg_ch;\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00403a29": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403a29(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 1;\n    arg_8h_00 = fcn.0040352c(2);\n    while( true ) {\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        iVar1 = (**0x41b6c8)(arg_8h, arg_8h_00, iVar2);\n        *arg_ch = iVar1;\n        if (iVar1 != iVar2) break;\n        fcn.00403579(arg_8h_00);\n        iVar2 = iVar2 + 1;\n        arg_8h_00 = fcn.0040352c(iVar2 * 2);\n    }\n    if (iVar1 != 0) {\n        return arg_8h_00;\n    }\n    fcn.00403579(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 241
    },
    "004041ef": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004041ef(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar2 = 0;\n            uVar4 = 0;\n            do {\n                iVar1 = fcn.00404238(&var_1h);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                var_1h._0_1_ = in_ECX >> 0x18;\n                uVar2 = uVar2 | var_1h << (uVar4 & 0x1f);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < 8);\n            *(uVar3 + arg_8h) = uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 284
    },
    "004042e2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004042e2(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    (**0x41b764)(1);\n    iVar1 = (**0x41b82c)();\n    do {\n        (**0x41b6fc)(1);\n        iVar2 = (**0x41b82c)();\n    } while (iVar1 == iVar2);\n    return;\n}\n",
        "token_count": 89
    },
    "00404797": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404797(char *arg_8h, char *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    cVar2 = *arg_ch;\n    iVar1 = *arg_8h - cVar2;\n    if (iVar1 == 0) {\n        iVar3 = arg_8h - arg_ch;\n        do {\n            if (cVar2 == '\\0') break;\n            arg_ch = arg_ch + 1;\n            cVar2 = *arg_ch;\n            iVar1 = arg_ch[iVar3] - cVar2;\n        } while (iVar1 == 0);\n    }\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    else if (0 < iVar1) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 195
    },
    "00404b0b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b0b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    uVar1 = fcn.00404540(arg_ch);\n    puVar3 = *(*(arg_8h + 8) + (uVar1 % *(arg_8h + 4)) * 4);\n    while( true ) {\n        if (puVar3 == NULL) {\n            return 0;\n        }\n        iVar2 = fcn.00404797(*puVar3, arg_ch);\n        if (iVar2 == 0) break;\n        puVar3 = puVar3[2];\n    }\n    return 1;\n}\n",
        "token_count": 167
    },
    "00404b49": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b49(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.0040455e(arg_ch);\n    iVar3 = *(*(arg_8h + 8) + (uVar1 % *(arg_8h + 4)) * 4);\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.004047d9(*(iVar3 + 4), arg_ch);\n        if (iVar2 == 0) break;\n        iVar3 = *(iVar3 + 8);\n    }\n    return 1;\n}\n",
        "token_count": 169
    },
    "00404b88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404b88(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    iVar2 = fcn.004034eb(arg_ch);\n    uVar3 = 0;\n    *arg_8h = iVar2;\n    if (iVar2 != 0) {\n        do {\n            puVar1 = uVar3 * 4 + 0x41b5c0;\n            if (arg_10h <= *puVar1 && *puVar1 != arg_10h) {\n                piVar4 = *(uVar3 * 4 + 0x41b5c0);\n                break;\n            }\n            uVar3 = uVar3 + 1;\n            piVar4 = arg_8h;\n        } while (uVar3 < 0x1a);\n        arg_8h[1] = piVar4;\n        iVar2 = fcn.004034ce(iVar2, piVar4 << 2);\n        arg_8h[2] = iVar2;\n        if (iVar2 == 0) {\n            fcn.00403508(*arg_8h);\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 322
    },
    "00405de6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405de6(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_54h;\n    int32_t var_4ch;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    arg_8h_00 = 0;\n    var_4h = NULL;\n    iVar1 = (**0x41b740)(0, 1, &var_4h);\n    if (iVar1 == 0) {\n        while ((iVar1 = (**0x41b714)(arg_8h, &var_8h),  iVar1 != 0 && (var_8h != 0))) {\n            iVar1 = fcn.0040352c(var_8h);\n            if (iVar1 != 0) {\n                var_ch = 0;\n                iVar2 = (**0x41b640)(arg_8h, iVar1, var_8h, &var_ch);\n                if (iVar2 != 0) {\n                    (**(*var_4h + 0x10))(var_4h, iVar1, var_ch, 0);\n                }\n                fcn.00403579(iVar1);\n            }\n        }\n        iVar1 = (**(*var_4h + 0x30))(var_4h, &var_54h, 1);\n        if ((iVar1 == 0) &&\n           (((var_4ch != 0 && (iVar1 = (**(*var_4h + 0x14))(var_4h, 0, 0, 0, 0),  iVar1 == 0)) &&\n            (arg_8h_00 = fcn.0040352c(var_4ch),  arg_8h_00 != 0)))) {\n            *arg_ch = var_4ch;\n            iVar1 = (**(*var_4h + 0xc))(var_4h, arg_8h_00, var_4ch, &var_ch);\n            if (iVar1 != 0) {\n                fcn.00403579(arg_8h_00);\n                arg_8h_00 = 0;\n            }\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 537
    },
    "00407c4a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c4a(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = 10;\n    puVar4 = arg_8h;\n    do {\n        uVar1 = *((arg_ch - arg_8h) + puVar4);\n        uVar2 = *puVar4;\n        iVar3 = *((arg_ch - arg_8h) + 4 + puVar4);\n        *puVar4 = uVar1 - *puVar4;\n        puVar4[1] = (iVar3 - puVar4[1]) - (uVar1 < uVar2);\n        iVar5 = iVar5 + -1;\n        puVar4 = puVar4 + 2;\n    } while (iVar5 != 0);\n    return;\n}\n",
        "token_count": 217
    },
    "0040a7af": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a7af(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n        do {\n            iVar1 = arg_ch[1];\n            if (iVar1 == 1) {\n                if (arg_ch[2] == 0) goto code_r0x0040a7ef;\n                iVar1 = arg_ch[2] + -1;\n                arg_ch[2] = iVar1;\n                puVar2 = *(iVar1 * 0xc + 8 + arg_ch[3]);\n            }\n            else {\n                if (iVar1 == 2) {\n                    if (arg_ch[2] != 0) {\n                        iVar1 = arg_ch[2] + -1;\n                        arg_ch[2] = iVar1;\n                        puVar2 = *(arg_ch[3] + iVar1 * 4);\n                        goto code_r0x0040a80d;\n                    }\ncode_r0x0040a7ef:\n                    (**(arg_8h + 0xc))(arg_ch[3]);\n                }\n                else if (iVar1 == 5) goto code_r0x0040a7ef;\n                puVar2 = *arg_ch;\n                (**(arg_8h + 0xc))(arg_ch);\n            }\ncode_r0x0040a80d:\n            arg_ch = puVar2;\n        } while (puVar2 != NULL);\n    }\n    return;\n}\n",
        "token_count": 340
    }
}