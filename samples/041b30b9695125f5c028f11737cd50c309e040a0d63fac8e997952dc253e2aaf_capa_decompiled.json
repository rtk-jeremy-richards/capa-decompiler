{
    "00401324": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.00401324(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00401cc8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00401cc8(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(in_EAX + -4);\n    if ((uVar1 & 0x80000002) != 0x80000002) {\n        *0x4635c4 = 4;\n    }\n    uVar3 = uVar1 & 0x7ffffffc;\n    puVar2 = in_EAX - uVar3;\n    if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {\n        *0x4635c4 = 5;\n    }\n    if ((*puVar2 & 1) != 0) {\n        uVar1 = puVar2[-1];\n        if (uVar1 != *(puVar2 + (8 - uVar1))) {\n            *0x4635c4 = 6;\n        }\n        fcn.00401bb8();\n        uVar3 = uVar3 + uVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 255
    },
    "00402290": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00402290(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    *0x4635c4 = 0;\n    if (*0x4635c0 == '\\0') {\n        puStack24 = 0x4022ae;\n        cVar2 = fcn.00401a14();\n        if (cVar2 == '\\0') {\n            *0x4635c4 = 8;\n            return 8;\n        }\n    }\n    uStack28 = 0x402422;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x463049 != '\\0') {\n        uStack36 = 0x4635c8;\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    puVar5 = in_EAX + -4;\n    uVar4 = *puVar5;\n    if ((uVar4 & 2) == 0) {\n        *0x4635c4 = 9;\n        goto code_r0x004023f9;\n    }\n    *0x4635b0 = *0x4635b0 + -1;\n    *0x4635b4 = *0x4635b4 - ((uVar4 & 0x7ffffffc) - 4);\n    if ((uVar4 & 1) != 0) {\n        uVar1 = *(in_EAX + -8);\n        if ((uVar1 < 0xc) || ((uVar1 & 0x80000003) != 0)) {\n            *0x4635c4 = 10;\n            goto code_r0x004023f9;\n        }\n        puVar5 = puVar5 - uVar1;\n        if (uVar1 != puVar5[2]) {\n            *0x4635c4 = 10;\n            goto code_r0x004023f9;\n        }\n        uVar4 = uVar4 + uVar1;\n        fcn.00401bb8();\n    }\n    uVar4 = uVar4 & 0x7ffffffc;\n    puVar5 = puVar5 + uVar4;\n    if (puVar5 == *0x46361c) {\n        *0x46361c = *0x46361c - uVar4;\n        *0x463618 = *0x463618 + uVar4;\n        if (0x3c00 < *0x463618) {\n            fcn.00401ea8();\n        }\n        fcn.00403b78();\n        return 0;\n    }\n    if ((*puVar5 & 2) == 0) {\n        if (((puVar5[1] == 0) || (*puVar5 == 0)) || (puVar5[2] < 0xc)) {\n            *0x4635c4 = 0xb;\n            goto code_r0x004023f9;\n        }\n        fcn.00401bb8();\n    }\n    else {\n        if ((*puVar5 & 0x7ffffffc) < 4) {\n            *0x4635c4 = 0xb;\n            goto code_r0x004023f9;\n        }\n        *puVar5 = *puVar5 | 1;\n    }\n    fcn.00401e20();\ncode_r0x004023f9:\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x402429;\n    if (*0x463049 != '\\0') {\n        uStack32 = 0x4635c8;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 912
    },
    "00417270": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417270(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "00417544": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417544(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x417765;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41757a;\n    (**(*in_EAX + 0x24))();\n    puStack72 = 0x417585;\n    fcn.004187f0();\n    puStack72 = 0x417590;\n    fcn.004187f0();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x417735;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x4175d1;\n            puStack72 = &stack0xfffffffc;\n            fcn.004172f0(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x4175c8;\n            puStack72 = &stack0xfffffffc;\n            fcn.004174a0(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x4176f3;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.00417190(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.00417208(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.00417400(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.00403b78();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41776c;\n            uStack76 = 0x417756;\n            fcn.004040b4();\n            uStack76 = 0x417764;\n            fcn.00405020();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.00417208(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.00417208(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.00403554();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.00417154(&stack0xfffffffc);\n            fcn.00413c00();\n        }\n        else {\n            iVar3 = fcn.00413db8();\n            if (iVar3 < 0) {\n                fcn.00417154(&stack0xfffffffc);\n                fcn.00413c00();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 999
    },
    "00419944": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00419944(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.00413e44();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x419998 != (*0x419998 & *(in_EAX + 0x1c)))) {\n            fcn.0041988c();\n        }\n        else {\n            fcn.0041990c();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0041c764": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041c764(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    uStack92 = 0x41c8ed;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack100 = 0x41c7a3;\n        fcn.0041baa8();\n        uStack104 = 0x41c8c5;\n        iStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_40h = *(var_4h + 0x14);\n            var_3ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            if ((*(var_4h + 0x19) & 1) == 0) {\n                var_30h = 400;\n            }\n            else {\n                var_30h = 700;\n            }\n            var_2ch._0_1_ = (*(var_4h + 0x19) & 2) != 0;\n            var_2ch._1_1_ = (*(var_4h + 0x19) & 4) != 0;\n            var_2ch._2_1_ = (*(var_4h + 0x19) & 8) != 0;\n            var_2ch._3_1_ = *(var_4h + 0x1a);\n            puStack100 = &stack0xfffffffc;\n            fcn.004042f4();\n            iVar2 = fcn.00407d54();\n            if (iVar2 == 0) {\n                fcn.004042f4();\n                fcn.004087e4();\n            }\n            else {\n                fcn.004042f4();\n                fcn.004087e4();\n            }\n            var_26h = 0;\n            var_28h = 0;\n            var_27h = 0;\n            cVar1 = fcn.0041ca48();\n            if (cVar1 == '\\x01') {\n                var_25h = 2;\n            }\n            else if (cVar1 == '\\x02') {\n                var_25h = 1;\n            }\n            else {\n                var_25h = 0;\n            }\n            puStack112 = &fcn.0041c764::var_40h;\n            uVar3 = sub.gdi32.dll_CreateFontIndirectA();\n            *(var_4h + 8) = uVar3;\n        }\n        *in_FS_OFFSET = puStack112;\n        uStack104 = 0x41c8cc;\n        iStack108 = 0x41c8c4;\n        fcn.0041bab4();\n        return;\n    }\n    *in_FS_OFFSET = iStack96;\n    puStack88 = 0x41c8f4;\n    uStack92 = 0x41c8ec;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 924
    },
    "0041d9f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d9f4(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x41da64 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040b764();\n                fcn.00403acc();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.0041da90();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.0041dabc();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.0041daec();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00426010": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00426217)\n\nvoid fcn.00426010(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    bool bVar6;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack120 = &stack0xfffffffc;\n    uStack124 = 0x4262c1;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    (**(*in_EAX[0x1f] + 0x44))();\n    fcn.00402d74();\n    fcn.00425fc0();\n    fcn.00404550();\n    iVar1 = in_EAX[0x19];\n    in_EAX[0x1a] = iVar1;\n    fcn.004046dc();\n    fcn.00404550();\n    fcn.00402d74();\n    fcn.00404550();\n    fcn.004087b0();\n    if ((in_EAX[0x1b] != 0) || (*0x461720 == '\\0')) {\n        fcn.00404550();\n    }\n    fcn.00404550();\n    var_34h = 0x20;\n    uVar3 = 0;\n    puVar5 = 0x46172c;\n    do {\n        bVar6 = uVar3 < 0x1f;\n        if (uVar3 < 0x20) {\n            bVar6 = (*(in_EAX + ((uVar3 & 0x7f) >> 3) + 0x5c) >> (uVar3 & 7) & 1) != 0;\n        }\n        if (bVar6) {\n            var_34h = var_34h | *puVar5;\n        }\n        uVar3 = uVar3 + 1;\n        puVar5 = puVar5 + 1;\n    } while (uVar3 != '\\x16');\n    if (**0x4626a8 == '\\0') {\n        var_34h = var_34h & 0xfff7ffff;\n    }\n    else {\n        var_34h = var_34h ^ 0x80000;\n        if (((4 < **0x4625f8) && (**0x46298c == 2)) || ((**0x46298c == 1 && ((3 < **0x4625f8 && (0x59 < **0x462824))))))\n        {\n            cVar2 = '\\0';\n            do {\n                cVar2 = cVar2 + '\\x01';\n            } while (cVar2 != '\\x01');\n        }\n    }\n    fcn.00404128();\n    if ((var_34h & 0x80000) == 0) {\n        fcn.00408654();\n        fcn.004045f0();\n    }\n    iVar4 = (**(*in_EAX + 0x38))();\n    if (iVar4 != 0) {\n        fcn.0042641c();\n        if ((var_34h & 0x400) == 0) {\n            in_EAX[0x17] = in_EAX[0x17] & 0xffffff7f;\n        }\n        else {\n            in_EAX[0x17] = in_EAX[0x17] | 0x80;\n        }\n        if ((var_34h & 1) == 0) {\n            in_EAX[0x17] = in_EAX[0x17] & 0xfffffffe;\n        }\n        else {\n            in_EAX[0x17] = in_EAX[0x17] | 1;\n        }\n        in_EAX[0x19] = iVar1;\n    }\n    *in_FS_OFFSET = uStack128;\n    puStack120 = 0x4262c8;\n    uStack124 = 0x4262c0;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 1052
    },
    "0042641c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042641c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack24 = &fcn.0042641c::var_1h + 1;\n    uStack28 = 0x4264c7;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_1h._0_1_ = 0;\n    if (((*(in_EAX + 0x5c) & 0x40) != 0) && (((*(in_EAX + 0x5e) & 1) != 0 || (**0x4626a8 == '\\0')))) {\n        var_1h._0_1_ = 0x20;\n    }\n    if ((*(in_EAX + 0x5c) & 0x40) == 0) {\n        fcn.004262d4(&fcn.0042641c::var_1h + 1);\n        (**(**(in_EAX + 0x7c) + 0x38))();\n    }\n    else {\n        puStack24 = &fcn.0042641c::var_1h + 1;\n        fcn.0042631c(&fcn.0042641c::var_1h + 1);\n        (**(**(in_EAX + 0x7c) + 0xc))();\n        fcn.004040e4();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4264ce;\n    uStack28 = 0x4264c6;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 437
    },
    "00431964": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431964(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403358();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.00403554();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x4345c0;\n        fcn.00403554();\n        fcn.004197cc();\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "00431b04": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431b04(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.00431944();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x84))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else {\n                fcn.00403554();\n            }\n        }\n    }\n    fcn.00403554();\n    return;\n}\n",
        "token_count": 291
    },
    "00431bac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431bac(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.00433d34();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.00432a38();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.00431c44();\n        (**(*in_EAX + 0x7c))();\n        fcn.004337a4(0);\n        fcn.00403554();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.00403554();\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00431c44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00431c44(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack16;\n    uint uStack12;\n    \n    if ((*(in_EAX + 0x62) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        if (*0x431d5c == uVar1) {\n            *(in_EAX + 0x90) = 0;\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar3 = *(in_EAX + 0x48) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x48) & 1) != 0);\n                }\n                *(in_EAX + 0x88) = iVar3 + *(in_EAX + 0x40);\n            }\n            else if ((uVar1 & 1) == 0) {\n                *(in_EAX + 0x88) = *(in_EAX + 0x40);\n            }\n            else {\n                *(in_EAX + 0x88) = *(in_EAX + 0x48);\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar3 = *(in_EAX + 0x4c) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x4c) & 1) != 0);\n                }\n                *(in_EAX + 0x8c) = iVar3 + *(in_EAX + 0x44);\n            }\n            else if ((uVar1 & 2) == 0) {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x44);\n            }\n            else {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x4c);\n            }\n            iVar3 = *(in_EAX + 0x30);\n            if (iVar3 != 0) {\n                if ((*(iVar3 + 0x1c) & 2) == 0) {\n                    cVar2 = fcn.004390dc();\n                    if (cVar2 == '\\0') {\n                        *(in_EAX + 0x90) = *(*(in_EAX + 0x30) + 0x48);\n                        *(in_EAX + 0x94) = *(*(in_EAX + 0x30) + 0x4c);\n                    }\n                    else {\n                        (**(**(in_EAX + 0x30) + 0x44))();\n                        *(in_EAX + 0x90) = uStack16;\n                        *(in_EAX + 0x94) = uStack12;\n                    }\n                }\n                else if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n                    *(in_EAX + 0x90) = *(iVar3 + 0x1fa);\n                    *(in_EAX + 0x94) = *(iVar3 + 0x1fe);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "00431f58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431f58(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 1;\n    }\n    *(in_EAX + 0x158) = param_2;\n    return;\n}\n",
        "token_count": 91
    },
    "00431f6c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00431f6c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 0;\n    }\n    fcn.004040e4();\n    return;\n}\n",
        "token_count": 75
    },
    "0043220c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043220c(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar1 = *0x4323b0;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar1 = *(in_EAX + 0x26);\n        }\n        if ((uVar1 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar1 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar1 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar1 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar4 = (uVar1 & 8) == 0;\n        if ((bVar4) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar4) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        (**(*in_EAX + 0x84))(iStack32, in_stack_ffffffdc);\n        if (*0x4323b8 != (uVar1 & *0x4323b4)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x24], param_2, iStack32);\n            in_EAX[0x24] = iVar2;\n        }\n        if (*0x4323b8 != (uVar1 & *0x4323bc)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x25], param_2, iStack32);\n            in_EAX[0x25] = iVar2;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar1 & 0x10) != 0)) {\n            uVar3 = fcn.0041c9d4(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.0041c9f0();\n        }\n    }\n    *(in_EAX + 0x26) = *0x4323b8;\n    return;\n}\n",
        "token_count": 814
    },
    "004323d8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004323d8(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43246e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.004325f0();\n        fcn.0040449c();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004034e4();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x0043243a;\n            }\n            bVar2 = true;\n            goto code_r0x00432440;\n        }\n    }\ncode_r0x0043243a:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x00432440:\n    fcn.00419c54();\n    if (bVar2) {\n        fcn.00432620();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x432475;\n    uStack32 = 0x43246d;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 461
    },
    "00432c98": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00432c98(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint arg_8h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    cVar1 = fcn.004034e4();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x9b) != '\\x01')) {\n        fcn.0040b764();\n        fcn.00403acc();\n    }\n    fcn.004337d8();\n    if ((*0x463b2c == 0) || (*0x463b2c == -1)) {\n        *0x463b2c = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&uStack28);\n            fcn.00432134();\n            uStack28 = uStack20;\n            arg_8h = fcn.004069c0(uStack24);\n            fcn.004337a4(arg_8h);\n        }\n        if (*0x463b2c != -1) {\n            fcn.00430940();\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "004340d8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004340d8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x434184 == (*0x434180 & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x28] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.004337d8();\n        }\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "004348d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004348d0(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.00403554();\n    if (cVar1 != '\\0') {\n        if ((param_2 & 2) == 2) {\n            param_2 = param_2 & 0xfffffffd;\n        }\n        else if ((param_2 & 1) != 1) {\n            param_2 = param_2 | 2;\n        }\n    }\n    uVar2 = fcn.00434910();\n    return param_2 | uVar2;\n}\n",
        "token_count": 150
    },
    "00434ed4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434ed4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint8_t in_DL;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint *puStack92;\n    uint *puStack88;\n    uint *puStack84;\n    uint var_40h;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t nNumerator;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_5h;\n    \n    var_30h = *in_ECX;\n    uStack48 = in_ECX[1];\n    uStack44 = in_ECX[2];\n    uStack40 = in_ECX[3];\n    unique0x100001df = in_EAX;\n    if ((in_DL == 0) || (*(in_DL + 0x461ad4) != *(in_EAX + 0x61))) {\n        if ((in_EAX[0x24] != 0) && (in_EAX[0x25] != 0)) {\n            var_ch = in_EAX[0x10];\n            var_10h = in_EAX[0x11];\n            var_14h = in_EAX[0x12];\n            var_18h = in_EAX[0x13];\n            puStack84 = 0x434f58;\n            cVar2 = fcn.004390dc();\n            if (cVar2 == '\\0') {\n                puStack84 = 0x434f8c;\n                fcn.00412900();\n            }\n            else {\n                puStack84 = 0x434f6a;\n                (**(*stack0xfffffff8[0xc] + 0x44))();\n                nNumerator = var_38h;\n                var_1ch = var_34h;\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 4) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                    puStack84 = stack0xfffffff8[0x24];\n                    puStack88 = nNumerator;\n                    puStack92 = stack0xfffffff8[0x22];\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_14h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                var_ch = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            else {\n                var_14h = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 8) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                    puStack84 = stack0xfffffff8[0x25];\n                    puStack88 = var_1ch;\n                    puStack92 = stack0xfffffff8[0x23];\n                    var_10h = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_18h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_18h & 1) != 0);\n                    }\n                    var_10h = var_10h - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                var_10h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            else {\n                var_18h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            *(stack0xfffffff8 + 0x62) = 1;\n            puStack88 = 0x4350cd;\n            puStack92 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffa4;\n            puStack84 = &stack0xfffffffc;\n            (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n            *in_FS_OFFSET = var_18h;\n            *(stack0xfffffff8 + 0x62) = 0;\n            return;\n        }\n        if (in_DL == 0) {\n            return;\n        }\n    }\n    var_14h = *(*(arg_8h + -8) + 8) - **(arg_8h + -8);\n    if (((var_14h < 0) || (in_DL - 3 < 2)) || (in_DL == 6)) {\n        var_14h = in_EAX[0x12];\n    }\n    var_18h = *(*(arg_8h + -8) + 0xc) - *(*(arg_8h + -8) + 4);\n    if (((var_18h < 0) || (in_DL - 1 < 2)) || (in_DL == 6)) {\n        var_18h = in_EAX[0x13];\n    }\n    var_ch = **(arg_8h + -8);\n    var_10h = *(*(arg_8h + -8) + 4);\n    // switch table (7 cases) at 0x43516a\n    switch(in_DL) {\n    case 1:\n        piVar1 = *(arg_8h + -8) + 4;\n        *piVar1 = *piVar1 + var_18h;\n        break;\n    case 2:\n        piVar1 = *(arg_8h + -8) + 0xc;\n        *piVar1 = *piVar1 - var_18h;\n        var_10h = *(*(arg_8h + -8) + 0xc);\n        break;\n    case 3:\n        **(arg_8h + -8) = **(arg_8h + -8) + var_14h;\n        break;\n    case 4:\n        piVar1 = *(arg_8h + -8) + 8;\n        *piVar1 = *piVar1 - var_14h;\n        var_ch = *(*(arg_8h + -8) + 8);\n        break;\n    case 6:\n        var_ch = in_EAX[0x10];\n        var_10h = in_EAX[0x11];\n        puStack84 = &fcn.00434ed4::var_10h;\n        puStack88 = &fcn.00434ed4::var_14h;\n        puStack92 = &fcn.00434ed4::var_18h;\n        (**(**(arg_8h + -4) + 0xa8))(&fcn.00434ed4::var_30h, *(arg_8h + -8));\n    }\n    *(stack0xfffffff8 + 0x62) = 1;\n    puStack88 = 0x435255;\n    puStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n    *in_FS_OFFSET = var_18h;\n    *(stack0xfffffff8 + 0x62) = 0;\n    return;\n}\n",
        "token_count": 1810
    },
    "00435c64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435c64(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x435d82;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00402d74();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.00435bfc();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x69) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[100];\n    }\n    else {\n        iVar2 = fcn.00438dd8();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x463664;\n    fcn.004032a8();\n    fcn.004042f4();\n    fcn.004087e4();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x435d89;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 650
    },
    "00436f68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436f68(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint var_6ch;\n    uint nWidth;\n    uint var_5ch;\n    uint nHeight;\n    uint var_4ch;\n    uint var_ch;\n    uint hgdiobj;\n    uint hdc;\n    \n    if ((*(in_EAX + 0x7e) != '\\0') && (*(param_2 + 4) == 0)) {\n        uStack128 = 0;\n        uStack132 = 0x436fb8;\n        uVar2 = sub.user32.dll_GetDC();\n        uStack132 = 0x436fc4;\n        (**(*in_EAX + 0x44))();\n        uStack136 = 0x436fd2;\n        (**(*in_EAX + 0x44))();\n        uStack144 = 0x436fdc;\n        uStack140 = uVar2;\n        hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack148 = 0;\n        uStack152 = 0x436fe7;\n        uStack144 = uVar2;\n        sub.user32.dll_ReleaseDC();\n        uStack152 = 0;\n        uStack156 = 0x436fee;\n        uStack160 = sub.gdi32.dll_CreateCompatibleDC();\n        uStack156 = hgdiobj;\n        puStack164 = 0x436ffe;\n        hdc = uStack160;\n        var_ch = sub.gdi32.dll_SelectObject();\n        uStack168 = 0x4370ba;\n        uStack172 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff54;\n        puStack164 = &stack0xfffffffc;\n        uVar2 = fcn.00438dd8(&fcn.00436f68::var_4ch);\n        uVar2 = sub.user32.dll_BeginPaint(uVar2);\n        fcn.004337a4(hdc);\n        *(param_2 + 4) = hdc;\n        fcn.00436f68();\n        *(param_2 + 4) = 0;\n        (**(*in_EAX + 0x44))(hdc, 0, 0, 0xcc0020);\n        (**(*in_EAX + 0x44))(nHeight);\n        sub.gdi32.dll_BitBlt(uVar2, 0, 0, nWidth);\n        uVar2 = fcn.00438dd8(&fcn.00436f68::var_4ch);\n        sub.user32.dll_EndPaint();\n        *in_FS_OFFSET = uVar2;\n        sub.gdi32.dll_SelectObject(hdc, var_ch, 0x4370c1);\n        sub.gdi32.dll_DeleteDC(hdc);\n        sub.gdi32.dll_DeleteObject(hgdiobj);\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        uStack128 = 0x436f91;\n        iVar1 = fcn.00435b08();\n        if (iVar1 == 0) {\n            uStack128 = 0x436f9e;\n            (**(*in_EAX + -0x10))();\n            return;\n        }\n    }\n    uStack128 = 0x436fac;\n    fcn.00436a8c();\n    return;\n}\n",
        "token_count": 830
    },
    "00437374": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437374(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x4373c0 == (*0x4373bc & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.00433d34();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 184
    },
    "004373c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004373c4(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004390e8();\n    (**(*in_EAX + -0x10))();\n    fcn.00435698();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.00403554();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00437e60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00437e60(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    if ((*(in_EAX + 0x1a6) != '\\0') && (in_EAX = fcn.00435b08(),  piVar2 = in_EAX,  -1 < in_EAX + -1)) {\n        do {\n            piVar1 = fcn.00435acc();\n            in_EAX = piVar1;\n            if (((*(piVar1 + 0x57) != '\\0') && (in_EAX = (**(*piVar1 + 0x50))(),  in_EAX != '\\0')) &&\n               ((((*(piVar1 + 0x52) & 1) != 0 && (in_EAX = fcn.004337a4(*(*(arg_8h + -4) + 8)),  in_EAX != NULL)) ||\n                ((in_EAX = fcn.004034e4(),  in_EAX != '\\0' && (in_EAX = fcn.00437e60(arg_8h),  in_EAX != '\\0')))))) {\n                var_5h = 1;\n                break;\n            }\n            piVar2 = piVar2 + -1;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 356
    },
    "00439bcc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439bcc(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x165) == '\\0') && (in_EAX[0x5b] == 0)) {\n        uStack80 = 0x439e44;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x439e49;\n        fcn.004276c4();\n        uStack80 = 0x439e4e;\n        cVar3 = fcn.004277a4();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x439e60;\n            fcn.004276c4();\n            uStack80 = 0x439e6a;\n            fcn.00427cd4();\n        }\n        return;\n    }\n    uStack80 = 0x439bff;\n    uStack80 = fcn.00438dd8();\n    puStack84 = 0x439c05;\n    var_ch = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x439e32;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.00438dd8(&fcn.00439bcc::var_1ch);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.00438dd8(&fcn.00439bcc::var_2ch);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.00438dd8(&fcn.00439bcc::var_2ch, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.00439bcc::var_1ch, -var_2ch, -var_28h);\n    sub.gdi32.dll_ExcludeClipRect(var_ch, var_1ch, var_18h, var_14h, var_10h);\n    iVar2 = var_28h;\n    iVar1 = var_2ch;\n    sub.user32.dll_InflateRect(&fcn.00439bcc::var_1ch, var_4h[0x5b], var_4h[0x5b]);\n    var_2ch = var_1ch;\n    var_28h = var_18h;\n    var_24h = var_14h;\n    var_20h = var_10h;\n    if (*(var_4h + 0x165) != '\\0') {\n        iVar8 = 0;\n        if (*(var_4h + 0x163) != '\\0') {\n            iVar8 = var_4h[0x5a];\n        }\n        if (*(var_4h + 0x59) != '\\0') {\n            iVar8 = iVar8 + var_4h[0x5a];\n        }\n        uVar4 = fcn.00438dd8(0xfffffff0);\n        uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n        if ((*(var_4h + 0x162) & 1) != 0) {\n            var_2ch = var_2ch - iVar8;\n        }\n        if ((*(var_4h + 0x162) & 2) != 0) {\n            var_28h = var_28h - iVar8;\n        }\n        if ((*(var_4h + 0x162) & 4) != 0) {\n            var_24h = var_24h + iVar8;\n        }\n        if ((uVar5 & 0x200000) != 0) {\n            iVar6 = (***0x462610)(0x14);\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x162) & 8) != 0) {\n            var_20h = var_20h + iVar8;\n        }\n        if ((uVar5 & 0x100000) != 0) {\n            iVar8 = (***0x462610)(0x15);\n            var_20h = var_20h + iVar8;\n        }\n        sub.user32.dll_DrawEdge\n                  (var_ch, &fcn.00439bcc::var_2ch, \n                   *(*(var_4h + 0x163) * 4 + 0x461b98) | *(*(var_4h + 0x59) * 4 + 0x461ba8), \n                   *(var_4h + 0x162) | *(*(var_4h + 0x165) * 4 + 0x461bb8) | *(*(var_4h + 0x1a5) * 4 + 0x461bc8) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(var_ch, var_2ch, var_28h, var_24h, var_20h);\n    sub.user32.dll_OffsetRect(&fcn.00439bcc::var_2ch, -iVar1, -iVar2);\n    uVar7 = fcn.0041cf50();\n    uVar4 = var_ch;\n    sub.user32.dll_FillRect(var_ch, &fcn.00439bcc::var_2ch, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.00438dd8(var_ch, 0x439e39);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1485
    },
    "0044172c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.0044172c(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "00442944": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442944(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44322c;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) != '\\0') {\n        if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n            puVar2 = &stack0xfffffffc;\n            if (*(lprc + 8) != '\\0') {\n                fcn.0041cf1c();\n                puVar2 = puStack24;\n            }\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.0041cf1c();\n            fcn.0041c750();\n            puVar2 = puStack24;\n        }\n    }\n    puStack24 = puVar2;\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x21) != '\\0')) {\n        fcn.0041d580();\n    }\n    if (*(lprc - 0x30) == 0) {\n        cVar3 = fcn.004034e4();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x31) = 0;\n        }\n        else {\n            *(lprc - 0x31) = *(*(lprc - 0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x31) = 0;\n    }\n    *(lprc - 0x10) = *(lprc - 0x20) + 1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.0040449c();\n    if (bVar9) {\n        fcn.0041d580();\n        *(lprc - 0x10) = 0;\n        *(lprc - 8) = 0xfffffffc;\n        *(lprc - 0x39) = 0;\n    }\n    else {\n        if ((*(lprc - 0x40) == 0) ||\n           (((iVar5 = *(*(lprc - 0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.0043f708(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x41) = uVar4;\n        if ((*(lprc - 0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 8) = *(lprc - 0x10);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            *(lprc - 0x39) = 0;\n        }\n        else {\n            *(lprc - 0x39) = 1;\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 8) = *(lprc - 0x10) + 0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            if ((*(*(lprc - 0x38) + 0x38) != '\\0') && (*(lprc - 0x21) == '\\0')) {\n                *(lprc - 8) = *(lprc - 8) + 1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.0041cf14();\n                *(lprc - 0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.0041cf14();\n                    *(lprc - 0x48) = uVar7;\n                    fcn.00422244();\n                    fcn.0041cef0();\n                    fcn.0041d580();\n                }\n                else {\n                    fcn.0041cf1c();\n                    fcn.0041d580();\n                }\n                fcn.0041cf1c();\n                *(lprc - 0x10) = *(lprc - 0x10) + 1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x5c) = *(lprc - 0x10);\n                *(lprc - 0x58) = *(lprc - 0xc);\n                *(lprc - 0x54) = *(lprc - 8);\n                *(lprc - 0x50) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0x10) = iVar5 + *(lprc - 0x10) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    *(lprc - 8) = iVar5 + *(lprc - 0x10);\n                }\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.0041d648();\n                *(lprc - 0x10) = *(lprc - 0x5c);\n                *(lprc - 0xc) = *(lprc - 0x58);\n                *(lprc - 8) = *(lprc - 0x54);\n                *(lprc - 4) = *(lprc - 0x50);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.0043f708(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00420018();\n                    *(lprc - 0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00421240();\n                    *(lprc - 0x48) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.0041c750();\n                    iVar5 = *(lprc - 0x4c);\n                    iVar6 = (**(**(lprc - 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x4c) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.0041d4d4(iVar5);\n                    fcn.0041c750();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403358(0x442e9c);\n                    return;\n                }\n                fcn.0043f9f8(*(lprc - 0x38) & 0xffffff00 | *(*(lprc - 0x38) + 0x39), *(*(lprc - 0x38) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if (((*(*(lprc - 0x38) + 0x38) != '\\0') || ((*(lprc - 0x29) != '\\0' && (*(lprc - 0x39) != '\\0')))) &&\n       (*(lprc - 0x21) == '\\0')) {\n        uVar7 = fcn.0041d920();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x29) != '\\0') {\n        if (*(lprc - 0x39) != '\\0') {\n            *(lprc - 0x20) = *(lprc - 8) + 1;\n        }\n        if ((*(lprc - 0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.0041cf1c();\n        }\n        fcn.0041d580();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        if (*(lprc - 0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.0041d920();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.0041d920();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x29) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x39) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 8) + 1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 100) = *(*(lprc - 0x31) * 2 + 0x461ce8) | 0x60;\n    if ((*(lprc - 0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 100) = *(lprc - 100) | 0x100000;\n    }\n    *(lprc - 0x5c) = *(lprc - 0x20);\n    *(lprc - 0x58) = *(lprc - 0x1c);\n    *(lprc - 0x54) = *(lprc - 0x18);\n    *(lprc - 0x50) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.0041ca1c();\n    }\n    fcn.004426f4(*(lprc - 100) | 0x500, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    uVar8 = (*(lprc - 0x50) - *(lprc - 0x58)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc - 0x29) != '\\0')) && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.004426f4(*(lprc - 100), lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    if ((*(*(lprc - 0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 0x18);\n        *(lprc - 0x18) = *(lprc - 0x54) + -10;\n        iVar5 = lprc - 0x20;\n        uVar8 = lprc & 0xffffff00 | *(lprc - 0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.004417b8();\n        fcn.004426f4(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00404090(0x443233);\n    return;\n}\n",
        "token_count": 4061
    },
    "0044324c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044324c(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x443b54;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) != '\\0') {\n        if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n            puVar2 = &stack0xfffffffc;\n            if (*(lprc + 8) != '\\0') {\n                fcn.0041cf1c();\n                puVar2 = puStack24;\n            }\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.0041cf1c();\n            fcn.0041c750();\n            puVar2 = puStack24;\n        }\n    }\n    puStack24 = puVar2;\n    if ((*(lprc - 0x29) == '\\0') || ((*(lprc - 0x21) != '\\0' && (*(*(lprc - 0x38) + 0x38) == '\\0')))) {\n        fcn.0041d580();\n    }\n    if (*(lprc - 0x30) == 0) {\n        cVar3 = fcn.004034e4();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x31) = 0;\n        }\n        else {\n            *(lprc - 0x31) = *(*(lprc - 0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x31) = 0;\n    }\n    *(lprc - 8) = *(lprc - 0x18) + -1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.0040449c();\n    if (bVar9) {\n        fcn.0041d580();\n        *(lprc - 0x10) = *(lprc - 8) + 2;\n        *(lprc - 8) = 0;\n        *(lprc - 0x39) = 0;\n    }\n    else {\n        if ((*(lprc - 0x40) == 0) ||\n           (((iVar5 = *(*(lprc - 0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.0043f708(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x41) = uVar4;\n        if ((*(lprc - 0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 0x10) = *(lprc - 8);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            *(lprc - 0x39) = 0;\n        }\n        else {\n            *(lprc - 0x39) = 1;\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x10) = *(lprc - 8) + -0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 0x10) = *(lprc - 0x10) + -1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.0041cf14();\n                *(lprc - 0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.0041cf14();\n                    *(lprc - 0x48) = uVar7;\n                    fcn.00422244();\n                    fcn.0041cef0();\n                    fcn.0041d580();\n                }\n                else {\n                    fcn.0041cf1c();\n                    fcn.0041d580();\n                }\n                fcn.0041cf1c();\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x5c) = *(lprc - 0x10);\n                *(lprc - 0x58) = *(lprc - 0xc);\n                *(lprc - 0x54) = *(lprc - 8);\n                *(lprc - 0x50) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 8) = (*(lprc - 8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    *(lprc - 0x10) = *(lprc - 8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.0041d648();\n                *(lprc - 0x10) = *(lprc - 0x5c);\n                *(lprc - 0xc) = *(lprc - 0x58);\n                *(lprc - 8) = *(lprc - 0x54);\n                *(lprc - 4) = *(lprc - 0x50);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.0043f708(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00420018();\n                    *(lprc - 0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00421240();\n                    *(lprc - 0x48) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.0041c750();\n                    iVar5 = *(lprc - 0x4c);\n                    iVar6 = (**(**(lprc - 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x4c) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.0041d4d4(iVar5);\n                    fcn.0041c750();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403358(0x4437ac);\n                    return;\n                }\n                fcn.0043f9f8(*(lprc - 0x38) & 0xffffff00 | *(*(lprc - 0x38) + 0x39), *(*(lprc - 0x38) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if ((*(*(lprc - 0x38) + 0x38) != '\\0') ||\n       (((*(lprc - 0x29) != '\\0' && (*(lprc - 0x39) != '\\0')) && (*(lprc - 0x21) == '\\0')))) {\n        uVar7 = fcn.0041d920();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x29) != '\\0') {\n        if (*(lprc - 0x39) != '\\0') {\n            *(lprc - 0x18) = *(lprc - 0x10) + -1;\n        }\n        if ((*(lprc - 0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.0041cf1c();\n        }\n        fcn.0041d580();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        if (*(lprc - 0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.0041d920();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.0041d920();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x29) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x39) == '\\0')) {\n        *(lprc - 0x18) = *(lprc - 0x10) + -1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 100) = *(*(lprc - 0x31) * 2 + 0x461ce8) | 0x60;\n    if ((*(lprc - 0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 100) = *(lprc - 100) | 0x100000;\n    }\n    *(lprc - 0x5c) = *(lprc - 0x20);\n    *(lprc - 0x58) = *(lprc - 0x1c);\n    *(lprc - 0x54) = *(lprc - 0x18);\n    *(lprc - 0x50) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.0041ca1c();\n    }\n    fcn.004426f4(*(lprc - 100) | 0x500, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    *(lprc - 0x20) = *(lprc - 0x5c);\n    *(lprc - 0x18) = *(lprc - 0x54);\n    uVar8 = (*(lprc - 0x50) - *(lprc - 0x58)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x29) != '\\0')) && (*(lprc - 0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.004426f4(*(lprc - 100), lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    if ((*(*(lprc - 0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.004417b8();\n        *(lprc - 0x20) = 10;\n        iVar5 = fcn.0041d780();\n        *(lprc - 0x18) = iVar5 + *(lprc - 0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.004426f4(2, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00404090(0x443b5b);\n    return;\n}\n",
        "token_count": 4092
    },
    "00443b74": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443b74(uint noname_0, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.0044468c();\n    iVar3 = fcn.00443ca8();\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.00445cc8(),  cVar1 != '\\0')) {\n            fcn.0044324c(&stack0xfffffffc);\n        }\n        else {\n            fcn.00442944(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))(in_EAX & 0xffffff00 | (arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(&var_20h & 0xffff0000 | arg_ch & 0xffff, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "00444554": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444554(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403358();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.00403554();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x4447e8;\n        fcn.00403554();\n        fcn.004197cc();\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00445a00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445a00(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.00445f9c(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.00408764();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "00446a0c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446a0c(uint32_t arg_8h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint16_t extraout_var;\n    uint16_t extraout_var_00;\n    uint16_t extraout_var_01;\n    uint16_t uVar3;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x4625f8 < 5) && ((**0x4625f8 != 4 || (**0x462824 < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.00403554();\n    uVar2 = fcn.004034e4();\n    if (((arg_8h & 1) == 0) || ((uVar2 != 0 && ((uVar2 == 0 || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.0041cf1c();\n            fcn.0041c750();\n            uVar3 = extraout_var_00;\n        }\n        else {\n            fcn.0041cf1c();\n            fcn.0041c750();\n            uVar3 = extraout_var_01;\n        }\n    }\n    else {\n        fcn.0041cf1c();\n        fcn.0041c750();\n        uVar3 = extraout_var;\n    }\n    (**(*in_EAX + 0x30))(arg_8h & 0xff00 | uVar3 << 0x10 | uVar2, arg_8h & 0xffff | uVar3 << 0x10);\n    return;\n}\n",
        "token_count": 396
    },
    "00448ef0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00448ef0(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x448f40;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = uVar2 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "0044a1a8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a1a8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x208) + 0x1e) = 1;\n            *(*(in_EAX + 0x20c) + 0x1e) = 1;\n        }\n        fcn.004498cc();\n        fcn.004498cc();\n        if (*(in_EAX + 0x210) == '\\0') {\n            if (*(*(in_EAX + 0x208) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x208) + 0x10), param_2, param_1);\n                fcn.00449a1c();\n            }\n            if (*(*(in_EAX + 0x20c) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x20c) + 0x10), param_2, param_1);\n                fcn.00449a1c();\n            }\n        }\n    }\n    *(*(in_EAX + 0x208) + 0x1e) = 0;\n    *(*(in_EAX + 0x20c) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 351
    },
    "0044b2dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b2dc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x2f4) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.0044c414();\n        }\n        fcn.00432510();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) | 2;\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0044cca8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cca8(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44cd50;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x220)) goto code_r0x0044cd3a;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) goto code_r0x0044cd13;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x0044ccf2:\n        puStack24 = puVar1;\n        fcn.00405b90();\n        fcn.0040b6a8();\n        fcn.00403acc();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.0044903c();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x0044ccf2;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.00403554();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x0044ccf2;\n        }\n    }\ncode_r0x0044cd13:\n    puStack24 = puVar1;\n    *(in_EAX + 0x220) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x22e) != '\\0') {\n            fcn.0044d060();\n        }\n        fcn.00403554();\n    }\ncode_r0x0044cd3a:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44cd57;\n    uStack28 = 0x44cd4f;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 539
    },
    "0044d57c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d57c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x229) != '\\0') && ((*(*(arg_8h + -4) + 0x228) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x22f) != '\\x01')) {\n        uVar1 = fcn.00438dd8(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x229) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x228) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x228) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "0044f1a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044f1a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44f277;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00437874();\n    if (iVar1 == 1) {\n        fcn.00432564();\n        fcn.00404180();\n        uVar2 = fcn.00404350();\n        fcn.00404550(uVar2);\n        fcn.00432574();\n        iVar1 = fcn.00404350();\n        if (0 < iVar1) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.004046dc();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00432620();\n    }\n    fcn.004376e0();\n    fcn.00431b04();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.0044b2dc();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44f27e;\n    uStack32 = 0x44f276;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 413
    },
    "00454e10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00454e10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack112;\n    uint *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint *puStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    puStack68 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    uStack60 = 0x4550f8;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack72 = 0x4550af;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack80 = 0x454e56;\n    var_4h = in_EAX;\n    fcn.004147ac();\n    uStack80 = 0x454e64;\n    (**(**(var_4h + 0x218) + 0x44))();\n    iVar4 = 0;\n    uStack80 = 0x454e77;\n    fcn.00408588();\n    uStack80 = 0x454e87;\n    fcn.0040439c();\n    uStack80 = 0;\n    uStack84 = 0;\n    puStack88 = &fcn.00454e10::var_10h;\n    puStack92 = &fcn.00454e10::var_14h;\n    uStack96 = 0;\n    uStack100 = 0;\n    uStack104 = 0;\n    puStack108 = 0x454ea1;\n    puStack108 = fcn.00404550();\n    puStack112 = 0x454ea7;\n    sub.kernel32.dll_GetVolumeInformationA();\n    *(var_4h + 0x28d) = (var_10h & 3) != 0;\n    *(var_4h + 0x28e) = (var_10h & 1) != 0;\n    puStack112 = 0x454ecf;\n    iVar1 = fcn.00404350();\n    if ((iVar1 < 2) || (*0x1 != '\\\\')) {\n        puStack112 = 0x454f38;\n        fcn.00404128();\n    }\n    else {\n        puStack112 = 0x454ef7;\n        (**(**(var_4h + 0x218) + 0x3c))();\n        iVar4 = 1;\n        puStack108 = &fcn.00454e10::var_8h;\n        puStack112 = 0x454f0a;\n        puStack112 = fcn.00404350();\n        uStack116 = 0x454f13;\n        fcn.00404350();\n        puStack112 = 0x454f25;\n        fcn.004045b0();\n    }\n    puStack112 = 0x454f40;\n    iVar1 = fcn.00404350();\n    if (0 < iVar1) {\n        puStack112 = 0x454f50;\n        pcVar2 = fcn.004084d4();\n        if (*pcVar2 != '\\\\') {\n            puStack112 = 0x454f62;\n            iVar1 = fcn.0040c3c4();\n            while (iVar1 != 0) {\n                puStack112 = &fcn.00454e10::var_ch;\n                uStack116 = 0x454f7c;\n                fcn.004045b0();\n                if (iVar4 == 0) {\n                    uStack116 = 0x454f8d;\n                    fcn.00404358();\n                }\n                uStack116 = 0x454f9c;\n                fcn.004045f0();\n                uStack116 = 0x454fb6;\n                (**(**(var_4h + 0x218) + 0x3c))();\n                iVar4 = iVar4 + 1;\n                puStack112 = 0x454fc4;\n                iVar1 = fcn.0040c3c4();\n            }\n        }\n        puStack112 = 0x454fe4;\n        (**(**(var_4h + 0x218) + 0x3c))();\n    }\n    puStack112 = 0x454ff2;\n    (**(**(var_4h + 0x218) + 0x14))();\n    puStack112 = 0x455002;\n    piVar3 = fcn.00403328();\n    uStack116 = 0x45508c;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    fcn.004158ec();\n    fcn.00454ccc();\n    iVar4 = (**(*piVar3 + 0x14))();\n    if (-1 < iVar4 + -1) {\n        var_14h = 0;\n        do {\n            (**(*piVar3 + 0xc))();\n            (**(**(var_4h + 0x218) + 0x3c))();\n            var_14h = var_14h + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uStack120;\n    puStack112 = 0x455093;\n    uStack116 = 0x45508b;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 1415
    },
    "00401388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.00401388(void)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    if (*0x4635e4 == NULL) {\n        puVar2 = sub.kernel32.dll_LocalAlloc(0, 0x644);\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n        *puVar2 = *0x4635e0;\n        iVar4 = 0;\n        *0x4635e0 = puVar2;\n        do {\n            ppiVar1 = puVar2 + iVar4 * 4 + 1;\n            *ppiVar1 = *0x4635e4;\n            iVar4 = iVar4 + 1;\n            *0x4635e4 = ppiVar1;\n        } while (iVar4 != 100);\n    }\n    piVar3 = *0x4635e4;\n    *0x4635e4 = **0x4635e4;\n    return piVar3;\n}\n",
        "token_count": 238
    },
    "00401498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00401498(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iStack20;\n    \n    piVar6 = in_EAX;\n    while( true ) {\n        uVar1 = *param_2;\n        uVar4 = piVar6[2];\n        if ((uVar4 <= uVar1) && (uVar1 + param_2[1] <= uVar4 + piVar6[3])) break;\n        piVar6 = *piVar6;\n        if (in_EAX == piVar6) {\n            uVar5 = 0;\ncode_r0x00401524:\n            return CONCAT44(iStack20, uVar5);\n        }\n    }\n    if (uVar1 == uVar4) {\n        piVar6[2] = piVar6[2] + param_2[1];\n        uVar4 = param_2[1];\n        piVar6[3] = piVar6[3] - uVar4;\n        if (piVar6[3] == 0) {\n            uVar4 = fcn.00401410();\n        }\n    }\n    else if (uVar1 + param_2[1] == uVar4 + piVar6[3]) {\n        piVar6[3] = piVar6[3] - param_2[1];\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = param_2[1];\n        iStack20 = (piVar6[2] + piVar6[3]) - (uVar2 + uVar3);\n        piVar6[3] = uVar1 - uVar4;\n        uVar4 = fcn.004013e0(uVar2 + uVar3);\n        if (uVar4 == '\\0') {\n            uVar5 = 0;\n            goto code_r0x00401524;\n        }\n    }\n    uVar5 = CONCAT31(uVar4 >> 8, 1);\n    goto code_r0x00401524;\n}\n",
        "token_count": 507
    },
    "00401590": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401590(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0x100000;\n    iVar2 = sub.kernel32.dll_VirtualAlloc();\n    *param_1 = iVar2;\n    if (iVar2 == 0) {\n        param_1[1] = param_2 + 0xffffU & 0xffff0000;\n        iVar2 = sub.kernel32.dll_VirtualAlloc();\n        *param_1 = iVar2;\n    }\n    if (*param_1 != 0) {\n        cVar1 = fcn.004013e0();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_1, 0, 0x8000);\n            *param_1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00401608": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401608(uint32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    \n    uStack28 = 0xffffffff;\n    uStack24 = 0;\n    puVar1 = *0x4635e8;\n    while (puVar4 = puVar1,  puVar4 != 0x4635e8) {\n        puVar1 = *puVar4;\n        uVar2 = puVar4[2];\n        if ((in_EAX <= uVar2) && (uVar2 + puVar4[3] <= param_2 + in_EAX)) {\n            if (uVar2 < uStack28) {\n                uStack28 = uVar2;\n            }\n            if (uStack24 < uVar2 + puVar4[3]) {\n                uStack24 = uVar2 + puVar4[3];\n            }\n            iVar3 = sub.kernel32.dll_VirtualFree(uVar2, 0, 0x8000);\n            if (iVar3 == 0) {\n                *0x4635c4 = 1;\n            }\n            fcn.00401410();\n        }\n    }\n    *param_1 = 0;\n    if (uStack24 != 0) {\n        *param_1 = uStack28;\n        param_1[1] = uStack24 - uStack28;\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "004017d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004017d4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iStack24;\n    \n    puVar1 = *0x4635f8;\n    do {\n        for (; puVar1 != 0x4635f8; puVar1 = *puVar1) {\n            if ((in_EAX + 0x3fffU & 0xffffc000) <= puVar1[3]) {\n                fcn.004016c0();\n                if (*param_2 == 0) {\n                    return;\n                }\n                puVar1[2] = puVar1[2] + param_2[1];\n                puVar1[3] = puVar1[3] - param_2[1];\n                if (puVar1[3] != 0) {\n                    return;\n                }\n                fcn.00401410();\n                return;\n            }\n        }\n        fcn.0040152c();\n        if (*param_2 == 0) {\n            return;\n        }\n        fcn.00401428();\n        puVar1 = *0x4635f8;\n    } while (iStack24 != 0);\n    fcn.00401608();\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 297
    },
    "00401864": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401864(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    uVar2 = param_2 + 0x3fffU & 0xffffc000;\n    puVar1 = *0x4635f8;\ncode_r0x0040188a:\n    do {\n        for (; (puVar1 != 0x4635f8 && (in_EAX != puVar1[2])); puVar1 = *puVar1) {\n        }\n        if (in_EAX == puVar1[2]) {\n            if (uVar2 <= puVar1[3]) goto code_r0x00401937;\n            fcn.00401590();\n            if (iStack32 != 0) {\n                fcn.00401428();\n                puVar1 = *0x4635f8;\n                if (iStack24 == 0) {\n                    fcn.00401608();\n                    *param_1 = 0;\n                    return;\n                }\n                goto code_r0x0040188a;\n            }\n        }\n        fcn.00401590();\n        if (iStack32 == 0) {\ncode_r0x00401937:\n            if ((in_EAX != puVar1[2]) || (puVar1[3] < uVar2)) {\n                *param_1 = 0;\n                return;\n            }\n            fcn.004016c0();\n            if (*param_1 == 0) {\n                return;\n            }\n            puVar1[2] = puVar1[2] + param_1[1];\n            puVar1[3] = puVar1[3] - param_1[1];\n            if (puVar1[3] != 0) {\n                return;\n            }\n            fcn.00401410();\n            return;\n        }\n        fcn.00401428();\n        puVar1 = *0x4635f8;\n        if (iStack24 == 0) {\n            fcn.00401608();\n            *param_1 = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 504
    },
    "00401988": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401988(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    if ((in_EAX + 0x3fffU & 0xffffc000) < (param_2 + in_EAX & 0xffffc000U)) {\n        fcn.00401754();\n        fcn.00401428();\n        if (iStack28 != 0) {\n            fcn.00401608();\n            iStack28 = iStack20;\n        }\n        if (iStack28 != 0) {\n            fcn.00401498();\n        }\n    }\n    else {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00401a14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401a14(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x401aca;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    sub.kernel32.dll_InitializeCriticalSection(0x4635c8);\n    if (*0x463049 != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x4635c8);\n    }\n    fcn.004013d8();\n    fcn.004013d8();\n    fcn.004013d8();\n    uVar2 = 0;\n    *0x463620 = sub.kernel32.dll_LocalAlloc(0, 0xff8);\n    if (*0x463620 != 0) {\n        iVar1 = 3;\n        do {\n            *(*0x463620 + -0xc + iVar1 * 4) = 0;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n        *0x46360c = 0x463608;\n        *0x463608 = 0x463608;\n        *0x463614 = 0x463608;\n        *0x4635c0 = 1;\n    }\n    *in_FS_OFFSET = uVar2;\n    if (*0x463049 != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x4635c8, 0x401ad1);\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00401ad8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401ad8(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*0x4635c0 == '\\0') {\n        return;\n    }\n    uStack16 = 0x401bae;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puVar1 = &stack0xfffffffc;\n    if (*0x463049 != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x4635c8);\n        puVar1 = puStack12;\n    }\n    puStack12 = puVar1;\n    *0x4635c0 = 0;\n    puVar3 = *0x463620;\n    sub.kernel32.dll_LocalFree();\n    *0x463620 = NULL;\n    for (puVar2 = *0x4635e8; puVar2 != 0x4635e8; puVar2 = *puVar2) {\n        puVar3 = puVar2[2];\n        sub.kernel32.dll_VirtualFree();\n    }\n    fcn.004013d8();\n    fcn.004013d8();\n    fcn.004013d8();\n    while (puVar2 = *0x4635e0,  puVar2 != NULL) {\n        *0x4635e0 = *puVar2;\n        sub.kernel32.dll_LocalFree();\n        puVar3 = puVar2;\n    }\n    *0x4635e0 = puVar2;\n    *in_FS_OFFSET = puVar3;\n    uStack20 = 0x401bb5;\n    if (*0x463049 != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x4635c8);\n    }\n    sub.kernel32.dll_DeleteCriticalSection(0x4635c8);\n    return;\n}\n",
        "token_count": 448
    },
    "00401ea8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401ea8(void)\n\n{\n    if (0 < *0x463618) {\n        if (*0x463618 < 0xc) {\n            *0x4635c4 = 7;\n        }\n        else {\n            **0x46361c = *0x463618 | 2;\n            fcn.00401c7c();\n            *0x46361c = NULL;\n            *0x463618 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00401f80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00401f80(void)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    uint uStack8;\n    \n    fcn.004017d4();\n    if (iStack12 != 0) {\n        uVar1 = fcn.00401ef4();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00401fa7;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00401fa7:\n    return CONCAT44(uStack8, uVar1);\n}\n",
        "token_count": 139
    },
    "00401fac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00401fac(void)\n\n{\n    uint uVar1;\n    int32_t iStack16;\n    uint uStack12;\n    \n    fcn.00401864();\n    if (iStack16 != 0) {\n        uVar1 = fcn.00401ef4();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00401fd8;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00401fd8:\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 137
    },
    "00402100": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.00402100(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4635c0 == '\\0') {\n        puStack28 = 0x402119;\n        cVar2 = fcn.00401a14();\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    if (0x7ffffff8 < in_EAX) {\n        return NULL;\n    }\n    uStack32 = 0x40227c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (*0x463049 != '\\0') {\n        uStack40 = 0x4635c8;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    puVar4 = *0x46361c;\n    uVar5 = in_EAX + 7U & 0xfffffffc;\n    if (uVar5 < 0xc) {\n        uVar5 = 0xc;\n    }\n    if (uVar5 < 0x1001) {\n        uVar3 = uVar5;\n        if (uVar5 < 0) {\n            uVar3 = uVar5 + 3;\n        }\n        puVar1 = *(*0x463620 + -0xc + (uVar3 >> 2) * 4);\n        if (puVar1 != NULL) {\n            *(puVar1 + uVar5) = *(puVar1 + uVar5) & 0xfffffffe;\n            puVar4 = puVar1[1];\n            if (puVar1 == puVar4) {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x463620 + -0xc + (uVar3 >> 2) * 4) = 0;\n            }\n            else {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x463620 + -0xc + (uVar3 >> 2) * 4) = puVar4;\n                uVar3 = *puVar1;\n                *(uVar3 + 4) = puVar4;\n                *puVar4 = uVar3;\n            }\n            *puVar1 = puVar1[2] | 2;\n            *0x4635b0 = *0x4635b0 + 1;\n            *0x4635b4 = *0x4635b4 + (uVar5 - 4);\n            fcn.00403b78();\n            return puVar1 + 1;\n        }\n    }\n    if (*0x463618 < uVar5) {\n        fcn.0040200c();\n        puVar4 = NULL;\n        *in_FS_OFFSET = uStack40;\n        uStack32 = 0x402283;\n        if (*0x463049 != '\\0') {\n            uStack36 = 0x4635c8;\n            puVar4 = sub.kernel32.dll_LeaveCriticalSection();\n        }\n        return puVar4;\n    }\n    *0x463618 = *0x463618 - uVar5;\n    if (*0x463618 < 0xc) {\n        uVar5 = uVar5 + *0x463618;\n        *0x463618 = 0;\n    }\n    *0x46361c = *0x46361c + uVar5;\n    *puVar4 = uVar5 | 2;\n    *0x4635b0 = *0x4635b0 + 1;\n    *0x4635b4 = *0x4635b4 + (uVar5 - 4);\n    fcn.00403b78();\n    return puVar4 + 1;\n}\n",
        "token_count": 962
    },
    "00402610": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402610(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x4635c0 == '\\0') {\n        puStack24 = 0x402629;\n        cVar1 = fcn.00401a14();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    uStack28 = 0x4026c1;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x463049 != '\\0') {\n        uStack36 = 0x4635c8;\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    cVar1 = fcn.00402434();\n    if ((cVar1 == '\\0') && (iVar2 = fcn.00402100(),  iVar2 != 0)) {\n        fcn.00402980();\n        fcn.00402290();\n    }\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x4026c8;\n    if (*0x463049 != '\\0') {\n        uStack32 = 0x4635c8;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 359
    },
    "00402830": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402830(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x463008 != NULL) {\n        (**0x463008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.00405dfc();\n    }\n    fcn.004027d8();\n    return;\n}\n",
        "token_count": 80
    },
    "00402764": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402764(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00405dfc();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00405dfc();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "00402784": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402784(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00405dfc();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00405dfc();\n        return *(*piVar1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "0040283c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402811)\n// WARNING: Removing unreachable block (ram,0x00402816)\n\nvoid __fastcall fcn.0040283c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405dfc(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x463008 != NULL) {\n            (**0x463008)();\n        }\n        fcn.00405dfc();\n        fcn.004027d8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004029c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.004029c0(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puVar4 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (0x20 < *puVar4) {\n        if (*puVar4 == 0x22) {\n            puVar2 = sub.user32.dll_CharNextA(puVar4);\n            puVar3 = puVar4;\n            for (; (*puVar2 != 0 && (*puVar2 != 0x22)); puVar2 = sub.user32.dll_CharNextA(puVar3, puVar2)) {\n            }\n            puVar4 = puVar2;\n            if (*puVar2 != 0) {\n                puVar4 = sub.user32.dll_CharNextA(puVar3, puVar2);\n            }\n        }\n        else {\n            puVar4 = sub.user32.dll_CharNextA();\n        }\n    }\n    fcn.004046dc();\n    iVar1 = *param_2;\n    iVar5 = 0;\n    while (0x20 < *in_EAX) {\n        if (*in_EAX == 0x22) {\n            puVar4 = in_EAX;\n            in_EAX = sub.user32.dll_CharNextA(in_EAX);\n            while ((*in_EAX != 0 && (*in_EAX != 0x22))) {\n                puVar3 = sub.user32.dll_CharNextA(puVar4, in_EAX);\n                for (; in_EAX < puVar3; in_EAX = in_EAX + 1) {\n                    *(iVar1 + iVar5) = *in_EAX;\n                    iVar5 = iVar5 + 1;\n                }\n            }\n            if (*in_EAX != 0) {\n                in_EAX = sub.user32.dll_CharNextA(puVar4, in_EAX);\n            }\n        }\n        else {\n            puVar4 = sub.user32.dll_CharNextA();\n            for (; in_EAX < puVar4; in_EAX = in_EAX + 1) {\n                *(iVar1 + iVar5) = *in_EAX;\n                iVar5 = iVar5 + 1;\n            }\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 613
    },
    "00402aac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402aac(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.00404090();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack276, 0x105);\n        fcn.00404180();\n    }\n    else {\n        sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            fcn.004029c0();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0040340c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040340c(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x403490;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.004034a0();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004033dc();\n            fcn.004056e4();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x403497;\n    uStack32 = 0x40348f;\n    fcn.004056cc();\n    return;\n}\n",
        "token_count": 283
    },
    "00403554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403554(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.00403524(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00403561. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x463028 != NULL) {\n        (**0x463028)();\n    }\n    *0x461004 = param_2;\n    *0x461000 = 0xd2;\n    fcn.00403fa0();\n    return;\n}\n",
        "token_count": 165
    },
    "004036f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004036f8(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x461028 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x463014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00403f14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403f14(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x463048 != '\\0') {\n        if ((*0x46321c == -0x284e) && (*0x463224 != 0)) {\n            uStack8 = 0x403f3d;\n            (**0x463234)();\n        }\n        puStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        uStack16 = 0x1e;\n        uStack20 = 0x46106c;\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x403f52;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x403f9c, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x461030 == '\\0') {\n        uStack8 = 0;\n        puStack12 = 0x461064;\n        uStack16 = 0x46106c;\n        uStack20 = 0;\n        uStack24 = 0x403f91;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00403fa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403fa0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x46365c == 0) && (*0x463044 != NULL)) {\n        do {\n            pcVar1 = *0x463044;\n            *0x463044 = NULL;\n            (*pcVar1)();\n        } while (*0x463044 != NULL);\n    }\n    if (*0x461004 != 0) {\n        fcn.00403e88();\n        fcn.00403f14();\n        *0x461004 = 0;\n    }\n    do {\n        if ((*0x46365c == 2) && (*0x461000 == 0)) {\n            *0x463640 = 0;\n        }\n        fcn.00403d18();\n        if (((*0x46365c < 2) || (*0x461000 != 0)) && (*0x463644 != 0)) {\n            fcn.0040565c();\n            iVar2 = *(*0x463644 + 0x10);\n            if ((iVar2 != *(*0x463644 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.00403cf0();\n        if (*0x46365c == 1) {\n            (**0x463658)();\n        }\n        if (*0x46365c != 0) {\n            fcn.00403ee4();\n        }\n        if (*0x463634 == NULL) {\n            if (*0x463024 != NULL) {\n                (**0x463024)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x461000);\n        }\n        puVar3 = *0x463634;\n        puVar4 = 0x463634;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 485
    },
    "00404af4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404af4(void)\n\n{\n    if (*0x46100c != NULL) {\n        (**0x46100c)();\n        return;\n    }\n    fcn.00402830();\n    return;\n}\n",
        "token_count": 49
    },
    "00404b0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402804)\n\nvoid __fastcall fcn.00404b0c(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00404090();\n            }\n            else {\n                fcn.004040b4();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00404770();\n            }\n            else {\n                fcn.00404788();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00404af4();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404b0c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404ac0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.004056cc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x463008 != NULL) {\n                    (**0x463008)();\n                }\n                fcn.004027d8();\n                return;\n            }\n            do {\n                fcn.00405020();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "00404c04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404c04(void)\n\n{\n    if (*0x461014 != NULL) {\n        (**0x461014)();\n        return;\n    }\n    fcn.00402830();\n    return;\n}\n",
        "token_count": 47
    },
    "004050b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004050b4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.004052f0();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 153
    },
    "00405138": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00405138(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    iVar1 = sub.kernel32.dll_GetModuleHandleA(0x4052cc);\n    if (((iVar1 == 0) || (pcVar2 = sub.kernel32.dll_GetProcAddress(iVar1, 0x4052dc),  pcVar2 == NULL)) ||\n       (iVar1 = (*pcVar2)(lpString1, &lpFileName, 0x105),  iVar1 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00405124();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00405124();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar1 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar1 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.00405124();\n            if (0x105 < pcVar4 + (iVar1 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1, pcVar3, pcVar4 + (1 - pcVar3));\n            iVar5 = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (iVar5 == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(iVar5);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar1 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar1) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1 + 1, &lpString2, 0x104 - iVar1);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar1 = iVar1 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 842
    },
    "004052f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004052f0(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.004052f0::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.004052f0::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x405520;\n    uVar5 = 0x80000001;\n    noname_12 = 0x40532f;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.004052f0::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x405520;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x40534d;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.004052f0::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x40553c;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.004052f0::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.004052f0::lpLibFileName);\n                    for (puVar3 = &fcn.004052f0::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.004052f0::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.004052f0::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.004052f0::var_12h, 0x105 - (pcVar4 - &fcn.004052f0::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.004052f0::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.004052f0::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.004052f0::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.004052f0::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.004052f0::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.004052f0::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.004052f0::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00405138(noname_0, 0x4053f5, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.004052f0::lpLibFileName, 0, 0, &fcn.004052f0::var_12h, &fcn.004052f0::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x40555c, 0, 0, &fcn.004052f0::var_12h, &fcn.004052f0::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x4053fc);\n    return iVar1;\n}\n",
        "token_count": 1586
    },
    "004055f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004055f0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x461038;\n    if (*0x461038 != NULL) {\n        do {\n            uStack32 = 0x40562b;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "004057dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004057dc(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 653
    },
    "004058b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004058b8(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 848
    },
    "00405be8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405be8(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint lpLCData;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x405c4e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = 7;\n    sub.kernel32.dll_GetLocaleInfoA();\n    fcn.00404300();\n    fcn.00402d94();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00404090(0x405c55, uVar1);\n    return;\n}\n",
        "token_count": 183
    },
    "00406aa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406aa0(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x406b50, 0x406b3c);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x406b58);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x406b68);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x406b80);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 341
    },
    "0040cf74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040cf74(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar2 != *(in_EAX + 0x24)) {\n        fcn.0040cf30();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.0040cdac();\n        bVar5 = *(param_1 + 0xc) != 0;\n        if (bVar5) {\n            fcn.0040cd1c();\n        }\n        while( true ) {\n            iVar3 = fcn.0040cd3c();\n            if (iVar3 == 0xffff) break;\n            iVar3 = fcn.0040cd3c();\n            if (iVar3 != 0) {\n                fcn.0040cf64();\n            }\n        }\n        fcn.0040cf30();\n        if (bVar5) {\n            fcn.0040cd28();\n        }\n        *(in_EAX + 0x24) = iVar2;\n        iVar2 = fcn.0040cd1c();\n        uVar4 = unaff_EBX & 0xffffff00 | iVar2 + -1 == iVar1;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 381
    },
    "00408000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00408000(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00402d94();\n    if (iStack20 != 0) {\n        fcn.00407b00();\n    }\n    return uVar1;\n}\n",
        "token_count": 68
    },
    "0040803c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040803c(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402d94();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00408054": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00408054(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00402d94();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 83
    },
    "00408a00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408a00(void)\n\n{\n    if (**0x462950 != NULL) {\n        (***0x462950)();\n        return;\n    }\n    fcn.00402830();\n    return;\n}\n",
        "token_count": 48
    },
    "00408a30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408aff)\n\nvoid __cdecl fcn.00408a30(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x00408a59:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x00408a83;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x00408d97:\n    fcn.00408d87();\n    return;\ncode_r0x00408a83:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x00408d97;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.00408b12(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x00408aa2;\n    if (in_ECX == extraout_ECX) goto code_r0x00408d97;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x00408a83;\ncode_r0x00408aa2:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x00408d97;\n        in_ECX = in_ECX + 1;\n        fcn.00408b12(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.00408b5a(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x00408a59;\n}\n",
        "token_count": 1188
    },
    "00408b12": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408b12(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x00408d97:\n            fcn.00408d87();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x00408d97;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00408f40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408f40(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.00409214(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.0040903f();\n        puVar4 = extraout_ECX * 3 + 0x409030;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x40901c))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 443
    },
    "0040903f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040903f(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00409214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409214(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.00409241(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.00409363(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00409241": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409241(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x0040926c:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00402eac();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x461168);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x461174);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x0040926c;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0040932e;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0040932e:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x00409341;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x00409341:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x00409344;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x0040926c;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x00409344:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1173
    },
    "00409440": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409440(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x463687;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.004094f7();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.00409502();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.00409502();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0040951e(iVar4);\n        }\n        fcn.004094f7();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00402eac();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 528
    },
    "00409adc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409adc(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.004099a4(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00409b14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409b14(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.004096f8(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00409dc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409dc4(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint *in_FS_OFFSET;\n    uint uVar8;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x40a545;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        uVar7 = 0x20;\n        var_4h = in_EAX;\n        while (uVar1 = *var_4h,  uVar1 != 0) {\n            if ((*((uVar1 >> 3) + 0x46110c) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040c28c();\n                uVar3 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar3 = uVar1 - 0x20;\n                }\n                uVar6 = uVar7;\n                if (((uVar3 + 0xbf < 0x1a) && (uVar6 = uVar3,  uVar3 == 0x4d)) && (uVar7 == 0x48)) {\n                    uVar3 = 0x4e;\n                    uVar6 = uVar3;\n                }\n                uVar7 = uVar6;\n    // switch table (16 cases) at 0x409ee0\n                switch(uVar3) {\n                case 0x22:\n                case 0x27:\n                    while( true ) {\n                        uVar3 = *var_4h;\n                        if ((uVar3 == 0) || (uVar3 == uVar1)) break;\n                        if ((*((uVar3 >> 3) + 0x46110c) >> (uVar3 & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040c28c();\n                        }\n                    }\n                    fcn.00409a00(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.00409a00(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x463689 != '\\0') {\n                        fcn.00409a00(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x463694 != '\\0') {\n                        fcn.00409a00(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.00409b14(&stack0xfffffffc);\n                    iVar5 = fcn.0040888c();\n                    if (iVar5 == 0) {\n                        fcn.00409a00(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.0040888c();\n                        if (iVar5 == 0) {\n                            fcn.00409a00(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.0040888c();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.00409a44(arg_8h);\n                                }\n                                else {\n                                    fcn.00409a44(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.0040888c();\n                                if (iVar5 == 0) {\n                                    fcn.00409adc(&stack0xfffffffc);\n                                    uVar8 = *(arg_8h + 8);\n                                    fcn.004099c4(uVar8, *(arg_8h + 0xc));\n                                    fcn.00409a44(uVar8);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.0040888c();\n                                    if (iVar5 == 0) {\n                                        fcn.00409adc(&stack0xfffffffc);\n                                        uVar8 = *(arg_8h + 8);\n                                        fcn.004099c4(uVar8, *(arg_8h + 0xc));\n                                        fcn.00409a44(uVar8);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.00409a00(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    fcn.00409dc4(arg_8h);\n                    fcn.00409b14(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (stack0xffffffe2 != 0)) {\n                        fcn.00409a00(arg_8h);\n                        fcn.00409dc4(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.00409adc(&stack0xfffffffc);\n                        fcn.00409a64(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar8 = *(arg_8h + 8);\n                        fcn.004099c4(uVar8, *(arg_8h + 0xc));\n                        fcn.00409a44(uVar8);\n                    }\n                    else if (var_ch == 4) {\n                        uVar8 = *(arg_8h + 8);\n                        fcn.004099c4(uVar8, *(arg_8h + 0xc));\n                        fcn.00409a44(uVar8);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.00409dc4(arg_8h);\n                    }\n                    else {\n                        fcn.00409dc4(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    fcn.00409adc(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.00409cbc(&stack0xfffffffc);\n                    fcn.00409a44(iVar5);\n                    break;\n                case 0x47:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    fcn.00409adc(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.00409b54(&stack0xfffffffc);\n                    fcn.00409a44(iVar5);\n                    break;\n                case 0x48:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    fcn.00409b14(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (uVar1 = *puVar4,  uVar1 != 0) {\n                        if ((*((uVar1 >> 3) + 0x46110c) >> (uVar1 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0040a136;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0040a136:\n                                if (!bVar2) {\n                                    iVar5 = fcn.0040888c();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.0040888c(),  iVar5 != 0)) {\n                                        fcn.0040888c();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040c28c();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.00409a64(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    fcn.00409adc(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.00409a64(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.00409a44(arg_8h);\n                    }\n                    else {\n                        fcn.00409a44(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    fcn.00409b14(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.00409a64(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    fcn.00409b14(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.00409a64(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.00409dc4(arg_8h);\n                    }\n                    else {\n                        fcn.00409dc4(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    fcn.00409adc(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.00409a64(arg_8h);\n                    }\n                    else {\n                        fcn.00409a64(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.00409ab0(&stack0xfffffffc);\n                    fcn.00409b14(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.00409a64(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.0040c26c();\n                fcn.00409a00(iVar5);\n                var_4h = fcn.0040c28c();\n                uVar7 = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x40a54c;\n    uStack60 = 0x40a544;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 2729
    },
    "0040a7f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040a7f8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x463750;\n    puVar4 = 0x46376c;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.00404550();\n        fcn.00404550(uVar1);\n        iVar2 = fcn.0040c4f0();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 229
    },
    "0040a84c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a84c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x463744 == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.004099ec();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 241
    },
    "0040a8a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040a8a8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    ushort var_14h;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    char var_ah;\n    uchar var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack64 = 0x40abc3;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_12h._0_2_ = 0;\n    var_14h = 0;\n    var_18h._0_1_ = 0;\n    var_9h = 0;\n    var_ah = fcn.0040a764();\n    var_4h = 0;\n    if ((*0x46368c == NULL) || (**0x46368c != 'g')) {\n        iVar2 = fcn.0040c3c4();\n        if (0 < iVar2) {\n            var_4h = *0x46376c;\n        }\n    }\n    else {\n        fcn.0040a7b0();\n        fcn.004045b0(&fcn.0040a8a8::var_20h);\n        fcn.00407dc4();\n        var_4h = fcn.0040a7f8();\n    }\n    cVar1 = fcn.0040a60c(&fcn.0040a8a8::var_18h + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040a72c(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40a99e;\n        cVar1 = fcn.0040a60c(&fcn.0040a8a8::var_18h + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040a72c();\n            if (cVar1 == '\\0') {\n                fcn.004099ec();\n                if (var_ah == '\\x01') {\n                    var_14h = var_ch;\n                    var_12h._0_2_ = var_eh;\n                }\n                else {\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040a8a8::var_18h + 1;\n                cVar1 = fcn.0040a60c(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040aba8;\n                if (var_ah == '\\0') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n                else if (var_ah == '\\x01') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_ch;\n                }\n                else if (var_ah == '\\x02') {\n                    var_18h._0_1_ = var_18h._3_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_12h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_18h < 3) {\n                        fcn.004099ec();\n                    }\n                }\n                else {\n                    fcn.0040a84c(&stack0xfffffffc);\n                }\n            }\n            fcn.0040a72c();\n            fcn.0040a5e8();\n            if ((*0x46374c != '\\0') && (iVar2 = fcn.00404694(),  iVar2 != 0)) {\n                if (**0x4636a0 - 0x30U < 10) {\n                    fcn.0040a7b0();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.00404350(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040a5e8();\n                        iVar2 = fcn.00404350();\n                        if (iVar2 < *param_2) break;\n                        fcn.00404350();\n                        fcn.004045b0();\n                        iVar2 = fcn.00407d54();\n                        if (iVar2 == 0) break;\n                        fcn.00404350();\n                        fcn.004045b0();\n                        iVar2 = fcn.00407d54();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_9h = fcn.00409790(var_8h);\n            in_stack_ffffffac = var_8h;\n        }\n    }\ncode_r0x0040aba8:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.004040b4(0x40abca);\n    return;\n}\n",
        "token_count": 1317
    },
    "0040abec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040abec(void)\n\n{\n    char cVar1;\n    ushort extraout_var;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *puVar4;\n    ushort uVar5;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040a6a0();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040a6a0(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040a6a0();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040a6a0(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040a5e8();\n    }\n    cVar1 = fcn.0040a60c(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        uVar5 = 0x40;\n        cVar1 = fcn.0040a72c();\n        if (cVar1 != '\\0') {\n            puVar4 = &stack0xffffffe8;\n            cVar1 = fcn.0040a60c(puVar4);\n            uVar5 = puVar4 >> 0x10;\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xacca;\n            cVar1 = fcn.0040a72c();\n            if (cVar1 != '\\0') {\n                puVar4 = &stack0xffffffe4;\n                cVar1 = fcn.0040a60c(puVar4);\n                in_stack_ffffffd4 = puVar4;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40acf7;\n                cVar1 = fcn.0040a72c();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040a60c(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040a6a0();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040a6a0(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040a6a0();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040a6a0(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040a5e8();\n            uVar2 = fcn.00409688(in_stack_ffffffd0, CONCAT22(extraout_var, uVar5));\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 842
    },
    "0040af60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af60(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040aeec(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.00405b90();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0040b0c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b0c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x46374c) == 0) {\n            fcn.00404288();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "0040b5e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b5e0(void)\n\n{\n    uint uVar1;\n    uint uStack1128;\n    uchar *puStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uchar *puStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [8];\n    uchar auStack1036 [8];\n    uchar auStack1028 [1028];\n    \n    puStack1100 = 0x40b5f4;\n    fcn.0040b458(0x400);\n    if (**0x46283c == '\\0') {\n        puStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x46254c + 4);\n        puStack1112 = 0x40b676;\n        puStack1112 = fcn.004050fc();\n        uStack1116 = 0x40b67c;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        puStack1124 = &stack0xfffffbec;\n        uStack1128 = 0;\n        sub.user32.dll_MessageBoxA_1();\n    }\n    else {\n        puStack1100 = 0x40b608;\n        fcn.00402bc4();\n        puStack1100 = 0x40b60d;\n        fcn.0040283c();\n        puStack1100 = &stack0xfffffbfc;\n        puStack1104 = &stack0xfffffbfc;\n        puStack1112 = &stack0xfffffbb0;\n        uStack1108 = 0x40b61c;\n        sub.user32.dll_CharToOemA();\n        uStack1108 = 0;\n        uStack1116 = 0x40b62c;\n        uStack1116 = fcn.0040874c();\n        puStack1120 = &stack0xfffffbf4;\n        puStack1124 = 0xfffffff4;\n        uStack1128 = 0x40b639;\n        uStack1128 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff4, 0x40b6a4, 2, &stack0xfffffb98, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 587
    },
    "0040babc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040babc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40bc77;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.00405b90();\n    }\n    else {\n        fcn.00405b90();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.00404300();\n            fcn.0040861c();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.00405b90();\n            fcn.0040b6e4(arg_8h_00, puVar4);\n            goto code_r0x0040bc46;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.00405b90();\n    fcn.0040b6e4(arg_8h_00, puVar4);\ncode_r0x0040bc46:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00404090(0x40bc7e);\n    fcn.004040b4();\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 864
    },
    "0040bde8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040bde8(void)\n\n{\n    if (*0x463794 != NULL) {\n        *(*0x463794 + 3) = 1;\n        (**(**0x463794 + -8))();\n        *0x463794 = NULL;\n    }\n    if (*0x463798 != 0) {\n        *(*0x463798 + 0xc) = 1;\n        fcn.00403358();\n        *0x463798 = 0;\n    }\n    **0x4624c0 = 0;\n    **0x46260c = 0;\n    **0x462538 = 0;\n    **0x4625ec = 0;\n    **0x462614 = 0;\n    **0x4627b4 = 0;\n    return;\n}\n",
        "token_count": 178
    },
    "0040bfe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040bfe4(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x46110c) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x46110c) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x46110c) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "0040c05c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040c05c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x46374c != '\\0') {\n        fcn.00404550();\n        uVar1 = fcn.0040bfe4();\n    }\n    return uVar1;\n}\n",
        "token_count": 72
    },
    "0040c080": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040c080(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x46374c != '\\0') {\n        uVar1 = fcn.0040bfe4();\n    }\n    return uVar1;\n}\n",
        "token_count": 63
    },
    "0040c0c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c0c0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < param_2) {\n        iVar1 = fcn.00404350();\n        if ((param_2 <= iVar1) && (iVar3 = param_2,  *0x46374c != '\\0')) {\n            iVar1 = 1;\n            iVar3 = 0;\n            if (0 < param_2) {\n                do {\n                    uVar2 = *(in_EAX + -1 + iVar1);\n                    if ((*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) == 0) {\n                        iVar1 = iVar1 + 1;\n                    }\n                    else {\n                        iVar1 = fcn.0040c2d0();\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar1 <= param_2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 262
    },
    "0040c1a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c1a8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar2 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40c1c1;\n        iVar1 = fcn.00404350();\n        iVar2 = iStack16;\n        if (((param_2 <= iVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x46374c != '\\0')) {\n            fcn.0040c118(&stack0xfffffff0);\n            if ((iStack16 < param_2 + -1) || (iVar2 = fcn.00404350(),  iVar2 <= puVar3)) {\n                in_stack_ffffffec = NULL;\n                iVar2 = iStack16;\n            }\n            else {\n                in_stack_ffffffec = puVar3 + 1;\n                iVar2 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar2;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 309
    },
    "0040c20c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c20c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar1 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40c225;\n        iVar1 = fcn.00404350();\n        if (iVar1 < param_2) {\n            in_stack_ffffffec = 0x40c230;\n            param_2 = fcn.00404350();\n        }\n        iVar1 = param_2;\n        if (*0x46374c != '\\0') {\n            fcn.0040c118(&stack0xfffffff0);\n            iVar2 = fcn.00404350();\n            in_stack_ffffffec = puVar3;\n            iVar1 = iStack16;\n            if (iVar2 < puVar3) {\n                in_stack_ffffffec = fcn.00404350();\n                iVar1 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar1;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 294
    },
    "0040c26c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040c26c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x46374c != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 75
    },
    "0040c294": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c294(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x46374c != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00404550();\n        uVar1 = fcn.0040c26c();\n    }\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "0040c2d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c2d0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x46374c != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00404550();\n        iVar1 = fcn.0040c26c();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 170
    },
    "0040c464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040c464(uint param_1, uint32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*0x46374c == '\\0') {\n        uVar4 = fcn.00407ce8();\n    }\n    else {\n        iVar3 = fcn.00404350();\n        uVar4 = fcn.004046dc();\n        iVar6 = 1;\n        if (0 < iVar3) {\n            do {\n                iVar5 = fcn.004045a8();\n                *(iVar5 + -1 + iVar6) = *(in_EAX + -1 + iVar6);\n                uVar4 = *(in_EAX + -1 + iVar6);\n                if ((*((uVar4 >> 3) + 0x46110c) >> (uVar4 & 7) & 1) == 0) {\n                    cVar2 = *((*param_2 - 1) + iVar6);\n                    uVar4 = *param_2 & 0xffffff00 | cVar2 + 0xa5;\n                    if (cVar2 + 0xbfU < 0x1a) {\n                        uVar4 = fcn.004045a8();\n                        pcVar1 = (uVar4 - 1) + iVar6;\n                        *pcVar1 = *pcVar1 + ' ';\n                    }\n                }\n                else {\n                    iVar6 = iVar6 + 1;\n                    uVar4 = fcn.004045a8();\n                    *((uVar4 - 1) + iVar6) = *(in_EAX + -1 + iVar6);\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 <= iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 431
    },
    "0040c4f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c4f0(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.0040874c();\n        uVar2 = fcn.0040874c();\n        iVar4 = fcn.004088e4();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040c080();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA();\n                if (iVar3 == 2) goto code_r0x0040c586;\n            }\n            iVar4 = fcn.004088e4();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040c586:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 317
    },
    "0040c858": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040c858(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40cb23;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040c858::var_18h;\n    var_1ch = 0x40c87b;\n    var_ch = unaff_EBX;\n    fcn.0040c6e4();\n    var_1ch = 0x40c880;\n    fcn.0040af9c();\n    if (*0x46374c != '\\0') {\n        var_1ch = 0x40c88e;\n        fcn.0040b174();\n    }\n    var_1ch = 0x40c893;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040c858::var_10h;\n    var_20h = 0x40c8a7;\n    fcn.0040aeec(var_1ch);\n    var_20h = 0x40c8b4;\n    fcn.004040e4();\n    var_20h = &fcn.0040c858::var_14h;\n    var_24h = 0x40c8c9;\n    fcn.0040aeec(var_20h);\n    var_24h = 0x40c8d3;\n    *0x463684 = fcn.0040803c();\n    var_24h = &fcn.0040c858::var_18h;\n    var_28h = 0x40c8ed;\n    fcn.0040aeec(var_24h);\n    var_28h = 0x40c8f7;\n    *0x463685 = fcn.0040803c();\n    var_28h = 0x40c90a;\n    *0x463686 = fcn.0040af38();\n    var_28h = 0x40c91d;\n    *0x463687 = fcn.0040af38();\n    var_28h = &fcn.0040c858::var_1ch;\n    var_2ch = 0x40c937;\n    fcn.0040aeec(var_28h);\n    var_2ch = 0x40c941;\n    *0x463688 = fcn.0040803c();\n    var_2ch = 0x40c954;\n    *0x463689 = fcn.0040af38();\n    var_2ch = &fcn.0040c858::var_24h;\n    var_30h = 0x40c96e;\n    fcn.0040aeec(var_2ch);\n    var_30h = 0x40c979;\n    fcn.0040b224();\n    var_30h = 0x40c986;\n    fcn.004040e4();\n    var_30h = &fcn.0040c858::var_2ch;\n    var_34h = 0x40c99b;\n    fcn.0040aeec(var_30h);\n    var_34h = 0x40c9a6;\n    fcn.0040b224();\n    var_34h = 0x40c9b3;\n    fcn.004040e4();\n    var_34h = 0x40c9c1;\n    *0x463694 = fcn.0040af38();\n    var_34h = &fcn.0040c858::var_30h;\n    var_38h = 0x40c9db;\n    fcn.0040aeec(var_34h);\n    var_38h = 0x40c9e8;\n    fcn.004040e4();\n    var_38h = &fcn.0040c858::var_34h;\n    var_3ch = 0x40c9fd;\n    fcn.0040aeec(var_38h);\n    var_3ch = 0x40ca0a;\n    fcn.004040e4();\n    var_3ch = 0x40ca12;\n    fcn.00404090();\n    var_3ch = 0x40ca1a;\n    fcn.00404090();\n    var_3ch = &fcn.0040c858::var_38h;\n    var_40h = 0x40ca2f;\n    fcn.0040aeec(var_3ch);\n    var_40h = 0x40ca39;\n    iVar1 = fcn.0040803c();\n    if (iVar1 == 0) {\n        var_40h = 0x40ca4a;\n        fcn.00404128();\n    }\n    else {\n        var_40h = 0x40ca59;\n        fcn.00404128();\n    }\n    var_40h = &fcn.0040c858::var_3ch;\n    fcn.0040aeec(var_40h);\n    iVar1 = fcn.0040803c();\n    if (iVar1 == 0) {\n        fcn.0040aeec(&fcn.0040c858::var_40h);\n        iVar1 = fcn.0040803c();\n        if (iVar1 == 0) {\n            fcn.00404128();\n        }\n        else {\n            fcn.00404128();\n        }\n    }\n    fcn.00404410(var_ch, 0x40cbbc, var_4h, var_8h);\n    fcn.00404410(var_ch, 0x40cbc8, var_4h, var_8h);\n    *0x46374e = fcn.0040af38();\n    *in_FS_OFFSET = var_ch;\n    fcn.004040b4(0x40cb2a);\n    return;\n}\n",
        "token_count": 1673
    },
    "0040cca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040cca0(void)\n\n{\n    while( true ) {\n        if (*0x46130c == NULL) break;\n        *0x46130c = **0x46130c;\n        fcn.004026f4();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "0040ccc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ccc0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40ccf8);\n    if (iVar1 != 0) {\n        *0x461130 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40cd08);\n    }\n    if (*0x461130 == NULL) {\n        *0x461130 = fcn.004086d8;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0040d6d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d6d4(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x40d73c;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x463790 == 0;\n    *0x463790 = *0x463790 + -1;\n    if (bVar1) {\n        fcn.00403e3c();\n        fcn.00403e64();\n        if (*0x463661 != '\\0') {\n            fcn.004040e4();\n        }\n        fcn.0040bd64();\n        fcn.0040be68();\n        fcn.0040ccc0();\n        fcn.0040c858();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 224
    },
    "0040dbd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dbd8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 112
    },
    "0040f2ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f2ac(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x40f2ce;\n    var_4h = param_2;\n    uVar1 = fcn.004106c8();\n    var_5h = uVar1;\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.0040f2ac::pvarg;\n        puStack44 = 0x40f2e0;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x40f321;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.004040e4();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x40f328;\n        uStack52 = 0x40f320;\n        uVar1 = fcn.0040ecdc();\n        return uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 350
    },
    "0040f330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040f330(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xf;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x40f867;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040f330::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x40f369\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00404090();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x461318 != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.0040e57c();\n        }\n        fcn.004040e4();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004040e4();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004040e4();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.00409554(var_28h);\n        fcn.004040e4(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.00409554(var_28h);\n        fcn.004040e4(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0040f048(var_24h, *(param_2 + 6));\n        fcn.00404318();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0040f080(var_24h, *(param_2 + 6));\n        fcn.00404318();\n        break;\n    case 8:\n        var_14h = &stack0xfffffffc;\n        fcn.00404880();\n        fcn.0040496c(&fcn.0040f330::var_1ch);\n        var_24h = 0x40f4cd;\n        fcn.00404318();\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.0040f17c();\n        fcn.004040e4();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.004040e4();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.0040f248();\n            fcn.004040e4();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00404090();\n            cVar2 = fcn.0040f2ac();\n            if (cVar2 == '\\0') {\n                fcn.0040f17c();\n                fcn.004040e4();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x40f5fd\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.0040f17c();\n                fcn.004040e4();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004040e4();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004040e4();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.00409554(var_28h);\n                fcn.004040e4(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.00409554(var_28h);\n                fcn.004040e4(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0040f048(var_24h, (*(param_2 + 4))[1]);\n                fcn.00404318();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0040f080(var_24h, (*(param_2 + 4))[1]);\n                fcn.00404318();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.004042b8();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.0040f0b8();\n                fcn.00404318();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.0040f330();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004040e4();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004040e4();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004040e4();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00407fb0(var_24h);\n                fcn.004040e4(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00407fb0(var_24h);\n                fcn.004040e4(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.0040f0b8();\n        fcn.00404318();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.0040f330();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004040e4();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004040e4();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004040e4();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00407fb0(var_24h);\n        fcn.004040e4(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.00407fb0(var_24h);\n        fcn.004040e4(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x40f86e;\n    fcn.004040b4();\n    fcn.00404788();\n    fcn.004040b4();\n    fcn.00404788();\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 2598
    },
    "0040f990": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f990(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x40fa48;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x40f9c5;\n    var_4h = param_2;\n    var_5h = fcn.004106c8();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.0040f990::pvarg;\n        puStack60 = 0x40f9d7;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x40fa2b;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00404880();\n        fcn.0040496c(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x40fa32;\n        fcn.0040ecdc();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x40fa4f;\n    uStack48 = 0x40fa47;\n    fcn.00404770();\n    return;\n}\n",
        "token_count": 459
    },
    "0040fa58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040fa58(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x40ffaa;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040fa58::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x40fa92\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.00404770();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x461318 != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.0040e57c();\n        }\n        fcn.004048bc();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004048bc();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004048bc();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.00409554(var_2ch);\n        fcn.004048bc(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.00409554(var_2ch);\n        fcn.004048bc(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.0040f048(var_28h, *(param_2 + 6));\n        fcn.004047ac();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.0040f080(var_28h, *(param_2 + 6));\n        fcn.004047ac();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00404880();\n        var_28h = 0x40fbe9;\n        fcn.0040496c(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.0040f874();\n        fcn.004047ac();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.004048bc();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.0040f92c();\n            fcn.004047ac();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.00404770();\n            cVar2 = fcn.0040f990();\n            if (cVar2 == '\\0') {\n                fcn.0040f874();\n                fcn.004047ac();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x40fd19\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.0040f874();\n                fcn.004047ac();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004048bc();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004048bc();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.00409554(var_2ch);\n                fcn.004048bc(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.00409554(var_2ch);\n                fcn.004048bc(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.0040f048(var_28h, (*(param_2 + 4))[1]);\n                fcn.004047ac();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.0040f080(var_28h, (*(param_2 + 4))[1]);\n                fcn.004047ac();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.00404880();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.0040f0b8();\n                fcn.004047ac();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.0040fa58();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004048bc();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004048bc();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00407ec4();\n                fcn.004048bc();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00407fb0(var_28h);\n                fcn.004048bc(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00407fb0(var_28h);\n                fcn.004048bc(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.0040f0b8();\n        fcn.004047ac();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.0040fa58();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004048bc();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004048bc();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00407ec4();\n        fcn.004048bc();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00407fb0(var_28h);\n        fcn.004048bc(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.00407fb0(var_28h);\n        fcn.004048bc(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x40ffb1;\n    fcn.00404788();\n    fcn.004040b4();\n    fcn.00404788();\n    fcn.004040b4();\n    fcn.00404788();\n    fcn.004040b4();\n    fcn.00404788();\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 2571
    },
    "0040ffb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ffb8(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0040ec60();\n    }\n    if (*0x461320 == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x461334);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 127
    },
    "00410424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410424(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x463824;\n    puStack20 = 0x410438;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack24 = 0x410485;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00404e58();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x463820 + iVar1 * 4) != *0x461328) {\n                fcn.00403358();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41048c;\n    uStack24 = 0x463824;\n    uStack28 = 0x410484;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 276
    },
    "004106c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004106c8(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint32_t in_EAX;\n    unkuint3 Var3;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x463820 == 0) || (in_EAX < 0x100)) || (0x7ff < in_EAX)) {\n        bVar1 = false;\n        Var3 = 0;\n    }\n    else {\n        Var3 = in_EAX >> 8;\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x463824;\n        puStack28 = 0x410703;\n        sub.kernel32.dll_EnterCriticalSection_1();\n        uStack32 = 0x410770;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.004106c8::var_1h + 1;\n        iVar2 = fcn.00404e58();\n        if ((in_EAX & 0xffff) - 0x100 < iVar2) {\n            *param_2 = *(*0x463820 + -0x400 + (in_EAX & 0xffff) * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x410777;\n        uStack32 = 0x463824;\n        uStack36 = 0x41076f;\n        iVar2 = sub.kernel32.dll_LeaveCriticalSection_1();\n        return iVar2;\n    }\n    return Var3 << 8;\n}\n",
        "token_count": 416
    },
    "00410b40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00410b40(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00408000();\n        return uVar2;\n    }\n    iVar3 = fcn.00410ae8();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00407cc4();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00407cc4();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00408000();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.00410af4();\n    }\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "00410c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00410c14(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 398
    },
    "004144f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004144f4(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00414514": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414514(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "00419ecc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419ecc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00419eec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419eec(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00412aa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412aa8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00412a48();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00412a48();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.0040356c();\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00412b18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00412b18(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    uVar1 = fcn.00403328();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00403328();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.00403328();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.00413c00();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 249
    },
    "00412d58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412d58(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00413d5c();\n            cVar1 = fcn.00412d38();\n            if (cVar1 != '\\0') {\n                fcn.00413c4c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00413d5c();\n            cVar1 = fcn.00412d38();\n            if (cVar1 != '\\0') {\n                fcn.00413c4c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = (**(**(in_EAX + 8) + 0x14))();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            (**(**(in_EAX + 8) + 0x18))();\n            cVar1 = fcn.00412d38();\n            if (cVar1 != '\\0') {\n                (**(**(in_EAX + 8) + 0x48))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 368
    },
    "00412f5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00412f5c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00413d5c();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.00412bd4();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 177
    },
    "00413030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00413030(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00412f18();\n    if (iVar2 == 0) {\n        fcn.00412fa0(&stack0xfffffffc);\n    }\n    fcn.00412a3c();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.00413d5c();\n            if ((iVar3 != iVar2) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.00413d5c();\n                    cVar1 = fcn.0040356c();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.00412f18(),  iVar4 == iVar2)) {\n                        fcn.00413c4c();\n                        fcn.00413c00();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "004131bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004131bc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.00413d5c();\n            fcn.00412d58();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00403358();\n                fcn.00413c4c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0041320c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041320c(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x413221;\n        in_EAX = fcn.00403664();\n    }\n    puStack48 = 0x413234;\n    fcn.00403328();\n    puStack48 = 0x413240;\n    uVar3 = fcn.00403328();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x413250;\n    fcn.004130f8();\n    uStack52 = 0x41330b;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x46385c + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.00413d5c();\n            cVar2 = fcn.00412c34();\n            if (cVar2 != '\\0') {\n                fcn.00413c00();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x46385c + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.00413d5c();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.00413c00();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x413312;\n    uStack52 = 0x41330a;\n    fcn.004131b0();\n    return;\n}\n",
        "token_count": 543
    },
    "00413368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00413368(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x413385;\n    fcn.004130f8();\n    uStack32 = 0x4133df;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413d5c();\n            iVar1 = fcn.00412bd4();\n            if (iVar1 != 0) {\n                fcn.00403b78();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4133e6;\n    uStack32 = 0x4133de;\n    iVar2 = fcn.004131b0();\n    return iVar2;\n}\n",
        "token_count": 296
    },
    "00413750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00413750(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x413768;\n    iVar1 = fcn.004140c8();\n    uStack28 = 0x4137ba;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00413d5c();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00403b78();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4137c1;\n    uStack28 = 0x4137b9;\n    uVar3 = fcn.0041412c();\n    return uVar3;\n}\n",
        "token_count": 304
    },
    "00413850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00413850(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x463860 == 0) {\n        *0x463860 = fcn.00403328();\n    }\n    iVar1 = fcn.00413db8();\n    if (iVar1 < 0) {\n        fcn.00413c00();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00413890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00413890(void)\n\n{\n    if (*0x463860 != 0) {\n        fcn.00413ea0();\n    }\n    return;\n}\n",
        "token_count": 38
    },
    "004138a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004138a8(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x463860 != 0) && (iVar3 = *(*0x463860 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.00413d5c();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 151
    },
    "004138e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004138e8(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x46384c != NULL) {\n        uVar1 = (**0x46384c)();\n        return uVar1;\n    }\n    uVar1 = fcn.004138a8();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 87
    },
    "00413a18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00413a18(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00405dfc();\n    fcn.00403358();\n    iVar1 = fcn.00405dfc();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.00413e44();\n    iVar3 = fcn.00405dfc();\n    *(iVar3 + 8) = uVar2;\n    fcn.00413c4c();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.00405dfc();\n        *(iVar1 + 0xc) = 0;\n        fcn.00403358();\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00413b1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413b1c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x413b32;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x463848 + 0x14))();\n    uStack24 = 0x413bca;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x413bdc == (*(var_4h + 0x1c) & *0x413bd8);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x413b67;\n        puStack20 = &stack0xfffffffc;\n        fcn.00413990();\n    }\n    uStack36 = 0x413bab;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004032a0();\n    var_9h = fcn.00413a74(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.004139e8();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x413bb2;\n    if (var_ah != '\\0') {\n        uStack36 = 0x413baa;\n        fcn.00413a18();\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "0041418c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041418c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.00414168(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar2 = (iVar1 >> 5) << 2;\n        iVar1 = *(in_EAX + 4) + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) << 2;\n        if (iVar1 != iVar2) {\n            iVar3 = 0;\n            if (iVar2 != 0) {\n                iVar3 = fcn.004026d4();\n                fcn.00402d74();\n            }\n            if (iVar1 != 0) {\n                if (iVar3 != 0) {\n                    fcn.00414180();\n                    fcn.00402980();\n                }\n                fcn.004026f4();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00414230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414230(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040b764();\n            fcn.00403acc();\n            return;\n        }\n        fcn.0041418c();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 214
    },
    "004143f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414459)\n\nvoid fcn.004143f0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x414485;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.004032a8();\n    fcn.004042f4();\n    iVar1 = fcn.00403554();\n    if (iVar1 != 0) {\n        fcn.00403554();\n        fcn.00403554();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.00404090(0x41448c);\n    return;\n}\n",
        "token_count": 215
    },
    "0041457c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041457c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x414598;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x4145d6;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.00413e44();\n            fcn.00403358();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x4145dd;\n        uStack20 = 0x4145d5;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "004147ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004147ac(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[2] = in_EAX[2] + 1;\n    return;\n}\n",
        "token_count": 72
    },
    "00414868": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00414868(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[2] = in_EAX[2] + -1;\n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0041513c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041513c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x10))();\n    }\n    fcn.004056e4();\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "004151c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004151c0(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x415274;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x4151e7;\n    fcn.004147ac();\n    uStack36 = 0x415257;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1) {\n            }\n            fcn.00404180();\n            (**(*in_EAX + 0x38))();\n            if (*param_2 == '\\r') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '\\n') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41525e;\n    uStack36 = 0x415256;\n    fcn.00414868();\n    return;\n}\n",
        "token_count": 416
    },
    "004156d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004156d4(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 7) != '\\0') {\n        fcn.00414960();\n    }\n    if ((in_EDX < 0) || (in_EAX[5] < in_EDX)) {\n        fcn.00414960();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 116
    },
    "00415a34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415a34(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x00415a4c:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x00415a76;\n            }\n            else if (arg_ch < 1) goto code_r0x00415a76;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x00415a4c;\n    fcn.0040b764();\n    fcn.00403acc();\n    in_EAX = extraout_ECX;\ncode_r0x00415a76:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 212
    },
    "00415ad4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415ad4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.004032a0();\n    while ((var_20h != 0 && (var_20h != *0x411f28))) {\n        var_20h = fcn.004032e4();\n    }\n    if (var_20h == 0) {\n        fcn.00415a88(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.00415a88(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 289
    },
    "00415b58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.00415b58(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x00415b77:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x00415ba1;\n            }\n            else if (arg_ch < 1) goto code_r0x00415ba1;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x00415b77;\n    fcn.0040b764();\n    fcn.00403acc();\ncode_r0x00415ba1:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "00415c38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415c38(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x415c5d;\n        fcn.004159bc(0, 0);\n        uStackY52 = 0x415c63;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x00415c91:\n            var_14h = arg_8h;\n            goto code_r0x00415c97;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x00415c91;\n    var_14h = 0xf000;\ncode_r0x00415c97:\n    fcn.004026d4();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.004026f4();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x00415cc9:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x00415cc9;\n        fcn.00415bc8();\n        fcn.00415c00();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 542
    },
    "00415e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415e94(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x415eb7;\n        in_EAX = fcn.00403664();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x415fbd;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        puStack72 = &fcn.00415e94::var_1h + 1;\n        fcn.004082a4();\n        fcn.00415d8c();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040869c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040aea0();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040b7a0(1, &fcn.00415e94::var_14h);\n            fcn.00403acc();\n        }\n    }\n    else {\n        puStack72 = &fcn.00415e94::var_1h + 1;\n        fcn.00408228();\n        fcn.00415d8c();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040869c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040aea0();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040b7a0(1, &fcn.00415e94::var_14h);\n            fcn.00403acc();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x415fc4;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 663
    },
    "00416554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00416554(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.00404180();\n        fcn.004045f0();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 130
    },
    "00416630": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416630(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4166d6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.00404180();\n            iVar2 = fcn.00419c04();\n            if ((iVar2 == 0) && (cVar1 = fcn.00407cc4(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4166dd;\n    uStack32 = 0x4166d5;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 394
    },
    "00416778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00416778(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x41678b;\n    (**(**0x463848 + 0x14))();\n    uStack36 = 0x416911;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x4167a3;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = fcn.004140c8();\n    uStack48 = 0x4168f2;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x4168f9;\n        uStack48 = 0x4168f1;\n        fcn.0041412c();\n        return;\n    }\n    puStack56 = 0x4167c9;\n    puStack44 = &stack0xfffffffc;\n    fcn.00403328();\n    uStack60 = 0x4168d3;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x4167e6;\n    puStack56 = &stack0xfffffffc;\n    fcn.00403328();\n    uStack72 = 0x416881;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar5 = 0;\n    puStack68 = &stack0xfffffffc;\n    do {\n        while( true ) {\n            if (*(iVar1 + 8) <= iVar5) {\n                *in_FS_OFFSET = uStack76;\n                puStack68 = 0x416888;\n                uStack72 = 0x416880;\n                fcn.00403358();\n                return;\n            }\n            puVar2 = fcn.00413d5c();\n            iVar3 = fcn.004138a8();\n            if (iVar3 == 0) break;\ncode_r0x00416826:\n            if (iVar3 != 0) {\n                fcn.00416630();\n                (***puVar2)();\n            }\n            fcn.004166f8(&stack0xfffffffc);\n            fcn.00413c4c();\n            fcn.00403358();\n        }\n        iVar4 = fcn.00410c14();\n        if (iVar4 != 0) goto code_r0x00416826;\n        fcn.00416730(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 730
    },
    "00416920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416920(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x463864 == 0) {\n        return;\n    }\n    puStack28 = 0x416946;\n    iVar2 = fcn.004140c8();\n    uStack32 = 0x4169bb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.00413d5c();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00407cc4();\n                    if (cVar1 == '\\0') goto code_r0x0041699d;\n                }\n                fcn.00413c4c();\n                fcn.00403358();\n            }\ncode_r0x0041699d:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4169c2;\n    uStack32 = 0x4169ba;\n    fcn.0041412c();\n    return;\n}\n",
        "token_count": 386
    },
    "004169cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004169cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x463864 != 0) {\n        puStack24 = 0x4169e9;\n        iVar1 = fcn.004140c8();\n        uStack28 = 0x416a43;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00413d5c();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.00413c4c();\n                    fcn.00403358();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x416a4a;\n        uStack28 = 0x416a42;\n        fcn.0041412c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00416b18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416b18(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00407cc4();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.00404090();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00416b4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416b4c(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x416b65;\n    cVar1 = fcn.00407cc4();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x416b80;\n        cVar1 = fcn.004189cc();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x416b92;\n            fcn.00418adc();\n            *(in_EAX + 0x78) = 1;\n            puStack24 = 0x416b9e;\n            fcn.00416a68();\n        }\n        puStack24 = 0x416baa;\n        piVar2 = fcn.00403328();\n        uStack28 = 0x416c0d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00416f90();\n        (**(*piVar2 + 4))();\n        fcn.00416f90();\n        *(in_EAX + 0x78) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x416c14;\n        uStack28 = 0x416c0c;\n        fcn.00403358();\n        return;\n    }\n    return;\n}\n",
        "token_count": 452
    },
    "00416cc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00416cc4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x416cd6;\n    iVar1 = fcn.004140c8();\n    uStack24 = 0x416d34;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00413d5c();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00403358();\n                fcn.00413c4c();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x416d3b;\n    uStack24 = 0x416d33;\n    fcn.0041412c();\n    return;\n}\n",
        "token_count": 300
    },
    "00417208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.00417208(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.00404e58();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "004172f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004172f0(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4173d6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x417315;\n    iVar2 = fcn.00418e60();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x6a) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x417347;\n        (**(*(arg_8h + -8) + 0x68))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x417355;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x4173aa;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 535
    },
    "00417780": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00417780(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x41779f;\n        uVar1 = fcn.00403328();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x4177db;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.004177f0();\n        fcn.00416d40();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x4177ec;\n        uStack20 = 0x4177da;\n        fcn.00416e84();\n        return;\n    }\n    puStack16 = 0x4177ec;\n    fcn.004177f0();\n    return;\n}\n",
        "token_count": 253
    },
    "00417bdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417bdc(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x417ccd;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.00404090();\n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        fcn.00404128();\n    }\n    if (var_4h == 0) {\n        fcn.004032a8();\n        fcn.004042f4();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x462628;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040b7a0(3, &var_124h);\n    fcn.00403acc();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x417cd4;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 458
    },
    "00417cf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417cf8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack44 = 0x417ec8;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x417e7d;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x417d33;\n    fcn.004187f0();\n    uStack68 = 0x417e56;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    iVar4 = 1;\n    puStack64 = &stack0xfffffffc;\n    iVar2 = fcn.00404350();\n    *(in_EAX + 0x78) = 1;\n    var_10h = param_2;\n    while( true ) {\n        for (; (iVar4 <= iVar2 && (*(iVar4 + -1) != '.')); iVar4 = iVar4 + 1) {\n        }\n        iStack72 = in_EAX + 0x70;\n        fcn.004045b0();\n        if (iVar2 < iVar4) break;\n        fcn.00403580();\n        puVar3 = fcn.00410ba4();\n        if (puVar3 == NULL) {\n            fcn.00416f7c();\n        }\n        var_14h = NULL;\n        if (***puVar3 == '\\a') {\n            var_14h = fcn.00410c14();\n        }\n        cVar1 = fcn.004034e4();\n        if (cVar1 == '\\0') {\n            fcn.00417cdc(&stack0xfffffffc);\n        }\n        var_10h = var_14h;\n        iVar4 = iVar4 + 1;\n    }\n    fcn.00403580();\n    iVar2 = fcn.00410ba4();\n    if (iVar2 == 0) {\n        *(in_EAX + 0x78) = 0;\n        (**(*var_10h + 4))();\n        *(in_EAX + 0x78) = 1;\n        if (*(in_EAX + 0x70) != 0) {\n            fcn.00416f7c();\n        }\n    }\n    else {\n        fcn.0041807c();\n    }\n    *in_FS_OFFSET = iStack72;\n    *in_FS_OFFSET = iStack60;\n    *in_FS_OFFSET = iStack48;\n    puStack40 = 0x417ecf;\n    uStack44 = 0x417ec7;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 771
    },
    "0041807c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.0041807c(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_ch = NULL;\n    var_18h = 0x418377;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041807c::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.00410c14();\n            cVar2 = fcn.004034e4();\n            puVar1 = var_14h;\n            if (cVar2 != '\\0') {\n                iVar3 = fcn.00410c14();\n                puVar1 = var_14h;\n                if ((*(iVar3 + 0x24) & 4) != 0) goto code_r0x004180f1;\n            }\n        }\n        var_14h = puVar1;\n        fcn.00416a50();\n        puVar1 = var_14h;\n    }\ncode_r0x004180f1:\n    var_14h = puVar1;\n    if (***var_ch < 0x11) {\n    // switch table (17 cases) at 0x41810c\n        switch(*(***var_ch * 4 + 0x41810c)) {\n        case 0x418150:\n            cVar2 = fcn.00416f6c();\n            if (cVar2 == '\\a') {\n                fcn.004179dc();\n                fcn.00417ed8();\n            }\n            else {\n                fcn.00417adc();\n                fcn.00410c88();\n            }\n            break;\n        case 0x418194:\n            fcn.0041702c();\n            fcn.00410c88();\n            break;\n        case 0x4181b0:\n            fcn.004179dc();\n            fcn.00410b40();\n            fcn.00410c88();\n            break;\n        case 0x4181d7:\n            Var4 = fcn.004178c0();\n            var_28h = Var4;\n            var_24h = Var4 >> 0x20;\n            fcn.00410f18(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n            break;\n        case 0x4181f6:\n            fcn.0041882c();\n            fcn.00410e18();\n            break;\n        case 0x418214:\n            fcn.004188e8();\n            fcn.00410e44();\n            break;\n        case 0x418232:\n            fcn.00418710();\n            fcn.00410c88();\n            break;\n        case 0x41824e:\n            cVar2 = fcn.00416f6c();\n            if (cVar2 == '\\r') {\n                fcn.004189cc();\n                fcn.00410c88();\n            }\n            else if (cVar2 == '\\x0e') {\n                fcn.004189cc();\n                fcn.00410c14();\n                fcn.00417084();\n            }\n            else {\n                fcn.004179dc();\n                var_24h = 0x4182b6;\n                fcn.00417f20(&stack0xfffffffc);\n            }\n            break;\n        case 0x4182bc:\n            cVar2 = fcn.00416f6c();\n            if (cVar2 == '\\r') {\n                fcn.004189cc();\n                fcn.00411164();\n            }\n            else {\n                fcn.004179dc();\n                var_14h = (**(*var_4h + 0x18))();\n                var_10h = var_4h[6];\n                if (var_14h != NULL) {\n                    fcn.00411164();\n                }\n            }\n            break;\n        case 0x418320:\n            var_24h = 0x418326;\n            fcn.00417f60(&stack0xfffffffc);\n            break;\n        case 0x418329:\n            uVar5 = fcn.00417b48();\n            var_24h = uVar5;\n            fcn.0041119c(var_24h, uVar5 >> 0x20);\n            break;\n        case 0x418340:\n            var_24h = 0x418346;\n            fcn.00417fbc(&stack0xfffffffc);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41837e;\n    fcn.004040b4();\n    fcn.00404770();\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 1348
    },
    "004183e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004183e4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x4186ff;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41841d;\n    fcn.004187cc();\n    puStack80 = 0x41842c;\n    (**(**0x463848 + 0x14))();\n    uStack84 = 0x4186dd;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x41869e;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x24))();\n    if (param_2 == NULL) {\n        fcn.004187f0();\n        iVar1 = fcn.004134bc();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.004187f0();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.004187f0();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.004187f0();\n            fcn.00418384();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.004187f0();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x4184fc;\n    fcn.004032a0();\n    puStackY108 = 0x41850a;\n    iVar1 = fcn.0041320c(arg_8h);\n    in_EAX[0x1d] = iVar1;\n    uStackY112 = 0x418643;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41852c;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.00405dfc();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x418552;\n        iVar2 = fcn.00403328();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x418623;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.00413db8();\n    if (iVar2 < 0) {\n        fcn.00413c00();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00413d5c();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41862a;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41861a;\n        fcn.00403358();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1270
    },
    "00418710": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041876f)\n// WARNING: Removing unreachable block (ram,0x0041877e)\n\nvoid fcn.00418710(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x4187ba;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x41878d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.004189cc();\n    if (cVar1 != '\\v') {\n        fcn.00416a68();\n    }\n    fcn.00410ae8();\n    fcn.004187f0();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4187c1;\n    uStack32 = 0x4187b9;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 310
    },
    "004189e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004189e0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x418a1c;\n    fcn.004187f0();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x418a23;\n    uStack20 = 0x418a1b;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 149
    },
    "00418d68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00418d68(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00404128();\n    var_4h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_4h = fcn.00419c04();\n    }\n    if (var_4h == 0) {\n        if (*(in_EAX + 0x52) != 0) {\n            (**(in_EAX + 0x50))(&var_4h, param_1);\n        }\n        if (var_4h == 0) {\n            var_10h = var_8h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040b7a0(0, &var_10h);\n            fcn.00403acc();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 310
    },
    "00418e60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00418e60(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.00416ec0();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.00416ec0();\n    }\n    if (*(in_EAX + 0x62) != 0) {\n        (**(in_EAX + 0x60))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.0040356c();\n        if (cVar1 != '\\0') goto code_r0x00418eca;\n    }\n    fcn.004133fc();\ncode_r0x00418eca:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 223
    },
    "004194e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004194e8(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection_1(0x463868);\n    *0x463850 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x419518);\n    if (*0x463850 == 0) {\n        fcn.0040cbd8();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0041955c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041955c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0041955c::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x462994) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x41959a;\n        fcn.0040b7a0(0, &fcn.0041955c::var_14h);\n        uStackY48 = 0x41959f;\n        fcn.00403acc();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x4195b1;\n        fcn.00419534();\n    }\n    else {\n        uStackY48 = 0x4195aa;\n        fcn.00419540();\n    }\n    var_ch = 0;\n    uStackY48 = 0x463868;\n    puStackY52 = 0x4195c0;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStackY56 = 0x4196ea;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x4613e8;\n    puStackY72 = 0x4195dc;\n    puStackY52 = &fcn.0041955c::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x4196cb;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x41961e;\n        puStackY72 = &fcn.0041955c::var_1h + 1;\n        var_8h = fcn.00413d5c();\n        uStackY84 = 0x41962b;\n        fcn.00413c4c();\n        uStackY84 = 0x463868;\n        puStackY88 = 0x419635;\n        sub.kernel32.dll_LeaveCriticalSection_1();\n        uStackY92 = 0x419695;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x419666;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0041955c::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x41969c;\n        uStackY92 = 0x463868;\n        uStackY96 = 0x419694;\n        sub.kernel32.dll_EnterCriticalSection_1();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x4196d2;\n    uStackY76 = 0x4196ca;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 1022
    },
    "00419748": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419748(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.004036cc();\n    fcn.0041999c();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.00413d5c();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040d134();\n    }\n    fcn.00419944();\n    if (*(iVar1 + 4) != 0) {\n        fcn.0041990c();\n    }\n    fcn.004142d4();\n    if ('\\0' < extraout_DL) {\n        fcn.004036b4();\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "004197cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004197cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00403328();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.00413db8();\n        if (iVar2 < 0) {\n            fcn.00413c00();\n            fcn.004197cc();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 203
    },
    "00419860": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419860(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00403328();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00413c00();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 112
    },
    "0041988c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041988c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.00413ea0();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00403358();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004199d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004199d8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.00413ea0();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00403358();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00419b6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419b6c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00407cc4();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.00419c04();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040b7a0(0, &var_ch);\n                fcn.00403acc();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "00419c04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00419c04(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00413d5c();\n            cVar1 = fcn.00407cc4();\n            if (cVar1 != '\\0') goto code_r0x00419c49;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x00419c49:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 210
    },
    "00419cf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419cf4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00413ce8();\n    }\n    fcn.00413d5c();\n    return;\n}\n",
        "token_count": 63
    },
    "00419d84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419d84(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.00419d20(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00419cf4();\n            fcn.00419d84();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00419e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419e8c(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.0040340c();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 164
    },
    "0041a048": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a048(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004036cc();\n    fcn.00419748();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.004199fc();\n    }\n    while (0 < *(*(iVar1 + 0x50) + 8)) {\n        fcn.00413e44();\n        fcn.0041a188();\n    }\n    fcn.0040d134();\n    if ('\\0' < extraout_DL) {\n        fcn.004036b4();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0041a0d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041a0d4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 66
    },
    "0041a0f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041a0f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 67
    },
    "0041a274": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a274(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41a2c3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 229
    },
    "0041a2dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a2dc(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41a32b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "0041a42c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041a42c(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x41a43d;\n    fcn.00405740();\n    uStack64 = 0x41a619;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x41a5f2;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x0041a496:\n            var_ch = arg_10h;\n            goto code_r0x0041a49c;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x0041a496;\n    var_ch = 0x100000;\ncode_r0x0041a49c:\n    puStack84 = 0x41a4a4;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.004026d4();\n    uStack88 = 0x41a5e1;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x0041a5a1:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x41a5e8;\n                uStack88 = 0x41a5b6;\n                fcn.004026f4();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x0041a5a1;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x0041a4cd:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x0041a4cd;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.00403b78();\n                *in_FS_OFFSET = uStack92;\ncode_r0x0041a603:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x41a620;\n                uStack76 = 0x41a618;\n                fcn.004056cc();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.0041a42c::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00403b78();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x0041a603;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1295
    },
    "0041a78c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0041a78c(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x463880;\n    if (*0x463884 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x463880;\n        fcn.00402980();\n        uVar2 = fcn.0041a784();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.0041a784();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x463884;\n            puVar3 = puVar4 + 0xd;\n            *0x463884 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x463880 = puVar1;\n    puVar3 = *0x463884;\n    puVar1 = *0x463884 + 5;\n    *0x463884 = *(*0x463884 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 364
    },
    "0041a848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a848(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x461400 = *0x463664;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x463664, *0x461414, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x461414, *0x463664);\n        }\n        sub.user32.dll_RegisterClassA(0x4613f0);\n    }\n    uVar2 = fcn.004069f0(0, *0x463664, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.0041a78c(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "0041bac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bac0(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41badb;\n    iVar2 = fcn.0041ba34();\n    puStack24 = 0x41bae5;\n    fcn.0041baa8();\n    uStack28 = 0x41bb94;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.00407c50();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.004026d4();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.00402980();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41bb9b;\n    uStack28 = 0x41bb93;\n    fcn.0041bab4();\n    return;\n}\n",
        "token_count": 432
    },
    "0041bba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bba4(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *var_10h;\n    uchar var_9h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack24 = 0x41bbc8;\n    var_10h = param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041baa8();\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_10h[1] = var_10h[1] + -1;\n    var_9h = var_10h[1] == 0;\n    if (var_9h) {\n        puVar1 = *(var_4h + 4);\n        if (*(var_4h + 4) == var_8h) {\n            *(var_4h + 4) = *var_8h;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != var_8h);\n            *puVar2 = *var_8h;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x41bc32;\n    uStack28 = 0x41bc2a;\n    fcn.0041bab4();\n    return;\n}\n",
        "token_count": 393
    },
    "0041bd38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041bd38(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41bd49;\n    fcn.0041baa8();\n    uStack24 = 0x41bd97;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack28 = puVar2[2];\n        if ((iStack28 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack28;\n        }\n        iStack28 = iVar1;\n        iVar1 = iStack28;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack20 = 0x41bd9e;\n    uStack24 = 0x41bd96;\n    iStack28 = iVar1;\n    fcn.0041bab4();\n    return;\n}\n",
        "token_count": 307
    },
    "0041c2c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c2c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "0041cc64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041cc64(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x41cc83;\n        fcn.0041baa8();\n        uStack32 = 0x41ccea;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x461688);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0041c290();\n            puStack40 = &fcn.0041cc64::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x41ccf1;\n        iStack36 = 0x41cce9;\n        uVar1 = fcn.0041bab4();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 400
    },
    "0041cf50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041cf50(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x41cf73;\n        fcn.0041baa8();\n        uStack28 = 0x41d01d;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x6c))();\n                var_8h = (**(**(var_4h + 0x18) + 100))();\n            }\n            var_ch = fcn.0041c290();\n            puStack32 = &fcn.0041cf50::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x41d024;\n        uStack28 = 0x41d01c;\n        uVar2 = fcn.0041bab4();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 559
    },
    "0041d18c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d18c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t arg_14h;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t arg_18h;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff20;\n    int32_t iStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    int32_t hgdiobj;\n    int32_t *var_24h;\n    uint hdc;\n    uint crColor;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX != NULL) {\n        puStack60 = 0x41d1b2;\n        fcn.0041d5f4();\n        uStack64 = 0x41d432;\n        iStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack72 = 0x41d1c8;\n        puStack60 = &stack0xfffffffc;\n        (**(*in_EAX + 0x10))();\n        puStack72 = 0x41d1d6;\n        fcn.0041d9f4();\n        puStack72 = 0x41d1de;\n        fcn.004205e0();\n        puStack72 = 0x41d1e3;\n        fcn.0041d5f4();\n        uStack76 = 0x41d40d;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        arg_2ch = in_EDX[2] - *in_EDX;\n        arg_28h = in_EDX[3] - in_EDX[1];\n        arg_18h = arg_ch[2] - *arg_ch;\n        arg_14h = arg_ch[3] - arg_ch[1];\n        uStack84 = 0x41d218;\n        puStack72 = &stack0xfffffffc;\n        iVar2 = fcn.004206cc();\n        if (iVar2 == arg_8h) {\n            var_24h = NULL;\n            uStack84 = 0x41d22a;\n            uVar3 = (**(*in_ECX + 0x68))();\n            uStack84 = 0;\n            uStack88 = 0x41d234;\n            hdc = sub.gdi32.dll_CreateCompatibleDC();\n            puStack96 = 0x41d244;\n            uStack92 = hdc;\n            uStack88 = uVar3;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n        }\n        else {\n            uStack84 = 0x41d255;\n            var_24h = fcn.00420018();\n            uStack84 = 0x41d263;\n            (**(*var_24h + 8))();\n            puStack96 = 0x41d26e;\n            fcn.00420840();\n            puStack96 = 0x41d276;\n            fcn.004205e0();\n            puStack96 = 0x41d281;\n            fcn.0041d9f4();\n            puStack96 = 0x41d289;\n            iVar2 = fcn.004205e0();\n            hdc = *(iVar2 + 4);\n            hgdiobj = 0;\n        }\n        uStack100 = 0x41d3eb;\n        iStack104 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff98;\n        puStack96 = &stack0xfffffffc;\n        fcn.004205e0();\n        fcn.0041d9f4();\n        cVar1 = fcn.0041d030();\n        if (cVar1 == '\\x01') {\n            iVar2 = fcn.004205e0();\n            fcn.0041deb0(arg_ch[1], *arg_ch, hdc, arg_14h, arg_18h, arg_ch[1], *arg_ch, *(iVar2 + 4), arg_28h, arg_2ch);\n        }\n        else {\n            iVar2 = fcn.004205e0(*arg_ch, arg_ch[1], arg_18h, arg_14h, 0xcc0020);\n            sub.gdi32.dll_StretchBlt(in_EAX[1], *in_EDX, in_EDX[1], arg_2ch, arg_28h, *(iVar2 + 4));\n            uVar3 = sub.gdi32.dll_SetTextColor(in_EAX[1], 0);\n            uVar4 = sub.gdi32.dll_SetBkColor(in_EAX[1], 0xffffff);\n            sub.gdi32.dll_StretchBlt\n                      (in_EAX[1], *in_EDX, in_EDX[1], arg_2ch, arg_28h, hdc, *arg_ch, arg_ch[1], arg_18h, arg_14h, \n                       0xe20746);\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar3);\n            in_stack_ffffff20 = in_EAX[1];\n            sub.gdi32.dll_SetBkColor(in_stack_ffffff20, uVar4);\n        }\n        *in_FS_OFFSET = in_stack_ffffff20;\n        if (var_24h == NULL) {\n            if (hgdiobj != 0) {\n                sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x41d3f2);\n            }\n            sub.gdi32.dll_DeleteDC(hdc);\n        }\n        else {\n            fcn.00403358();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 1392
    },
    "0041d684": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041d684(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uchar *puStack20;\n    uchar auStack16 [8];\n    \n    uVar2 = 0;\n    if ((*(in_EAX + 0x54) & 0x80) != 0) {\n        iVar1 = fcn.0041d920();\n        sub.gdi32.dll_GetWindowOrgEx();\n        puStack20 = auStack16;\n        if (iVar1 != 0) {\n            uVar2 = 1;\n            puStack20 = auStack16;\n        }\n    }\n    return CONCAT44(puStack20, uVar2);\n}\n",
        "token_count": 158
    },
    "0041d7bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0041d7bc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x4638c0;\n    puStack20 = 0x41d7cd;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack24 = 0x41d808;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.0041d7bc::var_1h + 1;\n        fcn.0041d5f4();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41d80f;\n    uStack24 = 0x4638c0;\n    uStack28 = 0x41d807;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 263
    },
    "0041dd1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dd1c(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x41dd38;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x41dd42;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x41de6a;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.0041dd1c::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x41dd62;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x41de71);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x41dd85;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x41dd93;\n        fcn.0041dc64();\n    }\n    uStack112 = 0x41ddd9;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.0041dc64();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x41dde0);\n    return;\n}\n",
        "token_count": 882
    },
    "0041deb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041deb0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x46298c == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x41def8;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x41defd;\n        uStack68 = fcn.0041dd0c();\n        iStack72 = arg_10h;\n        puStack76 = 0x41df0d;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x41df83;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar2 = fcn.004069a0();\n        uVar3 = uVar1;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar3 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x41e137, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar3, arg_ch, arg_8h, \n                           uVar2);\n        sub.gdi32.dll_DeleteObject(uVar3);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x41df96;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x41df9b;\n    uVar3 = fcn.0041dd0c();\n    uStack64 = 0x41e130;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x41dfb7;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x41dfbc;\n    uVar1 = fcn.0041dd0c();\n    uStack84 = uVar1;\n    iVar4 = sub.gdi32.dll_SelectObject(uVar3);\n    iVar5 = sub.gdi32.dll_SelectPalette(hdc, *0x46388c, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar5, 0);\n    if (iVar5 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, *0x46388c, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, iVar5, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar3);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar4 != 0) {\n        sub.gdi32.dll_SelectObject(uVar3, iVar4);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar3, hpal, 0, 0x41e137);\n    }\n    sub.gdi32.dll_DeleteDC(uVar3);\n    return;\n}\n",
        "token_count": 1146
    },
    "0041e364": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0041e364(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x46388c != 0) {\n        uStack20 = 0;\n        puStack24 = 0x41e381;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x41e3ea;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.0041e364::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x46388c, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x46388c;\n            sub.gdi32.dll_GetPaletteEntries(*0x46388c, 8, 8, (in_EAX - 0x1c) + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar3 = sub.user32.dll_ReleaseDC(0, uVar1, 0x41e3f1);\n        return uVar3;\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 441
    },
    "0041e3fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041e3fc(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x41e45e;\n        fcn.00402980();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x41e41a;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x41e423;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x41e437;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x41e443;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.0041e364(),  cVar1 == '\\0')) {\n            fcn.0041e1f4();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 530
    },
    "0041e4a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041e4a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.0041e1f4();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 124
    },
    "0041e4f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e4f4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x41e522;\n    iVar1 = fcn.0041de9c();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x41e53a;\n    iVar1 = fcn.0041de7c();\n    uStack40 = 0;\n    puStack44 = 0x41e543;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x41e551;\n        fcn.0041dc10();\n    }\n    uStack48 = 0x41e6a0;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x41e58a;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x41e58f;\n    uVar2 = fcn.0041dd0c();\n    uStack84 = 0x41e5c6;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.0041dd1c();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x41e5cd;\n    uStack88 = 0x41e5c5;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 590
    },
    "0041e74c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e74c(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x41e772;\n    fcn.00407b24();\n    uStack136 = 0x41ea43;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x41e791;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x41e79f;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x41e7ab;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x41e7c7;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x41e7d5;\n        fcn.0041dc10();\n    }\n    uStack152 = 0x41e835;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x41e83c);\n    return;\n}\n",
        "token_count": 582
    },
    "0041ea54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ea54(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.0041dbf8();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00402d74();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.0041de9c();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 567
    },
    "0041eba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041eba4(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x41ebbf;\n    fcn.0041ea54();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x41ebcb;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x41ec41;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.0041eba4::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.0041eba4::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x41ec48, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 443
    },
    "0041ec78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ec78(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x41ec97;\n    fcn.00402d74();\n    puStack104 = 0x41eca6;\n    fcn.00402d74();\n    puStack104 = &fcn.0041ec78::piconinfo;\n    puStack112 = 0x41ecb0;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x41ecb5;\n    fcn.0041ec6c();\n    uStack116 = 0x41ee66;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.0041ec78::var_1h + 1;\n    fcn.0041eb38(2);\n    puStack132 = 0x41ece3;\n    fcn.0041eb38(0x10);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x41ee3f;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.0041ec78::var_1h + 1;\n    var_18h = fcn.00407b24();\n    var_1ch = fcn.00407b24();\n    var_20h = fcn.00407b24();\n    var_24h = fcn.00407b24();\n    fcn.0041eba4(2, var_1ch);\n    uVar3 = 0x10;\n    fcn.0041eba4(0x10, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0x10))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar3;\n    fcn.004026f4(0x41ee46);\n    fcn.004026f4();\n    fcn.004026f4();\n    fcn.004026f4();\n    return;\n}\n",
        "token_count": 900
    },
    "0041eeac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041eeac(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0041eec4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041eec4(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004034e4();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 164
    },
    "0041ef68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0041ef68(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    ulong uVar8;\n    ulong uVar9;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x0041ef8d:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x41ef80;\n        iVar2 = fcn.004032a0();\n        puStack32 = 0x41ef89;\n        iVar3 = fcn.004032a0();\n        if (iVar2 != iVar3) goto code_r0x0041ef8d;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x41ef9d;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x41efa8;\n        uVar4 = (**(*param_2 + 0x1c))();\n        if (uVar4 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x41efe6;\n                puVar6 = fcn.00403328();\n                uStack36 = 0x41f09f;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x41f001;\n                puStack32 = &fcn.0041ef68::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x41f00d;\n                puVar7 = fcn.00403328();\n                uStack48 = 0x41f082;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.0041ef68::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar8 = (***puVar6)();\n                uVar9 = (***puVar7)();\n                if (uVar9 >> 0x20 == uVar8 >> 0x20 && uVar9 == uVar8) {\n                    (***puVar6)();\n                    cVar1 = fcn.00407c50();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x0041f069;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x0041f069:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x41f089;\n                uStack48 = 0x41f081;\n                uVar4 = fcn.00403358();\n                return uVar4;\n            }\n            goto code_r0x0041f0a6;\n        }\n    }\n    puStack32 = 0x41efb3;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\ncode_r0x0041efc2:\n        uVar4 = 0;\n    }\n    else {\n        puStack32 = 0x41efbe;\n        uVar5 = (**(*param_2 + 0x1c))();\n        if (uVar5 == '\\0') goto code_r0x0041efc2;\n        uVar4 = CONCAT31(uVar5 >> 8, 1);\n    }\n    var_1h._0_1_ = uVar4;\ncode_r0x0041f0a6:\n    return uVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 988
    },
    "0041f10c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f10c(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, unaff_EBX & 0xffffff00 | arg_10h & 0xff, \n                            unaff_EBX & 0xffffff00 | arg_14h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "0041f254": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f254(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x41f264;\n    var_8h = fcn.004140c8();\n    uStack24 = 0x41f2f2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x41f28f;\n            var_ch = fcn.00413d5c();\n            puStack32 = 0x41f29a;\n            cVar1 = fcn.0041d7bc();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x41f2ca;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0041f3e4();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x41f2d1;\n                uStack36 = 0x41f2c9;\n                fcn.0041d818();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41f2f9;\n    uStack24 = 0x41f2f1;\n    fcn.0041412c();\n    return;\n}\n",
        "token_count": 468
    },
    "0041f300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f300(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x41f319;\n        iVar1 = fcn.004140c8();\n        uStack24 = 0x41f370;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00413d5c();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.0041f3e4();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x41f377;\n        uStack24 = 0x41f36f;\n        fcn.0041412c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "0041f3e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f3e4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x41f401;\n        fcn.0041d5f4();\n        uStack20 = 0x41f478;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.0041d9a0();\n        sub.gdi32.dll_DeleteDC();\n        fcn.004140dc();\n        *in_FS_OFFSET = uVar1;\n        fcn.0041d818(0x41f47f);\n        return;\n    }\n    return;\n}\n",
        "token_count": 329
    },
    "0041f484": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f484(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x41f4a2;\n        fcn.0041d5f4();\n        uStack24 = 0x41f563;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.004207a0();\n        fcn.0041f300();\n        fcn.00420980();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.0041d9a0();\n        fcn.00414040();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.0041d818(0x41f56a);\n        return;\n    }\n    return;\n}\n",
        "token_count": 486
    },
    "0041f574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f574(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00403358();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0041f6f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f6f8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0041f744": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f744(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x41f7ac;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.0041f300();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.0041f744::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x41f7c9;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x41f7d3;\n                fcn.0041dbf8();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x41f7da;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x41f7df;\n        iStack188 = fcn.0041dd0c();\n        puStack192 = 0x41f7eb;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x41f7f0;\n        hdcDest = fcn.0041dd0c();\n        uStack196 = 0x41fd92;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x41f837;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x41f83c;\n                var_10h = fcn.0041dd0c();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x41f85b;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x41f860;\n                var_10h = fcn.0041dd0c();\n            }\n            uStack216 = 0x41faab;\n            fcn.0041dd0c();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x41fab8;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x41fabd;\n            var_14h = fcn.0041dd0c();\n            iStack228 = 0x41fd43;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x41fd32;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x41faf8;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x41fb04;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x41fd10;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x41fbf1;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.0041cf50();\n                puStack288 = 0x41fb45;\n                fcn.00412928(&fcn.0041f744::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.0041f744::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x41fb55;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x41fb63;\n                iStack296 = fcn.0041c290();\n                iStack300 = hdcDest;\n                puStack304 = 0x41fb6d;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x41fb78;\n                fcn.0041cf14();\n                puStack304 = 0x41fb7d;\n                puStack304 = fcn.0041c290();\n                iStack308 = hdcDest;\n                puStack312 = 0x41fb87;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x41fba8;\n                    var_30h = fcn.0041c290();\n                    puStack312 = 0x41fbb6;\n                    fcn.0041cf14();\n                    puStack312 = 0x41fbbb;\n                    var_2ch = fcn.0041c290();\n                    puStack312 = &fcn.0041f744::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x41fc04;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x41fc09;\n                var_20h = fcn.0041dd0c();\n                iStack308 = 0x41fce6;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.0041dd0c();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.0041c290();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.0041cf14();\n                    uVar6 = fcn.0041c290();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.0041dd0c();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x41fced);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x41fd17;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x41fd0f;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x41f872;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.004026d4();\n        uStack208 = 0x41fa9c;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x41f8ab;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x41f8b8;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x41f962;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x41f9b3;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x41f988;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x41f9c0;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x41f946;\n                fcn.0041e4a0();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x41f9e9;\n            fcn.0041f6f8();\n            iStack232 = 0x41f9ff;\n            fcn.00402980();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.0041f744::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x41fa16;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x41fa1b;\n        var_10h = fcn.0041dd0c();\n        if (var_28h == 0) {\n            iStack256 = 0x41fa29;\n            fcn.0041dc64();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x41faa3;\n            puStack248 = 0x41fa9b;\n            uVar8 = fcn.004026f4();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00403b78();\n        fcn.00403b78();\n    }\n    return var_10h;\n}\n",
        "token_count": 3813
    },
    "0041fda8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041fda8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x41fdc6;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 299
    },
    "0041fe0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041fe0c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.0041fe0c::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x41fe34;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x41fe43;\n            fcn.0041f300();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x420007;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x41fe62;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x41fe67;\n            iStack160 = fcn.0041dd0c();\n            uStack164 = 0x41fe73;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x41fe78;\n            hdcDest = fcn.0041dd0c();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x41fe8e;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x41fea8;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x41fed8;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x41fedd;\n                    hdc = fcn.0041dd0c();\n                    uStack200 = 0x41ffbf;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.0041f744(0, &fcn.0041fe0c::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x41ffc6);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x42000e);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1353
    },
    "00420018": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00420018(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ee74();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00403328();\n    in_EAX[10] = iVar1;\n    fcn.0041f570();\n    if (*0x461444 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 216
    },
    "00420310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420310(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x420331;\n    var_4h = param_2;\n    fcn.0041d9f4();\n    uStack48 = 0x420338;\n    fcn.00420980();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x420357;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x420366;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x420378;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x420387;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.00420310::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x4203ba;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x4203c8;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.00420310::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x4203e9;\n        cVar2 = fcn.0042069c();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x4203f7;\n            uStack84 = fcn.0041d920();\n            puStack88 = 0x4203fd;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x42054c;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x420412;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x42041d;\n        fcn.00420920();\n    }\n    puStack100 = 0x420424;\n    fcn.004205e0();\n    puStack100 = 0x42042f;\n    fcn.0041d9f4();\n    puStack100 = 0x420436;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x4204e1;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.0041dd0c();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.004205e0();\n        uVar7 = 0;\n        fcn.0041deb0(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x420526);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.004205e0(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x420553);\n    }\n    return;\n}\n",
        "token_count": 1567
    },
    "00420560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420560(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.004207a0();\n        fcn.004201ac(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.0041dc64();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "004205e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004205e0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.004207a0();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.0041f37c();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.0042026c;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 180
    },
    "0042064c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042064c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "0042071c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042071c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.00420980();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.0041f744(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "004207a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004207a0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x4207cd;\n        fcn.004159bc(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x420823;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "00420920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420920(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.0041f300();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.00420790();\n        fcn.004207a0();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.004206cc();\n        uVar2 = fcn.0041fe0c();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00420980": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420980(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.0041f300();\n    }\n    iVar2 = fcn.0041e3fc();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.0041dd0c();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x00420a11;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x00420a11:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "00420a38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420a38(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.0041dbe0();\n    }\n    fcn.00420790();\n    fcn.00402d74();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.004201ac(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 235
    },
    "00420b40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420b40(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x420b5c;\n    iVar1 = fcn.00403328();\n    puStack32 = 0x420bc7;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x420bb7;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.00403508();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4638a8;\n    puStack32 = 0x420be8;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack36 = 0x420c27;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0041f574();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.0041f570();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x420c2e;\n    uStack36 = 0x4638a8;\n    uStack40 = 0x420c26;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 579
    },
    "00420c68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420c68(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x420c9b;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x420cc0;\n    piVar1 = fcn.004026d4();\n    uStack196 = 0x421185;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x421158;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.00402d74();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00403328();\n            if (arg_8h == 0) {\n                fcn.00402d74();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x420dee;\n            fcn.00415c38(in_ECX - var_20h, 0);\n            uStack224 = 0x420dfe;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.0041dbf8();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.00415bc8();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.0041de7c();\n        piVar1[8] = iVar2;\n    }\n    fcn.00415bc8();\n    if (piVar1[5] == 0) {\n        iVar2 = fcn.0041de9c();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.0041e144();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.0041dd0c();\n    uStack224 = 0x4210d3;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x461444 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.00420c68::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x421059;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x42106d;\n            iVar2 = sub.kernel32.dll_GetLastError_1();\n            if (iVar2 == 0) {\n                puStack256 = 0x421076;\n                fcn.0041dbf8();\n            }\n            else {\n                puStack256 = 0x42107d;\n                fcn.0040cbd8();\n            }\n        }\n        uStack260 = 0x4210a2;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x421098;\n        puStack256 = &stack0xfffffffc;\n        fcn.00415bc8();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x4210da;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x4210d2;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x420f15;\n    lpbInit = fcn.004026d4();\n    uStack236 = 0x42103b;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x420f33;\n    puStack232 = &stack0xfffffffc;\n    fcn.00415bc8();\n    uStack244 = hdc;\n    piStack248 = 0x420f3c;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x420f41;\n    var_10h = fcn.0041dd0c();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x420f51;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x420f5b;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x420f79;\n        uStack272 = fcn.0041e3fc();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x420f8b;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x420f97;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x42100f;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0) {\n            fcn.0041dbf8();\n        }\n        else {\n            fcn.0040cbd8();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x421016);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2148
    },
    "00421640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421640(char param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar5;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.00402d74();\n    puVar1 = *(*(in_EAX + 0x28) + 0x6c);\n    if (puVar1 == NULL) {\n        fcn.0042071c();\n        iVar2 = *(in_EAX + 0x28);\n        if (*(iVar2 + 0x14) != 0) {\n            cVar5 = *(iVar2 + 0x50);\n            fcn.0041eb38(*(iVar2 + 0x50));\n            if (*(iVar2 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar2 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar2 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.00402d74(cVar5 + cStack1080 + '\\x0e');\n            fcn.004205e0();\n            fcn.0041d9f4();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar2 + 0x14));\n            fcn.0041dd0c();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar3 = *(iVar2 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar3 != NULL) && (puVar3 < auStack1054)) {\n                puStackY1116 = puVar3;\n            }\n            if ((((*(iVar2 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar2 + 0x10) != 0)) &&\n               ((*(iVar2 + 0x71) == '\\0' && (puStackY1116 = fcn.0041e4a0(),  8 < *(iVar2 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.00415c00();\n        }\n        if (iStackY1120 != 0) {\n            fcn.0041f6f8();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar2 + 0x50) == NULL) || (*(iVar2 + 0x50) != puStackY1116)) {\n                    *(iVar2 + 0x50) = puStackY1116;\n                }\n                if (*(iVar2 + 0x70) != '\\0') {\n                    fcn.0041e17c();\n                }\n            }\n            if (*(iVar2 + 0x70) == '\\0') {\n                fcn.00415c00();\n                fcn.00415c00();\n                if ((8 < *(iVar2 + 0x3e)) && ((*(iVar2 + 0x40) & 3) != 0)) {\n                    fcn.00415c00();\n                }\n            }\n            else {\n                fcn.00415c00();\n                fcn.00415c00();\n            }\n            fcn.00415c00();\n            fcn.00415c00();\n        }\n    }\n    else {\n        uVar4 = (***puVar1)();\n        if (param_1 != '\\0') {\n            fcn.00415c00(uVar4);\n        }\n        (****(*(in_EAX + 0x28) + 0x6c))();\n        (**(*param_2 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 969
    },
    "00421b60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421b60(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.004159bc(0, 0);\n        uStack32 = 0x421b8f;\n        fcn.00415bc8();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.0041e74c(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x421bcb;\n                fcn.0041dc04();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00421bd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421bd8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x421bfb;\n            fcn.0041dc04();\n        }\n        puStack32 = 0x421c07;\n        uVar2 = fcn.00403328();\n        uStack36 = 0x421c65;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.00421b24();\n        if (iVar3 == *0x4638a4) {\n            fcn.00402d74();\n            fcn.00415c00();\n        }\n        else {\n            fcn.00421b24();\n            fcn.0041ec78();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "00421ed0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421ed0(void)\n\n{\n    char cVar1;\n    \n    *0x46141c = sub.kernel32.dll_MulDiv(8, *0x463894, 0x48);\n    *0x46141c = -*0x46141c;\n    if (*(*0x462998 + 0xc) != '\\0') {\n        cVar1 = fcn.00421e8c();\n        if (cVar1 == -0x80) {\n            *0x461423 = *0x421f30;\n            *0x461427 = *0x421f34;\n            *0x46142b = *0x421f38;\n            *0x46142f = *0x421f3c;\n            *0x46141c = sub.kernel32.dll_MulDiv(9, *0x463894, 0x48);\n            *0x46141c = -*0x46141c;\n            *0x461422 = cVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00422018": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422018(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x422030;\n    fcn.00422000();\n    uStack32 = 0x4220b9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.004026d4();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.004220cc();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4220c0;\n    uStack32 = 0x4220b8;\n    fcn.0042200c();\n    return;\n}\n",
        "token_count": 369
    },
    "00422244": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00422244(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x4638e8 != 0) {\n        uVar1 = fcn.0041c290();\n        fcn.0041c290(uVar1);\n        iVar2 = fcn.00422018();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00422840": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422840(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x422856;\n    fcn.00404540();\n    uStack28 = 0x4228ff;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x463920) == '\\0') {\n        if (*0x46391c == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x463928 == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x463908 = fcn.00422840(),  *0x463928 == '\\0')) {\n                fcn.00404090();\n            }\n            uVar1 = fcn.00404550();\n            in_stack_ffffffd8 = *0x46391c;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x46391c, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x463928 = '\\x01';\n        }\n        *(in_AL + 0x463920) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x422906;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 424
    },
    "00422928": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422928(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x463920 == '\\0') {\n        *0x4638f8 = fcn.00422840();\n        (**0x4638f8)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "004229b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004229b0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x463922 == '\\0') {\n        *0x463900 = fcn.00422840();\n        uVar1 = (**0x463900)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x4638f8)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x4638f8)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 233
    },
    "00422a40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422a40(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x463921 == '\\0') {\n        *0x4638fc = fcn.00422840();\n        uVar1 = (**0x4638fc)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.004229b0(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 234
    },
    "00422ad8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422ad8(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x463923 == '\\0') {\n        *0x463904 = fcn.00422840();\n        uVar1 = (**0x463904)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4638f8)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4638f8)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 234
    },
    "00422b70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422b70(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x463924 == '\\0') {\n        *0x463908 = fcn.00422840();\n        uVar1 = (**0x463908)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4638f8)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4638f8)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x422c3c);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 397
    },
    "00422c44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422c44(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x463925 == '\\0') {\n        *0x46390c = fcn.00422840();\n        uVar1 = (**0x46390c)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4638f8)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4638f8)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x422d10);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 398
    },
    "00422d18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422d18(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x463926 == '\\0') {\n        *0x463910 = fcn.00422840();\n        uVar1 = (**0x463910)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4638f8)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4638f8)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x422de4);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "00422dec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422dec(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x463927 == '\\0') {\n        *0x463914 = fcn.00422840();\n        uVar1 = (**0x463914)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x4638f8)(0);\n            var_10h = (**0x4638f8)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 550
    },
    "00423988": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00423988(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_10h = 0;\n    iVar4 = 0;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (param_1 != 0) {\n        fcn.004040e4();\n    }\n    iVar2 = *(*(var_4h + 0x10) + 8);\n    if (0 < iVar2) {\n        if (-1 < iVar2 + -1) {\n            iVar3 = 0;\n            do {\n                iVar1 = fcn.00422600();\n                iVar1 = (**(**(iVar1 + 4) + 0x10))();\n                if (0 < iVar1) {\n                    iVar4 = iVar4 + 1;\n                    var_10h = iVar3;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (iVar4 == 0) {\n            var_2ch = fcn.00404550();\n            var_28h._0_1_ = 6;\n            uVar5 = 0;\n            fcn.0040b7a0(0, &var_2ch);\n            fcn.00403acc();\n        }\n        if (iVar4 == 1) {\n            iVar2 = fcn.00422600();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        if (1 < iVar4) {\n            var_14h = fcn.00403328();\n            iVar4 = *(*(var_4h + 0x10) + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_1ch = fcn.00422600();\n                    iVar2 = (**(**(var_1ch + 4) + 0x10))();\n                    if (0 < iVar2) {\n                        var_18h = (**(**(var_1ch + 4) + 0x14))();\n                        iVar2 = (**(*var_18h + 0x14))();\n                        if (-1 < iVar2 + -1) {\n                            var_ch = 0;\n                            var_24h = iVar2;\n                            do {\n                                (**(*var_18h + 0xc))();\n                                (**(*var_14h + 0x3c))();\n                                var_ch = var_ch + 1;\n                                var_24h = var_24h + -1;\n                            } while (var_24h != 0);\n                        }\n                        fcn.00403358();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (*(var_4h + 0xc) == 0) {\n                iVar4 = (**(*var_14h + 0x18))();\n                (**(*var_14h + 0xc))();\n                (**(**(iVar4 + 4) + 0x20))();\n            }\n            else {\n                (**(*var_14h + 0x90))();\n                iVar4 = (**(**(var_4h + 0xc) + 0xc))();\n                if (-1 < iVar4) {\n                    iVar4 = (**(*var_14h + 0x18))();\n                    (**(*var_14h + 0xc))();\n                    (**(**(iVar4 + 4) + 0x20))();\n                }\n            }\n            fcn.00403358();\n        }\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00404090();\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 1007
    },
    "00423b9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423b9c(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x423c8f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.004040e4();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040b764();\n        fcn.00403acc();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00422600();\n            fcn.004056e4();\n            fcn.00405710();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                fcn.00405710();\n                (**(_pe_dos_header + 0x3c))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x423c96;\n    uStack48 = 0x423c86;\n    fcn.00404b0c();\n    uStack48 = 0x423c8e;\n    fcn.004056cc();\n    return;\n}\n",
        "token_count": 449
    },
    "00423db4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423db4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x423dc6;\n    fcn.00405740();\n    uStack20 = 0x423e03;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) != 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.004056cc();\n    }\n    fcn.004056e4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x423e0a;\n    uStack20 = 0x423e02;\n    fcn.004056cc();\n    return;\n}\n",
        "token_count": 213
    },
    "00423e10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423e10(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x423e29;\n    fcn.00404540();\n    uStack28 = 0x423ea5;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.004040e4();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.00423b9c();\n    }\n    else if (iVar1 == 2) {\n        fcn.004236b0();\n    }\n    else if (iVar1 == 3) {\n        fcn.004236e0();\n    }\n    else {\n        fcn.00423880(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x423eac;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 322
    },
    "004233c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004233c4(uint param_1, uint *param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack24 = 0x42343a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xfffffffc;\n    if (*0x463934 == 0) {\n        *0x463934 = fcn.004234dc();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    fcn.00423550();\n    fcn.004056e4();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x423441;\n    uStack24 = 0x423439;\n    fcn.004056cc();\n    return;\n}\n",
        "token_count": 256
    },
    "00423448": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00423448(void)\n\n{\n    uint *in_EAX;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    if (*0x463934 == 0) {\n        *0x463934 = fcn.004234dc();\n    }\n    fcn.00405710();\n    return 0;\n}\n",
        "token_count": 82
    },
    "004236e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004236e0(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x423872;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(*(in_EAX + 0x10) + 8) == 1) {\n        puStack44 = 0x42370f;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.00422600();\n        puStack44 = 0x423717;\n        cVar2 = (**(**(iVar3 + 4) + 0x18))();\n        if (cVar2 != '\\0') {\n            puStack44 = 0x423729;\n            iVar3 = fcn.00422600();\n            puStack44 = 0x423731;\n            (**(**(iVar3 + 4) + 0x1c))();\n        }\n    }\n    else {\n        if (*(in_EAX + 0xc) != 0) {\n            puStack44 = 0x42374c;\n            puStack32 = &stack0xfffffffc;\n            piVar4 = fcn.00403328();\n            uStack48 = 0x42380d;\n            uStack52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            var_ch = *(*(in_EAX + 0x10) + 8);\n            puStack44 = &stack0xfffffffc;\n            puVar1 = &stack0xfffffffc;\n            if (-1 < var_ch + -1) {\n                do {\n                    puStack44 = puVar1;\n                    iVar3 = fcn.00422600();\n                    cVar2 = (**(**(iVar3 + 4) + 0x18))();\n                    if (cVar2 != '\\0') {\n                        (**(**(iVar3 + 4) + 0xc))();\n                        (**(*piVar4 + 0x3c))();\n                    }\n                    var_ch = var_ch + -1;\n                    puVar1 = puStack44;\n                } while (var_ch != 0);\n            }\n            iVar3 = (**(*piVar4 + 0x14))();\n            if (iVar3 < 2) {\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            else {\n                (**(*piVar4 + 0x90))();\n                (**(**(in_EAX + 0xc) + 0x10))();\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            *in_FS_OFFSET = uStack52;\n            puStack44 = 0x42385c;\n            uStack48 = 0x42380c;\n            fcn.00403358();\n            return;\n        }\n        puVar1 = &stack0xfffffffc;\n        if (0 < *(*(in_EAX + 0x10) + 8)) {\n            puStack44 = 0x423826;\n            iVar3 = fcn.00422600();\n            puStack44 = 0x42382e;\n            cVar2 = (**(**(iVar3 + 4) + 0x18))();\n            puVar1 = puStack32;\n            if (cVar2 != '\\0') {\n                puStack44 = 0x42383c;\n                iVar3 = fcn.00422600();\n                puStack44 = 0x423844;\n                (**(**(iVar3 + 4) + 0x1c))();\n                goto code_r0x0042385c;\n            }\n        }\n        puStack32 = puVar1;\n        puStack44 = 0x423857;\n        fcn.0040b764();\n        puStack44 = 0x42385c;\n        fcn.00403acc();\n    }\ncode_r0x0042385c:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x423879;\n    uStack36 = 0x423871;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 1039
    },
    "00423fb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423fb0(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x463930 = *0x463930 + 1;\n    if ((*0x463930 == 0) && (*0x463934 != 0)) {\n        *0x463934 = 0;\n    }\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 118
    },
    "00424074": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424074(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x463968 != NULL) {\n        iVar2 = (**0x463968)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x004240a0;\n        }\n    }\n    uVar1 = 0;\ncode_r0x004240a0:\n    return -uVar1;\n}\n",
        "token_count": 148
    },
    "004240a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004240a8(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x46396c != NULL) {\n        iVar2 = (**0x46396c)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x004240c8;\n        }\n    }\n    uVar1 = 0;\ncode_r0x004240c8:\n    return -uVar1;\n}\n",
        "token_count": 122
    },
    "00424538": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424538(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x424545;\n    fcn.004244f0();\n    uStack12 = 0x4246ef;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x463a3c) {\n        *0x463a3c = *0x463a3c + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x463a38 != 0) && (puStack8 = &stack0xfffffffc,  *0x463a3c == 0)) {\n        iStack20 = *0x463a38;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x463a38 = 0;\n        *0x463978 = 0;\n        *0x46397c = 0;\n        *0x463980 = 0;\n        *0x463984 = 0;\n        *0x463988 = 0;\n        *0x46398c = 0;\n        *0x463990 = 0;\n        *0x463994 = 0;\n        *0x463998 = 0;\n        *0x46399c = 0;\n        *0x4639a0 = 0;\n        *0x4639a4 = 0;\n        *0x4639a8 = 0;\n        *0x4639ac = 0;\n        *0x4639b0 = 0;\n        *0x4639b4 = 0;\n        *0x4639b8 = 0;\n        *0x4639bc = 0;\n        *0x4639c0 = 0;\n        *0x4639c4 = 0;\n        *0x4639c8 = 0;\n        *0x4639cc = 0;\n        *0x4639d0 = 0;\n        *0x4639d4 = 0;\n        *0x4639d8 = 0;\n        *0x4639dc = 0;\n        *0x4639e0 = 0;\n        *0x4639e4 = 0;\n        *0x4639e8 = 0;\n        *0x4639ec = 0;\n        *0x4639f0 = 0;\n        *0x4639f4 = 0;\n        *0x4639f8 = 0;\n        *0x4639fc = 0;\n        *0x463a00 = 0;\n        *0x463a04 = 0;\n        *0x463a08 = 0;\n        *0x463a0c = 0;\n        *0x463a10 = 0;\n        *0x463a14 = 0;\n        *0x463a18 = 0;\n        *0x463a1c = 0;\n        *0x463a20 = 0;\n        *0x463a24 = 0;\n        *0x463a28 = 0;\n        *0x463a2c = 0;\n        *0x463a30 = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x4246f6;\n    iStack16 = 0x4246ee;\n    fcn.004244f8();\n    return;\n}\n",
        "token_count": 814
    },
    "004246f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004246f8(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x42470c;\n    fcn.004244f0();\n    uStack20 = 0x424aab;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x463a3c = *0x463a3c + 1;\n    puStack16 = &fcn.004246f8::var_1h + 1;\n    if (*0x463a38 == 0) {\n        puStack16 = &fcn.004246f8::var_1h + 1;\n        *0x463a38 = sub.kernel32.dll_LoadLibraryA(0x424abc);\n        if (*0x463a38 != 0) {\n            *0x463978 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424ac8);\n            *0x46397c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424ad8);\n            *0x463980 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424ae8);\n            *0x463984 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424afc);\n            *0x463988 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424b0c);\n            *0x46398c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424b0c);\n            *0x463990 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424b2c);\n            *0x463994 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424b40);\n            *0x463998 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424b54);\n            *0x46399c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424b68);\n            *0x4639a0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424b84);\n            *0x4639a4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424b9c);\n            *0x4639a8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424bac);\n            *0x4639ac = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424bbc);\n            *0x4639b0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424bd0);\n            *0x4639b4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424bf8);\n            *0x4639b8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c08);\n            *0x4639bc = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c18);\n            *0x4639c0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c28);\n            *0x4639c4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c38);\n            *0x4639c8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c44);\n            *0x4639cc = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c58);\n            *0x4639d0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c6c);\n            *0x4639d4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c7c);\n            *0x4639d8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c8c);\n            *0x4639dc = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424c9c);\n            *0x4639e0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424cac);\n            *0x4639e4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424cc4);\n            *0x4639e8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424cd4);\n            *0x4639ec = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424ce8);\n            *0x4639f0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424cfc);\n            *0x4639f4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424d14);\n            *0x4639f8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424d24);\n            *0x4639fc = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424d34);\n            *0x463a00 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424d44);\n            *0x463a04 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424d58);\n            *0x463a08 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424d68);\n            *0x463a0c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424d78);\n            *0x463a10 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424d84);\n            *0x463a14 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424d94);\n            *0x463a18 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424db0);\n            *0x463a1c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424dcc);\n            *0x463a20 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424de4);\n            *0x463a24 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424dfc);\n            *0x463a28 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424e10);\n            *0x463a2c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424e30);\n            in_stack_fffffe6c = *0x463a38;\n            *0x463a30 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x424e4c);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.004244f8(0x424ab2);\n    return;\n}\n",
        "token_count": 1723
    },
    "00424e5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00424e5c(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x463a38 != 0) && (iVar1 = (**0x463a0c)(),  iVar1 != 0)) && (iVar1 = (**0x463a08)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "00424e84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424e84(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x424ecc;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x463a34 = *0x463a34 + 1;\n    if (*0x463a34 == 0) {\n        while (0 < *0x463a3c) {\n            fcn.00424538();\n        }\n        fcn.00403358();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 161
    },
    "0042631c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042636f)\n// WARNING: Removing unreachable block (ram,0x0042637c)\n// WARNING: Removing unreachable block (ram,0x00426389)\n// WARNING: Removing unreachable block (ram,0x00426391)\n// WARNING: Removing unreachable block (ram,0x0042639e)\n// WARNING: Removing unreachable block (ram,0x004263a7)\n// WARNING: Removing unreachable block (ram,0x004263b0)\n// WARNING: Removing unreachable block (ram,0x004263be)\n\nvoid __cdecl fcn.0042631c(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x426401;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.004262d4(arg_8h);\n    fcn.004262d4(arg_8h);\n    (**(**(*(arg_8h + -8) + 0x7c) + 0x38))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x426408;\n    uStack24 = 0x426400;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 328
    },
    "0042682c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042682c(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42687e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x463a68 = *0x463a68 + 1;\n    if (*0x463a68 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x461728 != 0) {\n            uStack20 = *0x461728;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00404b0c();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 222
    },
    "00426ad8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426ad8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x426b57;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.00405b90();\n            fcn.0040b6a8();\n            fcn.00403acc();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00404090(0x426b5e);\n    return;\n}\n",
        "token_count": 305
    },
    "00427234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427234(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x427279;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x463ac8 = *0x463ac8 + 1;\n    if (*0x463ac8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4619ac != 0) {\n            iStack20 = *0x4619ac;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00404090();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 221
    },
    "0042728c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042728c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4272d0;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x463acc = *0x463acc + 1;\n    if (((*0x463acc == 0) && (*0x463ad4 != '\\0')) && (*0x463ad0 != 0)) {\n        iStack20 = *0x463ad0;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 185
    },
    "004273bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004273bc(void)\n\n{\n    if (*0x463ae8 == 0) {\n        *0x463ae8 = fcn.0040bef8();\n    }\n    return *0x463ae8;\n}\n",
        "token_count": 54
    },
    "0042741c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042741c(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42748b;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x463adc = *0x463adc + 1;\n    if (*0x463adc == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x463ae0 != 0) {\n            iStack20 = *0x463ae0;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x463ae4 != 0) {\n            sub.kernel32.dll_FreeLibrary_1(*0x463ae4);\n        }\n        fcn.00404ac0();\n        fcn.00404ac0();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 261
    },
    "004276c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004276c4(void)\n\n{\n    if (*0x463af0 == 0) {\n        *0x463af0 = (**(*0x4619c8 + 4))();\n    }\n    return *0x463af0;\n}\n",
        "token_count": 60
    },
    "00427764": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427764(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x462594)(0, *((param_2 & 0x7f) * 4 + 0x4619d0));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 172
    },
    "004277a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004277a4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "004278a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004278a4(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.00427764(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x462574)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x462790)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00427e40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427e40(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.004277d0();\n    }\n    uVar1 = fcn.00424e5c();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 85
    },
    "00429598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004295cf)\n// WARNING: Removing unreachable block (ram,0x004295d8)\n// WARNING: Removing unreachable block (ram,0x004295e0)\n\nvoid __fastcall fcn.00429598(uint32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4296ee;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x90))();\n    if ((param_1 & 0x400) != 0) {\n        fcn.00404358();\n    }\n    uVar2 = fcn.004348d0();\n    fcn.0041d840();\n    cVar1 = (**(*in_EAX + 0x50))();\n    if (cVar1 == '\\0') {\n        sub.user32.dll_OffsetRect(param_2, 1, 1);\n        fcn.0041c750();\n        uVar4 = param_2;\n        uVar3 = fcn.00404350(param_2, uVar2);\n        uVar3 = fcn.00404550(uVar3);\n        uVar3 = fcn.0041d920(uVar3);\n        sub.user32.dll_DrawTextA(uVar3);\n        sub.user32.dll_OffsetRect(param_2, 0xffffffff, 0xffffffff);\n        fcn.0041c750();\n        uVar2 = fcn.00404350(param_2, uVar2);\n        uVar2 = fcn.00404550(uVar2);\n        uVar2 = fcn.0041d920(uVar2);\n        sub.user32.dll_DrawTextA(uVar2);\n    }\n    else {\n        uVar2 = fcn.00404350(param_2, uVar2);\n        uVar2 = fcn.00404550(uVar2);\n        uVar4 = fcn.0041d920(uVar2);\n        sub.user32.dll_DrawTextA();\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00404090(0x4296f5);\n    return;\n}\n",
        "token_count": 553
    },
    "00429a50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429a50(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x429add;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX[0x5a] != 0) {\n        cVar2 = (**(*in_EAX + 0x50))();\n        if ((cVar2 != '\\0') && (*(in_EAX + 0x5c) != '\\0')) {\n            fcn.004325f0();\n            cVar2 = fcn.00448fcc();\n            if (cVar2 != '\\0') {\n                piVar1 = in_EAX[0x5a];\n                cVar2 = fcn.00403554();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xc4))();\n                    *(param_2 + 0xc) = 1;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x429ae4;\n    uStack28 = 0x429adc;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 337
    },
    "0042a208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a208(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x20f) != '\\0') && (*(in_EAX + 0x20c) == '\\x01')) {\n        *(in_EAX + 0x50) = *0x42a240 | *(in_EAX + 0x50);\n        fcn.0042a244();\n        return;\n    }\n    *(in_EAX + 0x50) = ~*0x42a240 & *(in_EAX + 0x50);\n    return;\n}\n",
        "token_count": 134
    },
    "0042a244": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042a244(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint auStack128 [10];\n    uchar auStack88 [76];\n    \n    auStack128[0] = 0;\n    uVar1 = sub.user32.dll_GetDC();\n    sub.gdi32.dll_GetTextMetricsA(uVar1, auStack128);\n    uVar2 = fcn.0041c764();\n    uVar2 = sub.gdi32.dll_SelectObject(uVar1, uVar2);\n    sub.gdi32.dll_GetTextMetricsA(uVar1, auStack88);\n    sub.gdi32.dll_SelectObject(uVar1, uVar2);\n    sub.user32.dll_ReleaseDC(0, uVar1);\n    if (**0x4626a8 == '\\0') {\n        sub.user32.dll_GetSystemMetrics(6);\n    }\n    else {\n        sub.user32.dll_GetSystemMetrics(6);\n    }\n    fcn.00431dd0();\n    return;\n}\n",
        "token_count": 219
    },
    "0042ab00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0042ab00(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00434b04();\n    if (**0x4626a8 == '\\0') {\n        *(in_EAX + 0x50) = *0x42abe8;\n    }\n    else {\n        *(in_EAX + 0x50) = *0x42abe4;\n    }\n    fcn.00431dac();\n    fcn.00431dd0();\n    fcn.0043900c();\n    fcn.004327b4();\n    *(in_EAX + 0x210) = 1;\n    iVar1 = fcn.00403328();\n    *(in_EAX + 0x218) = iVar1;\n    *(iVar1 + 0x10) = in_EAX;\n    uVar2 = fcn.0041d06c();\n    *(in_EAX + 0x228) = uVar2;\n    fcn.004311cc();\n    *(in_EAX + 0x230) = 0x10;\n    *(in_EAX + 0x224) = 1;\n    *(in_EAX + 0x23b) = 1;\n    *(in_EAX + 0x234) = 0xffffffff;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 421
    },
    "0042adb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042adb0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x42aec7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (*(in_EAX + 0x82) == '\\0') {\n        iVar2 = (**(*in_EAX + 0xcc))();\n        if (iVar2 != -1) {\n            (**(*in_EAX + 0xcc))();\n            (**(*in_EAX[0x86] + 0xc))();\n            fcn.00404550();\n            fcn.00404288();\n            (**(*in_EAX + 0xcc))(0);\n            (**(*in_EAX[0x86] + 0x18))();\n            (**(*param_2 + 0xd4))();\n        }\n    }\n    else {\n        puStack44 = &stack0xfffffffc;\n        var_8h = (**(*in_EAX[0x86] + 0x14))();\n        if (-1 < var_8h + -1) {\n            do {\n                cVar1 = fcn.0042b150();\n                if (cVar1 != '\\0') {\n                    (**(*in_EAX[0x86] + 0xc))();\n                    fcn.00404550();\n                    fcn.00404288();\n                    (**(*in_EAX[0x86] + 0x18))(0);\n                    (**(*param_2 + 0xd4))();\n                }\n                var_8h = var_8h + -1;\n            } while (var_8h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x42aece;\n    uStack48 = 0x42aec6;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 518
    },
    "0042af44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042af44(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((0 < *(in_EAX + 0x22c)) && (0 < *(in_EAX + 0x48))) {\n        uVar1 = fcn.00431ff4(param_1);\n        iVar2 = fcn.00402b3c(uVar1);\n        if (iVar2 < 1) {\n            iVar2 = 1;\n        }\n        uVar1 = fcn.00438dd8(0x195, iVar2, 0);\n        sub.user32.dll_SendMessageA(uVar1);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0042b0e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042b0e0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t aiStack24 [2];\n    int32_t iStack16;\n    \n    iVar2 = *(in_EAX + 0x230);\n    cVar1 = fcn.004390dc();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x238) == '\\0')) {\n        fcn.004337a4(aiStack24);\n        iVar2 = iStack16 - aiStack24[0];\n    }\n    return iVar2;\n}\n",
        "token_count": 142
    },
    "0042b1a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b1a0(uint8_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint uStack24;\n    \n    if (*(in_EAX + 0x208) == '\\0') {\n        if (param_1 == 0) {\n            uStack24 = 0;\n            uStack28 = 0xffffffff;\n            uStack32 = 0x186;\n            uStack36 = 0x42b244;\n            uStack36 = fcn.00438dd8();\n            sub.user32.dll_SendMessageA();\n        }\n        else {\n            uStack24 = 0;\n            uStack32 = 0x186;\n            uStack36 = 0x42b207;\n            uStack28 = param_2;\n            uStack36 = fcn.00438dd8();\n            iVar1 = sub.user32.dll_SendMessageA();\n            if (iVar1 == -1) {\n                uStack32 = uStack32 & 0xffffff00;\n                uStack36 = param_2;\n                fcn.0040b7a0(0, &stack0xffffffdc);\n                fcn.00403acc();\n            }\n        }\n    }\n    else {\n        uStack28 = param_1;\n        uStack32 = 0x185;\n        uStack36 = 0x42b1c7;\n        uStack24 = param_2;\n        uStack36 = fcn.00438dd8();\n        iVar1 = sub.user32.dll_SendMessageA();\n        if (iVar1 == -1) {\n            uStack32 = uStack32 & 0xffffff00;\n            uStack36 = param_2;\n            fcn.0040b7a0(0, &stack0xffffffdc);\n            fcn.00403acc();\n        }\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "0042b2cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b2cc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack24 = 0x42b374;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x8e) - 3U < 2) {\n        if ((*(in_EAX + 0x262) != 0) && (*(param_2 + 4) < 0x80000000)) {\n            puStack20 = &stack0xfffffffc;\n            iVar1 = (**(*in_EAX + 200))();\n            if (*(param_2 + 4) < iVar1) {\n                fcn.00404090();\n                (*in_EAX[0x98])(&fcn.0042b2cc::var_4h);\n                fcn.00404550();\n                fcn.00408788();\n                uVar2 = fcn.00404350();\n                *(param_2 + 0xc) = uVar2;\n                goto code_r0x0042b35e;\n            }\n        }\n        *(param_2 + 0xc) = 0xffffffff;\n    }\n    else {\n        (**(*in_EAX + -0x10))();\n    }\ncode_r0x0042b35e:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42b37b;\n    uStack24 = 0x42b373;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 416
    },
    "0042b380": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b380(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack24 = 0x42b416;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x8e) - 3U < 2) {\n        if ((*(in_EAX + 0x262) != 0) && (*(param_2 + 4) < 0x80000000)) {\n            puStack20 = &stack0xfffffffc;\n            iVar1 = (**(*in_EAX + 200))();\n            if (*(param_2 + 4) < iVar1) {\n                fcn.00404090();\n                (*in_EAX[0x98])(&fcn.0042b380::var_4h);\n                uVar2 = fcn.00404350();\n                *(param_2 + 0xc) = uVar2;\n                goto code_r0x0042b400;\n            }\n        }\n        *(param_2 + 0xc) = 0xffffffff;\n    }\n    else {\n        (**(*in_EAX + -0x10))();\n    }\ncode_r0x0042b400:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42b41d;\n    uStack24 = 0x42b415;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 396
    },
    "0042b5f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b5f4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    \n    iVar1 = in_EAX[0x12];\n    iVar2 = in_EAX[0x13];\n    fcn.00435d90();\n    uVar3 = fcn.00438dd8(0, in_EAX[0x10], in_EAX[0x11], iVar1, iVar2, 0x14);\n    sub.user32.dll_SetWindowPos(uVar3);\n    if (in_EAX[0x8f] != 0) {\n        uVar3 = fcn.00438dd8(0x192, 1, in_EAX + 0x8f);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.0042af44();\n    if ((in_EAX[0x8d] != -1) || (in_EAX[0x90] != 0)) {\n        if (*(in_EAX + 0x8e) - 3U < 2) {\n            fcn.0042bfbc();\n        }\n        if (in_EAX[0x90] != 0) {\n            (**(*in_EAX[0x86] + 8))();\n            fcn.0040d134();\n        }\n        fcn.0042b424();\n        (**(*in_EAX + 0xd0))();\n        in_EAX[0x8d] = -1;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "0042b9d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b9d8(uint param_1, int32_t param_2)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 4) == 0) {\n        fcn.00436f68();\n    }\n    else {\n        fcn.0042b878(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0042ba7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ba7c(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t in_stack_ffffffc4;\n    uint32_t uStack52;\n    uint *puStack48;\n    uchar *puStack44;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t iStack16;\n    uint var_8h;\n    uchar *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_18h = *in_ECX;\n    iStack24 = in_ECX[1];\n    var_10h = in_ECX[2];\n    iStack16 = in_ECX[3];\n    puStack48 = 0x42bb88;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (*(in_EAX + 0x252) == 0) {\n        fcn.0041d580();\n        iVar2 = (**(*in_EAX + 200))();\n        if (in_EDX < iVar2) {\n            var_4h = fcn.004348d0();\n            cVar1 = fcn.00403554();\n            if (cVar1 == '\\0') {\n                var_18h = var_18h + 2;\n            }\n            else {\n                var_10h = var_10h + -2;\n            }\n            fcn.00404090();\n            if (*(in_EAX + 0x8e) - 3U < 2) {\n                fcn.0042c0a0();\n            }\n            else {\n                (**(*in_EAX[0x86] + 0xc))();\n            }\n            puStack44 = var_4h;\n            puStack48 = &fcn.0042ba7c::var_18h;\n            uStack52 = 0x42bb57;\n            uStack52 = fcn.00404350();\n            uVar3 = fcn.00404550();\n            in_stack_ffffffc4 = fcn.0041d920(uVar3);\n            sub.user32.dll_DrawTextA();\n        }\n    }\n    else {\n        in_stack_ffffffc4 = &fcn.0042ba7c::var_18h & 0xffff0000 | arg_8h & 0xffff;\n        puStack44 = &stack0xfffffffc;\n        (*in_EAX[0x94])(in_stack_ffffffc4, &fcn.0042ba7c::var_18h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    uStack52 = 0x42bb8f;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 664
    },
    "0042bd08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bd08(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(*(arg_8h + -4) + 0x238) - 3U < 2) {\n        iVar2 = fcn.0042c0e8();\n    }\n    else {\n        uVar3 = fcn.00404550();\n        uVar3 = fcn.00438dd8(399, 0xffffffff, uVar3);\n        iVar2 = sub.user32.dll_SendMessageA(uVar3);\n    }\n    if (iVar2 != -1) {\n        if (*(*(arg_8h + -4) + 0x208) != '\\0') {\n            (**(**(arg_8h + -4) + 0xdc))();\n            uVar3 = fcn.004069e0();\n            uVar3 = fcn.00438dd8(0x19b, 1, uVar3);\n            sub.user32.dll_SendMessageA(uVar3);\n        }\n        (**(**(arg_8h + -4) + 0xd0))();\n        fcn.00403554();\n    }\n    cVar1 = **(arg_8h + -8);\n    if (((cVar1 != '\\b') && (cVar1 != '\\r')) && (cVar1 != '\\x1b')) {\n        **(arg_8h + -8) = 0;\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "0042bdec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042bdec(uint param_1, uint8_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpMsg;\n    uint var_1ch;\n    uint8_t *var_8h;\n    int32_t *var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x42bfac;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack72;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00437dbc();\n    if (*(var_4h + 0x84) != '\\0') {\n        iVar2 = sub.kernel32.dll_GetTickCount();\n        if (499 < iVar2 - var_4h[0x88]) {\n            fcn.00404090();\n        }\n        iVar2 = sub.kernel32.dll_GetTickCount();\n        var_4h[0x88] = iVar2;\n        if (*var_8h == 8) {\n            while( true ) {\n                fcn.00404350();\n                cVar1 = fcn.0040c05c();\n                if (cVar1 != '\\x02') break;\n                fcn.00404350();\n                fcn.004045f0();\n            }\n            fcn.00404350();\n            fcn.004045f0();\n        }\n        else if ((*(*0x46297c + (*var_8h >> 3)) >> (*var_8h & 7) & 1) == 0) {\n            fcn.00404278();\n            fcn.00404358();\n        }\n        else {\n            uVar3 = fcn.00438dd8(0x102, 0x102, 1);\n            iVar2 = sub.user32.dll_PeekMessageA(&lpMsg, uVar3);\n            if (iVar2 != 0) {\n                fcn.00404278(var_4h[0x87]);\n                fcn.00404278(0);\n                uStack104 = 0;\n                fcn.00404410();\n                *var_8h = 0;\n            }\n        }\n        iVar2 = fcn.00404350();\n        if (iVar2 < 1) {\n            (**(*var_4h + 0xd0))();\n            fcn.00403554();\n        }\n        else {\n            fcn.0042bd08(&stack0xfffffffc);\n        }\n    }\n    *in_FS_OFFSET = uStack104;\n    fcn.004040b4(0x42bfb3);\n    return;\n}\n",
        "token_count": 652
    },
    "0042c0a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c0a0(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x262) != 0) {\n        (**(in_EAX + 0x260))(param_1);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0042c0c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042c0c0(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = param_1;\n    if (*(in_EAX + 0x272) != 0) {\n        (**(in_EAX + 0x270))(&uStack8);\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 92
    },
    "0042c0e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042c0e8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x26a) != 0) {\n        uVar1 = (**(in_EAX + 0x268))();\n        return uVar1;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 79
    },
    "0042c8a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c8a4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42c8fc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*0x463afc != NULL) {\n        fcn.0042c458();\n        (**(**0x463afc + 0x10))();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42c903;\n    uStack28 = 0x42c8fb;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 178
    },
    "0042c90c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042c90c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack296;\n    uint uStack292;\n    uchar *puStack288;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack288 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack292 = 0x42ca02;\n    uStack296 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed8;\n    var_108h._0_1_ = 0xb;\n    var_10ch = param_2;\n    fcn.00408de8(0, &fcn.0042c90c::var_10ch);\n    fcn.0042c458();\n    uVar2 = 0x42c972;\n    cVar1 = fcn.0042cd9c();\n    if (cVar1 != '\\0') {\n        uVar2 = 0;\n        fcn.00404300();\n        cVar1 = fcn.0042ccf4(uVar2);\n        if ((cVar1 != '\\0') && (var_4h != 0)) {\n            *(in_EAX + 0x10) = 1;\n            fcn.00404300();\n            uVar2 = fcn.00404550(0x102, &fcn.0042c90c::var_104h);\n            uVar2 = (**(**(in_EAX + 0x1c) + 0xc))(uVar2);\n            sub.user32.dll_WinHelpA();\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00404090(0x42ca09);\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 452
    },
    "0042ca20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ca20(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42ca82;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x463afc != NULL) {\n        fcn.0042c458();\n        (**(**0x463afc + 0x14))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42ca89;\n    uStack32 = 0x42ca81;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 180
    },
    "0042ca94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042cadd)\n\nvoid __fastcall fcn.0042ca94(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42cb14;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0042c458();\n    uVar2 = 0x42cac3;\n    cVar1 = fcn.0042cd9c();\n    if (cVar1 != '\\0') {\n        fcn.0042ccf4(param_2);\n        uVar2 = param_2;\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack28 = 0x42cb1b;\n    uStack32 = 0x42cb13;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 247
    },
    "0042c564": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c564(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42c5cb;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*0x463afc != NULL) {\n        fcn.0042c458();\n        (**(**0x463afc + 0xc))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42c5d2;\n    uStack24 = 0x42c5ca;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 177
    },
    "0042c5dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c5dc(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42c664;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x463afc == NULL) {\n        piVar1 = fcn.00403328();\n        fcn.0042c550();\n        fcn.00404410(param_2, 0x42c67c, 0);\n        (**(*piVar1 + 0x38))();\n    }\n    else {\n        puStack28 = &stack0xfffffffc;\n        (**(**0x463afc + 0x18))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42c66b;\n    uStack32 = 0x42c663;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 265
    },
    "0042c684": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042c6c9)\n\nvoid fcn.0042c684(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42c6ff;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    cVar1 = fcn.0042cd9c();\n    if (cVar1 != '\\0') {\n        *(in_EAX + 0x10) = 2;\n        (**(**(in_EAX + 0x1c) + 0x10))();\n        fcn.0042c458();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42c706;\n    uStack24 = 0x42c6fe;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 252
    },
    "0042c70c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042c7ad)\n\nvoid __fastcall fcn.0042c70c(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint *arg_8h;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x42c804;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.0040b764();\n        fcn.00403acc();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    arg_8h = &fcn.0042c70c::var_4h;\n    fcn.0042c458();\n    fcn.00408e28(arg_8h);\n    uVar3 = 0x42c785;\n    cVar2 = fcn.0042cd9c();\n    if (cVar2 != '\\0') {\n        fcn.0042c458();\n        uVar3 = 0;\n        fcn.0042ccf4(0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack52 = 0x42c80b;\n    fcn.00404090();\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 410
    },
    "0042c458": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c458(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42c50d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00404090();\n    if ((param_2 == 0) && (*(in_EAX + 0x1c) != 0)) {\n        (**(**(in_EAX + 0x1c) + 0x10))();\n    }\n    else {\n        fcn.00404128();\n    }\n    if (*0x463afc != NULL) {\n        (**(**0x463afc + 0x20))();\n    }\n    if (*0x463afc != NULL) {\n        (**(**0x463afc + 0x1c))();\n        puStack28 = NULL;\n        uStack32 = 0x42c524;\n        uStack36 = 0;\n        fcn.00404410();\n    }\n    fcn.004040e4();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42c514;\n    uStack32 = 0x42c50c;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 337
    },
    "0042c528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c528(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0042c858();\n    if (*(in_EAX + 0x1c) != 0) {\n        (**(**(in_EAX + 0x1c) + 0x14))();\n        fcn.004056cc();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0042ccf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042ccf4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack40 = 0x42cd0b;\n    fcn.00404540();\n    uStack44 = 0x42cd6a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042ccd8();\n    if ((((var_ch != '\\0') && (in_DL == *(in_EAX + 0x10))) && (in_DL != '\\0')) && (in_DL == '\\x01')) {\n        fcn.00407c20();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x42cd71;\n    uStack44 = 0x42cd69;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 264
    },
    "0042cd9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042cd9c(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar auStack24 [4];\n    uint uStack20;\n    char cStack12;\n    \n    uVar3 = 0;\n    fcn.0042ccd8();\n    if (cStack12 != '\\0') {\n        uVar2 = sub.user32.dll_GetWindowThreadProcessId(uStack20, 0, fcn.0042cc80, auStack24);\n        sub.user32.dll_EnumThreadWindows(uVar2);\n    }\n    cVar1 = fcn.0042cd7c();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0042cd80();\n        if (cVar1 != '\\0') {\n            fcn.0042cdf8();\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 205
    },
    "0042cdf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042ce44)\n\nvoid fcn.0042cdf8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42ce75;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042c858();\n    iVar1 = sub.kernel32.dll_GetTickCount();\n    do {\n        uStack28 = 0;\n        sub.kernel32.dll_Sleep();\n        iVar2 = sub.kernel32.dll_GetTickCount();\n    } while (iVar2 - iVar1 < 0x3e9);\n    fcn.0042c458();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42ce7c;\n    uStack24 = 0x42ce74;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 245
    },
    "0042cef8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042cef8(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42cf66;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x463b04 = *0x463b04 + 1;\n    if (*0x463b04 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*(*0x463b08 + 0x1c) != 0) {\n            fcn.0042c528();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.004056cc();\n        fcn.004056cc();\n        fcn.004056cc();\n        fcn.00404090();\n        fcn.004056cc();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 238
    },
    "0043b3c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b3c0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.0043cc40();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0042f798": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042f798(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.0042f4d0();\n    if (((iVar1 != 0) && (*0x461b8c != 0)) && (iVar1 == *(*0x461b8c + 0x30))) {\n        iVar1 = *0x461b8c;\n    }\n    return iVar1;\n}\n",
        "token_count": 104
    },
    "0042f7c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f7c0(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x461b8c = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004034e4(),  iVar1 = *0x461b8c,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x461b8c = iVar1;\n        uVar3 = fcn.00438dd8();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0042fc68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042fc68(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.00403554();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 73
    },
    "0042fd04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0042fd04(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.0042fbec();\n    uVar1 = fcn.0041cd74();\n    *(in_EAX + 0x40) = uVar1;\n    fcn.00422244();\n    fcn.0041cef0();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "0042fef8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042fef8(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "0042ff64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0042ff64(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.004303b4();\n    uVar2 = func_0x004066c0(hWnd, 4);\n    if (uVar2 != *(**0x4627c4 + 0x30)) {\n        uVar2 = fcn.0042f4d0();\n        if (uVar2 == 0) goto code_r0x004300f2;\n        do {\n            uVar2 = *(uVar2 + 0x30);\n        } while (uVar2 != 0);\n        uVar2 = fcn.00438dd8();\n        hWnd = uVar2;\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        uVar2 = fcn.00438dd8();\n        if (uVar2 != hWnd) {\n            iVar4 = *(*(arg_8h + -0x10) + 0x30);\n            var_18h = uVar2;\n            if (iVar4 == 0) {\n                cVar1 = fcn.004034e4();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.00438dd8();\n                }\n            }\n            else {\n                do {\n                    iVar4 = *(iVar4 + 0x30);\n                } while (iVar4 != 0);\n                var_1ch = fcn.00438dd8();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0042fef8, &var_1ch);\n            uVar2 = sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.00403554(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004034e4();\n                if ((((cVar1 == '\\0') || (*(*(*0x463b30 + 0x38) + 0xa0) == 0)) ||\n                    (uVar2 = fcn.00438dd8(),  uVar2 != hWnd)) &&\n                   (uVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  uVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\ncode_r0x004300f2:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 805
    },
    "00430140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00430140(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x463b54 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x4627c4 + 0xb4)) {\n            (**(**0x463b58 + 8))();\n            iVar4 = *(*0x463b54 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.00413d5c();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1a6) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.00438dd8();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.004300fc(&var_1h + 1),  cVar1 == '\\0')) &&\n                           ((var_10h[0x28] != var_14h || (iVar3 = fcn.00437908(),  1 < iVar3)))) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.00403554();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.0042f8c8();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x463b58)[2]) {\n                var_18h = fcn.0042f958(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.0042ff64(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 697
    },
    "0043029c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043029c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x463b54 == 0) {\n            *0x463b54 = fcn.00403328();\n        }\n        iVar1 = fcn.00413db8();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.00413c4c();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.00413c00();\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0043046c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043046c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    iVar1 = *(*0x463b30 + 4);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1a7) != '\\0')) && (*(iVar1 + 0x178) != 0)) &&\n       (iVar2 = fcn.00437874(),  iVar2 != 0)) {\n        iVar2 = fcn.00437874();\n        if ((iVar2 == 1) && (iVar2 = fcn.00413d5c(),  iVar2 == *(*0x463b30 + 0x38))) {\n            return 0;\n        }\n        iVar2 = fcn.00430e9c();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.00413db8();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        uVar4 = fcn.00437888();\n    }\n    return uVar4;\n}\n",
        "token_count": 292
    },
    "00430500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430500(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x463b4c == '\\0') &&\n        (uVar9 = *0x463b3c - *in_EAX >> 0x1f,  (*0x463b3c - *in_EAX ^ uVar9) - uVar9 < *0x463b48)) &&\n       (uVar9 = *0x463b40 - in_EAX[1] >> 0x1f,  (*0x463b40 - in_EAX[1] ^ uVar9) - uVar9 < *0x463b48)) {\n        return;\n    }\n    iVar10 = 0x43055a;\n    iVar7 = fcn.004303e0(*0x463b2c);\n    if ((*0x463b4c == '\\0') && (*0x463b50 != 0)) {\n        iVar10 = *0x463b40;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0043a854(iVar10);\n    }\n    if (*(*0x463b2c + 0x9b) == '\\0') {\n        *0x463b4c = '\\x01';\n    }\n    else {\n        *0x463b4c = '\\x02';\n    }\n    if (iVar7 != (*0x463b30)[1]) {\n        fcn.00430430();\n        if (*0x463b30 == NULL) {\n            return;\n        }\n        (*0x463b30)[1] = iVar7;\n        (*0x463b30)[2] = iVar10;\n        piVar1 = *0x463b30;\n        (*0x463b30)[3] = *in_EAX;\n        piVar1[4] = in_EAX[1];\n        fcn.00430430();\n        if (*0x463b30 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x463b30;\n    (*0x463b30)[3] = *in_EAX;\n    piVar1[4] = in_EAX[1];\n    if ((*0x463b30)[1] != 0) {\n        fcn.00432134();\n        piVar1 = *0x463b30;\n        (*0x463b30)[5] = iStack28;\n        piVar1[6] = iStack24;\n    }\n    fcn.00430430(in_EAX[1]);\n    (**(**0x463b30 + 4))();\n    if (*0x463b50 != 0) {\n        if ((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) {\n            fcn.0043a83c();\n            if (*(*0x463b50 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.0043a854(iVar10);\n            }\n            else {\n                fcn.0043a93c();\n            }\n        }\n        else {\n            fcn.0043a9b0();\n            uVar8 = fcn.0044fd48();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.0044fd48();\n    sub.user32.dll_SetCursor();\n    if (*0x463b4c == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.00403554(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.0043046c();\n            (*0x463b30)[0x16] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.00403554();\n                *(*0x463b30 + 0x15) = uVar5;\n            }\n            else {\n                fcn.00432134();\n                uVar5 = fcn.00403554();\n                *(*0x463b30 + 0x15) = uVar5;\n            }\n        }\n        if ((*0x463b30 != NULL) && (cVar6 = fcn.00407c50(),  cVar6 == '\\0')) {\n            if (cVar4 != '\\0') {\n                (**(**0x463b30 + 0x34))();\n            }\n            (**(**0x463b30 + 0x30))();\n            piVar3 = *0x463b30;\n            piVar2 = *0x463b30 + 0x18;\n            piVar1 = *0x463b30 + 0x12;\n            (*0x463b30)[0x17] = (*0x463b30)[0x11];\n            *piVar2 = *piVar1;\n            piVar3[0x19] = piVar3[0x13];\n            piVar3[0x1a] = piVar3[0x14];\n        }\n    }\n    return;\n}\n",
        "token_count": 1208
    },
    "004307d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004307d0(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x463b30 = in_EAX;\n    in_EAX[1] = 0;\n    sub.user32.dll_GetCursorPos(0x463b3c);\n    piVar1 = *0x463b30;\n    (*0x463b30)[3] = *0x463b3c;\n    piVar1[4] = *0x463b40;\n    *0x463b44 = sub.user32.dll_GetCursor();\n    *0x463b38 = fcn.0042f9fc();\n    *0x463b48 = param_1;\n    cVar2 = fcn.004034e4();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x463b4c = '\\0';\n        }\n        else {\n            *0x463b4c = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x11];\n        if (in_EAX[0x13] == iVar3 || in_EAX[0x13] - iVar3 < 0) {\n            in_EAX[8] = 0;\n            in_EAX[9] = 0;\n        }\n        else {\n            *(in_EAX + 8) = (in_EAX[3] - iVar3) / (in_EAX[0x13] - in_EAX[0x11]);\n        }\n        iVar3 = in_EAX[0x12];\n        if (in_EAX[0x14] == iVar3 || in_EAX[0x14] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x14] - in_EAX[0x12]);\n        }\n        if (param_2 == '\\0') {\n            *0x463b4c = '\\0';\n        }\n        else {\n            *0x463b4c = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x463b50 = (**(**0x463b30 + 8))();\n    if (*0x463b50 != 0) {\n        iVar3 = *0x463b40;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0043a854(iVar3);\n    }\n    *0x463b58 = fcn.00403328();\n    if (*0x463b4c != '\\0') {\n        fcn.00430500();\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "00430940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430940(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x430ae5;\n    iStack60 = *in_FS_OFFSET;\n    *0x463b2c = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x463b34 = 0;\n    if (*(in_EAX + 0x9b) == '\\0') {\n        puStack64 = 0x430987;\n        puStack52 = &stack0xfffffffc;\n        fcn.00403554();\n        if (*0x463b2c == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x4309b5;\n            var_8h = fcn.0042fbec();\n            *0x463b34 = 1;\n        }\n    }\n    else {\n        fcn.00403554();\n        if (*0x463b2c == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.0042fd04();\n            *0x463b34 = 1;\n        }\n        cVar1 = fcn.004034e4();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x38) + 0x30) == 0) && (cVar1 = fcn.004034e4(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.00430940::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x44) = lpPoint;\n                *(var_8h + 0x48) = var_ch;\n            }\n            else {\n                fcn.00412900();\n                puStack64 = 0x430a86;\n                fcn.00432108();\n                *(var_8h + 0x44) = var_18h;\n                *(var_8h + 0x48) = var_14h;\n            }\n            fcn.00412900();\n            *(var_8h + 0x4c) = var_18h;\n            *(var_8h + 0x50) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x44;\n            uVar2 = fcn.00438dd8();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 0x5c) = *(var_8h + 0x44);\n        *(var_8h + 0x60) = *(var_8h + 0x48);\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n    }\n    fcn.004307d0();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 816
    },
    "00430b04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00430b04(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x463b30 + 4) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x463b4c == '\\x02')) {\n        cVar1 = (**(**0x463b2c + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x463b2c)[0x28] != 0)) {\n            if ((*0x463b2c)[0x28] != 0) {\n                uVar2 = fcn.00403554();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 227
    },
    "00430b78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00430b78(void)\n\n{\n    char in_AL;\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ah;\n    uint32_t var_6h;\n    uint var_1h;\n    \n    puStack24 = &fcn.00430b78::var_1h + 1;\n    puStack36 = &fcn.00430b78::var_1h + 1;\n    piVar4 = NULL;\n    if ((*0x463b30 == NULL) || (*(*0x463b30 + 0xc) != '\\0')) {\n        return;\n    }\n    uStack28 = 0x430e44;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *0x463b5c = *0x463b30;\n    uStack40 = 0x430dd2;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *(*0x463b30 + 0xc) = 1;\n    *(*0x463b30 + 7) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.0042fa44();\n    if (*0x463b4c == '\\x02') {\n        piVar4 = fcn.00403508();\n        (**(*piVar4 + 0x34))();\n        *(piVar4 + 0x1b) = piVar4[1] == 0;\n    }\n    if ((*0x463b30)[1] == 0) {\ncode_r0x00430c4f:\n        var_6h = (*0x463b30)[4];\n    }\n    else {\n        cVar1 = fcn.004034e4();\n        if (cVar1 == '\\0') goto code_r0x00430c4f;\n        var_6h = (*0x463b30)[6];\n    }\n    cVar1 = fcn.00430b04(&fcn.00430b78::var_1h + 1);\n    if (cVar1 != '\\0') {\n        if ((*0x463b4c == '\\x02') && (*(piVar4 + 0x1b) != '\\0')) {\ncode_r0x00430c8e:\n            if (var_1h != '\\0') {\n                uVar2 = 1;\n                goto code_r0x00430c9a;\n            }\n        }\n        else if (*0x463b4c != '\\0') {\n            cVar1 = fcn.00430430();\n            if (cVar1 != '\\0') goto code_r0x00430c8e;\n        }\n    }\n    uVar2 = 0;\ncode_r0x00430c9a:\n    if (*0x463b4c == '\\x02') {\n        if ((uVar2 != 0) && (*(piVar4 + 0x1b) != '\\0')) {\n            iVar3 = fcn.0044903c();\n            if ((iVar3 != 0) && (*(iVar3 + 0x220) == piVar4[0xe])) {\n                fcn.0044cca8();\n            }\n            fcn.004337a4(*0x463b30);\n        }\n    }\n    else if (*0x463b50 == 0) {\n        sub.user32.dll_SetCursor(*0x463b44);\n    }\n    else {\n        fcn.0043a9b0();\n    }\n    *0x463b2c = 0;\n    *0x463b30 = NULL;\n    if ((*0x463b5c != NULL) && ((*0x463b5c)[1] != 0)) {\n        if (uVar2 == 0) {\n            (*0x463b5c)[3] = 0;\n            (*0x463b5c)[4] = 0;\n            var_6h = 0;\n        }\n        fcn.004302fc(*0x463b5c + 3, (*0x463b5c)[1]);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x430dd9;\n    uStack40 = 0x430d95;\n    fcn.00403358();\n    *0x463b58 = 0;\n    if (*0x463b5c != NULL) {\n        *(*0x463b5c + 0xc) = 0;\n        uStack40 = var_6h;\n        uStack44 = var_6h & 0xffffff00 | uVar2;\n        (****0x463b5c)();\n    }\n    *0x463b30 = NULL;\n    return;\n}\n",
        "token_count": 1144
    },
    "00430e50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430e50(void)\n\n{\n    if (*0x463b30 != 0) {\n        fcn.00430b78();\n    }\n    *0x463b2c = 0;\n    return;\n}\n",
        "token_count": 52
    },
    "00430ee4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430ee4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00403328();\n        *in_EAX = iVar1;\n    }\n    fcn.00413c00();\n    return;\n}\n",
        "token_count": 75
    },
    "00430f0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430f0c(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00413ea0();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00403358();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00431018": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431018(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x431028;\n    var_8h = fcn.004140c8();\n    uStack24 = 0x4310b6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x431053;\n            var_ch = fcn.00413d5c();\n            puStack32 = 0x43105e;\n            cVar1 = fcn.0041d7bc();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x43108e;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00431198();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x431095;\n                uStack36 = 0x43108d;\n                fcn.0041d818();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4310bd;\n    uStack24 = 0x4310b5;\n    fcn.0041412c();\n    return;\n}\n",
        "token_count": 450
    },
    "004310f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004310f0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x431109;\n        fcn.0041d99c();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x431121;\n            iVar1 = fcn.004140c8();\n            uStack20 = 0x431175;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.00430f5c();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.00413c00();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x43117c;\n            uStack20 = 0x431174;\n            fcn.0041412c();\n            return;\n        }\n        puStack16 = 0x43118a;\n        fcn.0041d9a0();\n        puStack16 = 0x431192;\n        fcn.004311e4();\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00431198": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431198(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.0041d9a0();\n        fcn.004140dc();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00431350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00431350(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.00431350::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x43141d;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x431385;\n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x431397;\n        cVar1 = fcn.00403554();\n        if ((((cVar1 != '\\0') && (*(**0x4627c4 + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.00431350::var_8h;\n            fcn.004417b8();\n            fcn.00408e28(arg_8h);\n            fcn.004040e4();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x431424;\n    iStack56 = 0x431414;\n    fcn.00404090();\n    iStack56 = 0x43141c;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 469
    },
    "004316f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.004316f0(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.004196fc();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x74);\n    in_EAX[0x14] = *0x4317c0;\n    iVar1 = fcn.0041c57c();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4326a0;\n    *(in_EAX + 0x61) = *0x4317c4;\n    iVar1 = fcn.00431210();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x433564;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x9a) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7a) = 0xfff4;\n    in_EAX[0x2e] = *0x4487a4;\n    *(in_EAX + 0x54) = 1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 526
    },
    "004318bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004318bc(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.00403554(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x7c))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 252
    },
    "00431a2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431a2c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x68))();\n    }\n    fcn.00419b5c();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.004337a4(0);\n        fcn.004337a4(0);\n        fcn.004337a4(0);\n        fcn.004337a4(0);\n        fcn.004337a4(0);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00431df4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431df4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0xa0)) {\n        if ((*(in_EAX + 0xa0) != 0) && (*(*(in_EAX + 0xa0) + 0x178) != 0)) {\n            puStack40 = 0x431e3a;\n            fcn.00413ea0();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x178) != 0)) {\n            puStack40 = 0x431e5a;\n            fcn.00413c00();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x431eef;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.00403554();\n    }\n    iVar1 = *(in_EAX + 0xa0);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0xa0) = 0;\n        }\n        else {\n            *(in_EAX + 0xa0) = param_2;\n            if (param_2 != 0) {\n                fcn.00403554();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.00403554();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 488
    },
    "00432078": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00432078(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4320f9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00405b90();\n        fcn.0040b6e4(in_stack_ffffffd4, arg_ch);\n        fcn.00403acc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x432100;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 392
    },
    "00432190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432190(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0xa0) != 0) && (*0x463b30 == 0)) && (*0x4321f8 == (*0x4321f4 & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.004337a4(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0043271c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043271c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.004337a4(0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "004327b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004327b4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.004337a4(0);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004327d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004327d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.004337a4(0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00432904": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00432904(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43299a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.00405b90();\n        fcn.0040b6e4(uVar2, arg_ch);\n        fcn.00403acc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.00404090(0x4329a1);\n    return;\n}\n",
        "token_count": 398
    },
    "004329ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004329ac(int32_t lprcSrc1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    uVar1 = fcn.00413db8();\n    uVar2 = uVar1;\n    do {\n        do {\n            if (uVar1 < 1) {\n                var_1h._0_1_ = 0;\n                goto code_r0x00432a2d;\n            }\n            uVar1 = uVar1 - 1;\n            uVar2 = fcn.00413d5c();\n        } while ((*(uVar2 + 0x57) == '\\0') || ((*(uVar2 + 0x50) & 0x40) == 0));\n        fcn.00431f90();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        uVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (uVar2 == 0);\ncode_r0x00432a2d:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 342
    },
    "00432a38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00432a38(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.004390dc();\n    if (cVar2 != '\\0') {\n        fcn.00431f90();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.004329ac(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.00438dd8(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00432b38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432b38(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x432b7d;\n        cVar1 = fcn.004390dc();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x432b9d;\n                uStack20 = fcn.00438dd8();\n                puStack24 = 0x432ba3;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x432c11;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.00436be4();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.00438dd8(uVar2, 0x432c2b);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x432c20;\n            (**(*in_EAX + 0x7c))();\n            uStack20 = 0x432c2b;\n            (**(*in_EAX + 0x88))();\n        }\n    }\n    return;\n}\n",
        "token_count": 508
    },
    "00432c34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00432c34(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x462998 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "00432c64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00432c64(void)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x462998 + 0xd) != '\\0') && (iVar1 = (in_EAX & 0xffffff00 | *(in_EAX + 0x5f)) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "00432d6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432d6c(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xf2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xf0))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00432da8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432da8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xea) != 0) {\n        (**(in_EAX + 0xe8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00432df4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432df4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00432f04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432f04(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00432f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00432f50(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = 0;\n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x13a) != 0) {\n        uVar2 = (**(in_EAX + 0x138))(&var_ah, &var_9h);\n    }\n    if (var_ah == 0) {\n        *(in_EAX + 0xa4) = *(in_EAX + 0xa4) + in_ECX;\n        while( true ) {\n            uVar1 = *(in_EAX + 0xa4);\n            uVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f);\n            if (uVar2 < 0x78) break;\n            uVar2 = *(in_EAX + 0xa4) >> 0x1f;\n            iVar3 = ((*(in_EAX + 0xa4) ^ uVar2) - uVar2) + -0x78;\n            *(in_EAX + 0xa4) = iVar3;\n            if (uVar1 < 0) {\n                if (iVar3 != 0) {\n                    *(in_EAX + 0xa4) = -iVar3;\n                }\n                var_ah = fcn.00403554();\n            }\n            else {\n                var_ah = fcn.00403554();\n            }\n        }\n    }\n    return uVar2 & 0xffffff00 | var_ah;\n}\n",
        "token_count": 456
    },
    "004330ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004330ac(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x4330c1;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x11];\n        var_1ch = param_2[0x12];\n        var_18h = param_2[0x13];\n        var_14h = param_2[0x14];\n    }\n    else {\n        var_20h = param_2[0x17];\n        var_1ch = param_2[0x18];\n        var_18h = param_2[0x19];\n        var_14h = param_2[0x1a];\n    }\n    uStack52 = 0x4330e8;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x4330fb;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x4331c7;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.004330ac::var_1h + 1;\n    uVar4 = fcn.0041cf50();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x4331ce);\n    return;\n}\n",
        "token_count": 789
    },
    "00433200": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433200(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint32_t uStack23;\n    \n    cVar1 = fcn.004034e4();\n    if ((*0x463b34 != '\\0') && (cVar1 == '\\0')) {\n        fcn.00403508();\n    }\n    fcn.00432134();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.00403554(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.00403554(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.00403554(uStack23);\n        }\n        else {\n            fcn.00403554(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "004332f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004332f0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0xa0);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1a7) == '\\0')) || (*(iVar3 + 0x17c) == 0)) {\n            fcn.00412900();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.00432108();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x17c) + 0x14))();\n            var_34h = 2;\n            fcn.00438dd8();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar1 = fcn.00432580();\n        arg_8h_00 = &fcn.004332f0::var_34h;\n        uStack80 = 0x4333a1;\n        fcn.00432594();\n        uStack80 = 0x4333ae;\n        fcn.00412950(arg_8h_00, uVar1);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x4333c2;\n        uVar2 = fcn.004334d0();\n        var_5h = uVar2;\n        goto code_r0x004334c2;\n    }\n    uVar1 = fcn.004337d8();\n    if (*(in_EAX + 0xa0) == 0) {\ncode_r0x004333f5:\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    else {\n        uVar1 = fcn.00403554();\n        if (uVar1 != '\\0') goto code_r0x004333f5;\n        uVar2 = 0;\n    }\n    var_5h = uVar2;\n    if (var_5h != 0) {\n        var_ch = fcn.0042fd04();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0xa0) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00438dd8();\n        }\n        fcn.00431f90();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.004332f0::var_1ch, 2);\n        }\n        *(var_ch + 4) = in_EDX;\n        *(var_ch + 0x54) = arg_8h;\n        *(var_ch + 0x58) = var_4h;\n        *(var_ch + 0x44) = var_1ch;\n        *(var_ch + 0x48) = var_18h;\n        *(var_ch + 0x4c) = uStack24;\n        *(var_ch + 0x50) = uStack20;\n        uVar1 = fcn.00438dd8(&fcn.004332f0::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar1);\n        fcn.00403554();\n        *in_FS_OFFSET = var_18h;\n        uVar2 = fcn.00403358(0x4334c2);\n        return uVar2;\n    }\ncode_r0x004334c2:\n    return uVar2 & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1027
    },
    "00433574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00433574(uint param_1)\n\n{\n    uint32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, in_EAX & 0xffffff00 | uStack8 & 0xff);\n}\n",
        "token_count": 118
    },
    "00433640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433640(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "004336d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004336d0(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "004337d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004337d8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = (**(*in_EAX + 0x54))();\n    if (uVar2 != '\\0') {\n        in_EAX[0x2b] = in_EAX[0x13];\n        in_EAX[0x2a] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x28] != 0) {\n        if ((*(in_EAX + 0x27) == '\\x02') || (*(in_EAX[0x28] + 0x5b) - 1U < 2)) {\n            uVar2 = in_EAX[0x13];\n            in_EAX[0x2d] = uVar2;\n        }\n        else if ((*(in_EAX + 0x27) == '\\x01') ||\n                (cVar1 = *(in_EAX[0x28] + 0x5b),  uVar2 = in_EAX[0x28] & 0xffffff00U | cVar1 - 5,  cVar1 - 3U < 2)) {\n            uVar2 = in_EAX[0x12];\n            in_EAX[0x2c] = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 327
    },
    "00433870": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00433870(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) != 0) && (var_14h = fcn.0044903c(),  var_14h != NULL)) && (var_14h[0x94] != 0)) &&\n       (cVar2 = (**(*var_14h[0x94] + 0x24))(),  cVar2 != '\\0')) {\n        return;\n    }\n    if ((*param_2 < 0x100) || (0x108 < *param_2)) {\n        uVar1 = *param_2;\n        if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n            if (uVar1 == 0xb00b) {\n                fcn.00432190(param_2[2]);\n            }\n        }\n        else {\n            if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                *param_2 = *param_2 - 2;\n            }\n            uVar1 = *param_2;\n            if (uVar1 == 0x200) {\n                fcn.004527e8();\n            }\n            else {\n                if (uVar1 != 0x201) {\n                    if (uVar1 == 0x202) {\n                        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                        goto code_r0x004339f2;\n                    }\n                    if (uVar1 != 0x203) {\n                        if (((*(*0x463b10 + 0x20) != '\\0') && (*(*0x463b10 + 0x1c) != 0)) &&\n                           (*param_2 == *(*0x463b10 + 0x1c))) {\n                            sub.user32.dll_GetKeyboardState(&lpKeyState);\n                            var_10h = *param_2;\n                            var_ch._0_1_ = fcn.00448f80();\n                            var_ch._2_2_ = *(param_2 + 1);\n                            var_8h = param_2[2];\n                            fcn.00403554();\n                            return;\n                        }\n                        goto code_r0x004339f2;\n                    }\n                }\n                if (*(in_EAX + 0x5d) == '\\x01') {\n                    fcn.00403554();\n                    return;\n                }\n                *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n            }\n        }\n    }\n    else {\n        var_14h = fcn.0044903c();\n        if ((var_14h != NULL) && (cVar2 = (**(*var_14h + 0xf0))(),  cVar2 != '\\0')) {\n            return;\n        }\n    }\ncode_r0x004339f2:\n    (**(*in_EAX + -0x14))();\n    return;\n}\n",
        "token_count": 787
    },
    "00433b2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00433b2c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x122) != 0) {\n        iVar1 = (**(*in_EAX + 0x3c))();\n        if (iVar1 != 0) {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (*(iVar1 + 0x40) != in_EAX[0x48]) {\n                (*in_EAX[0x48])();\n                return;\n            }\n        }\n    }\n    if (((*(in_EAX + 7) & 0x10) == 0) && (in_EAX[0x1b] != 0)) {\n        (**(*in_EAX[0x1b] + 0x18))();\n    }\n    else if (*(in_EAX + 0x122) != 0) {\n        (*in_EAX[0x48])();\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00433bb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00433bb8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00433d34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00433d34(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.00433610();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.004335a4(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.00433610(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 237
    },
    "00433e70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00433e70(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00433f18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00433f18(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00434278": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434278(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x462998 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "004342f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004342f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.004326e4();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00434464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434464(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.00434354();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 4) = iVar2;\n            uVar3 = fcn.00438dd8();\n            *(*(param_2 + 8) + 8) = uVar3;\n        }\n    }\n    else {\n        fcn.004343d8(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "004344c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043450b)\n\nvoid __fastcall fcn.004344c4(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4345b2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.004325f0();\n        }\n        fcn.00432620();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 100))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x20] == 0)) {\n            fcn.004040e4();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.00432510();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x122) == 0)) {\n            in_EAX[0x48] = *(param_2 + 0x40);\n            in_EAX[0x49] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4345b9;\n    uStack32 = 0x4345b1;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 439
    },
    "00434968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434968(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.004069ac();\n            cVar1 = fcn.00412978();\n            if (cVar1 == '\\0') {\n                fcn.00432134();\n                (**(*in_EAX + 0x44))(uStack52, uStack48);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.00403554();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.00403554();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.00432160();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.00412978();\n                if (cVar1 != '\\0') {\n                    fcn.00412900();\n                    fcn.00432108();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00434c28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00434c28(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.004036cc();\n    fcn.0041999c();\n    if (*(piVar1 + 0x6a) != '\\0') {\n        *(piVar1 + 0x6a) = 0;\n        fcn.0043029c();\n    }\n    fcn.004056cc();\n    fcn.00403358();\n    if (piVar1[0xc] != 0) {\n        fcn.004358c8();\n    }\n    if (piVar1[0x60] != 0) {\n        (**(*piVar1 + 0xac))();\n    }\n    iVar2 = fcn.00435b08();\n    while (iVar2 != 0) {\n        piVar3 = fcn.00435acc();\n        fcn.00435934();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.00435b08();\n    }\n    fcn.00403358();\n    if (piVar1[99] != 0) {\n        fcn.0041a824();\n    }\n    fcn.004317c8();\n    if ('\\0' < extraout_DL) {\n        fcn.004036b4();\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "00434cf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00434cf8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x19c) == 0) {\n        return;\n    }\n    puStack28 = 0x434d1f;\n    fcn.00403328();\n    uStack32 = 0x434dbc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x19c) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.00413efc();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.00413d5c();\n            if ((-1 < *(iVar1 + 0x1a0)) && (*(iVar1 + 0x1a0) < iVar3)) {\n                fcn.00413e50();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.00413d5c();\n            if (iVar2 != 0) {\n                fcn.00438f98();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x434dc3;\n    uStack32 = 0x434dbb;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 423
    },
    "00435314": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435314(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.00413c00();\n    }\n    var_8h = fcn.00435b08();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.00435acc();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                ((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x435480 == (*0x435480 & *(iVar2 + 0x50)))) ||\n                 (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) && (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.00413d5c();\n                    cVar1 = fcn.00434e48(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00413dd8();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.00413d5c();\n            fcn.00434ed4(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 645
    },
    "00435484": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435484(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00435b08();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00435acc();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.00435acc();\n            if (*0x4354d4 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "004354d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004354d8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x6a) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (in_EAX[0x5f] != 0)) {\n        (**(*in_EAX[0x5f] + 0x2c))();\n    }\n    uStack32 = 0x435522;\n    cVar1 = fcn.00435484(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x8c))();\n        fcn.00403328();\n        uStack32 = 0x4355b7;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.00435314(&stack0xfffffffc);\n        fcn.00435314(&stack0xfffffffc);\n        fcn.00435314(&stack0xfffffffc);\n        fcn.00435314(&stack0xfffffffc);\n        fcn.00435314(&stack0xfffffffc);\n        fcn.00435314(&stack0xfffffffc);\n        fcn.00435314(&stack0xfffffffc);\n        fcn.00403554();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x4355b6;\n        fcn.00403358();\n        return;\n    }\n    if (*(in_EAX + 0x1a6) != '\\0') {\n        fcn.00403554();\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "004355dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004355dc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x4355f0;\n    cVar1 = fcn.004390dc();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 0x58) == 0) {\n            puStack32 = 0x43561c;\n            fcn.00435670();\n            uStack36 = 0x435663;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x90))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x43566a;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x435662;\n            fcn.00435678();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00435678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00435678(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x160) = *(in_EAX + 0x160) + -1;\n    if ((*(in_EAX + 0x160) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.00435698();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00435b28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435b28(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00435b08();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00435acc();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00435d90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00435d90(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x435f51;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x98))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004034e4();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.00438dd8();\n                goto code_r0x00435e3c;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.00405b90();\n        fcn.0040b6e4(uVar5, arg_ch);\n        fcn.00403acc();\n    }\ncode_r0x00435e3c:\n    in_EAX[0x5d] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.0042f3e4)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.0042f3e4;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040cbd8();\n        }\n    }\n    *0x461acc = in_EAX;\n    (**(*in_EAX + 0x9c))();\n    if (in_EAX[0x60] == 0) {\n        fcn.0040cbd8();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x60], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x60], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x60], 0xfffffff4, in_EAX[0x60]);\n        }\n    }\n    fcn.00408998();\n    in_EAX[0x19] = 0;\n    fcn.004390e8();\n    uVar5 = 1;\n    fcn.0041c764();\n    fcn.004337a4(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.00403554();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00404090(0x435f58);\n    return;\n}\n",
        "token_count": 900
    },
    "00436040": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00436040(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x1000000;\n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (uVar1 = fcn.0043602c(),  uVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x198);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.00413d5c();\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x436114 != *(uVar2 + 0x61)))\n                goto code_r0x0043610b;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        uVar1 = *(*(arg_8h + -8) + 0x19c);\n        if ((uVar1 != 0) && (iVar3 = *(uVar1 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.00413d5c();\n                uVar1 = uVar2;\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x436114 != *(uVar2 + 0x61)))\n                goto code_r0x0043610b;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    _auStack8 = 0;\ncode_r0x0043610b:\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 493
    },
    "00436330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00436330(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x60] != 0) {\n        if ((in_EAX[0x67] != 0) && (iVar1 = *(in_EAX[0x67] + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00413d5c();\n                fcn.00436330();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        (**(*in_EAX + 0xb0))();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00436378": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00436378(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x180) != 0) {\n        fcn.004337a4(0);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "004363d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004363d0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) == '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || ((*(in_EAX + 0x51) & 4) != 0)))) ||\n       ((*(in_EAX + 0x15) & 8) != 0)) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x60] == 0) {\n            puStack28 = 0x436426;\n            (**(*in_EAX + 0x94))();\n        }\n        if ((in_EAX[0x67] != 0) && (iVar2 = *(in_EAX[0x67] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x43644e;\n                fcn.00413d5c();\n                puStack28 = 0x436453;\n                fcn.004363d0();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x60] != 0) && (*(in_EAX + 0x1a6) != cVar1)) {\n        *(in_EAX + 0x1a6) = cVar1;\n        uStack32 = 0x4364a6;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.004337a4(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "004364cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004364cc(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    \n    while (iVar1 = *(in_EAX + 0x30),  iVar1 != 0) {\n        in_EAX = iVar1;\n        if (*(iVar1 + 0x1a6) == '\\0') {\n            return;\n        }\n    }\n    cVar2 = fcn.004034e4();\n    if ((cVar2 == '\\0') && (*(in_EAX + 400) == 0)) {\n        return;\n    }\n    fcn.004363d0();\n    return;\n}\n",
        "token_count": 145
    },
    "0043650c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043650c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint arg_8h;\n    \n    if ((*(in_EAX + 0x30) == 0) && (param_2 != *(in_EAX + 400))) {\n        if ((*(in_EAX + 0x180) == 0) || ((*(in_EAX + 400) == 0 || (param_2 == 0)))) {\n            fcn.00436330();\n            *(in_EAX + 400) = param_2;\n        }\n        else {\n            *(in_EAX + 400) = param_2;\n            sub.user32.dll_SetParent(*(in_EAX + 0x180), param_2);\n            if ((4 < **0x4625f8) && (**0x46298c == 2)) {\n                arg_8h = 0;\n                fcn.004069d8();\n                fcn.004337a4(arg_8h);\n            }\n        }\n        fcn.004364cc();\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "0043660c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043660c(int32_t arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint lprc;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00412900();\n    *(arg_8h + -0xc) = var_8h;\n    *(arg_8h + -8) = var_4h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar3 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar3 != 0) {\n        if (((*(in_EAX + 7) & 0x10) != 0) && ((*(in_EAX + 0x57) != '\\0' || ((*(in_EAX + 0x51) & 4) == 0)))) {\ncode_r0x004366b1:\n            bVar1 = true;\n            goto code_r0x004366b3;\n        }\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar2 = (**(*in_EAX + 0x50))();\n            if ((cVar2 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                arg_8h_00 = fcn.004069c0();\n                iVar3 = fcn.004337a4(arg_8h_00);\n                if (iVar3 != 0) goto code_r0x004366b1;\n            }\n        }\n    }\n    bVar1 = false;\ncode_r0x004366b3:\n    if (bVar1) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 430
    },
    "004366c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004366c4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    if (((arg_8h != '\\0') && (*(in_EAX + 0x19c) != 0)) && (iVar2 = *(*(in_EAX + 0x19c) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00413d5c();\n            cVar1 = fcn.0043660c(puVar3);\n            if (cVar1 != '\\0') break;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 0x198) != 0) && (iVar2 = *(*(in_EAX + 0x198) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00413d5c();\n            cVar1 = fcn.0043660c(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 338
    },
    "00436758": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00436758(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00438dd8();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x461b8c == 0) || (iVar1 = *0x461b8c,  in_EAX != *(*0x461b8c + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n        fcn.004069ac();\n        iVar1 = fcn.004366c4(uVar3);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.004069c0(*(param_2 + 8) - *(iVar1 + 0x40), *(param_2 + 10) - *(iVar1 + 0x44));\n        uVar3 = fcn.004337a4(uVar3);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 277
    },
    "004367ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004367ec(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x85) {\n        if (iVar4 == 0x84) {\n            fcn.00433870();\n            if (param_2[3] != -1) {\n                return;\n            }\n            uVar6 = 0;\n            fcn.004069ac();\n            fcn.00432134();\n            iVar4 = fcn.004366c4(uVar6);\n            if (iVar4 == 0) {\n                return;\n            }\n            param_2[3] = 1;\n            return;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.0044903c();\n            if ((piVar3 != NULL) && (cVar1 = (**(*piVar3 + 0xe8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x0043693f;\n        }\n        if (iVar4 != 8) {\n            if (iVar4 == 0x1f) {\n                iVar4 = fcn.00438dd8();\n                iVar5 = sub.user32.dll_GetCapture();\n                if (((iVar4 == iVar5) && (*0x461b8c != 0)) && (in_EAX == *(*0x461b8c + 0x30))) {\n                    fcn.004337a4(0);\n                }\n            }\n            goto code_r0x0043693f;\n        }\n        uVar2 = *(in_EAX + 0x54) & 0x20;\n    }\n    else {\n        if (8 < iVar4 - 0x100U) {\n            if ((iVar4 - 0x200U < 0xb) && (cVar1 = fcn.00436758(),  cVar1 != '\\0')) {\n                if (param_2[3] != 0) {\n                    return;\n                }\n                cVar1 = fcn.004390dc();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                uVar6 = fcn.00438dd8(*param_2, param_2[1], param_2[2]);\n                sub.user32.dll_DefWindowProcA(uVar6);\n                return;\n            }\n            goto code_r0x0043693f;\n        }\n        uVar2 = fcn.00432d60();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x0043693f:\n    fcn.00433870();\n    return;\n}\n",
        "token_count": 636
    },
    "00436950": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436950(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x180) == 0) {\n        fcn.00433a04();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.004337a4(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.0041c290();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.0041cf14();\n            uVar2 = fcn.0041c290();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.0041cf50();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x463b28) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x174), *(in_EAX + 0x180), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.00432190(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "00436a8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436a8c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff80;\n    int32_t iVar5;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    uint nSavedDC;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar1 == 0) {\n        puStack100 = &fcn.00436a8c::var_50h;\n        uStack104 = 0x436ab1;\n        uStack104 = fcn.00438dd8();\n        puStack108 = 0x436ab7;\n        iVar1 = sub.user32.dll_BeginPaint();\n    }\n    uStack112 = 0x436bac;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x66] == 0) {\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xb8))();\n        iVar1 = in_stack_ffffff80;\n    }\n    else {\n        iVar5 = iVar1;\n        puStack108 = &stack0xfffffffc;\n        nSavedDC = sub.gdi32.dll_SaveDC(iVar1);\n        var_ch = 2;\n        iVar4 = *(var_4h[0x66] + 8);\n        if (-1 < iVar4 + -1) {\n            do {\n                iVar2 = fcn.00413d5c();\n                if ((((*(iVar2 + 0x57) != '\\0') || (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                    ((*(iVar2 + 0x50) & 0x40) != 0)) &&\n                   (iVar5 = iVar1,  var_ch = sub.gdi32.dll_ExcludeClipRect(),  var_ch == 1)) break;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        if (var_ch != 1) {\n            (**(*var_4h + 0xb8))(iVar5);\n        }\n        sub.gdi32.dll_RestoreDC(iVar1, nSavedDC);\n    }\n    fcn.00436be4();\n    *in_FS_OFFSET = iVar1;\n    if (*(var_8h + 4) == 0) {\n        uVar3 = fcn.00438dd8(&fcn.00436a8c::var_50h, 0x436bb3);\n        sub.user32.dll_EndPaint(uVar3);\n    }\n    return;\n}\n",
        "token_count": 714
    },
    "00436be4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436be4(int32_t param_1, uchar *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puStack72;\n    uchar *puStack68;\n    uchar *puStack48;\n    uint uStack44;\n    int32_t iStack36;\n    uchar auStack32 [16];\n    \n    if (((*(in_EAX + 0x1a8) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x20))();\n    }\n    if (*(in_EAX + 0x198) != 0) {\n        iVar4 = 0;\n        if ((param_1 != 0) && (iVar4 = fcn.00413db8(),  iVar4 < 0)) {\n            iVar4 = 0;\n        }\n        puStack48 = *(*(in_EAX + 0x198) + 8);\n        if (iVar4 < puStack48) {\n            do {\n                iVar1 = fcn.00413d5c();\n                if ((*(iVar1 + 0x57) != '\\0') || (((*(iVar1 + 0x1c) & 0x10) != 0 && ((*(iVar1 + 0x51) & 4) == 0)))) {\n                    fcn.00412928(&stack0xffffffe0, *(iVar1 + 0x44) + *(iVar1 + 0x4c));\n                    puStack68 = 0x436ca2;\n                    iVar2 = sub.gdi32.dll_RectVisible();\n                    puStack48 = param_2;\n                    if (iVar2 != 0) {\n                        if ((*(in_EAX + 0x54) & 0x80) != 0) {\n                            *(iVar1 + 0x54) = *(iVar1 + 0x54) | 0x80;\n                        }\n                        puStack72 = 0x436cb8;\n                        puStack68 = param_2;\n                        sub.gdi32.dll_SaveDC();\n                        puStack72 = 0x436cc9;\n                        fcn.00430f2c();\n                        puStack72 = *(iVar1 + 0x4c);\n                        sub.gdi32.dll_IntersectClipRect(param_2, 0, 0, *(iVar1 + 0x48));\n                        fcn.004337a4(0);\n                        sub.gdi32.dll_RestoreDC();\n                        *(iVar1 + 0x54) = *(iVar1 + 0x54) & 0xff7f;\n                    }\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < puStack48);\n        }\n    }\n    if ((*(in_EAX + 0x19c) != 0) && (iStack36 = *(*(in_EAX + 0x19c) + 8),  -1 < iStack36 + -1)) {\n        do {\n            iVar4 = fcn.00413d5c();\n            if (((*(iVar4 + 0x1a5) != '\\0') && ((*(iVar4 + 0x50) & 0x10) != 0)) &&\n               ((*(iVar4 + 0x57) != '\\0' || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0)))))) {\n                fcn.0041c290();\n                uStack44 = sub.gdi32.dll_CreateSolidBrush();\n                puVar5 = &stack0xffffffdc;\n                puStack68 = 0x436d9f;\n                fcn.00412928(puVar5, *(iVar4 + 0x44) + *(iVar4 + 0x4c));\n                puStack68 = &stack0xffffffd4;\n                puStack72 = param_2;\n                sub.user32.dll_FrameRect();\n                sub.gdi32.dll_DeleteObject(puVar5);\n                uVar3 = fcn.0041c290();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush(uVar3);\n                iVar4 = *(iVar4 + 0x44) + *(iVar4 + 0x4c) + 1;\n                puVar5 = &stack0xffffffc0;\n                puStack72 = uVar3;\n                fcn.00412928(puVar5, iVar4);\n                sub.user32.dll_FrameRect(param_2, &stack0xffffffb8, puVar5, iVar4, uVar3);\n                sub.gdi32.dll_DeleteObject(puVar5);\n            }\n            iStack36 = iStack36 + -1;\n        } while (iStack36 != 0);\n    }\n    return;\n}\n",
        "token_count": 1111
    },
    "00436e14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436e14(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lprc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint edge;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    fcn.00430f2c();\n    sub.gdi32.dll_IntersectClipRect();\n    iVar3 = 0;\n    edge = 0;\n    uVar1 = fcn.00438dd8(0xffffffec);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    if ((uVar2 & 0x200) == 0) {\n        uVar1 = fcn.00438dd8(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & 0x800000) != 0) {\n            edge = 3;\n            iVar3 = 0xa00f;\n        }\n    }\n    else {\n        edge = 10;\n        iVar3 = 0x200f;\n    }\n    if (iVar3 != 0) {\n        sub.user32.dll_SetRect(&lprc, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n        sub.user32.dll_DrawEdge();\n        fcn.00430f2c();\n        sub.gdi32.dll_IntersectClipRect();\n    }\n    fcn.004337a4(0);\n    fcn.004337a4(0);\n    if ((*(in_EAX + 0x19c) != 0) && (iVar3 = *(*(in_EAX + 0x19c) + 8),  -1 < iVar3 + -1)) {\n        var_4h = 0;\n        var_10h = iVar3;\n        do {\n            iVar3 = fcn.00413d5c();\n            if (*(iVar3 + 0x57) != '\\0') {\n                fcn.00436e14(*(iVar3 + 0x44));\n            }\n            var_4h = var_4h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    sub.gdi32.dll_RestoreDC();\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xff7f;\n    return;\n}\n",
        "token_count": 630
    },
    "0043722c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043722c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uchar auStack28 [16];\n    \n    fcn.004276c4();\n    cVar1 = fcn.004277a4();\n    if (((cVar1 == '\\0') || (in_EAX[0xc] == 0)) || ((*(in_EAX + 0x52) & 4) == 0)) {\n        if ((*(in_EAX + 0x7e) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n            uVar2 = fcn.0041cf50();\n            (**(*in_EAX + 0x44))(uVar2);\n            sub.user32.dll_FillRect(*(param_2 + 4), auStack28);\n        }\n    }\n    else {\n        arg_10h = 0;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.00438dd8();\n        fcn.004278a4(uVar2, arg_ch, arg_10h);\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 298
    },
    "0043755c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043755c(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43763b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(*0x462998 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.0044fcc0();\n            iVar2 = fcn.00407d54();\n            puVar1 = puStack24;\n            if (iVar2 != 0) {\n                piVar3 = fcn.0044fac0();\n                iVar2 = (**(*piVar3 + 0x14))();\n                puVar1 = puStack24;\n                if (iVar2 != 0) {\n                    uVar4 = *(**0x46296c + 0x3c);\n                    if (*(in_EAX + 0x184) != '\\0') {\n                        piVar3 = fcn.0044fac0();\n                        iVar2 = (**(*piVar3 + 0x54))();\n                        if (-1 < iVar2) {\n                            uStack28 = 0x437602;\n                            piVar3 = fcn.0044fac0();\n                            uStack28 = 0x437609;\n                            uVar4 = (**(*piVar3 + 0x18))();\n                        }\n                    }\n                    uStack28 = 1;\n                    uStack32 = uVar4;\n                    sub.user32.dll_ActivateKeyboardLayout();\n                    puVar1 = puStack24;\n                }\n            }\n        }\n        puStack24 = puVar1;\n        fcn.00438dd8();\n        fcn.0043d9d4();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x437642;\n    uStack28 = 0x43763a;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 511
    },
    "00437648": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437648(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffe0;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4376d2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x462998 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.0044fcc0();\n            iVar2 = fcn.00407d54();\n            puVar1 = puStack16;\n            if (iVar2 != 0) {\n                in_stack_ffffffe0 = *(**0x46296c + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffe0, 1);\n                puVar1 = puStack16;\n            }\n        }\n        puStack16 = puVar1;\n        puVar1 = puStack16;\n        if (*(in_EAX + 0x184) == '\\0') {\n            fcn.00438dd8();\n            fcn.0043d9b8();\n            puVar1 = puStack16;\n        }\n    }\n    puStack16 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffe0;\n    uStack24 = 0x4376d9;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 387
    },
    "00437734": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437734(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00412918();\n    iVar1 = fcn.004337a4(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1b2) != 0)) {\n        (**(in_EAX + 0x1b0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00437784": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437784(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ba) != 0) {\n        (**(in_EAX + 0x1b8))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "004378ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004378ac(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.00438dd8();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x1d2) != 0) {\n        (**(in_EAX + 0x1d0))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00437908": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00437908(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00437874();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.00413d5c();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 145
    },
    "004379b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004379b4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x437a5c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1a8)) && (*(in_EAX + 0x1a8) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.0043029c();\n        if (param_2 == '\\0') {\n            fcn.00403358();\n            *(in_EAX + 0x178) = 0;\n            fcn.004056cc();\n        }\n        else {\n            if (*(in_EAX + 0x178) == 0) {\n                uVar1 = fcn.00403328();\n                *(in_EAX + 0x178) = uVar1;\n            }\n            fcn.00403554();\n            fcn.004056e4();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x437a63;\n    uStack28 = 0x437a5b;\n    fcn.004056cc();\n    return;\n}\n",
        "token_count": 348
    },
    "00437a6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437a6c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x44);\n        uStack24 = *(iVar1 + 0x48);\n        uStack20 = *(iVar1 + 0x4c);\n        uStack16 = *(iVar1 + 0x50);\n        uStack44 = 2;\n        puStack48 = &fcn.00437a6c::var_18h;\n        uStack52 = 0x437aa6;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.00438dd8();\n        uStack56 = 0;\n        puStack60 = 0x437aae;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x437ab6;\n        fcn.00435670();\n        uStack64 = 0x437b2e;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.00403554();\n        if ((*(var_4h + 0x1a7) != '\\0') && (*(var_4h + 0x17c) != 0)) {\n            (**(**(var_4h + 0x17c) + 0x18))(*(*(var_8h + 4) + 0x58));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x437b35;\n        uStack64 = 0x437b2d;\n        fcn.00435678();\n        return;\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "00437b58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437b58(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1a7) != '\\0') && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00437b80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437b80(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x437b95;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x437b9f;\n    iVar3 = fcn.004032a0();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x437bea;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00403554();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x437bfb;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x437be9;\n            fcn.00432850();\n        }\n        return;\n    }\n    puStack24 = 0x437bfb;\n    fcn.00434464();\n    return;\n}\n",
        "token_count": 291
    },
    "00437c2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00437c2c(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0044903c();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.00437c2c();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x00437c89;\n    }\n    uVar2 = fcn.00448f44();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.00403554();\n        if (*(param_2 + 4) == 0) goto code_r0x00437c89;\n    }\n    uVar4 = 0;\ncode_r0x00437c89:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 306
    },
    "00437d14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00437d14(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0044903c();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.00437d14();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x00437d71;\n    }\n    uVar2 = fcn.00448f44();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.00403554();\n        if (*(param_2 + 4) == 0) goto code_r0x00437d71;\n    }\n    uVar4 = 0;\ncode_r0x00437d71:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 304
    },
    "00437dbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437dbc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1e2) != 0) {\n        (**(in_EAX + 0x1e0))();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00437ddc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00437ddc(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0044903c();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar2 = fcn.00437ddc();\n        if (cVar2 != '\\0') goto code_r0x00437e38;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.00403554();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x00437e38;\n    }\n    uVar4 = 0;\ncode_r0x00437e38:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 318
    },
    "0043807c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043807c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 105
    },
    "004380a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004380a0(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.004318bc();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.00435b08();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.00435acc();\n                uVar1 = fcn.00403554();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 217
    },
    "00438154": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438154(uint param_1, int32_t param_2)\n\n{\n    fcn.00434278();\n    if ((*(*0x462998 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.00436378();\n    }\n    fcn.00435b68();\n    return;\n}\n",
        "token_count": 85
    },
    "0043818c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043818c(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(*0x462998 + 0xd) != '\\0') {\n        cVar1 = fcn.00432c34();\n        if (cVar1 == '\\0') {\n            if (*(**0x4627c4 + 0x3c) != 0) {\n                uVar2 = fcn.00404550(1);\n                sub.user32.dll_LoadKeyboardLayoutA(uVar2);\n            }\n        }\n        else if (*(**0x4627c4 + 0x38) != 0) {\n            uVar2 = fcn.00404550(1);\n            sub.user32.dll_LoadKeyboardLayoutA(uVar2);\n        }\n    }\n    fcn.00403554();\n    return;\n}\n",
        "token_count": 185
    },
    "0043826c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043826c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.004358c8();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.004364cc();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "004383f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004383f0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.004390dc();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180));\n            if (iVar2 != 0) {\n                fcn.00438ce0();\n            }\n        }\n    }\n    fcn.00435b68();\n    return;\n}\n",
        "token_count": 155
    },
    "0043851c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0043851c(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar2 = fcn.00403554();\n                if ((iVar2 != 0) && (*(iVar2 + 0x38) != 0)) {\n                    uVar3 = fcn.00403554();\n                    if (uVar3 != '\\0') goto code_r0x004385a5;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar2 = fcn.0044903c();\n        if (iVar2 != 0) {\n            uVar3 = fcn.00403554();\n            if (uVar3 != '\\0') goto code_r0x004385a5;\n        }\n    }\n    uVar3 = fcn.0042f52c();\n    if (uVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x004385a5:\n    return CONCAT44(uStack20, uVar3 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 357
    },
    "00438990": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438990(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x180);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x180), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.00435b08();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00435acc();\n            cVar2 = fcn.004034e4();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x180) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x180);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.00435698();\n    return;\n}\n",
        "token_count": 377
    },
    "00438a80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438a80(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x198);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.00413db8();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x19c) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.00413c4c();\n                fcn.00413dd8();\n            }\n        }\n        if (*(in_EAX + 0x180) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x19c) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.00413d5c();\n                uVar3 = fcn.00438dd8();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.00413d5c();\n                uVar3 = fcn.00438dd8();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "00438db4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438db4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x60] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.00438db4();\n        }\n        (**(*in_EAX + 0x94))();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "004390dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004390dc(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x180) != 0;\n}\n",
        "token_count": 48
    },
    "00439200": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439200(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x439222;\n    iVar2 = fcn.00403328();\n    uStack44 = 0x4392f6;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00403554();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.00413db8();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.00413d5c();\n            cVar1 = fcn.00403554();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1a4) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4392fd;\n    uStack44 = 0x4392f5;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 564
    },
    "004393c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004393c8(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 302
    },
    "0043944c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043944c(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_59h;\n    int32_t var_55h;\n    int32_t var_51h;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.004390dc();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00435b08(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x8c))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_14h = in_EAX[0x12] - (var_55h - lprc);\n            var_18h = in_EAX[0x13] - (var_51h - var_59h);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_14h;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_18h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            var_10h = var_18h;\n            var_ch = var_14h;\n            iVar3 = fcn.00435b08();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.00435acc();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.004393c8(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x439820 == (*(iVar4 + 0x61) & *0x439820)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    var_40h = ((var_55h - lprc) - *(iVar4 + 0x48)) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    var_44h = ((var_55h - lprc) + var_44h) - *(iVar4 + 0x48);\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x439824 == (*(iVar4 + 0x61) & *0x439824)) {\n                                cVar1 = '\\x01';\n                                if (0 < var_48h) {\n                                    var_48h = ((var_51h - var_59h) - *(iVar4 + 0x4c)) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    var_4ch = ((var_51h - var_59h) + var_4ch) - *(iVar4 + 0x4c);\n                                }\n                            }\n                            else {\n                                cVar1 = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                cVar1 = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                cVar1 = '\\x02';\n                            }\n                            else {\n                                cVar1 = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            var_30h = var_30h + *(iVar4 + 0x48);\n                            var_34h = var_34h + *(iVar4 + 0x48);\n                        }\n                        if (cVar1 - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (cVar1 - 1U == 2) {\n                            var_38h = var_38h + *(iVar4 + 0x4c);\n                            var_3ch = var_3ch + *(iVar4 + 0x4c);\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2092
    },
    "004398dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004398dc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack76 = 0x4398fa;\n    piVar1 = fcn.004390dc();\n    if ((piVar1 != '\\0') && (piVar1 = in_EAX,  *(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack76 = 0x439920;\n            piVar1 = fcn.00435b08();\n            if (piVar1 < 1) goto code_r0x00439a9e;\n        }\n        puStack76 = 0x439936;\n        (**(*in_EAX + 0xb4))();\n        puStack76 = 0x439941;\n        (**(*in_EAX + 0x44))();\n        puStack76 = 0x43994f;\n        (**(*in_EAX + 0x8c))();\n        puStack76 = 0x439957;\n        fcn.00435670();\n        uStack80 = 0x439a0b;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        iVar2 = fcn.00435b08();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00435acc();\n                if ((*(piVar1 + 0x57) != '\\0') || (((*(piVar1 + 7) & 0x10) != 0 && ((*(piVar1 + 0x51) & 4) == 0)))) {\n                    (**(*piVar1 + 0x84))(piVar1[0x13], piVar1[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack84;\n        puStack76 = 0x439a12;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack80 = 0x439a0a;\n        uVar3 = fcn.00435678();\n        return uVar3;\n    }\ncode_r0x00439a9e:\n    return piVar1 & 0xffffff00 | 1;\n}\n",
        "token_count": 660
    },
    "00439e74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439e74(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_2 + 0xc) == 0) {\n        uVar2 = 0;\n        fcn.004069ac();\n        fcn.00432134();\n        iVar1 = fcn.004366c4(uVar2);\n        if (iVar1 != 0) {\n            uVar2 = fcn.004337a4(*(param_2 + 8));\n            *(param_2 + 0xc) = uVar2;\n        }\n        if (*(param_2 + 0xc) == 0) {\n            fcn.00434968();\n        }\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00439fbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00439fbc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.004316f0();\n    uVar1 = fcn.0041d06c();\n    *(in_EAX + 0x160) = uVar1;\n    fcn.004311cc();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 200
    },
    "0043a058": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a058(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(param_2 + 4) != 0) {\n        puStack16 = 0x43a07a;\n        fcn.0041d5f4();\n        uStack20 = 0x43a0f3;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack28 = 0x43a099;\n        puStack16 = &stack0xfffffffc;\n        fcn.0041d9a0();\n        uStack32 = 0x43a0d0;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        (**(*in_EAX + 0x8c))();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x43a0d7;\n        uStack32 = 0x43a0cf;\n        fcn.0041d9a0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "0043a354": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043a354(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x43a3df;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (*(in_EAX + 0x84) == '\\0') {\n        fcn.004325f0();\n        fcn.0041d780();\n        fcn.00431dac();\n        fcn.004325f0();\n        fcn.0041d79c();\n        fcn.00431dd0();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43a3e6;\n    uStack24 = 0x43a3de;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 245
    },
    "0043a3ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a3ec(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar3 = param_2[3];\n    *(in_EAX + 0x84) = 1;\n    uStack56 = 0x43a5c5;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.00432620();\n    fcn.00433848();\n    iVar1 = fcn.0044f874();\n    if (iVar1 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.0044f874();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar1 = fcn.0044f880();\n    if (iVar1 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.0044f880();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar1 = fcn.0044f868();\n    if (var_18h < iVar1) {\n        var_18h = fcn.0044f868();\n    }\n    iVar1 = fcn.0044f85c();\n    if (iVar3 + 4 < iVar1) {\n        fcn.0044f85c();\n    }\n    uVar2 = fcn.00438dd8(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar2);\n    iVar3 = sub.kernel32.dll_GetTickCount();\n    if (0xfa < iVar3 - var_4h[0x85]) {\n        iVar3 = fcn.00404350();\n        if ((iVar3 < 100) && (*0x461ac8 != NULL)) {\n            sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n            if (var_8h != 0) {\n                sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n                if (var_8h == 0) {\n                    fcn.0043d640();\n                    if (var_14h < var_1ch) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar4 = 1;\n                    }\n                }\n                else {\n                    uVar4 = 2;\n                }\n                uVar2 = fcn.00438dd8(100, *(uVar4 * 4 + 0x461bd0) | 0x40000);\n                (**0x461ac8)(uVar2);\n            }\n        }\n    }\n    fcn.0043650c();\n    uVar2 = fcn.00438dd8(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x7c))();\n    *in_FS_OFFSET = uVar2;\n    iVar3 = sub.kernel32.dll_GetTickCount(0x43a5cc);\n    var_4h[0x85] = iVar3;\n    *(var_4h + 0x84) = 0;\n    return;\n}\n",
        "token_count": 911
    },
    "0043a83c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a83c(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.0043a728();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0043a854": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043a854(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.0043f3c4();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.0043a7f4(*(in_EAX + 0x74));\n        }\n        fcn.0043a728();\n        uVar2 = fcn.0043a8b4(arg_8h);\n        if (uVar2 != '\\0') {\n            sub.user32.dll_ShowCursor(0);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 180
    },
    "0043a918": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043a918(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.0043f3c4();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0043a9b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0043a9b0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.0043f3c4();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.0043a918();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.0043a83c();\n        sub.user32.dll_ShowCursor(0xffffffff);\n    }\n    return bVar3;\n}\n",
        "token_count": 176
    },
    "0043a9f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043a9f8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00434b04();\n    uVar1 = fcn.0041d06c();\n    *(in_EAX + 0x208) = uVar1;\n    fcn.004311cc();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 202
    },
    "0043ab70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043ab70(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "0043acac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043acac(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.0043b0e0();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n    if (param_2 == '\\x01') {\n        return uStack20;\n    }\n    if (param_2 == '\\x02') {\n        return uStack24;\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "0043ad18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043ad18(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.0043abcc(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack16 - iStack24;\n        }\n        else {\n            iVar2 = iStack20 - iStack28;\n        }\n    }\n    else {\n        do {\n            if (iVar2 == *(*(in_EAX + 0x1c) + 100)) {\n                if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n                    return *(*(in_EAX + 0x1c) + 0x68);\n                }\n                iVar2 = fcn.0043b0e0();\n                return iVar2;\n            }\n            iVar2 = *(iVar2 + 0x14);\n        } while (param_2 != *(iVar2 + 0x10));\n        iVar2 = fcn.0043b0e0();\n        iVar1 = fcn.0043ac1c();\n        iVar2 = iVar2 - iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 452
    },
    "0043adc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043adc8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0043abcc();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.0043b1e0();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.0043ad18();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.0043ad18();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.0043abcc();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.0043b108();\n            }\n            else {\n                fcn.0043ac1c();\n                fcn.0043b108();\n            }\n            fcn.0043af68();\n            iVar1 = fcn.0043b1b8();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 294
    },
    "0043ae70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ae70(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00404090();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040b764();\n            fcn.00403acc();\n        }\n        fcn.004040e4();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0043aeb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0043aee9)\n\nuint32_t fcn.0043aeb4(void)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00403554();\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 100
    },
    "0043af68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043af68(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x9c) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.0043ad18();\n    iVar2 = fcn.0043ad18();\n    cVar1 = fcn.0043af38(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.0043b1b8();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.0043b0e0(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x0043b08e;\n        iVar3 = fcn.0043b0e0();\n        iVar4 = fcn.0043b0e0();\n        if (iVar4 <= iVar3) goto code_r0x0043b08e;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x0043b08e:\n    arg_8h = &var_14h;\n    uVar5 = fcn.0043acac();\n    fcn.0043acac(uVar5);\n    fcn.00412950(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.00431fb0();\n    return;\n}\n",
        "token_count": 686
    },
    "0043b3d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b3d4(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.0043b3d4(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.0043b3d4(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0043b42c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043b42c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.0043b3d4(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0043b530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043b530(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x8c))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.00432594();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.00432580();\n                    }\n                }\n                fcn.00412950(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.00431fb0();\n                iVar1 = fcn.0043ab94();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.0043b42c();\n                if (iVar2 != 0) {\n                    fcn.0043c458();\n                }\n                var_8h = fcn.0043b42c();\n                var_9h = *(var_1h + 0x461bdc);\n                iVar2 = fcn.0043abb8();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.0043ad18();\n                        fcn.0043b108();\n                        uVar3 = fcn.0043ad18();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.0043ad18();\n                        fcn.0043b108();\n                        uVar3 = fcn.0043ad18();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.0043ab94();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = in_EAX[0x19] & 0xffffff00 | *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(var_8h + 0x14) & 0xffffff00 | *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.0043b8e8(*(var_1h + 0x461be4));\n                }\n                else {\n                    fcn.0043b740(*(var_1h + 0x461be4), uVar4 & 0xffffff00 | var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.0043af68();\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 1078
    },
    "0043b740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b740(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.0043ab94();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.0043b108();\n        uVar3 = fcn.0043b0e0();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0043b494(0x43c7b0);\n            uVar4 = fcn.0043b0e0();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.0043b494(0x43cb34);\n            fcn.0043b0e0();\n            fcn.0043b108();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0043b494(0x43c7b0);\n        }\n        fcn.0043b494(0x43cc68);\n    }\n    else {\n        fcn.0043b0e0();\n        fcn.0043b108();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.0043adc8();\n    fcn.0043b158();\n    fcn.0043b494(0x43cc68);\n    return;\n}\n",
        "token_count": 980
    },
    "0043b960": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b960(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar1 = fcn.0043b0e0();\n        if (*(*(arg_8h + -4) + 4) <= iVar1) {\n            iVar1 = fcn.0043b0e0();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0043bb3d;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar1 = fcn.0043b0e0();\n        if (**(arg_8h + -4) <= iVar1) {\n            iVar1 = fcn.0043b0e0();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0043bb3d;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        iVar1 = fcn.0043acac();\n        iVar2 = fcn.0043acac();\n        if (*(*(arg_8h + -8) + 0x1c) == '\\0') {\n            if (((iVar2 <= **(arg_8h + -4)) && (**(arg_8h + -4) <= iVar2 + *(*(arg_8h + -8) + 0x18))) &&\n               (iVar1 <= *(*(arg_8h + -4) + 4))) {\n                iVar2 = fcn.0043ad18();\n                if (*(*(arg_8h + -4) + 4) <= iVar1 + iVar2) {\n                    *(arg_8h + -0x10) = in_EAX;\n                    if (*(*(arg_8h + -4) + 4) < *(*(in_EAX + 4) + 0x44) + 0xf) {\n                        **(arg_8h + -0xc) = 0x14;\n                    }\n                    else {\n                        **(arg_8h + -0xc) = 2;\n                    }\n                }\n            }\n        }\n        else if (((iVar1 <= *(*(arg_8h + -4) + 4)) && (*(*(arg_8h + -4) + 4) <= iVar1 + *(*(arg_8h + -8) + 0x18))) &&\n                (iVar2 <= **(arg_8h + -4))) {\n            iVar1 = fcn.0043ad18();\n            if (**(arg_8h + -4) <= iVar2 + iVar1) {\n                *(arg_8h + -0x10) = in_EAX;\n                if (*(*(in_EAX + 4) + 0x40) + *(*(in_EAX + 4) + 0x48) + -0xf < **(arg_8h + -4)) {\n                    **(arg_8h + -0xc) = 0x14;\n                }\n                else {\n                    **(arg_8h + -0xc) = 2;\n                }\n            }\n        }\n    }\ncode_r0x0043bb3d:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.0043b1b8();\n        if (iVar1 != 0) {\n            iVar1 = arg_8h;\n            fcn.0043b1b8();\n            fcn.0043b960(iVar1);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.0043b1e0();\n        if (iVar1 != 0) {\n            fcn.0043b1e0();\n            fcn.0043b960(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 1012
    },
    "0043bb8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043bb8c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint lprc;\n    uint pt;\n    uint var_4h;\n    \n    iVar2 = fcn.00435b08();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.00435acc();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004034e4(),  cVar1 == '\\0' || (*(piVar3 + 0x1a6) != '\\0'))))\n            {\n                fcn.00412900();\n                (**(*piVar3 + 0x44))(pt, var_4h);\n                iVar4 = sub.user32.dll_PtInRect(&lprc);\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 265
    },
    "0043bc20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043bc20(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.0043bb8c(&stack0xfffffffc);\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0xa0))) {\n        iVar2 = fcn.0043b1e0();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.0043b1e0();\n            fcn.0043b960(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.0043b42c();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 269
    },
    "0043bca8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bca8(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00404090();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.004046dc();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0043bcf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043bd76)\n// WARNING: Removing unreachable block (ram,0x0043bd91)\n// WARNING: Removing unreachable block (ram,0x0043be2d)\n// WARNING: Removing unreachable block (ram,0x0043be3b)\n\nvoid __fastcall fcn.0043bcf0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x43bee8;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    fcn.0043c3c0();\n    fcn.0043b3bc();\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    (**(*param_2 + 0xc))();\n    (**(*param_2 + 0xc))();\n    if (-1 < var_20h + -1) {\n        do {\n            fcn.0043bca8(&stack0xfffffffc);\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    (**(*param_2 + 0xc))();\n    var_18h = 0;\n    iVar2 = 0;\n    while ((**(*param_2 + 0xc))(),  var_14h != *0x461bec) {\n        iVar1 = fcn.0043ab94();\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0xc))();\n        fcn.0043bca8(&stack0xfffffffc);\n        if (var_14h == 0) {\n            *(in_EAX + 100) = iVar1;\n        }\n        else if (var_14h == var_18h) {\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar1;\n            *(iVar1 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            var_18h = var_18h - var_14h;\n            if (0 < var_18h) {\n                do {\n                    iVar2 = *(iVar2 + 0x14);\n                    var_18h = var_18h + -1;\n                } while (var_18h != 0);\n            }\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar1;\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0043b3c0();\n    return;\n}\n",
        "token_count": 799
    },
    "0043c0b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c0b4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x43c0cd;\n    var_4h = fcn.0041d06c();\n    uStack52 = 0x43c20a;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x43c0e9;\n    puStack48 = &stack0xfffffffc;\n    fcn.004311cc();\n    puStack60 = 0x43c0f1;\n    fcn.0041d5f4();\n    uStack64 = 0x43c1ed;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x43c109;\n    puStack60 = &stack0xfffffffc;\n    fcn.0041d9a0();\n    uStack76 = 0x43c1d0;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.00435b08();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.00435acc();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0xa0) == in_EAX[5])) {\n                fcn.00431f90();\n                (***in_EAX)();\n                var_1ch = *(iVar1 + 0x40) * 2 - var_1ch;\n                var_18h = *(iVar1 + 0x44) * 2 - var_18h;\n                var_14h = *(iVar1 + 0x48) * -2 + var_14h * 3 + var_1ch * -2;\n                var_10h = *(iVar1 + 0x4c) * -2 + var_10h * 3 + var_18h * -2;\n                (**(*in_EAX + 0x10))(&fcn.0043c0b4::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x43c1d7;\n    uStack76 = 0x43c1cf;\n    fcn.0041d9a0();\n    return;\n}\n",
        "token_count": 733
    },
    "0043c218": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c218(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00437908();\n    if (((in_ECX == 0) || (*(in_ECX + 0x9c) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.00432038();\n        arg_8h_00 = &var_1ch;\n        fcn.00431ff4();\n        fcn.00412928(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[3] = iVar2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                arg_8h[2] = iVar2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.00412950(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.00438dd8(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 973
    },
    "0043c458": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c458(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x43c6c5;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.00405b90();\n        uStackY52 = 0x43c498;\n        fcn.00405b90(&fcn.0043c458::var_4h);\n        fcn.00404358();\n        fcn.0040b6a8();\n        fcn.00403acc();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.00405b90();\n        uStackY52 = 0x43c4d9;\n        fcn.00405b90(&fcn.0043c458::var_ch);\n        fcn.00404358();\n        fcn.0040b6a8();\n        fcn.00403acc();\n    }\n    iVar3 = fcn.0043abb8();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.0043b11c();\n                uVar4 = fcn.0043b0e0();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00403358();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.0043cc40();\n            }\n            else {\n                iVar1 = *(*(param_2 + 0x14) + 0x18);\n                *(*(iVar3 + 8) + 0x18) = iVar1;\n                if (iVar1 == 0) {\n                    *(*(*(param_2 + 0x14) + 0x14) + 8) = *(iVar3 + 8);\n                }\n                else {\n                    *(iVar1 + 0xc) = *(iVar3 + 8);\n                }\n                iVar3 = *(iVar3 + 8);\n                *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                do {\n                    iVar3 = *(iVar3 + 0xc);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                } while (*(iVar3 + 0xc) != 0);\n                *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                if (*(iVar3 + 0xc) != 0) {\n                    *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                }\n                uStackY52 = 0x43cc68;\n                fcn.0043b494();\n                fcn.00403358();\n                fcn.00403358();\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.0043ac64();\n                fcn.0043b108();\n                fcn.0043af68();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00403358();\n            }\n            uStackY52 = 0x43cc68;\n            fcn.0043b494();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.0043af68();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.0043b0e0();\n            fcn.0043b11c();\n            fcn.0043af68();\n        }\n        uStackY52 = 0x43cc68;\n        fcn.0043b494();\n    }\n    fcn.00403358();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x43c6cc;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 1396
    },
    "0043c7ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c7ec(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x43c7fe;\n    fcn.00404540();\n    uStack24 = 0x43c857;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00404350();\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < iVar1) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43c85e;\n    uStack24 = 0x43c856;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 243
    },
    "0043c920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c920(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x43ca59;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x43c955;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x43c961;\n    piVar1 = fcn.00403328();\n    uStack56 = 0x43ca08;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.00437874();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00437888();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.0043c7ec(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x43ca0f;\n    uStack56 = 0x43ca07;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 530
    },
    "0043cc40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cc40(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.00437874();\n        if (0 < iVar1) {\n            fcn.0043b494(0x43cc68);\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0043cd64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cd64(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.0043b0e0();\n        iVar2 = fcn.0043b0e0();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            fcn.0043b0e0();\n            uVar3 = fcn.0042244c();\n            *(arg_8h + -8) = uVar3;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0043cd64(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0043cd64(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "0043cf40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cf40(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.0043abcc();\n        if (iVar2 == 1) {\n            fcn.0043cf40(arg_8h);\n        }\n    }\n    iVar2 = fcn.0043abcc();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.0043b1c4();\n        if (iVar3 == 0) {\n            iVar3 = fcn.0043b1b8();\n            if (iVar3 != 0) {\n                fcn.0043b1b8();\n                iVar3 = fcn.0043b0e0();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.0043ac1c();\n                    fcn.0043b108();\n                    fcn.0043b1b8();\n                    fcn.0043b158();\n                }\n            }\n        }\n        else {\n            fcn.0043b1c4();\n            iVar3 = fcn.0043b0e0();\n            iVar4 = fcn.0043ac1c();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.0043b0e0();\n                fcn.0043b108();\n                fcn.0043b0e0();\n                fcn.0043b108();\n                fcn.0043b1c4();\n                fcn.0043b158();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.0043adc8();\n    }\n    fcn.0043b494(0x43cc68, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 585
    },
    "0043d190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d190(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff94;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x43d568;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    iVar2 = *param_2;\n    var_4h = in_EAX;\n    if (iVar2 < 0x203) {\n        if (iVar2 == 0x202) {\n            if (in_EAX[0x18] == 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.004069ac();\n                iVar2 = fcn.0043bc20();\n                if ((iVar2 != 0) && (var_10h == 0x14)) {\n                    cVar1 = fcn.004034e4();\n                    if (cVar1 == '\\0') {\n                        fcn.00432510();\n                    }\n                    else {\n                        fcn.0044e648();\n                    }\n                }\n            }\n            else {\n                puStack92 = &stack0xfffffffc;\n                fcn.0043cbc4();\n            }\n        }\n        else if (iVar2 == 0x20) {\n            puStack92 = &stack0xfffffffc;\n            sub.user32.dll_GetCursorPos(&fcn.0043d190::var_ch);\n            in_stack_ffffff94 = 0x43d3e6;\n            fcn.00432134();\n            if (*(param_2 + 2) == 1) {\n                in_stack_ffffff94 = 0x43d408;\n                iVar2 = fcn.00438dd8();\n                if (iVar2 == param_2[1]) {\n                    in_stack_ffffff94 = 0x43d41c;\n                    iVar2 = fcn.00437908();\n                    if (0 < iVar2) {\n                        in_stack_ffffff94 = 0x43d432;\n                        iVar2 = fcn.0043bc20();\n                        if ((iVar2 != 0) && (var_10h == 0x12)) {\n                            in_stack_ffffff94 = fcn.0044fd48();\n                            sub.user32.dll_SetCursor();\n                            param_2[3] = 1;\n                            goto code_r0x0043d552;\n                        }\n                    }\n                }\n            }\n        }\n        else if (iVar2 == 0x200) {\n            puStack92 = &stack0xfffffffc;\n            if (in_EAX[0x18] != 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.0043cc78();\n                fcn.004069ac();\n                var_4h[0x14] = var_44h;\n                var_4h[0x15] = var_40h;\n                in_stack_ffffff94 = 0x43d24e;\n                fcn.0043d100(&stack0xfffffffc);\n                fcn.0043cc78();\n            }\n        }\n        else {\n            puStack92 = &stack0xfffffffc;\n            if (iVar2 == 0x201) {\n                puStack92 = &stack0xfffffffc;\n                fcn.004069ac();\n                iVar2 = fcn.0043bc20();\n                if (iVar2 != 0) {\n                    if (var_10h == 0x12) {\n                        fcn.0043cb64();\n                    }\n                    else if (var_10h == 2) {\n                        in_stack_ffffff94 = 0x203;\n                        uVar3 = fcn.00438dd8(0x203, 0x203, 0);\n                        iVar4 = sub.user32.dll_PeekMessageA(&fcn.0043d190::var_3ch, uVar3);\n                        if ((iVar4 == 0) && (cVar1 = fcn.004034e4(),  cVar1 != '\\0')) {\n                            (**(**(iVar2 + 4) + 0xc4))();\n                        }\n                        if ((*(*(iVar2 + 4) + 0x9b) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                            fcn.00432c98();\n                        }\n                        goto code_r0x0043d552;\n                    }\n                }\n            }\n        }\n    }\n    else if (iVar2 == 0x203) {\n        fcn.004069ac();\n        iVar2 = fcn.0043bc20();\n        if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_10h == 2)) {\n            fcn.00430e50();\n            in_stack_ffffff94 = 0x43d2a6;\n            fcn.004332f0(1);\n        }\n    }\n    else {\n        if (iVar2 == 0xb030) {\n            puStack92 = &stack0xfffffffc;\n            (*in_EAX[0xc])();\n            if (param_2[3] == 0) {\n                iVar2 = (**(*var_4h + 4))();\n                if (var_10h == 0x12) {\n                    fcn.00404090();\n                }\n                else if ((iVar2 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n                    fcn.00431f90();\n                    (***var_4h)();\n                    var_20h = *(iVar2 + 0x40) * 2 - var_20h;\n                    var_1ch = *(iVar2 + 0x44) * 2 - var_1ch;\n                    var_18h = *(iVar2 + 0x48) * -2 + var_18h * 3 + var_20h * -2;\n                    var_14h = *(iVar2 + 0x4c) * -2 + var_14h * 3 + var_1ch * -2;\n                    fcn.004325f0();\n                    fcn.004040e4();\n                    iVar2 = param_2[2];\n                    *(iVar2 + 0x18) = var_20h;\n                    *(iVar2 + 0x1c) = var_1ch;\n                    *(iVar2 + 0x20) = var_18h;\n                    *(iVar2 + 0x24) = var_14h;\n                }\n            }\n            goto code_r0x0043d552;\n        }\n        puStack92 = &stack0xfffffffc;\n        if ((iVar2 == 0xb042) && (puStack92 = &stack0xfffffffc,  *param_2[2] == 0xb00b)) {\n            puStack92 = &stack0xfffffffc;\n            fcn.0043d078();\n        }\n    }\n    if (*(var_4h + 0x32) != 0) {\n        (*var_4h[0xc])();\n    }\ncode_r0x0043d552:\n    *in_FS_OFFSET = in_stack_ffffff94;\n    uStack100 = 0x43d56f;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 1754
    },
    "0043d69c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d69c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.00406aa0(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 108
    },
    "0043d6ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d6ec(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.0043d650();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.0043d66c();\n            return;\n        }\n        fcn.0043d69c();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0043d750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d750(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x462998 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x43d76e;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x43d8b6;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x463b64 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x43d8c4);\n            *0x463b64 = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x43d8cc);\n        }\n        if (*0x461bf8 == 0) {\n            *0x461bf8 = sub.kernel32.dll_LoadLibraryA(0x43d8dc);\n            if (*0x461bf8 != 0) {\n                *0x463b68 = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d8e8);\n                *0x463b6c = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d8f8);\n                *0x463b70 = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d90c);\n                *0x463b74 = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d924);\n                *0x463b78 = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d93c);\n                *0x463b7c = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d950);\n                *0x463b80 = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d968);\n                *0x463b84 = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d980);\n                *0x463b88 = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d99c);\n                *0x463b8c = sub.kernel32.dll_GetProcAddress_1(*0x461bf8, 0x43d9a8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x43d8bd);\n        return;\n    }\n    return;\n}\n",
        "token_count": 659
    },
    "0043d9b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043d9b8(void)\n\n{\n    uint uVar1;\n    \n    if (*0x463b64 != NULL) {\n        uVar1 = (**0x463b64)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "0043d9d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d9d4(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x462998 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x43da03;\n            fcn.0043d9b8();\n        }\n        else {\n            uStack24 = 0x43da11;\n            fcn.0043d9b8();\n            if (*0x461bf8 != 0) {\n                puStack28 = 0x43da25;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x463b68)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x43da3c;\n                    uStack36 = uVar1;\n                    (**0x463b70)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x463b78)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x463b78)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x463b78)();\n                        (**0x463b70)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x461bf8);\n                    }\n                    (**0x463b74)(uVar1, uStack44, uStack40);\n                    (**0x463b6c)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 458
    },
    "0043dab0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043dab0(void)\n\n{\n    uint uVar1;\n    \n    if (*0x461bf8 != 0) {\n        uVar1 = (**0x463b88)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "0043dac4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043dac4(void)\n\n{\n    ushort extraout_var;\n    ushort extraout_var_00;\n    \n    fcn.00403358();\n    **0x4627c4 = 0;\n    fcn.00403358();\n    **0x46296c = 0;\n    fcn.00403358();\n    *0x463b10 = 0;\n    fcn.00403358();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var, *0x463b1e));\n    fcn.00404090();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var_00, *0x463b1c));\n    fcn.00404090();\n    if (*0x461bf8 != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x461bf8);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0043e53c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043e53c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.004196fc();\n    uVar1 = fcn.00403328();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00403328();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x43e6c0;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 270
    },
    "0043e7b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0043e7b8(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    fcn.00448f44();\n    iVar3 = fcn.0044172c();\n    if ((iVar3 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n        iVar7 = 0;\n        do {\n            piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n            cVar2 = fcn.004034e4();\n            if (cVar2 != '\\0') {\n                if (iVar3 == *(piVar1 + 0x21)) {\ncode_r0x0043e82f:\n                    uVar5 = (**(*piVar1 + 0x50))();\n                    goto code_r0x0043e83e;\n                }\n                if (piVar1[0x24] != 0) {\n                    fcn.0043efc0();\n                    iVar4 = fcn.0043f020();\n                    if (iVar4 != -1) goto code_r0x0043e82f;\n                }\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    uVar5 = 0;\ncode_r0x0043e83e:\n    return CONCAT44(in_EAX, uVar5);\n}\n",
        "token_count": 377
    },
    "0043eb2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043eb2c(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x43ec24;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.00403508();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.0043e684(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.0043e670();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004034e4(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.0043eb2c();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 536
    },
    "0043efc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043efc0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00403328();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 88
    },
    "0043f3c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043f3c4(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 52
    },
    "0043f3cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f3cc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.0043f59c();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0043f564": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f564(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.0043f3c4();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.0043f500();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.00403554();\n    return;\n}\n",
        "token_count": 130
    },
    "0043f824": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f824(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.0043f3c4();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.00420018();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.00421490();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.004205e0();\n            fcn.0041cf1c();\n            fcn.00412928(&var_28h, *(in_EAX + 0x30));\n            fcn.004205e0(&var_28h);\n            fcn.0041d580();\n            fcn.004205e0(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.0041d920();\n            uVar2 = fcn.0043f500(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.00412928(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.004205e0();\n            var_8h = fcn.0041d920();\n            fcn.0041cf1c();\n            uVar2 = fcn.0041d920();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.0041cf1c();\n            uVar2 = fcn.0041d920();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.0043f214(arg_ch);\n            fcn.0043f7fc(uVar2);\n            uVar2 = fcn.0043f214();\n            uVar2 = fcn.0041d920(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.0043f500(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 789
    },
    "0044001c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044001c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.0043f708();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004034e4();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0043ff2c(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 137
    },
    "004400d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004400d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x4400ed;\n    var_4h = in_EAX;\n    fcn.00415bc8();\n    puStack84 = 0x4400fc;\n    fcn.00415bc8();\n    puStack84 = 0x440108;\n    var_8h = fcn.00420018();\n    uStack88 = 0x440354;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.0041599c();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x44013b;\n    fcn.004159bc(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x440147;\n    var_10h = fcn.00420018();\n    uStack108 = 0x440337;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.00420018();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.00420018();\n    fcn.00421490();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00412928(&fcn.004400d0::var_30h, *(var_4h + 0x30));\n    fcn.004406fc();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.00412950(&fcn.004400d0::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.004400d0::var_40h;\n                    uVar2 = fcn.004205e0();\n                    fcn.004205e0(uVar2);\n                    fcn.0041d44c(puVar3);\n                    fcn.00412950(&fcn.004400d0::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.004400d0::var_40h;\n                    uVar2 = fcn.004205e0();\n                    fcn.004205e0(uVar2);\n                    fcn.0041d44c(puVar3);\n                    fcn.0043f63c();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00403358();\n    fcn.00403358();\n    fcn.00440700();\n    return;\n}\n",
        "token_count": 1029
    },
    "004405b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004405b8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x463b98 == 0) {\n        *0x463b98 = fcn.0040bef8();\n        if (0x5ffff < *0x463b98) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x463b9c = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x440617;\n    iVar1 = fcn.0041a1f4(0);\n    uStack44 = 0x4406b2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x463b9c == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.0043f500(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040b764();\n            fcn.00403acc();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.0043f500(1, iVar1);\n        iVar1 = (**0x463b9c)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040b764();\n            fcn.00403acc();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x4406b9;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 476
    },
    "00440700": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00440700(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.00403554();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004417b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00441933)\n// WARNING: Removing unreachable block (ram,0x00441940)\n// WARNING: Removing unreachable block (ram,0x0044194d)\n// WARNING: Removing unreachable block (ram,0x00441953)\n// WARNING: Removing unreachable block (ram,0x00441960)\n// WARNING: Removing unreachable block (ram,0x00441966)\n// WARNING: Removing unreachable block (ram,0x00441973)\n\nvoid fcn.004417b8(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.004417b8::var_2h + 2;\n    uStack32 = 0x4419a1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (in_AL < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.004417b8::var_2h + 2;\n            fcn.00404128();\n            goto code_r0x0044192d;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.004417b8::var_2h + 2;\n            fcn.00404128();\n            goto code_r0x0044192d;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.004417b8::var_2h + 2;\n            fcn.00404128();\n            goto code_r0x0044192d;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.004417b8::var_2h + 2;\n            fcn.00404128();\n            goto code_r0x0044192d;\n        }\n    }\n    else if (in_AL < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.004417b8::var_2h + 2;\n            fcn.00404128();\n            goto code_r0x0044192d;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.004417b8::var_2h + 2;\n            fcn.00404278();\n            goto code_r0x0044192d;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.00404278();\n            goto code_r0x0044192d;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.004417b8::var_2h + 2;\n            fcn.00404278();\n            goto code_r0x0044192d;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.004417b8::var_2h + 2;\n            fcn.00407ec4();\n            fcn.0040439c();\n            goto code_r0x0044192d;\n        }\n    }\n    puStack28 = &fcn.004417b8::var_2h + 2;\n    fcn.00441764();\ncode_r0x0044192d:\n    fcn.00404090();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4419a8;\n    uStack32 = 0x4419a0;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 898
    },
    "00441a18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441a18(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x441a31;\n    fcn.00404540();\n    uStack32 = 0x441af3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.004419bc();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.004419bc();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.004419bc(),  cVar1 != '\\0')) || (cVar1 = fcn.004419bc(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar3 = 8;\n        do {\n            fcn.004417b8();\n            iVar2 = fcn.00407d54();\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != 0x256);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x441afa;\n    uStack32 = 0x441af2;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 363
    },
    "00441b30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00441b30(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    code *in_ECX;\n    int32_t in_EDX;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = in_EAX;\n    if (in_EDX != 0) {\n        var_9h = 0;\n        while (var_9h == 0) {\n            piVar2 = fcn.004440d0();\n            if (piVar2 <= *in_EAX) break;\n            uVar1 = fcn.004440e0();\n            piVar2 = uVar1 & 0xffffff00;\n            if (*(arg_8h + -1) <= *(uVar1 + 0x3f) && *(uVar1 + 0x3f) != *(arg_8h + -1)) break;\n            piVar2 = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n            var_9h = piVar2;\n        }\n    }\n    return piVar2 & 0xffffff00 | var_9h;\n}\n",
        "token_count": 288
    },
    "00441b90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00441b90(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.004440d0();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.004440d0();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.004440e0();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.004440e0();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.00441b30(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.00441b30(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.004440e0(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.004440e0(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "00442024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00442024(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.004196fc();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.00441b10();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00403328();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x444a34;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 331
    },
    "00442154": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00442154(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff84;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint lpmi;\n    uint var_35h;\n    uint32_t var_31h;\n    uint32_t var_2dh;\n    uint32_t var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_15h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack84 = &var_1h + 1;\n    var_8h = 0;\n    uStack88 = 0x4423af;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack92;\n    puVar1 = &var_1h + 1;\n    var_1h._0_1_ = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x00442391;\n    fcn.00404128();\n    iVar4 = fcn.004440d0();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004034e4();\n                if (cVar3 != '\\0') goto code_r0x004421f0;\n            }\n            fcn.004417b8(0x4423c8, var_8h);\n            fcn.00404410(0);\n        }\n    }\n    else {\n        var_25h = fcn.00442664();\n    }\ncode_r0x004421f0:\n    uVar2 = sub.kernel32.dll_GetVersion_1();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.0040449c();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x461c9c) |\n                *(*(in_EAX + 0x48) * 4 + 0x461c90) | *(*(in_EAX + 0x38) * 4 + 0x461c80) |\n                *(*(in_EAX + 0x39) * 4 + 0x461c88);\n        iVar4 = fcn.004440d0();\n        if (iVar4 < 1) {\n            uVar5 = fcn.00404550();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        else {\n            uVar5 = fcn.00404550();\n            uVar5 = fcn.00442664(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        goto code_r0x00442391;\n    }\n    lpmi = 0x2c;\n    var_35h = 0x3f;\n    iVar4 = fcn.0044468c();\n    if (iVar4 == 0) {\ncode_r0x00442230:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x00442246;\n        }\n        var_9h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.00443ca8();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x00442230;\n        }\ncode_r0x00442246:\n        var_9h = 1;\n    }\n    fcn.0040449c();\n    var_31h = *((uVar2 & 0x7f) * 4 + 0x461cd0) | *(*(in_EAX + 0x3d) * 4 + 0x461cc8) | *(*(in_EAX + 0x48) * 4 + 0x461ca4)\n              | *(var_1h * 4 + 0x461cd8) | *(var_9h * 4 + 0x461ce0);\n    var_2dh = *(*(in_EAX + 0x38) * 4 + 0x461cb0) | *(*(in_EAX + 0x39) * 4 + 0x461cc0) |\n              *(*(in_EAX + 0x3a) * 4 + 0x461cb8);\n    var_29h = *(in_EAX + 0x50);\n    var_25h = 0;\n    var_21h = 0;\n    var_1dh = 0;\n    var_15h = fcn.00404550();\n    iVar4 = fcn.004440d0();\n    if (0 < iVar4) {\n        var_25h = fcn.00442664();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff84 = param_2;\n    puVar1 = puStack84;\ncode_r0x00442391:\n    puStack84 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff84;\n    fcn.00404090(0x4423b6);\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 1484
    },
    "00442534": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442534(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.00442534();\n        return;\n    }\n    uVar2 = fcn.00442664();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.00442664(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.00442664(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004034e4(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.00442664();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x004425f4;\n        }\n    }\n    fcn.004423f4();\ncode_r0x004425f4:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 468
    },
    "00442664": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00442664(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004034e4();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.0044170c();\n        }\n        fcn.004423f4();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 188
    },
    "004426f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442740)\n// WARNING: Removing unreachable block (ram,0x0044274a)\n\nvoid __cdecl fcn.004426f4(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    char *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = NULL;\n    uStack52 = 0x4428d8;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.0044468c();\n    if ((iVar2 != 0) && (cVar1 = fcn.00445cc8(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.00404128();\n    uVar5 = (arg_8h & 0x400) == 0;\n    if ((!uVar5) &&\n       ((uVar5 = var_ch == NULL,  uVar5 || ((uVar5 = *var_ch == '&',  uVar5 && (uVar5 = var_ch[1] == '\\0',  uVar5))))))\n    {\n        fcn.00404358();\n    }\n    fcn.0040449c();\n    if (uVar5) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.0041d920(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x004428c2;\n    }\n    fcn.0041d038();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.0041ca10();\n        fcn.0041ca1c();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.0041c750();\n            uVar3 = fcn.00404350(lprc, arg_8h);\n            uVar3 = fcn.00404550(uVar3);\n            uVar3 = fcn.0041d920(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        else {\n            iVar2 = fcn.0041c290();\n            iVar4 = fcn.0041c290();\n            if (iVar2 == iVar4) {\n                fcn.0041c750();\n                goto code_r0x0044289d;\n            }\n        }\n        fcn.0041c750();\n    }\ncode_r0x0044289d:\n    uVar3 = fcn.00404350(lprc, arg_8h);\n    uVar3 = fcn.00404550(uVar3);\n    uStackY120 = fcn.0041d920(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x004428c2:\n    *in_FS_OFFSET = uStackY120;\n    fcn.00404090(0x4428df);\n    return;\n}\n",
        "token_count": 896
    },
    "00442904": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442904(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar auStack256 [212];\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack36;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        puStack36 = &fcn.00442904::var_10h;\n        uStack40 = &stack0xffffff00 | arg_8h & 0xff;\n        uStack44 = 0x44293a;\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00443ca8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00443ca8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.0044468c();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "00443d24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443d24(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    uint8_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack60 = 0x443f06;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.00403554();\n    cVar2 = fcn.004034e4();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.00443cd8(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.0044468c();\n    var_ch = fcn.00443ca8();\n    fcn.0040449c();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_ch == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if ((*(in_EAX + 0x4c) == 0) || (cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))(),  cVar2 != '\\0')) {\n            *var_4h = -7;\n            bVar1 = false;\n        }\n        else {\n            *var_4h = 0x10;\n            if (!bVar5) {\n                *arg_8h = 0x10;\n            }\n            bVar1 = true;\n        }\n    }\n    else {\n        *var_4h = *(var_ch + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_ch + 0x30);\n        }\n        bVar1 = true;\n    }\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00402d74();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004034e4();\n        uVar4 = *0x60;\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.00404128();\n    }\n    else {\n        fcn.004417b8();\n        fcn.0040439c();\n    }\n    arg_8h_00 = *(uVar4 * 2 + 0x461cf8) | 0x560;\n    fcn.004426f4(arg_8h_00, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00404090(0x443f0d);\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 936
    },
    "00443f60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443f60(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.004440d0(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.004440e0();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.00443fa8();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00443fa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443fa8(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.00442664(*(in_EAX + 0x50), *(param_2 * 4 + 0x461c80));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00443f60();\n        }\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00443ffc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443ffc(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x46298c != 2) || (iVar1 = fcn.004440d0(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.00442664(*(in_EAX + 0x14), *(param_2 * 4 + 0x461c88));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 274
    },
    "00444074": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444074(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.00444434();\n            fcn.00442604();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00443f60();\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "004440e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004440e0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.0044170c();\n    }\n    fcn.00413d5c();\n    return;\n}\n",
        "token_count": 64
    },
    "0044425c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044425c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.0044170c();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00403328();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.00413d5c();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.00413d5c();\n            fcn.00444074();\n        }\n    }\n    fcn.00442604();\n    fcn.00413dd8();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.004444d4;\n    if (in_EAX[0xd] != 0) {\n        fcn.00442534();\n    }\n    fcn.004440d0();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 349
    },
    "00444310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444310(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.004440d0();\n        if (param_2 < iVar1) goto code_r0x00444336;\n    }\n    fcn.0044170c();\ncode_r0x00444336:\n    iVar1 = fcn.00413d5c();\n    fcn.00413c4c();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.00442534();\n    }\n    fcn.004440d0();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 230
    },
    "004444d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004444d4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.00442534();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004034e4();\n        if (cVar1 != '\\0') {\n            fcn.004461ac();\n        }\n    }\n    else {\n        fcn.004444d4(0);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00444b30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444b30(uint param_1, uint param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffbc;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_10h = 0;\n    var_ch = 0;\n    uStack40 = 0x444c52;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    bVar1 = false;\n    var_4h = param_2;\n    iVar2 = fcn.00404350();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x46297c + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                bVar1 = true;\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (bVar1) {\n        iVar2 = fcn.00404350(&var_ch);\n        uVar5 = iVar2 == 2;\n        fcn.004045b0();\n        fcn.0040449c();\n        if (uVar5) {\n            fcn.00404350(&var_10h);\n            fcn.004045b0();\n            in_stack_ffffffbc = var_4h;\n            fcn.00404410(0x444c68, 0x444c8c, var_4h, 0x444c80, 0x444c74, var_10h);\n        }\n        else {\n            in_stack_ffffffbc = 0x444c8c;\n            fcn.00404410(0x444c8c, var_4h, 0x444c80, 0x444c74, *in_EAX);\n        }\n    }\n    else if (var_8h != 0) {\n        fcn.00404638();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.004040b4(0x444c59);\n    return;\n}\n",
        "token_count": 587
    },
    "00444c90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444c90(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uchar uVar8;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_20h;\n    uchar var_1ah;\n    char var_19h;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_2ch = 0;\n    var_30h = 0;\n    var_34h = 0;\n    var_4h = 0;\n    var_18h = 0;\n    uStack96 = 0x44512f;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    var_1ah = 0;\n    puVar1 = &stack0xfffffffc;\n    var_19h = param_2;\n    if (param_2 != '\\0') {\ncode_r0x00444cec:\n        puStack92 = puVar1;\n        puStack104 = 0x444cfa;\n        fcn.00404128();\n        var_ch = NULL;\n        var_14h = NULL;\n        var_20h = NULL;\n        var_8h = NULL;\n        var_10h = 0;\n        uStack108 = 0x4450f0;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        var_ch = fcn.00403328();\n        var_14h = fcn.00403328();\n        var_20h = fcn.00403328();\n        var_8h = fcn.00403328();\n        iVar3 = fcn.004440d0();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                iVar3 = fcn.004440e0();\n                uVar8 = *(iVar3 + 0x3e) == '\\0';\n                if (!uVar8) {\n                    fcn.004440e0();\n                    fcn.0040449c();\n                    if ((!uVar8) && (iVar3 = fcn.004440e0(),  *(iVar3 + 0x30) != 0)) {\n                        fcn.004440e0();\n                        fcn.00446b88();\n                        fcn.00407ba8();\n                        if (var_2ch == 0) {\n                            uVar4 = fcn.004440e0();\n                            fcn.004440e0(uVar4);\n                            (**(*var_20h + 100))();\n                        }\n                        else {\n                            iVar3 = fcn.0040c3c4();\n                            if ((iVar3 != 0) && (cVar2 = fcn.00444a7c(&stack0xfffffffc),  cVar2 == '\\0')) {\n                                iVar3 = fcn.004440e0();\n                                fcn.004440e0(iVar3 + 0x30);\n                                fcn.00446af4();\n                                fcn.004040e4();\n                                uVar4 = fcn.004440e0();\n                                fcn.004440e0(uVar4);\n                                (**(*var_20h + 100))();\n                            }\n                        }\n                    }\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        fcn.00404128();\n        iVar3 = (**(*var_20h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                fcn.00404128();\n                (**(*var_14h + 8))();\n                (**(*var_ch + 0x44))();\n                iVar3 = (**(*var_14h + 0x14))();\n                iVar3 = iVar3 + -1;\n                if (-1 < iVar3) {\n                    do {\n                        (**(*var_14h + 0xc))();\n                        for (iVar7 = 1; iVar6 = fcn.00404350(),  iVar7 <= iVar6; iVar7 = iVar7 + 1) {\n                            uVar5 = *(var_30h + -1 + iVar7);\n                            if ((*(*0x46297c + (uVar5 >> 3)) >> (uVar5 & 7) & 1) == 0) {\n                                fcn.004045b0(&fcn.00444c90::var_44h);\n                                fcn.00407ba8();\n                                cVar2 = fcn.00444a7c(&stack0xfffffffc);\n                                if (cVar2 != '\\0') {\n                                    if (*(*0x462998 + 0xc) == '\\0') {\n                                        fcn.00404638();\n                                    }\n                                    else {\n                                        fcn.00444b30();\n                                    }\n                                    (**(*var_14h + 0x18))();\n                                    (**(*var_ch + 0x3c))();\n                                    (**(*var_14h + 0x48))();\n                                    break;\n                                }\n                            }\n                            else {\n                                iVar7 = iVar7 + 1;\n                            }\n                        }\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n                iVar3 = (**(*var_ch + 0x14))();\n                if (var_10h < iVar3) {\n                    fcn.00444aac(&stack0xfffffffc);\n                }\n                iVar3 = (**(*var_14h + 0x14))();\n                if (iVar3 < 1) break;\n                iVar3 = (**(*var_14h + 0x14))();\n                if (-1 < iVar3 + -1) {\n                    do {\n                        (**(*var_14h + 0x18))();\n                        var_28h = (**(*var_20h + 0x5c))();\n                        (**(*var_20h + 0x14))();\n                        (**(*var_20h + 0x70))();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        if (var_10h == 0) {\n            fcn.00444aac(&stack0xfffffffc);\n        }\n        iVar3 = (**(*var_8h + 0x14))();\n        var_1ah = 0 < iVar3;\n        iVar3 = (**(*var_8h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                (**(*var_8h + 0xc))();\n                if ((((*(*0x462998 + 0xc) != '\\0') && (iVar3 = fcn.0040c3c4(),  iVar3 == 0)) && (var_18h != 0)) &&\n                   (iVar3 = fcn.0040c3c4(),  iVar3 == 0)) {\n                    fcn.00404350(&fcn.00444c90::var_48h);\n                    fcn.004045b0();\n                    fcn.00444b30();\n                    fcn.00404350();\n                    fcn.004045f0();\n                }\n                (**(*var_8h + 0x18))();\n                fcn.004040e4();\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        *in_FS_OFFSET = uStack112;\n        puStack104 = 0x4450f7;\n        uStack108 = 0x4450d7;\n        fcn.00403358();\n        uStack108 = 0x4450df;\n        fcn.00403358();\n        uStack108 = 0x4450e7;\n        fcn.00403358();\n        uStack108 = 0x4450ef;\n        fcn.00403358();\n        return;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        puStack104 = 0x444ce4;\n        cVar2 = fcn.004452e4();\n        puVar1 = puStack92;\n        if (cVar2 != '\\0') goto code_r0x00444cec;\n    }\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x445136;\n    uStack96 = 0x445111;\n    fcn.004040b4();\n    uStack96 = 0x44511e;\n    fcn.004040b4();\n    uStack96 = 0x445126;\n    fcn.00404090();\n    uStack96 = 0x44512e;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 2236
    },
    "0044518c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044518c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (in_EAX = fcn.00445310(),  in_EAX != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.004440d0();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.004440e0();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.004440e0();\n                    cVar1 = fcn.00445168();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.004440e0();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.004440d0();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.004440e0();\n                cVar1 = fcn.00445168();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.004440e0();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.004440e0();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        in_EAX = fcn.004440d0();\n        iVar4 = iStack20 - (in_EAX - 1);\n        if (iVar4 == 0 || iStack20 < in_EAX - 1) {\n            iVar4 = iVar4 + -1;\n            do {\n                in_EAX = fcn.004440e0();\n                if (*(in_EAX + 0x3e) != '\\0') {\n                    fcn.004440e0();\n                    in_EAX = fcn.00445168();\n                    if (in_EAX == '\\0') break;\n                    in_EAX = fcn.004440e0();\n                    *(in_EAX + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 != 0);\n        }\n    }\n    return CONCAT44(iStack20, in_EAX & 0xffffff00 | uStack24);\n}\n",
        "token_count": 853
    },
    "004452e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.004452e4(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.004452e4();\n        uVar1 = *((uVar1 & 0x7f) + 0x461c30);\n    }\n    return *((uVar1 & 0x7f) + 0x461c34);\n}\n",
        "token_count": 138
    },
    "00445310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00445310(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00445310();\n        uVar1 = *((uVar1 & 0x7f) + 0x461c30);\n    }\n    return *((uVar1 & 0x7f) + 0x461c34);\n}\n",
        "token_count": 136
    },
    "0044533c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044533c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.00442024();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00403328();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x445c54;\n    *(in_EAX + 0x41) = 1;\n    fcn.004196fc();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.00446068();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 356
    },
    "0044548c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0044548c(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if ((((*(arg_8h - 1) == '\\0') && (*(arg_8h - 8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h - 1) == '\\x01' && (*(arg_8h - 8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h - 1) == '\\x02' && (*(arg_8h - 8) == *(in_EAX + 0x60))))) {\n        *(arg_8h - 0xc) = in_EAX;\n        _auStack8 = 0x1000000;\n        uVar1 = arg_8h;\n    }\n    else {\n        uVar1 = fcn.004440d0();\n        uVar2 = uVar1;\n        if (-1 < uVar1 - 1) {\n            do {\n                uVar1 = arg_8h;\n                fcn.004440e0();\n                uVar1 = fcn.0044548c(uVar1);\n                if (uVar1 != '\\0') {\n                    _auStack8 = 0x1000000;\n                    break;\n                }\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n    }\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 398
    },
    "00445554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00445554(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004034e4(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.00446878();\n    }\n    else {\n        for (iVar2 = fcn.00445524(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 238
    },
    "004456a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004456a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "004456cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004456cc(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    piVar1 = (*in_EAX)[0x19];\n    piVar2 = piVar1;\n    if (piVar1 != NULL) {\n        uStackY32 = 0x4456fa;\n        piVar2 = fcn.004456cc(arg_8h);\n        var_1h._0_1_ = piVar2;\n    }\n    piVar4 = piVar2 & 0xffffff00;\n    if ((var_1h != 0) && (var_1h != 3)) {\n        if (var_1h == 2) {\n            if ((arg_8h[-1] == 0) || (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))) {\n                iVar3 = fcn.00445524();\n                arg_8h[-1] = iVar3;\n                if (arg_8h[-1] == 0) {\n                    var_1h._0_1_ = 3;\n                    piVar4 = arg_8h;\n                    goto code_r0x00445813;\n                }\n            }\n            piVar4 = fcn.004456bc();\n            *in_EAX = piVar4;\n            if ((*in_EAX == NULL) || (piVar4 = (*in_EAX)[0x19],  piVar4 != piVar1)) goto code_r0x00445813;\n            if (in_EDX == 0) {\n                var_1h._0_1_ = 1;\n            }\n        }\n        piVar4 = *in_EAX;\n        if (*(piVar4 + 0x39) == '\\0') {\n            var_1h._0_1_ = 0;\n        }\n        else {\n            uStackY32 = 0x4457f1;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(arg_8h[-3] + 0x1c) & 0x10) == 0) {\n                fcn.004445f8();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((arg_8h[-1] == 0) || ((*in_EAX != arg_8h[-1] && (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))))) {\n                var_1h._0_1_ = 2;\n            }\n            piVar4 = NULL;\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\ncode_r0x00445813:\n    return piVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 738
    },
    "00445820": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00445820(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    if (*(param_2 + 4) == '\\0') {\n        return 0;\n    }\n    uStack32 = 0x10;\n    uStack36 = 0x445849;\n    sub.user32.dll_GetKeyState();\n    uStack36 = 0x11;\n    puStack40 = 0x44585b;\n    sub.user32.dll_GetKeyState();\n    puStack40 = 0x445888;\n    fcn.00422650();\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack44 = 0x44591e;\n    puStack52 = 0x4458a8;\n    puStack40 = &stack0xfffffffc;\n    iVar1 = fcn.00445524();\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x445925;\n        uStack44 = 0x44591d;\n        uVar2 = fcn.00422648();\n        return uVar2;\n    }\n    puStack52 = 0x4458be;\n    fcn.00422650();\n    uStack56 = 0x4458f3;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.004456cc(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x4458fa;\n    uStack56 = 0x4458f2;\n    uVar2 = fcn.00422648();\n    return uVar2;\n}\n",
        "token_count": 482
    },
    "00445944": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445944(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x462998 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x44596b;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.00445cc8();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.00445cc8();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 433
    },
    "00445aa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00445aa0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.00445a00(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.00404550();\n        iVar1 = fcn.00408828();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.00404300();\n    return 1;\n}\n",
        "token_count": 173
    },
    "00445b34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445b34(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x462998 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x445ba4;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.00446044();\n        }\n        else {\n            fcn.00446044();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x445bab;\n        uStack20 = 0x445b9a;\n        fcn.00446044();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00445bb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445bb0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.00445aa0();\n    if ((*(*0x462998 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.00445b34();\n        }\n        else {\n            fcn.00446068();\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00445cc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00445cc8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x462998 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 67
    },
    "00445d3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00445d3c(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack32 = &var_2h + 2;\n    uStack36 = 0x445e11;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.00445524();\n        if ((iVar1 != 0) && (iVar2 = fcn.004440d0(),  in_ECX < iVar2)) {\n            iVar1 = fcn.004440e0();\n        }\n    }\n    else {\n        puStack32 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.00445524();\n        uStack48 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.00404278();\n        fcn.00404278(0);\n        iVar1 = fcn.00407d54();\n        if (iVar1 == 0) {\n            fcn.00446b88();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x445e18;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 413
    },
    "00445e24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445e24(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.00445ce0(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.00445d3c(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 956
    },
    "00445f9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445f9c(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.004456a8();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.00445524();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.00445524();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.00408808();\n            uVar4 = fcn.0040874c();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 276
    },
    "00446068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446068(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.0042f4d0();\n        if (iVar1 != 0) {\n            fcn.00446044();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00446090": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446090(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.00403508();\n        fcn.00446044();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0044611c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044611c(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x38) != 0) {\n        uVar1 = fcn.00445aa0();\n        uVar2 = uVar1;\n        if (in_ECX == 0) {\n            uVar2 = sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (uVar1 != '\\0') {\n            uVar2 = sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.00445c18(uVar2 & 0xffffff00 | arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 220
    },
    "00446234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446234(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x446767;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x4462b2;\n                    fcn.00413d5c();\n                    puStack80 = 0x4462bb;\n                    cVar3 = fcn.004455c4();\n                    if (cVar3 != '\\0') goto code_r0x00446751;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            uVar8 = param_2[2];\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x4464c5;\n                    fcn.00413d5c();\n                    puStack80 = 0x4464d2;\n                    iVar10 = fcn.00445524();\n                    if (iVar10 != 0) {\n                        puStack80 = 0x4464eb;\n                        fcn.0041d06c();\n                        puStack84 = 0x44659a;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(uVar8 + 0x18);\n                        puStack96 = 0x446508;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x44657d;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.0041d9a0();\n                        fcn.0041d840();\n                        uVar8 = uVar8 & 0xffff0000 | *(uVar8 + 0x10);\n                        puStack112 = 0x446555;\n                        fcn.00446a0c(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x446584;\n                        uStack104 = 0x44656c;\n                        fcn.0041d9a0();\n                        puStack112 = 0x44657c;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x4465d0;\n                    fcn.00413d5c();\n                    puStack80 = 0x4465dd;\n                    piVar4 = fcn.00445524();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x4465f6;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x4466dd;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x446613;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.0041d06c();\n                        uStack100 = 0x4466b8;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x44662d;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x44669b;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.0041d9a0();\n                        fcn.0041d840();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x4466a2;\n                        uStack120 = 0x44668d;\n                        fcn.0041d9a0();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x4463c3;\n                    piVar4 = fcn.00413d5c();\n                    puStack80 = 0x4463c8;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x4463da;\n                        iVar5 = fcn.00413d5c();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x4463ec;\n                        fcn.00413d5c();\n                        puStack80 = 0x4463f9;\n                        *NULL = fcn.00445524();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x446410;\n                        fcn.00413d5c();\n                        puStack80 = 0x44641d;\n                        iVar9 = fcn.00445554();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x44642b;\n                            fcn.00413d5c();\n                            puStack80 = 0x446438;\n                            fcn.00445554();\n                        }\n                        if (*(**0x46296c + 0x6c) != 0) {\n                            if ((*(*(**0x46296c + 0x6c) + 0x228) & 8) == 0) {\n                                puStack80 = 0x446491;\n                                fcn.00452280();\n                            }\n                            else {\n                                puStack80 = 0x44647e;\n                                fcn.004522e8();\n                            }\n                        }\n                        goto code_r0x00446751;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x4462e8;\n                fcn.00413d5c();\n                puStack80 = 0x4462f0;\n                cVar3 = fcn.004455e0();\n                if (cVar3 != '\\0') goto code_r0x00446751;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x446335;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x446354;\n                fcn.00413d5c();\n                puStack80 = 0x44635f;\n                iVar10 = fcn.00445524();\n                if (iVar10 != 0) {\n                    puStack80 = 0x446376;\n                    fcn.0042f754();\n                    puStack80 = 0x446385;\n                    fcn.004525dc();\n                    goto code_r0x00446751;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x44639c;\n        fcn.004525dc();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x446706;\n                piVar4 = fcn.00413d5c();\n                puStack80 = 0x446711;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x00446727:\n                    puStack80 = 0x446731;\n                    fcn.00445e24();\n                    goto code_r0x00446751;\n                }\n                puStack80 = 0x446723;\n                iVar10 = fcn.00445524();\n                if (iVar10 != 0) goto code_r0x00446727;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x44674e;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x00446751:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x44676e;\n    uStack72 = 0x446766;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 2905
    },
    "00446778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446778(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.0041a848(fcn.004461e8, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00413c00();\n    return;\n}\n",
        "token_count": 96
    },
    "004467a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004467a0(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00413ea0();\n    if (*(in_EAX + 8) == 0) {\n        fcn.0041a8fc();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00446888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446888(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x462998 + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.004416d4();\n        if (iVar1 == 0) {\n            fcn.00446044();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.00446044();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "004468d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004468d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x462998 + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.004416d4();\n            if (iVar1 == 0) {\n                uVar2 = fcn.00450e2c();\n            }\n            else {\n                uVar2 = fcn.00403554();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 172
    },
    "00446af4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446af4(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.004040e4();\n    iVar3 = 1;\n    do {\n        iVar2 = fcn.00404350();\n        if (iVar2 < iVar3) {\n            return;\n        }\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x46297c + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (uVar1 == 0x26) {\n                if ((*(*0x462998 + 0xc) != '\\0') && (1 < iVar3)) {\n                    iVar2 = fcn.00404350();\n                    if ((1 < iVar2 - iVar3) && ((*(*param_2 + -2 + iVar3) == '(' && (*(*param_2 + 1 + iVar3) == ')'))))\n                    {\n                        fcn.004045f0();\n                        goto code_r0x00446b79;\n                    }\n                }\n                fcn.004045f0();\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\ncode_r0x00446b79:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 317
    },
    "00448d64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448d64(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x461d20) && (arg_8h != *(*0x463bb0 + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x461d24 == 0) {\n                        *0x461d24 = arg_8h;\n                    }\n                }\n                else if (*0x461d28 == 0) {\n                    *0x461d28 = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 233
    },
    "00448dc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00448dc8(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x461d24 = 0;\n    *0x461d28 = 0;\n    *0x461d20 = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.00448d64, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x461d24 != 0) {\n        return *0x461d24;\n    }\n    return *0x461d28;\n}\n",
        "token_count": 133
    },
    "004491c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004491c4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.0044937c();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00432c64();\n            if (cVar1 == '\\0') {\n                fcn.004498cc();\n            }\n            else {\n                fcn.004498cc();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004491fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004491fc(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x449264 == (*0x449260 & *(in_EAX + 0x61)))) {\n                uVar2 = fcn.00422454();\n                *(arg_8h + -4) = uVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00449268": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449268(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x4492cc == (*0x4492c8 & *(in_EAX + 0x61)))) {\n                uVar1 = fcn.00422454();\n                *(arg_8h + -4) = uVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "004492d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004492d0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x84) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 200))();\n        if (cVar1 == '\\0') {\n            fcn.00449a04();\n        }\n        else {\n            iVar2 = fcn.00435b08();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00435acc();\n                        fcn.004491fc(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00435acc();\n                        fcn.00449268(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.00449a04();\n        }\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0044937c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044937c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.00438dd8(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "004493e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004493e8(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.004493b4(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x462610)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.004493b4(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x462610)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 223
    },
    "0044955c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044955c(uint param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n        uVar3 = *(param_2 + 4);\n    // switch table (8 cases) at 0x44972d\n        switch(*(param_2 + 4)) {\n        case 0:\n            uVar3 = fcn.004498cc();\n            break;\n        case 1:\n            uVar3 = fcn.004498cc();\n            break;\n        case 2:\n            fcn.00449464();\n            uVar3 = fcn.004498cc();\n            break;\n        case 3:\n            fcn.00449464();\n            uVar3 = fcn.004498cc();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                uVar3 = fcn.004498cc();\n            }\n            else {\n                fcn.004494fc(&stack0xfffffffc);\n                uVar3 = fcn.004498cc();\n            }\n            break;\n        case 5:\n            uVar3 = in_EAX;\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    uVar3 = fcn.004498cc();\n                }\n                else {\n                    fcn.004494fc(&stack0xfffffffc);\n                    uVar3 = fcn.004498cc();\n                }\n            }\n            break;\n        case 6:\n            uVar3 = fcn.004498cc();\n            break;\n        case 7:\n            uVar3 = fcn.004498cc();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar5 = *(in_EAX + 0x40);\n            uVar3 = *(in_EAX + 8) / iVar5;\n            var_10h = *(in_EAX + 8) % iVar5;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar5 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar5;\n            uVar3 = *(in_EAX + 10) / iVar5;\n        }\n        else {\n            iVar5 = 0;\n            uVar3 = 0;\n            var_10h = 0;\n        }\n        iVar2 = 0;\n        for (; 0 < iVar5; iVar5 = iVar5 + -1) {\n            iVar4 = fcn.00406954();\n            if (iVar4 - iVar2 < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_1(*(in_EAX + 0x20) - (iVar4 - iVar2));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.004498cc();\n            }\n            else if (iVar1 == 1) {\n                fcn.004498cc();\n            }\n            else if (iVar1 == 2) {\n                fcn.004498cc();\n            }\n            else if (iVar1 == 3) {\n                fcn.004498cc();\n            }\n            uVar3 = (**(**(in_EAX + 4) + 0x88))();\n            iVar2 = iVar4;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                uVar3 = fcn.004498cc();\n            }\n            else if (iVar1 == 1) {\n                uVar3 = fcn.004498cc();\n            }\n            else if (iVar1 == 2) {\n                uVar3 = fcn.004498cc();\n            }\n            else {\n                uVar3 = param_2 & 0xffff0000 | iVar1 - 3U;\n                if (iVar1 - 3U == 0) {\n                    uVar3 = fcn.004498cc();\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1024
    },
    "004498cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004498cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.00438990();\n            }\n            else {\n                fcn.00438990();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.0044903c(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x250) != 0)) {\n                (**(**(iVar1 + 0x250) + 0xc))();\n            }\n        }\n        uVar2 = fcn.00438dd8(bVar3);\n        iVar1 = (***0x46269c)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.00438dd8(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x462958)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "00449a48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449a48(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x461d68);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d40);\n    uVar1 = fcn.00438dd8();\n    fcn.00424074(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d44);\n        uVar1 = fcn.00438dd8();\n        fcn.00424074(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d48);\n        uVar1 = fcn.00438dd8();\n        fcn.00424074(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d4c);\n        uVar1 = fcn.00438dd8();\n        fcn.00424074(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.0041c290();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d50);\n    uVar1 = fcn.00438dd8();\n    fcn.00424074(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 596
    },
    "00449b50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00449b50(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.00449464();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.00449464();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.00449a48(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.00438dd8(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x4627ac)(uVar3);\n    fcn.004498cc();\n    iVar2 = fcn.00449464();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 594
    },
    "00449d2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00449d2c(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.00435d90();\n    if (*(*0x462998 + 0xd) == '\\0') {\n        cVar1 = fcn.0040bed8();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.00438dd8();\n            fcn.004240a8(arg_8h);\n        }\n    }\n    fcn.00449f44();\n    return;\n}\n",
        "token_count": 122
    },
    "00449dac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00449dac(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00403328();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.00431ff4();\n    iVar5 = *(in_EAX + 0x208);\n    cVar2 = fcn.0044937c();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.004498cc();\n    }\n    iVar5 = fcn.00435b08();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.00435acc();\n            fcn.00435acc();\n            fcn.00413c00();\n            fcn.00431d60();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00413d5c();\n            fcn.004337a4(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.004491c4();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 431
    },
    "00449ec4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00449ec4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x214) < 1) {\n        fcn.004492d0();\n        fcn.004492d0();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00449f44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00449f44(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x218) == '\\0') {\n        puStack12 = 0x449f63;\n        var_4h = in_EAX;\n        cVar1 = fcn.004390dc();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x44a02f;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x218) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.004494e4();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.004494e4();\n                if (cVar1 == '\\0') {\n                    fcn.00449b50();\n                    fcn.00449b50();\n                }\n                else {\n                    fcn.00449b50();\n                    fcn.00449b50();\n                }\n            }\n            else {\n                fcn.00449b50();\n                fcn.00449b50();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x218) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "0044a65c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044a65c(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00449c68();\n    *(in_EAX + 0x50) = *0x44a7d0;\n    fcn.00431d60();\n    fcn.00431d84();\n    fcn.00431dac();\n    fcn.00431dd0();\n    piVar2 = fcn.004219e8();\n    *(in_EAX + 0x240) = piVar2;\n    (***0x462610)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x462610)();\n    (**(**(in_EAX + 0x240) + 0x34))();\n    iVar1 = *(in_EAX + 0x240);\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = fcn.0044af78;\n    uVar3 = fcn.0041d06c();\n    *(in_EAX + 0x238) = uVar3;\n    fcn.004311cc();\n    *(in_EAX + 0x228) = *0x44a7d4;\n    *(in_EAX + 0x229) = 2;\n    *(in_EAX + 0x22b) = 0;\n    *(in_EAX + 0x231) = 3;\n    *(in_EAX + 0x244) = 0;\n    *(in_EAX + 0x25c) = *(*0x463bb4 + 0x40);\n    *(in_EAX + 0x235) = 1;\n    uVar3 = fcn.004032a0();\n    *(in_EAX + 0xb8) = uVar3;\n    *(in_EAX + 0x2e1) = 0xff;\n    *(in_EAX + 0x2ec) = 0;\n    fcn.0044b2dc();\n    fcn.004327b4();\n    fcn.0043271c();\n    fcn.00438f18();\n    fcn.0044f940();\n    *(in_EAX + 0x2e4) = 10;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 646
    },
    "0044a840": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044a840(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x44a84b;\n    *NULL = fcn.004036cc();\n    var_5h._0_1_ = extraout_DL;\n    if ((*(*NULL + 7) & 8) == 0) {\n        puStack16 = 0x44a866;\n        (**(***0x462960 + 0x14))();\n    }\n    uStack20 = 0x44a90a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x8d) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xd8))();\n    }\n    fcn.0044d164();\n    cVar1 = fcn.004390dc();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xac))();\n    }\n    fcn.0044f978();\n    fcn.00403358();\n    fcn.00403358();\n    fcn.0040d134();\n    fcn.00449ce0();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x44a911;\n    uStack20 = 0x44a909;\n    (**(***0x462960 + 0x18))();\n    return;\n}\n",
        "token_count": 396
    },
    "0044a924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044a924(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2d2) != 0) {\n        uStack28 = 0x44a965;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x2d0))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x2f4) & 2) != 0) {\n        puStack24 = 0x44a99a;\n        fcn.0044b2dc();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0044a9a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044a9a0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2da) != 0) {\n        uStack28 = 0x44a9e1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 0x2d8))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0044ab48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ab48(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x44ab5b;\n    fcn.00435670();\n    uStack24 = 0x44ad9e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x268) = 0;\n    *(in_EAX + 0x26c) = 0;\n    *(in_EAX + 0x270) = 0;\n    bVar1 = false;\n    *(in_EAX + 0x234) = *0x463661 ^ 1;\n    puStack20 = &stack0xfffffffc;\n    fcn.00434dcc();\n    if ((*(in_EAX + 0x25c) != 0) && (0 < *(in_EAX + 0x270))) {\n        if (((*(in_EAX + 0x98) & 0x10) != 0) && (*(in_EAX + 0x25c) != *(*0x463bb4 + 0x40))) {\n            uVar2 = fcn.0041c930(*(*0x463bb4 + 0x40), *(in_EAX + 0x25c));\n            sub.kernel32.dll_MulDiv(uVar2);\n            fcn.0041c938();\n        }\n        *(in_EAX + 0x25c) = *(*0x463bb4 + 0x40);\n        iVar3 = fcn.0044aed0();\n        if (iVar3 != *(in_EAX + 0x270)) {\n            bVar1 = true;\n            fcn.0044a1a8();\n            fcn.0043889c();\n            if ((*(in_EAX + 0x98) & 4) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x268), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x268) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 8) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x26c) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 0x20) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x1fa), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x1fa) = uVar2;\n                uVar2 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x1fe) = uVar2;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x268)) {\n        fcn.0043200c();\n    }\n    if (0 < *(in_EAX + 0x26c)) {\n        fcn.00432050();\n    }\n    *(in_EAX + 0x98) = *0x44adac;\n    if (!bVar1) {\n        fcn.0044a1a8();\n        fcn.0043889c();\n    }\n    uVar2 = 0;\n    fcn.004337a4(0);\n    *in_FS_OFFSET = uVar2;\n    fcn.00435678(0x44ada5);\n    return;\n}\n",
        "token_count": 837
    },
    "0044af78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044af78(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x4626a8 == '\\0') {\n        uVar2 = fcn.00438dd8();\n        iVar3 = sub.user32.dll_IsIconic(uVar2);\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    else {\n        cVar1 = fcn.004390dc();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x229) != '\\x03')) {\n            uVar2 = fcn.0044d2d8();\n            uVar2 = fcn.00438dd8(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0044afe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044afe4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x210) == '\\0') && (*(*(in_EAX + 0x208) + 0x10) == 0)) && (*(*(in_EAX + 0x20c) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 97
    },
    "0044b320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044b320(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x44b379;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if ((*(in_EAX + 0x22f) == '\\x01') && (*(in_EAX + 0x57) != '\\0')) {\n        fcn.00405b90();\n        fcn.0040b6a8();\n        fcn.00403acc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x44b380;\n    uStack16 = 0x44b378;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 219
    },
    "0044b3c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b3c0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00419b6c(arg_8h);\n    if (*(in_EAX + 0x250) != 0) {\n        (**(**(in_EAX + 0x250) + 0x2c))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0044b400": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b400(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t *piStack64;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = *param_2;\n    if (iVar5 < 0x47) {\n        if (iVar5 == 0x46) {\n            if (*0x44b834 == (*(in_EAX + 0x1c) & *0x44b830)) {\n                if ((*(in_EAX + 0x230) - 1U < 2) && (*(in_EAX + 0x22b) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x230) == '\\x01') || (*(in_EAX + 0x230) == '\\x03')) &&\n                   ((*(in_EAX + 0x229) == '\\x02' || (*(in_EAX + 0x229) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x0044b81c;\n        }\n        if (iVar5 - 6U < 3) {\n            if (*0x461d18 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n                iVar5 = 0;\n                if (*(in_EAX + 0x22f) == '\\x02') {\n                    iVar1 = fcn.0044bd2c();\n                    if (iVar1 != 0) {\n                        fcn.0044bd2c();\n                        iVar5 = fcn.00438dd8();\n                    }\n                }\n                else if ((*(in_EAX + 0x220) != 0) && (*(in_EAX + 0x220) != in_EAX)) {\n                    iVar5 = fcn.00438dd8();\n                }\n                if (iVar5 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x0044b81c;\n        }\n        if (iVar5 == 0x2b) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (iVar5 = fcn.00445524(),  iVar5 != 0)) {\n                fcn.0041d06c();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.0041d9a0();\n                fcn.0041d840();\n                piVar2 = piVar2 & 0xffff0000 | *(piVar2 + 4);\n                puStack72 = 0x44b634;\n                fcn.00446a0c(piVar2);\n                *in_FS_OFFSET = piVar2;\n                piStack64 = 0x44b64b;\n                fcn.0041d9a0();\n                puStack72 = 0x44b65b;\n                piStack64 = iVar5;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x0044b81c;\n        }\n        if (iVar5 == 0x2c) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (piVar3 = fcn.00445524(),  piVar3 != NULL)) {\n                fcn.00438dd8();\n                uVar4 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.0041d06c();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x44b6fe;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x44b763;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.0041d9a0();\n                fcn.0041d840();\n                piVar2 = piVar2 + 4;\n                (**(*piVar3 + 0x38))();\n                *in_FS_OFFSET = piVar2;\n                uStack76 = 0x44b76a;\n                piStack80 = 0x44b755;\n                fcn.0041d9a0();\n                piStack80 = iVar5;\n                sub.gdi32.dll_RestoreDC(uVar4);\n                return;\n            }\n            goto code_r0x0044b81c;\n        }\n    }\n    else {\n        if (iVar5 == 0xb01a) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.00403554();\n            }\n            goto code_r0x0044b81c;\n        }\n        if (iVar5 == 0xb01b) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.00403554();\n            }\n            goto code_r0x0044b81c;\n        }\n    }\n    if (iVar5 == *0x463bbc) {\n        fcn.004337a4(0);\n        fcn.004337a4(0);\n        fcn.004337a4(0);\n        fcn.004337a4(0);\n        fcn.004337a4(0);\n        piStack64 = 0x44b81c;\n        fcn.004337a4(0);\n    }\ncode_r0x0044b81c:\n    piStack64 = 0x44b826;\n    fcn.004367ec();\n    return;\n}\n",
        "token_count": 1494
    },
    "0044b8c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b8c4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.0041cf50();\n            puStack128 = 0x44b932;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.0044b8c4::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x44b942;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x22f) == '\\x02') && (var_4h[0x95] != 0)) {\n                puStack136 = &fcn.0044b8c4::var_5ch;\n                iStack140 = var_4h[0x95];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.0041cf50();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.0044b8c4::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x44b9a1;\n            fcn.0044b838(&stack0xfffffffc);\n            if (*(var_4h + 0x22f) == '\\x02') {\n                iVar2 = fcn.0044bd60();\n                if (iVar2 != 0) {\n                    puStack128 = 0x44b9c4;\n                    fcn.0044b884(&stack0xfffffffc);\n                }\n                fcn.00448ba4();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x44b8fb;\n            fcn.0044b838(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x44ba9f;\n            fcn.0044b838(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0x95];\n        puStack132 = 0x44ba04;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x44ba92;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0x95];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.0044b8c4::var_5ch);\n        fcn.00432134();\n        fcn.00430f2c();\n    }\n    fcn.00436a8c();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x44baa0;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0x95], &fcn.0044b8c4::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 970
    },
    "0044bba8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044bba8(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*(in_EAX + 0x91) == '\\0') {\n        *(in_EAX + 0x91) = 1;\n        uStack16 = 0x44bc25;\n        uStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack20;\n        var_4h = in_EAX;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack12 = &stack0xfffffffc;\n                (**(*in_EAX + 0x70))();\n            }\n            else {\n                (**(*in_EAX + 0x70))();\n            }\n            (**(*var_4h + 0x6c))();\n        }\n        *in_FS_OFFSET = uStack20;\n        *(var_4h + 0x91) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0044bd2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044bd2c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x229, 0, 0);\n        uVar1 = fcn.0042f4d0();\n    }\n    return uVar1;\n}\n",
        "token_count": 124
    },
    "0044bd60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044bd60(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.0044f8d0(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0044f8bc();\n            if (*(iVar2 + 0x22f) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 185
    },
    "0044bdac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044bdac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.0044f8d0(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0044f8bc();\n            if ((*(iVar2 + 0x22f) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "0044bf58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044bf58(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x22f)) {\n        if ((param_2 == '\\x01') && (*(in_EAX + 0x230) == '\\0')) {\n            fcn.0044c2bc();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.00436330();\n        }\n        cVar1 = *(in_EAX + 0x22f);\n        *(in_EAX + 0x22f) = param_2;\n        if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1a5) == '\\0')) {\n            fcn.0044c338();\n            fcn.00432790();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.004364cc();\n        }\n        if (param_2 == '\\x01') {\n            fcn.0044b2dc();\n        }\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "0044bfd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044bfd8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x248) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x248) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 600) != 0) {\n            uVar4 = fcn.00442664();\n        }\n        uVar1 = fcn.00438dd8();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.00438dd8();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "0044c0a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044c0a0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.0044f8d0(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.0044f8bc();\n            if ((param_2 == *(iVar2 + 0x248)) && (iVar2 = fcn.0044f8bc(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.00405b90();\n                fcn.0040b6e4(arg_8h, arg_ch);\n                fcn.00403acc();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x248) != 0) {\n        fcn.00445bb0();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x248) = param_2;\n    if ((param_2 == 0) || ((fcn.004197cc(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x229) == '\\x03')))) {\n        cVar1 = fcn.004390dc();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.00438dd8(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x248) + 0x5c) == '\\0') && (*(in_EAX + 0x22f) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.004390dc();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x248) + 0x34))();\n            arg_8h = fcn.00438dd8();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x248) + 0x34))();\n                arg_8h = fcn.00438dd8();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.00438dd8();\n            fcn.00445bb0();\n        }\n    }\n    else if ((*(in_EAX + 0x22f) != '\\x01') && (cVar1 = fcn.004390dc(),  cVar1 != '\\0')) {\n        uVar4 = fcn.00438dd8(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x22e) != '\\0') {\n        fcn.0044d164();\n    }\n    fcn.0044bfd8();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 923
    },
    "0044c2d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044c2d8(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x25c) != 0;\n}\n",
        "token_count": 52
    },
    "0044c3d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c3d4(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x22b)) && (*(in_EAX + 0x22b) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1a6) != '\\0')) {\n        uVar1 = fcn.00438dd8(*(param_2 * 4 + 0x461d74));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0044c414": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044c414(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x231) != '\\0') && (*(*0x463bb0 + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x231) == '\\x02') {\n            iVar10 = fcn.0044be2c();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x231) == '\\x03') && (*(*0x463bb4 + 0x68) != 0)) {\n            iVar10 = fcn.0044be2c();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x231) == '\\x01') {\n            iVar10 = fcn.0044f88c();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.0044be2c();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.0044f8a0();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.0044f88c();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.0044f8a0(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.0044f88c(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x8c) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0044f88c(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0044f590();\n                                fcn.0044f88c(iVar4);\n                                iVar5 = fcn.0044f574();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0044f88c(iVar4 + iVar3);\n                                fcn.0044f55c();\n                                fcn.0044f88c();\n                                fcn.0044f5a8();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else if (*(in_EAX + 0x8c) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0044f88c(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0044f590();\n                                fcn.0044f88c(iVar4);\n                                iVar5 = fcn.0044f574();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0044f88c(iVar4 + iVar3);\n                                fcn.0044f55c();\n                                fcn.0044f88c();\n                                fcn.0044f5a8();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else {\n                                fcn.0044f88c(iVar10, iVar1, iVar11);\n                                iVar4 = fcn.0044f55c();\n                                iVar3 = in_EAX[0x10];\n                                fcn.0044f88c();\n                                iVar5 = fcn.0044f55c();\n                                fcn.0044f88c();\n                                iVar7 = fcn.0044f55c();\n                                fcn.0044f88c();\n                                iVar8 = fcn.0044f5a8();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar4 + iVar3) - iVar5)) {\n                                    fcn.0044f88c();\n                                    fcn.0044f55c();\n                                    fcn.0044f88c();\n                                    fcn.0044f5a8();\n                                }\n                                fcn.0044f88c();\n                                iVar3 = fcn.0044f590();\n                                iVar3 = iVar3 + in_EAX[0x11];\n                                fcn.0044f88c();\n                                iVar4 = fcn.0044f590();\n                                fcn.0044f88c();\n                                iVar5 = fcn.0044f590();\n                                fcn.0044f88c();\n                                iVar7 = fcn.0044f574();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.0044f88c();\n                                    uVar9 = fcn.0044f590();\n                                    fcn.0044f88c(uVar9);\n                                    fcn.0044f574();\n                                }\n                                (**(*in_EAX + 0x84))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1335
    },
    "0044cac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cac8(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x44cbf1;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x22f) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x463bb0 + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x463bb0 + 0x44) + 0x254) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.00405b90();\n            fcn.0040b6a8();\n            fcn.00403acc();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x463664;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x463bb0 + 0x44) + 0x254);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x180) = uVar1;\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.00435f60();\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) & 0xef;\n    }\n    fcn.0044efe4();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.00404090(0x44cbf8);\n    return;\n}\n",
        "token_count": 767
    },
    "0044cdcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044cdcc(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x461d1c = *0x461d1c + 1;\n    if (*(in_EAX + 0x250) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x220) = 0;\n        }\n        else {\n            *(in_EAX + 0x220) = param_2;\n        }\n    }\n    *(*0x463bb4 + 100) = param_2;\n    *(*0x463bb4 + 0x68) = in_EAX;\n    fcn.00413ea0();\n    fcn.00413dd8();\n    cVar2 = fcn.004034e4();\n    if (cVar2 == '\\0') {\n        *(*0x463bb4 + 0x6c) = 0;\n    }\n    else {\n        *(*0x463bb4 + 0x6c) = in_EAX;\n        fcn.00413ea0();\n        fcn.00413dd8();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x44d058;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX != *(*0x463bb4 + 0x78)) {\n        if (*(*0x463bb4 + 0x78) != 0) {\n            fcn.00438dd8();\n            *(*0x463bb4 + 0x78) = 0;\n            cVar2 = fcn.00448e04();\n            if (cVar2 == '\\0') {\n                fcn.00403b78();\n                return 0;\n            }\n        }\n        *(*0x463bb4 + 0x78) = in_EAX;\n        fcn.00438dd8();\n        cVar2 = fcn.00448e04();\n        if (cVar2 == '\\0') {\n            fcn.00403b78();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x224) == 0) {\n        *(in_EAX + 0x224) = in_EAX;\n    }\n    if (*(in_EAX + 0x224) != param_2) {\n        while ((*(in_EAX + 0x224) != 0 && (cVar2 = fcn.004358b4(),  cVar2 == '\\0'))) {\n            fcn.00438dd8();\n            *(in_EAX + 0x224) = *(*(in_EAX + 0x224) + 0x30);\n            cVar2 = fcn.00448e04();\n            if (cVar2 == '\\0') {\n                fcn.00403b78();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x224) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x224));\n            *(in_EAX + 0x224) = iVar3;\n            fcn.00438dd8();\n            cVar2 = fcn.00448e04();\n            if (cVar2 == '\\0') {\n                fcn.00403b78();\n                return 0;\n            }\n        }\n        for (piVar1 = *(param_2 + 0x30); piVar1 != NULL; piVar1 = piVar1[0xc]) {\n            cVar2 = fcn.004034e4();\n            if (cVar2 != '\\0') {\n                (**(*piVar1 + 0xcc))();\n            }\n        }\n        fcn.004337a4(param_2);\n        if ((*(in_EAX + 0x27c) != 0) && (*(in_EAX + 0x27c) != param_2)) {\n            iVar4 = 0;\n            fcn.004337a4(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x44d058 & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1063
    },
    "0044d060": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d060(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.00438dd8();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.00438dd8();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.004337a4(0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0044d0b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d0b0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x22e) = param_2;\n    if (*(in_EAX + 0x27c) != 0) {\n        fcn.004337a4(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x220) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.00439200(0, 1);\n            fcn.0044cca8();\n        }\n        fcn.0044d164();\n        fcn.0044d060();\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0044d114": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d114(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x22e) != '\\0') && (*(in_EAX + 0x220) != 0)) {\n        fcn.004337a4(param_2);\n    }\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        iVar1 = fcn.0044bd2c();\n        if (iVar1 != 0) {\n            fcn.0044bd2c();\n            fcn.0044d114();\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0044d164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d164(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x2f4) & 8) == 0) && (*(*0x463bb0 + 0x44) != 0)) && (*(*(*0x463bb0 + 0x44) + 0x248) != 0)) &&\n       ((in_EAX != *(*0x463bb0 + 0x44) && ((*(in_EAX + 0x22f) == '\\x01' || (*(*(*0x463bb0 + 0x44) + 0x22f) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.00446190();\n        }\n        else {\n            fcn.00446174();\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0044d2f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d2f4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x44d30d;\n    fcn.0041d5f4();\n    uStack24 = 0x44d3a2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x44d32b;\n    puStack20 = &stack0xfffffffc;\n    fcn.0041d9a0();\n    uStack36 = 0x44d37f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 0x250) == 0) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00403554();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        (**(**(in_EAX + 0x250) + 0x28))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x44d386;\n    uStack36 = 0x44d37e;\n    fcn.0041d9a0();\n    return;\n}\n",
        "token_count": 331
    },
    "0044d6ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d6ac(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x9b) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        uVar1 = fcn.00438dd8();\n        iVar2 = sub.user32.dll_IsIconic(uVar1);\n        if (iVar2 == 0) {\n            uVar1 = fcn.00438dd8(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar1);\n            uVar1 = fcn.00438dd8(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar1);\n            if (*(in_EAX + 0x22e) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.00432c98();\n            return;\n        }\n    }\n    fcn.00433cc0();\n    return;\n}\n",
        "token_count": 291
    },
    "0044d820": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d820(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44d8bb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x248) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.00445524();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.004525dc();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.0042f754();\n            fcn.004525dc();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x44d8c2;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 442
    },
    "0044dbb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044dbb0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x150) == '\\x01') && (*(in_EAX + 0x158) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x150) == '\\0') && (*(in_EAX + 0x154) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "0044dc1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044dc1c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack56 = 0x44dd6d;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack52 = &stack0xfffffffc;\n            for (iVar2 = fcn.0042f4d0(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.0044dbb0();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x0044dd57;\n            fcn.0044dbe8(&fcn.0044dc1c::var_10h);\n            fcn.00412900();\n            fcn.00432108();\n            fcn.004069c0();\n        }\n        else {\n            var_9h._0_1_ = '\\x01';\n            *NULL = fcn.0044db70(&stack0xfffffffc);\n            if (*NULL == 0) {\n                *NULL = fcn.0044db70(&stack0xfffffffc);\n            }\n            fcn.00412900();\n            fcn.00432108();\n            fcn.004069c0();\n        }\n        if (((*(in_EAX + 0x228) & 8) == 0) || (var_9h != '\\x01')) {\n            if (var_9h == '\\x01') {\n                fcn.00452280();\n            }\n            else if (var_9h == '\\0') {\n                fcn.00452218();\n            }\n        }\n        else {\n            fcn.004522e8();\n            fcn.004522e8();\n        }\n    }\ncode_r0x0044dd57:\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x44dd74;\n    uStack56 = 0x44dd6c;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 634
    },
    "0044de1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044de1c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x2e2) != '\\0') && ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) {\n        fcn.0044be2c();\n        fcn.0044f5f4();\n        fcn.0044be2c();\n        fcn.0044f5f4();\n        fcn.0044ddf0(arg_8h);\n        fcn.0044be2c();\n        fcn.0044f5f4();\n        fcn.0044ddf0(arg_8h_00);\n        fcn.0044ddf0(&stack0xfffffffc);\n        fcn.0044ddf0(&stack0xfffffffc);\n    }\n    fcn.00437374();\n    return;\n}\n",
        "token_count": 314
    },
    "0044dfb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044dfb8(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x44e522;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xbd) & 4) != 0)) {\n        puStack40 = 0x44dff9;\n        fcn.00405b90();\n        puStack40 = 0x44e008;\n        fcn.0040b6a8();\n        puStack40 = 0x44e00d;\n        fcn.00403acc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x44e017;\n    fcn.004526cc();\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) | 4;\n    uStack44 = 0x44e505;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1a6) == '\\0') {\n            iStack56 = 0x44e40c;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.00403554();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x463bb4 + 0x6c) == in_EAX) {\n                puStack52 = 0x44e43a;\n                fcn.0044d164();\n            }\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                puStack52 = 0x44e44e;\n                fcn.00436330();\n            }\n            else if ((*(in_EAX + 0xbd) & 8) == 0) {\n                iVar6 = 0;\n                puStack52 = 0x44e488;\n                iVar4 = fcn.00438dd8();\n                puStack52 = 0x44e48f;\n                iVar5 = sub.user32.dll_GetActiveWindow();\n                if (iVar4 == iVar5) {\n                    puStack52 = 0x44e49b;\n                    puStack52 = fcn.00438dd8();\n                    iStack56 = 0x44e4a1;\n                    iVar4 = sub.user32.dll_IsIconic();\n                    if (iVar4 == 0) {\n                        iStack56 = 0x44e4ad;\n                        fcn.00438dd8();\n                        iStack56 = 0x44e4b2;\n                        iVar6 = fcn.00448dc8();\n                    }\n                }\n                if (iVar6 == 0) {\n                    iStack56 = 0;\n                    uStack60 = 0x44e4e7;\n                    uStack60 = fcn.00438dd8();\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    iStack56 = 0x97;\n                    uStack60 = 0;\n                    uVar3 = fcn.00438dd8(0, 0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar3);\n                    sub.user32.dll_SetActiveWindow(iVar6);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar3 = fcn.00438dd8(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar3);\n            }\n        }\n        else {\n            iStack56 = 0x44e070;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.00403554();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x8c) == '\\x04') || ((*(in_EAX + 0x8c) == '\\x06' && (*(in_EAX + 0x22f) == '\\x01')))) {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x44e0cc;\n                    fcn.00431ff4();\n                    puStack52 = 0x44e0e8;\n                    fcn.00432038();\n                }\n                else {\n                    puStack52 = 0x44e101;\n                    fcn.0044f850();\n                    puStack52 = 0x44e11a;\n                    fcn.0044f844();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x44e150;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x44e165;\n                    fcn.0044c414();\n                }\n            }\n            else if (*(in_EAX + 0x8c) - 6U < 2) {\n                iVar4 = *(*0x463bb0 + 0x44);\n                if (*(in_EAX + 0x8c) == '\\a') {\n                    puStack52 = 0x44e1a6;\n                    cVar2 = fcn.004034e4();\n                    if (cVar2 != '\\0') {\n                        iVar4 = in_EAX[1];\n                    }\n                }\n                if (iVar4 == 0) {\n                    puStack52 = 0x44e1e6;\n                    fcn.0044f850();\n                    puStack52 = 0x44e1ff;\n                    fcn.0044f844();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x44e235;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x44e24a;\n                    fcn.0044c414();\n                }\n            }\n            else if (*(in_EAX + 0x8c) == '\\x05') {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x44e270;\n                    fcn.00431ff4();\n                    puStack52 = 0x44e28c;\n                    fcn.00432038();\n                }\n                else {\n                    puStack52 = 0x44e2a5;\n                    fcn.0044f880();\n                    puStack52 = 0x44e2be;\n                    fcn.0044f874();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x44e2f4;\n                (**(*in_EAX + 0x84))();\n            }\n            *(in_EAX + 0x8c) = 0;\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if (*(in_EAX + 0x22b) == '\\x02') {\n                    iStack56 = 0;\n                    uStack60 = 0x44e324;\n                    uStack60 = fcn.00438dd8();\n                    sub.user32.dll_SendMessageA(*(*(*0x463bb0 + 0x44) + 0x254), 0x223);\n                    uVar3 = fcn.00438dd8(3);\n                    sub.user32.dll_ShowWindow(uVar3);\n                }\n                else {\n                    iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x461d8c);\n                    uStack60 = 0x44e36a;\n                    uStack60 = fcn.00438dd8();\n                    sub.user32.dll_ShowWindow();\n                    uVar3 = fcn.00438dd8(5, 0, in_EAX[0x12] | in_EAX[0x13] << 0x10);\n                    sub.user32.dll_CallWindowProcA(0x4064c8, uVar3);\n                    fcn.00432850();\n                }\n                uStack60 = *(*(*0x463bb0 + 0x44) + 0x254);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x461d8c);\n                uStack60 = 0x44e3dd;\n                uStack60 = fcn.00438dd8();\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) & 0xfb;\n    return;\n}\n",
        "token_count": 2236
    },
    "0044e5b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e5b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x44e5dc;\n            fcn.0041c57c();\n            uStack20 = 0x44e60e;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x44e615;\n            uStack20 = 0x44e60d;\n            fcn.00403358();\n            return;\n        }\n        puStack16 = 0x44e5ce;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0044e648": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e648(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xbd) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xe4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if ((*(in_EAX + 0x8a) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.00403554();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x463bb0 + 0x44)) {\n                    fcn.00451dcc();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.0044e7e8();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0044c3d4();\n                }\n                else {\n                    fcn.0044e884();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0x93] = 2;\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "0044e808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e808(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x44e876;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x22e) != '\\0') goto code_r0x0044e860;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x0044e838:\n        puStack16 = puVar1;\n        fcn.00405b90();\n        fcn.0040b6a8();\n        fcn.00403acc();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x0044e838;\n    }\n    fcn.0044d060();\ncode_r0x0044e860:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x44e87d;\n    uStack20 = 0x44e875;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 333
    },
    "0044e8a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e8a0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x44eb68;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x44e8c3;\n    fcn.00430e50();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x44e8d4;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xbd) & 8) == 0)) && (*(in_EAX + 0x22f) != '\\x01')) goto code_r0x0044e911;\n    }\n    puStack60 = 0x44e8fd;\n    fcn.00405b90();\n    puStack60 = 0x44e90c;\n    fcn.0040b6a8();\n    puStack60 = 0x44e911;\n    fcn.00403acc();\ncode_r0x0044e911:\n    puStack60 = 0x44e916;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x44e925;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x44e92b;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x44e930;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x44e93a;\n    fcn.00450d40();\n    uStack64 = 0x44eb4b;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) | 8;\n    puStack72 = 0x44e957;\n    puStack60 = &stack0xfffffffc;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x44e979;\n    fcn.00413dd8();\n    *(*0x463bb4 + 0x78) = in_EAX;\n    puStack72 = 0x44e99d;\n    fcn.0044fd70();\n    puStack72 = 0x44e9af;\n    fcn.00448c78();\n    uStack76 = 0x44eb29;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x44e9c8;\n    puStack72 = &stack0xfffffffc;\n    fcn.0044e7f0();\n    uStack88 = 0x44ea88;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.00438dd8(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0x93] = 0;\n    do {\n        fcn.00451b4c();\n        if (*(*0x463bb0 + 0x9c) == '\\0') {\n            if (in_EAX[0x93] != 0) {\n                fcn.0044e750();\n            }\n        }\n        else {\n            in_EAX[0x93] = 2;\n        }\n    } while (in_EAX[0x93] == 0);\n    uVar3 = fcn.00438dd8(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.00438dd8();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.0044e7e8(0x44ea8f);\n    return;\n}\n",
        "token_count": 1090
    },
    "0044eb78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044eb78(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00435b08(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00435acc();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x78))();\n            }\n            cVar1 = fcn.004034e4();\n            if (cVar1 != '\\0') {\n                fcn.0044eb78(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0044ebe8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ebe8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        (**(*in_EAX + 0x78))();\n        if ((in_EAX[0x92] != 0) && (iVar1 = fcn.004440d0(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.004440e0();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0044eb78(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0044ecc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ecc0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00435b08(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00435acc();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0044ec90(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004034e4(),  cVar1 != '\\0' && (cVar1 = fcn.0044ecc0(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "0044ed3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ed3c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.0044ec90(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0044ec90(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0044ecc0(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0044edc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044edc0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00435b08(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00435acc();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0044ed90(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004034e4(),  cVar1 != '\\0' && (cVar1 = fcn.0044edc0(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0044ee3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ee3c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.0044ed90(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0044ed90(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0044edc0(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0044eee4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044eee4(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    unkbyte3 Var3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x2c2) != 0) {\n        (**(in_EAX + 0x2c0))();\n    }\n    if ((((*(in_EAX + 0x248) == 0) || (*(*(in_EAX + 0x248) + 0x38) == 0)) || (uVar2 = fcn.00403554(),  uVar2 == '\\0'))\n       && (uVar2 = fcn.0044ee90(&stack0xfffffffc),  uVar2 == '\\0')) {\n        uVar1 = 0;\n        Var3 = 0;\n    }\n    else {\n        Var3 = uVar2 >> 8;\n        uVar1 = 1;\n    }\n    return CONCAT31(Var3, uVar1);\n}\n",
        "token_count": 233
    },
    "0044ef60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ef60(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x250) != 0) && (iVar1 = (****(arg_8h + 0x250))(*(arg_8h + 0x250), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.00419e8c(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 147
    },
    "0044efe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044efe4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x461d14 != NULL)) {\n        cVar1 = fcn.004390dc();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00438dd8(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x2e0) == '\\0') && (*(in_EAX + 0x2e8) == '\\0')) {\n                uVar2 = fcn.00438dd8(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.00438dd8(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.00438dd8(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar3 = *(*(in_EAX + 0x2e0) * 4 + 0x461d98) | *(*(in_EAX + 0x2e8) * 4 + 0x461da0);\n                uVar2 = fcn.00438dd8(*(in_EAX + 0x2ec), uVar3 & 0xffffff00 | *(in_EAX + 0x2e1), uVar3);\n                (**0x461d14)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "0044f10c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f10c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x461d14 != 0)) &&\n       ((*(in_EAX + 0x2e0) != '\\0' || (*(in_EAX + 0x2e8) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0044f138": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044f138(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xe0))();\n    fcn.00449ee8();\n    fcn.0044bc5c();\n    fcn.004379b4();\n    fcn.0044bf58();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 192
    },
    "0044f624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044f624(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.004196fc();\n    puVar2 = *0x46255c;\n    (*0x46255c)[1] = in_EAX;\n    *puVar2 = 0x44f9c8;\n    puVar2 = *0x462568;\n    (*0x462568)[1] = in_EAX;\n    *puVar2 = 0x44f9d4;\n    fcn.0044f9e0();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00403328();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00403328();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00403328();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00403328();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00403328();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x462724)(0, 0, fcn.0044bdfc, *(in_EAX + 0x58));\n    uVar3 = fcn.0041c57c();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.0041c57c();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.0041c57c();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.0044fe00();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44fcdc;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44fcdc;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44fcdc;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 780
    },
    "0044f8f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f8f4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "0044f978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f978(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00413ea0();\n    fcn.00413ea0();\n    fcn.004526cc();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x463bb0 + 0x84) != 0)) {\n        fcn.0043a34c();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0044fac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044fac0(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x44fc6b;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00403328();\n        *(var_4h + 0x34) = uVar3;\n        fcn.00404090();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.0044fac0::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.0043dab0();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x44fb78;\n                    uStack656 = fcn.00408da8(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x44fb83;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x44fc27;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x44fcb4, 0, 0, &fcn.0044fac0::var_214h, &fcn.0044fac0::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.00404300();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.00404300();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x44fc2e);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x1d) = 0;\n        fcn.004158ec();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x44fc72;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 841
    },
    "0044fe00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044fe00(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x463bb0 != 0) {\n        var_1h._0_1_ = *(*0x463bb0 + 0x88);\n    }\n    uStack420 = 0x44ff45;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x463bb0 != 0) {\n        fcn.004522f0();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.0041c90c();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.0041c90c();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.0041c9f0();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.0041c90c();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.0041c90c();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.0041c90c();\n    }\n    fcn.0041c750();\n    fcn.0041c750();\n    *in_FS_OFFSET = puStack464;\n    if (*0x463bb0 != 0) {\n        fcn.004522f0(0x44ff4c);\n    }\n    return;\n}\n",
        "token_count": 594
    },
    "0044ff5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ff5c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.0044ff7c();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0044ffe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0044ffe4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x22b) == '\\x02')) {\n        var_8h = in_EAX[0x10];\n        var_ch = in_EAX[0x11];\n        iVar3 = (***0x462610)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x84))(var_10h, iVar3);\n    if (*(in_EAX + 0x22b) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x450120\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 988
    },
    "00450194": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00450194(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x22b) != '\\x01')))) {\n        fcn.00413c00();\n    }\n    iVar2 = fcn.0044f8ec();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044f8d8();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x22b) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.00413d5c();\n                    cVar1 = fcn.0044ff84();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00413dd8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.00413d5c();\n            fcn.0044ffe4(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 585
    },
    "004502e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004502e0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0044f8ec();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0044f8d8();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x22b) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "004503c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004503c0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x4503ee;\n    var_4h = in_EAX;\n    fcn.0044ff54();\n    uStack36 = 0x450439;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.004503c0::var_14h, 0);\n    fcn.00450338();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.0044ff5c(0x450440);\n    return;\n}\n",
        "token_count": 310
    },
    "00450454": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450454(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.004040e4();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 105
    },
    "0045048c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045048c(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x99) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "004504ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004504ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x463bb0 != 0) {\n        uStack24 = 0x4504dd;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.004528f8();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00450500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450500(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x463bc0 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x463bb0 != 0) {\n            if (*(*0x463bb0 + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.00430e68();\n                if (iVar1 == 0) {\n                    fcn.00452974();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0045055c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045055c(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x463bc8, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x463bb0 != 0)) {\n        fcn.00451a14();\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004505a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004505a0(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x463bb0 + 0xa5) == '\\0') {\n        if (*0x463bc8 == 0) {\n            uStack8 = 0x4505bd;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.0045055c;\n            uStack20 = 3;\n            *0x463bc8 = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x463bc4 == 0) {\n            *0x463bc4 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x463bcc == 0) {\n            *0x463bcc = sub.kernel32.dll_CreateThread(0, 1000, fcn.00450500, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00450614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00450614(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x463bc8 != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x463bc8);\n    }\n    *0x463bc8 = 0;\n    if (*0x463bcc != 0) {\n        sub.kernel32.dll_SetEvent(*0x463bc4);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x463bc0) {\n            sub.kernel32.dll_WaitForSingleObject(*0x463bcc, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle(*0x463bcc);\n        *0x463bcc = 0;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00450670": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00450670(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 134
    },
    "00450708": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.00450708(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.004196fc();\n    ppcVar1 = *0x462708;\n    if (*(*0x462708 + 2) == 0) {\n        (*0x462708)[1] = in_EAX;\n        *ppcVar1 = fcn.00451de0;\n    }\n    ppcVar1 = *0x4627ec;\n    if (*(*0x4627ec + 2) == 0) {\n        (*0x4627ec)[1] = in_EAX;\n        *ppcVar1 = fcn.00451fd8;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00403328();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00403328();\n    *(in_EAX + 0xa8) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0x9d] = 0x1;\n    in_EAX[0xb4] = 0x1;\n    uVar2 = fcn.004219e8();\n    *(in_EAX + 0x98) = uVar2;\n    sub.user32.dll_LoadIconA(**0x4625f0, 0x4508e8);\n    fcn.00421db8();\n    iVar3 = *(in_EAX + 0x98);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x452578;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x4625f0, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040c590();\n    if (iVar3 != 0) {\n        fcn.00408788();\n    }\n    puVar4 = fcn.0040c5b8();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    sub.user32.dll_CharLowerA();\n    fcn.00404300();\n    if (**0x462478 == '\\0') {\n        fcn.00450a10();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0x9e] = 0x1;\n    *(in_EAX + 0xa0) = 0;\n    fcn.00452754();\n    fcn.00453118();\n    if (var_1h != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = &lpFilename + 1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 920
    },
    "00450a10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450a10(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x450bb1;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xa4) == '\\0') && (**0x46283c == '\\0')) {\n        uVar2 = fcn.0041a78c(fcn.00450f90, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x461e00 = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x463664, *0x461e20, &fcn.00450a10::lpWndClass);\n        if (iVar3 == 0) {\n            *0x461e0c = *0x463664;\n            iVar1 = sub.user32.dll_RegisterClassA(0x461dfc);\n            if (iVar1 == 0) {\n                fcn.00405b90();\n                fcn.0040b6a8();\n                fcn.00403acc();\n            }\n        }\n        uVar4 = (***0x462610)(0);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x462610)(1, iVar3);\n        uVar2 = *0x463664;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.00404550();\n        uVar2 = fcn.00406a48(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030);\n        *(in_EAX + 0x30) = uVar2;\n        fcn.00404090();\n        *(in_EAX + 0xa4) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x4626a8 != '\\0') {\n            fcn.00451694();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x450b4a;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x450b51;\n            uStack12 = fcn.00451694();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x450b5d;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x450b68;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x450b77;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x450b84;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x4626a8 != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x450bb8;\n    uStack60 = 0x450bb0;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 1009
    },
    "00450c20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00450c20(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    iVar1 = func_0x004066c0(arg_8h, 4);\n    if (iVar1 == *(*0x463bb0 + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x463bb0 + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.00438dd8(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.00413c00();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 237
    },
    "00450c90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450c90(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uStack16;\n    uchar uStack12;\n    \n    if (*(*0x463bb0 + 0x30) != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            uStack16 = *(in_EAX + 0x30);\n            pcVar4 = fcn.00450c20;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.00450c20, &uStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = func_0x004066c0(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.00413d5c(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00450d40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450d40(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xb8) = *(in_EAX + 0xb8) + 1;\n    if ((*(in_EAX + 0xb8) == 1) && (*(in_EAX + 0xe2) != 0)) {\n        (**(in_EAX + 0xe0))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00450d6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450d6c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xb8) = *(in_EAX + 0xb8) + -1;\n    if ((*(in_EAX + 0xb8) == 0) && (*(in_EAX + 0xea) != 0)) {\n        (**(in_EAX + 0xe8))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00450da8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450da8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(*0x463bb0 + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.00413d5c(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00450e14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450e14(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x462998 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 67
    },
    "00450e2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450e2c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x462998 + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "00450e44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450e44(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x463bbc) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040c858();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.0044fe00();\n        }\n        if (*param_2 == *0x463bbc) {\n            fcn.00450448();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "00450e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450e9c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x450ef9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x13a) != 0) {\n        fcn.00404288();\n        (**(in_EAX + 0x138))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x450f00;\n    uStack24 = 0x450ef8;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 210
    },
    "00450f90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450f90(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45164a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    param_2[3] = 0;\n    iVar8 = *(*(in_EAX + 0xa8) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar8 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.00413d5c();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = uStack36;\n                return;\n            }\n            iVar8 = iVar8 + -1;\n            puVar1 = puStack28;\n        } while (iVar8 != 0);\n    }\n    fcn.00450e44();\n    iVar8 = *param_2;\n    if (0x53 < iVar8) {\n        if (iVar8 < 0xb018) {\n            if (iVar8 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar8 = fcn.00438dd8(),  iVar8 != 0)) {\n                    uVar6 = fcn.00438dd8();\n                    iVar8 = sub.user32.dll_IsWindowEnabled(uVar6);\n                    if (iVar8 != 0) {\n                        uVar6 = fcn.00438dd8();\n                        iVar8 = sub.user32.dll_IsWindowVisible(uVar6);\n                        if (iVar8 != 0) {\n                            *0x461d18 = 0;\n                            uVar6 = sub.user32.dll_GetFocus();\n                            uVar7 = fcn.00438dd8();\n                            sub.user32.dll_SetFocus(uVar7);\n                            fcn.004337a4(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar6);\n                            *0x461d18 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x00451640;\n            }\n            if (iVar8 < 0xb001) {\n                if (iVar8 == 0xb000) {\n                    if (*(in_EAX + 0x112) != 0) {\n                        (**(in_EAX + 0x110))();\n                    }\n                    goto code_r0x00451640;\n                }\n                if (iVar8 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.004516b0();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.00451760();\n                    }\n                    else {\n                        fcn.00450f08(&stack0xfffffffc);\n                    }\n                    goto code_r0x00451640;\n                }\n                if (iVar8 - 0x132U < 7) {\n                    iVar8 = sub.user32.dll_SendMessageA(param_2[2], iVar8 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar8;\n                    goto code_r0x00451640;\n                }\n                if (iVar8 - 0x132U == 0x1e8) {\n                    fcn.004276c4();\n                    cVar2 = fcn.004277a4();\n                    if (cVar2 != '\\0') {\n                        fcn.004276c4();\n                        fcn.00427800();\n                    }\n                    goto code_r0x00451640;\n                }\n            }\n            else {\n                if (iVar8 == 0xb001) {\n                    if (*(in_EAX + 0x10a) != 0) {\n                        (**(in_EAX + 0x108))();\n                    }\n                    goto code_r0x00451640;\n                }\n                if (iVar8 == 0xb016) {\n                    cVar2 = fcn.00451a48();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x00451640;\n                }\n            }\n        }\n        else if (iVar8 < 0xb021) {\n            if (iVar8 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.00451b70(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.00451bcc(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x00451640;\n            }\n            if (iVar8 == 0xb01a) {\n                iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n                if (((iVar8 == 0) && (iVar8 = sub.user32.dll_GetFocus(),  iVar8 == *(in_EAX + 0x30))) &&\n                   (iVar8 = fcn.00448dc8(),  iVar8 != 0)) {\n                    sub.user32.dll_SetFocus(iVar8);\n                }\n                goto code_r0x00451640;\n            }\n            if (iVar8 == 0xb01f) goto code_r0x0045155f;\n        }\n        else {\n            if (iVar8 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb0);\n                }\n                else {\n                    *(in_EAX + 0xb0) = param_2[2];\n                }\n                goto code_r0x00451640;\n            }\n            if (iVar8 - 0xb03fU < 2) {\n                uVar5 = fcn.00452fdc();\n                param_2[3] = uVar5 & 0x7f;\n                goto code_r0x00451640;\n            }\n        }\n        goto code_r0x00451639;\n    }\n    if (iVar8 == 0x53) {\ncode_r0x0045155f:\n        fcn.004520b0();\n        goto code_r0x00451640;\n    }\n    if (iVar8 < 0x17) {\n    // switch table (21 cases) at 0x451034\n        switch(iVar8) {\n        case 0:\n            fcn.0041955c();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n            goto code_r0x00451639;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.00450f08(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.00450f08(&stack0xfffffffc);\n                if (*(in_EAX + 0xac) == 0) {\n                    uVar6 = fcn.00448c78();\n                    *(in_EAX + 0xac) = uVar6;\n                }\n                fcn.00450da0();\n            }\n            else {\n                fcn.00450da8();\n                if (*(in_EAX + 0xac) != 0) {\n                    fcn.00448d2c();\n                    *(in_EAX + 0xac) = 0;\n                }\n                fcn.00450f08(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n            if (iVar8 == 0) {\n                fcn.00450f08(&stack0xfffffffc);\n            }\n            else {\n                fcn.00450f44(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.0044e648();\n            }\n            break;\n        case 0x14:\n            *param_2 = 0x27;\n            fcn.00450f08(&stack0xfffffffc);\n            break;\n        default:\n            if (param_2[1] != 0) {\n                *(in_EAX + 0x9c) = 1;\n            }\n        }\n    }\n    else {\n        if (iVar8 < 0x1e) {\n            if (iVar8 == 0x1d) {\n                fcn.00450448();\n                fcn.00450f08(&stack0xfffffffc);\n                goto code_r0x00451640;\n            }\n            if (iVar8 == 0x1a) {\n                fcn.0043d6ec();\n                fcn.00450e9c();\n                fcn.00450f08(&stack0xfffffffc);\n                goto code_r0x00451640;\n            }\n            if (iVar8 == 0x1c) {\n                fcn.00450f08(&stack0xfffffffc);\n                *(in_EAX + 0x9d) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.00450d98();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.00450da8();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x00451640;\n            }\n        }\n        else {\n            if (iVar8 == 0x37) {\n                iVar8 = fcn.00451694();\n                param_2[3] = iVar8;\n                goto code_r0x00451640;\n            }\n            if (iVar8 == 0x4a) {\n                if ((*param_2[2] == -0x21acbbac) && (*(in_EAX + 0x9e) != '\\0')) {\n                    if (*(in_EAX + 0xa0) == 0) {\n                        iVar8 = fcn.0040d200();\n                        *(in_EAX + 0xa0) = iVar8;\n                        if (iVar8 == 0) {\n                            iVar8 = sub.kernel32.dll_GetLastError_1();\n                            param_2[3] = iVar8;\n                            *(in_EAX + 0xa0) = 0;\n                        }\n                        else {\n                            param_2[3] = 0;\n                            pcVar4 = sub.kernel32.dll_GetProcAddress_1(*(in_EAX + 0xa0), 0x451680);\n                            if (pcVar4 != NULL) {\n                                (*pcVar4)(*(param_2[2] + 4), *(param_2[2] + 8));\n                            }\n                        }\n                    }\n                    else {\n                        param_2[3] = 0;\n                    }\n                }\n                goto code_r0x00451640;\n            }\n        }\ncode_r0x00451639:\n        fcn.00450f08(&stack0xfffffffc);\n    }\ncode_r0x00451640:\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 2702
    },
    "004516b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004516b0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.00450d98();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.00438dd8();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            iVar1 = *(in_EAX + 0x44);\n            uVar2 = fcn.00438dd8(*(iVar1 + 0x40), *(iVar1 + 0x44), *(iVar1 + 0x48), 0, 0x40);\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar2);\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            goto code_r0x00451745;\n        }\n    }\n    fcn.004506c8();\ncode_r0x00451745:\n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))();\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "00451760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451760(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 == 0) {\n        return;\n    }\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.00438dd8();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n            goto code_r0x004517c9;\n        }\n    }\n    fcn.004506c8();\ncode_r0x004517c9:\n    uVar3 = (***0x462610)(1, 0, 0, 0x40);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    uVar3 = (***0x462610)(0, iVar1);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar1);\n    iVar1 = *(in_EAX + 0x44);\n    if (((iVar1 != 0) && (*(iVar1 + 0x22b) == '\\x01')) && (*(iVar1 + 0x57) == '\\0')) {\n        fcn.0044c3d4();\n        fcn.0044e7f0();\n    }\n    fcn.00450da8();\n    if (*(*0x463bb4 + 100) != 0) {\n        uVar2 = fcn.00438dd8();\n        sub.user32.dll_SetFocus(uVar2);\n    }\n    if (*(in_EAX + 0x122) != 0) {\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 573
    },
    "0045189c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045189c(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack264 [256];\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        fcn.004040e4();\n    }\n    else {\n        sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack264, 0x100);\n        fcn.00404180();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0045190c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0045190c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x22f) == '\\x02')) && (*(*0x463bb4 + 0x6c) != 0)) &&\n       (*(*(*0x463bb4 + 0x6c) + 0x22f) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x254), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 187
    },
    "00451a48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00451a48(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    unkbyte3 Var4;\n    \n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar2 = fcn.00438dd8();\n        iVar3 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if ((iVar3 != 0) && (uVar2 = fcn.00403554(),  uVar2 != '\\0')) {\n            Var4 = uVar2 >> 8;\n            uVar1 = 1;\n            goto code_r0x00451aa5;\n        }\n    }\n    uVar1 = 0;\n    Var4 = 0;\ncode_r0x00451aa5:\n    return CONCAT14(uVar1, CONCAT31(Var4, uVar1));\n}\n",
        "token_count": 235
    },
    "00451ab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00451ab4(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = 0;\n    uVar4 = param_2;\n    iVar2 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1, param_1);\n    if (iVar2 != 0) {\n        uVar3 = 1;\n        if (*(param_2 + 4) == 0x12) {\n            *(in_EAX + 0x9c) = 1;\n        }\n        else {\n            uVar4 = uVar4 & 0xffffff00;\n            if (*(in_EAX + 0xda) != 0) {\n                (**(in_EAX + 0xd8))();\n            }\n            cVar1 = fcn.00451a14();\n            if ((cVar1 == '\\0') && (uVar4 == '\\0')) {\n                cVar1 = fcn.0045190c();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.0045195c();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.004518e8();\n                        if (cVar1 == '\\0') {\n                            sub.user32.dll_TranslateMessage(param_2);\n                            sub.user32.dll_DispatchMessageA();\n                            uVar4 = param_2;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return CONCAT44(uVar4, uVar3);\n}\n",
        "token_count": 372
    },
    "00451b70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451b70(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.00413d3c();\n        puVar1 = fcn.004026d4();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.00413c00();\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00451bcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451bcc(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xa8) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00413d5c();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.004026f4();\n                    fcn.00413c4c();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00451c48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451c48(void)\n\n{\n    if (**0x4626e4 != NULL) {\n        (***0x4626e4)();\n    }\n    return;\n}\n",
        "token_count": 41
    },
    "00451c60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451c60(int32_t **param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x451c73;\n    piVar2 = (**(param_2 + -0xc))();\n    *param_1 = piVar2;\n    uStack28 = 0x451c9e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    (**(*piVar2 + 0x2c))();\n    *in_FS_OFFSET = uStack32;\n    if (*(in_EAX + 0x44) == 0) {\n        puStack24 = 0x451cc7;\n        cVar1 = fcn.004034e4();\n        if (cVar1 != '\\0') {\n            puStack24 = 0x451cd4;\n            fcn.00438db4();\n            *(in_EAX + 0x44) = piVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00451ce0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451ce0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    *(in_EAX + 0xa5) = 1;\n    uStack28 = 0x451dbe;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x451d0c;\n    fcn.00407b70();\n    if (*(in_EAX + 0x44) != 0) {\n        if (**0x462770 == 3) {\n            puStack36 = 0x451d3c;\n            fcn.0044c3d4();\n        }\n        else if (**0x462770 == 7) {\n            *(*(in_EAX + 0x44) + 0x22b) = 1;\n        }\n        if (*(in_EAX + 0x5b) != '\\0') {\n            if (*(*(in_EAX + 0x44) + 0x22b) == '\\x01') {\n                puStack36 = 0x451d5c;\n                fcn.004516b0();\n            }\n            else {\n                puStack36 = 0x451d65;\n                fcn.0044b2dc();\n            }\n        }\n        do {\n            uStack40 = 0x451d85;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            puStack36 = &stack0xfffffffc;\n            fcn.00451b4c();\n            *in_FS_OFFSET = uStack44;\n        } while (*(in_EAX + 0x9c) == '\\0');\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0xa5) = 0;\n    return;\n}\n",
        "token_count": 463
    },
    "00451de0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451de0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.00402764();\n    cVar1 = fcn.004034e4();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00402784();\n        fcn.00402764(uVar3);\n        fcn.0040b5e0();\n    }\n    else {\n        fcn.00402764();\n        cVar1 = fcn.004034e4();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xd2) == 0) {\n                fcn.00402764();\n                fcn.00451fd8();\n                return;\n            }\n            fcn.00402764();\n            (**(in_EAX + 0xd0))();\n        }\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "00451fd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00452011)\n// WARNING: Removing unreachable block (ram,0x00452038)\n\nvoid fcn.00451fd8(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x452093;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.00404128();\n    arg_8h = 0x10;\n    fcn.0045189c();\n    uVar1 = fcn.00404550();\n    fcn.00404550(uVar1);\n    fcn.00451e70(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x45209a;\n    uStack288 = 0x45208a;\n    fcn.00404090();\n    uStack288 = 0x452092;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 278
    },
    "004520b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004520b0(uint param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    char acStack20 [4];\n    \n    uVar5 = 0;\n    acStack20[0] = '\\x01';\n    iVar1 = *(*0x463bb4 + 0x68);\n    if ((iVar1 == 0) || (*(iVar1 + 0x2aa) == 0)) {\n        if (*(in_EAX + 0xf2) != 0) {\n            uVar5 = (**(in_EAX + 0xf0))(acStack20);\n        }\n    }\n    else {\n        uVar5 = (**(iVar1 + 0x2a8))(acStack20);\n    }\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x1c) & 0x10) != 0) {\n            acStack20[0] = '\\0';\n        }\n        iVar3 = fcn.00438f74();\n        if (((iVar3 == -1) && (*(iVar1 + 0x57) == '\\0')) && (*(iVar1 + 0x220) == 0)) {\n            acStack20[0] = '\\0';\n        }\n    }\n    if ((acStack20[0] != '\\0') && (uVar5 == '\\0')) {\n        if ((iVar1 != 0) && ((cVar2 = fcn.004390dc(),  cVar2 != '\\0' && (*(iVar1 + 0x23c) != 0)))) {\n            fcn.00438dd8();\n            uVar4 = fcn.00452754();\n            if (uVar4 == '\\0') {\n                return uVar5;\n            }\n            uVar5 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar4 & 0xffff0000 | param_2);\n            return uVar5;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xa4) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2, param_1);\n            }\n        }\n        else {\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.00438dd8();\n            }\n            uVar4 = fcn.00452754();\n            if (uVar4 != '\\0') {\n                uVar5 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar4 & 0xffff0000 | param_2);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 653
    },
    "004523a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004523a4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack20 [8];\n    \n    sub.user32.dll_GetCursorPos();\n    iVar1 = fcn.00430e9c();\n    iVar2 = fcn.0042f798();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.004337a4(0);\n        }\n        *(in_EAX + 0x48) = iVar1;\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.004337a4(0);\n        }\n    }\n    return CONCAT44(auStack20, iVar1);\n}\n",
        "token_count": 248
    },
    "0045241c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045241c(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45252c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x452446;\n    fcn.004523a4();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x452465;\n        fcn.00452974();\n    }\n    puStack48 = 0x45246f;\n    fcn.00450454();\n    puStack48 = 0x45247a;\n    fcn.0042f754();\n    puStack48 = 0x452487;\n    fcn.004525dc();\n    bVar1 = true;\n    uStack52 = 0x4524d3;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x102) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x100))();\n    }\n    fcn.00452340();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4524ed;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x462994) {\n        puStack48 = 0x4524fe;\n        cVar2 = fcn.0041955c();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x452511;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x452533;\n    uStack40 = 0x45252b;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 561
    },
    "004525dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004525dc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4525f0;\n    fcn.0040449c();\n    if (!in_ZF) {\n        puStack20 = 0x4525fc;\n        fcn.004040e4();\n        if (*(in_EAX + 0xfa) == 0) {\n            puStack20 = 0x452624;\n            fcn.0042c238();\n            puStack20 = 0x452631;\n            fcn.0043ed6c();\n            uStack24 = 0x452661;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.00403554();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x452668;\n            uStack24 = 0x452660;\n            fcn.00403358();\n            return;\n        }\n        puStack20 = 0x452614;\n        (**(in_EAX + 0xf8))();\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "004526cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004526cc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.0044f8d0();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0044f8bc();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 400) == 0) || (cVar1 = fcn.004390dc(),  cVar1 != '\\0')) {\ncode_r0x00452733:\n                        fcn.00452670(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.00438dd8(*(iVar3 + 400));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x00452733;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00452670(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "00452754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00452754(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.004056cc();\n        fcn.00423448();\n    }\n    return *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 74
    },
    "0045277c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045277c(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.004527c0();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.004504ac);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.00452974();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004527e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004527e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint32_t uStack32;\n    uint uStack28;\n    \n    uStack52 = 0x452801;\n    fcn.004069ac();\n    uStack52 = 0x452810;\n    fcn.00432108();\n    uStack52 = 0x45281b;\n    fcn.00430e9c();\n    uStack52 = 0x452820;\n    iVar1 = fcn.0045048c();\n    if ((iVar1 == 0) || (*(iVar1 + 0x99) == '\\0')) {\n        uStack52 = 0x452836;\n        fcn.00452974();\n    }\n    else {\n        if (iVar1 == *(in_EAX + 0x60)) {\n            uStack52 = 0x45284c;\n            fcn.004069ac();\n            uStack52 = 0x45285b;\n            fcn.00432108();\n            uStack52 = uStack28;\n            uStack56 = uStack32;\n            uStack60 = in_EAX + 100;\n            iVar2 = sub.user32.dll_PtInRect();\n            if (iVar2 != 0) {\n                return;\n            }\n        }\n        puVar3 = &stack0xffffffc4;\n        uStack56 = uStack56 & 0xffffff00 | *(in_EAX + 0x58);\n        if (*(in_EAX + 0x58) == 0) {\n            uStack60 = *(in_EAX + 0x78);\n        }\n        else {\n            uStack60 = *(in_EAX + 0x80);\n        }\n        fcn.004337a4(&stack0xffffffc4);\n        if ((uStack60 == '\\0') || (puVar3 != NULL)) {\n            fcn.00452974();\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            fcn.0045277c();\n        }\n        else {\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            sub.user32.dll_GetCursorPos(&stack0xffffffc5);\n            fcn.00452c0c();\n        }\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "00452974": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452974(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.00452930();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.00450614();\n        fcn.004527c0();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004529ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004529ac(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x4529c0;\n    var_4h = (***0x462610)();\n    puStack64 = &fcn.004529ac::var_28h;\n    uStack68 = 0x4529cc;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x4529d2;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x452aee;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x4529f6;\n        puStack72 = &stack0xfffffffc;\n        fcn.0041eb9c();\n        puStack84 = 0x452a01;\n        iVar2 = fcn.00407b24();\n        uStack88 = 0x452abf;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.0041ec54(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.0045299c();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.0045299c();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x452ac6;\n        iStack92 = 0x452abe;\n        iVar2 = fcn.004026f4();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 730
    },
    "00452b60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452b60(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x452bfa;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_4h = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            while (((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                in_EAX = fcn.0040c28c();\n            }\n            fcn.00404180();\n            iVar2 = fcn.0041d780();\n            if (var_4h < iVar2) {\n                var_4h = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x452c01;\n    uStack28 = 0x452bf9;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 355
    },
    "00452c0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c0c(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_70h;\n    int32_t var_68h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lprc;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    char var_1dh;\n    uint lpPoint;\n    uint var_18h;\n    uint dx;\n    uint dy;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *param_2;\n    var_8h = param_2[1];\n    var_4h = in_EAX;\n    fcn.004049fc();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        cVar2 = fcn.00448e44();\n        if (cVar2 != '\\0') {\n            fcn.00430e9c();\n            iVar4 = fcn.0045048c();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_60h = *(var_4h + 0x60);\n                var_58h = var_ch;\n                var_54h = var_8h;\n                iVar4 = fcn.004529ac();\n                var_54h = var_54h + iVar4;\n                var_50h = fcn.0044f850();\n                var_4ch = *(var_4h + 0x5c);\n                fcn.00431f90();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_18h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004034e4();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 400) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.00432134();\n                fcn.00450454();\n                fcn.0042f710();\n                fcn.00404128();\n                var_30h = 0;\n                var_2ch = *(var_4h + 0x74);\n                var_5ch = *0x461d10;\n                var_24h = 0;\n                arg_8h = &var_60h;\n                iVar4 = fcn.004337a4(arg_8h);\n                var_1dh = iVar4 == 0;\n                if ((var_1dh) && (*(var_4h + 0x132) != 0)) {\n                    (**(var_4h + 0x130))(&var_60h);\n                }\n                if ((var_1dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_28h != 0)) {\n                    fcn.00452b00(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x70))();\n                    (**(**(var_4h + 0x84) + 0xd8))(&var_70h, var_24h);\n                    sub.user32.dll_OffsetRect(&var_70h, var_58h, var_54h);\n                    cVar2 = fcn.00403554();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.00452b60(&stack0xfffffffc);\n                        var_70h = var_70h - (iVar4 + 5);\n                        var_68h = var_68h - (iVar4 + 5);\n                    }\n                    fcn.00432108();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.00432108();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.00432790();\n                    (**(**(var_4h + 0x84) + 0xd4))(var_24h);\n                    fcn.004505a0();\n                    if (var_30h < 1) {\n                        fcn.0045277c();\n                    }\n                    else {\n                        fcn.0045277c();\n                    }\n                    goto code_r0x00452f66;\n                }\n            }\n        }\n    }\n    if (var_30h < 1) {\n        fcn.00452974();\n    }\n    else {\n        fcn.0045277c();\n    }\ncode_r0x00452f66:\n    *in_FS_OFFSET = arg_8h;\n    fcn.004040b4();\n    fcn.00404ac0();\n    return;\n}\n",
        "token_count": 1418
    },
    "00452fa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452fa0(void)\n\n{\n    if ((*(*0x463bb4 + 0x68) == 0) || (*(*(*0x463bb4 + 0x68) + 0x23c) == 0)) {\n        fcn.004040e4();\n    }\n    else {\n        fcn.004040e4();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00452fdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00452fdc(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uStack24;\n    \n    iVar1 = *(*0x463bb4 + 0x6c);\n    if (iVar1 == 0) {\ncode_r0x00453007:\n        if ((iVar1 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar3 = fcn.004337a4(param_1);\n            iVar3 = iVar3 + -1;\n            if (iVar3 == 0) goto code_r0x00453027;\n        }\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = fcn.004337a4(param_1);\n        iVar3 = iVar3 + -1;\n        if (iVar3 != 0) goto code_r0x00453007;\ncode_r0x00453027:\n        uVar4 = CONCAT31(iVar3 >> 8, 1);\n    }\n    uVar2 = uVar4 & 0xff;\n    uStack24 = param_2 & 0xffffff00 | uVar2;\n    uStack24._0_1_ = uVar2;\n    if (uStack24 == '\\0') {\n        uVar4 = fcn.004034e4();\n        if (((uVar4 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) {\n            uVar4 = fcn.0043ec34();\n        }\n    }\n    return CONCAT44(uStack24, uVar4 & 0xffffff00 | uVar2);\n}\n",
        "token_count": 427
    },
    "0045306c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045306c(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 85
    },
    "00453094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00453094(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        in_EAX = (**(in_EAX + 200))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 81
    },
    "00453148": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453148(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45319b;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x463bb8 = *0x463bb8 + 1;\n    if (*0x463bb8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x463bb0 != 0) {\n            iStack20 = 0x45316f;\n            fcn.00448bf0();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x463bc4 != 0) {\n            iStack20 = *0x463bc4;\n            sub.kernel32.dll_CloseHandle();\n        }\n        fcn.00413890();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 258
    },
    "00454444": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00454508)\n\nvoid __cdecl fcn.00454444(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    bool bVar2;\n    uint *puStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack40 = 0x454559;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.004040e4();\n    fcn.00408554();\n    fcn.0040861c();\n    iVar1 = fcn.00404350();\n    if ((iVar1 < 2) || (*0x1 != ':')) {\n        puStack48 = 0x4544d0;\n        fcn.00404090();\n    }\n    else {\n        puStack48 = &fcn.00454444::var_8h;\n        fcn.004045b0();\n        fcn.004045f0();\n    }\n    while (var_8h != 0) {\n        iVar1 = fcn.0041d780();\n        bVar2 = in_ECX == iVar1;\n        if (iVar1 <= in_ECX) break;\n        fcn.0040449c();\n        if (bVar2) {\n            fcn.00404090();\n            fcn.00404128();\n        }\n        else {\n            fcn.00404090();\n        }\n        puStack48 = NULL;\n        fcn.00404410();\n    }\n    *in_FS_OFFSET = puStack48;\n    uStack40 = 0x454560;\n    iStack44 = 0x454558;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 449
    },
    "0045458c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045458c(uint *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char **in_ECX;\n    code *in_EDX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    char **ppcStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x45480f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    ppcStack52 = 0x4545be;\n    fcn.004028e8();\n    *in_EDX = pe_dos_header;\n    ppcStack52 = 0x4545cf;\n    fcn.004040e4();\n    if (**in_ECX == '[') {\n        ppcStack52 = 0x4545dd;\n        pcVar2 = fcn.004084d4();\n        if (*pcVar2 == ']') {\n            puStack56 = 0x4545ea;\n            ppcStack52 = in_ECX;\n            fcn.00404350();\n            puStack56 = 0x4545fb;\n            fcn.004045b0();\n            goto code_r0x00454658;\n        }\n    }\n    ppcStack52 = 0x454607;\n    fcn.00408588();\n    ppcStack52 = 0x45460f;\n    iVar3 = fcn.00404350();\n    if (iVar3 == 0) {\n        ppcStack52 = 0x45461e;\n        fcn.00408588();\n    }\n    else {\n        ppcStack52 = 0x454628;\n        fcn.00404350();\n        ppcStack52 = 0x454636;\n        fcn.004045f0();\n    }\n    ppcStack52 = 0x45463e;\n    iVar3 = fcn.00404350();\n    if ((iVar3 < 2) || (*0x1 != ':')) {\n        *in_EDX = 0x0;\n    }\n    else {\n        *in_EDX = pe_dos_header;\n    }\ncode_r0x00454658:\n    uStack60 = 0x4547ed;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    cVar1 = fcn.0045646c();\n    if (cVar1 != '\\0') {\n        fcn.00402878();\n        fcn.0040283c();\n    }\n    fcn.0040861c();\n    fcn.004040e4();\n    iVar3 = fcn.00404350();\n    iVar4 = fcn.00404350();\n    if (iVar3 == iVar4 + 1) {\n        fcn.004040e4();\n    }\n    else {\n        iVar3 = fcn.00404350();\n        iVar4 = fcn.00404350();\n        if (iVar4 < iVar3) {\n            uVar5 = fcn.00404350();\n            fcn.00404350(uVar5);\n            fcn.004046dc();\n        }\n        else {\n            fcn.004028e8();\n            fcn.00408588();\n            fcn.00404350();\n            fcn.004045f0();\n            iVar3 = fcn.00404350();\n            if (iVar3 == 0) {\n                fcn.004040e4();\n            }\n        }\n    }\n    iVar3 = fcn.00404350();\n    if (0 < iVar3) {\n        fcn.00402878();\n        fcn.0040283c();\n    }\n    iVar3 = fcn.00404350();\n    if (0 < iVar3) {\n        iVar3 = fcn.00404694();\n        if (iVar3 < 1) {\n            iVar3 = fcn.00404694();\n            if (iVar3 < 1) {\n                cVar1 = fcn.004083ac();\n                if (cVar1 == '\\0') {\n                    fcn.00402878();\n                    fcn.0040283c();\n                    iVar3 = fcn.00404350();\n                    if (iVar3 == 1) {\n                        fcn.0040439c();\n                    }\n                    else {\n                        in_stack_ffffffb4 = *arg_8h;\n                        fcn.00404410(in_stack_ffffffb4, 0x454828, *in_ECX);\n                    }\n                    fcn.00404090();\n                }\n            }\n        }\n    }\n    if (*in_EDX == 0x0) {\n        fcn.0040439c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    cVar1 = fcn.0045646c(0x4547f4);\n    if (cVar1 != '\\0') {\n        fcn.00402878();\n        fcn.0040283c();\n    }\n    return;\n}\n",
        "token_count": 1194
    },
    "00454884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00454884(uint param_1, char param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.00454884::var_1h + 1;\n    uStack36 = 0x4549b4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_1h._0_1_ = param_2;\n    iVar4 = (**(*in_EAX + 0xcc))();\n    if (-1 < iVar4) {\n        cVar1 = fcn.00402b0c();\n        cVar2 = fcn.00402b0c();\n        if (cVar1 == cVar2) goto code_r0x0045499e;\n    }\n    if (var_1h == '\\0') {\n        *(in_EAX + 0xa7) = 0;\n        (**(*in_EAX + 0xd0))();\n    }\n    else {\n        if (*(in_EAX + 0x29d) == '\\x01') {\n            uVar3 = fcn.00402b0c();\n            *(in_EAX + 0xa7) = uVar3;\n        }\n        else {\n            cVar1 = fcn.00402b0c();\n            *(in_EAX + 0xa7) = cVar1 + ' ';\n        }\n        var_ch = (**(*in_EAX[0x8f] + 0x14))();\n        if (-1 < var_ch + -1) {\n            do {\n                (**(*in_EAX[0x8f] + 0xc))();\n                cVar1 = fcn.00402b0c();\n                cVar2 = fcn.00402b0c();\n                if ((cVar1 == cVar2) && (*0x1 == ':')) {\n                    (**(*in_EAX + 0xd0))();\n                    break;\n                }\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n    }\n    if (in_EAX[0xa6] != 0) {\n        fcn.00454aac();\n    }\n    fcn.00403554();\ncode_r0x0045499e:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4549bb;\n    uStack36 = 0x4549b3;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 643
    },
    "00454aac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454aac(uint param_1, char param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x454b65;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.00402b0c();\n    fcn.004555b4();\n    cVar2 = fcn.00402b0c();\n    if (cVar1 != cVar2) {\n        if (param_2 != '\\0') {\n            fcn.00402c58();\n            fcn.00402c28();\n            fcn.004042f4();\n            fcn.00402878();\n            fcn.0040283c();\n            fcn.004028e8();\n        }\n        if (*(in_EAX + 0xa3) == '\\0') {\n            (**(*in_EAX + 0x10c))();\n            (**(*in_EAX + 0x104))();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x454b6c;\n    uStack32 = 0x454b64;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 343
    },
    "00454c7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454c7c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x28d) == '\\0') && (*(in_EAX + 0x28e) == '\\0')) {\n        fcn.00407ce8();\n        return;\n    }\n    fcn.004040e4();\n    return;\n}\n",
        "token_count": 84
    },
    "00454cac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454cac(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x28e) != '\\0') {\n        fcn.00407d1c();\n        return;\n    }\n    fcn.0040c3fc();\n    return;\n}\n",
        "token_count": 67
    },
    "00455730": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455730(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_ffffffdc;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x455798;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x288) != 0) {\n        in_stack_ffffffdc = &fcn.00455730::var_4h;\n        fcn.00454444(in_stack_ffffffdc);\n        fcn.00432620();\n        puVar1 = puStack24;\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffdc;\n    uStack28 = 0x45579f;\n    iStack32 = 0x455797;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 262
    },
    "00455998": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455998(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint *in_FS_OFFSET;\n    bool bVar6;\n    uchar uVar7;\n    uint uStack416;\n    uint uStack412;\n    uchar *puStack408;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint32_t var_160h;\n    uint var_15ch;\n    ushort var_10h;\n    uint16_t var_eh;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_170h = 0;\n    var_16ch = 0;\n    var_ch = 0;\n    puStack396 = 0x4559ce;\n    var_4h = in_EAX;\n    fcn.004049fc();\n    uStack400 = 0x455c87;\n    uStack404 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe6c;\n    var_eh = 0;\n    puStack408 = 0x4559ea;\n    puStack396 = &stack0xfffffffc;\n    cVar1 = fcn.004390dc();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = uStack404;\n        puStack396 = 0x455c8e;\n        uStack400 = 0x455c5d;\n        fcn.00404090();\n        uStack400 = 0x455c6d;\n        fcn.004040b4();\n        uStack400 = 0x455c7e;\n        fcn.00404ac0();\n        uStack400 = 0x455c86;\n        fcn.00404090();\n        return;\n    }\n    uVar2 = 0;\n    puVar5 = 0x461e2c;\n    do {\n        bVar6 = uVar2 < 7;\n        if (uVar2 < 8) {\n            bVar6 = (*(var_4h + ((uVar2 & 0x7f) >> 3) + 0x288) >> (uVar2 & 7) & 1) != 0;\n        }\n        if (bVar6) {\n            var_eh = var_eh | *puVar5;\n        }\n        uVar2 = uVar2 + 1;\n        puVar5 = puVar5 + 1;\n    } while (uVar2 != '\\x06');\n    puStack408 = 0x455a2c;\n    fcn.00402878();\n    puStack408 = 0x455a31;\n    fcn.0040283c();\n    puStack408 = 0x455a3c;\n    (**(*var_4h + 0xd8))();\n    var_8h = 0;\n    var_10h = *(**0x46296c + 0x44);\n    uStack412 = 0x455c33;\n    uStack416 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe60;\n    puStack408 = &stack0xfffffffc;\n    puVar3 = fcn.00404550();\n    while (puVar3 != NULL) {\n        puVar3 = fcn.004088d0();\n        if (puVar3 != NULL) {\n            *puVar3 = 0;\n        }\n        fcn.00404288();\n        iVar4 = fcn.00408444();\n        if (iVar4 == 0) {\n            do {\n                if (((*(var_4h + 0xa2) & 0x40) != 0) || ((var_eh & var_160h) != 0)) {\n                    uVar7 = (var_160h & 0x10) == 0;\n                    if (uVar7) {\n                        fcn.00408654();\n                        fcn.00407ce8();\n                        fcn.0040449c();\n                        if (((!uVar7) && (fcn.0040449c(),  !uVar7)) && (fcn.0040449c(),  !uVar7)) {\n                            fcn.0040449c();\n                        }\n                        var_8h = (**(*var_4h[0x86] + 0x3c))();\n                    }\n                    else {\n                        fcn.00408e28(&fcn.00455998::var_170h);\n                        var_8h = (**(*var_4h[0x86] + 0x38))();\n                        if (*(var_4h + 0xad) != '\\0') {\n                            (**(*var_4h[0x86] + 0x24))();\n                        }\n                    }\n                }\n                if (var_8h == 100) {\n                    fcn.0044fd70();\n                }\n                iVar4 = fcn.00408494();\n            } while (iVar4 == 0);\n            fcn.004084b8();\n        }\n        if (puVar3 != NULL) {\n            *puVar3 = 0x3b;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    *in_FS_OFFSET = uStack416;\n    puStack408 = 0x455c3a;\n    uStack412 = 0x455c32;\n    fcn.0044fd70();\n    return;\n}\n",
        "token_count": 1260
    },
    "00455d0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455d0c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x455dbc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = (**(*in_EAX + 0xcc))();\n    in_EAX[0xac] = iVar1;\n    if (in_EAX[0xa3] != 0) {\n        fcn.00455e10();\n        iVar1 = fcn.00404350();\n        if (iVar1 == 0) {\n            fcn.00432620();\n        }\n        else {\n            fcn.00455e10();\n            fcn.00432620();\n        }\n        fcn.00429ec8();\n    }\n    if (*(in_EAX + 0x2aa) != 0) {\n        (*in_EAX[0xaa])();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x455dc3;\n    uStack24 = 0x455dbb;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 308
    },
    "00455ee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00455f23)\n\nvoid __fastcall fcn.00455ee8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x455f69;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x28c) = param_2;\n    if (param_2 != 0) {\n        fcn.004197cc();\n        fcn.00455e10();\n        fcn.00432620();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x455f70;\n    uStack24 = 0x455f68;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 237
    },
    "00455f78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455f78(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *puVar5;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack84 = &stack0xfffffffc;\n    var_1ch = *param_1;\n    var_18h = param_1[1];\n    uStack24 = param_1[2];\n    var_10h = param_1[3];\n    uStack88 = 0x4560a9;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    var_ch = *(in_EAX + 0x228);\n    var_4h = param_2;\n    fcn.0041d580();\n    var_8h = 2;\n    if ((*(in_EAX + 0x2b4) != '\\0') && (piVar1 = (**(**(in_EAX + 0x218) + 0x18))(),  piVar1 != NULL)) {\n        uVar2 = (**(*piVar1 + 0x20))();\n        puVar5 = &fcn.00455f78::var_2ch;\n        (**(*piVar1 + 0x2c))();\n        fcn.00412950(puVar5, uVar2);\n        iVar3 = (**(*piVar1 + 0x20))(&fcn.00455f78::var_2ch);\n        fcn.004205e0(iVar3 + -1);\n        uVar2 = fcn.0041d8ac();\n        uVar2 = (**(*piVar1 + 0x20))(uVar2);\n        puVar5 = &fcn.00455f78::var_3ch;\n        uVar4 = (**(*piVar1 + 0x2c))();\n        (**(*piVar1 + 0x20))(uVar4);\n        fcn.00412950(puVar5, uVar2);\n        fcn.0041d18c(puVar5, uVar2);\n        var_8h = (**(*piVar1 + 0x2c))();\n        var_8h = var_8h + 6;\n    }\n    (**(**(in_EAX + 0x218) + 0xc))();\n    uVar2 = 0;\n    fcn.0041d6b0(0);\n    *in_FS_OFFSET = uVar2;\n    uStack88 = 0x4560b0;\n    uStack92 = 0x4560a8;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 700
    },
    "004561c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004561c8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    (**(*in_EAX + 0x10c))();\n    iVar2 = fcn.0040c3fc();\n    if (iVar2 != 0) {\n        iVar2 = fcn.00404350();\n        if (iVar2 != 0) {\n            fcn.0045458c(&var_8h);\n            if (in_EAX[0xa4] == NULL) {\n                if (var_9h == '\\0') {\n                    fcn.004560bc();\n                }\n                else {\n                    var_24h._0_1_ = var_9h;\n                    var_20h._0_1_ = 2;\n                    var_1ch = var_4h;\n                    var_18h._0_1_ = 0xb;\n                    fcn.00408e28(&var_14h);\n                    fcn.004560bc();\n                }\n            }\n            else {\n                (**(*in_EAX[0xa4] + 0x100))();\n            }\n            iVar2 = fcn.00404694();\n            if (iVar2 < 1) {\n                iVar2 = fcn.00404694();\n                if (iVar2 < 1) {\n                    iVar2 = fcn.00404350();\n                    if (0 < iVar2) {\n                        fcn.00455e60();\n                        cVar1 = fcn.004083ac();\n                        if (cVar1 == '\\0') {\n                            var_2ch._0_1_ = 0xb;\n                            arg_ch = &var_30h;\n                            arg_8h = 0;\n                            var_30h = param_2;\n                            fcn.00405b90();\n                            fcn.0040b6e4(arg_8h, arg_ch);\n                            fcn.00403acc();\n                        }\n                        else {\n                            fcn.00455e10();\n                            if (var_28h == 0) {\n                                fcn.00456140();\n                                fcn.00455e60();\n                            }\n                        }\n                    }\n                    goto code_r0x00456335;\n                }\n            }\n            fcn.00456140();\n        }\n    }\ncode_r0x00456335:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404090();\n    fcn.00404090();\n    fcn.004040b4();\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 759
    },
    "004563a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004563d6)\n\nvoid fcn.004563a4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45640b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00404090();\n    fcn.00455e10();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x456412;\n    uStack28 = 0x45640a;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 178
    },
    "00457718": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457718(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    uint *arg_8h;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x4577bb;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack40;\n    puVar1 = &stack0xfffffffc;\n    if (*0x461e3c == 0) {\n        arg_8h = &var_4h;\n        fcn.00405b90(arg_8h, 0x276d);\n        fcn.00408e28(arg_8h);\n        fcn.00456894(arg_8h);\n        fcn.00403acc();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    iVar3 = *0x461e3c;\n    uVar2 = sub.kernel32.dll_GetProcAddress_1(*0x461e3c, *(in_EAX * 0xc + 0x461e48));\n    **(in_EAX * 0xc + 0x461e44) = uVar2;\n    *in_FS_OFFSET = iVar3;\n    fcn.004040b4(0x4577c2);\n    return;\n}\n",
        "token_count": 367
    },
    "004577f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004577f0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack32 = 0x4578bd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x461e3c == 0) {\n        *0x461e3c = sub.kernel32.dll_LoadLibraryA(0x4578d0);\n        if (*0x461e3c == 0) {\n            uVar1 = sub.kernel32.dll_GetLastError_1();\n            arg_8h_00 = &fcn.004577f0::var_4h;\n            fcn.00405b90(arg_8h_00, uVar1);\n            fcn.00408e28(arg_8h_00);\n            fcn.00456894(arg_8h_00);\n            fcn.00403acc();\n        }\n        *0x463da0 = sub.kernel32.dll_GetProcAddress_1(*0x461e3c, 0x4578f0);\n        (**0x463da0)(arg_ch & 0xffff0000 | arg_8h & 0xffff, arg_ch);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4578c4;\n    uStack32 = 0x4578bc;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 405
    },
    "004582fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004582fc(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe3c;\n    uint uStack444;\n    uint uStack440;\n    uchar *puStack436;\n    uint var_194h;\n    uint var_18eh;\n    \n    if (param_2 != '\\0') {\n        puStack436 = 0x45831b;\n        fcn.00403664();\n    }\n    uStack440 = 0x45839a;\n    uStack444 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe44;\n    puStack436 = &stack0xfffffffc;\n    fcn.00457cb4();\n    if (*0x46238c == '\\0') {\n        in_stack_fffffe3c = 0x202;\n        iVar1 = fcn.004577f0(0x202, &fcn.004582fc::var_18eh);\n        if (iVar1 == -1) {\n            fcn.00405b90();\n            fcn.0040b6a8();\n            fcn.00403acc();\n        }\n        *0x46238c = '\\x01';\n    }\n    *in_FS_OFFSET = in_stack_fffffe3c;\n    uStack444 = 0x4583a1;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 315
    },
    "00458cc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458cc4(void)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x458d5e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    (**(*in_EAX[3] + 0x44))();\n    (**(*in_EAX + 0x24))();\n    uVar1 = fcn.00404550();\n    iVar2 = (***0x462698)();\n    if (iVar2 == 0) {\n        fcn.00457c00();\n    }\n    else {\n        iVar2 = *(iVar2 + 0xc);\n        for (iVar3 = 0; *(iVar2 + iVar3 * 4) != 0; iVar3 = iVar3 + 1) {\n            (**(*in_EAX + 0x7c))();\n            (**(*in_EAX[3] + 0x38))();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack36 = 0x458d65;\n    uStack40 = 0x458d5d;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 337
    },
    "0045924c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045924c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x459285;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x463db0 = *0x463db0 + 1;\n    if ((*0x463db0 == 0) && (*0x46238c != '\\0')) {\n        (***0x4626ec)();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 149
    },
    "00459584": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00459584(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char in_CL;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.00459584::var_1h + 1;\n    bVar2 = true;\n    uStack36 = 0x45964d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0040449c();\n    if (bVar2) {\n        iVar1 = fcn.00404694();\n    }\n    else {\n        fcn.00407ba8();\n        fcn.00407ba8(0);\n        iVar1 = (**0x4623dc)();\n    }\n    if (iVar1 == 0) {\n        fcn.004040e4();\n        if (in_CL != '\\0') {\n            fcn.00404090();\n        }\n    }\n    else {\n        fcn.004045b0(arg_8h);\n        if (in_CL != '\\0') {\n            fcn.00404350();\n            fcn.004045b0();\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x459654;\n    uStack36 = 0x45964c;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 359
    },
    "0045966c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045966c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_CL;\n    bool bVar2;\n    uint var_1h;\n    \n    bVar2 = arg_ch == '\\0';\n    if (bVar2) {\n        fcn.00459584(arg_8h);\n    }\n    else {\n        fcn.0040449c();\n        if (bVar2) {\n            iVar1 = fcn.00404694();\n        }\n        else {\n            iVar1 = (**0x4623dc)();\n        }\n        if (iVar1 == 0) {\n            fcn.004040e4();\n            if (in_CL != '\\0') {\n                fcn.00404090();\n            }\n        }\n        else {\n            fcn.004045b0(arg_8h);\n            if (in_CL != '\\0') {\n                fcn.00404350();\n                fcn.004045b0();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00459cac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00459cac(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_5h;\n    \n    puStack16 = 0x459cb7;\n    *NULL = fcn.004036cc();\n    puStack16 = 0x459ccb;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00419748();\n    puStack16 = 0x459cd4;\n    (****0x463dd8)();\n    uStack20 = 0x459d13;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x462450 = *0x462450 + -1;\n    if (*0x462450 == 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.0040d134();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x459d1a;\n    uStack20 = 0x459d12;\n    (**(**0x463dd8 + 4))();\n    return;\n}\n",
        "token_count": 276
    },
    "004036dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004036dc(void)\n\n{\n    if (1 < *0x461028) {\n        (**0x463014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "00403734": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00403734(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x461028) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x463014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 117
    },
    "00403748": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00403748(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x461028) {\n        uVar1 = 0;\n        (**0x463014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 86
    },
    "0040377c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040377c(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x461028) {\n        uStack16 = 0x40378d;\n        uStack8 = param_2;\n        fcn.0040375c();\n        (**0x463014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004037a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004037a4(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x461028) {\n        uStack4 = param_2;\n        (**0x463014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "004037c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004037c0(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x461028) {\n        (**0x463014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 111
    },
    "004046dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046dc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402714();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.00404154();\n        if (*in_EAX != 0) {\n            fcn.00402980();\n        }\n    }\n    fcn.00404090();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 191
    },
    "0040496c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040496c(uint arg_8h)\n\n{\n    fcn.004048dc();\n    fcn.0040485c();\n    return;\n}\n",
        "token_count": 39
    },
    "00404e88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e88(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00402830();\n        }\n        fcn.00404e80();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00402830();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.00404e78();\n            }\n            fcn.00402714();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.004026d4();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.00402980();\n            }\n            else {\n                fcn.00402d74();\n                fcn.00404e68(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00402d74();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.00404e88(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 634
    },
    "004089a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004089a8(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040c080();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.00408778();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.00407b00();\n    return;\n}\n",
        "token_count": 168
    },
    "00409790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint32_t __cdecl fcn.00409790(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    double *pdVar4;\n    uint16_t in_CX;\n    int32_t iVar5;\n    uint16_t in_DX;\n    int32_t iVar6;\n    uint var_8h;\n    uint8_t var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.00409754();\n    pdVar4 = (uVar2 & 0x7f) * 3;\n    iVar6 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) &&\n        (puVar1 = iVar6 + 0x4610da + in_DX * 2,  pdVar4 = in_DX,  in_CX < *puVar1 || in_CX == *puVar1)))) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar5 = 1;\n            do {\n                in_CX = in_CX + *(iVar6 + 0x4610da + iVar5 * 2);\n                iVar5 = iVar5 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar6 = iVar3;\n        if (iVar3 < 0) {\n            iVar6 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar6 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n        pdVar4 = arg_8h;\n    }\n    return pdVar4 & 0xffffff00 | var_3h;\n}\n",
        "token_count": 496
    },
    "00409b54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409b54(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x409ca2;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.00404090();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.00404128();\n    uVar1 = fcn.00404550(&fcn.00409b54::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.00409b54::var_14h, uVar1);\n    uStackY332 = 0x409bd7;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY332 = 0x409bf1;\n        fcn.00404300();\n        if (in_EAX == 1) {\n            if (*0x463744 == 4) {\n                if (*0x463748 == 1) {\n                    fcn.00404350();\n                    uStackY332 = 0x409c3d;\n                    iVar2 = fcn.0040c098();\n                    if (iVar2 == 4) {\n                        fcn.0040c1a8();\n                        fcn.00404288();\n                        fcn.0040c20c();\n                        uStackY332 = 0x409c81;\n                        fcn.00404180();\n                    }\n                }\n            }\n            else if (*0x463744 == 0x11) {\n                fcn.0040c20c();\n                fcn.004045b0();\n                uStackY332 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY332;\n    fcn.00404090(0x409ca9);\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 604
    },
    "0040be68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040be68(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x4610c4 = iStack136;\n        *0x4610c8 = uStack148;\n        *0x4610cc = uStack144;\n        if (iStack136 == 1) {\n            *0x4610d0 = uStack140 & 0xffff;\n        }\n        else {\n            *0x4610d0 = uStack140;\n        }\n        fcn.00404300();\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0040d9e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d9e4(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.0040d9e4::var_1h + 1;\n    uStack24 = 0x40da51;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.00404318();\n        fcn.00408140();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40da58;\n    uStack24 = 0x40da50;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 258
    },
    "0040db44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db44(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x40dba8;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004081dc();\n        fcn.004048bc();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40dbaf;\n    uStack20 = 0x40dba7;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 216
    },
    "00410020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410020(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0040ec60();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 90
    },
    "00414040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00414040(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x414052;\n    fcn.004140c8();\n    uStack20 = 0x4140bc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.00413db8();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00413ce8();\n            }\n            goto code_r0x004140a6;\n        }\n    }\n    fcn.00413c00();\ncode_r0x004140a6:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4140c3;\n    uStack20 = 0x4140bb;\n    fcn.0041412c();\n    return;\n}\n",
        "token_count": 287
    },
    "004155b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004155b5(uint32_t *param_1, uint8_t param_2, int32_t param_3)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    \n    while( true ) {\n        if (in_EAX < 0) {\n            unaff_ESI = unaff_EBX + 1;\n        }\n        else {\n            param_3 = unaff_EBX - 1;\n            if ((in_EAX == 0) && (param_2 = 1,  *(unaff_EDI + 0x1d) != '\\x01')) {\n                unaff_ESI = unaff_EBX;\n            }\n        }\n        if (param_3 < unaff_ESI) break;\n        unaff_EBX = param_3 + unaff_ESI >> 1;\n        in_EAX = (**(*unaff_EDI + 0x34))();\n    }\n    *param_1 = unaff_ESI;\n    return param_1 & 0xffffff00 | param_2;\n}\n",
        "token_count": 252
    },
    "00419a18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419a18(char param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.004199fc();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar3 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar3) {\n            piVar2 = fcn.00413d5c();\n            (**(*piVar2 + 0x10))();\n            iVar3 = iVar3 + -1;\n            iVar1 = *(*(in_EAX + 0x10) + 8);\n            if (iVar1 <= iVar3) {\n                iVar3 = iVar1 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0041c4c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c4c8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x461418;\n    piVar3 = param_2;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 9) = *(param_2 + 9) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 8;\n            }\n            *(param_2 + 10) = uStack97;\n            fcn.00402e74();\n            fcn.00402c64();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 2) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 2) = 1;\n            }\n            else {\n                *(param_2 + 2) = 0;\n            }\n            *param_2 = in_EAX;\n        }\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "0041cf1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cf1c(void)\n\n{\n    fcn.0041ce84();\n    fcn.0041cea0();\n    return;\n}\n",
        "token_count": 35
    },
    "0041d038": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d038(void)\n\n{\n    fcn.0041ce84();\n    fcn.0041cea0();\n    return;\n}\n",
        "token_count": 34
    },
    "0041d6b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d6b0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint Y;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.0041d9f4();\n    cVar1 = fcn.0041d684();\n    if (cVar1 == '\\x01') {\n        iVar2 = fcn.0041d780();\n        in_EDX = in_EDX + iVar2 + 1;\n    }\n    uVar3 = fcn.00404350(0);\n    uVar3 = fcn.00404550(uVar3);\n    sub.gdi32.dll_ExtTextOutA(in_EAX[1], in_EDX, in_ECX, in_EAX[0x15], 0, uVar3);\n    fcn.0041d780();\n    fcn.0041d61c();\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 249
    },
    "0042069c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042069c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "00421240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421240(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x421260;\n        fcn.00420790();\n        puStack108 = 0x42126f;\n        fcn.00402d74();\n        if (param_2 != 0) {\n            puStack108 = &fcn.00421240::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x42127f;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x46388c) {\n            var_4h = *0x46388c;\n        }\n        else {\n            puStack120 = 0x4212ac;\n            var_4h = fcn.0041fda8();\n        }\n        uStack124 = 0x4212db;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.00420b40(0, 0, &fcn.00421240::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 463
    },
    "00421490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421490(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.004207a0();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack60 = uStack80;\n        uStack58 = uStack80;\n        fcn.004201ac(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "00421510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421510(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uchar auStackY256 [116];\n    uint uStackY140;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.0041b9c0();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.00420790();\n            fcn.004207a0();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.00421510::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x421576;\n            var_4h = fcn.0041f744(0, &fcn.00421510::var_58h);\n            uStack120 = 0x4215a7;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            uStackY140 = 0x42159d;\n            puStack116 = &stack0xfffffffc;\n            fcn.00420b40(0, &stack0xffffff00 | *(iVar1 + 0x70), &fcn.00421510::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.0041f63c();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "0042b150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042b150(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    uint uStack32;\n    uint32_t uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0;\n    uStack28 = 0x187;\n    uStack32 = 0x42b168;\n    uStack24 = param_2;\n    uStack32 = fcn.00438dd8();\n    puVar3 = &stack0xffffffe0;\n    puVar2 = 0x42b16e;\n    iVar1 = sub.user32.dll_SendMessageA();\n    if (iVar1 == -1) {\n        uStack28 = uStack28 & 0xffffff00;\n        uStack32 = param_2;\n        fcn.0040b7a0(0, &stack0xffffffe0);\n        iVar1 = fcn.00403acc();\n        puVar2 = puVar3;\n    }\n    return CONCAT44(puVar2, iVar1 != 0);\n}\n",
        "token_count": 250
    },
    "0042cb24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cb24(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x42cc0f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = 0x42cb56;\n    cVar1 = fcn.0042cd9c();\n    if (cVar1 != '\\0') {\n        if ((((arg_ch == 0x102) || (arg_ch == 0x105)) || (arg_ch == 0x201)) ||\n           (((arg_ch == 10 || (arg_ch == 8)) || ((arg_ch == 1 || (arg_ch == 0x101)))))) {\n            arg_8h_00 = 0;\n            fcn.00407ec4();\n            cVar1 = fcn.0042ccf4(arg_8h_00);\n        }\n        else {\n            cVar1 = '\\x01';\n        }\n        if (cVar1 != '\\0') {\n            *(in_EAX + 0x10) = 1;\n            fcn.00407ec4();\n            fcn.004040e4();\n            fcn.0042c458(arg_ch, arg_8h);\n            uVar2 = fcn.00404550();\n            sub.user32.dll_WinHelpA(in_EDX, uVar2);\n        }\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x42cc16;\n    uStack48 = 0x42cc0e;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 470
    },
    "004300fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004300fc(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00438dd8();\n        uVar2 = fcn.00438dd8(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 119
    },
    "00430430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00430430(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x463b30 + 4) != 0) {\n        iVar1 = fcn.004302fc(*0x463b30 + 0xc, *(*0x463b30 + 4));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 101
    },
    "00431ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431ac0(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.00419a18();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x1f]) {\n            fcn.004325a8();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.00431964();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00435bfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435bfc(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00432c34();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.00432c64();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.00403554();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403554();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.00403554();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00436174": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00436174(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.00432564();\n    if (iVar1 < 1) {\n        iVar1 = fcn.0040896c();\n        in_EAX[0x19] = iVar1;\n    }\n    else {\n        iVar1 = fcn.0040894c();\n        in_EAX[0x19] = iVar1;\n        fcn.00408960();\n        fcn.00432574();\n    }\n    fcn.00431018();\n    (**(*in_EAX + 0xac))();\n    return;\n}\n",
        "token_count": 146
    },
    "0043a8b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043a8b4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.0043f3c4();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.0043a918();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.0043a6e8(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 209
    },
    "0043a93c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0043a93c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.0043f3c4();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.0043a6e8(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 175
    },
    "0043ac1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ac1c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0043acac();\n        }\n        else {\n            fcn.0040b6a8();\n            fcn.00403acc();\n        }\n        return;\n    }\n    fcn.0043acac();\n    return;\n}\n",
        "token_count": 152
    },
    "0043ac64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ac64(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0043ad18();\n        }\n        else {\n            fcn.0040b6a8();\n            fcn.00403acc();\n        }\n        return;\n    }\n    fcn.0043ad18();\n    return;\n}\n",
        "token_count": 151
    },
    "0043b1ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b1ec(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x43b201;\n        in_EAX = fcn.00403664();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x43b214;\n    fcn.00403328();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x40000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x43b264;\n    iVar2 = fcn.0043ab94();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x43b276;\n    iVar2 = fcn.0041cd74();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x43b28a;\n    fcn.00422244();\n    puStack48 = 0x43b293;\n    fcn.0041cef0();\n    puStack48 = 0x43b29b;\n    fcn.0043b3bc();\n    uStack52 = 0x43b2f8;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.00435b08();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00435acc(0);\n            (**(*in_EAX + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0043adc8();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x43b2ff;\n    uStack52 = 0x43b2f7;\n    fcn.0043b3c0();\n    return;\n}\n",
        "token_count": 604
    },
    "0043cbc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cbc4(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0043d6c4();\n    fcn.0043cc78();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.0043b108();\n    }\n    else {\n        fcn.0043b108();\n    }\n    fcn.0043caf0();\n    fcn.0043b494(0x43cc68);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "0043cc78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cc78(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.0043acac();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.0043ad18(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.0043acac(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.0043ad18(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.0041cf50(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "0043d100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d100(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0043acac();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0043cdf4();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.0043acac();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0043cdf4();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0043d578": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043d578(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x46298c == 2) && (3 < **0x4625f8)) ||\n       ((**0x46298c == 1 && ((4 < **0x4625f8 || ((**0x4625f8 == 4 && (9 < **0x462824)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.0043d6ec();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 284
    },
    "0043d650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d650(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x462610)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 70
    },
    "0043d66c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d66c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x462610)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0043ec34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ec34(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.00403508();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0043f30c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f30c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x43f3b9;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00403328();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.00405b90();\n        fcn.0040b6a8();\n        fcn.00403acc();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.0043fe18();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.00420018();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.0043f3d8();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43f3c0;\n    uStack20 = 0x43f3b8;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 397
    },
    "0043f510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f510(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.0043fda0();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 100))();\n    }\n    else {\n        cVar1 = fcn.0042064c();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 100))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x6c))();\n            (**(*param_1 + 100))();\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "004493b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004493b4(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.00438dd8(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 144
    },
    "00449464": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00449464(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.00438dd8(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.004493e8(&stack0xfffffffc);\n        iVar3 = fcn.00432038();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.004493e8(&stack0xfffffffc);\n        iVar3 = fcn.00431ff4();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 193
    },
    "004494fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004494fc(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.00438dd8(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x4624cc)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 202
    },
    "0044dbe8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044dbe8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x150) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x158);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.004040e4();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004506a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004506a0(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 81
    },
    "004518e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004518e8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb0) != 0) {\n        iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb0), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 114
    },
    "00452670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452670(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x461e24) && (in_AL != *0x461e24)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x461e28));\n        *0x461e24 = in_AL;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00456184": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456184(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00454844();\n    if (*(in_EAX + 0x2b4) == '\\x01') {\n        iVar2 = (**(**(in_EAX + 0x298) + 0x20))();\n        if (iVar1 < iVar2 + 1) {\n            (**(**(in_EAX + 0x298) + 0x20))();\n        }\n    }\n    fcn.0042b124();\n    return;\n}\n",
        "token_count": 138
    },
    "00459c14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00459c14(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint in_EAX;\n    uint uVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack32 = 0x459c26;\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    puStack32 = 0x459c36;\n    var_5h._0_1_ = param_2;\n    unique0x1000005d = in_EAX;\n    fcn.004196fc();\n    puStack32 = 0x459c3f;\n    (****0x463dd8)();\n    uStack36 = 0x459c86;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = *0x462450;\n    *0x462450 = *0x462450 + 1;\n    if (iVar1 == 0) {\n        puStack32 = &stack0xfffffffc;\n        uVar2 = fcn.00457cd4();\n        **0x4628c0 = uVar2;\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x459c8d;\n    uStack36 = 0x459c85;\n    (**(**0x463dd8 + 4))();\n    return;\n}\n",
        "token_count": 369
    },
    "00408228": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408228(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.00404550(*((param_2 & 3) * 4 + 0x461140), *(((param_2 & 0xf0) >> 4) * 4 + 0x46114c), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "004084d4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.004084d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00404350();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040c05c(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 115
    },
    "00408504": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408504(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.00404350();\n    fcn.00404550();\n    do {\n        if (iVar2 < 1) {\n            return iVar2;\n        }\n        if ((*(param_2 + -1 + iVar2) != '\\0') && (iVar3 = fcn.004088d0(),  iVar3 != 0)) {\n            cVar1 = fcn.0040c05c();\n            if (cVar1 != '\\x02') {\n                return iVar2;\n            }\n            iVar2 = iVar2 + -1;\n        }\n        iVar2 = iVar2 + -1;\n    } while( true );\n}\n",
        "token_count": 186
    },
    "00408588": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408588(uint param_1, uint param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00404350();\n    if ((iVar1 < 2) || (in_EAX[1] != ':')) {\n        iVar1 = fcn.00404350();\n        if ((iVar1 < 2) || ((*in_EAX != '\\\\' || (in_EAX[1] != '\\\\')))) {\n            fcn.00404090();\n        }\n        else {\n            iVar3 = 0;\n            iVar1 = 3;\n            while ((iVar2 = fcn.00404350(),  iVar1 < iVar2 && (iVar3 < 2))) {\n                if (in_EAX[iVar1 + -1] == '\\\\') {\n                    iVar3 = iVar3 + 1;\n                }\n                if (iVar3 < 2) {\n                    iVar1 = iVar1 + 1;\n                }\n            }\n            fcn.004045b0(param_2);\n        }\n    }\n    else {\n        fcn.004045b0(param_2);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "004090e1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004090e1(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.00409036();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.00409036();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 641
    },
    "00409cbc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409cbc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY328;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x409d9a;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    fcn.00404090();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.00404128();\n    }\n    else {\n        fcn.00404128();\n    }\n    uVar1 = fcn.00404550(&fcn.00409cbc::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.00409cbc::var_14h, uVar1);\n    ppcStackY328 = 0x409d4d;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY328 = 0x409d63;\n        fcn.00404300();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.00404350();\n            fcn.004045b0();\n            ppcStackY328 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY328;\n    fcn.00404090(0x409da1);\n    return;\n}\n",
        "token_count": 487
    },
    "0040c6e4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c6e4(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uchar uVar6;\n    uint lpCharType;\n    uint lpSrcStr;\n    \n    *0x463740 = 0x409;\n    *0x463744 = 9;\n    *0x463748 = 1;\n    uVar2 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar2 != 0) {\n        *0x463740 = uVar2;\n    }\n    if (uVar2 != 0) {\n        *0x463744 = uVar2 & 0x3ff;\n        *0x463748 = (uVar2 & 0xffff) >> 10;\n    }\n    puVar4 = 0x40c838;\n    puVar5 = 0x46110c;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*0x4610c4 == 2) {\n        cVar1 = fcn.0040c6cc();\n        uVar6 = cVar1 == '\\0';\n        if (uVar6) {\n            fcn.0040c66c(&stack0xfffffffc);\n            fcn.00402e98();\n            *0x46374c = !uVar6;\n            if (*0x46374c) {\n                *0x46374d = 0;\n            }\n            else {\n                iVar3 = 0x80;\n                puVar4 = &lpSrcStr;\n                do {\n                    *puVar4 = iVar3;\n                    iVar3 = iVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                } while (iVar3 != 0x100);\n                sub.kernel32.dll_GetStringTypeExA(*0x463740, 2, &lpSrcStr, 0x80, &lpCharType);\n                iVar3 = 0x80;\n                puVar4 = &lpCharType;\n                do {\n                    *0x46374d = *puVar4 == 2;\n                    if (*0x46374d) {\n                        return;\n                    }\n                    puVar4 = puVar4 + 2;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        }\n        else {\n            *0x46374d = 0;\n            *0x46374c = 0;\n        }\n    }\n    else {\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x46374d = iVar3 != 0;\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x2a);\n        *0x46374c = iVar3 != 0;\n        if (*0x46374c) {\n            fcn.0040c66c(&stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 701
    },
    "00410c88": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410c88(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0041a344": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a344(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41a3ae;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "004302fc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004302fc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "004455e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004455e0(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.00445524();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004034e4();\n            if (cVar3 != '\\0') {\n                fcn.004445f8();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.004445f8();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.00444c90();\n        uVar2 = fcn.0044518c();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.00442534();\n        }\n        uVar1 = *(**0x4627c4 + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x22f) == '\\x02')) && (piVar4 == *(uVar1 + 600))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x254), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.00438dd8();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 449
    },
    "0044b884": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044b884(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0044bd60();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0044bdac();\n            if (*(iVar2 + 0x22b) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "0044c338": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0044c338(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 78
    },
    "0041e1f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e1f4(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint lpSystemInfo;\n    int16_t iStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    sub.kernel32.dll_GetSystemInfo(&lpSystemInfo);\n    var_8h = var_8h + -1;\n    if (-1 < var_8h) {\n        if (iStack16 == 3) {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n        else {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00435774": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00435774(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x43578b;\n    iVar1 = fcn.00435b08();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x43579f;\n    iVar1 = fcn.00403328();\n    puStack32 = 0x4357aa;\n    fcn.00435670();\n    uStack36 = 0x43585b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00435b08();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00435acc();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.00435acc();\n                fcn.00413c00();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00403554();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x435862;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x43581b;\n        iVar2 = fcn.00413d5c();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x435828;\n            fcn.00431b04();\n        }\n        else {\n            uStack36 = 0x435831;\n            fcn.00431b04();\n        }\n        uStack36 = 0x435840;\n        fcn.00413c4c();\n    }\n    uStack36 = 0x435852;\n    fcn.00403358();\n    uStack36 = 0x43585a;\n    fcn.00435678();\n    return;\n}\n",
        "token_count": 497
    },
    "0040375c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040375c(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00403b78": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00403b78(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "004165ac": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004165ac(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x416623;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.004056cc();\n    if (param_2 != 0) {\n        iVar2 = fcn.00410ae8();\n        fcn.004056cc(iVar2 + 5);\n        cVar1 = fcn.0040d168();\n        if (cVar1 == '\\0') {\n            fcn.004056cc();\n        }\n    }\n    fcn.004111d8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41662a;\n    uStack24 = 0x416622;\n    fcn.004056cc();\n    return;\n}\n",
        "token_count": 250
    },
    "0041a784": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a784(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "0043bfd8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bfd8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.0043bef8(&stack0xfffffffc);\n        fcn.0043bf50(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n        fcn.0043bf50(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n    }\n    else {\n        fcn.0043bef8(&stack0xfffffffc);\n        fcn.0043bf50(*(arg_8h + 4) + 5, &stack0xfffffffc);\n        fcn.0043bf50(*(arg_8h + 4) + 8, &stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00401c4c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c4c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    \n    puVar1 = (param_2 - 4) + in_EAX;\n    if (0xf < param_2) {\n        *puVar1 = 0x80000007;\n        fcn.00401e20();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n        *puVar1 = param_2 | 0x80000002;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00401c7c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401c7c(void)\n\n{\n    int32_t in_EAX;\n    \n    *0x4635b0 = *0x4635b0 + 1;\n    *0x4635b4 = *0x4635b4 + ((*(in_EAX + -4) & 0x7ffffffc) - 4);\n    fcn.00402290();\n    return;\n}\n",
        "token_count": 92
    },
    "00401d70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d70(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uStack28;\n    int32_t iStack27;\n    int32_t iStack23;\n    \n    uStack28 = 0;\n    uVar1 = fcn.00401c1c();\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (in_EAX - *(uVar1 + 8) < 0xc) {\n            uVar2 = fcn.00401988();\n        }\n        else {\n            uVar2 = fcn.00401988();\n        }\n        if (iStack27 != 0) {\n            fcn.00401c4c();\n            if (iStack27 + iStack23 < *(uVar1 + 8) + *(uVar1 + 0xc)) {\n                fcn.00401ca0();\n            }\n            uVar2 = fcn.00401498();\n            uStack28 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uStack28;\n}\n",
        "token_count": 259
    },
    "00401ef4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00401ef4(void)\n\n{\n    uint32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    uStack28 = *in_EAX;\n    uStack24 = in_EAX[1];\n    fcn.00401ea8();\n    fcn.00401428();\n    if (uStack20 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (uStack20 < uStack28) {\n            iVar2 = fcn.00401cc8();\n            uStack28 = uStack28 - iVar2;\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack28 + uStack24 < uStack20 + iStack16) {\n            iVar2 = fcn.00401d38();\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack20 + iStack16 == uStack28 + uStack24) {\n            fcn.00401c4c();\n            uStack24 = uStack24 - 4;\n        }\n        *0x46361c = uStack28;\n        *0x463618 = uStack24;\n        uVar1 = CONCAT31(uStack24 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 318
    },
    "0040200c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040200c(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    while ((puVar1 = *0x463614,  puVar3 = *0x46360c,  (*0x46360c)[2] < in_EAX &&\n           (uVar4 = (*0x463614)[2],  puVar3 = *0x463614,  uVar4 < in_EAX))) {\n        (*0x463614)[2] = in_EAX;\n        puVar3 = puVar1;\n        do {\n            puVar3 = puVar3[1];\n        } while (puVar3[2] < in_EAX);\n        (*0x463614)[2] = uVar4;\n        puVar1 = puVar3;\n        if ((puVar3 != *0x463614) ||\n           ((in_EAX < 0x1001 && (puVar3 = fcn.00401fe0(),  puVar1 = *0x463614,  puVar3 != NULL)))) break;\n        cVar2 = fcn.00401f80();\n        puVar3 = *0x46361c;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        if (in_EAX <= *0x463618) {\n            *0x463618 = *0x463618 - in_EAX;\n            if (*0x463618 < 0xc) {\n                in_EAX = in_EAX + *0x463618;\n                *0x463618 = 0;\n            }\n            *0x46361c = *0x46361c + in_EAX;\n            *puVar3 = in_EAX | 2;\n            *0x4635b0 = *0x4635b0 + 1;\n            *0x4635b4 = *0x4635b4 + (in_EAX - 4);\n            return puVar3 + 1;\n        }\n    }\n    *0x463614 = puVar1;\n    fcn.00401bb8();\n    uVar4 = puVar3[2];\n    if (uVar4 - in_EAX < 0xc) {\n        if (puVar3 == *0x463614) {\n            *0x463614 = puVar3[1];\n        }\n        *(puVar3 + uVar4) = *(puVar3 + uVar4) & 0xfffffffe;\n    }\n    else {\n        fcn.00401e20();\n        uVar4 = in_EAX;\n    }\n    *puVar3 = uVar4 | 2;\n    *0x4635b0 = *0x4635b0 + 1;\n    *0x4635b4 = *0x4635b4 + (uVar4 - 4);\n    return puVar3 + 1;\n}\n",
        "token_count": 663
    },
    "00402434": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402434(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    uVar7 = param_2 + 7U & 0xfffffffc;\n    if (uVar7 < 0xc) {\n        uVar7 = 0xc;\n    }\n    puVar6 = in_EAX + -4;\n    uVar9 = *puVar6 & 0x7ffffffc;\n    puVar3 = puVar6 + uVar9;\n    if (uVar9 == uVar7) {\n        uVar4 = CONCAT31(puVar3 >> 8, 1);\n    }\n    else {\n        uVar8 = uVar7;\n        if (uVar7 < uVar9) {\n            uStack24 = uVar9 - uVar7;\n            if (puVar3 == *0x46361c) {\n                *0x46361c = *0x46361c + -uStack24;\n                *0x463618 = *0x463618 + uStack24;\n                if (*0x463618 < 0xc) {\n                    *0x46361c = *0x46361c + uStack24;\n                    *0x463618 = *0x463618 - uStack24;\n                    uVar8 = uVar9;\n                }\n            }\n            else {\n                if ((*puVar3 & 2) == 0) {\n                    uStack24 = uStack24 + *(puVar3 + 8);\n                    fcn.00401bb8();\n                }\n                uVar8 = uVar9;\n                if (0xb < uStack24) {\n                    *(puVar6 + uVar7) = uStack24 | 2;\n                    fcn.00401c7c();\n                    uVar8 = uVar7;\n                }\n            }\ncode_r0x004025ee:\n            *0x4635b4 = *0x4635b4 + (uVar8 - uVar9);\n            uVar7 = *puVar6;\n            *puVar6 = uVar8 | uVar7 & 0x80000003;\n            uVar4 = CONCAT31((uVar7 & 0x80000003) >> 8, 1);\n        }\n        else {\n            do {\n                iStack20 = uVar7 - uVar9;\n                if (puVar6 + uVar9 == *0x46361c) {\n                    if (iStack20 <= *0x463618) {\n                        *0x463618 = *0x463618 - iStack20;\n                        *0x46361c = *0x46361c + iStack20;\n                        if (*0x463618 < 0xc) {\n                            *0x46361c = *0x46361c + *0x463618;\n                            uVar7 = uVar7 + *0x463618;\n                            *0x463618 = 0;\n                        }\n                        *0x4635b4 = *0x4635b4 + (uVar7 - uVar9);\n                        uVar9 = *puVar6;\n                        *puVar6 = uVar7 | uVar9 & 0x80000003;\n                        uVar4 = CONCAT31((uVar9 & 0x80000003) >> 8, 1);\n                        goto code_r0x00402607;\n                    }\n                    fcn.00401ea8();\n                }\n                puVar5 = puVar6 + uVar9;\n                if ((*puVar5 & 2) == 0) {\n                    uVar1 = puVar5[2];\n                    if (iStack20 <= uVar1) {\n                        fcn.00401bb8();\n                        if (uVar1 - iStack20 < 0xc) {\n                            uVar8 = uVar7 + (uVar1 - iStack20);\n                            puVar5 = puVar6 + uVar8;\n                            *puVar5 = *puVar5 & 0xfffffffe;\n                        }\n                        else {\n                            fcn.00401e20();\n                        }\n                        goto code_r0x004025ee;\n                    }\n                    puVar5 = puVar5 + uVar1;\n                    iStack20 = iStack20 - uVar1;\n                }\n            } while (((*puVar5 & 0x80000000) != 0) && (cVar2 = fcn.00401fac(),  cVar2 != '\\0'));\n            uVar4 = 0;\n        }\n    }\ncode_r0x00402607:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 1093
    },
    "00407e14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00407e14(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    uVar3 = 0;\n    iVar2 = fcn.00404350();\n    if ((iVar2 != 0) && (((cVar1 = *in_EAX,  cVar1 + 0xbfU < 0x1a || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)))) {\n        iVar2 = fcn.00404350();\n        if (1 < iVar2) {\n            iVar2 = iVar2 + -1;\n            iVar4 = 2;\n            do {\n                cVar1 = in_EAX[iVar4 + -1];\n                if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                    return 0;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 293
    },
    "00407f18": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407f18(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "00408960": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00408960(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 37
    },
    "00408998": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00408998(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.004026f4();\n    }\n    return;\n}\n",
        "token_count": 46
    },
    "0040b224": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040b224(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40b3ee;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.00404090();\n    arg_8h = &fcn.0040b224::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040aeec(arg_8h);\n    iVar3 = fcn.0040803c();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.00404350(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x46110c) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.0040888c();\n                if (iVar3 == 0) {\n                    fcn.00404358();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040888c();\n                    if (iVar3 == 0) {\n                        fcn.00404358();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.0040888c();\n                        if (iVar3 == 0) {\n                            fcn.00404358();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00404358();\n                            }\n                            else {\n                                fcn.00404278();\n                                fcn.00404358();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040c294();\n                arg_8h = &fcn.0040b224::var_10h;\n                fcn.004045b0();\n                fcn.00404358();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x463744 == 4) || (*0x463744 - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.00404350(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.00404278();\n                    fcn.00404358();\n                }\n            }\n        }\n        else {\n            fcn.004040e4();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40b3f5;\n    iStack48 = 0x40b3ed;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 873
    },
    "0041de7c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0041de7c(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 72
    },
    "00439ee0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439ee0(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0044903c();\n    if (iVar1 == 0) {\n        return;\n    }\n    if (param_2 != 9) {\n        if (param_2 == 0x12) {\n            uVar2 = 0;\n            fcn.00406948();\n            fcn.004337a4(uVar2);\n            return;\n        }\n        if (3 < param_2 - 0x25U) {\n            return;\n        }\n    }\n    uVar2 = 0;\n    fcn.00406948();\n    fcn.004337a4(uVar2);\n    return;\n}\n",
        "token_count": 177
    },
    "00409ab0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ab0(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 126
    },
    "00417190": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417190(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00419d20();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00419cf4();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.00404e58();\n                fcn.00405014(iVar2 + 1);\n                uVar3 = fcn.00419cf4();\n                iVar2 = fcn.00404e58();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00418a28": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418a28(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00416c28();\n        if (cVar1 != '\\0') break;\n        fcn.00418adc();\n    }\n    fcn.00417b94();\n    return;\n}\n",
        "token_count": 79
    },
    "00418a80": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418a80(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00416c28();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00416f6c();\n        if (cVar1 - 2U < 3) {\n            fcn.00418adc();\n        }\n        fcn.00418ed4();\n        while( true ) {\n            cVar1 = fcn.00416c28();\n            if (cVar1 != '\\0') break;\n            fcn.00418c78();\n        }\n        fcn.00417b94();\n    }\n    fcn.00417b94();\n    return;\n}\n",
        "token_count": 170
    },
    "0042b878": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b878(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    uint var_90h;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint lprc;\n    uint var_70h;\n    uint var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar4 = arg_8h + -4;\n    var_18h = 0xbc2b;\n    var_10h = &var_58h;\n    var_14h = fcn.00438dd8();\n    var_58h = 2;\n    var_4ch = 1;\n    var_48h = 0;\n    var_40h = *(*(arg_8h + -8) + 4);\n    var_54h = fcn.00438dd8();\n    var_44h = fcn.00438dd8();\n    var_28h = 0xbc2c;\n    var_24h = fcn.00438dd8();\n    var_20h = &var_70h;\n    var_70h = 2;\n    var_6ch = fcn.00438dd8();\n    iVar3 = 0;\n    iVar1 = fcn.0042b2b0();\n    sub.gdi32.dll_GetClipBox(*(*(arg_8h + -8) + 4), &lprc);\n    var_4h = (*ppiVar4)[0x13];\n    var_8h = (*ppiVar4)[0x12];\n    if (0 < var_4h) {\n        do {\n            var_68h = iVar1;\n            iVar2 = (**(*(*ppiVar4)[0x86] + 0x14))();\n            if (iVar1 < iVar2) {\n                var_5ch = (**(*(*ppiVar4)[0x86] + 0x18))();\n            }\n            var_64h = var_8h;\n            var_60h = (*ppiVar4)[0x8c];\n            var_2ch = var_5ch;\n            var_50h = iVar1;\n            (**(**ppiVar4 + -0x14))();\n            fcn.00412928(&var_90h, var_60h + iVar3);\n            var_3ch = var_90h;\n            uStack60 = uStack144;\n            uStack56 = uStack140;\n            uStack52 = uStack136;\n            (**(**ppiVar4 + -0x14))();\n            iVar3 = iVar3 + var_60h;\n            iVar1 = iVar1 + 1;\n            iVar2 = (**(*(*ppiVar4)[0x86] + 0x14))();\n        } while ((iVar1 < iVar2) && (iVar3 < var_4h));\n    }\n    return;\n}\n",
        "token_count": 825
    },
    "004343d8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004343d8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00412900();\n    fcn.00432108();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.00412950(&var_20h, \n                 ((*(iVar1 + 0x50) - *(iVar1 + 0x48)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.00431fb0();\n    return;\n}\n",
        "token_count": 180
    },
    "00444a7c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00444a7c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040c3c4();\n    if (iVar1 != 0) {\n        fcn.004045f0();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 92
    },
    "00449d1c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449d1c(uint param_1, int32_t param_2)\n\n{\n    fcn.00435c64();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 66
    },
    "0040d7c8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d7c8(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d822;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404318();\n        fcn.00408054();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d829;\n    uStack20 = 0x40d821;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 194
    },
    "0040d834": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d834(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d88e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404318();\n        fcn.004095fc();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d895;\n    uStack20 = 0x40d88d;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 194
    },
    "0040d8a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d8a0(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d8fa;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404318();\n        fcn.004095d0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d901;\n    uStack20 = 0x40d8f9;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 198
    },
    "0040d90c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d90c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d966;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404318();\n        fcn.0040ae14();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d96d;\n    uStack20 = 0x40d965;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 195
    },
    "0040d978": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d978(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d9d2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404318();\n        fcn.00409628();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d9d9;\n    uStack20 = 0x40d9d1;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 198
    },
    "00410f18": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410f18(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.00410ae8();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x410f60\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x41110c);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x410ffc\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x41110c));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x41108f\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x41110c));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 813
    },
    "0041425c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041425c(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x4142d0 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x004142c8;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x004142c8:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 435
    },
    "00415de8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00415de8(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00408304(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 69
    },
    "004179dc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004179dc(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004189cc(param_1);\n    // switch table (6 cases) at 0x417a11\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.004040e4();\n        break;\n    default:\n        fcn.00416a68();\n        break;\n    case 7:\n        fcn.00416f90();\n        fcn.00404180();\n        fcn.004045a8();\n        fcn.00416f90();\n        break;\n    case 8:\n        fcn.004040e4();\n        break;\n    case 9:\n        fcn.004040e4();\n        break;\n    case 0xd:\n        fcn.004040e4();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00418adc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00418adc(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x418c6b;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.004189cc();\n    // switch table (21 cases) at 0x418b13\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.00418a28(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.00418ed4();\n        break;\n    case 3:\n        fcn.00418ed4();\n        break;\n    case 4:\n        fcn.00418ed4();\n        break;\n    case 5:\n        fcn.00418ed4();\n        break;\n    case 6:\n    case 7:\n        fcn.004187f0();\n        break;\n    case 10:\n        fcn.00418a50(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.004189e0();\n        break;\n    case 0xc:\n        fcn.00418a50(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.00418a80(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.00418ed4();\n        break;\n    case 0x10:\n        fcn.00418ed4();\n        break;\n    case 0x11:\n        fcn.00418ed4();\n        break;\n    case 0x12:\n        fcn.00418a50(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.00418ed4();\n        break;\n    case 0x14:\n        fcn.00418a50(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x418c72;\n    uStack20 = 0x418c6a;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 524
    },
    "004190e4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.004190e4(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4192de;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0040ecdc();\n    uVar2 = fcn.00416f6c();\n    // switch table (21 cases) at 0x419126\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.004189cc();\n        if (cVar1 != '\\r') {\n            fcn.00410868();\n        }\n        break;\n    default:\n        fcn.0040b764();\n        fcn.00403acc();\n        break;\n    case 2:\n        fcn.00417adc();\n        fcn.0040ffb8();\n        break;\n    case 3:\n        fcn.00417adc();\n        fcn.0040ffb8();\n        break;\n    case 4:\n        fcn.00417adc();\n        fcn.0040ffb8();\n        break;\n    case 5:\n        fcn.004178c0();\n        fcn.00410048();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041882c();\n        fcn.00410084();\n        break;\n    case 8:\n    case 9:\n        fcn.004189cc();\n        fcn.00410020();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x419281;\n        fcn.00418f1c(&stack0xfffffffc);\n        fcn.0040f004();\n        break;\n    case 0xf:\n        fcn.00417904();\n        fcn.00410048();\n        break;\n    case 0x10:\n        fcn.00417948();\n        fcn.00410070();\n        break;\n    case 0x11:\n        fcn.00417998();\n        fcn.0041005c();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.004188e8();\n        fcn.004100b0();\n        break;\n    case 0x13:\n        uVar3 = fcn.00417b48();\n        in_stack_ffffffc8 = uVar3;\n        fcn.0040fff4(in_stack_ffffffc8, uVar3 >> 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x4192e5;\n    fcn.0040ecf0();\n    fcn.00404770();\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 694
    },
    "004277d0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.004277d0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x4626f8)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 155
    },
    "0042790c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042790c(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 188
    },
    "00427948": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427948(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (38 cases) at 0x4279ce\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1828
    },
    "00402c64": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c64(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    \n    if (*param_2 < param_1) {\n        param_1 = *param_2;\n    }\n    *in_EAX = param_1;\n    fcn.00402980();\n    return;\n}\n",
        "token_count": 83
    },
    "00402e98": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e98(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    \n    param_1 = param_1 & 0xff;\n    do {\n        if (param_1 == 0) {\n            return;\n        }\n        param_1 = param_1 - 1;\n        cVar1 = *in_EAX;\n        cVar2 = *param_2;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 == cVar2);\n    return;\n}\n",
        "token_count": 149
    },
    "00403b90": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403b90(int32_t *arg_8h)\n\n{\n    fcn.004027d8();\n    return;\n}\n",
        "token_count": 34
    },
    "0040a7b0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040a7b0(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    while( true ) {\n        uVar2 = fcn.00404350();\n        if ((uVar2 < *param_2) ||\n           (cVar1 = *(in_EAX + -1 + *param_2),  uVar2 = *param_2 & 0xffffff00 | cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar2 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            uVar2 = fcn.0040c2d0();\n            *param_2 = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 254
    },
    "0040bc88": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040bc88(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40bd43;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040ba24();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40bce1;\n            iVar3 = fcn.0040babc(&stack0xfffffffc);\n            goto code_r0x0040bd16;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040bc88::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.00405b90();\n            iVar3 = fcn.0040b6e4(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040bd16;\n        }\n    }\n    iVar3 = fcn.0040b6a8();\ncode_r0x0040bd16:\n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40bd4a;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 484
    },
    "0040c118": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c118(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404350();\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040c2d0();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040c2d0();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 354
    },
    "0040c66c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c66c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint var_1h;\n    \n    uVar3 = fcn.0040c5f8(arg_8h + -0x14);\n    sub.kernel32.dll_GetCPInfo(uVar3);\n    for (iVar5 = 0; (iVar5 < 0xc && ((*(arg_8h + -0xe + iVar5) | *(arg_8h + -0xd + iVar5)) != 0)); iVar5 = iVar5 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar5);\n        uVar1 = *(arg_8h + -0xd + iVar5);\n        if (var_1h <= uVar1) {\n            cVar4 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x46110c;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar4 = cVar4 + -1;\n            } while (cVar4 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "0040ce34": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint * fcn.0040ce34(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.0040cd94();\n    puVar1 = *(in_EAX + 4 + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.0040cd34();\n        if (iVar3 != 0x7fffffff) break;\n        puVar1 = *puVar1;\n    }\n    uVar4 = sub.kernel32.dll_GetCurrentThreadId_1();\n    puVar1[1] = uVar4;\n    return puVar1;\n}\n",
        "token_count": 183
    },
    "0041c290": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0041c290(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0043dd9c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0043dd9c(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x43de22;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x463b18 == 0;\n    *0x463b18 = *0x463b18 + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion_1();\n        *0x463b14 = 3 < uVar1;\n        fcn.0043db4c();\n        fcn.00413598();\n        fcn.00413638();\n        fcn.004135e4();\n        fcn.004135e4();\n        fcn.004135e4();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 237
    },
    "00446b88": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00446b88(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.00404090();\n    iVar3 = 1;\n    iVar1 = fcn.00404350();\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x46297c + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.00404278();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0045539c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045539c(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack56 = 0x45551d;\n    puStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    fcn.00404090();\n    iVar2 = (**(**(in_EAX + 0x218) + 0x14))();\n    if (param_2 < iVar2) {\n        fcn.00404128();\n        iVar2 = (**(**(in_EAX + 0x218) + 0x18))();\n        if (param_2 == 0) {\n            fcn.00408588();\n            fcn.0040439c();\n        }\n        else if (iVar2 == *(in_EAX + 0x290)) {\n            (**(**(in_EAX + 0x218) + 0xc))();\n            fcn.00454340();\n        }\n        else if (iVar2 == *(in_EAX + 0x298)) {\n            fcn.004040e4();\n        }\n        else {\n            var_ch = 0;\n            fcn.00408588();\n            fcn.00404350();\n            fcn.004045f0();\n            iVar2 = 0;\n            while (param_2 + 1 != var_ch) {\n                iVar4 = iVar2 + 1;\n                iVar3 = fcn.00404350();\n                if (iVar3 < iVar4) break;\n                uVar1 = *(var_8h + -1 + iVar4);\n                if ((*(*0x46297c + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n                    iVar2 = iVar4;\n                    if (uVar1 == 0x5c) {\n                        var_ch = var_ch + 1;\n                    }\n                }\n                else {\n                    iVar2 = iVar2 + 2;\n                }\n            }\n            puStack60 = &fcn.0045539c::var_1ch;\n            fcn.004045b0();\n            fcn.00408588(var_1ch);\n            fcn.0040439c();\n        }\n    }\n    *in_FS_OFFSET = puStack60;\n    puStack52 = 0x455524;\n    uStack56 = 0x455514;\n    fcn.004040b4();\n    uStack56 = 0x45551c;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 736
    },
    "00402c80": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402c80(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x00402cc3:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x00402cfe:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x00402cfe;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x00402cc3;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x00402cfe;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 488
    },
    "00402d04": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402d04(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00402d34:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00402d34;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 325
    },
    "00403364": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403399)\n// WARNING: Removing unreachable block (ram,0x0040339f)\n// WARNING: Removing unreachable block (ram,0x004033a6)\n// WARNING: Removing unreachable block (ram,0x004033ac)\n// WARNING: Removing unreachable block (ram,0x004033b2)\n\nvoid __fastcall fcn.00403364(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0040449c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040449c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "004048e8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048e8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00408788": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408788(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    uVar2 = 0xffffffff;\n    puVar4 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    for (uVar3 = ~uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = ~uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "004087b0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004087b0(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 336
    },
    "00416f90": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416f90(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.00416fdc();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "004192ec": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004192ec(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.00419338();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "00407ae4": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ae4(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 87
    },
    "00402d74": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d74(uchar param_1, uint32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_2 >> 2;\n    if (-1 < iVar1) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *in_EAX = CONCAT22(CONCAT11(param_1, param_1), CONCAT11(param_1, param_1));\n            in_EAX = in_EAX + 1;\n        }\n        for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n            *in_EAX = param_1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00406948": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00406948(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffff | param_2 << 0x10;\n}\n",
        "token_count": 54
    },
    "00441764": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00441764(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint var_2h;\n    \n    var_2h._0_1_ = in_AL;\n    fcn.00404090();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(var_2h, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.00404300();\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00402d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d94(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00402e0a:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00402e1a:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00402e1a;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00402e1f:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00402e13;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00402e13;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00402e5c:\n                iVar7 = 0;\n                goto code_r0x00402e5f;\n            }\n            goto code_r0x00402e0a;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00402de6;\n            goto code_r0x00402e13;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00402e1f;\n        while (uVar3 != 0) {\ncode_r0x00402de6:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00402e13;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00402e5c;\n        }\n        else if (-1 < uVar2) goto code_r0x00402e5c;\n    }\ncode_r0x00402e13:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00402e5f:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 876
    },
    "0040a60c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a60c(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040a5e8();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.00404350();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n        in_EDX = in_ECX;\n    }\n    return in_EDX & 0xffffff00 | iVar2 < iVar3;\n}\n",
        "token_count": 304
    },
    "00417018": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.00417018(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004189cc();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 53
    },
    "004220cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t * fcn.004220cc(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x4220e6;\n    var_8h = fcn.00420018();\n    uStack48 = 0x4221ab;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.004205e0();\n    fcn.0041d038();\n    fcn.0041cf1c();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.004220cc::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00412928(arg_8h, arg_ch);\n    fcn.0041d580();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.0041d8d8(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.0042029c();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 542
    },
    "004178c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nfloat10 fcn.004178c0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float10 fStack24;\n    \n    cVar2 = fcn.004189cc();\n    if (cVar2 == '\\x05') {\n        fcn.00416f90();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00417b48();\n        fStack24 = iVar1;\n    }\n    return fStack24;\n}\n",
        "token_count": 135
    },
    "004335a4": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004335a4(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    ulong uVar5;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar5 = (**(*in_EAX + 0x34))();\n        uVar4 = uVar5;\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar5 >> 0x20 & 0xffffff00 | uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 277
    },
    "00402eac": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00402eac(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004031a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.004031a0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 136
    },
    "00403614": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00403614(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00403660;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00403660:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 426
    },
    "0040b0fc": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b0fc(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40b161;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x463768) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040b14b;\n    }\n    fcn.00404288();\n    uVar1 = fcn.0040803c();\n    *(iVar2 * 4 + 0x463768) = uVar1;\ncode_r0x0040b14b:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40b168;\n    uStack24 = 0x40b160;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 266
    },
    "004031d0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004031d0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x461020;\n    puStack20 = &fcn.004031d0::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x403268;\n    uStack36 = 0x80000002;\n    puStack40 = 0x4031f7;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x403241;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x403284, 0, 0, &fcn.004031d0::var_8h, &fcn.004031d0::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x403248);\n        return;\n    }\n    *0x461020 = *0x461020 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 394
    },
    "00403cf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403cf0(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x463638 != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x463638 == ppiVar1) {\n            *in_FS_OFFSET = **0x463638;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x463638) {\n                *ppiVar1 = **0x463638;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00405db8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405db8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405db0();\n    if (iVar1 != 0) {\n        if (*0x46109c == -1) {\n            fcn.00404084();\n        }\n        iVar1 = fcn.00405da4();\n        if (iVar1 == 0) {\n            fcn.00404084();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x46109c, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00408344": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00408344(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14ch;\n    uint lpFileTime;\n    uint lpLocalFileTime;\n    uint lpFatTime;\n    \n    uVar1 = fcn.00404550(&var_14ch);\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1(uVar1);\n    if ((iVar2 != -1) && (sub.kernel32.dll_FindClose_1(iVar2),  (var_14ch & 0x10) == 0)) {\n        sub.kernel32.dll_FileTimeToLocalFileTime(&lpFileTime, &lpLocalFileTime);\n        iVar2 = sub.kernel32.dll_FileTimeToDosDateTime(&lpLocalFileTime, &lpFatTime + 2, &lpFatTime);\n        if (iVar2 != 0) {\n            return lpFatTime;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 216
    },
    "004083bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004083bc(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.00404550();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "00408444": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408444(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    *(param_1 + 0x10) = ~param_2 & 0x1e;\n    uVar1 = fcn.00404550(param_1 + 0x18);\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1(uVar1);\n    *(param_1 + 0x14) = iVar2;\n    if (iVar2 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n    }\n    else {\n        iVar2 = fcn.004083e0();\n        if (iVar2 != 0) {\n            fcn.004084b8();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 186
    },
    "004084b8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004084b8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != -1) {\n        sub.kernel32.dll_FindClose_1(*(in_EAX + 0x14));\n        *(in_EAX + 0x14) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00412978": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00412978(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "00416730": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416730(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00413db8();\n    if (iVar1 != -1) {\n        fcn.00413c4c();\n    }\n    iVar1 = fcn.00413db8();\n    if (iVar1 < 0) {\n        fcn.00413c00();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00416aa0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00416aa0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00410b40();\n    if (iVar1 == -1) {\n        fcn.00416a68();\n    }\n    return iVar1;\n}\n",
        "token_count": 61
    },
    "0042a4b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a4b0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY68;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42a574;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if (*(*(in_EAX + 0x10) + 0x238) - 3U < 2) {\n        puStack28 = &stack0xfffffffc;\n        fcn.0042c0a0();\n    }\n    else {\n        uVar1 = fcn.00438dd8(0x18a, param_2, 0);\n        iVar2 = sub.user32.dll_SendMessageA(uVar1);\n        if (iVar2 == -1) {\n            fcn.00405b90();\n            fcn.00414928();\n        }\n        fcn.004046dc();\n        if (iVar2 != 0) {\n            uVar1 = fcn.00404550();\n            uStackY68 = fcn.00438dd8(0x189, param_2, uVar1);\n            sub.user32.dll_SendMessageA();\n            fcn.004046dc();\n        }\n    }\n    *in_FS_OFFSET = uStackY68;\n    fcn.00404090(0x42a57b);\n    return;\n}\n",
        "token_count": 368
    },
    "0042a584": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0042a584(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42a607;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*(*(in_EAX + 0x10) + 0x238) - 3U < 2) {\n        puStack28 = &stack0xfffffffc;\n        fcn.0042c0c0();\n    }\n    else {\n        iVar1 = fcn.00403554();\n        if (iVar1 == -1) {\n            fcn.00405b90();\n            fcn.00414928();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42a60e;\n    uStack32 = 0x42a606;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 257
    },
    "0042bfbc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042bfbc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42c090;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (*(in_EAX + 0x238) - 3U < 2) {\n        arg_8h = param_2;\n        puStack32 = &stack0xfffffffc;\n        uVar1 = fcn.00438dd8(0x1a7, param_2, 0);\n        iVar2 = sub.user32.dll_SendMessageA(uVar1);\n        if ((iVar2 == -1) || (iVar2 == -2)) {\n            var_8h = *(in_EAX + 8);\n            var_4h._0_1_ = 0xb;\n            puVar3 = &var_8h;\n            uVar1 = 0;\n            fcn.00405b90();\n            fcn.0040b6e4(uVar1, puVar3);\n            fcn.00403acc();\n        }\n        else {\n            *(in_EAX + 0x214) = param_2;\n        }\n    }\n    else {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        puVar3 = &var_8h;\n        arg_8h = 0;\n        fcn.00405b90();\n        fcn.0040b6e4(arg_8h, puVar3);\n        fcn.00403acc();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack40 = 0x42c097;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 499
    },
    "00431f00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431f00(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004034e4();\n    if (cVar1 == '\\0') {\n        fcn.00432a38();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.00431fb0();\n    }\n    else {\n        fcn.00433848();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x68))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0043fa68": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fa68(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x43fa93;\n    himl = param_2;\n    fcn.00412928(&fcn.0043fa68::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x43fa9b;\n    fcn.004406fc();\n    uStack72 = 0x43fc01;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x43fab5;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.00420018();\n    uStack84 = 0x43fbe4;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x43fad4;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x43fae2;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x43faee;\n    var_10h = fcn.00420018();\n    uStack96 = 0x43fbc7;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.00421490();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.004205e0();\n                fcn.0041d580();\n                uVar2 = fcn.0041d920(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.004205e0();\n                fcn.0041d580();\n                fcn.0041d920(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.0043f63c();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x43fbce;\n    uStack100 = 0x43fbc6;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 797
    },
    "00444468": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00444468(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00444434();\n    if (iVar1 == -1) {\n        fcn.0044170c();\n    }\n    fcn.00444310();\n    return;\n}\n",
        "token_count": 63
    },
    "00445ce0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445ce0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.00445524();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.00445524();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00448fcc();\n    }\n    return uVar2;\n}\n",
        "token_count": 180
    },
    "0044f9e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0044f9e0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.0044fa98();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 128
    },
    "0044fd48": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044fd48(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "00403e88": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00403e88(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x461000;\n    do {\n        *((uVar2 & 0xff) + 0x46106c) = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x461004;\n    do {\n        *((uVar3 & 0xff) + 0x46106c) = *((uVar2 & 0xf) + 0x46108c);\n        uVar2 = uVar2 >> 4;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 219
    },
    "00407e8e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e8e(uint param_1, uint32_t param_2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    do {\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / 10;\n        puVar6 = puVar6 + -1;\n        cVar4 = uVar1 % 10;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n    } while (in_EAX != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar2 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar2)[iVar5] = 0x30;\n        }\n        puVar6[iVar2] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00408efc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00408efc(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x00408f12:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x00408f19;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x00408f12;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x00408f19:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x461174;\n            *puVar3 = param_2 % *0x461174 + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 419
    },
    "00409363": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409363(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x40934f + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x004093fa;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x00409403;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0040940a;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x00409430:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0040940a:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x004093fa:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x00409403:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x00409430;\n}\n",
        "token_count": 1142
    },
    "00450448": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450448(void)\n\n{\n    fcn.0040d134();\n    return;\n}\n",
        "token_count": 24
    },
    "004042b8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004042b8(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x004042e1:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x004042de:\n                piVar2 = piVar2 + 1;\n                goto code_r0x004042e1;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x004042de;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00404090(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004041b0(arg_8h),  -1 < iVar1)) {\n        fcn.00404180();\n    }\n    else {\n        fcn.004046dc();\n        fcn.004041b0(arg_8h);\n        fcn.004046dc();\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "00404318": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404318(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00404090(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004041b0(arg_8h),  -1 < iVar1)) {\n        fcn.00404180();\n    }\n    else {\n        fcn.004046dc();\n        fcn.004041b0(arg_8h);\n        fcn.004046dc();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "004047ac": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402804)\n\nvoid __fastcall fcn.004047ac(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (*(param_2 + -4) >> 1 != 0)) {\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 != 0) {\n            return;\n        }\n        if (*0x463008 != NULL) {\n            (**0x463008)();\n        }\n        fcn.004027d8();\n        return;\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        *in_EAX = 0;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00404880": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402804)\n\nvoid __fastcall fcn.00404880(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x004048a9:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x004048a6:\n                piVar4 = piVar4 + 2;\n                goto code_r0x004048a9;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x004048a6;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x463008 != NULL) {\n        (**0x463008)();\n    }\n    fcn.004027d8();\n    return;\n}\n",
        "token_count": 445
    },
    "004048dc": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.004048dc(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "0041583c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041583c(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.00415554();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.0041583c(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 396
    },
    "00404a2c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402804)\n\nvoid __fastcall fcn.00404a2c(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00404a2c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.004049fc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x463008 != NULL) {\n                (**0x463008)();\n            }\n            fcn.004027d8();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 512
    },
    "00404c1c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402804)\n\nvoid __fastcall fcn.00404c1c(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.00402980();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.004040e4();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.004047ac();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00404c04();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00404d38(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00404c1c();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.004056e4();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x463008 != NULL) {\n                    (**0x463008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.004027d8();\n                return;\n            }\n            fcn.0040505c();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.00402980();\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00404d38": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402804)\n\nvoid __thiscall fcn.00404d38(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.004040e4();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.004047ac();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00404c04();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00404d38();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00404c1c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.004056e4();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x463008 != NULL) {\n                (**0x463008)();\n            }\n            fcn.004027d8();\n            return;\n        }\n        do {\n            fcn.0040505c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00419364": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419364(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.004194d4();\n        fcn.004192ec();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.004194d4();\n        fcn.004192ec();\n    }\n    else {\n        fcn.004194d4();\n        fcn.004192ec();\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "004069a0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004069a0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX | (param_2 & 0xff0000) << 8;\n}\n",
        "token_count": 57
    },
    "0040b860": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040b860(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.00402960();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x461220))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040b6a8();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040b7a0(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "00434e48": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00434e48(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint var_1h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x434e63\n    switch(in_CL) {\n    case 1:\n        uVar1 = *(in_EAX + 0x44) < *(in_EDX + 0x44);\n        break;\n    case 2:\n        uVar1 = *(in_EDX + 0x44) + *(in_EDX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n        break;\n    case 3:\n        uVar1 = *(in_EAX + 0x40) < *(in_EDX + 0x40);\n        break;\n    case 4:\n        uVar1 = *(in_EDX + 0x40) + *(in_EDX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x40) + *(in_EAX + 0x48);\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa4))();\n    }\n    return uVar1;\n}\n",
        "token_count": 358
    },
    "00460490": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.00460490(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint in_stack_ffffffc0;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x460530;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    bVar3 = *0x463dec == 0;\n    *0x463dec = *0x463dec + -1;\n    puVar1 = &stack0xfffffffc;\n    if (bVar3) {\n        *0x463de8 = 0;\n        fcn.00402aac();\n        iVar2 = fcn.0040c3c4();\n        puVar1 = puStack12;\n        if (iVar2 == 0) {\n            sub.gdi32.dll_SelectPalette(0, 0, 0);\n            iVar2 = sub.kernel32.dll_GetLastError_1();\n            puVar1 = puStack12;\n            if (iVar2 == 6) {\n                sub.kernel32.dll_GetLastError_1();\n                in_stack_ffffffc0 = sub.kernel32.dll_CreateThread(0, 0, 0x45a46c, 0, 0, 0x463df0);\n                sub.kernel32.dll_WaitForSingleObject(in_stack_ffffffc0, 0xffffffff);\n                puVar1 = puStack12;\n            }\n        }\n    }\n    puStack12 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffc0;\n    fcn.00404090(0x460537);\n    return;\n}\n",
        "token_count": 402
    },
    "004057a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057a0(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 40
    },
    "00401428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401428(int32_t *param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    \n    puVar3 = *in_EAX;\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    do {\n        puVar1 = *puVar3;\n        if (*param_1 == puVar3[2] + puVar3[3]) {\n            fcn.00401410();\n            *param_1 = puVar3[2];\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        else if (*param_1 + param_1[1] == puVar3[2]) {\n            fcn.00401410();\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        puVar3 = puVar1;\n    } while (in_EAX != puVar1);\n    cVar2 = fcn.004013e0();\n    if (cVar2 == '\\0') {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "0040152c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040152c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (in_EAX < 0x100000) {\n        uVar3 = 0x100000;\n    }\n    else {\n        uVar3 = in_EAX + 0xffffU & 0xffff0000;\n    }\n    param_2[1] = uVar3;\n    iVar2 = sub.kernel32.dll_VirtualAlloc(0, uVar3, 0x2000, 1);\n    *param_2 = iVar2;\n    if (iVar2 != 0) {\n        cVar1 = fcn.004013e0();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_2, 0, 0x8000);\n            *param_2 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "004016c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016c0(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    \n    uVar5 = in_EAX & 0xfffff000;\n    uVar3 = in_EAX + param_2 + 0xfff & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar3 - uVar5;\n    puVar6 = *0x4635e8;\n    do {\n        if (puVar6 == 0x4635e8) {\n            return;\n        }\n        uVar1 = puVar6[2];\n        uVar4 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar4 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar3 < puVar6[3] + uVar1) {\n            uVar7 = uVar3;\n        }\n        if (uVar4 < uVar7) {\n            puVar8 = uVar7 - uVar4;\n            iVar2 = sub.kernel32.dll_VirtualAlloc(uVar4, puVar8, 0x1000, 4);\n            if (iVar2 == 0) {\n                *puVar8 = 0;\n                return;\n            }\n        }\n        puVar6 = *puVar6;\n    } while( true );\n}\n",
        "token_count": 383
    },
    "00401754": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401754(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    \n    uVar5 = in_EAX + 0xfffU & 0xfffff000;\n    uVar4 = in_EAX + param_2 & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar4 - uVar5;\n    for (puVar6 = *0x4635e8; puVar6 != 0x4635e8; puVar6 = *puVar6) {\n        uVar1 = puVar6[2];\n        uVar3 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar3 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar4 < puVar6[3] + uVar1) {\n            uVar7 = uVar4;\n        }\n        if (uVar3 < uVar7) {\n            iVar2 = sub.kernel32.dll_VirtualFree(uVar3, uVar7 - uVar3, 0x4000);\n            if (iVar2 == 0) {\n                *0x4635c4 = 2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "00401bb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401bb8(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX == *0x463614) {\n        *0x463614 = in_EAX[1];\n    }\n    piVar1 = in_EAX[1];\n    iVar2 = in_EAX[2];\n    if (iVar2 < 0x1001) {\n        if (in_EAX != piVar1) {\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + 3;\n            }\n            *(*0x463620 + -0xc + (iVar2 >> 2) * 4) = piVar1;\n            iVar2 = *in_EAX;\n            *piVar1 = iVar2;\n            *(iVar2 + 4) = piVar1;\n            return;\n        }\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + 3;\n        }\n        *(*0x463620 + -0xc + (iVar2 >> 2) * 4) = 0;\n    }\n    else {\n        iVar2 = *in_EAX;\n        *piVar1 = iVar2;\n        *(iVar2 + 4) = piVar1;\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00401c1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00401c1c(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = *0x463624;\n    while( true ) {\n        if (puVar1 == 0x463624) {\n            *0x4635c4 = 3;\n            return NULL;\n        }\n        if ((puVar1[2] <= in_EAX) && (in_EAX < puVar1[2] + puVar1[3])) break;\n        puVar1 = *puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 133
    },
    "00401ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401ca0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    \n    if (0xb < param_2) {\n        *in_EAX = param_2 | 2;\n        fcn.00401c7c();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n    }\n    *(in_EAX + param_2) = *(in_EAX + param_2) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 132
    },
    "00401d38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d38(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = *in_EAX;\n    if ((uVar1 & 0x80000000) != 0) {\n        uVar3 = uVar1 & 0x7ffffffc;\n        in_EAX = in_EAX + uVar3;\n        uVar1 = *in_EAX;\n    }\n    if ((uVar1 & 2) == 0) {\n        fcn.00401bb8();\n        uVar3 = uVar3 + in_EAX[2];\n        puVar2 = in_EAX + in_EAX[2];\n        *puVar2 = *puVar2 & 0xfffffffe;\n    }\n    return uVar3;\n}\n",
        "token_count": 206
    },
    "00401e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e20(uint param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t **in_EAX;\n    \n    in_EAX[2] = param_2;\n    *(in_EAX + param_2 + -4) = param_2;\n    if (param_2 < 0x1001) {\n        if (param_2 < 0) {\n            param_2 = param_2 + 3;\n        }\n        ppiVar1 = *(*0x463620 + -0xc + (param_2 >> 2) * 4);\n        if (ppiVar1 == NULL) {\n            *(*0x463620 + -0xc + (param_2 >> 2) * 4) = in_EAX;\n            in_EAX[1] = in_EAX;\n            *in_EAX = in_EAX;\n        }\n        else {\n            piVar2 = *ppiVar1;\n            in_EAX[1] = ppiVar1;\n            *in_EAX = piVar2;\n            *ppiVar1 = in_EAX;\n            piVar2[1] = in_EAX;\n        }\n    }\n    else {\n        if ((0x3bff < param_2) && (cVar4 = fcn.00401d70(),  cVar4 != '\\0')) {\n            return;\n        }\n        ppiVar1 = *0x463614;\n        piVar2 = **0x463614;\n        ppiVar3 = in_EAX;\n        in_EAX[1] = *0x463614;\n        *0x463614 = ppiVar3;\n        *in_EAX = piVar2;\n        *ppiVar1 = in_EAX;\n        piVar2[1] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "00401fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401fe0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (in_EAX < 0) {\n        in_EAX = in_EAX + 3;\n    }\n    iVar1 = in_EAX >> 2;\n    if (iVar1 < 0x401) {\n        do {\n            iVar2 = *(*0x463620 + -0xc + iVar1 * 4);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n    }\n    return iVar2;\n}\n",
        "token_count": 162
    },
    "004028a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004028a4(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x004028ba:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x004028c5;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x004028ba;\n    param_1 = 0;\ncode_r0x004028c5:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "004028e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set current directory",
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.004028e8(void)\n\n{\n    char in_AL;\n    uint uStack544;\n    uchar *puStack540;\n    char cStack536;\n    uchar uStack535;\n    uchar uStack534;\n    uchar auStack291 [20];\n    uchar auStack271 [263];\n    \n    if (in_AL != '\\0') {\n        cStack536 = in_AL + '@';\n        uStack535 = 0x3a;\n        uStack534 = 0;\n        puStack540 = auStack271;\n        uStack544 = 0x105;\n        sub.kernel32.dll_GetCurrentDirectoryA();\n        sub.kernel32.dll_SetCurrentDirectoryA(&uStack544);\n    }\n    sub.kernel32.dll_GetCurrentDirectoryA(0x105, &uStack544);\n    if (in_AL != '\\0') {\n        sub.kernel32.dll_SetCurrentDirectoryA(auStack291);\n    }\n    fcn.00404300();\n    return;\n}\n",
        "token_count": 206
    },
    "00402980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402980(uint32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar1 = param_1 >> 2;\n    if (in_EAX < param_2) {\n        puVar2 = (param_1 - 4) + in_EAX;\n        param_2 = (param_1 - 4) + param_2;\n        if (-1 < iVar1) {\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *param_2 = *puVar2;\n                puVar2 = puVar2 + -1;\n                param_2 = param_2 + -1;\n            }\n            puVar3 = puVar2 + 3;\n            puVar4 = param_2 + 3;\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n            }\n        }\n    }\n    else if ((param_2 != in_EAX) && (-1 < iVar1)) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "00402c28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c28(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    \n    uVar3 = *param_2;\n    uVar2 = *in_EAX + uVar3;\n    if (((!CARRY1(*in_EAX, uVar3)) && (uVar2 <= param_1)) ||\n       (uVar3 = param_1 - *in_EAX,  uVar2 = param_1,  *in_EAX <= param_1 && uVar3 != 0)) {\n        uVar1 = *in_EAX;\n        *in_EAX = uVar2;\n        puVar5 = param_2 + 1;\n        puVar6 = in_EAX + uVar1 + 1;\n        for (uVar4 = uVar3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "00403320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403320(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 33
    },
    "00403328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403328(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004033dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004033dc(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004033f3. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004033f5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 360
    },
    "004034a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004034a0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 252
    },
    "00403524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403524(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 235
    },
    "00403580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403580(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "004035c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004035c4(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "00403af4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403af4(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x403b3f;\n    piVar3 = fcn.00405dfc();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00403358();\n        fcn.004036dc();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 214
    },
    "00403e18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403e18(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00405b90();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 74
    },
    "00403e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403e3c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00405b90();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 75
    },
    "00403e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403e64(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 122
    },
    "004040b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004040b4(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.004026f4();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "00404154": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00404154(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.004026d4();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 117
    },
    "00404288": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404288(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.00404154();\n    if (param_2 != NULL) {\n        fcn.00402980();\n    }\n    fcn.00404090();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 181
    },
    "00404300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404300(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.00404154();\n    if (param_2 != NULL) {\n        fcn.00402980();\n    }\n    fcn.00404090();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 174
    },
    "00404358": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404358(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    if (*in_EAX != 0) {\n        if (param_2 == *in_EAX) {\n            fcn.004046dc();\n        }\n        else {\n            fcn.004046dc();\n        }\n        fcn.00402980();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.00404154(param_2);\n            fcn.00402980();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.004026f4();\n        }\n    }\n    return;\n}\n",
        "token_count": 331
    },
    "0040439c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040439c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                iVar3 = fcn.00404154();\n                fcn.00402980();\n                fcn.00402980();\n                if (iVar3 != 0) {\n                    *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                }\n                fcn.004040e4();\n                return;\n            }\n            fcn.004040e4();\n        }\n        if (param_1 == 0) {\n            return;\n        }\n        iVar3 = param_1;\n        if (*in_EAX != 0) {\n            if (param_1 == *in_EAX) {\n                fcn.004046dc();\n            }\n            else {\n                fcn.004046dc();\n            }\n            fcn.00402980();\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.00404154(iVar3);\n            fcn.00402980();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.004026f4();\n        }\n    }\n    return;\n}\n",
        "token_count": 491
    },
    "00404410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404410(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar3 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    iVar2 = param_2;\n    if ((piVar1 != NULL) && (*in_EAX == piVar1)) {\n        iVar2 = param_2 + -1;\n        piVar3 = piVar1;\n    }\n    do {\n        if ((*(&stack0x00000000 + iVar2 * 4) != NULL) && (piVar3 == *(&stack0x00000000 + iVar2 * 4))) {\n            piVar3 = NULL;\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (piVar3 == NULL) {\n        iStack24 = fcn.00404154();\n    }\n    else {\n        fcn.004046dc();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar3 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.00402980();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar3 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.004040e4();\n    }\n    // WARNING: Could not recover jumptable at 0x00404497. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 461
    },
    "004045b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045b0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.00404090();\n    }\n    else {\n        fcn.00404180();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004045f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045f0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004045a0();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.00402980();\n            fcn.004046dc();\n        }\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00404638": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404638(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.004046dc();\n        fcn.00402980();\n        fcn.00402980();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00404788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404788(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 127
    },
    "004048bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048bc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4);\n    }\n    if (arg_8h < 1) {\n        fcn.00404770(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004041d0(arg_8h),  0 < iVar1)) {\n        fcn.0040485c();\n    }\n    else {\n        fcn.004049b8();\n        fcn.004041d0(arg_8h);\n        fcn.004049b8();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "004049b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004049b8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00404748();\n        iVar1 = fcn.004048dc();\n        if (0 < iVar1) {\n            fcn.00402980();\n        }\n    }\n    fcn.00404760();\n    return;\n}\n",
        "token_count": 94
    },
    "004049fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004049fc(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404a2c();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00404ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404ac0(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404b0c();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 125
    },
    "00404e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00404e34(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 100
    },
    "00405014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405014(void)\n\n{\n    fcn.00404e88(&stack0x00000004);\n    return;\n}\n",
        "token_count": 31
    },
    "00405084": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00405084(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 84
    },
    "00405b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405b90(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack1032 [1024];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.004050fc(*(in_EAX + 4), auStack1032, 0x400);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.00404180();\n        }\n        else {\n            fcn.00404288();\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00405ee8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ee8(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 113
    },
    "00407be4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407be4(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.00404350();\n    fcn.004046dc();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            uVar1 = uVar1 + 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00407ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ec4(uint param_1, uint param_2)\n\n{\n    fcn.00407e78(param_2);\n    fcn.00404180();\n    return;\n}\n",
        "token_count": 46
    },
    "00407ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ee4(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00407f18(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 515
    },
    "00407fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407fb0(uint arg_8h)\n\n{\n    fcn.00407ee4();\n    fcn.00404180();\n    return;\n}\n",
        "token_count": 39
    },
    "00407fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407fd8(uint param_1)\n\n{\n    fcn.00407e78(param_1);\n    fcn.00404180();\n    return;\n}\n",
        "token_count": 41
    },
    "00408074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408074(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404e58();\n    if (iVar1 == 0) {\n        fcn.00405014(1);\n        fcn.004040e4();\n    }\n    iVar1 = fcn.00404e58();\n    if (iVar1 == 0) {\n        fcn.00405014(1);\n        fcn.004040e4();\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00408104": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00408104(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if (-1 < in_EDX) {\n        iVar1 = in_EDX + 1;\n        do {\n            in_EAX = fcn.00407d8c();\n            if (in_EAX != '\\0') {\n                _auStack8 = 0x1000000;\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return in_EAX & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 194
    },
    "00408140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00408140(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.004095b4();\n    if (uVar1 == '\\0') {\n        fcn.00408074();\n        fcn.00404e60();\n        uVar1 = fcn.00408104(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.00404e60();\n            uVar1 = fcn.00408104(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x4081c0;\n    }\n    return uVar1;\n}\n",
        "token_count": 264
    },
    "00408304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00408304(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    uVar1 = sub.kernel32.dll_SetFilePointer();\n    return CONCAT44(arg_ch, uVar1);\n}\n",
        "token_count": 68
    },
    "004083e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.004083e0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iStack28;\n    int32_t iStack20;\n    uint *puStack16;\n    uint auStack12 [2];\n    \n    do {\n        puStack16 = auStack12;\n        if ((*(in_EAX + 0x18) & *(in_EAX + 0x10)) == 0) {\n            iStack20 = in_EAX + 0x2c;\n            sub.kernel32.dll_FileTimeToLocalFileTime();\n            iStack28 = in_EAX + 2;\n            sub.kernel32.dll_FileTimeToDosDateTime(&iStack20);\n            *(in_EAX + 4) = *(in_EAX + 0x38);\n            *(in_EAX + 8) = *(in_EAX + 0x18);\n            fcn.00404300();\n            uVar2 = 0;\n            goto code_r0x0040843f;\n        }\n        puStack16 = in_EAX + 0x18;\n        auStack12[0] = *(in_EAX + 0x14);\n        iVar1 = sub.kernel32.dll_FindNextFileA();\n    } while (iVar1 != 0);\n    uVar2 = sub.kernel32.dll_GetLastError_1();\ncode_r0x0040843f:\n    return CONCAT44(iStack28, uVar2);\n}\n",
        "token_count": 319
    },
    "0040869c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040869c(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.00404550(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.00404180();\n    return;\n}\n",
        "token_count": 84
    },
    "004086d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004086d8(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.00404e34(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.00404e34(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 248
    },
    "0040894c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040894c(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.004026d4();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 69
    },
    "00408e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e3c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint var_1008h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404350();\n    if (iVar1 < 0xc00) {\n        uVar2 = fcn.00404350();\n        iVar3 = fcn.00408a30(arg_8h, in_ECX, uVar2);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar3 = fcn.00404350();\n        iVar1 = iVar3;\n    }\n    if (iVar3 < iVar1 + -1) {\n        fcn.00404180();\n    }\n    else {\n        for (; iVar1 + -1 <= iVar3; iVar1 = iVar1 * 2) {\n            fcn.00404090();\n            fcn.004046dc();\n            uVar2 = fcn.00404350();\n            iVar3 = fcn.00408a30(arg_8h, in_ECX, uVar2);\n        }\n        fcn.004046dc();\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00409502": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409502(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0040951e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040951e(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 169
    },
    "00409554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409554(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00408f40(0, 0xf, 0);\n    fcn.00404180();\n    return;\n}\n",
        "token_count": 55
    },
    "00409584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409584(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00408f40(0, 0, 0);\n    fcn.00404180();\n    return;\n}\n",
        "token_count": 54
    },
    "004095d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004095d0(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00404550();\n    cVar1 = fcn.00409440();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "004095fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004095fc(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00404550();\n    cVar1 = fcn.00409440();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00409644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409644(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x46117c);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x461180;\n        iVar2 = -(uVar1 / *0x461180);\n    }\n    else {\n        iVar2 = uVar1 / *0x461180;\n        uVar3 = uVar1 % *0x461180;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 232
    },
    "00409688": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00409688(double *arg_8h, uint arg_ch)\n\n{\n    double *in_EAX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_EAX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = ((in_EAX & 0xffff) * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x4096f4;\n        var_1h._0_1_ = 1;\n        in_EAX = arg_8h;\n    }\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 238
    },
    "004096f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004096f8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409644(arg_ch, arg_10h, &var_4h);\n    fcn.00407ae4(arg_ch);\n    fcn.00407ae4(in_EDX);\n    fcn.00407ae4(arg_8h);\n    return;\n}\n",
        "token_count": 108
    },
    "00409858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409858(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.00409644(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.00407ae4(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.00407ae4(&var_eh);\n        fcn.00407ae4(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.00409754();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4610da + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 602
    },
    "004099c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004099c4(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00409644(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 70
    },
    "004099ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t fcn.004099ec(void)\n\n{\n    int16_t iStack20;\n    \n    iStack20 = *0x10 + -0x10;\n    sub.kernel32.dll_GetLocalTime();\n    return iStack20;\n}\n",
        "token_count": 53
    },
    "00409a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a00(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.00402980();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 129
    },
    "00409a64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409a64(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.00408a30(1, &var_20h, 4);\n    fcn.00409a00(arg_8h_00);\n    return;\n}\n",
        "token_count": 151
    },
    "0040a578": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a578(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.00409dc4(&stack0xfffffffc);\n    }\n    else {\n        fcn.00409dc4(&stack0xfffffffc);\n    }\n    fcn.00404180();\n    return;\n}\n",
        "token_count": 104
    },
    "0040a6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a6a0(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack32 = 0x40a719;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.0040a5e8();\n        puStack40 = &fcn.0040a6a0::var_8h;\n        fcn.00404350();\n        fcn.004045b0();\n        iVar2 = fcn.00407d54();\n        puVar1 = puStack28;\n        if (iVar2 == 0) {\n            iVar2 = fcn.00404350();\n            *param_2 = *param_2 + iVar2;\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = puStack40;\n    uStack32 = 0x40a720;\n    iStack36 = 0x40a718;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 343
    },
    "0040ae14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ae14(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040a8a8();\n    if (cVar1 == '\\0') {\ncode_r0x0040ae5f:\n        uVar3 = fcn.0040ade0();\n    }\n    else {\n        iVar2 = fcn.00404350();\n        if (0 < iVar2) {\n            cVar1 = fcn.0040abec();\n            if (cVar1 == '\\0') goto code_r0x0040ae5f;\n        }\n        if (dStack28 < *0x40ae9c) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 229
    },
    "0040aea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040aea0(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40aec4;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40aee3;\n    fcn.00404180();\n    return;\n}\n",
        "token_count": 235
    },
    "0040aeec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aeec(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.004040e4();\n    }\n    else {\n        fcn.00404180();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0040af9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040af9c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40b0af;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040af60(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.004040e4();\n        fcn.0040af60(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.004040e4();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040af60(&var_14h, 6, &stack0xfffffffc);\n        fcn.004040e4();\n        fcn.0040af60(&var_18h, 6, &stack0xfffffffc);\n        fcn.004040e4();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.004040b4(0x40b0b6);\n    return;\n}\n",
        "token_count": 439
    },
    "0040b174": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b174(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40b20b;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040aeec(puVar3);\n    iVar1 = fcn.0040803c();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040b0c0, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x46376c;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040b0fc;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040b0fc, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00404090(0x40b212);\n    return;\n}\n",
        "token_count": 402
    },
    "0040b458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b458(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x0040b4ce;\n        }\n    }\n    iVar3 = *0x463664;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040b44c();\ncode_r0x0040b4ce:\n    fcn.0040c590(iVar3);\n    fcn.004087b0();\n    var_340h = 0x40b5d8;\n    var_338h = 0x40b5d8;\n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.00404550();\n        iVar3 = fcn.0040874c();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x40b5dc;\n        }\n    }\n    uVar4 = fcn.004050fc(*(*0x46295c + 4), &var_312h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.004032a8();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.00408de8(4, &var_358h);\n    fcn.0040874c();\n    return;\n}\n",
        "token_count": 696
    },
    "0040b6a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b6a8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.004040e4();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0040b6e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6e4(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40b6f8;\n        fcn.00403664();\n    }\n    uStack44 = 0x40b73e;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040b6e4::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.00408e28(arg_8h_00);\n    fcn.004040e4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40b745;\n    iStack48 = 0x40b73d;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 264
    },
    "0040b764": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b764(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00405b90();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 129
    },
    "0040b7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b7a0(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40b7b6;\n        fcn.00403664();\n    }\n    uStack48 = 0x40b80c;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040b7a0::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.00405b90();\n    fcn.00408e28(arg_8h_00);\n    fcn.004040e4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40b813;\n    iStack52 = 0x40b80b;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 280
    },
    "0040b934": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040b934(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40b9d0;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.00405b90();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.00404128();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.00405b90();\n    fcn.0040b6e4(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40b9d7;\n    fcn.00404090();\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 391
    },
    "0040b9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b9f0(uint arg_8h)\n\n{\n    fcn.0040b934();\n    fcn.0040b9e0();\n    return;\n}\n",
        "token_count": 44
    },
    "0040ba24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040ba24(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040ba88:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040ba91;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040ba88;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040ba91:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 550
    },
    "0040bef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040bef8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack40 = 0x40bfce;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_4h = 0xffffffff;\n    puStack48 = 0x40bf25;\n    fcn.00404128();\n    puStack48 = 0x40bf2d;\n    fcn.004045a0();\n    puStack48 = &fcn.0040bef8::var_ch;\n    uStack52 = 0x40bf39;\n    uStack52 = fcn.00404550();\n    puStack56 = 0x40bf3f;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40bf4c;\n        pBlock = fcn.004026d4();\n        uStack60 = 0x40bfb1;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.00404550(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40bfe0, &fcn.0040bef8::lplpBuffer, &fcn.0040bef8::puLen);\n            if (iVar1 != 0) {\n                var_4h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.004026f4(0x40bfb8);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40bfd5;\n    puStack48 = 0x40bfcd;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 598
    },
    "0040c5f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid fcn.0040c5f8(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint lpLCData;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40c65c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    uVar1 = 7;\n    sub.kernel32.dll_GetLocaleInfoA_1();\n    fcn.00404300();\n    sub.kernel32.dll_GetACP(0);\n    fcn.0040803c();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00404090(0x40c663, uVar1);\n    return;\n}\n",
        "token_count": 188
    },
    "0040cbd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040cbd8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40cc68;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 == 0) {\n        iVar2 = fcn.0040b764();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        var_10h = iVar1;\n        fcn.0040aea0();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar2 = fcn.0040b7a0(1, &var_10h);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    fcn.00403acc();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40cc6f;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 339
    },
    "0040ce74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ce74(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00403328();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 287
    },
    "0040d200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d200(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40d20f;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40d272;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40d254;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.00404550();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 249
    },
    "0040e57c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e57c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40e60b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.0041026c();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.0041026c();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00405b90();\n    fcn.0040b6e4(arg_8h, arg_ch);\n    fcn.00403acc();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40e612;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 309
    },
    "0040e66c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e66c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40e6fb;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.0041026c();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.0041026c();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00405b90();\n    fcn.0040b6e4(arg_8h, arg_ch);\n    fcn.00403acc();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40e702;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 309
    },
    "0040ea58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ea58(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0040ea88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ea88(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0040ea88(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0040eae4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040eae4(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.0040e9b0();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.0040e9b0();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0040e9b0();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0040ea58(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.0040e9b0();\n                fcn.0040ecdc();\n            }\n            cVar1 = fcn.0040ea88(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.0040e9b0();\n    return;\n}\n",
        "token_count": 647
    },
    "0040ecf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ecf8(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "0040ed28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ed28(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0040ed28(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0040ed84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ed84(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.0040e9b0();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.0040e9b0();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0040e9b0();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.0040e708();\n        }\n        fcn.0040ecdc();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0040ecf8(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.0040e9b0();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.0040e9b0();\n                (*var_308h)();\n            }\n            cVar1 = fcn.0040ed28(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.0040e9b0();\n    }\n    return;\n}\n",
        "token_count": 831
    },
    "0040f17c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f17c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x40f23b;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.0040f17c::pvarg;\n    puStack56 = 0x40f1a7;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x40f219;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x462874)(&fcn.0040f17c::pvarg);\n    fcn.0040e9bc();\n    arg_8h = &fcn.0040f17c::var_14h;\n    fcn.00404880();\n    fcn.0040496c(arg_8h);\n    fcn.00404318();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040ecdc(0x40f220);\n    return;\n}\n",
        "token_count": 359
    },
    "0040f248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f248(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.0040f248::pvarg;\n    puStack36 = 0x40f25d;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x40f29e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040f004();\n    (**0x463814)();\n    fcn.0040f330();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x40f2a5;\n    uStack40 = 0x40f29d;\n    fcn.0040ecdc();\n    return;\n}\n",
        "token_count": 213
    },
    "0040f874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f874(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x40f91e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.0040f874::pvarg;\n    puStack52 = 0x40f89c;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x40f901;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x462874)(&fcn.0040f874::pvarg);\n    fcn.0040e9bc();\n    fcn.00404880();\n    fcn.0040496c(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.0040ecdc(0x40f908, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 361
    },
    "0040f92c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f92c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.0040f92c::pvarg;\n    puStack36 = 0x40f941;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x40f982;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040f004();\n    (**0x463814)();\n    fcn.0040fa58();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x40f989;\n    uStack40 = 0x40f981;\n    fcn.0040ecdc();\n    return;\n}\n",
        "token_count": 210
    },
    "0041026c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.0041026c(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x410392;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x4102b0;\n        puStack540 = &stack0xfffffffc;\n        fcn.004040e4();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x4102c8;\n        puStack540 = &stack0xfffffffc;\n        fcn.004040e4();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x4102e0;\n        puStack540 = &stack0xfffffffc;\n        fcn.004040e4();\n    }\n    else {\n        cVar1 = fcn.004106c8();\n        if (cVar1 == '\\0') {\n            fcn.00407fd8();\n            puStack552 = 0x410353;\n            fcn.0040439c();\n        }\n        else {\n            puStack552 = &fcn.0041026c::var_104h;\n            fcn.004032a8();\n            fcn.004028a4();\n            fcn.004042f4();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.0040439c();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.0040439c();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x410399;\n    iStack548 = 0x410391;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 495
    },
    "004104d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004104d4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.004106c8(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.00410648();\n    return;\n}\n",
        "token_count": 125
    },
    "00410528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00410528(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x46136a + (in_ECX >> 0x18));\n}\n",
        "token_count": 107
    },
    "0041059c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041059c(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x4105a7;\n    *NULL = fcn.004036cc();\n    uStack16 = 0x463824;\n    uStack20 = 0x4105b7;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x463820 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x461328;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x410606;\n    uStack24 = 0x463824;\n    uStack28 = 0x4105fe;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 282
    },
    "00410780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410780(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x410856;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x463824;\n    puStack308 = 0x4107b3;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack312 = 0x410839;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.00404e60();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x463820 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x461328)) {\n                fcn.004032a8();\n                fcn.004042f4();\n                cVar2 = fcn.00407cc4();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x410840;\n    uStack312 = 0x463824;\n    uStack316 = 0x410838;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 481
    },
    "00410ce4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410ce4(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 331
    },
    "00410d38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410d38(void)\n\n{\n    fcn.0040432c();\n    fcn.00410ce4();\n    return;\n}\n",
        "token_count": 34
    },
    "00410d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410d80(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00410d6c();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 119
    },
    "00410e44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410e44(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x410f0a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.00404318();\n        fcn.00410e18();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.004047ac();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x410f11;\n    uStack36 = 0x410f09;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 403
    },
    "00411124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411124(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00411110();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 116
    },
    "00411164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411164(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 195
    },
    "0041119c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041119c(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "004111d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004111d8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.004056e4();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00412a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00412a48(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.00413d5c();\n            cVar1 = fcn.0040356c();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.0040356c(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 208
    },
    "00412c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412c78(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x412d13;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.004032a8();\n    fcn.004042f4();\n    iVar1 = fcn.00412bd4();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040b7a0(0, &var_10ch);\n        fcn.00403acc();\n    }\n    fcn.00413c00();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x412d1a;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 299
    },
    "00412e48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412e48(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    uVar1 = fcn.00403328();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar2 = fcn.00412b18();\n    fcn.00413c00();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 216
    },
    "00412fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412fa0(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x413023;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.004032a8();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00405b90();\n    fcn.0040b6e4(arg_8h_00, arg_ch);\n    fcn.00403acc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x41302a;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 281
    },
    "004130f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004130f8(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "004131b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004131b0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "004133fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004133fc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41345c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00405b90();\n    fcn.0040b6e4(arg_8h, arg_ch);\n    fcn.00403acc();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x413463;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 227
    },
    "004136ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004136ec(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403664();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004137cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004137cc(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00407cc4();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "0041380c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041380c(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t *in_ECX;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                var_5h = 1;\n                in_EAX = fcn.004040e4();\n                goto code_r0x00413843;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    var_5h = 0;\ncode_r0x00413843:\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 205
    },
    "00413a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413a74(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x413b0a;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x412628) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004032e4();\n        fcn.00413a74(arg_8h);\n        fcn.004032a8();\n        fcn.004042f4();\n        fcn.004050ac(0);\n        fcn.004050fc();\n        fcn.0041390c();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x413b11;\n    uStack280 = 0x413b09;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 260
    },
    "00413cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413cb0(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00413cac();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040b6e4(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00404084();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00403aed. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x463014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 196
    },
    "00413f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413f70(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    uVar1 = fcn.00403328();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "00413fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413fc4(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x413fcf;\n    *NULL = fcn.004036cc();\n    puStack16 = 0x413fdd;\n    var_5h._0_1_ = extraout_DL;\n    fcn.004140c8();\n    iStack20 = 0x414026;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00403358();\n    fcn.00403348();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41402d;\n    iStack20 = 0x414019;\n    fcn.0041412c();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x414025;\n    sub.kernel32.dll_DeleteCriticalSection_1();\n    return;\n}\n",
        "token_count": 267
    },
    "0041412c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041412c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "00414314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414314(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x4143ca;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.00404128();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.004032a8();\n        fcn.004042f4();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.004032a8();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040b7a0(1, &var_114h);\n    fcn.00403acc();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x4143d1;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 348
    },
    "0041465c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041465c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x414703;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x414686;\n    fcn.004147ac();\n    uStack48 = 0x4146e6;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x4146ed;\n    uStack48 = 0x4146e5;\n    fcn.00414868();\n    return;\n}\n",
        "token_count": 356
    },
    "0041481c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041481c(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00415284;\n    fcn.004147c4(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "0041487c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041487c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x414911;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.0040449c();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x414918;\n    uStack44 = 0x414910;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 335
    },
    "00414928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414928(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00414924();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040b6e4(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00404084();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00403aed. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x463014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 195
    },
    "004149b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004149b8(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x414a90;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x4149e6;\n    fcn.004147ac();\n    uStack52 = 0x414a6e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x414a75;\n    uStack52 = 0x414a6d;\n    fcn.00414868();\n    return;\n}\n",
        "token_count": 356
    },
    "00414b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414b00(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x414c0b;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.00404128();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00404350();\n            fcn.00404350();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404180();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = fcn.00404350();\n            if (iVar2 != 0) {\n                fcn.00402980();\n            }\n            iVar2 = fcn.00404350();\n            if (iVar2 != 0) {\n                fcn.00402980();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x414c12;\n    uStack56 = 0x414c0a;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 426
    },
    "00414c28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414c28(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x414ca0;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x414ca7;\n    uStack36 = 0x414c9f;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 266
    },
    "00414cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414cb4(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    uStack44 = 0x414d77;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_4h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00415314();\n            fcn.00404278();\n            iVar1 = fcn.0040c3c4();\n            if (iVar1 != 0) {\n                fcn.004045b0(&fcn.00414cb4::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x00414d54;\n            }\n            var_8h = var_8h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_8h = -1;\ncode_r0x00414d54:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x414d7e;\n    uStack44 = 0x414d6e;\n    fcn.004040b4();\n    uStack44 = 0x414d76;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 478
    },
    "00414e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414e40(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x414edd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x414e68;\n    fcn.004147ac();\n    uStack40 = 0x414ec0;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.0041599c();\n    fcn.00404180();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x414ec7;\n    uStack40 = 0x414ebf;\n    fcn.00414868();\n    return;\n}\n",
        "token_count": 301
    },
    "00414eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414eec(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x414f8d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x414f1b;\n        fcn.004147ac();\n        uStack44 = 0x414f70;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x414f77;\n        uStack48 = 0x414f6f;\n        fcn.00414868();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x414f94;\n    uStack32 = 0x414f8c;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 373
    },
    "00414fd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414fd4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x415078;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x414ffb;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00417b8c();\n    puStack32 = 0x415003;\n    fcn.004147ac();\n    uStack36 = 0x415053;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.00416c28();\n        if (cVar1 != '\\0') break;\n        fcn.0041882c();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41505a;\n    uStack36 = 0x415052;\n    fcn.00414868();\n    return;\n}\n",
        "token_count": 377
    },
    "00415284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00415284(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4152fa;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.004193d8();\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00419480();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.004193e0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x415301;\n    uStack36 = 0x4152f9;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 256
    },
    "00415654": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415654(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 38
    },
    "0041599c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041599c(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 56
    },
    "00415a88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415a88(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.004032a8();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040b7a0(0, &var_8h);\n    fcn.00403acc();\n    return;\n}\n",
        "token_count": 117
    },
    "00415d2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415d2c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x415d48;\n    fcn.004163b0(0x1000);\n    uStackY28 = 0x415d7c;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.004183e4();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x415d83;\n    uStackY28 = 0x415d7b;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 193
    },
    "00415d8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415d8c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "00415e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415e50(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403664();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.00415e94(0, in_EAX & 0xffff0000 | arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 162
    },
    "0041622c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041622c(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403664();\n        in_DL = extraout_DL;\n    }\n    fcn.00403328();\n    fcn.00404550();\n    fcn.004162f4(arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 146
    },
    "00416284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416284(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x4162e7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00405b90();\n    fcn.0040b6e4(arg_8h_00, arg_ch);\n    fcn.00403acc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack28 = 0x4162ee;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 266
    },
    "004163b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004163b0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403664();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.004026d4();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "004164fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004164fc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403664();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.004040e4();\n    fcn.004040e4();\n    if (in_DL != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 223
    },
    "00416a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416a74(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040b7a0(0, auStack12);\n    fcn.00403acc();\n    return;\n}\n",
        "token_count": 65
    },
    "00416d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416d40(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    uStack36 = 0x416e4f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar4 = in_EAX[0xc];\n    if (iVar4 != 0) {\n        uStack48 = 0x416e32;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        var_ch = *(iVar4 + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < var_ch + -1) {\n            do {\n                puStack32 = puVar1;\n                puVar3 = fcn.00413d5c();\n                fcn.00404128();\n                (**(*in_EAX + 0x20))();\n                iVar4 = fcn.00416630();\n                fcn.00413d5c();\n                fcn.00416cc4();\n                if ((iVar4 == 0) && (cVar2 = fcn.00416554(),  cVar2 != '\\0')) {\n                    fcn.00413d5c();\n                    fcn.00414040();\n                    fcn.00413e50();\n                }\n                else {\n                    (***puVar3)();\n                }\n                var_ch = var_ch + -1;\n                puVar1 = puStack32;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x416e39;\n        uStack48 = 0x416e31;\n        fcn.00416e84();\n        return;\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x416e56;\n    uStack36 = 0x416e4e;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 537
    },
    "00416ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00416ec0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.004032a0();\n    do {\n        if (iVar2 == *0x411b04) {\n            if (*(in_EAX + 0x74) == 0) {\n                uVar4 = fcn.00413468();\n            }\n            else {\n                uVar4 = fcn.00413368();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.004133f0();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.004032bc();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004032e4();\n    } while( true );\n}\n",
        "token_count": 301
    },
    "00417084": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417084(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x417097;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x417124;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.00416c28();\n    if (cVar1 == '\\0') {\n        fcn.0041457c();\n    }\n    while( true ) {\n        cVar1 = fcn.00416c28();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00416f6c();\n        if (cVar1 - 2U < 3) {\n            fcn.00417adc();\n        }\n        fcn.0041455c();\n        fcn.00417b8c();\n        while( true ) {\n            cVar1 = fcn.00416c28();\n            if (cVar1 != '\\0') break;\n            fcn.00417cf8();\n        }\n        fcn.00417b94();\n    }\n    fcn.00417b94();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41712b;\n    uStack24 = 0x417123;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 369
    },
    "004177f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004177f0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x417812;\n        cVar3 = fcn.00416c28();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x41780a;\n        fcn.00417cf8();\n    }\n    puStack32 = 0x41781e;\n    fcn.00417b94();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x41783b;\n    uVar4 = fcn.00403554();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x4178b2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.00403554();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.00416c28();\n        if (cVar3 != '\\0') break;\n        fcn.00417544();\n    }\n    fcn.00417b94();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 459
    },
    "00417904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00417904(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.004189cc();\n    if (cVar2 == '\\x0f') {\n        fcn.00416f90();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00417b48();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 134
    },
    "00417948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00417948(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.004189cc();\n    if (cVar2 == '\\x10') {\n        fcn.00416f90();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00417b48();\n        iStack20 = ROUND(iVar1 * *0x417994);\n    }\n    return iStack20;\n}\n",
        "token_count": 143
    },
    "00417998": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00417998(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.004189cc();\n    if (cVar2 == '\\x11') {\n        fcn.00416f90();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00417b48();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 133
    },
    "00417adc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00417adc(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.004189cc();\n    if (cVar1 == '\\x02') {\n        fcn.00416f90();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.00416f90();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.00416f90();\n    }\n    else {\n        fcn.00416a68();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 186
    },
    "00417b48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00417b48(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.00416f6c();\n    if (cVar1 == '\\x13') {\n        fcn.004189cc();\n        fcn.00416f90();\n    }\n    else {\n        iStack12 = fcn.00417adc();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 125
    },
    "00417ed8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417ed8(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.00413750();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.00410c88();\n        return;\n    }\n    fcn.00416a68();\n    return;\n}\n",
        "token_count": 109
    },
    "00418384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418384(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004040e4();\n    while( true ) {\n        cVar1 = fcn.004138e8();\n        if (cVar1 != '\\0') break;\n        fcn.00408e28(param_2);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041882c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041882c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4188d9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.00416f6c();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.004188e8();\n        fcn.00404318();\n    }\n    else {\n        cVar1 = fcn.004189cc();\n        if (cVar1 == '\\x06') {\n            fcn.00416f90();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00416f90();\n        }\n        else {\n            fcn.00416a68();\n        }\n        fcn.004046dc();\n        fcn.00416f90();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4188e0;\n    uStack28 = 0x4188d8;\n    fcn.00404770();\n    return;\n}\n",
        "token_count": 303
    },
    "004188e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004188e8(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4189bf;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.00416f6c();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041882c();\n        fcn.004048bc();\n    }\n    else {\n        cVar1 = fcn.004189cc();\n        if (cVar1 == '\\x12') {\n            fcn.00416f90();\n            fcn.004049b8();\n            fcn.00416f90();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.00416f90();\n            fcn.004046dc();\n            fcn.00416f90();\n            fcn.00405a9c();\n        }\n        else {\n            fcn.00416a68();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4189c6;\n    uStack32 = 0x4189b6;\n    fcn.00404090();\n    uStack32 = 0x4189be;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 354
    },
    "00418cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00418cc0(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.00418cc0::var_1h + 1;\n    uStack36 = 0x418d58;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.00418cc0::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x24))();\n        fcn.004187f0();\n        fcn.004187f0();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.00416c28();\n        if (cVar2 != '\\0') break;\n        fcn.00418c78();\n        puVar1 = puStack32;\n    }\n    fcn.00417b94();\n    while( true ) {\n        cVar2 = fcn.00416c28();\n        if (cVar2 != '\\0') break;\n        fcn.00418cc0();\n    }\n    fcn.00417b94();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x418d5f;\n    uStack36 = 0x418d57;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 411
    },
    "00418ed4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418ed4(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.00416f90();\n                param_2 = 0;\n            }\n            else {\n                fcn.00416f90();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00418f1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418f1c(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4190c5;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x418f48;\n    fcn.00416af4();\n    puStack52 = 0x418f59;\n    fcn.00403328();\n    uStack56 = 0x4190a0;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00403328();\n    fcn.00416f90();\n    fcn.00415a20(var_10h, var_10h >> 0x1f);\n    fcn.00416f90();\n    puStack76 = 0x418fc2;\n    fcn.004163b0(0x400);\n    uStack80 = 0x41907b;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041882c();\n    fcn.00416f90();\n    fcn.00415a20(var_10h, var_10h >> 0x1f);\n    fcn.00416f90();\n    cVar1 = fcn.00410780();\n    if (cVar1 != '\\0') {\n        fcn.004056cc();\n        cVar1 = fcn.0040d168();\n        if (cVar1 != '\\0') goto code_r0x0041904e;\n    }\n    fcn.0040b764();\n    fcn.00403acc();\ncode_r0x0041904e:\n    *in_EAX = *(var_14h + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_10h;\n    iStack84 = 0x419082;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 616
    },
    "004196fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004196fc(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x419744;\n    if (param_1 != 0) {\n        fcn.004198b4();\n    }\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 184
    },
    "00419c54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419c54(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.0040449c();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00407e14();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040b7a0(0, &iStack20);\n                fcn.00403acc();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.00419dd4();\n        fcn.00419ce0();\n        fcn.00419dd4();\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00419dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419dd4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.0040432c();\n        piVar1 = fcn.00403614();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0041a004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a004(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.004196fc();\n    uVar1 = fcn.00403328();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "0041a1f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a1f4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403664();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403328();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "0041a764": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a764(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 67
    },
    "0041ba48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ba48(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 168
    },
    "0041baa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041baa8(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0041bab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bab4(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0041bc54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bc54(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x41bc6d;\n    fcn.0041baa8();\n    uStack32 = 0x41bcbd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.0041bac0();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.00403554();\n    }\n    fcn.0041bba4();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41bcc4;\n    uStack32 = 0x41bcbc;\n    fcn.0041bab4();\n    return;\n}\n",
        "token_count": 265
    },
    "0041bda4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041bda4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x41bdbb;\n    iVar1 = fcn.004140c8();\n    uStack28 = 0x41be41;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.00413d5c();\n        fcn.0041d5f4();\n        var_4h = var_4h + 1;\n        fcn.0041d940();\n    }\n    fcn.0041bd38();\n    fcn.0041bd38();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41be48;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x41be2d;\n            fcn.00413d5c();\n            uStack28 = 0x41be32;\n            fcn.0041d818();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x41be40;\n    fcn.0041412c();\n    return;\n}\n",
        "token_count": 358
    },
    "0041c57c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041c57c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    *0x461418 = 0;\n    uVar1 = fcn.0041bac0();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x463894;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 207
    },
    "0041c614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c614(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41c62f;\n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41c63f;\n        fcn.0041c2d4();\n        uStack24 = 0x41c6cf;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x41c657;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041c2d4();\n        uStack36 = 0x41c6b2;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041bccc();\n        fcn.0041c750();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.0041c9d4();\n            fcn.0041c9f0();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x41c6b9;\n        uStack36 = 0x41c6b1;\n        fcn.0041c2e4();\n        return;\n    }\n    puStack20 = 0x41c6e1;\n    fcn.00414300();\n    return;\n}\n",
        "token_count": 425
    },
    "0041c90c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c90c(void)\n\n{\n    fcn.0041c4c8();\n    fcn.0041c700();\n    return;\n}\n",
        "token_count": 37
    },
    "0041c938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c938(void)\n\n{\n    fcn.0041c6e8();\n    fcn.0041c700();\n    return;\n}\n",
        "token_count": 36
    },
    "0041ca1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ca1c(uint param_1, uchar param_2)\n\n{\n    fcn.0041c6e8(param_2);\n    fcn.0041c700();\n    return;\n}\n",
        "token_count": 50
    },
    "0041caa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041caa8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041bac0();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 174
    },
    "0041cb14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041cb14(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41cb2f;\n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41cb3f;\n        fcn.0041c2d4();\n        uStack24 = 0x41cbb3;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x41cb57;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041c2d4();\n        uStack36 = 0x41cb96;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041bccc();\n        fcn.0041ccfc();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x41cb9d;\n        uStack36 = 0x41cb95;\n        fcn.0041c2e4();\n        return;\n    }\n    puStack20 = 0x41cbc5;\n    fcn.00414300();\n    return;\n}\n",
        "token_count": 348
    },
    "0041cc3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041cc3c(void)\n\n{\n    fcn.0041cbcc();\n    fcn.0041cbe4();\n    return;\n}\n",
        "token_count": 36
    },
    "0041cd74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041cd74(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041bac0();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 159
    },
    "0041cddc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041cddc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41cdf7;\n    cVar1 = fcn.004034e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41ce03;\n        fcn.0041c2d4();\n        uStack24 = 0x41ce6c;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x41ce1b;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041c2d4();\n        uStack36 = 0x41ce4f;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041bccc();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x41ce56;\n        uStack36 = 0x41ce4e;\n        fcn.0041c2e4();\n        return;\n    }\n    puStack20 = 0x41ce7e;\n    fcn.00414300();\n    return;\n}\n",
        "token_count": 341
    },
    "0041cef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cef0(uint param_1, uint param_2)\n\n{\n    fcn.0041cea0(*0x461698, *0x46169c, param_2, *0x4616a4);\n    return;\n}\n",
        "token_count": 59
    },
    "0041d06c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d06c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar1 = fcn.0041c57c();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x41db68;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.0041caa8();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x41db88;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.0041cd74();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x41dba8;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x41d12c;\n    fcn.00414040();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 427
    },
    "0041d4d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d4d4(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.0041d9f4();\n            fcn.0041cf14();\n            uVar2 = fcn.0041c290();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.0041c290();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00412928(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0041d780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d780(void)\n\n{\n    ulong uStack16;\n    \n    fcn.0041d73c();\n    return uStack16;\n}\n",
        "token_count": 36
    },
    "0041d79c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d79c(void)\n\n{\n    uint uStack12;\n    \n    fcn.0041d73c();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 43
    },
    "0041d88c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d88c(uint param_1, uint *param_2)\n\n{\n    fcn.0041d61c(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 48
    },
    "0041d9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d9a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.0041d940();\n            fcn.0041d868();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.0041d88c();\n        }\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0041dc64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041dc64(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x41dd00;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.00404300();\n            fcn.0040b6a8();\n            fcn.00403acc();\n            goto code_r0x0041dce7;\n        }\n    }\n    fcn.0041dc10();\ncode_r0x0041dce7:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.00404090(0x41dd07);\n    return;\n}\n",
        "token_count": 295
    },
    "0041de9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0041de9c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U);\n    if (uVar1 < 0) {\n        uVar1 = uVar1 + 7;\n    }\n    return in_EAX * param_2 & 0xffffffff00000000U | uVar1 >> 3;\n}\n",
        "token_count": 129
    },
    "0041e17c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e17c(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.00402d74();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0041e24c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e24c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x41e278;\n    fcn.00402980();\n    uStack1044 = 0;\n    puStack1048 = 0x41e27f;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x41e349;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.0041e24c::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.0041e24c::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.0041e24c::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x41e350);\n    return;\n}\n",
        "token_count": 483
    },
    "0041e6bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e6bc(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 389
    },
    "0041eb38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041eb38(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.0041ea54();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 235
    },
    "0041ee74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041ee74(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "0041ef1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ef1c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.0041eec4(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 103
    },
    "0041f37c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041f37c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.0041d06c();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 168
    },
    "0041f63c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f63c(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x41f672;\n        var_4h = param_2;\n        iVar1 = fcn.0041e4a0();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x41f67f;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x41f68b;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x41f698;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x41f6eb;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.0041f63c::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x41f6f2);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 478
    },
    "004200bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004200bc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x4200da;\n        cVar1 = fcn.004034e4();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x4201a5;\n            fcn.00414300();\n            return;\n        }\n    }\n    uStack104 = 0x4638a8;\n    puStack108 = 0x4200ec;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack112 = 0x420174;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00402d74();\n        in_stack_ffffff80 = 0;\n        fcn.00420b40(0, 0, &fcn.004200bc::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.0041f570();\n        fcn.0041f574();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection_1(0x4638a8, 0x42017b);\n    return;\n}\n",
        "token_count": 484
    },
    "004201ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004201ac(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.004201ac::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x4201d1;\n    fcn.00420790();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x42023b;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x46388c) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.0041fda8();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.0041f744(*(in_EAX + 0x2c), &fcn.004201ac::var_5ch);\n    uVar3 = 0;\n    fcn.00420b40(0, *(in_EAX + 0x28) & 0xffffff00 | *(*(in_EAX + 0x28) + 0x70), &fcn.004201ac::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 444
    },
    "0042026c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042026c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.00420560();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040d134();\n    return;\n}\n",
        "token_count": 91
    },
    "0042029c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.0042029c(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00403328();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.00415a20(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.00420790();\n    fcn.0040d134();\n    fcn.00420b40(arg_8h, in_EAX[10] & 0xffffff00U | *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 274
    },
    "00420840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420840(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint lpvObject;\n    int32_t var_8h;\n    uint hgdiobj;\n    \n    puStack112 = &stack0xfffffffc;\n    hgdiobj = 0;\n    var_8h = 0;\n    uStack116 = 0x4208ea;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack120;\n    fcn.00420790();\n    fcn.004207a0();\n    fcn.0041c290();\n    hgdiobj = fcn.0041fe0c();\n    fcn.00402d74();\n    sub.gdi32.dll_GetObjectA(hgdiobj, 0x54, &lpvObject);\n    iVar1 = *(in_EAX[10] + 0x10);\n    if (*(in_EAX[10] + 0x10) != *0x46388c) {\n        iVar1 = fcn.0041fda8();\n    }\n    var_8h = iVar1;\n    uVar2 = 0;\n    fcn.00420b40(0, in_EAX[10] & 0xffffff00U | *(in_EAX[10] + 0x70), &lpvObject);\n    *in_FS_OFFSET = uVar2;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 357
    },
    "004211d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004211d0(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.00420790();\n    if (param_1 == 0) {\n        fcn.00402d74();\n        fcn.00420b40(0, 0, auStack98);\n    }\n    else {\n        fcn.00415bc8();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.0041dbf8();\n        }\n        fcn.00420c68(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00421900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421900(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.004207a0();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.00421900::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x42194d;\n    uVar1 = fcn.0041f744(*(in_EAX + 0x2c), &fcn.00421900::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x42197a;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.0041fda8();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 404
    },
    "004219e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004219e8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ee74();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00403328();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.0041f570();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "00421c8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00421c8c(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x421ca5;\n    piVar1 = fcn.00403328();\n    uStack36 = 0x421d1a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.0041599c(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.00415bc8();\n    fcn.00415bc8();\n    if (1 < var_ah._2_2_) {\n        fcn.0041dc04();\n    }\n    fcn.00421d44();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x421d3a;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 302
    },
    "00421e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00421e8c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x421e9a;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x4638a0;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 222
    },
    "00421f9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421f9c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 135
    },
    "00422000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422000(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "0042200c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042200c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "004221cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004221cc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(in_EAX + 4);\n    if (var_ch == NULL) {\n        return;\n    }\n    uStack20 = 0x4221e8;\n    var_8h = var_ch;\n    var_4h = in_EAX;\n    fcn.00422000();\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(var_4h + 4) = *var_ch;\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x42221e;\n    uStack24 = 0x422216;\n    fcn.0042200c();\n    return;\n}\n",
        "token_count": 218
    },
    "004225c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004225c4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    *(in_EAX + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 147
    },
    "00422660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00422660(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    uVar1 = fcn.00403328();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "004234a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004234a0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.004056e4();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 129
    },
    "004234dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004234dc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    uVar1 = fcn.004225c4();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.004225c4();\n    *(in_EAX + 0x14) = uVar1;\n    uVar1 = fcn.004225c4();\n    *(in_EAX + 0x18) = uVar1;\n    fcn.00404090();\n    *(in_EAX + 0x1c) = 1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 248
    },
    "00423cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423cb8(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x423d93;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.004040e4();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040b764();\n        fcn.00403acc();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00422600();\n            fcn.004056e4();\n            fcn.00405710();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                fcn.00405710();\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x423d9a;\n    uStack40 = 0x423d8a;\n    fcn.00404b0c();\n    uStack40 = 0x423d92;\n    fcn.004056cc();\n    return;\n}\n",
        "token_count": 434
    },
    "00424468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424468(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 141
    },
    "004258d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004258d0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    sub.user32.dll_GetWindowRect();\n    if (*(**0x4627c4 + 0x44) == 0) {\n        fcn.0044f88c();\n    }\n    else if (*(**0x46296c + 0x6c) == 0) {\n        fcn.0044be2c();\n    }\n    else {\n        fcn.0044be2c();\n    }\n    iVar1 = fcn.0044f590(0, 0, 0x15);\n    iVar2 = fcn.0044f574();\n    fcn.0044f55c(iVar1 + (auStack28 + (iVar2 - iStack24)) / 3);\n    fcn.0044f5a8();\n    sub.user32.dll_SetWindowPos();\n    return;\n}\n",
        "token_count": 222
    },
    "004259ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004259ec(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.004196fc();\n    *(in_EAX + 0x30) = 1;\n    pcVar2 = fcn.00425ac8;\n    uVar1 = fcn.0041a78c(fcn.00425ac8, in_EAX);\n    *(in_EAX + 0x40) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = pcVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 207
    },
    "00425b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425b60(uint param_1, code *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint extraout_var;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = 0x425b74;\n    sub.user32.dll_GetActiveWindow();\n    puStack40 = 0x425b7e;\n    fcn.00448c78();\n    puStack40 = 0x425b86;\n    fcn.00448b94();\n    uStack44 = 0x425c23;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00451b70(*(*in_EAX + 0x34), in_EAX);\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *0x461724 = in_EAX;\n    (*param_2)();\n    *in_FS_OFFSET = extraout_var;\n    fcn.00451bcc(*(*in_EAX + 0x34), in_EAX);\n    return;\n}\n",
        "token_count": 296
    },
    "004266d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004266d8(void)\n\n{\n    uint uVar1;\n    \n    *0x463a6c = sub.user32.dll_RegisterWindowMessageA(0x42673c);\n    *0x463a70 = sub.user32.dll_RegisterWindowMessageA(0x42674c);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.00408da8(uVar1);\n    *0x461728 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00427020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427020(void)\n\n{\n    char cVar1;\n    \n    cVar1 = '\\v';\n    do {\n        fcn.00403358();\n        cVar1 = cVar1 + -1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 64
    },
    "00427814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427814(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00427764();\n    (***0x462728)(uVar1);\n    return;\n}\n",
        "token_count": 87
    },
    "00427860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427860(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00427764();\n    (***0x4626dc)(uVar1);\n    return;\n}\n",
        "token_count": 76
    },
    "00427cd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427cd4(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x427cee;\n    var_4h = param_2;\n    uStack92 = fcn.00438dd8();\n    puStack96 = 0x427cf4;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.00427cd4::nLeftRect;\n        uStack100 = 0x427d09;\n        uStack100 = fcn.00438dd8();\n        iStack104 = 0x427d0f;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.00427cd4::nLeftRect;\n        uStack116 = 0x427d24;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x427d2c;\n        uStack116 = fcn.00438dd8();\n        puStack120 = 0x427d32;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x427e2f;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.00438dd8(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.00427cd4::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.00412928(&fcn.00427cd4::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.00427cd4::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.0042790c();\n        uVar2 = 0;\n        fcn.00427860(0, &fcn.00427cd4::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.00438dd8(hdc, 0x427e36);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 955
    },
    "00429ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429ee4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x429efe;\n    (**(*in_EAX + 0xd0))();\n    puStack32 = 0x429f0a;\n    (**(*in_EAX + 0xcc))();\n    puStack32 = 0x429f14;\n    fcn.00432564();\n    puStack32 = 0x429f1a;\n    fcn.0040894c();\n    uStack36 = 0x429f6e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00408960();\n    fcn.00432574();\n    fcn.004087b0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x429f75;\n    uStack36 = 0x429f6d;\n    fcn.00408998();\n    return;\n}\n",
        "token_count": 277
    },
    "00429f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429f80(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x429f97;\n    (**(*in_EAX + 0xd0))();\n    puStack28 = 0x429fa4;\n    iVar1 = (**(*in_EAX + 0xcc))();\n    puStack28 = 0x429fb1;\n    fcn.00404180();\n    if (iVar1 != 0) {\n        puStack28 = 0x429fbc;\n        fcn.00432564();\n        puStack28 = 0x429fc2;\n        fcn.0040894c();\n        uStack32 = 0x42a00e;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        fcn.00408960();\n        fcn.00432574();\n        fcn.00402980();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x42a015;\n        uStack32 = 0x42a00d;\n        fcn.00408998();\n        return;\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "0042a6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a6c0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42a74d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (1 < *(*(in_EAX + 0x10) + 0x238) - 3U) {\n        uVar2 = fcn.00404550();\n        uStackY52 = fcn.00438dd8(0x180, 0, uVar2);\n        iVar3 = sub.user32.dll_SendMessageA();\n        puVar1 = puStack28;\n        if (iVar3 < 0) {\n            fcn.00405b90();\n            fcn.0040b6a8();\n            fcn.00403acc();\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = uStackY52;\n    fcn.00404090(0x42a754);\n    return;\n}\n",
        "token_count": 321
    },
    "0042a760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a760(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42a7e9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (1 < *(*(in_EAX + 0x10) + 0x238) - 3U) {\n        uVar2 = fcn.00404550();\n        uStackY52 = fcn.00438dd8(0x181, param_2, uVar2);\n        iVar3 = sub.user32.dll_SendMessageA();\n        puVar1 = puStack28;\n        if (iVar3 < 0) {\n            fcn.00405b90();\n            fcn.0040b6a8();\n            fcn.00403acc();\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = uStackY52;\n    fcn.00404090(0x42a7f0);\n    return;\n}\n",
        "token_count": 333
    },
    "0042a808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a808(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42a958;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if (1 < *(in_EAX[4] + 0x238) - 3U) {\n        puStack48 = 0x42a84c;\n        fcn.004147ac();\n        uStack52 = 0x42a936;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack48 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        fcn.00403554();\n        (**(*in_EAX + 0xc))();\n        (**(*in_EAX + 0x20))();\n        fcn.00403554();\n        fcn.00403554();\n        (**(*in_EAX + 0x20))();\n        fcn.00403554();\n        iVar1 = (**(*in_EAX[4] + 0xcc))();\n        if (param_2 == iVar1) {\n            (**(*in_EAX[4] + 0xd0))();\n        }\n        else {\n            iVar1 = (**(*in_EAX[4] + 0xcc))();\n            if (param_1 == iVar1) {\n                (**(*in_EAX[4] + 0xd0))();\n            }\n        }\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x42a93d;\n        uStack52 = 0x42a935;\n        fcn.00414868();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42a95f;\n    uStack40 = 0x42a957;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 528
    },
    "0042a9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a9f0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42aaef;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (1 < *(in_EAX[4] + 0x238) - 3U) {\n        puStack44 = 0x42aa31;\n        fcn.004147ac();\n        *(in_EAX[4] + 0x278) = 1;\n        uStack48 = 0x42aad2;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        if (param_1 != param_2) {\n            puStack44 = &stack0xfffffffc;\n            (**(*in_EAX + 0xc))();\n            fcn.00403554();\n            fcn.00403554();\n            (**(*in_EAX + 0x48))();\n            (**(*in_EAX + 0x60))();\n            fcn.00403554();\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x42aad9;\n        *(in_EAX[4] + 0x278) = 0;\n        uStack48 = 0x42aad1;\n        fcn.00414868();\n        return;\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42aaf6;\n    uStack36 = 0x42aaee;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 443
    },
    "0042ac34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ac34(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42ac51;\n    fcn.00404540();\n    uStack32 = 0x42aca7;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00404550();\n    fcn.0040874c();\n    fcn.00404180();\n    (**(**(in_EAX + 0x218) + 0x3c))();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42acae;\n    uStack32 = 0x42aca6;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 219
    },
    "0042b250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b250(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((1 < *(in_EAX + 0x238) - 3U) && (param_2 != *(in_EAX + 0x23a))) {\n        *(in_EAX + 0x23a) = param_2;\n        fcn.00436378();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0042b274": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b274(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x238)) {\n        if (param_2 - 3U < 2) {\n            (**(**(in_EAX + 0x218) + 0x44))();\n            fcn.0042b250();\n        }\n        *(in_EAX + 0x238) = param_2;\n        fcn.00436378();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0042b450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042b450(char param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack32 [16];\n    \n    uStack56 = *param_2;\n    uStack60 = param_2[1];\n    uStack52 = uStack60;\n    (**(*in_EAX + 0x44))();\n    iVar1 = sub.user32.dll_PtInRect(auStack32);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042b2b0();\n        iVar2 = (**(*in_EAX[0x86] + 0x14))();\n        for (; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n            fcn.004337a4(&uStack60);\n            iVar3 = sub.user32.dll_PtInRect();\n            if (iVar3 != 0) {\n                return iVar1;\n            }\n        }\n        if (param_1 == '\\0') {\n            return iVar1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 277
    },
    "0042c238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042c238(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.0043e97c();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "0042cc24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042cc24(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.0040884c();\n    if (iVar1 == 0) {\n        *(arg_ch + 4) = arg_8h;\n        *(arg_ch + 0xc) = 1;\n    }\n    return -(*(arg_ch + 0xc) != '\\x01');\n}\n",
        "token_count": 133
    },
    "0042cc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042cc80(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.00408828();\n    if (iVar1 == 0) {\n        *(arg_ch + 0xd) = 1;\n        *(arg_ch + 8) = arg_8h;\n    }\n    return -(*(arg_ch + 0xd) != '\\x01');\n}\n",
        "token_count": 132
    },
    "0042cd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.0042cd80(uint param_1, int32_t param_2)\n\n{\n    uint8_t uStack11;\n    \n    uStack11 = *(param_2 + 0xc) >> 8;\n    return uStack11 ^ 1;\n}\n",
        "token_count": 63
    },
    "0042ce84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042ce84(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    fcn.004056e4();\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 137
    },
    "0042cf70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cf70(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42cfc2;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x463b04 == 0;\n    *0x463b04 = *0x463b04 + -1;\n    if (bVar1) {\n        *0x463b08 = fcn.0042ce84();\n        fcn.004056cc();\n        fcn.004233c4();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 180
    },
    "0042f3e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f3e4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x461acc + 0x180) = arg_8h;\n    sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x461acc + 0x18c));\n    uVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n    if ((uVar1 & 0x40000000) != 0) {\n        iVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n        if (iVar2 == 0) {\n            sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x463b1e, *0x461acc);\n    sub.user32.dll_SetPropA(arg_8h, *0x463b1c, *0x461acc);\n    iVar2 = *0x461acc;\n    *0x461acc = 0;\n    uVar3 = (**(iVar2 + 0x18c))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 334
    },
    "0042f8c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f8c8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.004026d4();\n    *puVar2 = param_2;\n    uVar3 = fcn.0042f8a0(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.0042f86c();\n    if (cVar1 == '\\0') {\n        fcn.00413c00();\n    }\n    else {\n        fcn.00413dd8();\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0042fa58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fa58(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42fb22;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00430b78();\n        }\n        else if (iVar1 == 0x200) {\n            puStack32 = &stack0xfffffffc;\n            fcn.004069ac();\n            in_stack_ffffffd0 = *0x463b38;\n            sub.user32.dll_ClientToScreen(*0x463b38, &var_ch);\n            fcn.00430500();\n        }\n        else if ((iVar1 == 0x202) || (iVar1 == 0x205)) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00430b78();\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.00430500();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack32 = &stack0xfffffffc;\n            fcn.00430b78();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00430500();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    return;\n}\n",
        "token_count": 459
    },
    "0042fbec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fbec(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x38) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00430e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00430e9c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint uStack24;\n    \n    iVar1 = fcn.00430e68();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_8h = 0;\n        fcn.00432134();\n        iVar2 = fcn.004366c4(arg_8h);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(uStack24, iVar3);\n}\n",
        "token_count": 150
    },
    "00430f2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430f2c(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 39
    },
    "00430f5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00430f5c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x430f6c;\n    var_8h = fcn.004140c8();\n    uStack28 = 0x43100c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x430f9e;\n            var_10h = fcn.00413d5c();\n            puStack36 = 0x430fa9;\n            cVar1 = fcn.0041d7bc();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x430fe5;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.00431198();\n                fcn.00403b78();\n                fcn.00403b78();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x431013;\n    uStack28 = 0x43100b;\n    fcn.0041412c();\n    return;\n}\n",
        "token_count": 438
    },
    "00431210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431210(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403328();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 162
    },
    "004317c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004317c8(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.004036cc();\n    fcn.00450bc0();\n    if ((arg_8h[0x28] == 0) || ((*(arg_8h[0x28] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x68))();\n    }\n    else {\n        fcn.004337a4(arg_8h);\n        (**(*arg_8h + 0x68))();\n        fcn.00431f90();\n        fcn.00403554();\n        arg_8h[0x28] = 0;\n    }\n    fcn.00403358();\n    arg_8h[0x1b] = 0;\n    fcn.00403358();\n    fcn.00403358();\n    fcn.00408998();\n    fcn.00419748();\n    if ('\\0' < extraout_DL) {\n        fcn.004036b4();\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00431f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431f90(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 129
    },
    "00431ff4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00431ff4(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 48
    },
    "0043200c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043200c(void)\n\n{\n    fcn.00432038();\n    fcn.00412900();\n    fcn.0043247c();\n    return;\n}\n",
        "token_count": 41
    },
    "00432038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00432038(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 47
    },
    "00432050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432050(void)\n\n{\n    fcn.00431ff4();\n    fcn.00412900();\n    fcn.0043247c();\n    return;\n}\n",
        "token_count": 41
    },
    "00432108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432108(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "00432134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432134(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "0043247c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043247c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x84))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 154
    },
    "004334d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.004334d0(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0xa0) != 0) {\n        cVar1 = fcn.00403554(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x00433504;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x00433504:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00434354();\n        if (iVar2 == 0) {\n            fcn.00403554(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.00432038();\n            arg_8h = auStack28;\n            fcn.00431ff4();\n            fcn.00412928(arg_8h, uVar3);\n            fcn.00403554();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 348
    },
    "00433670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433670(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.00432134();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 75
    },
    "004337a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004337a4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 85
    },
    "00433adc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433adc(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x433aa0;\n    fcn.00433aac(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "00433bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433bf0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.00448ef0(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.00403554();\n        }\n        else {\n            fcn.00433670();\n            fcn.00448ef0(var_4h, var_8h);\n            fcn.00403554();\n        }\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00434354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00434354(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.004032a0();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.00431d84();\n            fcn.00431d60();\n            fcn.0043200c();\n            fcn.00432050();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 225
    },
    "00434790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00434790(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 173
    },
    "00434b04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00434b04(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x434b1d;\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x434bfc;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.00434b04::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.004316f0();\n    pcVar2 = fcn.00436594;\n    uVar1 = fcn.0041a78c(fcn.00436594, in_EAX);\n    *(in_EAX + 0x18c) = uVar1;\n    uVar1 = fcn.0041cd74();\n    *(in_EAX + 0x170) = uVar1;\n    fcn.0041cf1c();\n    *(in_EAX + 0x1a9) = 1;\n    *(in_EAX + 0x1a0) = 0xffffffff;\n    *(in_EAX + 0x184) = 3;\n    if (*(*0x462998 + 4) == 0x11) {\n        fcn.00404090();\n    }\n    else {\n        fcn.0044fcc0();\n        fcn.004040e4();\n    }\n    *(in_EAX + 0x1a7) = 0;\n    *(in_EAX + 0x162) = *0x434c24;\n    *(in_EAX + 0x163) = 2;\n    *(in_EAX + 0x164) = 1;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x150) = 1;\n    *in_FS_OFFSET = pcVar2;\n    pcStack48 = 0x434c03;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 568
    },
    "004356a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004356a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00403328();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00431ff4();\n    iVar2 = fcn.00435b08();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00435acc();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.00435acc();\n                fcn.00413c00();\n                fcn.00431d60();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00413d5c();\n            fcn.004337a4(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 329
    },
    "00435b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00435b08(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x198) != 0) {\n        iVar1 = *(*(in_EAX + 0x198) + 8);\n    }\n    if (*(in_EAX + 0x19c) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x19c) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 124
    },
    "00435b68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435b68(uint param_1, ushort param_2)\n\n{\n    fcn.00435b28(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "00436118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436118(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00433adc();\n    uVar2 = 0x435fa0;\n    uVar1 = 0x435fd8;\n    uVar3 = in_EAX;\n    fcn.00436040(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 147
    },
    "00436314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436314(uint arg_8h)\n\n{\n    uint var_10h;\n    \n    return;\n}\n",
        "token_count": 29
    },
    "00436a58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00436a58(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0042f4d0();\n    if (iVar1 != 0) {\n        uVar2 = fcn.004337a4(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 108
    },
    "004387c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004387c4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_10h;\n    \n    if ((((in_EDX == *(in_EAX + 0x40)) && (in_ECX == *(in_EAX + 0x44))) && (arg_ch == *(in_EAX + 0x48))) &&\n       (arg_8h == *(in_EAX + 0x4c))) {\n        return;\n    }\n    cVar1 = fcn.004390dc();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(*(in_EAX + 0x180)),  iVar2 != 0)) {\n        *(in_EAX + 0x40) = in_EDX;\n        *(in_EAX + 0x44) = in_ECX;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x4c) = arg_8h;\n        cVar1 = fcn.004390dc();\n        if (cVar1 != '\\0') {\n            var_2ch = 0x2c;\n            sub.user32.dll_GetWindowPlacement(*(in_EAX + 0x180), &var_2ch);\n            fcn.00431f90();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), 0);\n    }\n    fcn.00431c44();\n    fcn.00403554();\n    return;\n}\n",
        "token_count": 403
    },
    "0043889c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043889c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00435b08(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00435acc();\n            fcn.00403554();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00438ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438ce0(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x438cef;\n    fcn.00431f90();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x180), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 144
    },
    "004390e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004390e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x180);\n    puStack80 = 0x4390fc;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x439132;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x439119;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x180);\n    uStack96 = 0x439140;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x180);\n        puStack104 = 0x439155;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.00431c44();\n    return;\n}\n",
        "token_count": 623
    },
    "00439338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439338(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00435b08();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00435acc();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0043a1dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a1dc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x43a1ed;\n    var_4h = in_EAX;\n    uStack16 = fcn.00438dd8();\n    puStack20 = 0x43a1f3;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x43a232;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xcc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43a239;\n    uStack24 = var_8h;\n    uStack28 = 0x43a22b;\n    uStack28 = fcn.00438dd8();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 265
    },
    "0043a240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a240(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x43a2d9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.0041c750();\n    uVar1 = fcn.00434910();\n    fcn.004325f0(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.00404550();\n    uVar2 = fcn.0041d920(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.00404090(0x43a2e0);\n    return;\n}\n",
        "token_count": 283
    },
    "0043a5d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a5d4(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xd0))();\n    return;\n}\n",
        "token_count": 48
    },
    "0043a5fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a5fc(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00412928(arg_8h, 0);\n    uVar1 = fcn.00434910();\n    uVar2 = fcn.00404550(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.0041d920(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 181
    },
    "0043a6e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a6e8(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 122
    },
    "0043a728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a728(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint dxHotspot;\n    uint dyHotspot;\n    uint himlDrag;\n    \n    if (*(in_EAX + 0x68) != -1) {\n        uStack24 = 1;\n        uStack28 = 1;\n        uStack32 = 1;\n        uStack36 = 0xe;\n        uStack40 = 0x43a74d;\n        uStack40 = (***0x462610)();\n        uStack44 = 0xd;\n        uStack48 = 0x43a759;\n        uStack48 = (***0x462610)();\n        puStack52 = 0x43a75f;\n        himlDrag = sub.comctl32.dll_ImageList_Create();\n        uStack56 = 0x43a7e8;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        fcn.0044fd48();\n        fcn.00422784();\n        fcn.0044fd48();\n        fcn.00422784();\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 0, 0, 0);\n        sub.comctl32.dll_ImageList_GetDragImage(0, &fcn.0043a728::dxHotspot);\n        uVar1 = himlDrag;\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 1, dxHotspot, dyHotspot);\n        *in_FS_OFFSET = uVar1;\n        sub.comctl32.dll_ImageList_Destroy(himlDrag, 0x43a7ef);\n        return;\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "0043ab94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ab94(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0043bef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bef8(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_EDX;\n    uint *arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = 0;\n    uVar1 = 1;\n    arg_ch = *(*(arg_8h + -8) + 0x18) + in_EDX + -2;\n    arg_8h_00 = &var_10h;\n    fcn.00412928(arg_8h_00, arg_ch);\n    uVar1 = fcn.0041d920(&var_10h, arg_8h_00, arg_ch, uVar1, uVar2);\n    sub.user32.dll_DrawFrameControl(uVar1);\n    return;\n}\n",
        "token_count": 192
    },
    "0043c864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c864(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43c913;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(**(arg_8h + -4) + 0x10))();\n    (**(**(arg_8h + -4) + 0x10))();\n    (**(**(arg_8h + -4) + 0x10))();\n    arg_8h_00 = arg_8h;\n    fcn.0043ae70();\n    fcn.0043c7ec(arg_8h_00);\n    if (*(in_EAX + 8) != 0) {\n        fcn.0043c864(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0043c864(arg_8h);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43c91a;\n    uStack28 = 0x43c912;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 329
    },
    "0043cb64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cb64(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.00438dd8(uVar1, uVar2);\n    fcn.0043d6c4();\n    uVar1 = fcn.00438dd8();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.0043cc78();\n    return;\n}\n",
        "token_count": 237
    },
    "0043cdf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043cdf4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.0043b0e0();\n        iVar1 = fcn.0043ac64();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.0043b0e0();\n    }\n    fcn.0043cd64(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 153
    },
    "0043ce44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043ce44(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.00431f90();\n        fcn.00431f90();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 333
    },
    "0043d078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d078(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0043b42c();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00412900();\n            iVar1 = fcn.0043bc20();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.0043ce44(uVar2);\n            (**(*in_EAX + 8))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.0043cec0(&stack0xfffffffc);\n        }\n        else {\n            fcn.0043cf40(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "0043db4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043db4c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x43dcc4;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.00408e28(puVar3);\n    fcn.004040e4();\n    uVar1 = fcn.00404550();\n    *0x463b1c = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.00408e28(puVar3);\n    fcn.004040e4();\n    uVar1 = fcn.00404550();\n    *0x463b1e = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.00404550();\n    *0x463b28 = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x463b60 = fcn.00413f70();\n    fcn.0043d750();\n    *0x463b10 = fcn.0043d578();\n    uVar1 = fcn.0044f624();\n    **0x46296c = uVar1;\n    uVar1 = fcn.00450708();\n    **0x4627c4 = uVar1;\n    fcn.004522f0();\n    fcn.00413724();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x43dd00);\n    if (iVar2 != 0) {\n        *0x461ac8 = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x43dd08);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00404090(0x43dccb);\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 618
    },
    "0043e5f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e5f8(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0043e97c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043e97c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.0041a004();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "0043f3d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043f3d8(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x43f3e9;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x43f479;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.00421240();\n    fcn.004205e0();\n    fcn.0041cf1c();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.0043f3d8::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00412928(arg_8h, arg_ch);\n    fcn.004205e0(&fcn.0043f3d8::var_18h);\n    fcn.0041d580();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x43f480);\n    return;\n}\n",
        "token_count": 397
    },
    "0043f49c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f49c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.0043f3d8();\n    return;\n}\n",
        "token_count": 162
    },
    "0043f63c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043f63c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x43f657;\n    fcn.00420018();\n    uStack36 = 0x43f6eb;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x43f674;\n    puStack32 = &stack0xfffffffc;\n    fcn.00420018();\n    uStack48 = 0x43f6ce;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0043f3cc();\n    uVar1 = fcn.0043f510();\n    uVar2 = fcn.0043f510(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00403358(0x43f6d5);\n    return;\n}\n",
        "token_count": 340
    },
    "0043ff2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0043ff2c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    piVar2 = in_EAX;\n    if (param_2 != NULL) {\n        puStack32 = 0x43ff44;\n        piVar1 = fcn.0043f708();\n        puStack32 = 0x43ff4d;\n        piVar2 = fcn.0043f708();\n        if (piVar1 == piVar2) {\n            puStack32 = 0x43ff61;\n            iVar3 = fcn.0043f708();\n            if (iVar3 != 0) {\ncode_r0x0043ff79:\n                puStack32 = 0x43ff85;\n                fcn.00403328();\n                uStack36 = 0x440008;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x43ffa0;\n                puStack32 = &fcn.0043ff2c::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x43ffac;\n                fcn.00403328();\n                uStack48 = 0x43ffeb;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.0043ff2c::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.0043fee8();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x43fff2;\n                uStack48 = 0x43ffea;\n                uVar4 = fcn.00403358();\n                return uVar4;\n            }\n            puStack32 = 0x43ff6c;\n            piVar2 = fcn.0043f708();\n            if (piVar2 != NULL) goto code_r0x0043ff79;\n            var_1h._0_1_ = 1;\n            goto code_r0x0044000f;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0044000f:\n    return piVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 665
    },
    "00440078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440078(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00419a74();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.0044001c(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 162
    },
    "00440364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00440364(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x440383;\n    iVar1 = fcn.0041a1f4(0);\n    uStackY44 = 0x4403c4;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.0043f4d4();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x4403cb;\n    iStackY48 = 0x4403c3;\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 242
    },
    "004423f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004423f4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004034e4(),  cVar1 != '\\0')) {\n        fcn.00444c90();\n        fcn.0044518c();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.00445cc8();\n    }\n    fcn.00441b90();\n    return;\n}\n",
        "token_count": 135
    },
    "00443cd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443cd8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00444aac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444aac(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404128();\n    return;\n}\n",
        "token_count": 233
    },
    "00445524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00445524(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00441b90();\n    return 0;\n}\n",
        "token_count": 62
    },
    "00448c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448c78(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x461d2c;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x461d2c = 0;\n    uStack36 = 0x448d1b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    uStack48 = 0x448ce4;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.00448c28, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x461d2c = uVar1;\n    return;\n}\n",
        "token_count": 275
    },
    "00448e44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00448e44(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint uStack8;\n    uchar uStack4;\n    \n    uStack8 = sub.user32.dll_GetActiveWindow();\n    uStack4 = 0;\n    pcVar3 = fcn.00448e24;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.00448e24, &uStack8);\n    uVar2 = sub.user32.dll_EnumThreadWindows(uVar1);\n    return CONCAT44(pcVar3, uVar2 & 0xffffff00 | pcVar3 & 0xff);\n}\n",
        "token_count": 150
    },
    "00449064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00449064(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4490d5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.0044903c();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00405b90();\n        fcn.0040b6e4(in_stack_ffffffd4, arg_ch);\n        fcn.00403acc();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x4490dc;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 290
    },
    "004490e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004490e4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403664();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403328();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 324
    },
    "00449c68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00449c68(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    fcn.00434b04();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x449cdc;\n    uVar1 = fcn.004490e4(0);\n    *(in_EAX + 0x208) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.004490e4(1);\n    *(in_EAX + 0x20c) = uVar1;\n    *(in_EAX + 0x210) = 1;\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 254
    },
    "0044a054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a054(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x208) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x20c) + 0x1a);\n        fcn.00432108(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.00432134();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.00432108();\n        fcn.00432134();\n        if (iVar5 < 0) {\n            fcn.004498cc();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.00431ff4();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.00431ff4();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.00431ff4();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.00431ff4(iVar6, iVar7, iVar3);\n                fcn.004498cc();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.004498cc();\n        }\n        else {\n            iVar5 = fcn.00432038();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.00432038();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.00432038();\n                }\n                fcn.00432038();\n                fcn.004498cc();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 553
    },
    "0044a408": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a408(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x44a469;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004034e4();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.00438154();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 220
    },
    "0044a498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044a498(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x44a4b6;\n        in_EAX = fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x44a5fc;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x44a4d8;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x462960 + 0x14))();\n    uStack320 = 0x44a5dc;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x44a4f7;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xe0))();\n    puStack332 = 0x44a4ff;\n    iVar2 = fcn.004032a0();\n    if ((iVar2 != *0x447a04) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xbd) = *(stack0xfffffff8 + 0xbd) | 1;\n        uStack336 = 0x44a5a4;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.00413b1c();\n        if (cVar1 == '\\0') {\n            fcn.004032a8();\n            var_10h = &fcn.0044a498::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.0044a498::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.00405b90();\n            fcn.0040b6e4(in_stack_fffffea4, arg_ch);\n            fcn.00403acc();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xbd) = *(stack0xfffffff8 + 0xbd) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x44a5e3;\n    uStack324 = 0x44a5db;\n    (**(***0x462960 + 0x18))();\n    return;\n}\n",
        "token_count": 790
    },
    "0044b128": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b128(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00439338(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.00419d20(),  -1 < var_8h + -1)) {\n        do {\n            fcn.00419cf4();\n            cVar1 = fcn.00403554();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0044ddf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ddf0(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x2e4)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0044e750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e750(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44e7bc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xe4))();\n    if (cVar1 != '\\0') {\n        fcn.00403554();\n        if ((cVar1 != '\\0') == true) {\n            fcn.0044e884();\n        }\n    }\n    else {\n        in_EAX[0x93] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 201
    },
    "0044f2f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f2f0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.00437874();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 67
    },
    "0044f55c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044f55c(void)\n\n{\n    uint uStack20;\n    \n    fcn.0044f5c4();\n    return uStack20;\n}\n",
        "token_count": 38
    },
    "0044f574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044f574(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.0044f5c4();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 53
    },
    "0044f590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044f590(void)\n\n{\n    uint uStack16;\n    \n    fcn.0044f5c4();\n    return uStack16;\n}\n",
        "token_count": 37
    },
    "0044f5a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044f5a8(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.0044f5c4();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 55
    },
    "0044f5c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f5c4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x4625e8)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 139
    },
    "0044f5f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f5f4(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x4625e8)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 151
    },
    "0044fd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fd70(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint auStack24 [2];\n    \n    puVar5 = auStack24;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(auStack24);\n            iVar1 = sub.user32.dll_WindowFromPoint(puVar5, auStack24[0]);\n            if (iVar1 != 0) {\n                iVar2 = sub.user32.dll_GetWindowThreadProcessId(iVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = fcn.004069c0();\n                    sub.user32.dll_SendMessageA(iVar1, 0x84, 0, uVar4);\n                    uVar4 = fcn.00406948();\n                    sub.user32.dll_SendMessageA(iVar1, 0x20, iVar1, uVar4);\n                    return;\n                }\n            }\n        }\n        uVar4 = fcn.0044fd48();\n        sub.user32.dll_SetCursor(uVar4);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 356
    },
    "0044ff84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __fastcall fcn.0044ff84(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        uVar1 = *(in_EAX + 0x44) < *(param_2 + 0x44);\n    }\n    else if (param_1 == '\\x02') {\n        uVar1 = *(param_2 + 0x44) + *(param_2 + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    }\n    else if (param_1 == '\\x03') {\n        uVar1 = *(in_EAX + 0x40) < *(param_2 + 0x40);\n    }\n    else if (param_1 == '\\x04') {\n        uVar1 = *(param_2 + 0x40) + *(param_2 + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    }\n    return uVar1;\n}\n",
        "token_count": 324
    },
    "00450338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450338(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x45034d;\n    cVar1 = fcn.004502e0(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00403328();\n        uStack28 = 0x4503b2;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.00450194(&stack0xfffffffc);\n        fcn.00450194(&stack0xfffffffc);\n        fcn.00450194(&stack0xfffffffc);\n        fcn.00450194(&stack0xfffffffc);\n        fcn.00450194(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x4503b1;\n        fcn.00403358();\n        return;\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00450f44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450f44(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.00451694();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 133
    },
    "0045195c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045195c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x109)) {\n        iVar1 = sub.user32.dll_GetCapture();\n        if (iVar1 == 0) {\n            iVar1 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar1 != *(*(in_EAX + 0x44) + 0x254))) {\n                while( true ) {\n                    iVar2 = fcn.0042f4d0();\n                    if ((iVar2 != 0) || (iVar1 == 0)) break;\n                    iVar1 = sub.user32.dll_GetParent();\n                }\n                if (iVar1 == 0) {\n                    iVar1 = *param_2;\n                }\n            }\n            else {\n                iVar1 = fcn.00438dd8();\n            }\n            iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        else {\n            iVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xfffffffa);\n            if (iVar2 == *0x463664) {\n                iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar1 != 0) {\n                    uVar3 = 1;\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 421
    },
    "00451b4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00451b4c(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00451ab4();\n    if (cVar1 == '\\0') {\n        fcn.0045241c();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00451e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451e70(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t lpRect;\n    uint *var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t hWnd;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iStack104 = 0x451e88;\n    var_4h = in_EAX;\n    iStack108 = sub.user32.dll_GetActiveWindow();\n    iStack104 = 2;\n    uStack112 = 0x451e9a;\n    hWnd = iStack108;\n    var_14h = (***0x4626bc)();\n    uStack112 = 2;\n    uStack116 = *(var_4h + 0x30);\n    puStack120 = 0x451eaf;\n    var_18h = (***0x4626bc)();\n    if (var_14h != var_18h) {\n        var_44h = 0x28;\n        puStack120 = &fcn.00451e70::var_44h;\n        iStack124 = var_14h;\n        uStack128 = 0x451ed2;\n        (***0x4625e8)();\n        var_50h = &fcn.00451e70::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack104 = var_34h - var_3ch >> 1;\n        if (iStack104 < 0) {\n            iStack104 = iStack104 + ((var_34h - var_3ch & 1U) != 0);\n        }\n        iStack104 = iStack104 + var_3ch;\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        uStack112 = 0;\n        uStack116 = *(var_4h + 0x30);\n        puStack120 = 0x451f1a;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack120 = 0x451f21;\n    var_10h = fcn.00448c78();\n    puStack120 = 0x451f29;\n    var_1ch = fcn.00448b94();\n    puStack120 = 0x451f34;\n    cVar1 = fcn.00450e14();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack124 = 0x451fc5;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    uVar4 = *(var_4h + 0x30);\n    puStack120 = &stack0xfffffffc;\n    var_8h = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = uVar4;\n    if (var_14h != var_18h) {\n        iVar2 = var_48h - var_50h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_48h - var_50h & 1U) != 0);\n        }\n        iVar3 = var_4ch - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_4ch - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_50h, 0, 0, 0x1d, 0x451fcc, arg_8h);\n    }\n    fcn.00448d2c();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.00448b9c();\n    return;\n}\n",
        "token_count": 1087
    },
    "004528f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004528f8(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.004527c0();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.00452c0c();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.00452930();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00454844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00454844(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    \n    uStack68 = 0;\n    uStack72 = 0x454852;\n    uVar1 = sub.user32.dll_GetDC();\n    uStack72 = 0x45485b;\n    uStack72 = fcn.0041c764();\n    uStack76 = uVar1;\n    uVar2 = sub.gdi32.dll_SelectObject();\n    sub.gdi32.dll_GetTextMetricsA(uVar1, &stack0xffffffb4);\n    sub.gdi32.dll_SelectObject(uVar1, uVar2);\n    uVar2 = 0;\n    sub.user32.dll_ReleaseDC(0, uVar1);\n    return uVar2;\n}\n",
        "token_count": 186
    },
    "00454ccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454ccc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack388;\n    uint uStack384;\n    uchar *puStack380;\n    uint uStack376;\n    uint uStack372;\n    uchar *puStack368;\n    uint var_160h;\n    uint var_15ch;\n    uint32_t var_154h;\n    uint var_150h;\n    uint var_4h;\n    \n    puStack368 = 0x454cf4;\n    fcn.004049fc();\n    uStack372 = 0x454ddc;\n    uStack376 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe88;\n    puStack380 = 0x454d19;\n    puStack368 = &stack0xfffffffc;\n    fcn.00454340();\n    puStack380 = 0x454d2f;\n    iVar1 = fcn.00408444();\n    uStack384 = 0x454dab;\n    uStack388 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe7c;\n    puStack380 = &stack0xfffffffc;\n    while (iVar1 == 0) {\n        bVar2 = (var_154h & 0x10) == 0x10;\n        if (((bVar2) && (fcn.0040449c(),  !bVar2)) && (fcn.0040449c(),  !bVar2)) {\n            (**(*param_1 + 0x38))();\n        }\n        iVar1 = fcn.00408494();\n    }\n    *in_FS_OFFSET = uStack388;\n    puStack380 = 0x454db2;\n    uStack384 = 0x454daa;\n    fcn.004084b8();\n    return;\n}\n",
        "token_count": 417
    },
    "00455224": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455224(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uVar4;\n    uint arg_ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = *param_1;\n    var_1ch = param_1[1];\n    uStack28 = param_1[2];\n    var_14h = param_1[3];\n    arg_ch = 0x455389;\n    uVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    var_10h = *(in_EAX + 0x228);\n    var_4h = param_2;\n    fcn.0041d580();\n    var_8h = 0x10;\n    var_ch = var_4h * 4 + 2;\n    piVar1 = (**(**(in_EAX + 0x218) + 0x18))();\n    if (piVar1 != NULL) {\n        if (piVar1 == *(in_EAX + 0x290)) {\n            iVar2 = fcn.004549c4();\n            var_ch = (iVar2 + 1) * 4 + 2;\n        }\n        var_8h = (**(*piVar1 + 0x2c))();\n        uVar3 = (**(*piVar1 + 0x20))();\n        arg_8h = &var_30h;\n        (**(*piVar1 + 0x2c))();\n        fcn.00412950(arg_8h, uVar3);\n        iVar2 = (**(*piVar1 + 0x20))(&var_30h);\n        fcn.004205e0(iVar2 + -1);\n        uVar3 = fcn.0041d8ac();\n        uVar3 = (**(*piVar1 + 0x20))(uVar3);\n        uVar3 = (**(*piVar1 + 0x2c))(&var_40h, uVar3);\n        (**(*piVar1 + 0x20))(uVar3);\n        fcn.00412950(uVar4, arg_ch);\n        fcn.0041d18c(uVar4, arg_ch);\n    }\n    (**(**(in_EAX + 0x218) + 0xc))();\n    fcn.00454c7c();\n    uVar4 = 0;\n    fcn.0041d6b0(0);\n    *in_FS_OFFSET = uVar4;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 686
    },
    "004555c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004555c0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStackY48;\n    uchar *puStackY44;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    char var_dh;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    uStack32 = 0x4556a9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    iVar2 = fcn.00404350();\n    if (iVar2 != 0) {\n        iVar2 = fcn.00454cac();\n        if (iVar2 != 0) {\n            puStackY44 = 0x45561d;\n            fcn.0045458c(&fcn.004555c0::var_ch);\n            uStackY48 = 0x45567c;\n            uStackY52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            puStackY44 = &stack0xfffffffc;\n            cVar1 = fcn.004555b4();\n            if (cVar1 != var_dh) {\n                *(var_4h + 0x28c) = 1;\n                if (*(var_4h + 0x284) == 0) {\n                    fcn.00454aac();\n                }\n                else {\n                    fcn.00454884();\n                }\n            }\n            *in_FS_OFFSET = uStackY52;\n            *(var_4h + 0x28c) = 0;\n            return;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4556b0;\n    uStack32 = 0x4556a8;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 472
    },
    "004565cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004565cc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00403664();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0040b6a8();\n    *(in_EAX + 0xc) = in_ECX;\n    if (in_DL != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "00456894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00456894(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffbc;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x4568ac;\n        in_EAX = fcn.00403664();\n        in_ECX = extraout_ECX;\n    }\n    uStack52 = 0x456934;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.00456894::var_1h + 1;\n    fcn.004040e4();\n    *(in_EAX + 0xc) = arg_8h;\n    if (arg_8h == 0) {\n        fcn.0040b6a8();\n    }\n    else {\n        fcn.0040aea0();\n        fcn.004040e4();\n        in_stack_ffffffbc = *(in_EAX + 0x10);\n        fcn.00404410(in_stack_ffffffbc, 0x456968, in_ECX);\n        fcn.0040b6a8();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.004040b4(0x45693b);\n    return;\n}\n",
        "token_count": 370
    },
    "004577cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004577cc(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    *0x461e3c = 0;\n    iVar2 = 0x70;\n    puVar1 = 0x461e40;\n    do {\n        *puVar1[1] = *puVar1;\n        puVar1 = puVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 112
    },
    "00457c0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457c0c(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    \n    if (in_EDX == -1) {\n        iVar1 = (**(*in_EAX + 0x6c))();\n        in_EAX[1] = iVar1;\n        if (-1 < arg_8h) {\n            arg_8h = arg_8h + 1;\n            do {\n                if (in_EAX[1] == *in_ECX) {\n                    return 1;\n                }\n                in_ECX = in_ECX + 1;\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        fcn.00457c54();\n    }\n    return 0;\n}\n",
        "token_count": 202
    },
    "00457cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457cb4(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00403664();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004036bc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00457ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457ce0(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x4580da;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00404090();\n    // switch table (63 cases) at 0x457d20\n    switch(param_2) {\n    case 0x2714:\n        fcn.00405b90();\n        break;\n    case 0x2719:\n        fcn.00405b90();\n        break;\n    case 0x271d:\n        fcn.00405b90();\n        break;\n    case 0x271e:\n        fcn.00405b90();\n        break;\n    case 0x2726:\n        fcn.00405b90();\n        break;\n    case 0x2728:\n        fcn.00405b90();\n        break;\n    case 0x2733:\n        fcn.00405b90();\n        break;\n    case 0x2734:\n        fcn.00405b90();\n        break;\n    case 0x2735:\n        fcn.00405b90();\n        break;\n    case 0x2736:\n        fcn.00405b90();\n        break;\n    case 0x2737:\n        fcn.00405b90();\n        break;\n    case 0x2738:\n        fcn.00405b90();\n        break;\n    case 0x2739:\n        fcn.00405b90();\n        break;\n    case 0x273a:\n        fcn.00405b90();\n        break;\n    case 0x273b:\n        fcn.00405b90();\n        break;\n    case 0x273c:\n        fcn.00405b90();\n        break;\n    case 0x273d:\n        fcn.00405b90();\n        break;\n    case 0x273e:\n        fcn.00405b90();\n        break;\n    case 0x273f:\n        fcn.00405b90();\n        break;\n    case 0x2740:\n        fcn.00405b90();\n        break;\n    case 0x2741:\n        fcn.00405b90();\n        break;\n    case 0x2742:\n        fcn.00405b90();\n        break;\n    case 0x2743:\n        fcn.00405b90();\n        break;\n    case 0x2744:\n        fcn.00405b90();\n        break;\n    case 0x2745:\n        fcn.00405b90();\n        break;\n    case 0x2746:\n        fcn.00405b90();\n        break;\n    case 0x2747:\n        fcn.00405b90();\n        break;\n    case 0x2748:\n        fcn.00405b90();\n        break;\n    case 0x2749:\n        fcn.00405b90();\n        break;\n    case 0x274a:\n        fcn.00405b90();\n        break;\n    case 0x274b:\n        fcn.00405b90();\n        break;\n    case 0x274c:\n        fcn.00405b90();\n        break;\n    case 0x274d:\n        fcn.00405b90();\n        break;\n    case 0x274e:\n        fcn.00405b90();\n        break;\n    case 0x274f:\n        fcn.00405b90();\n        break;\n    case 0x2750:\n        fcn.00405b90();\n        break;\n    case 0x2751:\n        fcn.00405b90();\n        break;\n    case 0x2752:\n        fcn.00405b90();\n    }\n    arg_8h = &fcn.00457ce0::var_4h;\n    fcn.00405b90();\n    fcn.00408e28(arg_8h);\n    fcn.004040e4();\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x4580e1;\n    iStack48 = 0x4580d9;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 1046
    },
    "00458118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458118(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x45812c;\n    fcn.00404540();\n    uStack24 = 0x458160;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*in_EAX + 0x80))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x458167;\n    uStack24 = 0x45815f;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 184
    },
    "00458498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00458498(uint32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x458517;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_8h = 0x10;\n    puVar2 = &var_8h;\n    (***0x46251c)();\n    (**(*in_EAX + 0x7c))();\n    fcn.004040e4();\n    uVar1 = (***0x46261c)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_18h._2_2_);\n    fcn.00404090(0x45851e, puVar2);\n    return;\n}\n",
        "token_count": 290
    },
    "00458528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458528(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404350();\n    if (iVar1 == 0) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = fcn.00458118();\n    }\n    (***0x462618)(var_10h & 0xffff0000 | arg_8h & 0xffff);\n    (***0x4625e0)();\n    return;\n}\n",
        "token_count": 153
    },
    "004585a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004585a0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar1 = fcn.00458118();\n    (***0x462618)(uVar1 & 0xffff0000 | arg_8h & 0xffff);\n    (***0x462494)();\n    return;\n}\n",
        "token_count": 103
    },
    "00458700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458700(uint32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint *puVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x45878b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_8h = 0x10;\n    puVar3 = &var_8h;\n    puVar2 = &var_18h;\n    (***0x462704)();\n    (**(*in_EAX + 0x7c))();\n    fcn.004040e4();\n    uVar1 = (***0x46261c)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_18h._2_2_);\n    fcn.00404090(0x458792, arg_14h, arg_10h, puVar2, puVar3);\n    return;\n}\n",
        "token_count": 327
    },
    "0045879c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045879c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        (**(*in_EAX + 8))();\n        fcn.00413ec0();\n        iVar1 = *param_2;\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00413c00();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004587d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004587d8(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x45886d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX != 0) {\n        puVar2 = &stack0xfffffffc;\n        if (0x40 < *(in_EAX + 8)) {\n            fcn.00405b90();\n            fcn.0040b6a8();\n            fcn.00403acc();\n            puVar2 = puStack32;\n        }\n        puStack32 = puVar2;\n        iVar4 = *(in_EAX + 8);\n        puVar1 = param_2;\n        if (-1 < iVar4 + -1) {\n            do {\n                uVar3 = fcn.00413d5c();\n                puVar1[1] = uVar3;\n                iVar4 = iVar4 + -1;\n                puVar1 = puVar1 + 1;\n            } while (iVar4 != 0);\n        }\n        *param_2 = *(in_EAX + 8);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x458874;\n    uStack36 = 0x45886c;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 393
    },
    "0045887c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045887c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_314h;\n    uint var_210h;\n    uint var_10ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00402d74();\n    fcn.00402d74();\n    fcn.00402d74();\n    fcn.004587d8();\n    fcn.004587d8();\n    fcn.004587d8();\n    if (arg_8h == -2) {\n        uVar1 = (***0x462988)(0, &var_10ch, &var_210h, &var_314h, 0);\n    }\n    else {\n        var_8h = arg_8h / 1000;\n        var_4h = (arg_8h % 1000) * 1000;\n        uVar1 = (***0x462988)(0, &var_10ch, &var_210h, &var_314h, &var_8h);\n    }\n    fcn.0045879c();\n    fcn.0045879c();\n    fcn.0045879c();\n    return uVar1;\n}\n",
        "token_count": 286
    },
    "004589b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004589b0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    fcn.00402d74();\n    uVar1 = fcn.00458118();\n    (***0x462618)(uVar1 & 0xffff0000 | arg_8h & 0xffff);\n    (***0x4625d4)();\n    return;\n}\n",
        "token_count": 126
    },
    "00458a9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458a9c(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x458b69;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack48 = 0;\n    uStack52 = 0x458ac5;\n    uStack52 = fcn.00404550();\n    puStack56 = 0x458acf;\n    uVar1 = (***0x462550)();\n    if (uVar1 == 0) {\n        uStack60 = 0x458b0c;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.00408000();\n        *in_FS_OFFSET = uStack64;\n    }\n    else {\n        puStack56 = uVar1 & 0xffff0000 | *(uVar1 + 8);\n        uStack60 = 0x458ae3;\n        (***0x46261c)();\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x458b70;\n    uStack48 = 0x458b68;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 367
    },
    "00458d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "get file size"
        ],
        "decompiled_code": "\nvoid fcn.00458d88(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x458d9c;\n    fcn.00404540();\n    uStack28 = 0x458e3e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uStack36 = 0;\n    uStack40 = 0x8000080;\n    uStack44 = 3;\n    uStack48 = 0;\n    uStack52 = 1;\n    uStack56 = 0x80000000;\n    uStack60 = 0x458dc9;\n    puStack24 = &stack0xfffffffc;\n    uStack60 = fcn.00404550();\n    puStack64 = 0x458dcf;\n    uVar1 = sub.kernel32.dll_CreateFileA();\n    uStack68 = 0x458e21;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    uVar6 = 0;\n    uVar5 = 0;\n    uVar4 = 0;\n    uVar3 = 0;\n    puStack64 = &stack0xfffffffc;\n    iVar2 = (***0x46271c)();\n    if (iVar2 != 0) {\n        sub.kernel32.dll_GetFileSize(uVar1, 0);\n    }\n    *in_FS_OFFSET = in_EAX;\n    sub.kernel32.dll_CloseHandle(uVar1, 0x458e28, uVar3, uVar4, uVar5, uVar6);\n    return;\n}\n",
        "token_count": 499
    },
    "00458f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00458f38(uint32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x458fc6;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    (***0x462500)();\n    fcn.00457c00();\n    *in_ECX = var_14h;\n    (**(*in_EAX + 0x7c))();\n    fcn.004040e4();\n    uVar1 = (***0x46261c)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_14h._2_2_);\n    fcn.00404090(0x458fcd);\n    return;\n}\n",
        "token_count": 284
    },
    "00458fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00458fd8(uint32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x459066;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    (***0x4624c8)();\n    fcn.00457c00();\n    *in_ECX = var_14h;\n    (**(*in_EAX + 0x7c))();\n    fcn.004040e4();\n    uVar1 = (***0x46261c)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_14h._2_2_);\n    fcn.00404090(0x45906d);\n    return;\n}\n",
        "token_count": 285
    },
    "0045919c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045919c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x45923d;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (param_2 == 0x2af9) {\n        puStack44 = &stack0xfffffffc;\n        fcn.00405b90();\n        arg_8h = &fcn.0045919c::var_4h;\n        fcn.00405b90();\n        fcn.00408e28(arg_8h);\n        fcn.004040e4();\n    }\n    else {\n        arg_8h = 0x4591e3;\n        fcn.00457ce0();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x459244;\n    iStack52 = 0x45923c;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 319
    },
    "004597e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004597e0(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uchar uVar2;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x4598b3;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    bVar1 = *0x463dc0 == 0;\n    *0x463dc0 = *0x463dc0 + -1;\n    uVar2 = *0x463dc0 == 0;\n    if (bVar1) {\n        fcn.00459518();\n        fcn.004040e4();\n        **0x462830 = *0x45821c;\n        fcn.00402e98();\n        if (uVar2) {\n            *0x4623dc = 0x45971c;\n        }\n        else {\n            *0x4623dc = fcn.0040c3c4;\n        }\n        fcn.00405014(1);\n        fcn.004040e4();\n        fcn.00405014(1);\n        fcn.004040e4();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x4598ba;\n    uStack16 = 0x4598b2;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 344
    },
    "004599fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004599fc(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x463dd0 = *0x463dd0 + 1;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 85
    },
    "0042fe18": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042fe18(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 108
    },
    "0045a450": {
        "rules": [
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.0045a450(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.kernel32.dll_GetCurrentProcess();\n    sub.kernel32.dll_VirtualProtectEx(uVar1);\n    return;\n}\n",
        "token_count": 49
    },
    "00403ee4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.00403ee4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x461000;\n    *0x461000 = 0;\n    puVar3 = *0x463634;\n    puVar4 = 0x463634;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 167
    },
    "00408494": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00408494(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_FindNextFileA(*(in_EAX + 0x14), in_EAX + 0x18);\n    if (iVar1 != 0) {\n        fcn.004083e0();\n        return;\n    }\n    sub.kernel32.dll_GetLastError_1();\n    return;\n}\n",
        "token_count": 96
    },
    "0040cf64": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040cf64(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "00415728": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415728(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[5] == in_EAX[6]) {\n        fcn.00415654();\n    }\n    if (in_EDX < in_EAX[5]) {\n        fcn.00402980();\n    }\n    puVar1 = in_EAX[4] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.004040e4();\n    in_EAX[5] = in_EAX[5] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 191
    },
    "0041a65c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a65c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41a6bf;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 295
    },
    "00423670": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00423670(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    while (0 < *(*(in_EAX + 0x10) + 8)) {\n        iVar1 = fcn.00422600();\n        (**(**(iVar1 + 4) + 0x2c))();\n    }\n    (**(**(in_EAX + 0x10) + 8))();\n    (**(**(in_EAX + 0x14) + 8))();\n    (**(**(in_EAX + 0x18) + 8))();\n    return;\n}\n",
        "token_count": 137
    },
    "0042f9bc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f9bc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 4) = *(param_2 + 4);\n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x20) = *(param_2 + 0x20);\n    *(in_EAX + 0x24) = *(param_2 + 0x24);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    return;\n}\n",
        "token_count": 250
    },
    "00435f60": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435f60(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.004069f0(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x180) = uVar1;\n    return;\n}\n",
        "token_count": 154
    },
    "0043b8e8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b8e8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.0043adc8();\n    fcn.0043b158();\n    return;\n}\n",
        "token_count": 434
    },
    "0040cf54": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040cf54(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "00419540": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00419540(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x463850);\n    if (iVar1 == 0) {\n        fcn.00419534();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00407c20": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407c20(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    pcVar3 = param_2;\n    if (param_2 != NULL) {\n        pcVar3 = *(param_2 + -4);\n    }\n    pcVar2 = pcVar1;\n    if (pcVar3 < pcVar1) {\n        pcVar2 = pcVar3;\n    }\n    bVar6 = true;\n    do {\n        pcVar4 = in_EAX;\n        pcVar5 = param_2;\n        if (pcVar2 == NULL) break;\n        pcVar2 = pcVar2 + -1;\n        pcVar5 = param_2 + 1;\n        pcVar4 = in_EAX + 1;\n        bVar6 = *in_EAX == *param_2;\n        in_EAX = pcVar4;\n        param_2 = pcVar5;\n    } while (bVar6);\n    if (!bVar6) {\n        pcVar1 = pcVar4[-1];\n        pcVar3 = pcVar5[-1];\n    }\n    return pcVar1 - pcVar3;\n}\n",
        "token_count": 333
    },
    "00407c70": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407c70(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *in_EAX;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    bool bVar9;\n    \n    pcVar3 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar3 = *(in_EAX + -4);\n    }\n    pcVar5 = param_2;\n    if (param_2 != NULL) {\n        pcVar5 = *(param_2 + -4);\n    }\n    pcVar4 = pcVar3;\n    if (pcVar5 < pcVar3) {\n        pcVar4 = pcVar5;\n    }\n    bVar9 = true;\ncode_r0x00407c8f:\n    do {\n        if (pcVar4 != NULL) {\n            pcVar4 = pcVar4 + -1;\n            pcVar2 = param_2 + 1;\n            pcVar1 = in_EAX + 1;\n            bVar9 = *in_EAX == *param_2;\n            in_EAX = pcVar1;\n            param_2 = pcVar2;\n            if (bVar9) goto code_r0x00407c8f;\n        }\n        if (bVar9) goto code_r0x00407cbd;\n        uVar6 = in_EAX[-1];\n        if ((0x60 < uVar6) && (uVar6 < 0x7b)) {\n            uVar6 = uVar6 - 0x20;\n        }\n        uVar7 = CONCAT11(param_2[-1], uVar6);\n        uVar8 = uVar7 >> 8;\n        if ((0x60 < uVar8) && (uVar8 < 0x7b)) {\n            uVar7 = CONCAT11(uVar8 - 0x20, uVar6);\n        }\n        uVar6 = uVar7 >> 8;\n        bVar9 = uVar7 == uVar6;\n        if (!bVar9) {\n            pcVar3 = uVar7;\n            pcVar5 = uVar6;\ncode_r0x00407cbd:\n            return pcVar3 - pcVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 537
    },
    "0041dabc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0041dabc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0041cc64();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x4616a8));\n    return;\n}\n",
        "token_count": 110
    },
    "0043802c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0043802c(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x463b1e);\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x463b1c);\n    return;\n}\n",
        "token_count": 87
    },
    "00408280": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00408280(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00404550(0xc0000000, 0, 0, 2, 0x80, 0);\n    sub.kernel32.dll_CreateFileA(uVar1);\n    return;\n}\n",
        "token_count": 69
    },
    "0041d130": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0041d130(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004036cc();\n    fcn.004140dc();\n    fcn.0041d9a0();\n    fcn.00403358();\n    fcn.00403358();\n    fcn.00403358();\n    sub.kernel32.dll_DeleteCriticalSection_1(iVar1 + 0x38);\n    fcn.004142d4();\n    if ('\\0' < extraout_DL) {\n        fcn.004036b4();\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0041d580": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d580(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.0041d9f4();\n    uVar1 = fcn.0041cf50();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 113
    },
    "0041d648": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d648(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.0041d9f4();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00425ac8": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00425ac8(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x425af2;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 126
    },
    "0043f59c": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043f59c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x43f62f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x461c1c) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.0043f3c4();\n    if (cVar1 == '\\0') {\n        fcn.00405b90();\n        fcn.0040b6a8();\n        fcn.00403acc();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.0043f7c4();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00404090(0x43f636);\n    return;\n}\n",
        "token_count": 347
    },
    "00433c74": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00433c74(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    fcn.00432160();\n    uVar1 = (**(*in_EAX + -0x10))();\n    if ((*(in_EAX + 0x14) & 2) != 0) {\n        uVar1 = fcn.00432828();\n    }\n    if ((*(in_EAX + 0x14) & 8) != 0) {\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 2;\n    }\n    fcn.00433bf0(uVar1 & 0xffffff00 | *0x433cbc);\n    return;\n}\n",
        "token_count": 168
    },
    "004346e4": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004346e4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x434780;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004034e4();\n    if (cVar1 == '\\0') {\n        fcn.004143e4();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.0043ec34();\n        fcn.0043ed6c();\n        fcn.004325f0();\n        fcn.0043eacc();\n        fcn.0043ee8c();\n        (**(*param_2 + 0x34))(in_EAX[0x48], in_EAX[0x49]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x434787;\n    uStack28 = 0x43477f;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 292
    },
    "004376e0": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004376e0(uint param_1, int32_t *param_2)\n\n{\n    (**(*param_2 + 0x68))();\n    return;\n}\n",
        "token_count": 42
    },
    "0043ed6c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ed6c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.0040449c(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403508();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004040e4();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00457c54": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00457c54(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x457ca6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x68))();\n    uVar1 = 0;\n    fcn.004565cc(0);\n    fcn.00403acc();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x457cad;\n    uStack28 = 0x457ca5;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 191
    },
    "0041ba34": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.0041ba34(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "00452930": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00452930(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.004390dc();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00438dd8();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                uVar2 = fcn.00438dd8(0);\n                sub.user32.dll_ShowWindow(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00402e74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e74(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 177
    },
    "004032bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004032bc(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    if (param_2 != 0) {\n        in_EAX = *(in_EAX + -0x2c);\n        uVar1 = *in_EAX;\n        if (uVar1 == *(param_2 + -4)) {\n            do {\n                uVar2 = 0;\n                if (((in_EAX[uVar1] ^ *(uVar1 + param_2 + -1)) & 0xdf) != 0) goto code_r0x004032df;\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            uVar2 = 1;\n        }\n    }\ncode_r0x004032df:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 223
    },
    "004033bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004033bc(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.00404ac0();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 95
    },
    "00403508": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402804)\n\nvoid __fastcall fcn.00403508(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x463008 != NULL) {\n                    (**0x463008)();\n                }\n                fcn.004027d8();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040356c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040356c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 117
    },
    "00403d18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403d18(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x463640;\n    puStack20 = &stack0xfffffffc;\n    if (*0x46363c != 0) {\n        iVar1 = *(*0x46363c + 4);\n        uStack24 = 0x403d5e;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x463640 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00403d78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403d78(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x46363c != NULL) {\n        iVar1 = **0x46363c;\n        iVar4 = 0;\n        iVar2 = (*0x46363c)[1];\n        uStack24 = 0x403dbe;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x463640 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "00404694": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404694(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = *(in_EAX + -4) + -1;\n        if (-1 < iVar3) {\n            iVar1 = *(param_2 + -4) - iVar3;\n            bVar7 = iVar1 == 0;\n            pcVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -4)) {\ncode_r0x004046b4:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        pcVar4 = pcVar5 + 1;\n                        bVar7 = *in_EAX == *pcVar5;\n                        pcVar5 = pcVar4;\n                        if (!bVar7) goto code_r0x004046b4;\n                    }\n                    iVar2 = iVar3;\n                    pcVar4 = in_EAX + 1;\n                    pcVar6 = pcVar5;\n                    if (!bVar7) goto code_r0x004046c8;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *pcVar4 == *pcVar6;\n                        iVar2 = iVar2 + -1;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = pcVar5 + -param_2;\n                goto code_r0x004046d8;\n            }\n        }\ncode_r0x004046c8:\n        in_EAX = NULL;\n    }\ncode_r0x004046d8:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 465
    },
    "00404bf8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402804)\n// WARNING: Removing unreachable block (ram,0x00404b7a)\n// WARNING: Removing unreachable block (ram,0x00404b60)\n\nvoid __fastcall fcn.00404bf8(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.00404090();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00404770();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00404af4();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00404b0c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00404ac0();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.004056cc();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x463008 != NULL) {\n                (**0x463008)();\n            }\n            fcn.004027d8();\n            return;\n        }\n        do {\n            fcn.00405020();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 542
    },
    "00404e78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402804)\n\nvoid __fastcall fcn.00404e78(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00404090();\n            }\n            else {\n                fcn.004040b4();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00404770();\n            }\n            else {\n                fcn.00404788();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00404af4();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404b0c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404ac0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.004056cc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x463008 != NULL) {\n                    (**0x463008)();\n                }\n                fcn.004027d8();\n                return;\n            }\n            do {\n                fcn.00405020();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "004050fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004050fc(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = *0x461034;\n    if (*0x461034 != NULL) {\n        do {\n            if (((in_EAX == piVar1[1]) || (in_EAX == piVar1[2])) || (in_EAX == piVar1[3])) {\n                fcn.004050b4();\n                return;\n            }\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00405124": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405124(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00405590": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405590(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x461038 != NULL) && ((*0x461038)[1] == in_EAX)) {\n        *0x461038 = **0x461038;\n        fcn.004026f4();\n        return;\n    }\n    ppiVar2 = *0x461038;\n    if (*0x461038 != NULL) {\n        do {\n            ppiVar1 = *ppiVar2;\n            if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                *ppiVar2 = *ppiVar1;\n                fcn.004026f4();\n                return;\n            }\n            ppiVar2 = *ppiVar2;\n        } while (ppiVar2 != NULL);\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0040565c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040565c(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x4056c0;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.004055f0();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x461034;\n    if (var_4h == *0x461034) {\n        *0x461034 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00407ba8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ba8(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.00404350();\n    fcn.004046dc();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x60 < uVar1) && (uVar1 < 0x7b)) {\n            uVar1 = uVar1 - 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00407dc4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407dc4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00404350();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -1 + iVar2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.00404090();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar1) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.004045b0(param_2);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00407e78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e78(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            fcn.00407e8e();\n            unaff_ESI[-1] = 0x2d;\n            return;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0040884c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040884c(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar6 = 0xffffffff;\n    uVar4 = 0;\n    pcVar7 = param_2;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    uVar6 = ~uVar6;\n    bVar8 = true;\ncode_r0x00408861:\n    do {\n        if (uVar6 != 0) {\n            uVar6 = uVar6 - 1;\n            pcVar1 = param_2 + 1;\n            pcVar7 = in_EAX + 1;\n            bVar8 = *in_EAX == *param_2;\n            in_EAX = pcVar7;\n            param_2 = pcVar1;\n            if (bVar8) goto code_r0x00408861;\n        }\n        if (bVar8) {\n            return;\n        }\n        uVar3 = in_EAX[-1];\n        uVar5 = uVar4 & 0xffffff00 | uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n        }\n        uVar3 = param_2[-1];\n        uVar4 = uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar4 = uVar3 - 0x20;\n        }\n        uVar4 = uVar5 - uVar4;\n        bVar8 = uVar4 == 0;\n        if (!bVar8) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 497
    },
    "0040888c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040888c(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x004088a5:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x004088a5;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "004088d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.004088d0(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    \n    while( true ) {\n        if (param_2 == *in_EAX) {\n            return in_EAX;\n        }\n        if (*in_EAX == '\\0') break;\n        in_EAX = in_EAX + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 89
    },
    "004088e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.004088e4(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 579
    },
    "00408b5a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408b5a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x00408b7a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x408b81\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x408b81))();\n        return;\n    }\n    do {\n        fcn.00408d87();\n        puVar3 = fcn.004089a8();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00407f18(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 986
    },
    "004094f7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004094f7(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 85
    },
    "0040a5e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a5e8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.00404350();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 128
    },
    "0040a764": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040a764(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.00404350();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "0040c590": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c590(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040c5b8();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040c5b8();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 126
    },
    "0040c5b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040c5b8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.004088d0();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040c080(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.004088d0();\n    }\n    return iVar2;\n}\n",
        "token_count": 93
    },
    "0040cc84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040cc84(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x46130c; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0040cdac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cdac(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.0040cd94();\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puVar3 != NULL && (iVar2 != puVar3[1])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040ce34();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00407b24();\n            puVar3[1] = iVar2;\n            puVar3[2] = 0x7fffffff;\n            *puVar3 = puVar3;\n            uVar4 = fcn.0040cd34();\n            *puVar3 = uVar4;\n        }\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 266
    },
    "0040e75c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e75c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40e9a1;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040e75c::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x40e832;\n            var_10h = &stack0xfffffffc;\n            fcn.00405b90();\n            var_1ch = 0x40e841;\n            fcn.0040b6a8();\n            var_1ch = 0x40e846;\n            fcn.00403acc();\n            goto code_r0x0040e979;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x40e7f0;\n                var_10h = &stack0xfffffffc;\n                fcn.0040e528();\n                goto code_r0x0040e979;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x40e8a4;\n                var_10h = &stack0xfffffffc;\n                fcn.00405b90();\n                var_1ch = 0x40e8b3;\n                fcn.0040b6a8();\n                var_1ch = 0x40e8b8;\n                fcn.00403acc();\n                goto code_r0x0040e979;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x40e913;\n                var_10h = &stack0xfffffffc;\n                fcn.00405b90();\n                var_1ch = 0x40e922;\n                fcn.0040b6a8();\n                var_1ch = 0x40e927;\n                fcn.00403acc();\n                goto code_r0x0040e979;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x40e802;\n                var_10h = &stack0xfffffffc;\n                fcn.00405b90();\n                var_1ch = 0x40e811;\n                fcn.0040b6a8();\n                var_1ch = 0x40e816;\n                fcn.00403acc();\n                goto code_r0x0040e979;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x40e820;\n                var_10h = &stack0xfffffffc;\n                fcn.0040e618();\n                goto code_r0x0040e979;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x40e858;\n            fcn.00405b90();\n            var_1ch = 0x40e867;\n            fcn.0040b6a8();\n            var_1ch = 0x40e86c;\n            fcn.00403acc();\n            goto code_r0x0040e979;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x40e87e;\n            var_10h = &stack0xfffffffc;\n            fcn.00405b90();\n            var_1ch = 0x40e88d;\n            fcn.0040b6a8();\n            var_1ch = 0x40e892;\n            fcn.00403acc();\n            goto code_r0x0040e979;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x40e8ca;\n            var_10h = &stack0xfffffffc;\n            fcn.00405b90();\n            var_1ch = 0x40e8d9;\n            fcn.0040b6a8();\n            var_1ch = 0x40e8de;\n            fcn.00403acc();\n            goto code_r0x0040e979;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x40e8f0;\n            var_10h = &stack0xfffffffc;\n            fcn.00405b90();\n            var_1ch = 0x40e8ff;\n            fcn.0040b6a8();\n            var_1ch = 0x40e904;\n            fcn.00403acc();\n            goto code_r0x0040e979;\n        }\n    }\n    var_38h = **0x4628fc;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x40e948;\n    var_10h = &stack0xfffffffc;\n    fcn.0040aea0();\n    var_1ch = &fcn.0040e75c::var_38h;\n    var_20h = 2;\n    var_24h = 0x40e965;\n    fcn.00405b90();\n    var_24h = 0x40e974;\n    fcn.0040b6e4(var_20h, var_1ch);\n    var_24h = 0x40e979;\n    fcn.00403acc();\ncode_r0x0040e979:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x40e9a8;\n    var_1ch = 0x40e993;\n    fcn.004040b4();\n    var_1ch = 0x40e9a0;\n    fcn.004040b4();\n    return;\n}\n",
        "token_count": 1611
    },
    "00410af4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00410af4(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 322
    },
    "00410ba4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410ba4(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00412bd4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00412bd4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar2 = fcn.00413d5c();\n            cVar1 = fcn.004032bc();\n            if (cVar1 != '\\0') goto code_r0x00412c2b;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = (**(**(in_EAX + 8) + 0x54))();\n    if (iVar3 < 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x00412c2b:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 242
    },
    "00412c34": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00412c34(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 0xc);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413d5c();\n            uVar1 = fcn.0040356c();\n            if (uVar1 != '\\0') goto code_r0x00412c6e;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00412c6e:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 252
    },
    "00412dfc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412dfc(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.00413d5c();\n                uVar1 = fcn.00412c34();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00412f18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00412f18(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00413d5c();\n            uVar2 = fcn.00412aa8(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 145
    },
    "0041311c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0041311c(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 4);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413d5c();\n            uVar1 = fcn.00412d20();\n            if (uVar1 != '\\0') goto code_r0x00413154;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00413154:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 247
    },
    "00413160": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00413160(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413d5c();\n            iVar1 = fcn.00413db8();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00412b18();\n    fcn.00413c00();\n    return;\n}\n",
        "token_count": 146
    },
    "004134dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004134dc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x4134ec;\n    fcn.004130f8();\n    uStack16 = 0x413541;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.0041311c();\n        if (cVar1 != '\\0') break;\n        fcn.00413104();\n        if (in_EAX == *0x411b04) break;\n        in_EAX = fcn.004032e4();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x413548;\n    uStack16 = 0x413540;\n    fcn.004131b0();\n    return;\n}\n",
        "token_count": 232
    },
    "004139e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004139e8(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00405dfc();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00413d5c();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00413db8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413db8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00413efc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413efc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00413ce8();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.00413ec0();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00402d74();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.00413c4c();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 247
    },
    "00416e84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416e84(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00413d5c();\n                fcn.00403358();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00403358();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00417154": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417154(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404e58();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00413c00();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0041999c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041999c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00413d5c();\n                fcn.0041999c();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0041a10c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a10c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00413d5c(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0041a188": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a188(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00413d5c();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.00413c4c();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0041a6f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a6f0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41a700;\n    iVar1 = fcn.004140c8();\n    uStack24 = 0x41a745;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00413d5c();\n            fcn.00403358();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41a74c;\n    uStack24 = 0x41a744;\n    fcn.0041412c();\n    return;\n}\n",
        "token_count": 232
    },
    "0041e144": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041e144(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "004236b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004236b0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00422600();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00425fc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00425fc0(void)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    \n    fcn.00404090();\n    if (in_EAX != 0) {\n        fcn.0040439c();\n        fcn.00404550();\n        puVar1 = fcn.0040c5b8();\n        while (puVar1 != NULL) {\n            *puVar1 = 0;\n            puVar1 = fcn.0040c5b8();\n        }\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0042f8a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f8a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.00438dd8();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 106
    },
    "0042f958": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042f958(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStackY20;\n    \n    iVar5 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStackY20 = 0x42f973;\n            piVar2 = fcn.00413d5c();\n            iVar5 = *piVar2;\n        }\n        else {\n            iStackY20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 = iVar3,  iVar5 == 0 && (iVar4 != 0))) {\n                cVar1 = fcn.0042f86c();\n                if (cVar1 == '\\0') {\n                    iVar3 = sub.user32.dll_GetWindow();\n                    iStackY20 = iVar4;\n                }\n                else {\n                    iVar5 = **(*(in_EAX + 4) + iStackY20 * 4);\n                    iVar3 = iVar4;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStackY20, iVar5);\n}\n",
        "token_count": 302
    },
    "004303b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004303b4(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.00430354(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 106
    },
    "00430e68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00430e68(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.0042f4d0(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 115
    },
    "00432160": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432160(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004034e4();\n            if (cVar1 != '\\0') {\n                fcn.0044d114();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "004358b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004358b4(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 91
    },
    "00436230": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00436230(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00413db8();\n    iVar2 = *(*(in_EAX + 0x19c) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.00413d5c();\n            if (*(iVar2 + 0x180) != 0) {\n                return *(iVar2 + 0x180);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "0043ab54": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043ab54(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0043abe8();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 101
    },
    "0043abb8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043abb8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "0043abcc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043abcc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0043b1e0();\n    while (iVar1 != 0) {\n        iVar1 = fcn.0043b1b8();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 92
    },
    "0043abe8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.0043abe8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.0043b1e0(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.0043abe8();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 164
    },
    "0043af38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043af38(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.0043b1b8();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 124
    },
    "0043b10c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043b10c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 70
    },
    "0043b11c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043b11c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0043b108();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.0043abb8();\n        if (0 < iVar2) {\n            fcn.0043b10c();\n            fcn.0043b11c();\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0043b158": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043b158(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.0043b0e0();\n        iVar3 = fcn.0043ac1c();\n        if (iVar2 < iVar3) {\ncode_r0x0043b18c:\n            fcn.0043adc8();\n            fcn.0043b494(0x43cc68, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.0043b0e0();\n            iVar3 = fcn.0043ac64();\n            if (iVar3 < iVar2) goto code_r0x0043b18c;\n        }\n        fcn.0043b158();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 235
    },
    "0043b1c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043b1c4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0043abe8();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 121
    },
    "0043b458": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b458(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0043b458(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0043b458(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0043c38c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c38c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0043c38c(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0043c38c(arg_8h);\n    }\n    fcn.00403358();\n    return;\n}\n",
        "token_count": 103
    },
    "0043ca68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ca68(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.0043b1b8();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.0043abe8();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.0043b108();\n                }\n                else {\n                    fcn.0043b0e0();\n                    fcn.0043b108();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.0043b1e0();\n        fcn.0043ca68(iVar2);\n        fcn.0043b1b8();\n        fcn.0043ca68(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "0043cec0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cec0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.0043ab70();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.0043ac1c();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.0043abe8();\n        if (cVar1 == '\\0') {\n            fcn.0043cec0(arg_8h);\n        }\n    }\n    iVar2 = fcn.0043b1c4();\n    if (iVar2 != 0) {\n        fcn.0043b1c4();\n        fcn.0043b11c();\n    }\n    fcn.0043b494(0x43cc68, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 260
    },
    "0043eacc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043eacc(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.0040449c(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403508();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004040e4();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0043edcc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043edcc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403508();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0043ee28": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ee28(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403508();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0043ee8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ee8c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar1 = fcn.00403508();\n                if (iVar1 != 0) {\n                    piVar2 = fcn.00413d5c();\n                    (**(*piVar2 + 0x74))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0043f020": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043f020(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 220
    },
    "0043fe90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fe90(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.00413d5c();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.00413c4c();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00442604": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442604(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004440d0();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.004440e0();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.0044170c();\n                }\n            }\n            else {\n                iVar2 = fcn.004440e0();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.004440e0();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00444198": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444198(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004440d0();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004440e0();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004445f8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004445f8(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.004440d0();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.004440e0();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0044468c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0044468c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 74
    },
    "004456bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004456bc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "004469d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004469d0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.00413d5c();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.00413d5c();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00448d2c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00448d2c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.004026f4();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0044903c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044903c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    do {\n        iVar2 = in_EAX;\n        in_EAX = *(iVar2 + 0x30);\n    } while (in_EAX != 0);\n    cVar1 = fcn.004034e4();\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "0044be2c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0044be2c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack28;\n    \n    uStack28 = fcn.00438dd8(2, 0);\n    iVar1 = (***0x4626bc)();\n    iVar2 = fcn.0044f8a0();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044f88c();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.0044f88c();\n                goto code_r0x0044bf0a;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = fcn.0044f8a0();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413d5c();\n            fcn.00403358();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    (**(**(*0x463bb4 + 0x58) + 8))();\n    (***0x462724)(0, 0, fcn.0044bdfc, *(*0x463bb4 + 0x58));\n    iVar2 = fcn.0044f8a0();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044f88c();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.0044f88c();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\ncode_r0x0044bf0a:\n    return CONCAT44(uStack28, uStack28);\n}\n",
        "token_count": 420
    },
    "0044d20c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d20c(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004034e4();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.00438dd8();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0044ee90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ee90(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(arg_8h + -4) + 0x2f0);\n    if ((iVar2 != 0) && (iVar2 = *(iVar2 + 8),  -1 < iVar2 + -1)) {\n        do {\n            fcn.00413d5c();\n            cVar1 = fcn.0043e7b8();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "0044f434": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f434(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44f4fa;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.00432564();\n        fcn.00404180();\n        uVar1 = fcn.00404350();\n        fcn.00404550(uVar1);\n        fcn.00432574();\n        iVar2 = fcn.00404350();\n        if (0 < iVar2) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.004046dc();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00432620();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.0044b2dc();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44f501;\n    uStack24 = 0x44f4f9;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 403
    },
    "0044fa3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044fa3c(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.user32.dll_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.004026f4();\n    }\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00452340": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00452340(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.0044f8ec();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.0044f8d8();\n            cVar1 = fcn.004390dc();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.00438dd8();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.00438dd8();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xdc))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0045253c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045253c(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.0044f8d0();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.0044f8bc();\n            fcn.004337a4(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "004549c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004549c4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    fcn.00404550();\n    iVar1 = fcn.0040c5b8();\n    while (iVar1 != 0) {\n        iVar2 = iVar2 + 1;\n        iVar1 = fcn.0040c5b8();\n    }\n    return iVar2;\n}\n",
        "token_count": 100
    },
    "00458ba4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458ba4(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x458c99;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x458bcc;\n    piVar1 = fcn.00403328();\n    puStack48 = 0x458bdd;\n    fcn.00405020();\n    uStack52 = 0x458c5e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    uVar2 = (***0x462618)(param_2, 0);\n    iVar3 = (***0x462898)();\n    if (iVar3 != 0) {\n        fcn.00404288();\n        (**(*piVar1 + 0x38))();\n        fcn.0040505c();\n        for (iVar3 = 0; *(iVar3 * 4) != 0; iVar3 = iVar3 + 1) {\n            fcn.00404288();\n            (**(*piVar1 + 0x38))();\n        }\n    }\n    *in_FS_OFFSET = uVar2 & 0xffff;\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x458ca0;\n    uStack52 = 0x458c8a;\n    fcn.004040b4();\n    uStack52 = 0x458c98;\n    fcn.00405020();\n    return;\n}\n",
        "token_count": 466
    },
    "0040288c": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nvoid fcn.0040288c(void)\n\n{\n    int16_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_SetCurrentDirectoryA();\n    if (iVar1 == 0) {\n        fcn.0040286c();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00459518": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.00459518(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x459577;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    fcn.004046dc();\n    uVar1 = fcn.00404550();\n    uVar1 = fcn.00404350(uVar1);\n    sub.kernel32.dll_GetTempPathA();\n    fcn.004046dc();\n    fcn.00459420();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x45957e;\n    fcn.00404090();\n    return;\n}\n",
        "token_count": 189
    },
    "004082d8": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.004082d8(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 88
    },
    "004240d0": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.004240d0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x424234);\n    if (iVar1 != 0) {\n        *0x46396c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x424244);\n        *0x463970 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x424258);\n        *0x463964 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42426c);\n        *0x463968 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x424284);\n        *0x463940 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42429c);\n        if (*0x463940 == 0) {\n            *0x463940 = 0x406548;\n        }\n        *0x463944 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4242b4);\n        if (*0x463944 == 0) {\n            *0x463944 = 0x4068e8;\n        }\n        *0x463948 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4242cc);\n        if (*0x463948 == 0) {\n            *0x463948 = 0x406688;\n        }\n        *0x46394c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4242e4);\n        if (*0x46394c == 0) {\n            *0x46394c = 0x406678;\n        }\n        *0x463950 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4242fc);\n        if (*0x463950 == 0) {\n            *0x463950 = 0x406680;\n        }\n        *0x463954 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x424310);\n        if (*0x463954 == 0) {\n            *0x463954 = 0x406898;\n        }\n        *0x463958 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x424324);\n        if (*0x463958 == 0) {\n            *0x463958 = 0x406890;\n        }\n        *0x46395c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42433c);\n        if (*0x46395c == 0) {\n            *0x46395c = 0x4068a0;\n        }\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "004530bc": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004530bc(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x4530e0);\n    if (iVar1 != 0) {\n        *0x461d14 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4530ec);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040af38": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040af38(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < uVar1) {\n        param_1 = uVar1 & 0xffffff00 | in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 99
    },
    "00405dfc": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.00405dfc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x463660 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x46109c * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x46109c);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00405db8();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x46109c);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x46366c;\n}\n",
        "token_count": 158
    },
    "004082ac": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.004082ac(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 85
    },
    "004162f4": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004162f4(uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00416284(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00416284(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.0041601c();\n    return;\n}\n",
        "token_count": 194
    },
    "0042ccd8": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.0042ccd8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0xd) = 0;\n    *(in_EAX + 4) = 0;\n    sub.user32.dll_EnumWindows(fcn.0042cc24);\n    return;\n}\n",
        "token_count": 82
    },
    "00448f44": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint32_t fcn.00448f44(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x448f7c;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 190
    }
}