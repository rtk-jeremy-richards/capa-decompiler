{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004046bd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046bd(uint32_t arg_8h)\n\n{\n    fcn.0040469a();\n    if ((arg_8h & 1) != 0) {\n        fcn.004048c5();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00404aa7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404aa7(uint32_t arg_8h)\n\n{\n    fcn.00404a97();\n    if ((arg_8h & 1) != 0) {\n        fcn.004048c5();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040a8ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a8ac(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00405d7d();\n    var_4h = 0;\n    if (*0x7fadac == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x402c0c);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x402c00);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x7fadac = fcn.00405d0b(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402bf0);\n        *0x7fadb0 = fcn.00405d0b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402bdc);\n        *0x7fadb4 = fcn.00405d0b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402bc0);\n        *0x7fadbc = fcn.00405d0b(uVar3);\n        if (*0x7fadbc != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x402ba8);\n            *0x7fadb8 = fcn.00405d0b(uVar3);\n        }\n    }\n    if ((*0x7fadb8 != iVar1) && (*0x7fadbc != iVar1)) {\n        pcVar4 = fcn.00405d86(*0x7fadb8);\n        pcVar5 = fcn.00405d86(*0x7fadbc);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040a9ee;\n        }\n    }\n    if ((((*0x7fadb0 != iVar1) && (pcVar4 = fcn.00405d86(*0x7fadb0),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x7fadb4 != iVar1 && (pcVar4 = fcn.00405d86(*0x7fadb4),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040a9ee:\n    pcVar4 = fcn.00405d86(*0x7fadac);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 848
    },
    "0040c6dd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c6dd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9a10 ^ &stack0xfffffffc;\n    fcn.00404758(arg_10h);\n    var_14h = fcn.0040d633(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040cbab(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c736:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c776;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c768:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c776;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c768;\n        goto code_r0x0040c736;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c776:\n    fcn.00408e8b(unaff_EBX);\n    return;\n}\n",
        "token_count": 506
    },
    "0040c785": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c785(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9a10 ^ &stack0xfffffffc;\n    fcn.00404758(arg_10h);\n    var_14h = fcn.0040d633(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040d0ef(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c7de:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c81e;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c810:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c81e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c810;\n        goto code_r0x0040c7de;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c81e:\n    fcn.00408e8b(unaff_EBX);\n    return;\n}\n",
        "token_count": 511
    },
    "0040d633": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d8f5)\n// WARNING: Removing unreachable block (ram,0x0040d8be)\n// WARNING: Removing unreachable block (ram,0x0040dca6)\n// WARNING: Removing unreachable block (ram,0x0040d8cd)\n// WARNING: Removing unreachable block (ram,0x0040d8d5)\n// WARNING: Removing unreachable block (ram,0x0040d8db)\n// WARNING: Removing unreachable block (ram,0x0040d8de)\n// WARNING: Removing unreachable block (ram,0x0040d8e5)\n// WARNING: Removing unreachable block (ram,0x0040d8ef)\n// WARNING: Removing unreachable block (ram,0x0040d94a)\n// WARNING: Removing unreachable block (ram,0x0040d944)\n// WARNING: Removing unreachable block (ram,0x0040d950)\n// WARNING: Removing unreachable block (ram,0x0040d96d)\n// WARNING: Removing unreachable block (ram,0x0040d96f)\n// WARNING: Removing unreachable block (ram,0x0040d977)\n// WARNING: Removing unreachable block (ram,0x0040d97a)\n// WARNING: Removing unreachable block (ram,0x0040d97f)\n// WARNING: Removing unreachable block (ram,0x0040d982)\n// WARNING: Removing unreachable block (ram,0x0040dcaf)\n// WARNING: Removing unreachable block (ram,0x0040d98d)\n// WARNING: Removing unreachable block (ram,0x0040dcc6)\n// WARNING: Removing unreachable block (ram,0x0040dccd)\n// WARNING: Removing unreachable block (ram,0x0040d998)\n// WARNING: Removing unreachable block (ram,0x0040d9ab)\n// WARNING: Removing unreachable block (ram,0x0040d9ad)\n// WARNING: Removing unreachable block (ram,0x0040d9ba)\n// WARNING: Removing unreachable block (ram,0x0040d9bf)\n// WARNING: Removing unreachable block (ram,0x0040d9c5)\n// WARNING: Removing unreachable block (ram,0x0040d9ce)\n// WARNING: Removing unreachable block (ram,0x0040d9d5)\n// WARNING: Removing unreachable block (ram,0x0040d9ed)\n// WARNING: Removing unreachable block (ram,0x0040d9fe)\n// WARNING: Removing unreachable block (ram,0x0040da0c)\n// WARNING: Removing unreachable block (ram,0x0040da4b)\n// WARNING: Removing unreachable block (ram,0x0040da54)\n// WARNING: Removing unreachable block (ram,0x0040dc6c)\n// WARNING: Removing unreachable block (ram,0x0040da62)\n// WARNING: Removing unreachable block (ram,0x0040da6c)\n// WARNING: Removing unreachable block (ram,0x0040dc87)\n// WARNING: Removing unreachable block (ram,0x0040da79)\n// WARNING: Removing unreachable block (ram,0x0040da80)\n// WARNING: Removing unreachable block (ram,0x0040da8a)\n// WARNING: Removing unreachable block (ram,0x0040da8f)\n// WARNING: Removing unreachable block (ram,0x0040da9f)\n// WARNING: Removing unreachable block (ram,0x0040daa4)\n// WARNING: Removing unreachable block (ram,0x0040daae)\n// WARNING: Removing unreachable block (ram,0x0040dab3)\n// WARNING: Removing unreachable block (ram,0x0040dac5)\n// WARNING: Removing unreachable block (ram,0x0040dad2)\n// WARNING: Removing unreachable block (ram,0x0040dae1)\n// WARNING: Removing unreachable block (ram,0x0040daee)\n// WARNING: Removing unreachable block (ram,0x0040db0b)\n// WARNING: Removing unreachable block (ram,0x0040db0f)\n// WARNING: Removing unreachable block (ram,0x0040db16)\n// WARNING: Removing unreachable block (ram,0x0040db1f)\n// WARNING: Removing unreachable block (ram,0x0040db22)\n// WARNING: Removing unreachable block (ram,0x0040db33)\n// WARNING: Removing unreachable block (ram,0x0040db41)\n// WARNING: Removing unreachable block (ram,0x0040db4c)\n// WARNING: Removing unreachable block (ram,0x0040db53)\n// WARNING: Removing unreachable block (ram,0x0040db7e)\n// WARNING: Removing unreachable block (ram,0x0040db83)\n// WARNING: Removing unreachable block (ram,0x0040db8e)\n// WARNING: Removing unreachable block (ram,0x0040db97)\n// WARNING: Removing unreachable block (ram,0x0040db9d)\n// WARNING: Removing unreachable block (ram,0x0040dba0)\n// WARNING: Removing unreachable block (ram,0x0040dbc6)\n// WARNING: Removing unreachable block (ram,0x0040dbcb)\n// WARNING: Removing unreachable block (ram,0x0040dbd0)\n// WARNING: Removing unreachable block (ram,0x0040dbdd)\n// WARNING: Removing unreachable block (ram,0x0040dbee)\n// WARNING: Removing unreachable block (ram,0x0040dc1f)\n// WARNING: Removing unreachable block (ram,0x0040dbf4)\n// WARNING: Removing unreachable block (ram,0x0040dc1a)\n// WARNING: Removing unreachable block (ram,0x0040dbfe)\n// WARNING: Removing unreachable block (ram,0x0040dc14)\n// WARNING: Removing unreachable block (ram,0x0040dc0d)\n// WARNING: Removing unreachable block (ram,0x0040dc22)\n// WARNING: Removing unreachable block (ram,0x0040dc4f)\n// WARNING: Removing unreachable block (ram,0x0040dc2c)\n// WARNING: Removing unreachable block (ram,0x0040dab7)\n// WARNING: Removing unreachable block (ram,0x0040da94)\n// WARNING: Removing unreachable block (ram,0x0040dc8a)\n// WARNING: Removing unreachable block (ram,0x0040d9d0)\n// WARNING: Removing unreachable block (ram,0x0040dc94)\n// WARNING: Removing unreachable block (ram,0x0040dcd5)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040d633(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00404f5b();\n        *puVar2 = 0x16;\n        fcn.00407999(0, 0, 0, 0, 0);\n        fcn.00408e8b(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040d6c6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40dcfb\n    (**0x40dcfb)();\n    return;\n}\n",
        "token_count": 1887
    },
    "00403200": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00403200(void)\n\n{\n    *0x7fb1b1 = 0x6c;\n    *0x7fb1ab = 0x6d;\n    *0x7fb1aa = 0x69;\n    *0x7fb1ac = 0x67;\n    *0x7fb1b0 = 100;\n    *0x7fb1b3 = 0;\n    *0x7fb1ad = 0x33;\n    *0x7fb1a9 = 0x73;\n    *0x7fb1b2 = 0x6c;\n    *0x7fb1af = 0x2e;\n    *0x7fb1ae = 0x32;\n    *0x7fb1a8 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x7fb1a8);\n    return;\n}\n",
        "token_count": 211
    },
    "00403270": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403270(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uchar auStack56 [4];\n    uint uStack52;\n    uchar auStack48 [48];\n    \n    if (*0x2f51bdc == 3) {\n        uStack52 = 0;\n        fcn.00408670(auStack48, 0, 0x30);\n        (*_sym.imp.KERNEL32.dll_GetDefaultCommConfigA)(0x402d0c, &uStack52, auStack56);\n        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n    }\n    *param_1 = param_3 ^ param_2;\n    return;\n}\n",
        "token_count": 174
    },
    "0040cbab": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cbab(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040d0ac;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040cce0;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040cce7;\ncode_r0x0040cce0:\n                        do {\n                            var_4h = 1;\ncode_r0x0040cce7:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040ccf5;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040ccf5:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9dd4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9dd4 < iVar12) {\n                if (iVar12 < *0x7f9dd0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x7f9dd0;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040d0ac;\n            }\n            var_10h = *0x7f9dd4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040ce98;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040ce98:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040d0ac:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3679
    },
    "0040d0ef": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d0ef(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040d5f0;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x7f9df0 - 1;\n        iVar4 = *0x7f9df0 + (*0x7f9df0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x7f9df0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040d224;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040d22b;\ncode_r0x0040d224:\n                        do {\n                            var_4h = 1;\ncode_r0x0040d22b:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040d239;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040d239:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9dec - *0x7f9df0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9dec < iVar12) {\n                if (iVar12 < *0x7f9de8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x7f9dfc;\n                    iVar4 = *0x7f9df4 + (*0x7f9df4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9df4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x7f9df4 + (*0x7f9df4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9df4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x7f9dfc + *0x7f9de8;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040d5f0;\n            }\n            var_10h = *0x7f9dec - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x7f9df0 - 1;\n            iVar12 = *0x7f9df0 + (*0x7f9df0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x7f9df0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040d3dc;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040d3dc:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x7f9df4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040d5f0:\n    var_20h = iVar12 << (0x1fU - *0x7f9df4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x7f9df8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x7f9df8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3698
    },
    "0040469a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040469a(uint *param_1)\n\n{\n    *param_1 = 0x401230;\n    if (param_1[2] != 0) {\n        fcn.00404e8b(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040693c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00406a2f: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00406a34)\n// WARNING: Removing unreachable block (ram,0x00406a62)\n// WARNING: Removing unreachable block (ram,0x00406a3a)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040693c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004075e0(0x7f7d78, 0x18);\n    fcn.00407b3b(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x7fa798 != 1) {\n        *0x7fa794 = 1;\n        *0x7fa790 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00405d86(*0x2f53628);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00405d86(*0x2f53624);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00405d7d();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00405d86(*piVar2);\n                        iVar3 = fcn.00405d7d();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00405d86(*0x2f53628);\n                        piVar1 = fcn.00405d86(*0x2f53624);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00406876(0x4011e8);\n        }\n        fcn.00406876(0x4011f0);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00407a61(8);\n    }\n    return;\n}\n",
        "token_count": 809
    },
    "00408e8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e8b(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7f9a10) {\n        return;\n    }\n    *0x7faed8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7faedc = &arg_8h;\n    *0x7fae18 = 0x10001;\n    *0x7fadc0 = 0xc0000409;\n    *0x7fadc4 = 1;\n    var_328h = *0x7f9a10;\n    var_324h = *0x7f9a14;\n    *0x7fadcc = unaff_retaddr;\n    *0x7faea4 = in_GS;\n    *0x7faea8 = in_FS;\n    *0x7faeac = in_ES;\n    *0x7faeb0 = in_DS;\n    *0x7faeb4 = unaff_EDI;\n    *0x7faeb8 = unaff_ESI;\n    *0x7faebc = unaff_EBX;\n    *0x7faec0 = in_EDX;\n    *0x7faec4 = in_ECX;\n    *0x7faec8 = in_EAX;\n    *0x7faecc = unaff_EBP;\n    *0x7faed0 = unaff_retaddr;\n    *0x7faed4 = in_CS;\n    *0x7faee0 = in_SS;\n    *0x7fae10 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040aacb(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402c18);\n    if (*0x7fae10 == 0) {\n        fcn.0040aacb(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 853
    },
    "0040a7e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040a7e3(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00407a61(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00403300": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00403300(uint32_t *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uStack308;\n    uchar auStack288 [4];\n    uchar auStack284 [276];\n    uint32_t *puStack8;\n    \n    uVar3 = *param_1;\n    uVar4 = param_1[1];\n    fcn.004032e0();\n    uStack308 = uVar3;\n    uVar1 = *0x7fa0f4;\n    iVar2 = *0x7fa0f0;\n    if (*0x2f51bdc == 0x14) {\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExA)(0, 0, auStack284);\n        uVar1 = *0x7fa0f4;\n        iVar2 = *0x7fa0f0;\n    }\n    do {\n        if (*0x2f51bdc == 0xfa9) {\n            *0x2f51bd8 = 0xedeb2e40;\n        }\n        else if (*0x2f51bdc == 0x3eb) {\n            *0x2f51b4c = 0;\n        }\n        *0x2f51bd4 = 0xf4ea3dee;\n        fcn.004032f0();\n        if (*0x2f51bdc == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)(0, uVar1);\n        }\n        uVar4 = uVar4 - (uVar3 >> 5 ^ uVar3 * 0x10 + iVar2 ^ uStack308 + 0x23f);\n        if (*0x2f51bdc == 0xc) {\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, auStack288, 0);\n        }\n        fcn.00403260();\n        fcn.00403270();\n        uVar3 = uVar3 - unaff_ESI;\n        uStack308 = uVar4;\n    } while (uVar4 != 0xfffffdc2);\n    puStack8[1] = 0xfffffdc2;\n    *puStack8 = uVar3;\n    return;\n}\n",
        "token_count": 534
    },
    "004034d0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.004034d0(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    \n    fcn.0040c4d0();\n    pcVar5 = _sym.imp.KERNEL32.dll_FindNextVolumeA;\n    pcVar4 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    pcVar3 = _sym.imp.KERNEL32.dll_WriteProfileSectionA;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetNumberFormatA;\n    uVar6 = *0x2f51b50;\n    uVar1 = *0x2f51bdc >> 3;\n    while (uVar1 != 0) {\n        if (*0x2f51bdc == 0x959) {\n            (*pcVar2)();\n            (*pcVar5)();\n            (*pcVar3)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExW)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n            (*pcVar3)();\n            (*_sym.imp.KERNEL32.dll_EnumResourceTypesW)();\n            (*_sym.imp.KERNEL32.dll_SetThreadPriorityBoost)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)();\n            (*_sym.imp.KERNEL32.dll_BeginUpdateResourceA)();\n            (*_sym.imp.KERNEL32.dll_GetComputerNameA)();\n            (*_sym.imp.KERNEL32.dll_FindResourceExA)();\n        }\n        fcn.00403300();\n        uVar6 = uVar6 - 1;\n        uVar1 = uVar6;\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "00403660": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid fcn.00403660(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint uStack3688;\n    uint uStack3684;\n    uint uStack3680;\n    uint uStack3676;\n    uchar *puStack3672;\n    uchar *puStack3668;\n    uint uStack3664;\n    uint uStack3660;\n    uchar *puStack3656;\n    uchar *puStack3652;\n    uint uStack3648;\n    uchar *puStack3644;\n    uchar *puStack3640;\n    uchar uStack3636;\n    uchar uStack3635;\n    ushort uStack3634;\n    uchar uStack3632;\n    uchar uStack3631;\n    ushort uStack3630;\n    ushort uStack3564;\n    ushort uStack3562;\n    ushort uStack3560;\n    ushort uStack3558;\n    ushort uStack3556;\n    ushort uStack3554;\n    uchar auStack3552 [4];\n    uint uStack3548;\n    uint uStack3544;\n    uint uStack3536;\n    uint uStack3528;\n    uint uStack3524;\n    uint uStack3520;\n    uint uStack3516;\n    uint uStack3512;\n    uint uStack3508;\n    uint uStack3504;\n    uint uStack3500;\n    uint uStack3496;\n    uint uStack3488;\n    uint uStack3484;\n    uint uStack3480;\n    uint uStack3476;\n    uint uStack3472;\n    uint uStack3468;\n    uint uStack3464;\n    uint uStack3460;\n    uint uStack3456;\n    uint uStack3452;\n    uint uStack3448;\n    uint uStack3444;\n    ushort uStack3440;\n    ushort uStack3438;\n    ushort uStack3436;\n    uint uStack3434;\n    uint uStack3430;\n    ushort uStack3426;\n    uchar auStack3216 [1076];\n    uchar auStack2140 [2140];\n    \n    if (*0x2f51bdc == 0xac) {\n        (*_sym.imp.USER32.dll_RegisterClassW)();\n        (*_sym.imp.USER32.dll_GetWindowLongW)();\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)();\n        fcn.00404619();\n        fcn.0040469a();\n        uStack3564 = 0x2dd8;\n        uStack3562 = 0x40;\n        fcn.0040462a(&stack0xfffff214);\n        uStack3560 = 0x2f84;\n        uStack3558 = 0x40;\n        fcn.0040469a();\n        fcn.0040467d(0x7fa0e0);\n        fcn.0040469a();\n        fcn.0040471e(0);\n        fcn.0040489e(0, 0);\n        fcn.004049f1(0, 0);\n        fcn.0040471e(0);\n        uStack3632 = 0x21;\n        uStack3631 = 0x37;\n        uStack3630 = 0x40;\n        fcn.00404734(0, 0);\n        uStack3632 = 0;\n        uStack3631 = 0;\n        uStack3630 = 0;\n        uStack3636 = 0;\n        uStack3635 = 0;\n        uStack3634 = 0;\n        puStack3640 = 0x40372a;\n        fcn.0040474d();\n    }\n    pcVar5 = _sym.imp.USER32.dll_CharLowerBuffW;\n    pcVar4 = _sym.imp.USER32.dll_SetCaretPos;\n    pcVar1 = _sym.imp.USER32.dll_GetSysColorBrush;\n    iVar8 = 0;\n    do {\n        if (iVar8 < 0x942e) {\n            (*pcVar4)();\n            (*pcVar5)();\n            (*pcVar1)();\n        }\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x1545e);\n    *0x2f51bdc = *0x2f51bdc + 0x11b1b;\n    fcn.00403640();\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n    pcVar5 = _sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA;\n    pcVar4 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    pcVar1 = _sym.imp.GDI32.dll_GetColorAdjustment;\n    uVar9 = 0;\n    if (*0x2f51bdc != 0) {\n        do {\n            (*0x2f51b50)[uVar9] = *(*0x2f534e4 + 0x11b1b + uVar9);\n            if (*0x2f51bdc == 0xa8) {\n                (*pcVar4)();\n                (*pcVar1)();\n                uStack3632 = 0xdf;\n                uStack3631 = 0x37;\n                uStack3630 = 0x40;\n                (*pcVar5)();\n            }\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < *0x2f51bdc);\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DebugBreak;\n    pcVar5 = _sym.imp.KERNEL32.dll_WriteConsoleA;\n    pcVar4 = _sym.imp.KERNEL32.dll_lstrlenA;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetConsoleDisplayMode;\n    iVar8 = 0;\n    do {\n        if (*0x2f51bdc + iVar8 == 0xe) {\n            uStack3632 = 0;\n            uStack3631 = 0;\n            uStack3630 = 0;\n            uStack3636 = 0x26;\n            uStack3635 = 0x38;\n            uStack3634 = 0x40;\n            (*pcVar5)();\n            uStack3636 = SUB41(&stack0xfffff1ec, 0);\n            uStack3635 = &stack0xfffff1ec >> 8;\n            uStack3634 = &stack0xfffff1ec >> 0x10;\n            puStack3640 = 0x40382d;\n            (*pcVar1)();\n            puStack3640 = 0x40382f;\n            (*pcVar6)();\n            puStack3640 = 0x402de8;\n            puStack3644 = 0x403836;\n            (*pcVar4)();\n            puStack3644 = NULL;\n            uStack3648 = 0x402df4;\n            puStack3652 = 0x402e10;\n            puStack3656 = NULL;\n            uStack3660 = 0x40384a;\n            (*_sym.imp.KERNEL32.dll_FindResourceExW)();\n            uStack3660 = 0;\n            uStack3664 = 0;\n            puStack3668 = NULL;\n            puStack3672 = 0x403856;\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n            puStack3672 = &stack0xfffff294;\n            uStack3676 = 0;\n            uStack3680 = 0;\n            uStack3684 = 0x403868;\n            (*_sym.imp.KERNEL32.dll_GetCPInfoExA)();\n            uStack3684 = 0x402ea4;\n            uStack3688 = 0x40386f;\n            (*pcVar4)();\n            uStack3688 = 0;\n            uStack3634 = 0;\n            uStack3632 = 0;\n            uStack3631 = 0;\n            uStack3630 = 0;\n            uStack3636 = 0;\n            uStack3635 = 0;\n            (*_sym.imp.KERNEL32.dll_GetDateFormatW)(0, 0, &stack0xfffff1cc, 0x402eb0, &stack0xfffff7a4);\n            (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)\n                      (0x402ec8, &stack0xfffff1c4, &stack0xfffff1b0, &stack0xfffff1f8, &stack0xfffff1d0);\n            (*_sym.imp.KERNEL32.dll_InterlockedExchangeAdd)(&stack0xfffff198, 0);\n            (*_sym.imp.KERNEL32.dll_GetCalendarInfoA)(0, 0, 0, &stack0xfffff370, 0, &stack0xfffff1ac);\n        }\n        pcVar3 = _sym.imp.GDI32.dll_GetCharWidthW;\n        pcVar2 = _sym.imp.GDI32.dll_GetCharABCWidthsW;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x4f9409);\n    iVar8 = 0x4cc;\n    do {\n        uStack3632 = 0x1a;\n        uStack3631 = 0x39;\n        uStack3630 = 0x40;\n        (*pcVar3)();\n        uStack3632 = SUB41(&stack0xfffff1f0, 0);\n        uStack3631 = &stack0xfffff1f0 >> 8;\n        uStack3630 = &stack0xfffff1f0 >> 0x10;\n        uStack3636 = 0;\n        uStack3635 = 0;\n        uStack3634 = 0;\n        puStack3640 = NULL;\n        puStack3644 = NULL;\n        uStack3648 = 0x403927;\n        (*pcVar2)();\n        pcVar5 = _sym.imp.KERNEL32.dll_SetLastError;\n        pcVar4 = _sym.imp.KERNEL32.dll_GetLastError;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetConsoleAliasW;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    do {\n        (*pcVar4)();\n        (*pcVar5)();\n        uStack3632 = 0;\n        uStack3631 = 0;\n        uStack3630 = 0;\n        uStack3636 = 0x50;\n        uStack3635 = 0x39;\n        uStack3634 = 0x40;\n        (*pcVar1)();\n        if (iVar8 < 0x3b9f9c7) {\n            uStack3452 = 0x1b1f4c31;\n            uStack3520 = 0x62549a1c;\n            uStack3528 = 0x71b2ec6;\n            uStack3484 = 0x37beb127;\n            uStack3468 = 0x5f430172;\n            uStack3460 = 0x671b5d09;\n            uStack3544 = 0x2e853ae6;\n            uStack3456 = 0x52c4b444;\n            uStack3500 = 0x46a518f9;\n            uStack3516 = 0x35125e2b;\n            uStack3536 = 0x1ad10849;\n            uStack3496 = 0x381ee696;\n            uStack3548 = 0xe11e6c2;\n            uStack3440 = 0xca87;\n            uStack3438 = 0x5a39;\n            uStack3488 = 0xc687888b;\n            uStack3512 = 0x860776d9;\n            uStack3524 = 0x5e38854d;\n            uStack3444 = 0xae3c1051;\n            uStack3472 = 0x11a722d3;\n            uStack3504 = 0x43bb0286;\n            uStack3476 = 0xbc2138cd;\n            uStack3448 = 0x187691d1;\n            uStack3480 = 0xf250e268;\n            uStack3464 = 0xe5da3acd;\n            uStack3508 = 0x7914cc58;\n        }\n    } while ((iVar8 < 0xbf08be) && (iVar8 = iVar8 + 1,  iVar8 < 0x19be898c));\n    fcn.004034d0();\n    fcn.00403620();\n    pcVar6 = _sym.imp.KERNEL32.dll_RemoveDirectoryW;\n    pcVar5 = _sym.imp.KERNEL32.dll_IsBadCodePtr;\n    pcVar4 = _sym.imp.KERNEL32.dll_TzSpecificLocalTimeToSystemTime;\n    pcVar1 = _sym.imp.KERNEL32.dll_ScrollConsoleScreenBufferW;\n    iVar8 = 0x7b;\n    do {\n        if (*0x2f51bdc == 0x86) {\n            (*pcVar6)();\n            uStack3438 = 0;\n            uStack3436 = 0;\n            uStack3434 = 0;\n            uStack3430 = 0;\n            uStack3426 = 0;\n            uStack3564 = 0;\n            uStack3562 = 0;\n            uStack3560 = 0;\n            uStack3558 = 0;\n            uStack3556 = 0;\n            uStack3554 = 0;\n            uStack3440 = 0;\n            uStack3632 = 0x4c;\n            uStack3631 = 0x3e;\n            uStack3630 = 0x40;\n            (*pcVar4)();\n            uStack3632 = 0;\n            uStack3631 = 0;\n            uStack3630 = 0;\n            uStack3636 = 0;\n            uStack3635 = 0;\n            uStack3634 = 0;\n            puStack3640 = NULL;\n            puStack3644 = 0x403e58;\n            (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)();\n            puStack3644 = &stack0xfffff1e0;\n            uStack3648 = 0;\n            puStack3652 = &stack0xfffff1e4;\n            puStack3656 = &stack0xfffff214;\n            uStack3660 = 0;\n            uStack3664 = 0x403e7e;\n            (*pcVar1)();\n            uStack3664 = 0;\n            puStack3668 = 0x403e82;\n            (*pcVar5)();\n            puStack3668 = &stack0xfffff224;\n            puStack3672 = NULL;\n            uStack3676 = 0x403e8f;\n            (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)();\n            uStack3676 = 0;\n            uStack3680 = 0;\n            uStack3684 = 0;\n            uStack3688 = 0;\n            (*_sym.imp.KERNEL32.dll_EnumResourceNamesW)();\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, 0);\n        }\n        pcVar7 = _sym.imp.KERNEL32.dll_TlsAlloc;\n        pcVar3 = _sym.imp.KERNEL32.dll_GetWindowsDirectoryA;\n        pcVar2 = _sym.imp.KERNEL32.dll_BackupSeek;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    iVar8 = 0x180ef;\n    do {\n        if (*0x2f51bdc == 0x1f) {\n            (*pcVar3)();\n            uStack3632 = 0xf1;\n            uStack3631 = 0x3e;\n            uStack3630 = 0x40;\n            (*pcVar3)();\n            uStack3632 = SUB41(&stack0xfffff1ec, 0);\n            uStack3631 = &stack0xfffff1ec >> 8;\n            uStack3630 = &stack0xfffff1ec >> 0x10;\n            uStack3636 = SUB41(&stack0xfffff1f0, 0);\n            uStack3635 = &stack0xfffff1f0 >> 8;\n            uStack3634 = &stack0xfffff1f0 >> 0x10;\n            puStack3640 = &stack0xfffff220;\n            puStack3644 = NULL;\n            uStack3648 = 0;\n            puStack3652 = NULL;\n            puStack3656 = 0x403f10;\n            (*pcVar2)();\n            puStack3656 = 0x403f12;\n            (*pcVar7)();\n        }\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    fcn.00403200();\n    *0x2f51b54 = *0x2f51b50;\n    (**0x2f51b50)();\n    return;\n}\n",
        "token_count": 3746
    },
    "004032e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004032e0(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "004032f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004032f0(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "00403620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403620(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00406a68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a68(uint arg_8h)\n\n{\n    fcn.0040693c(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00407562": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407576)\n// WARNING: Removing unreachable block (ram,0x0040757c)\n// WARNING: Removing unreachable block (ram,0x0040757e)\n\nvoid fcn.00407562(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00406679": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406679(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004075e0(0x7f7d58, 0xc);\n    fcn.00407b3b(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x7fa764;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x7fa760;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004066bd;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404e8b(arg_8h_00);\ncode_r0x004066bd:\n        fcn.00404e8b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004066e0();\n    fcn.00407625();\n    return;\n}\n",
        "token_count": 398
    }
}