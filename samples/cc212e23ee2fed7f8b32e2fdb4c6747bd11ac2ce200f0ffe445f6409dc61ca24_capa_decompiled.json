{
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401129) overlaps instruction at (ram,0x00401127)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Type propagation algorithm not settling\n\nvoid entry0(uchar *param_1, int32_t param_2, uint param_3, int32_t param_4, uint8_t *param_5, int32_t param_6, \n           uint32_t param_7)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint8_t *puVar6;\n    char **ppcVar7;\n    char *pcVar10;\n    int32_t extraout_ECX;\n    int32_t iVar11;\n    uint8_t *puVar12;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uchar *unaff_ESI;\n    char *unaff_EDI;\n    bool bVar13;\n    char in_AF;\n    ulong uVar14;\n    char *unaff_retaddr;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    \n    uVar14 = sub.MSVBVM60.DLL_ThunRTMain(0x40129c);\n    puVar6 = uVar14;\n    uVar5 = uVar14;\n    *puVar6 = *puVar6 + uVar5;\n    *puVar6 = *puVar6 + uVar5;\n    *puVar6 = *puVar6 + uVar5;\n    *puVar6 = *puVar6 ^ uVar5;\n    *puVar6 = *puVar6 + uVar5;\n    puVar6 = puVar6 + 1;\n    cVar4 = puVar6;\n    *puVar6 = *puVar6 + cVar4;\n    *puVar6 = *puVar6 + cVar4;\n    *puVar6 = *puVar6 + cVar4;\n    puVar12 = unaff_ESI + 0xd;\n    bVar13 = CARRY1(*puVar12, unaff_EBX);\n    *puVar12 = *puVar12 + unaff_EBX;\n    uVar8 = uVar14 >> 0x20;\n    iVar11 = extraout_ECX;\n    if (extraout_ECX == 0) {\n        uVar8 = param_7;\n        iVar11 = param_6;\n        puVar6 = param_5;\n        unaff_EBX = param_4;\n        unaff_EBP = param_2;\n        unaff_ESI = param_1;\n        unaff_EDI = unaff_retaddr;\n    }\n    cVar4 = uVar8;\n    uVar3 = CONCAT11((*puVar12 < '\\0') << 7 | (*puVar12 == 0) << 6 | in_AF << 4 | ((POPCOUNT(*puVar12) & 1U) == 0) << 2\n                     | 2U | bVar13, cVar4);\n    ppcVar7 = uVar8 & 0xffff0000 | uVar3;\n    puVar12 = iVar11 + 1;\n    iVar1 = *(ppcVar7 + 0x4e);\n    *ppcVar7 = *ppcVar7 + cVar4;\n    *ppcVar7 = *ppcVar7 + cVar4;\n    *ppcVar7 = *ppcVar7 + cVar4;\n    *ppcVar7 = *ppcVar7 + ppcVar7;\n    *ppcVar7 = *ppcVar7 + cVar4;\n    uVar5 = cVar4 + *puVar12;\n    uVar8 = uVar8 & 0xffff0000 | uVar3 & 0xffffff00;\n    puVar9 = uVar8 | uVar5;\n    *puVar9 = *puVar9 + uVar5;\n    *(unaff_EBP + 0x61) = *(unaff_EBP + 0x61) + puVar12;\n    out(*unaff_ESI, puVar6);\n    iVar2 = *(unaff_EBX + 0x69) * 0x6d73696e;\n    if (iVar2 == iVar2) {\n        out(*(unaff_ESI + 1), puVar6);\n        pcVar10 = puVar9 ^ *puVar9;\n        uVar5 = pcVar10;\n        *pcVar10 = *pcVar10 + uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        *unaff_EDI = *unaff_EDI + uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        unaff_ESI[unaff_EBX + 0x60045] = unaff_ESI[unaff_EBX + 0x60045] + unaff_EBX;\n        *pcVar10 = *pcVar10 + uVar5;\n        if (-1 < *pcVar10) {\n            pcVar10 = pcVar10 + 1;\n            cVar4 = pcVar10;\n            *puVar12 = *puVar12 + cVar4;\n            *(pcVar10 * 2) = *(pcVar10 * 2) + cVar4;\n            uVar5 = cVar4 - *pcVar10;\n            pcVar10 = pcVar10 & 0xffffff00 | uVar5;\n            *pcVar10 = *pcVar10 + uVar5;\n            *pcVar10 = *pcVar10 + uVar5;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *puVar12 = *puVar12 ^ uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        *pcVar10 = *pcVar10 + uVar5;\n        puVar6[CONCAT31(puVar12 >> 8, 0x9b) + 0x10040] = puVar6[CONCAT31(puVar12 >> 8, 0x9b) + 0x10040] + uVar5;\n        pcVar10 = pcVar10 + 0x401af800;\n        *pcVar10 = *pcVar10 + pcVar10;\n        *pcVar10 = *pcVar10 + pcVar10;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *puVar9 = *puVar9 + uVar5;\n    *(iVar1 + bVar13 + 0xdfc9bc7) = 0x9bb2;\n    *puVar9 = *puVar9 + uVar5;\n    *puVar9 = *puVar9 + uVar5;\n    *puVar9 = *puVar9 + uVar5;\n    *puVar9 = *puVar9 + uVar5;\n    *puVar9 = *puVar9 + uVar5;\n    puVar6[iVar11 + 0x10041] = puVar6[iVar11 + 0x10041] + (unaff_EBX >> 8);\n    uVar5 = (uVar5 + *puVar9) - *(uVar8 | uVar5 + *puVar9);\n    pcVar10 = uVar8 | uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    *pcVar10 = *pcVar10 + uVar5;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 1786
    }
}