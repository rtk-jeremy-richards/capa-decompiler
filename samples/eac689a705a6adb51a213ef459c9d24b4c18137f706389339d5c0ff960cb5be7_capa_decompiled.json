{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl method.std::bad_alloc.virtual_0(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::bad_alloc.0;\n    fcn.00408880();\n    if ((arg_8h & 1) != 0) {\n        fcn.004098e1();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040a0c2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0c2(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_ch;\n    \n    do {\n        iVar2 = fcn.0040908c(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040d979(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x42b7e8 & 1) == 0) {\n        *0x42b7e8 = *0x42b7e8 | 1;\n        fcn.0040a0a7();\n        fcn.0040fa8f(0x41e7bb);\n    }\n    fcn.004085ea(0x42b7dc);\n    fcn.0040a36b(&var_ch, 0x42667c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 226
    },
    "0040e0d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e0d4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c440(0x4260b0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040a86a();\n        *puVar2 = 0;\n        puVar2 = fcn.0040a857();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x42c378)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x42c380;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00412883(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040a857();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040a86a();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040d9a1(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040e1a6(0x4260b0);\n                goto code_r0x0040e1a0;\n            }\n        }\n        puVar2 = fcn.0040a86a();\n        *puVar2 = 0;\n        puVar2 = fcn.0040a857();\n        *puVar2 = 9;\n        fcn.004097db(0, 0, 0, 0, 0);\n    }\ncode_r0x0040e1a0:\n    fcn.0040c485();\n    return;\n}\n",
        "token_count": 645
    },
    "0041365c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041365c(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040e861();\n    var_4h = 0;\n    if (*0x42c178 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x41fee0);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x42c178 = fcn.0040e7ef(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x42c17c = fcn.0040e7ef(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x42c180 = fcn.0040e7ef(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x42c188 = fcn.0040e7ef(uVar3);\n        if (*0x42c188 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x42c184 = fcn.0040e7ef(uVar3);\n        }\n    }\n    if ((*0x42c184 != iVar1) && (*0x42c188 != iVar1)) {\n        pcVar4 = fcn.0040e86a(*0x42c184);\n        pcVar5 = fcn.0040e86a(*0x42c188);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0041379e;\n        }\n    }\n    if ((((*0x42c17c != iVar1) && (pcVar4 = fcn.0040e86a(*0x42c17c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x42c180 != iVar1 && (pcVar4 = fcn.0040e86a(*0x42c180),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0041379e:\n    pcVar4 = fcn.0040e86a(*0x42c178);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 837
    },
    "00417bce": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417bce(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42a728 ^ &stack0xfffffffc;\n    fcn.0040aa04(arg_10h);\n    var_14h = fcn.00418d28(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004182a0(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00417c27:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00417c67;\n        }\n        if (iVar1 != 2) {\ncode_r0x00417c59:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00417c67;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00417c59;\n        goto code_r0x00417c27;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00417c67:\n    fcn.0040a79d(unaff_EBX);\n    return;\n}\n",
        "token_count": 504
    },
    "00417c76": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417c76(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42a728 ^ &stack0xfffffffc;\n    fcn.0040aa04(arg_10h);\n    var_14h = fcn.00418d28(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004187e4(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00417ccf:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00417d0f;\n        }\n        if (iVar1 != 2) {\ncode_r0x00417d01:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00417d0f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00417d01;\n        goto code_r0x00417ccf;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00417d0f:\n    fcn.0040a79d(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "00408880": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408880(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0040b731(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00405954": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405954(uint8_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint in_ECX;\n    uint *unaff_EDI;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = *(*(in_EAX + 0x18) + 4);\n    var_4h = CONCAT31(in_ECX >> 8, 1);\n    if (*(puVar2 + 0x15) == '\\0') {\n        do {\n            var_4h = var_4h & 0xffffff00 | *arg_8h < *(puVar2 + 3);\n            if (*arg_8h < *(puVar2 + 3)) {\n                puVar2 = *puVar2;\n            }\n            else {\n                puVar2 = puVar2[2];\n            }\n        } while (*(puVar2 + 0x15) == '\\0');\n    }\n    puVar2 = fcn.00406a38(&var_8h, var_4h, arg_8h);\n    uVar1 = *puVar2;\n    unaff_EDI[1] = puVar2[1];\n    *unaff_EDI = uVar1;\n    return;\n}\n",
        "token_count": 302
    },
    "004059ad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004059ad(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint in_ECX;\n    uint *unaff_EDI;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = *(*(in_EAX + 0x18) + 4);\n    var_4h = CONCAT31(in_ECX >> 8, 1);\n    if (*(puVar2 + 0x15) == '\\0') {\n        do {\n            var_4h = var_4h & 0xffffff00 | *arg_8h < puVar2[3];\n            if (*arg_8h < puVar2[3]) {\n                puVar2 = *puVar2;\n            }\n            else {\n                puVar2 = puVar2[2];\n            }\n        } while (*(puVar2 + 0x15) == '\\0');\n    }\n    puVar2 = fcn.00406a38(&var_8h, var_4h, arg_8h);\n    uVar1 = *puVar2;\n    unaff_EDI[1] = puVar2[1];\n    *unaff_EDI = uVar1;\n    return;\n}\n",
        "token_count": 298
    },
    "00405a3d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405a3d(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint in_ECX;\n    uint *unaff_EDI;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = *(*(in_EAX + 0x18) + 4);\n    var_4h = CONCAT31(in_ECX >> 8, 1);\n    if (*(puVar2 + 0x15) == '\\0') {\n        do {\n            var_4h = var_4h & 0xffffff00 | *arg_8h < *(puVar2 + 3);\n            if (*arg_8h < *(puVar2 + 3)) {\n                puVar2 = *puVar2;\n            }\n            else {\n                puVar2 = puVar2[2];\n            }\n        } while (*(puVar2 + 0x15) == '\\0');\n    }\n    puVar2 = fcn.00406a38(&var_8h, var_4h, arg_8h);\n    uVar1 = *puVar2;\n    unaff_EDI[1] = puVar2[1];\n    *unaff_EDI = uVar1;\n    return;\n}\n",
        "token_count": 304
    },
    "00405abd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405abd(uint16_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint in_ECX;\n    uint *unaff_EDI;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = *(*(in_EAX + 0x18) + 4);\n    var_4h = CONCAT31(in_ECX >> 8, 1);\n    if (*(puVar2 + 0x11) == '\\0') {\n        do {\n            var_4h = var_4h & 0xffffff00 | *arg_8h < *(puVar2 + 3);\n            if (*arg_8h < *(puVar2 + 3)) {\n                puVar2 = *puVar2;\n            }\n            else {\n                puVar2 = puVar2[2];\n            }\n        } while (*(puVar2 + 0x11) == '\\0');\n    }\n    puVar2 = fcn.00407362(&var_8h, var_4h, arg_8h);\n    uVar1 = *puVar2;\n    unaff_EDI[1] = puVar2[1];\n    *unaff_EDI = uVar1;\n    return;\n}\n",
        "token_count": 301
    },
    "00405ba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405ba4(uint8_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint in_ECX;\n    uint *unaff_EDI;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = *(*(in_EAX + 0x18) + 4);\n    var_4h = CONCAT31(in_ECX >> 8, 1);\n    if (*(puVar2 + 0x11) == '\\0') {\n        do {\n            var_4h = var_4h & 0xffffff00 | *arg_8h < *(puVar2 + 3);\n            if (*arg_8h < *(puVar2 + 3)) {\n                puVar2 = *puVar2;\n            }\n            else {\n                puVar2 = puVar2[2];\n            }\n        } while (*(puVar2 + 0x11) == '\\0');\n    }\n    puVar2 = fcn.00407362(&var_8h, var_4h, arg_8h);\n    uVar1 = *puVar2;\n    unaff_EDI[1] = puVar2[1];\n    *unaff_EDI = uVar1;\n    return;\n}\n",
        "token_count": 302
    },
    "00405c58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405c58(uint8_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint in_ECX;\n    uint *unaff_EDI;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = *(*(in_EAX + 0x18) + 4);\n    var_4h = CONCAT31(in_ECX >> 8, 1);\n    if (*(puVar2 + 0xf) == '\\0') {\n        do {\n            var_4h = var_4h & 0xffffff00 | *arg_8h < *(puVar2 + 3);\n            if (*arg_8h < *(puVar2 + 3)) {\n                puVar2 = *puVar2;\n            }\n            else {\n                puVar2 = puVar2[2];\n            }\n        } while (*(puVar2 + 0xf) == '\\0');\n    }\n    puVar2 = fcn.00407553(&var_8h, var_4h, arg_8h);\n    uVar1 = *puVar2;\n    unaff_EDI[1] = puVar2[1];\n    *unaff_EDI = uVar1;\n    return;\n}\n",
        "token_count": 300
    },
    "00405e6a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e6a(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.0040863d();\n    }\n    uVar2 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar2 < arg_ch) {\n        arg_ch = uVar2;\n    }\n    if (arg_ch != 0) {\n        puVar3 = in_ECX + 4;\n        puVar1 = puVar3;\n        if (0xf < *(in_ECX + 0x18)) {\n            puVar1 = *puVar3;\n            puVar3 = *puVar3;\n        }\n        fcn.00401068(puVar3 + arg_8h, *(in_ECX + 0x18) - arg_8h, puVar1 + arg_ch + arg_8h, uVar2 - arg_ch);\n        fcn.00405faa(*(in_ECX + 0x14) - arg_ch);\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00405ed9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405ed9(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    bool bVar7;\n    uint *var_8h;\n    char *var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0;\n    }\n    else {\n        uVar3 = *(arg_8h + 0x14);\n        if ((uVar3 != 0) && (arg_ch <= uVar3)) {\n            pcVar4 = uVar3 + (1 - arg_ch);\n            if (*(arg_8h + 0x18) < 0x10) {\n                var_4h = arg_8h + 4;\n            }\n            else {\n                var_4h = *(arg_8h + 4);\n            }\n            var_8h = arg_8h + 4;\n            while (pcVar2 = fcn.00409160(var_4h, 0x41, pcVar4),  pcVar2 != NULL) {\n                bVar7 = true;\n                uVar3 = arg_ch;\n                pcVar5 = pcVar2;\n                pcVar6 = \"Abbreviated\";\n                do {\n                    if (uVar3 == 0) break;\n                    uVar3 = uVar3 - 1;\n                    bVar7 = *pcVar5 == *pcVar6;\n                    pcVar5 = pcVar5 + 1;\n                    pcVar6 = pcVar6 + 1;\n                } while (bVar7);\n                if (bVar7) {\n                    if (0xf < *(arg_8h + 0x18)) {\n                        var_8h = *var_8h;\n                    }\n                    return pcVar2 - var_8h;\n                }\n                pcVar4 = var_4h + pcVar4 + (-1 - pcVar2);\n                var_4h = pcVar2 + 1;\n            }\n        }\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 486
    },
    "00405fc9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405fc9(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    int32_t in_ECX;\n    \n    if (arg_8h == 0xffffffff) {\n        fcn.00408605();\n    }\n    if (*(in_ECX + 0x18) < arg_8h) {\n        fcn.0040664c(arg_8h, *(in_ECX + 0x14));\n    }\n    else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n        if (arg_8h == 0) {\n            fcn.00405faa(0);\n        }\n    }\n    else {\n        arg_ch_00 = *(in_ECX + 0x14);\n        if (arg_8h < *(in_ECX + 0x14)) {\n            arg_ch_00 = arg_8h;\n        }\n        fcn.00406029(1, arg_ch_00);\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 236
    },
    "00406029": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406029(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    \n    if ((arg_8h != '\\0') && (0xf < *(in_ECX + 0x18))) {\n        arg_10h = *(in_ECX + 4);\n        if (arg_ch != 0) {\n            fcn.0040104c(in_ECX + 4, 0x10, arg_10h, arg_ch);\n        }\n        fcn.004098e1(arg_10h);\n    }\n    *(in_ECX + 0x18) = 0xf;\n    fcn.00405faa(arg_ch);\n    return;\n}\n",
        "token_count": 166
    },
    "00406074": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406074(int32_t **arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = in_EAX[3];\n    if ((in_EAX[4] - piVar1 & 0xfffffffcU) == 0) {\n        iVar4 = 0;\n    }\n    else {\n        if (in_EAX[4] < piVar1) {\n            fcn.00409801();\n        }\n        if ((arg_10h == NULL) || (arg_10h != *in_EAX)) {\n            fcn.00409801();\n        }\n        iVar4 = arg_14h - piVar1 >> 2;\n    }\n    fcn.004067c2(arg_10h, arg_14h);\n    piVar1 = in_EAX[3];\n    if (in_EAX[4] <= piVar1 && piVar1 != in_EAX[4]) {\n        fcn.00409801();\n    }\n    piVar2 = *in_EAX;\n    if (piVar2 == NULL) {\n        fcn.00409801();\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = *piVar2;\n    }\n    piVar1 = piVar1 + iVar4;\n    if (piVar1 < *(iVar3 + 0x10) || piVar1 == *(iVar3 + 0x10)) {\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if (*(iVar4 + 0xc) <= piVar1) goto code_r0x00406108;\n    }\n    fcn.00409801();\ncode_r0x00406108:\n    arg_8h[1] = piVar1;\n    *arg_8h = piVar2;\n    return;\n}\n",
        "token_count": 482
    },
    "004062cf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062cf(uchar *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    \n    if (((*(in_EAX + 0x18) + *(in_EAX + 0x1c) & 0xfU) == 0) &&\n       (uVar1 = *(in_EAX + 0x1c) + 0x10U >> 4,  *(in_EAX + 0x14) < uVar1 || *(in_EAX + 0x14) == uVar1)) {\n        fcn.00406e69();\n    }\n    uVar4 = *(in_EAX + 0x18) + *(in_EAX + 0x1c);\n    uVar1 = uVar4 >> 4;\n    if (*(in_EAX + 0x14) <= uVar1) {\n        uVar1 = uVar1 - *(in_EAX + 0x14);\n    }\n    iVar3 = uVar1 * 4;\n    if (*(iVar3 + *(in_EAX + 0x10)) == 0) {\n        uVar2 = fcn.0040a0c2(0x10);\n        *(iVar3 + *(in_EAX + 0x10)) = uVar2;\n    }\n    puVar5 = (uVar4 & 0xf) + *(*(in_EAX + 0x10) + iVar3);\n    if (puVar5 != NULL) {\n        *puVar5 = *arg_8h;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return;\n}\n",
        "token_count": 407
    },
    "00406340": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406340(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    if (((*(in_EAX + 0x18) + *(in_EAX + 0x1c) & 3U) == 0) &&\n       (uVar2 = *(in_EAX + 0x1c) + 4U >> 2,  *(in_EAX + 0x14) < uVar2 || *(in_EAX + 0x14) == uVar2)) {\n        fcn.00406f9e();\n    }\n    uVar5 = *(in_EAX + 0x18) + *(in_EAX + 0x1c);\n    uVar2 = uVar5 >> 2;\n    if (*(in_EAX + 0x14) <= uVar2) {\n        uVar2 = uVar2 - *(in_EAX + 0x14);\n    }\n    iVar4 = uVar2 * 4;\n    if (*(iVar4 + *(in_EAX + 0x10)) == 0) {\n        uVar3 = fcn.004069af();\n        *(iVar4 + *(in_EAX + 0x10)) = uVar3;\n    }\n    puVar1 = *(*(in_EAX + 0x10) + iVar4) + (uVar5 & 3) * 4;\n    if (puVar1 != NULL) {\n        *puVar1 = *arg_8h;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return;\n}\n",
        "token_count": 400
    },
    "004063ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063ec(ushort *arg_8h)\n\n{\n    ushort *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    if (((*(in_EAX + 0x18) + *(in_EAX + 0x1c) & 7U) == 0) &&\n       (uVar2 = *(in_EAX + 0x1c) + 8U >> 3,  *(in_EAX + 0x14) < uVar2 || *(in_EAX + 0x14) == uVar2)) {\n        fcn.0040718e();\n    }\n    uVar5 = *(in_EAX + 0x18) + *(in_EAX + 0x1c);\n    uVar2 = uVar5 >> 3;\n    if (*(in_EAX + 0x14) <= uVar2) {\n        uVar2 = uVar2 - *(in_EAX + 0x14);\n    }\n    iVar4 = uVar2 * 4;\n    if (*(iVar4 + *(in_EAX + 0x10)) == 0) {\n        uVar3 = fcn.0040a0c2(0x10);\n        *(iVar4 + *(in_EAX + 0x10)) = uVar3;\n    }\n    puVar1 = *(*(in_EAX + 0x10) + iVar4) + (uVar5 & 7) * 2;\n    if (puVar1 != NULL) {\n        *puVar1 = *arg_8h;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return;\n}\n",
        "token_count": 407
    },
    "00406464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406464(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    \n    cVar1 = *(arg_8h + 0x11);\n    while (cVar1 == '\\0') {\n        fcn.00406464(arg_8h[2]);\n        piVar2 = *arg_8h;\n        fcn.004098e1(arg_8h);\n        arg_8h = piVar2;\n        cVar1 = *(piVar2 + 0x11);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "004064cd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004064cd(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    \n    cVar1 = *(arg_8h + 0xf);\n    while (cVar1 == '\\0') {\n        fcn.004064cd(arg_8h[2]);\n        piVar2 = *arg_8h;\n        fcn.004098e1(arg_8h);\n        arg_8h = piVar2;\n        cVar1 = *(piVar2 + 0xf);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0040664c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0040664c(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0041b5ec();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    uVar4 = *(unaff_EBP + 8) | 0xf;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar1 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar1;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar4 / 3 < uVar2) && (uVar1 <= -uVar2 - 2)) {\n            uVar4 = uVar2 + uVar1;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.004067af(uVar4 + 1);\n    *(unaff_EBP + -0x18) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0xc) != 0) {\n        if (*(extraout_ECX + 0x18) < 0x10) {\n            arg_10h = extraout_ECX + 4;\n        }\n        else {\n            arg_10h = *(extraout_ECX + 4);\n        }\n        fcn.0040104c(*(unaff_EBP + -0x18), uVar4 + 1, arg_10h, *(unaff_EBP + 0xc));\n    }\n    fcn.00406029(1, 0);\n    *(extraout_ECX + 4) = *(unaff_EBP + -0x18);\n    *(extraout_ECX + 0x18) = uVar4;\n    fcn.00405faa(*(unaff_EBP + 0xc));\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 663
    },
    "00406749": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406749(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t in_ECX;\n    uint *puVar1;\n    \n    if (arg_8h != NULL) {\n        in_EAX = in_ECX + 4;\n        puVar1 = in_EAX;\n        if (0xf < *(in_ECX + 0x18)) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= arg_8h) {\n            if (0xf < *(in_ECX + 0x18)) {\n                in_EAX = *in_EAX;\n            }\n            if (arg_8h < *(in_ECX + 0x14) + in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 202
    },
    "00406a38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a38(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    uint uVar3;\n    int32_t **in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    uint *unaff_ESI;\n    int32_t *piVar8;\n    uint var_44h;\n    uint var_1ch;\n    \n    if (0x1ffffffd < unaff_ESI[7]) {\n        fcn.004056cd(\"map/set<T> too long\");\n        fcn.004010f1(&var_1ch);\n        fcn.0040a36b(&var_44h, 0x426644);\n    }\n    piVar4 = fcn.004079b5(unaff_ESI[6]);\n    unaff_ESI[7] = unaff_ESI[7] + 1;\n    piVar8 = piVar4;\n    if (in_EAX == unaff_ESI[6]) {\n        unaff_ESI[6][1] = piVar4;\n        *unaff_ESI[6] = piVar4;\n        iVar5 = unaff_ESI[6];\n    }\n    else {\n        if (arg_ch != '\\0') {\n            *in_EAX = piVar4;\n            if (in_EAX == *unaff_ESI[6]) {\n                *unaff_ESI[6] = piVar4;\n            }\n            goto code_r0x00406b4e;\n        }\n        in_EAX[2] = piVar4;\n        iVar5 = unaff_ESI[6];\n        if (in_EAX != *(iVar5 + 8)) goto code_r0x00406b4e;\n    }\n    *(iVar5 + 8) = piVar4;\ncode_r0x00406b4e:\n    do {\n        while( true ) {\n            ppiVar6 = piVar8 + 1;\n            if (*(*ppiVar6 + 5) != '\\0') {\n                *(*(unaff_ESI[6] + 4) + 0x14) = 1;\n                uVar3 = *unaff_ESI;\n                arg_8h[1] = piVar4;\n                *arg_8h = uVar3;\n                return;\n            }\n            piVar1 = *ppiVar6;\n            ppiVar2 = piVar1[1];\n            if (piVar1 != *ppiVar2) break;\n            piVar7 = ppiVar2[2];\n            if (*(piVar7 + 5) == '\\0') {\ncode_r0x00406b0a:\n                *(piVar1 + 5) = 1;\n                *(piVar7 + 5) = 1;\n                *((*ppiVar6)[1] + 0x14) = 0;\n                piVar8 = (*ppiVar6)[1];\n            }\n            else {\n                if (piVar8 == piVar1[2]) {\n                    fcn.004076e7(unaff_ESI);\n                    piVar8 = piVar1;\n                }\n                *(piVar8[1] + 0x14) = 1;\n                *(*(piVar8[1] + 4) + 0x14) = 0;\n                fcn.00407a27(unaff_ESI);\n            }\n        }\n        piVar7 = *ppiVar2;\n        if (*(piVar7 + 5) == '\\0') goto code_r0x00406b0a;\n        if (piVar8 == *piVar1) {\n            fcn.00407a27(unaff_ESI);\n            piVar8 = piVar1;\n        }\n        *(piVar8[1] + 0x14) = 1;\n        *(*(piVar8[1] + 4) + 0x14) = 0;\n        fcn.004076e7(unaff_ESI);\n    } while( true );\n}\n",
        "token_count": 910
    },
    "00406b74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00406b74(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t *unaff_EBX;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_EAX[6];\n    if ((arg_8h == 0) || (arg_8h != *in_EAX)) {\n        fcn.00409801();\n    }\n    if (arg_ch == iVar1) {\n        iVar1 = in_EAX[6];\n        if ((arg_10h == 0) || (arg_10h != *in_EAX)) {\n            fcn.00409801();\n        }\n        if (arg_14h == iVar1) {\n            fcn.004083ff(*(in_EAX[6] + 4));\n            *(in_EAX[6] + 4) = in_EAX[6];\n            in_EAX[7] = 0;\n            *in_EAX[6] = in_EAX[6];\n            *(in_EAX[6] + 8) = in_EAX[6];\n            unaff_EBX[1] = *in_EAX[6];\n            *unaff_EBX = *in_EAX;\n            return;\n        }\n    }\n    while( true ) {\n        if ((arg_8h == 0) || (arg_8h != arg_10h)) {\n            fcn.00409801();\n        }\n        if (arg_ch == arg_14h) break;\n        fcn.004083b2();\n        fcn.0040772a(in_EAX, &var_10h, arg_8h, arg_ch);\n    }\n    *unaff_EBX = *in_EAX;\n    unaff_EBX[1] = arg_ch;\n    return;\n}\n",
        "token_count": 452
    },
    "00406c92": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid fcn.00406c92(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x406c9c;\n    fcn.0041b5ec();\n    *(unaff_EBP + -0x10) = &fcn.00406c92::var_2ch;\n    iVar7 = *(extraout_EDX + 0xc);\n    if (iVar7 == 0) {\n        *(unaff_EBP + -0x14) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x14) = *(extraout_EDX + 0x14) - iVar7;\n    }\n    if (extraout_ECX != 0) {\n        iVar2 = *(extraout_EDX + 0x10);\n        if ((iVar7 - iVar2) - 1U < extraout_ECX) {\n            fcn.00406981();\n            iVar7 = extraout_ECX_00;\n        }\n        uVar1 = (iVar2 - iVar7) + extraout_ECX;\n        if (*(unaff_EBP + -0x14) < uVar1) {\n            uVar5 = *(unaff_EBP + -0x14) >> 1;\n            if (-uVar5 - 1 < *(unaff_EBP + -0x14)) {\n                *(unaff_EBP + -0x14) = 0;\n            }\n            else {\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + uVar5;\n            }\n            if (*(unaff_EBP + -0x14) < uVar1) {\n                *(unaff_EBP + -0x14) = uVar1;\n            }\n            iVar2 = fcn.00408538(*(unaff_EBP + -0x14));\n            *(unaff_EBP + -0x20) = iVar2;\n            iVar7 = *(extraout_EDX + 0xc);\n            *(unaff_EBP + -0x18) = 0;\n            *(unaff_EBP + -4) = 0;\n            puVar6 = (*(unaff_EBP + 0x10) - iVar7) + iVar2;\n            *(unaff_EBP + -0x1c) = extraout_ECX;\n            while (*(unaff_EBP + -0x28) = puVar6,  *(unaff_EBP + -0x1c) != 0) {\n                *puVar6 = **(unaff_EBP + 8);\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -1;\n                puVar6 = puVar6 + 1;\n            }\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n            fcn.004085a0(*(extraout_EDX + 0xc));\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n            fcn.004085a0(*(unaff_EBP + 0x10));\n            *(unaff_EBP + -4) = 0xffffffff;\n            iVar7 = *(extraout_EDX + 0xc);\n            iVar2 = *(extraout_EDX + 0x10);\n            if (iVar7 != 0) {\n                fcn.004098e1(iVar7);\n            }\n            iVar4 = *(unaff_EBP + -0x20);\n            *(extraout_EDX + 0x14) = *(unaff_EBP + -0x14) + iVar4;\n            *(extraout_EDX + 0x10) = iVar4 + extraout_ECX + (iVar2 - iVar7);\n            *(extraout_EDX + 0xc) = iVar4;\n        }\n        else if (iVar2 - *(unaff_EBP + 0x10) < extraout_ECX) {\n            *(unaff_EBP + 0xb) = **(unaff_EBP + 8);\n            fcn.004085a0(*(unaff_EBP + 0x10));\n            *(unaff_EBP + -4) = 2;\n            puVar6 = *(extraout_EDX + 0x10);\n            *(unaff_EBP + -0x24) = (*(unaff_EBP + 0x10) - puVar6) + extraout_ECX;\n            while (*(unaff_EBP + -0x2c) = puVar6,  *(unaff_EBP + -0x24) != 0) {\n                *puVar6 = *(unaff_EBP + 0xb);\n                *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + -1;\n                puVar6 = puVar6 + 1;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(extraout_EDX + 0x10) = *(extraout_EDX + 0x10) + extraout_ECX;\n            iVar7 = *(extraout_EDX + 0x10);\n            for (puVar6 = *(unaff_EBP + 0x10); puVar6 != iVar7 - extraout_ECX; puVar6 = puVar6 + 1) {\n                *puVar6 = *(unaff_EBP + 0xb);\n            }\n        }\n        else {\n            *(unaff_EBP + 8) = **(unaff_EBP + 8);\n            uVar3 = fcn.004085a0(iVar2 - extraout_ECX);\n            *(extraout_EDX + 0x10) = uVar3;\n            iVar7 = *(unaff_EBP + 0x10);\n            iVar4 = (iVar2 - iVar7) - extraout_ECX;\n            if (0 < iVar4) {\n                fcn.004086c8(iVar2 - iVar4, iVar4, iVar7, iVar4);\n                iVar7 = *(unaff_EBP + 0x10);\n            }\n            if (iVar7 != iVar7 + extraout_ECX) {\n                fcn.0040c210(iVar7, *(unaff_EBP + 8), (iVar7 + extraout_ECX) - iVar7);\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1642
    },
    "004070d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004070d3(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t *unaff_EBX;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_EAX[6];\n    if ((arg_8h == 0) || (arg_8h != *in_EAX)) {\n        fcn.00409801();\n    }\n    if (arg_ch == iVar1) {\n        iVar1 = in_EAX[6];\n        if ((arg_10h == 0) || (arg_10h != *in_EAX)) {\n            fcn.00409801();\n        }\n        if (arg_14h == iVar1) {\n            fcn.00406464(*(in_EAX[6] + 4));\n            *(in_EAX[6] + 4) = in_EAX[6];\n            in_EAX[7] = 0;\n            *in_EAX[6] = in_EAX[6];\n            *(in_EAX[6] + 8) = in_EAX[6];\n            unaff_EBX[1] = *in_EAX[6];\n            *unaff_EBX = *in_EAX;\n            return;\n        }\n    }\n    while( true ) {\n        if ((arg_8h == 0) || (arg_8h != arg_10h)) {\n            fcn.00409801();\n        }\n        if (arg_ch == arg_14h) break;\n        fcn.00408434();\n        fcn.00407b7d(in_EAX, &var_10h, arg_8h, arg_ch);\n    }\n    *unaff_EBX = *in_EAX;\n    unaff_EBX[1] = arg_ch;\n    return;\n}\n",
        "token_count": 452
    },
    "004072c3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004072c3(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint var_14h;\n    int32_t var_8h;\n    \n    iVar1 = *in_EAX[6];\n    if ((arg_ch == 0) || (arg_ch != *in_EAX)) {\n        fcn.00409801();\n    }\n    if (arg_10h == iVar1) {\n        iVar1 = in_EAX[6];\n        if ((arg_14h == 0) || (arg_14h != *in_EAX)) {\n            fcn.00409801();\n        }\n        if (arg_18h == iVar1) {\n            fcn.00405bfd();\n            arg_8h[1] = *in_EAX[6];\n            *arg_8h = *in_EAX;\n            return;\n        }\n    }\n    while( true ) {\n        if ((arg_ch == 0) || (arg_ch != arg_14h)) {\n            fcn.00409801();\n        }\n        if (arg_10h == arg_18h) break;\n        var_8h = arg_10h;\n        fcn.00408434();\n        fcn.00407b7d(in_EAX, &var_14h, arg_ch, var_8h);\n    }\n    *arg_8h = *in_EAX;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 365
    },
    "00407362": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407362(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    uint uVar3;\n    int32_t **in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    uint *unaff_ESI;\n    int32_t *piVar8;\n    uint var_44h;\n    uint var_1ch;\n    \n    if (0x3ffffffd < unaff_ESI[7]) {\n        fcn.004056cd(\"map/set<T> too long\");\n        fcn.004010f1(&var_1ch);\n        fcn.0040a36b(&var_44h, 0x426644);\n    }\n    piVar4 = fcn.00407e4d(unaff_ESI[6], in_EAX, unaff_ESI[6], arg_10h);\n    unaff_ESI[7] = unaff_ESI[7] + 1;\n    piVar8 = piVar4;\n    if (in_EAX == unaff_ESI[6]) {\n        unaff_ESI[6][1] = piVar4;\n        *unaff_ESI[6] = piVar4;\n        iVar5 = unaff_ESI[6];\n    }\n    else {\n        if (arg_ch != '\\0') {\n            *in_EAX = piVar4;\n            if (in_EAX == *unaff_ESI[6]) {\n                *unaff_ESI[6] = piVar4;\n            }\n            goto code_r0x00407478;\n        }\n        in_EAX[2] = piVar4;\n        iVar5 = unaff_ESI[6];\n        if (in_EAX != *(iVar5 + 8)) goto code_r0x00407478;\n    }\n    *(iVar5 + 8) = piVar4;\ncode_r0x00407478:\n    do {\n        while( true ) {\n            ppiVar6 = piVar8 + 1;\n            if (*(*ppiVar6 + 4) != '\\0') {\n                *(*(unaff_ESI[6] + 4) + 0x10) = 1;\n                uVar3 = *unaff_ESI;\n                arg_8h[1] = piVar4;\n                *arg_8h = uVar3;\n                return;\n            }\n            piVar1 = *ppiVar6;\n            ppiVar2 = piVar1[1];\n            if (piVar1 != *ppiVar2) break;\n            piVar7 = ppiVar2[2];\n            if (*(piVar7 + 4) == '\\0') {\ncode_r0x00407434:\n                *(piVar1 + 4) = 1;\n                *(piVar7 + 4) = 1;\n                *((*ppiVar6)[1] + 0x10) = 0;\n                piVar8 = (*ppiVar6)[1];\n            }\n            else {\n                if (piVar8 == piVar1[2]) {\n                    fcn.00407ad3(unaff_ESI);\n                    piVar8 = piVar1;\n                }\n                *(piVar8[1] + 0x10) = 1;\n                *(*(piVar8[1] + 4) + 0x10) = 0;\n                fcn.00407e08(unaff_ESI);\n            }\n        }\n        piVar7 = *ppiVar2;\n        if (*(piVar7 + 4) == '\\0') goto code_r0x00407434;\n        if (piVar8 == *piVar1) {\n            fcn.00407e08(unaff_ESI);\n            piVar8 = piVar1;\n        }\n        *(piVar8[1] + 0x10) = 1;\n        *(*(piVar8[1] + 4) + 0x10) = 0;\n        fcn.00407ad3(unaff_ESI);\n    } while( true );\n}\n",
        "token_count": 916
    },
    "004074b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004074b4(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint var_14h;\n    int32_t var_8h;\n    \n    iVar1 = *in_EAX[6];\n    if ((arg_ch == 0) || (arg_ch != *in_EAX)) {\n        fcn.00409801();\n    }\n    if (arg_10h == iVar1) {\n        iVar1 = in_EAX[6];\n        if ((arg_14h == 0) || (arg_14h != *in_EAX)) {\n            fcn.00409801();\n        }\n        if (arg_18h == iVar1) {\n            fcn.00405cb1();\n            arg_8h[1] = *in_EAX[6];\n            *arg_8h = *in_EAX;\n            return;\n        }\n    }\n    while( true ) {\n        if ((arg_ch == 0) || (arg_ch != arg_14h)) {\n            fcn.00409801();\n        }\n        if (arg_10h == arg_18h) break;\n        var_8h = arg_10h;\n        fcn.00408481();\n        fcn.00407eba(in_EAX, &var_14h, arg_ch, var_8h);\n    }\n    *arg_8h = *in_EAX;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 364
    },
    "00407553": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407553(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    uint uVar3;\n    int32_t **in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    uint *unaff_ESI;\n    int32_t *piVar8;\n    uint var_44h;\n    uint var_1ch;\n    \n    if (0x7ffffffd < unaff_ESI[7]) {\n        fcn.004056cd(\"map/set<T> too long\");\n        fcn.004010f1(&var_1ch);\n        fcn.0040a36b(&var_44h, 0x426644);\n    }\n    piVar4 = fcn.00408234(unaff_ESI[6], in_EAX, unaff_ESI[6], arg_10h);\n    unaff_ESI[7] = unaff_ESI[7] + 1;\n    piVar8 = piVar4;\n    if (in_EAX == unaff_ESI[6]) {\n        unaff_ESI[6][1] = piVar4;\n        *unaff_ESI[6] = piVar4;\n        iVar5 = unaff_ESI[6];\n    }\n    else {\n        if (arg_ch != '\\0') {\n            *in_EAX = piVar4;\n            if (in_EAX == *unaff_ESI[6]) {\n                *unaff_ESI[6] = piVar4;\n            }\n            goto code_r0x00407669;\n        }\n        in_EAX[2] = piVar4;\n        iVar5 = unaff_ESI[6];\n        if (in_EAX != *(iVar5 + 8)) goto code_r0x00407669;\n    }\n    *(iVar5 + 8) = piVar4;\ncode_r0x00407669:\n    do {\n        while( true ) {\n            ppiVar6 = piVar8 + 1;\n            if (*(*ppiVar6 + 0xe) != '\\0') {\n                *(*(unaff_ESI[6] + 4) + 0xe) = 1;\n                uVar3 = *unaff_ESI;\n                arg_8h[1] = piVar4;\n                *arg_8h = uVar3;\n                return;\n            }\n            piVar1 = *ppiVar6;\n            ppiVar2 = piVar1[1];\n            if (piVar1 != *ppiVar2) break;\n            piVar7 = ppiVar2[2];\n            if (*(piVar7 + 0xe) == '\\0') {\ncode_r0x00407625:\n                *(piVar1 + 0xe) = 1;\n                *(piVar7 + 0xe) = 1;\n                *((*ppiVar6)[1] + 0xe) = 0;\n                piVar8 = (*ppiVar6)[1];\n            }\n            else {\n                if (piVar8 == piVar1[2]) {\n                    fcn.00408145(unaff_ESI);\n                    piVar8 = piVar1;\n                }\n                *(piVar8[1] + 0xe) = 1;\n                *(*(piVar8[1] + 4) + 0xe) = 0;\n                fcn.00408188(unaff_ESI);\n            }\n        }\n        piVar7 = *ppiVar2;\n        if (*(piVar7 + 0xe) == '\\0') goto code_r0x00407625;\n        if (piVar8 == *piVar1) {\n            fcn.00408188(unaff_ESI);\n            piVar8 = piVar1;\n        }\n        *(piVar8[1] + 0xe) = 1;\n        *(*(piVar8[1] + 4) + 0xe) = 0;\n        fcn.00408145(unaff_ESI);\n    } while( true );\n}\n",
        "token_count": 909
    },
    "004076e7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004076e7(int32_t arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    \n    ppiVar1 = in_ECX[2];\n    in_ECX[2] = *ppiVar1;\n    if (*(*ppiVar1 + 0x15) == '\\0') {\n        *(*ppiVar1 + 4) = in_ECX;\n    }\n    ppiVar1[1] = in_ECX[1];\n    if (in_ECX == *(*(arg_8h + 0x18) + 4)) {\n        *(*(arg_8h + 0x18) + 4) = ppiVar1;\n    }\n    else {\n        ppiVar2 = in_ECX[1];\n        if (in_ECX == *ppiVar2) {\n            *ppiVar2 = ppiVar1;\n        }\n        else {\n            ppiVar2[2] = ppiVar1;\n        }\n    }\n    *ppiVar1 = in_ECX;\n    in_ECX[1] = ppiVar1;\n    return;\n}\n",
        "token_count": 260
    },
    "0040772a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0040780b)\n// WARNING: Removing unreachable block (ram,0x0040781b)\n// WARNING: Removing unreachable block (ram,0x00407824)\n// WARNING: Removing unreachable block (ram,0x00407827)\n// WARNING: Removing unreachable block (ram,0x00407817)\n// WARNING: Removing unreachable block (ram,0x00407834)\n// WARNING: Removing unreachable block (ram,0x00407844)\n// WARNING: Removing unreachable block (ram,0x0040784f)\n// WARNING: Removing unreachable block (ram,0x0040784b)\n// WARNING: Removing unreachable block (ram,0x0040783f)\n// WARNING: Removing unreachable block (ram,0x00407852)\n// WARNING: Removing unreachable block (ram,0x00407862)\n\nvoid __cdecl fcn.0040772a(uint *arg_8h, uint *arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    uint var_48h;\n    uint var_20h;\n    uint var_1h;\n    \n    if (*(arg_14h + 0x15) != '\\0') {\n        fcn.004056cd(\"invalid map/set<T> iterator\");\n        fcn.0040113c(&var_20h);\n        fcn.0040a36b(&var_48h, 0x426608);\n    }\n    fcn.004083b2();\n    ppiVar5 = *arg_14h;\n    if (*(ppiVar5 + 0x15) == '\\0') {\n        if (*(arg_14h[2] + 0x15) == '\\0') {\n            ppiVar5 = arg_14h[2];\n        }\n    }\n    else {\n        ppiVar5 = arg_14h[2];\n    }\n    ppiVar4 = arg_14h[1];\n    if (*(ppiVar5 + 0x15) == '\\0') {\n        ppiVar5[1] = ppiVar4;\n    }\n    if (*(arg_8h[6] + 4) == arg_14h) {\n        *(arg_8h[6] + 4) = ppiVar5;\n    }\n    else if (*ppiVar4 == arg_14h) {\n        *ppiVar4 = ppiVar5;\n    }\n    else {\n        ppiVar4[2] = ppiVar5;\n    }\n    if (*arg_8h[6] == arg_14h) {\n        ppiVar3 = ppiVar4;\n        if (*(ppiVar5 + 0x15) == '\\0') {\n            ppiVar1 = *ppiVar5;\n            ppiVar3 = ppiVar5;\n            while (ppiVar2 = ppiVar1,  *(ppiVar2 + 0x15) == '\\0') {\n                ppiVar3 = ppiVar2;\n                ppiVar1 = *ppiVar2;\n            }\n        }\n        *arg_8h[6] = ppiVar3;\n    }\n    if (*(arg_8h[6] + 8) == arg_14h) {\n        ppiVar3 = ppiVar4;\n        if (*(ppiVar5 + 0x15) == '\\0') {\n            ppiVar1 = ppiVar5[2];\n            ppiVar3 = ppiVar5;\n            while (ppiVar2 = ppiVar1,  *(ppiVar2 + 0x15) == '\\0') {\n                ppiVar3 = ppiVar2;\n                ppiVar1 = ppiVar2[2];\n            }\n        }\n        *(arg_8h[6] + 8) = ppiVar3;\n    }\n    if (*(arg_14h + 5) != '\\x01') {\ncode_r0x0040798c:\n        fcn.004098e1(arg_14h);\n        if (arg_8h[7] != 0) {\n            arg_8h[7] = arg_8h[7] + -1;\n        }\n        *arg_ch = *arg_8h;\n        arg_ch[1] = arg_14h;\n        return;\n    }\ncode_r0x00407940:\n    ppiVar3 = ppiVar4;\n    if ((ppiVar5 == *(arg_8h[6] + 4)) || (*(ppiVar5 + 5) != '\\x01')) goto code_r0x00407988;\n    ppiVar4 = *ppiVar3;\n    if (ppiVar5 == ppiVar4) {\n        ppiVar4 = ppiVar3[2];\n        if (*(ppiVar4 + 5) == '\\0') {\n            *(ppiVar4 + 5) = 1;\n            *(ppiVar3 + 5) = 0;\n            fcn.004076e7(arg_8h);\n            ppiVar4 = ppiVar3[2];\n        }\n        if (*(ppiVar4 + 0x15) == '\\0') {\n            if ((*(*ppiVar4 + 5) != '\\x01') || (*(ppiVar4[2] + 5) != '\\x01')) {\n                if (*(ppiVar4[2] + 5) == '\\x01') {\n                    *(*ppiVar4 + 5) = 1;\n                    *(ppiVar4 + 5) = 0;\n                    fcn.00407a27(arg_8h);\n                    ppiVar4 = ppiVar3[2];\n                }\n                *(ppiVar4 + 5) = *(ppiVar3 + 5);\n                *(ppiVar3 + 5) = 1;\n                *(ppiVar4[2] + 5) = 1;\n                fcn.004076e7(arg_8h);\n                goto code_r0x00407988;\n            }\ncode_r0x00407937:\n            *(ppiVar4 + 5) = 0;\n        }\n    }\n    else {\n        if (*(ppiVar4 + 5) == '\\0') {\n            *(ppiVar4 + 5) = 1;\n            *(ppiVar3 + 5) = 0;\n            fcn.00407a27(arg_8h);\n            ppiVar4 = *ppiVar3;\n        }\n        if (*(ppiVar4 + 0x15) == '\\0') {\n            if ((*(ppiVar4[2] + 5) == '\\x01') && (*(*ppiVar4 + 5) == '\\x01')) goto code_r0x00407937;\n            if (*(*ppiVar4 + 5) == '\\x01') {\n                *(ppiVar4[2] + 5) = 1;\n                *(ppiVar4 + 5) = 0;\n                fcn.004076e7(arg_8h);\n                ppiVar4 = *ppiVar3;\n            }\n            *(ppiVar4 + 5) = *(ppiVar3 + 5);\n            *(ppiVar3 + 5) = 1;\n            *(*ppiVar4 + 5) = 1;\n            fcn.00407a27(arg_8h);\ncode_r0x00407988:\n            *(ppiVar5 + 5) = 1;\n            goto code_r0x0040798c;\n        }\n    }\n    ppiVar4 = ppiVar3[1];\n    ppiVar5 = ppiVar3;\n    goto code_r0x00407940;\n}\n",
        "token_count": 1715
    },
    "00407a27": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a27(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    *in_ECX = *(iVar1 + 8);\n    if (*(*(iVar1 + 8) + 0x15) == '\\0') {\n        *(*(iVar1 + 8) + 4) = in_ECX;\n    }\n    *(iVar1 + 4) = in_ECX[1];\n    if (in_ECX == *(*(arg_8h + 0x18) + 4)) {\n        *(*(arg_8h + 0x18) + 4) = iVar1;\n    }\n    else {\n        piVar2 = in_ECX[1];\n        if (in_ECX == piVar2[2]) {\n            piVar2[2] = iVar1;\n        }\n        else {\n            *piVar2 = iVar1;\n        }\n    }\n    *(iVar1 + 8) = in_ECX;\n    in_ECX[1] = iVar1;\n    return;\n}\n",
        "token_count": 256
    },
    "00407ad3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ad3(int32_t arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    \n    ppiVar1 = in_ECX[2];\n    in_ECX[2] = *ppiVar1;\n    if (*(*ppiVar1 + 0x11) == '\\0') {\n        *(*ppiVar1 + 4) = in_ECX;\n    }\n    ppiVar1[1] = in_ECX[1];\n    if (in_ECX == *(*(arg_8h + 0x18) + 4)) {\n        *(*(arg_8h + 0x18) + 4) = ppiVar1;\n    }\n    else {\n        ppiVar2 = in_ECX[1];\n        if (in_ECX == *ppiVar2) {\n            *ppiVar2 = ppiVar1;\n        }\n        else {\n            ppiVar2[2] = ppiVar1;\n        }\n    }\n    *ppiVar1 = in_ECX;\n    in_ECX[1] = ppiVar1;\n    return;\n}\n",
        "token_count": 260
    },
    "00407b7d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00407c5e)\n// WARNING: Removing unreachable block (ram,0x00407c6e)\n// WARNING: Removing unreachable block (ram,0x00407c77)\n// WARNING: Removing unreachable block (ram,0x00407c7a)\n// WARNING: Removing unreachable block (ram,0x00407c6a)\n// WARNING: Removing unreachable block (ram,0x00407c87)\n// WARNING: Removing unreachable block (ram,0x00407c97)\n// WARNING: Removing unreachable block (ram,0x00407ca2)\n// WARNING: Removing unreachable block (ram,0x00407c9e)\n// WARNING: Removing unreachable block (ram,0x00407c92)\n// WARNING: Removing unreachable block (ram,0x00407ca5)\n// WARNING: Removing unreachable block (ram,0x00407cb5)\n\nvoid __cdecl fcn.00407b7d(uint *arg_8h, uint *arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    uint var_48h;\n    uint var_20h;\n    uint var_1h;\n    \n    if (*(arg_14h + 0x11) != '\\0') {\n        fcn.004056cd(\"invalid map/set<T> iterator\");\n        fcn.0040113c(&var_20h);\n        fcn.0040a36b(&var_48h, 0x426608);\n    }\n    fcn.00408434();\n    ppiVar5 = *arg_14h;\n    if (*(ppiVar5 + 0x11) == '\\0') {\n        if (*(arg_14h[2] + 0x11) == '\\0') {\n            ppiVar5 = arg_14h[2];\n        }\n    }\n    else {\n        ppiVar5 = arg_14h[2];\n    }\n    ppiVar4 = arg_14h[1];\n    if (*(ppiVar5 + 0x11) == '\\0') {\n        ppiVar5[1] = ppiVar4;\n    }\n    if (*(arg_8h[6] + 4) == arg_14h) {\n        *(arg_8h[6] + 4) = ppiVar5;\n    }\n    else if (*ppiVar4 == arg_14h) {\n        *ppiVar4 = ppiVar5;\n    }\n    else {\n        ppiVar4[2] = ppiVar5;\n    }\n    if (*arg_8h[6] == arg_14h) {\n        ppiVar3 = ppiVar4;\n        if (*(ppiVar5 + 0x11) == '\\0') {\n            ppiVar1 = *ppiVar5;\n            ppiVar3 = ppiVar5;\n            while (ppiVar2 = ppiVar1,  *(ppiVar2 + 0x11) == '\\0') {\n                ppiVar3 = ppiVar2;\n                ppiVar1 = *ppiVar2;\n            }\n        }\n        *arg_8h[6] = ppiVar3;\n    }\n    if (*(arg_8h[6] + 8) == arg_14h) {\n        ppiVar3 = ppiVar4;\n        if (*(ppiVar5 + 0x11) == '\\0') {\n            ppiVar1 = ppiVar5[2];\n            ppiVar3 = ppiVar5;\n            while (ppiVar2 = ppiVar1,  *(ppiVar2 + 0x11) == '\\0') {\n                ppiVar3 = ppiVar2;\n                ppiVar1 = ppiVar2[2];\n            }\n        }\n        *(arg_8h[6] + 8) = ppiVar3;\n    }\n    if (*(arg_14h + 4) != '\\x01') {\ncode_r0x00407ddf:\n        fcn.004098e1(arg_14h);\n        if (arg_8h[7] != 0) {\n            arg_8h[7] = arg_8h[7] + -1;\n        }\n        *arg_ch = *arg_8h;\n        arg_ch[1] = arg_14h;\n        return;\n    }\ncode_r0x00407d93:\n    ppiVar3 = ppiVar4;\n    if ((ppiVar5 == *(arg_8h[6] + 4)) || (*(ppiVar5 + 4) != '\\x01')) goto code_r0x00407ddb;\n    ppiVar4 = *ppiVar3;\n    if (ppiVar5 == ppiVar4) {\n        ppiVar4 = ppiVar3[2];\n        if (*(ppiVar4 + 4) == '\\0') {\n            *(ppiVar4 + 4) = 1;\n            *(ppiVar3 + 4) = 0;\n            fcn.00407ad3(arg_8h);\n            ppiVar4 = ppiVar3[2];\n        }\n        if (*(ppiVar4 + 0x11) == '\\0') {\n            if ((*(*ppiVar4 + 4) != '\\x01') || (*(ppiVar4[2] + 4) != '\\x01')) {\n                if (*(ppiVar4[2] + 4) == '\\x01') {\n                    *(*ppiVar4 + 4) = 1;\n                    *(ppiVar4 + 4) = 0;\n                    fcn.00407e08(arg_8h);\n                    ppiVar4 = ppiVar3[2];\n                }\n                *(ppiVar4 + 4) = *(ppiVar3 + 4);\n                *(ppiVar3 + 4) = 1;\n                *(ppiVar4[2] + 4) = 1;\n                fcn.00407ad3(arg_8h);\n                goto code_r0x00407ddb;\n            }\ncode_r0x00407d8a:\n            *(ppiVar4 + 4) = 0;\n        }\n    }\n    else {\n        if (*(ppiVar4 + 4) == '\\0') {\n            *(ppiVar4 + 4) = 1;\n            *(ppiVar3 + 4) = 0;\n            fcn.00407e08(arg_8h);\n            ppiVar4 = *ppiVar3;\n        }\n        if (*(ppiVar4 + 0x11) == '\\0') {\n            if ((*(ppiVar4[2] + 4) == '\\x01') && (*(*ppiVar4 + 4) == '\\x01')) goto code_r0x00407d8a;\n            if (*(*ppiVar4 + 4) == '\\x01') {\n                *(ppiVar4[2] + 4) = 1;\n                *(ppiVar4 + 4) = 0;\n                fcn.00407ad3(arg_8h);\n                ppiVar4 = *ppiVar3;\n            }\n            *(ppiVar4 + 4) = *(ppiVar3 + 4);\n            *(ppiVar3 + 4) = 1;\n            *(*ppiVar4 + 4) = 1;\n            fcn.00407e08(arg_8h);\ncode_r0x00407ddb:\n            *(ppiVar5 + 4) = 1;\n            goto code_r0x00407ddf;\n        }\n    }\n    ppiVar4 = ppiVar3[1];\n    ppiVar5 = ppiVar3;\n    goto code_r0x00407d93;\n}\n",
        "token_count": 1731
    },
    "00407e08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e08(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    *in_ECX = *(iVar1 + 8);\n    if (*(*(iVar1 + 8) + 0x11) == '\\0') {\n        *(*(iVar1 + 8) + 4) = in_ECX;\n    }\n    *(iVar1 + 4) = in_ECX[1];\n    if (in_ECX == *(*(arg_8h + 0x18) + 4)) {\n        *(*(arg_8h + 0x18) + 4) = iVar1;\n    }\n    else {\n        piVar2 = in_ECX[1];\n        if (in_ECX == piVar2[2]) {\n            piVar2[2] = iVar1;\n        }\n        else {\n            *piVar2 = iVar1;\n        }\n    }\n    *(iVar1 + 8) = in_ECX;\n    in_ECX[1] = iVar1;\n    return;\n}\n",
        "token_count": 256
    },
    "00407eba": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00407f9b)\n// WARNING: Removing unreachable block (ram,0x00407fab)\n// WARNING: Removing unreachable block (ram,0x00407fb4)\n// WARNING: Removing unreachable block (ram,0x00407fb7)\n// WARNING: Removing unreachable block (ram,0x00407fa7)\n// WARNING: Removing unreachable block (ram,0x00407fc4)\n// WARNING: Removing unreachable block (ram,0x00407fd4)\n// WARNING: Removing unreachable block (ram,0x00407fdf)\n// WARNING: Removing unreachable block (ram,0x00407fdb)\n// WARNING: Removing unreachable block (ram,0x00407fcf)\n// WARNING: Removing unreachable block (ram,0x00407fe2)\n// WARNING: Removing unreachable block (ram,0x00407ff2)\n\nvoid __cdecl fcn.00407eba(uint *arg_8h, uint *arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    uint var_48h;\n    uint var_20h;\n    uint var_1h;\n    \n    if (*(arg_14h + 0xf) != '\\0') {\n        fcn.004056cd(\"invalid map/set<T> iterator\");\n        fcn.0040113c(&var_20h);\n        fcn.0040a36b(&var_48h, 0x426608);\n    }\n    fcn.00408481();\n    ppiVar5 = *arg_14h;\n    if (*(ppiVar5 + 0xf) == '\\0') {\n        if (*(arg_14h[2] + 0xf) == '\\0') {\n            ppiVar5 = arg_14h[2];\n        }\n    }\n    else {\n        ppiVar5 = arg_14h[2];\n    }\n    ppiVar4 = arg_14h[1];\n    if (*(ppiVar5 + 0xf) == '\\0') {\n        ppiVar5[1] = ppiVar4;\n    }\n    if (*(arg_8h[6] + 4) == arg_14h) {\n        *(arg_8h[6] + 4) = ppiVar5;\n    }\n    else if (*ppiVar4 == arg_14h) {\n        *ppiVar4 = ppiVar5;\n    }\n    else {\n        ppiVar4[2] = ppiVar5;\n    }\n    if (*arg_8h[6] == arg_14h) {\n        ppiVar3 = ppiVar4;\n        if (*(ppiVar5 + 0xf) == '\\0') {\n            ppiVar1 = *ppiVar5;\n            ppiVar3 = ppiVar5;\n            while (ppiVar2 = ppiVar1,  *(ppiVar2 + 0xf) == '\\0') {\n                ppiVar3 = ppiVar2;\n                ppiVar1 = *ppiVar2;\n            }\n        }\n        *arg_8h[6] = ppiVar3;\n    }\n    if (*(arg_8h[6] + 8) == arg_14h) {\n        ppiVar3 = ppiVar4;\n        if (*(ppiVar5 + 0xf) == '\\0') {\n            ppiVar1 = ppiVar5[2];\n            ppiVar3 = ppiVar5;\n            while (ppiVar2 = ppiVar1,  *(ppiVar2 + 0xf) == '\\0') {\n                ppiVar3 = ppiVar2;\n                ppiVar1 = ppiVar2[2];\n            }\n        }\n        *(arg_8h[6] + 8) = ppiVar3;\n    }\n    if (*(arg_14h + 0xe) != '\\x01') {\ncode_r0x0040811c:\n        fcn.004098e1(arg_14h);\n        if (arg_8h[7] != 0) {\n            arg_8h[7] = arg_8h[7] + -1;\n        }\n        *arg_ch = *arg_8h;\n        arg_ch[1] = arg_14h;\n        return;\n    }\ncode_r0x004080d0:\n    ppiVar3 = ppiVar4;\n    if ((ppiVar5 == *(arg_8h[6] + 4)) || (*(ppiVar5 + 0xe) != '\\x01')) goto code_r0x00408118;\n    ppiVar4 = *ppiVar3;\n    if (ppiVar5 == ppiVar4) {\n        ppiVar4 = ppiVar3[2];\n        if (*(ppiVar4 + 0xe) == '\\0') {\n            *(ppiVar4 + 0xe) = 1;\n            *(ppiVar3 + 0xe) = 0;\n            fcn.00408145(arg_8h);\n            ppiVar4 = ppiVar3[2];\n        }\n        if (*(ppiVar4 + 0xf) == '\\0') {\n            if ((*(*ppiVar4 + 0xe) != '\\x01') || (*(ppiVar4[2] + 0xe) != '\\x01')) {\n                if (*(ppiVar4[2] + 0xe) == '\\x01') {\n                    *(*ppiVar4 + 0xe) = 1;\n                    *(ppiVar4 + 0xe) = 0;\n                    fcn.00408188(arg_8h);\n                    ppiVar4 = ppiVar3[2];\n                }\n                *(ppiVar4 + 0xe) = *(ppiVar3 + 0xe);\n                *(ppiVar3 + 0xe) = 1;\n                *(ppiVar4[2] + 0xe) = 1;\n                fcn.00408145(arg_8h);\n                goto code_r0x00408118;\n            }\ncode_r0x004080c7:\n            *(ppiVar4 + 0xe) = 0;\n        }\n    }\n    else {\n        if (*(ppiVar4 + 0xe) == '\\0') {\n            *(ppiVar4 + 0xe) = 1;\n            *(ppiVar3 + 0xe) = 0;\n            fcn.00408188(arg_8h);\n            ppiVar4 = *ppiVar3;\n        }\n        if (*(ppiVar4 + 0xf) == '\\0') {\n            if ((*(ppiVar4[2] + 0xe) == '\\x01') && (*(*ppiVar4 + 0xe) == '\\x01')) goto code_r0x004080c7;\n            if (*(*ppiVar4 + 0xe) == '\\x01') {\n                *(ppiVar4[2] + 0xe) = 1;\n                *(ppiVar4 + 0xe) = 0;\n                fcn.00408145(arg_8h);\n                ppiVar4 = *ppiVar3;\n            }\n            *(ppiVar4 + 0xe) = *(ppiVar3 + 0xe);\n            *(ppiVar3 + 0xe) = 1;\n            *(*ppiVar4 + 0xe) = 1;\n            fcn.00408188(arg_8h);\ncode_r0x00408118:\n            *(ppiVar5 + 0xe) = 1;\n            goto code_r0x0040811c;\n        }\n    }\n    ppiVar4 = ppiVar3[1];\n    ppiVar5 = ppiVar3;\n    goto code_r0x004080d0;\n}\n",
        "token_count": 1734
    },
    "00408145": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408145(int32_t arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    \n    ppiVar1 = in_ECX[2];\n    in_ECX[2] = *ppiVar1;\n    if (*(*ppiVar1 + 0xf) == '\\0') {\n        *(*ppiVar1 + 4) = in_ECX;\n    }\n    ppiVar1[1] = in_ECX[1];\n    if (in_ECX == *(*(arg_8h + 0x18) + 4)) {\n        *(*(arg_8h + 0x18) + 4) = ppiVar1;\n    }\n    else {\n        ppiVar2 = in_ECX[1];\n        if (in_ECX == *ppiVar2) {\n            *ppiVar2 = ppiVar1;\n        }\n        else {\n            ppiVar2[2] = ppiVar1;\n        }\n    }\n    *ppiVar1 = in_ECX;\n    in_ECX[1] = ppiVar1;\n    return;\n}\n",
        "token_count": 258
    },
    "00408188": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408188(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    *in_ECX = *(iVar1 + 8);\n    if (*(*(iVar1 + 8) + 0xf) == '\\0') {\n        *(*(iVar1 + 8) + 4) = in_ECX;\n    }\n    *(iVar1 + 4) = in_ECX[1];\n    if (in_ECX == *(*(arg_8h + 0x18) + 4)) {\n        *(*(arg_8h + 0x18) + 4) = iVar1;\n    }\n    else {\n        piVar2 = in_ECX[1];\n        if (in_ECX == piVar2[2]) {\n            piVar2[2] = iVar1;\n        }\n        else {\n            *piVar2 = iVar1;\n        }\n    }\n    *(iVar1 + 8) = in_ECX;\n    in_ECX[1] = iVar1;\n    return;\n}\n",
        "token_count": 254
    },
    "004083ff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004083ff(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    \n    cVar1 = *(arg_8h + 0x15);\n    while (cVar1 == '\\0') {\n        fcn.004083ff(arg_8h[2]);\n        piVar2 = *arg_8h;\n        fcn.004098e1(arg_8h);\n        arg_8h = piVar2;\n        cVar1 = *(piVar2 + 0x15);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0040b731": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b731(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c440(0x426010, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x42c484 == 3) {\n            fcn.0040cc5f(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0040cc92(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0040ccc2(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040b787();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0040b7b9;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42b954, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040a857();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040a815(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x0040b7b9:\n    fcn.0040c485();\n    return;\n}\n",
        "token_count": 434
    },
    "00409ee3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00409fd6: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00409fdb)\n// WARNING: Removing unreachable block (ram,0x0040a009)\n// WARNING: Removing unreachable block (ram,0x00409fe1)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409ee3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c440(0x425fc8, 0x18);\n    fcn.0040cc5f(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x42b7d8 != 1) {\n        *0x42b7d4 = 1;\n        *0x42b7d0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040e86a(*0x42d4d4);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040e86a(*0x42d4d0);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040e861();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040e86a(*piVar2);\n                        iVar3 = fcn.0040e861();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040e86a(*0x42d4d4);\n                        piVar1 = fcn.0040e86a(*0x42d4d0);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00409e1d(0x41f3d0);\n        }\n        fcn.00409e1d(0x41f3d8);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040cb85(8);\n    }\n    return;\n}\n",
        "token_count": 823
    },
    "0040a4ad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a4ad(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40a558;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040a584;\n        uStack36 = *0x42a728 ^ &fcn.0040a4ad::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040a4ad::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040eab6();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040a4ad::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 728
    },
    "0040a79d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a79d(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x42a728) {\n        return;\n    }\n    *0x42bf20 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x42bf24 = &arg_8h;\n    *0x42be60 = 0x10001;\n    *0x42be08 = 0xc0000409;\n    *0x42be0c = 1;\n    var_328h = *0x42a728;\n    var_324h = *0x42a72c;\n    *0x42be14 = unaff_retaddr;\n    *0x42beec = in_GS;\n    *0x42bef0 = in_FS;\n    *0x42bef4 = in_ES;\n    *0x42bef8 = in_DS;\n    *0x42befc = unaff_EDI;\n    *0x42bf00 = unaff_ESI;\n    *0x42bf04 = unaff_EBX;\n    *0x42bf08 = in_EDX;\n    *0x42bf0c = in_ECX;\n    *0x42bf10 = in_EAX;\n    *0x42bf14 = unaff_EBP;\n    *0x42bf18 = unaff_retaddr;\n    *0x42bf1c = in_CS;\n    *0x42bf28 = in_SS;\n    *0x42be58 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040e7e7(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x41fd18);\n    if (*0x42be58 == 0) {\n        fcn.0040e7e7(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 835
    },
    "00410039": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410039(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040cb85(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00410ac3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410ac3(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040eab6();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040eab6();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00410d8b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d8b(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0040a6eb(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040eab6();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040eab6();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0040a6c4(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00410b23(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "004182a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004182a0(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004187a1;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004183d5;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004183dc;\ncode_r0x004183d5:\n                        do {\n                            var_4h = 1;\ncode_r0x004183dc:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004183ea;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004183ea:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42b1a4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42b1a4 < iVar12) {\n                if (iVar12 < *0x42b1a0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x42b1a0;\n                    uVar5 = 1;\n                }\n                goto code_r0x004187a1;\n            }\n            var_10h = *0x42b1a4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0041858d;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0041858d:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004187a1:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3670
    },
    "004187e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004187e4(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00418ce5;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x42b1c0 - 1;\n        iVar4 = *0x42b1c0 + (*0x42b1c0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x42b1c0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00418919;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00418920;\ncode_r0x00418919:\n                        do {\n                            var_4h = 1;\ncode_r0x00418920:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0041892e;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0041892e:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42b1bc - *0x42b1c0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42b1bc < iVar12) {\n                if (iVar12 < *0x42b1b8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x42b1cc;\n                    iVar4 = *0x42b1c4 + (*0x42b1c4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42b1c4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x42b1c4 + (*0x42b1c4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42b1c4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x42b1cc + *0x42b1b8;\n                    uVar5 = 1;\n                }\n                goto code_r0x00418ce5;\n            }\n            var_10h = *0x42b1bc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x42b1c0 - 1;\n            iVar12 = *0x42b1c0 + (*0x42b1c0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x42b1c0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00418ad1;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00418ad1:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x42b1c4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00418ce5:\n    var_20h = iVar12 << (0x1fU - *0x42b1c4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x42b1c8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x42b1c8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3681
    },
    "0041b080": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b080(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x42c4a0 != 0) {\n        bVar1 = (in_MXCSR & 0x1f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.0041bd0e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.0041c118(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.0041b0d8();\n    return;\n}\n",
        "token_count": 206
    },
    "0041b0d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b0d8(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0041c0bc();\n        }\n        if (*0x42c170 == 0) {\n            uVar3 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fsin(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x4223ba) * *0x4223ba;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fsin(fVar4);\n        }\n        if (*0x42c170 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 608
    },
    "0041b320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b320(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x42c4a0 != 0) {\n        bVar1 = (in_MXCSR & 0x1f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.0041c29e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.0041c118(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.0041b378();\n    return;\n}\n",
        "token_count": 204
    },
    "0041b378": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b378(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = in_EAX & 0x80000000;\n            uVar2 = uVar1;\n            goto joined_r0x0041b3c7;\n        }\n        uVar2 = fcn.0041c0bc();\n    }\n    else {\n        uVar2 = param_4;\n        if ((param_4 & 0x7ff00000) == 0) {\n            if (((param_4 & 0xfffff) == 0) && (param_3 == 0)) {\n                uVar2 = 2;\n                goto code_r0x0041b411;\n            }\n            uVar1 = param_4 & 0x80000000;\n        }\n        else {\n            uVar1 = param_4 & 0x80000000;\n        }\njoined_r0x0041b3c7:\n        if (uVar1 == 0) {\n            if (*0x42c170 == 0) {\n                uVar1 = uVar2 & 0xffff0000 | in_FPUControlWord;\n                if (in_FPUControlWord != 0x27f) {\n                    if (((in_FPUControlWord & 0x20) != 0) &&\n                       (uVar1 = uVar2 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                        uVar3 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n                        return CONCAT44(arg_8h, uVar3);\n                    }\n                    uVar1 = uVar1 & 0xffff0020;\n                }\n                return CONCAT44(arg_8h, uVar1);\n            }\n            goto code_r0x0041c12e;\n        }\n        uVar2 = 1;\n    }\ncode_r0x0041b411:\n    if (*0x42c170 == 0) {\n        uVar3 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n        return CONCAT44(arg_8h, uVar3);\n    }\ncode_r0x0041c12e:\n    return CONCAT44(arg_8h, uVar2);\n}\n",
        "token_count": 664
    },
    "0041b46c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b46c(void)\n\n{\n    uint unaff_EBX;\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    if (*0x42c4a0 != 0) {\n        bVar1 = (in_MXCSR & 0x1f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.0041c73e(in_ST0);\n            return;\n        }\n    }\n    fcn.0041bec0();\n    fcn.0041caaa(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 226
    },
    "0041b500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b500(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x42c4a0 != 0) {\n        bVar1 = (in_MXCSR & 0x1f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.0041cc7e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.0041c118(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.0041b558();\n    return;\n}\n",
        "token_count": 204
    },
    "0041b558": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b558(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0041c0bc();\n        }\n        if (*0x42c170 == 0) {\n            uVar3 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fcos(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x4223ba) * *0x4223ba;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar4);\n        }\n        if (*0x42c170 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 606
    },
    "0041b650": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b650(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x42c4a0 != 0) {\n        bVar1 = (in_MXCSR & 0x1f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.0041ce2e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.0041c118(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.0041b6a8();\n    return;\n}\n",
        "token_count": 206
    },
    "0041b6a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b6a8(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = in_EAX & 0x80000000;\n            uVar2 = uVar1;\n            goto joined_r0x0041b6f7;\n        }\n        uVar2 = fcn.0041c0bc();\n    }\n    else {\n        uVar2 = param_4;\n        if ((param_4 & 0x7ff00000) == 0) {\n            if (((param_4 & 0xfffff) == 0) && (param_3 == 0)) {\n                uVar2 = 2;\n                goto code_r0x0041b741;\n            }\n            uVar1 = param_4 & 0x80000000;\n        }\n        else {\n            uVar1 = param_4 & 0x80000000;\n        }\njoined_r0x0041b6f7:\n        if (uVar1 == 0) {\n            if (*0x42c170 == 0) {\n                uVar1 = uVar2 & 0xffff0000 | in_FPUControlWord;\n                if (in_FPUControlWord != 0x27f) {\n                    if (((in_FPUControlWord & 0x20) != 0) &&\n                       (uVar1 = uVar2 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                        uVar3 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n                        return CONCAT44(arg_8h, uVar3);\n                    }\n                    uVar1 = uVar1 & 0xffff0020;\n                }\n                return CONCAT44(arg_8h, uVar1);\n            }\n            goto code_r0x0041c12e;\n        }\n        uVar2 = 1;\n    }\ncode_r0x0041b741:\n    if (*0x42c170 == 0) {\n        uVar3 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n        return CONCAT44(arg_8h, uVar3);\n    }\ncode_r0x0041c12e:\n    return CONCAT44(arg_8h, uVar2);\n}\n",
        "token_count": 666
    },
    "0041b7a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b7a0(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x42c4a0 != 0) {\n        bVar1 = (in_MXCSR & 0x1f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.0041d09e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.0041c118(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.0041b7f8();\n    return;\n}\n",
        "token_count": 208
    },
    "0041b7f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.0041b7f8(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t in_EAX;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    float10 in_ST0;\n    float10 extraout_ST0;\n    float10 fVar1;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) != 0) || (fVar1 = *0x42b5b0,  param_3 != 0)) {\n            fVar1 = fcn.0041c0bc();\n        }\ncode_r0x0041b887:\n        if (*0x42c170 == 0) {\n            fVar1 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n            return fVar1;\n        }\n    }\n    else {\n        if (in_FPUControlWord != 0x27f) {\n            in_EAX = fcn.0041c0a5();\n            in_ST0 = extraout_ST0;\n        }\n        if (in_EAX < 0x3ff00000) {\n            fVar1 = fpatan(in_ST0, SQRT((1 - in_ST0) * (1 + in_ST0)));\n        }\n        else {\n            fVar1 = *0x42b5b0;\n            if ((0x3ff00000 < in_EAX) || ((param_4 & 0xfffff | param_3) != 0)) goto code_r0x0041b887;\n            fVar1 = *0x42b5ba;\n            if ((param_4 & 0x80000000) != 0) {\n                fVar1 = -*0x42b5ba;\n            }\n        }\n        if (*0x42c170 == 0) {\n            if (((arg_8h != 0x27f) && ((arg_8h & 0x20) != 0)) && ((in_FPUStatusWord & 0x20) != 0)) {\n                fVar1 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n                return fVar1;\n            }\n            return fVar1;\n        }\n    }\n    return fVar1;\n}\n",
        "token_count": 580
    },
    "0041c29e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nfloat10 fcn.0041c29e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x422400 | *0x422470;\n        dVar7 = SUB168(in_XMM0, 0) & *0x422408 | *0x422478;\n        uVar1 = SUB82(*0x422420 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x422438 & dVar7;\n        dVar9 = (*0x422430 & dVar6) * *(uVar1 + 0x422910) - *0x422410;\n        dVar6 = (dVar6 - (*0x422430 & dVar6)) * *(uVar1 + 0x422910);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x422918);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x422918) - *0x422418);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x4224c8 * dVar11 + *0x4224d8) * dVar11 + *0x4224e8) * dVar11 * dVar11 +\n                   ((*0x4224c0 * dVar7 + *0x4224d0) * dVar7 + *0x4224e0) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x4224f0 * dVar7 + *(uVar1 + 0x422508) + dVar10 * *0x422448 + (dVar8 & *(iVar5 + 0x422458)) +\n                   *(uVar1 + 0x422500) + dVar9 + dVar10 * *0x422440 + (dVar6 & *(iVar5 + 0x422450));\n        }\n        dStack12 = -(*0x422480 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x422470 == (param_1 & *0x422400 | *0x422470)) {\n                    return *0x4224a8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x422400;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x0041c4aa;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x422490);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x4224a0;\ncode_r0x0041c4aa:\n    fcn.0040c62c(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1000
    },
    "0041c73e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nfloat10 fcn.0041c73e(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_14h;\n    double in_XMM0_Qa;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    ushort uStack12;\n    unkbyte6 Stack10;\n    ushort uStack4;\n    \n    uVar1 = in_XMM0_Qa >> 0x30 & 0x7fff;\n    if ((0x408f - uVar1 | uVar1 - 0x3c90) < 0x80000000) {\n        dVar4 = *0x422d80 * in_XMM0_Qa + *0x422d60;\n        dVar5 = (*0x422d88 * in_XMM0_Qa + *0x422d68) - *0x422d68;\n        uVar1 = SUB84(dVar4, 0);\n        iVar2 = (uVar1 & 0x3f) * 0x10;\n        dVar3 = (in_XMM0_Qa - *0x422d90 * (dVar4 - *0x422d60)) - *0x422da0 * (dVar4 - *0x422d60);\n        dVar5 = (in_XMM0_Qa - *0x422d98 * dVar5) - *0x422da8 * dVar5;\n        dVar4 = *(iVar2 + 0x422dd8) | (dVar4 & *0x422d40) + *0x422d50 << 0x2e;\n        dVar3 = dVar5 * dVar5 * (*0x422dc8 + *0x422db8 * dVar5) +\n                dVar3 + *(iVar2 + 0x422dd0) + dVar3 * dVar3 * dVar3 * dVar3 * (*0x422dc0 + *0x422db0 * dVar3);\n        if ((uVar1 >> 6) + 0x37eU < 0x77d) {\n            return dVar3 * dVar4 + dVar4;\n        }\n        dVar5 = ~*0x422d30 & dVar4 | (uVar1 >> 7) + 0x3ff << 0x34;\n        uStack4 = dVar5 >> 0x30;\n        in_XMM0_Qa = (((uVar1 >> 6) - (uVar1 >> 7)) + 0x3ff << 0x34) * (dVar5 + dVar3 * dVar5);\n        if ((in_XMM0_Qa >> 0x30 & 0x7ff0) < 0x7ff0) {\n            if ((in_XMM0_Qa & 0x7ff0000000000000) != 0) goto code_r0x0041c932;\n            arg_14h = 0xf;\n        }\n        else {\n            arg_14h = 0xe;\n        }\n    }\n    else {\n        uVar1 = param_2 & 0x7fffffff;\n        if (uVar1 < 0x40900000) {\n            return CONCAT44(param_2, param_1) + *0x4231d0;\n        }\n        if (uVar1 < 0x7ff00000) {\n            if (param_2 < 0x80000000) {\n                in_XMM0_Qa = *0x423200 * *0x423200;\n                arg_14h = 0xe;\n            }\n            else {\n                in_XMM0_Qa = *0x423208 * *0x423208;\n                arg_14h = 0xf;\n            }\n        }\n        else {\n            if ((uVar1 < 0x7ff00001) && (param_1 == 0)) {\n                if (param_2 != 0x7ff00000) {\n                    return *0x4231f8;\n                }\n                return *0x4231f0;\n            }\n            arg_14h = 0x3ea;\n        }\n    }\n    uStack12 = SUB82(in_XMM0_Qa, 0);\n    Stack10 = in_XMM0_Qa >> 0x10;\n    fcn.0040c62c(&param_1, &param_1, &uStack12, arg_14h);\n    in_XMM0_Qa = CONCAT62(Stack10, uStack12);\ncode_r0x0041c932:\n    return in_XMM0_Qa;\n}\n",
        "token_count": 1035
    },
    "0041ce2e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nfloat10 fcn.0041ce2e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x423b00 | *0x423b60;\n        dVar7 = SUB168(in_XMM0, 0) & *0x423b08 | *0x423b68;\n        uVar1 = SUB82(*0x423b10 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x423b28 & dVar7;\n        dVar9 = (*0x423b20 & dVar6) * *(uVar1 + 0x423be0) - *0x423b60;\n        dVar6 = (dVar6 - (*0x423b20 & dVar6)) * *(uVar1 + 0x423be0);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x423be8);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x423be8) - *0x423b68);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x423bb0 * dVar7 + *0x423bc0) * dVar7 + *0x423bd0) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   ((*0x423bb8 * dVar11 + *0x423bc8) * dVar11 + *0x423bd8) * dVar11 * dVar11 +\n                   *(uVar1 + 0x423ff8) + dVar10 * *0x423b38 + (dVar8 & *(iVar5 + 0x423b48)) +\n                   *(uVar1 + 0x423ff0) + dVar9 + dVar10 * *0x423b30 + (dVar6 & *(iVar5 + 0x423b40));\n        }\n        dStack12 = -(*0x423b70 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x423b60 == (param_1 & *0x423b00 | *0x423b60)) {\n                    return *0x423b98;\n                }\n                arg_14h = 1000;\n                dStack12 = *0x423b00;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 3;\n            }\n            else {\n                arg_14h = 1000;\n            }\n            goto code_r0x0041d022;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x423b80);\n        iVar4 = -0x34;\n    }\n    arg_14h = 2;\n    dStack12 = *0x423b90;\ncode_r0x0041d022:\n    fcn.0040c62c(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 998
    },
    "0041d09e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d09e(double param_1)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    uchar in_XMM0 [16];\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    double dVar9;\n    uint32_t uVar11;\n    uchar auVar10 [16];\n    double dVar12;\n    ulong in_XMM6_Qa;\n    double dVar13;\n    double dVar14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    uint in_XMM7_Dc;\n    uint in_XMM7_Dd;\n    double dStack12;\n    \n    dVar6 = SUB168(in_XMM0, 0);\n    uVar11 = SUB164(in_XMM0 >> 0x20, 0);\n    uVar3 = uVar11 >> 0xc;\n    auVar10 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar2 = uVar3 & 0x7ffff;\n    if (uVar2 - 0x3fb00 < 0x3bb) {\n        iVar4 = (uVar3 & 0xfffc) - 0xfb00;\n        auVar10 = CONCAT88(in_XMM2_Qa & CONCAT44(in_XMM7_Dd, in_XMM7_Dc), *0x425ba8 & dVar6) | auVar10;\n        iVar5 = iVar4 * 4;\n        dVar9 = SUB168(auVar10, 0);\n        dVar13 = dVar6 * *(iVar4 * 2 + 0x425310);\n        dVar1 = SQRT(*0x425bb0 - dVar6 * dVar6) * dVar9;\n        dVar7 = dVar13 - dVar1;\n        uVar11 = SUB164(auVar10 >> 0x20, 0);\n        uVar2 = uVar11 & 0x80000000;\n        dVar8 = dVar7 * dVar7;\n        return ((dVar6 - dVar9) * (dVar6 + dVar9)) / (dVar13 + dVar1) +\n               (*0x425b50 + *0x425b58 * dVar8) * dVar7 * dVar8 * dVar8 +\n               _str.UUUUUU * dVar7 * dVar8 + (*(iVar5 + 0x424410) ^ uVar2 << 0x20) +\n               ((*(iVar5 + 0x424418) ^ SUB168(CONCAT412(uVar11, ZEXT412(uVar2) << 0x20) >> 0x40, 0)) &\n               0xffffffff00000000);\n    }\n    if (uVar2 - 0x3febb < 0x43) {\n        dVar1 = SQRT(*0x425bb0 - dVar6 * dVar6);\n        dVar7 = dVar6 & *0x425b40;\n        dVar8 = (dVar6 & 0x7fffffffffffffff) - dVar7;\n        dVar9 = *0x425ba8 & dVar1 | SUB168(auVar10, 0);\n        iVar5 = ((dVar1 << 2) >> 0x30) - 0xfec0;\n        dVar1 = dVar1 * *(iVar5 * 8 + 0x425310);\n        dVar13 = (dVar7 * dVar9 - dVar1) + dVar8 * dVar9;\n        iVar5 = iVar5 * 0x10;\n        dVar14 = dVar13 * dVar13;\n        auVar10 = pinsrw(0x0, (SUB161(CONCAT412(in_XMM7_Dd, CONCAT48(in_XMM7_Dc, dVar6)) >> 0x3f, 0) & 1) << 0xf, 3);\n        return (((*0x425b58 * dVar14 + *0x425b50) * dVar13 * dVar14 * dVar14 +\n                _str.UUUUUU * dVar13 * dVar14 + (*0x425b10 - *(iVar5 + 0x424410))) -\n               (((*0x425bb0 - dVar7 * dVar7) - dVar9 * dVar9) - ((dVar6 & 0x7fffffffffffffff) + dVar7) * dVar8) /\n               (dVar1 + dVar1 + dVar13)) + (*0x425b18 - *(iVar5 + 0x424418) & 0xffffffff00000000) | SUB168(auVar10, 0);\n    }\n    if (uVar2 - 0x3c300 < 0x3800) {\n        dVar1 = dVar6 * dVar6;\n        dVar7 = dVar6 * dVar6;\n        dVar8 = dVar6 * dVar1;\n        return dVar6 + dVar8 * dVar8 * dVar8 * (*0x425b60 * dVar1 + *0x425b70 + *0x425b80 * dVar1 * dVar1) +\n                       dVar6 * dVar7 * (*0x425b68 * dVar7 + *0x425b78 + *0x425b88 * dVar7 * dVar7);\n    }\n    if (uVar2 - 0x3fefe < 2) {\n        dVar1 = SQRT(*0x425bb0 - dVar6 * dVar6);\n        dVar8 = dVar6 & *0x425b30;\n        uVar11 = dVar1 >> 0x20;\n        dVar14 = dVar1 & 0xffffffff | uVar11 << 0x20;\n        dVar7 = dVar1 & *0x425b30;\n        dVar6 = dVar6 - dVar8;\n        dVar12 = SUB168(CONCAT412(uVar11, CONCAT48(SUB84(dVar1, 0), dVar14)) >> 0x40, 0);\n        dVar15 = SUB128(CONCAT84(in_XMM6_Qa, uVar11), 0) << 0x20;\n        dVar1 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar9 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar16 = dVar15 * dVar1;\n        dVar17 = SUB168(CONCAT412(uVar11, ZEXT812(dVar15)) >> 0x40, 0) * dVar9;\n        dVar13 = dVar16 * dVar16 * dVar16;\n        auVar10 = pinsrw(ZEXT816(0), SUB162(in_XMM0 >> 0x30, 0) & 0x8000, 3);\n        return (((*0x425b10 + (*0x425b90 * dVar1 + *0x425b98) * dVar16 * dVar16 * dVar13) -\n                ((dVar1 * dVar1 * *0x425b80 + *0x425b70 + *0x425b60 * dVar1) * dVar13 +\n                 (SUB128(CONCAT84(dVar17, (dVar9 * dVar9 * *0x425b88 + *0x425b78 + *0x425b68 * dVar9) * dVar17 >> 0x20)\n                         , 0) << 0x20) +\n                (((((*0x425bb0 - dVar8 * dVar8) - (dVar8 + dVar8) * dVar6) - dVar7 * dVar7) - dVar6 * dVar6) +\n                (dVar14 + dVar14 + (dVar7 - dVar14)) * (dVar7 - dVar14)) / (dVar12 + dVar12))) -\n               (dVar15 - (*0x425b18 + (dVar15 - *0x425b18)))) - (dVar15 - *0x425b18) | SUB168(auVar10, 0);\n    }\n    if (uVar2 < 0x3ff00) {\n        if (0x7fdf < (param_1 >> 0x30 & 0x7ff0) - 0x10) {\n            param_1 = param_1 | param_1 + 0.0;\n        }\n        return param_1;\n    }\n    if ((0x3ff00000 - (uVar11 & 0x7fffffff) | SUB164(in_XMM0, 0)) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (SUB84(param_1, 0) == 0) < 0) {\n            auVar10 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dStack12 = SUB168(auVar10, 0) * 0.0;\n            arg_14h = 0x3d;\n        }\n        else {\n            dStack12 = param_1 + 0.0;\n            arg_14h = 0x3f1;\n        }\n        fcn.0040c62c(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    return *0x425b18 + *0x425b10 | ~*0x425ba0 & dVar6;\n}\n",
        "token_count": 2196
    },
    "00405f6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f6a(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    char in_DL;\n    \n    if (arg_8h == 1) {\n        if (*(in_EAX + 0x18) < 0x10) {\n            iVar1 = in_EAX + 4;\n        }\n        else {\n            iVar1 = *(in_EAX + 4);\n        }\n        *(iVar1 + in_ECX) = in_DL;\n    }\n    else {\n        if (*(in_EAX + 0x18) < 0x10) {\n            iVar1 = in_EAX + 4;\n        }\n        else {\n            iVar1 = *(in_EAX + 4);\n        }\n        fcn.0040c210(iVar1 + in_ECX, in_DL, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "004067c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.004067c2(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *arg_8h;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    uint32_t uVar8;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0041b5ec();\n    *(unaff_EBP + -0x10) = &var_18h;\n    iVar7 = *(extraout_EDX + 0xc);\n    if (iVar7 == 0) {\n        *(unaff_EBP + -0x14) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x14) = *(extraout_EDX + 0x14) - iVar7 >> 2;\n    }\n    iVar2 = *(extraout_EDX + 0x10);\n    iVar3 = iVar2 - iVar7 >> 2;\n    iVar7 = 0x3fffffff;\n    if (iVar3 == 0x3fffffff) {\n        iVar3 = fcn.00406981();\n        iVar7 = extraout_ECX;\n    }\n    uVar4 = iVar3 + 1;\n    if (*(unaff_EBP + -0x14) < uVar4) {\n        uVar8 = *(unaff_EBP + -0x14) >> 1;\n        if (iVar7 - uVar8 < *(unaff_EBP + -0x14)) {\n            *(unaff_EBP + -0x14) = 0;\n        }\n        else {\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + uVar8;\n        }\n        if (*(unaff_EBP + -0x14) < uVar4) {\n            *(unaff_EBP + -0x14) = uVar4;\n        }\n        uVar5 = fcn.004069af();\n        *(unaff_EBP + -0x18) = uVar5;\n        *(unaff_EBP + -4) = 0;\n        fcn.0040611a(arg_8h);\n        *(unaff_EBP + -0x1c) = 1;\n        iVar7 = *(unaff_EBP + -0x18);\n        fcn.00408575(*(extraout_EDX + 0xc));\n        *(unaff_EBP + -0x1c) = 2;\n        fcn.00408575(*(unaff_EBP + 0xc));\n        *(unaff_EBP + -4) = 0xffffffff;\n        iVar2 = *(extraout_EDX + 0xc);\n        iVar3 = *(extraout_EDX + 0x10);\n        if (iVar2 != 0) {\n            fcn.004098e1(iVar2);\n        }\n        *(extraout_EDX + 0x14) = iVar7 + *(unaff_EBP + -0x14) * 4;\n        *(extraout_EDX + 0x10) = iVar7 + ((iVar3 - iVar2 >> 2) + 1) * 4;\n        *(extraout_EDX + 0xc) = iVar7;\n    }\n    else if (iVar2 - *(unaff_EBP + 0xc) >> 2 == 0) {\n        *(unaff_EBP + -0x18) = *arg_8h;\n        fcn.00408575(*(unaff_EBP + 0xc));\n        *(unaff_EBP + -4) = 2;\n        fcn.0040611a(unaff_EBP + -0x18);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(extraout_EDX + 0x10) = *(extraout_EDX + 0x10) + 4;\n        iVar7 = *(extraout_EDX + 0x10);\n        for (puVar6 = *(unaff_EBP + 0xc); puVar6 != iVar7 + -4; puVar6 = puVar6 + 1) {\n            *puVar6 = *(unaff_EBP + -0x18);\n        }\n    }\n    else {\n        *(unaff_EBP + -0x18) = *arg_8h;\n        uVar5 = fcn.00408575(iVar2 + -4);\n        *(extraout_EDX + 0x10) = uVar5;\n        puVar6 = *(unaff_EBP + 0xc);\n        iVar7 = (iVar2 + -4) - puVar6 >> 2;\n        if (0 < iVar7) {\n            fcn.004086c8(iVar2 + iVar7 * -4, iVar7 * 4, puVar6, iVar7 * 4);\n            puVar6 = *(unaff_EBP + 0xc);\n        }\n        puVar1 = puVar6 + 1;\n        for (; puVar6 != puVar1; puVar6 = puVar6 + 1) {\n            *puVar6 = *(unaff_EBP + -0x18);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1269
    },
    "004069fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004069fe(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 == 0) {\n        fcn.00401000(0);\n        fcn.0040a36b(&var_ch, 0x42667c);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.0040a0c2(param_1);\n    return;\n}\n",
        "token_count": 136
    },
    "00408538": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408538(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    else if (0xffffffff / arg_8h == 0) {\n        fcn.00401000(0);\n        fcn.0040a36b(&var_ch, 0x42667c);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.0040a0c2(arg_8h);\n    return;\n}\n",
        "token_count": 141
    },
    "0040127a": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.0040127a(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint32_t unaff_retaddr;\n    int32_t in_stack_0000003c;\n    int32_t in_stack_00000040;\n    int32_t iStack460;\n    int32_t *piStack432;\n    int32_t *piStack368;\n    char16_t *pcStack364;\n    uchar *puStack360;\n    uint32_t uStack356;\n    int32_t *piStack352;\n    uchar *puStack348;\n    uchar *puStack344;\n    uint uStack340;\n    uchar *puStack304;\n    uchar *puStack300;\n    uint uStack296;\n    uint32_t uStack276;\n    uint uStack272;\n    uint32_t uStack268;\n    uint32_t uStack264;\n    uint32_t uStack260;\n    uint32_t uStack256;\n    uint32_t uStack252;\n    uint32_t uStack248;\n    uint32_t uStack244;\n    uint uStack240;\n    int32_t iStack236;\n    int32_t iStack232;\n    uchar *arg_8h;\n    \n    fcn.00413b30();\n    iVar7 = *0x42c2d0;\n    fcn.0040c210();\n    fcn.0040c210();\n    if (iVar7 != 0) {\n        (*_sym.imp.USER32.dll_GetPropW)();\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        if (in_stack_00000040 != in_stack_0000003c) {\n            fcn.00408ffd((in_stack_00000040 - in_stack_0000003c) + 1, 2);\n        }\n    }\n    piVar3 = fcn.00408675();\n    iVar5 = *0x42c2d0;\n    iVar7 = *0x42c2d0 + 0xf;\n    iVar6 = 0;\n    piVar4 = piVar3;\n    if (-1 < iVar7) {\n        do {\n            if ((iVar6 < 0) || (piVar8 = piVar4,  9 < iVar6)) {\n                piVar8 = 0x42b4f4;\n            }\n            *piVar8 = iVar6;\n            iVar6 = iVar6 + 1;\n            piVar4 = piVar4 + 1;\n        } while (iVar6 <= iVar7);\n    }\n    *0x42b4f4 = 0xb;\n    iVar6 = 0;\n    iVar7 = 5 - iVar5;\n    piVar3[3] = piVar3[9];\n    if (-1 < iVar7) {\n        do {\n            iVar5 = iVar5 + *0x42c2d8;\n            iVar7 = iVar7 - *0x42c2d8;\n            iVar6 = iVar6 + 1;\n            *0x42c2d0 = iVar5;\n        } while (iVar6 <= iVar7);\n    }\n    fcn.004098d6();\n    uVar2 = *0x42c2dc;\n    if (unaff_retaddr == param_1 + *0x42c2d4) {\n        unaff_retaddr = (((*0x42c2d4 & 0xffff) / *0x42c2dc) * *0x42c2d0 * unaff_retaddr) / *0x42c2dc + *0x42c2d8;\n    }\n    if (*0x42c2c4 * *0x42c2d0 - (*0x42c2dc + *0x42c2d0) == 0) {\n        fcn.0041b080();\n        iVar7 = fcn.0041b1a6();\n        *0x42c2c8 = ((unaff_retaddr + 4) * (unaff_retaddr & 0xffff) + iVar7 + uVar2) * *0x42c2c8;\n    }\n    fcn.00405faa(0);\n    fcn.00405faa(0);\n    fcn.00405faa(0);\n    fcn.00401256(&stack0x00000368);\n    iVar7 = (*_sym.imp.WININET.dll_InternetCanonicalizeUrlA)();\n    if ((iVar7 == 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar7 == 0x7a)) {\n        fcn.00408675();\n    }\n    fcn.00401dbe(&stack0x00000354);\n    fcn.00406029(1, 0);\n    fcn.00406029(1, 0);\n    fcn.00406029(1, 0);\n    fcn.0041b220();\n    fcn.0041b1a6();\n    pcVar1 = _sym.imp.WINMM.dll_mciSendCommandA;\n    (*_sym.imp.WINMM.dll_mciSendCommandA)();\n    (*pcVar1)();\n    (*pcVar1)();\n    (*_sym.imp.USER32.dll_GetDlgItem)();\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    (*_sym.imp.USER32.dll_MapWindowPoints)();\n    (*_sym.imp.USER32.dll_CopyRect)();\n    fcn.00405faa(0);\n    iVar5 = 0;\n    fcn.00405faa(0);\n    fcn.00405faa(0);\n    arg_8h = &stack0x000002d4;\n    fcn.00401256(arg_8h);\n    iVar7 = (*_sym.imp.WININET.dll_InternetCanonicalizeUrlA)();\n    if ((iVar7 == 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar7 == 0x7a)) {\n        fcn.00408675();\n    }\n    fcn.00401dbe(&stack0x000002c0);\n    fcn.00406029(1, 0);\n    fcn.00406029(1, 0);\n    iVar6 = 0;\n    iStack232 = 0x4016bc;\n    fcn.00406029(1, 0);\n    iStack232 = 0x4016c5;\n    fcn.004058bd();\n    iStack232 = 0x4016dd;\n    fcn.0041b220();\n    iStack232 = 0x401727;\n    fcn.0041b1a6();\n    iVar7 = 0;\n    if (arg_8h != NULL) {\n        iVar7 = iVar5 - arg_8h >> 2;\n    }\n    *0x42c2c4 = *0x42c2c4 + iVar7;\n    iStack232 = 0x401756;\n    fcn.00405904();\n    iStack232 = 0x40175b;\n    fcn.004058e1();\n    uStack268 = *0x42c2d4;\n    iStack232 = *0x42c2c8;\n    iStack236 = *0x42c2c4;\n    uStack240 = 0x80d;\n    uStack244 = *0x42c2d4;\n    uStack248 = 0x401777;\n    (*pcVar1)();\n    uStack248 = uStack268;\n    uStack252 = uStack268;\n    uStack256 = 0x806;\n    uStack260 = uStack268;\n    uStack264 = 0x401781;\n    (*pcVar1)();\n    uStack264 = uStack268;\n    uStack272 = 0x80d;\n    uStack276 = uStack268;\n    puStack300 = &stack0xfffffeec;\n    (*pcVar1)();\n    fcn.004058bd();\n    iVar7 = *0x42c2d0;\n    uStack260 = 4 - *0x42c2d0;\n    fcn.0041b220();\n    uStack260 = ((*0x42c2c8 / ((*0x42c2d4 * iVar7) / 6 + *0x42c2d4)) * *0x42c2d4) / *0x42c2dc;\n    uStack252 = fcn.0041b1a6();\n    iVar5 = 0;\n    if (iStack232 != 0) {\n        iVar5 = iVar6 - iStack232 >> 2;\n    }\n    *0x42c2c4 = *0x42c2c4 + iVar5;\n    uStack260 = iVar7 + 1;\n    fcn.00405904();\n    fcn.004058e1();\n    if (uStack256 == *0x42c2d8) {\n        uStack256 = uStack256 +\n                    ((((uStack260 & 0xffff) + *0x42c2d0) * *0x42c2dc * *0x42c2d0) / (*0x42c2d0 + 6) -\n                    ((*0x42c2d4 & 0xff) * *0x42c2c8) / *0x42c2dc);\n    }\n    if (*0x42c2c4 * *0x42c2d0 - (*0x42c2d0 + *0x42c2dc) == 0) {\n        *0x42c2c8 = (uStack256 & 0xffff) * *0x42c2c8 * *0x42c2dc * uStack256;\n    }\n    fcn.00405faa(0);\n    fcn.00405faa(0);\n    fcn.00405faa(0);\n    uStack296 = 0x4018ce;\n    fcn.00401256(&stack0x00000268);\n    uStack296 = 0;\n    puStack304 = &stack0x00000964;\n    uStack276 = 0x824;\n    iVar7 = (*_sym.imp.WININET.dll_InternetCanonicalizeUrlA)();\n    if ((iVar7 == 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar7 == 0x7a)) {\n        fcn.00408675();\n    }\n    fcn.00401dbe(&stack0x00000254);\n    fcn.00406029(1, 0);\n    fcn.00406029(1, 0);\n    uStack340 = 0x40193a;\n    fcn.00406029(1, 0);\n    uStack340 = 1;\n    puStack304 = NULL;\n    puStack300 = NULL;\n    uStack296 = 0;\n    puStack344 = &stack0xfffffed0;\n    puStack348 = 0x40197d;\n    (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)();\n    puStack348 = NULL;\n    piStack352 = NULL;\n    uStack356 = 1;\n    puStack360 = &stack0xfffffec8;\n    pcStack364 = 0x40198c;\n    (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)();\n    pcStack364 = L\"Local\\\\Pid\";\n    piStack368 = 0x4;\n    iVar7 = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)();\n    if (iVar7 != 0) {\n        (*_sym.imp.KERNEL32.dll_MapViewOfFileEx)();\n    }\n    uVar2 = *0x42c2dc;\n    if (*0x42c2c4 * *0x42c2d0 - (*0x42c2d0 + *0x42c2dc) == 0) {\n        fcn.0041b080();\n        iVar7 = fcn.0041b1a6();\n        *0x42c2c8 = ((pcStack364 + 2) * (pcStack364 & 0xffff) + iVar7 + uVar2) * *0x42c2c8;\n    }\n    piStack368 = NULL;\n    fcn.0040952a(&stack0xfffffe90, \"time\", 0x421364);\n    piStack352 = fcn.0040a0c2(4);\n    if (piStack352 == NULL) {\n        piStack352 = NULL;\n    }\n    else {\n        *piStack352 = &stack0xfffffea0;\n    }\n    uStack356 = uStack356 & 0xffffff;\n    fcn.0040613d();\n    if (*0x42c2d0 != 0) {\n        if (puStack344 == puStack348) {\n            fcn.00409801();\n        }\n        fcn.00408e3f(puStack348, 0x500000, 1, 0x500000, 4);\n        fcn.00409ca2(4);\n    }\n    if (puStack348 != NULL) {\n        fcn.004098e1();\n    }\n    puStack348 = NULL;\n    puStack344 = NULL;\n    uStack340 = 0;\n    fcn.004098e1();\n    piStack368 = piStack368 + -4;\n    if (piStack368 == (*0x42c2d0 - *0x42c2c8) * *0x42c2c8) {\n        *0x42c2c8 = (*0x42c2dc / (*0x42c2d8 - 3)) * (*0x42c2d4 & 0xffff) * *0x42c2c8;\n    }\n    (*_sym.imp.USER32.dll_EndDialog)();\n    pcVar1 = _sym.imp.WINMM.dll_mciSendCommandA;\n    (*_sym.imp.WINMM.dll_mciSendCommandA)();\n    (*pcVar1)();\n    (*pcVar1)();\n    piStack368 = fcn.00408675();\n    iVar7 = *0x42c2d0;\n    iVar5 = 0;\n    piStack432 = piStack368;\n    if (-1 < *0x42c2d0 + 0xf) {\n        do {\n            if ((iVar5 < 0) || (piVar4 = piStack432,  9 < iVar5)) {\n                piVar4 = 0x42b4f8;\n            }\n            *piVar4 = iVar5;\n            iVar5 = iVar5 + 1;\n            piStack432 = piStack432 + 1;\n        } while (iVar5 <= iVar7 + 0xf);\n    }\n    *0x42b4f8 = 0xb;\n    piStack368[3] = piStack368[9];\n    iVar5 = 5 - iVar7;\n    piStack432 = NULL;\n    if (-1 < iVar5) {\n        do {\n            iVar7 = iVar7 + *0x42c2d8;\n            iVar5 = iVar5 - *0x42c2d8;\n            piStack432 = piStack432 + 1;\n            *0x42c2d0 = iVar7;\n        } while (piStack432 <= iVar5);\n    }\n    fcn.004098d6();\n    iStack460 = 0;\n    (*_sym.imp.WININET.dll_InternetOpenA)();\n    (*_sym.imp.WININET.dll_InternetSetStatusCallback)();\n    if (*0x42c2d0 != 0) {\n        iStack460 = (*_sym.imp.WININET.dll_InternetConnectA)();\n    }\n    (*_sym.imp.WININET.dll_FtpSetCurrentDirectoryA)();\n    iVar7 = (*_sym.imp.USER32.dll_RegisterRawInputDevices)();\n    if (iVar7 == 0) {\n        *0x42c2c4 = 1;\n    }\n    if ((*0x42c2d0 - *0x42c2c8) * *0x42c2c8 == 0x401275) {\n        *0x42c2c8 = (*0x42c2dc / (*0x42c2d8 - 3)) * (*0x42c2d4 & 0xffff) * *0x42c2c8;\n    }\n    (*pcVar1)();\n    (*pcVar1)();\n    (*pcVar1)();\n    if (*0x42c2d0 != 0) {\n        (*_sym.imp.USER32.dll_GetPropW)();\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iStack460 != 1) {\n            fcn.00408ffd(iStack460, 2);\n        }\n    }\n    (*_sym.imp.USER32.dll_GetDlgItem)();\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    (*_sym.imp.USER32.dll_MapWindowPoints)();\n    (*_sym.imp.USER32.dll_CopyRect)();\n    return;\n}\n",
        "token_count": 3768
    },
    "00401de4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.00401de4(uint arg_8h, uint pdecIn, uint Y)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uchar uVar7;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    uint lpString;\n    uint var_163h;\n    uint var_60h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint pcbBuffer;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0041aecc(0x426690, 0x254);\n    fcn.0040c210(unaff_EBP + -0x163, 0, 0xff);\n    *(unaff_EBP + -0x164) = *0x42c2d4;\n    uVar3 = sub.urlmon.dll_HlinkSimpleNavigateToString(0, *0x42c2d0, *0x42c2d8, 0, 0, 0, 0, 0);\n    uVar3 = uVar3 & 0x80000001;\n    if (uVar3 < 0) {\n        uVar3 = (uVar3 - 1 | 0xfffffffe) + 1;\n    }\n    iVar8 = uVar3 + 2;\n    *(unaff_EBP + -0x50) = iVar8;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    do {\n        if (*(unaff_EBP + -0x4c) <= *(unaff_EBP + -0x1c)) {\n            fcn.0041af07();\n            return;\n        }\n        *(unaff_EBP + 0xf) = *(*(unaff_EBP + -0x1c) + *(unaff_EBP + 8));\n        fcn.00408ee0();\n        pcVar4 = unaff_EBP + -0x264;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        *(unaff_EBP + -0x28) = pcVar4 - (unaff_EBP + -0x263);\n        iVar5 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)();\n        if (iVar5 == 0) {\n            if (*0x42c2d0 == 0) goto code_r0x00401eab;\n            uVar3 = fcn.0040a00f(1);\n            iVar5 = extraout_ECX;\ncode_r0x00401ee9:\n            *(unaff_EBP + -0x38) = uVar3 & 0xffff;\n        }\n        else {\n            fcn.00409811(\"Username\\n\", unaff_EBP + -0x264);\ncode_r0x00401eab:\n            iVar5 = (0x19 - iVar8) * *(unaff_EBP + -0x2c) * *(unaff_EBP + 0x10);\n            *(unaff_EBP + -0x28) = iVar5;\n            uVar3 = *0x42c2d4;\n            if (*(unaff_EBP + -0x44) + *0x42c2d4 == 0) goto code_r0x00401ee9;\n            *0x42c2c4 = *0x42c2c4 + *(unaff_EBP + -0x40) * *(unaff_EBP + -0x44);\n        }\n        if (*0x42c2d0 == 0) {\n            *(unaff_EBP + -0x20) =\n                 *(unaff_EBP + -0x20) +\n                 ((*(unaff_EBP + -0x2c) - *(unaff_EBP + -0x1c)) * iVar5 * iVar5 * *(unaff_EBP + 0x10)) / iVar8;\n        }\n        fcn.0041b220();\n        *(unaff_EBP + -0x34) = *0x42c2dc & 0xffff;\n        *(unaff_EBP + -0x34) = *(unaff_EBP + -0x30);\n        uVar6 = fcn.0041b170();\n        *(unaff_EBP + -0x3c) = uVar6;\n        uVar6 = (*_sym.imp.ADVAPI32.dll_RegisterEventSourceA)(0, \"Event\");\n        *(unaff_EBP + -0x54) = \"length\";\n        iVar5 = (*_sym.imp.ADVAPI32.dll_ReportEventA)(uVar6, 1, 0, 1, 0, 1, 0, unaff_EBP + -0x54, 0);\n        if (iVar5 == 0) {\n            *0x42c2c8 = 1;\n        }\n        (*_sym.imp.ADVAPI32.dll_DeregisterEventSource)(uVar6);\n        if ((*0x42c2c4 & 0xffff) + *0x42c2d4 == 0) {\n            *(unaff_EBP + -0x48) = (*0x42c2c4 & 0xff) * (*0x42c2d4 & 0xff) + (unaff_EBP - 0x164U & 0xffff);\n        }\n        else {\n            *(unaff_EBP + -0x48) = (*0x42c2d4 & 0xff) - (unaff_EBP + -0x164);\n        }\n        if (*0x42c2c8 == 0) {\n            iVar5 = *(unaff_EBP + 0x10) - *(unaff_EBP + -0x3c);\n            *(unaff_EBP + -0x30) = iVar5;\n        }\n        else {\n            *(unaff_EBP + -0x60) =\n                 *(unaff_EBP + -0x60) + ((-(*(unaff_EBP + -0x3c) / 0x1e) - *(unaff_EBP + 0x10)) - *(unaff_EBP + -0x44));\n            iVar5 = *(unaff_EBP + -0x30);\n        }\n        *(unaff_EBP + -4) = 0;\n        uVar3 = *0x42c2d0;\n        *(unaff_EBP + -0x24 + *0x42c2d0) = *(unaff_EBP + -0x28) ^ *(unaff_EBP + 0xf);\n        *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) - (uVar3 & 0xffff) * *0x42c2c8;\n        iVar2 = *(unaff_EBP + 8);\n        *(unaff_EBP + -0x23 + *0x42c2d8) = iVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*0x42c2dc <= unaff_EBP + 0x9cU) {\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + (iVar5 - (*0x42c2dc & 0xff));\n        }\n        uVar7 = *(unaff_EBP + -0x24);\n        if (*(unaff_EBP + 0x10) == 0) {\n            uVar7 = *(unaff_EBP + -0x23);\n        }\n        *(*(unaff_EBP + -0x1c) + iVar2) = uVar7;\n        uVar6 = (*_sym.imp.USER32.dll_GetTopWindow)(*0x42c2d8);\n        *(unaff_EBP + 0xc) = uVar6;\n        (*_sym.imp.USER32.dll_GetDlgItemTextA)(uVar6, *0x42c2c8, unaff_EBP + -0x264, 0x104);\n        pcVar4 = unaff_EBP + -0x264;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        if ((pcVar4 == unaff_EBP + -0x263) && (*0x42c2d0 != 0)) {\n            (*_sym.imp.USER32.dll_MessageBoxW)(*(unaff_EBP + 0xc), 0x4213c8, 0x4213a4, 0x10);\n        }\n        uVar3 = *0x42c2d8;\n        *0x42c2c8 = *0x42c2c8 + unaff_EBP + -0x164 + *(unaff_EBP + 0x10) * *0x42c2d0;\n        if (*0x42c2d0 == *0x42c2d8) {\n            *(unaff_EBP + -0x20) =\n                 *(unaff_EBP + -0x20) -\n                 ((*(unaff_EBP + -0x28) * *(unaff_EBP + -0x1c) * *(unaff_EBP + 0x10) - iVar8) + -0x30) *\n                 *(unaff_EBP + -0x1c);\n        }\n        if ((*0x42c2c4 & 0xffff) + *(unaff_EBP + -0x48) == 0) {\n            fcn.0041b080();\n            *(unaff_EBP + 0xc) = *0x42c2c4 & 0xff;\n            *0x42c2c4 = fcn.0041b170();\n        }\n        else {\n            *(unaff_EBP + -0x30) = *0x42c2c4 - *(unaff_EBP + -0x44);\n        }\n        if (*0x42c2dc != *0x42c2d4) {\n            *(unaff_EBP + -0x2c) =\n                 *(unaff_EBP + -0x2c) +\n                 ((*(unaff_EBP + -0x28) + 0x24 + *(unaff_EBP + -0x20)) / *(unaff_EBP + 0x10)) * iVar8;\n        }\n        (*_sym.imp.USER32.dll_ShowWindow)(0, 5);\n        (*_sym.imp.USER32.dll_SetWindowPos)(uVar3, 0, *(unaff_EBP + 0x10), *(unaff_EBP + 0x10), 0, 0, 1);\n        (*_sym.imp.USER32.dll_EnableWindow)(0, 1);\n        (*_sym.imp.USER32.dll_GetDlgItem)(*0x42c2d8, *0x42c2c8);\n        if ((0x100 < *0x42c2d4) && (*(unaff_EBP + -0x2c) < *(unaff_EBP + -0x1c))) {\n            *(unaff_EBP + -0x20) =\n                 ((0x46 - *(unaff_EBP + -0x28) * *(unaff_EBP + -0x20)) - iVar8) * *(unaff_EBP + -0x2c) *\n                 *(unaff_EBP + -0x20);\n        }\n        *(unaff_EBP + 0xc) = 0;\n        iVar5 = (*_sym.imp.OLEAUT32.dll_VarDecRound)(unaff_EBP + 0xc);\n        if ((iVar5 != 0) || (*(unaff_EBP + 0xc) == 0)) {\n            *0x42c2c8 = 1;\n        }\n        *0x42c2c8 = *0x42c2c8 + (*(unaff_EBP + -0x38) - *(unaff_EBP + -0x48));\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n    } while( true );\n}\n",
        "token_count": 3111
    },
    "0041bd0e": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041bd0e(uint param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar7;\n    double in_XMM0_Qa;\n    uint64_t uVar8;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    uVar1 = (in_XMM0_Qa >> 0x30 & 0x7fff) + 0xcfd0;\n    bVar6 = uVar1 == 0x10c5;\n    if (uVar1 < 0x10c6) {\n        iVar5 = (ROUND(*0x422350 * in_XMM0_Qa) + 0x1c7600U & 0x3f) * 0x20;\n        return CONCAT44(iVar5, iVar5 + 0x421b10);\n    }\n    if (uVar1 < 0x10c6) {\n        uVar1 = uVar1 >> 4;\n        if (uVar1 == 0xcfd) {\n            return CONCAT44(param_2, uVar1);\n        }\n        return CONCAT44(param_2, uVar1);\n    }\n    uVar8 = fcn.0041c0d5();\n    arg_8h = uVar8 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (bVar6) {\n        if (((uVar8 & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = fcn.0041c0bc();\n        }\n        if (*0x42c170 == 0) {\n            uVar4 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar4);\n        }\n    }\n    else {\n        fVar7 = fsin(extraout_ST0);\n        uVar2 = uVar8 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar7 = fVar7 - (fVar7 / *0x4223ba) * *0x4223ba;\n                uVar2 = uVar2 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fsin(fVar7);\n        }\n        if (*0x42c170 == 0) {\n            uVar3 = uVar2 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar3 = uVar2 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar4 = fcn.0041c237(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar4);\n                }\n                uVar3 = uVar3 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    return CONCAT44(arg_8h, uVar2);\n}\n",
        "token_count": 842
    },
    "0041cc7e": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041cc7e(uint param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    bool bVar8;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar9;\n    uchar in_XMM0 [16];\n    uint64_t uVar10;\n    uint unaff_retaddr;\n    \n    uVar1 = SUB162(in_XMM0 >> 0x30, 0);\n    uVar2 = (uVar1 & 0x7fff) + 0xcfd0;\n    bVar8 = uVar2 == 0x10c5;\n    if (uVar2 < 0x10c6) {\n        iVar7 = (ROUND(*0x423a90 * SUB168(in_XMM0, 0)) + 0x1c7610U & 0x3f) * 0x20;\n        return CONCAT44(iVar7, iVar7 + 0x423250);\n    }\n    if (uVar2 < 0x10c6) {\n        uVar6 = uVar1 & 0x7fff;\n        pinsrw(in_XMM0, uVar6, 3);\n        return CONCAT44(param_2, uVar6);\n    }\n    uVar10 = fcn.0041c0d5();\n    uVar6 = uVar10 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (bVar8) {\n        if (((uVar10 & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = fcn.0041c0bc();\n        }\n        if (*0x42c170 == 0) {\n            uVar5 = fcn.0041c237(uVar6, unaff_retaddr, param_3, param_4);\n            return CONCAT44(uVar6, uVar5);\n        }\n    }\n    else {\n        fVar9 = fcos(extraout_ST0);\n        uVar3 = uVar10 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar9 = fVar9 - (fVar9 / *0x4223ba) * *0x4223ba;\n                uVar3 = uVar3 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar9);\n        }\n        if (*0x42c170 == 0) {\n            uVar4 = uVar3 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar4 = uVar3 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar5 = fcn.0041c237(uVar6, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(uVar6, uVar5);\n                }\n                uVar4 = uVar4 & 0xffff0020;\n            }\n            return CONCAT44(uVar6, uVar4);\n        }\n    }\n    return CONCAT44(uVar6, uVar3);\n}\n",
        "token_count": 848
    },
    "00414318": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00414318(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x42c380) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.00412923(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00405747": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405747(uint arg_8h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t unaff_ESI;\n    int32_t arg_8h_00;\n    \n    if (*(unaff_ESI + 0x14) < 6) {\n        fcn.0040863d();\n    }\n    if (-*(unaff_ESI + 0x14) - 1U < 6) {\n        fcn.00408605();\n    }\n    arg_8h_00 = *(unaff_ESI + 0x14) + 5;\n    cVar2 = fcn.00405fc9(arg_8h_00, 0);\n    if (cVar2 != '\\0') {\n        puVar3 = unaff_ESI + 4;\n        puVar1 = puVar3;\n        if (0xf < *(unaff_ESI + 0x18)) {\n            puVar1 = *puVar3;\n            puVar3 = *puVar3;\n        }\n        fcn.00401068(puVar3 + 0xb, *(unaff_ESI + 0x18) - 0xb, puVar1 + 6, *(unaff_ESI + 0x14) + -6);\n        fcn.00405f6a(5);\n        fcn.00405faa(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0041bf27": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bf27(uint param_1, int32_t param_2)\n\n{\n    float10 fVar1;\n    char cVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 in_ST1;\n    uint var_a2h;\n    uint var_94h;\n    uint var_90h;\n    \n    if (*(param_2 + 0xe) == '\\x05') {\n        uVar4 = CONCAT31(*(unaff_EBP + -0xa4) >> 8 & 0xfe | 2, 0x3f);\n    }\n    else {\n        uVar4 = 0x133f;\n    }\n    *(unaff_EBP + -0xa2) = uVar4;\n    fVar1 = 0;\n    *(unaff_EBP + -0x94) = param_2;\n    *(unaff_EBP + -0xa0) = (in_ST0 < fVar1) << 9 | (in_ST0 != fVar1) << 10 | (in_ST0 == fVar1) << 0xe;\n    *(unaff_EBP + -0x90) = 0;\n    fVar1 = 0;\n    *(unaff_EBP + -0xa0) = (in_ST1 < fVar1) << 9 | (in_ST1 != fVar1) << 10 | (in_ST1 == fVar1) << 0xe;\n    uVar3 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    cVar2 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    // WARNING: Could not recover jumptable at 0x0041bfb1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(param_2 + (*(((cVar2 << 1 | cVar2 < '\\0') & 0xf) + 0x42b5cc) |\n                  *(((uVar3 & 7) << 1 | uVar3 < '\\0') + 0x42b5cc) << 2) + 0x10))();\n    return;\n}\n",
        "token_count": 506
    },
    "00406f9e": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00406f9e(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t unaff_ESI;\n    ulong uVar7;\n    uint arg_ch;\n    uint var_5ch;\n    uint var_34h;\n    uint var_18h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    uVar7 = CONCAT44(0xfffffff, *(unaff_ESI + 0x14));\n    var_4h = 1;\n    if (*(unaff_ESI + 0x14) != 0xfffffff) goto code_r0x00406fe3;\n    fcn.004056cd(\"deque<T> too long\");\n    fcn.004010f1(&var_34h);\n    arg_ch = 0x426644;\n    puVar2 = &var_5ch;\n    while( true ) {\n        uVar7 = fcn.0040a36b(puVar2, arg_ch);\ncode_r0x00406fe3:\n        uVar4 = uVar7;\n        uVar3 = uVar4 >> 1;\n        if (uVar3 < 8) {\n            uVar3 = 8;\n        }\n        if ((1 < uVar3) && (uVar4 <= (uVar7 >> 0x20) - uVar3)) {\n            var_4h = uVar3;\n        }\n        uVar3 = *(unaff_ESI + 0x18);\n        uVar5 = uVar3 >> 2;\n        uVar4 = var_4h + uVar4;\n        if ((uVar4 == 0) || (3 < 0xffffffff / uVar4)) break;\n        fcn.00401000(0);\n        arg_ch = 0x42667c;\n        puVar2 = &var_18h;\n    }\n    var_8h = fcn.0040a0c2(uVar4 * 4);\n    fcn.004085c1(*(unaff_ESI + 0x10) + (uVar3 & 0xfffffffc));\n    if (var_4h < uVar5) {\n        iVar6 = var_4h * 4;\n        fcn.004085c1(*(unaff_ESI + 0x10));\n        puVar2 = fcn.004085c1(iVar6 + *(unaff_ESI + 0x10));\n        uVar5 = var_4h;\n    }\n    else {\n        var_ch = var_4h - uVar5;\n        puVar1 = fcn.004085c1(*(unaff_ESI + 0x10));\n        iVar6 = var_ch;\n        puVar2 = var_8h;\n        if (var_ch != 0) {\n            for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar1 = 0;\n                puVar1 = puVar1 + 1;\n            }\n        }\n    }\n    if (uVar5 != 0) {\n        for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    if (*(unaff_ESI + 0x10) != 0) {\n        fcn.004098e1(*(unaff_ESI + 0x10));\n    }\n    *(unaff_ESI + 0x10) = var_8h;\n    *(unaff_ESI + 0x14) = *(unaff_ESI + 0x14) + var_4h;\n    return;\n}\n",
        "token_count": 851
    },
    "0040833a": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t fcn.0040833a(void)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    piVar1 = in_EAX[1];\n    piVar2 = *in_EAX;\n    uVar5 = piVar1 >> 2;\n    if (piVar2 == NULL) {\n        fcn.00409801();\n        piVar2 = *in_EAX;\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n            goto code_r0x00408363;\n        }\n    }\n    iVar4 = *piVar2;\ncode_r0x00408363:\n    if (piVar2 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = *piVar2;\n    }\n    if (*(iVar3 + 0x1c) + *(iVar4 + 0x18) <= in_EAX[1]) {\n        fcn.00409801();\n    }\n    piVar2 = *in_EAX;\n    if (piVar2 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = *piVar2;\n    }\n    if (*(iVar4 + 0x14) < uVar5 || *(iVar4 + 0x14) == uVar5) {\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        uVar5 = uVar5 - *(iVar4 + 0x14);\n    }\n    if (piVar2 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = *piVar2;\n    }\n    return *(*(iVar4 + 0x10) + uVar5 * 4) + (piVar1 & 3) * 4;\n}\n",
        "token_count": 440
    },
    "0040718e": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0040718e(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    ulong uVar6;\n    uint arg_ch;\n    uint var_5ch;\n    uint var_34h;\n    uint var_18h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = CONCAT44(0xfffffff, *(unaff_ESI + 0x14));\n    var_4h = 1;\n    if (*(unaff_ESI + 0x14) != 0xfffffff) goto code_r0x004071d3;\n    fcn.004056cd(\"deque<T> too long\");\n    fcn.004010f1(&var_34h);\n    arg_ch = 0x426644;\n    puVar2 = &var_5ch;\n    while( true ) {\n        uVar6 = fcn.0040a36b(puVar2, arg_ch);\ncode_r0x004071d3:\n        uVar4 = uVar6;\n        uVar3 = uVar4 >> 1;\n        if (uVar3 < 8) {\n            uVar3 = 8;\n        }\n        if ((1 < uVar3) && (uVar4 <= (uVar6 >> 0x20) - uVar3)) {\n            var_4h = uVar3;\n        }\n        uVar3 = *(unaff_ESI + 0x18) >> 3;\n        uVar4 = var_4h + uVar4;\n        if ((uVar4 == 0) || (3 < 0xffffffff / uVar4)) break;\n        fcn.00401000(0);\n        arg_ch = 0x42667c;\n        puVar2 = &var_18h;\n    }\n    var_8h = fcn.0040a0c2(uVar4 * 4);\n    fcn.004085c1(*(unaff_ESI + 0x10) + uVar3 * 4);\n    if (var_4h < uVar3) {\n        iVar5 = var_4h * 4;\n        fcn.004085c1(*(unaff_ESI + 0x10));\n        puVar2 = fcn.004085c1(iVar5 + *(unaff_ESI + 0x10));\n        uVar3 = var_4h;\n    }\n    else {\n        var_ch = var_4h - uVar3;\n        puVar1 = fcn.004085c1(*(unaff_ESI + 0x10));\n        iVar5 = var_ch;\n        puVar2 = var_8h;\n        if (var_ch != 0) {\n            for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar1 = 0;\n                puVar1 = puVar1 + 1;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    if (*(unaff_ESI + 0x10) != 0) {\n        fcn.004098e1(*(unaff_ESI + 0x10));\n    }\n    *(unaff_ESI + 0x10) = var_8h;\n    *(unaff_ESI + 0x14) = *(unaff_ESI + 0x14) + var_4h;\n    return;\n}\n",
        "token_count": 831
    },
    "00406e69": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00406e69(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    ulong uVar6;\n    uint arg_ch;\n    uint var_5ch;\n    uint var_34h;\n    uint var_18h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = CONCAT44(0xfffffff, *(unaff_ESI + 0x14));\n    var_4h = 1;\n    if (*(unaff_ESI + 0x14) != 0xfffffff) goto code_r0x00406eae;\n    fcn.004056cd(\"deque<T> too long\");\n    fcn.004010f1(&var_34h);\n    arg_ch = 0x426644;\n    puVar2 = &var_5ch;\n    while( true ) {\n        uVar6 = fcn.0040a36b(puVar2, arg_ch);\ncode_r0x00406eae:\n        uVar4 = uVar6;\n        uVar3 = uVar4 >> 1;\n        if (uVar3 < 8) {\n            uVar3 = 8;\n        }\n        if ((1 < uVar3) && (uVar4 <= (uVar6 >> 0x20) - uVar3)) {\n            var_4h = uVar3;\n        }\n        uVar3 = *(unaff_ESI + 0x18) >> 4;\n        uVar4 = var_4h + uVar4;\n        if ((uVar4 == 0) || (3 < 0xffffffff / uVar4)) break;\n        fcn.00401000(0);\n        arg_ch = 0x42667c;\n        puVar2 = &var_18h;\n    }\n    var_8h = fcn.0040a0c2(uVar4 * 4);\n    fcn.004085c1(*(unaff_ESI + 0x10) + uVar3 * 4);\n    if (var_4h < uVar3) {\n        iVar5 = var_4h * 4;\n        fcn.004085c1(*(unaff_ESI + 0x10));\n        puVar2 = fcn.004085c1(iVar5 + *(unaff_ESI + 0x10));\n        uVar3 = var_4h;\n    }\n    else {\n        var_ch = var_4h - uVar3;\n        puVar1 = fcn.004085c1(*(unaff_ESI + 0x10));\n        iVar5 = var_ch;\n        puVar2 = var_8h;\n        if (var_ch != 0) {\n            for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar1 = 0;\n                puVar1 = puVar1 + 1;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    if (*(unaff_ESI + 0x10) != 0) {\n        fcn.004098e1(*(unaff_ESI + 0x10));\n    }\n    *(unaff_ESI + 0x10) = var_8h;\n    *(unaff_ESI + 0x14) = *(unaff_ESI + 0x14) + var_4h;\n    return;\n}\n",
        "token_count": 831
    },
    "0041ac50": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.0041ac50(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "0041c0d5": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041c0d5(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 94
    },
    "004011a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011a2(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    fcn.00408823(arg_8h);\n    *in_ECX = vtable.std::logic_error.0;\n    fcn.004056f2(arg_8h + 0xc);\n    return;\n}\n",
        "token_count": 76
    },
    "00401256": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401256(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x3f;\n    do {\n        fcn.00406029(0, 0);\n        iVar1 = iVar1 + -1;\n    } while (-1 < iVar1);\n    return;\n}\n",
        "token_count": 74
    },
    "00401dbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401dbe(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x3f;\n    do {\n        fcn.00406029(1, 0);\n        iVar1 = iVar1 + -1;\n    } while (-1 < iVar1);\n    return;\n}\n",
        "token_count": 74
    },
    "004057cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004057cd(void)\n\n{\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    fcn.0040768f();\n    fcn.0040768f();\n    fcn.0040768f();\n    arg_8h = fcn.00406785(uStack32, uStack28, uStack24, uStack20);\n    arg_ch = fcn.00406785(uStack16, uStack12, uStack32, uStack28);\n    fcn.00405e6a(arg_8h, arg_ch);\n    fcn.0040768f();\n    return;\n}\n",
        "token_count": 171
    },
    "00405904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405904(void)\n\n{\n    uint *puVar1;\n    uint *arg_14h;\n    uint32_t uVar2;\n    uint *unaff_EBX;\n    uint *unaff_ESI;\n    uint var_8h;\n    \n    puVar1 = unaff_ESI[3];\n    if (puVar1 == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = unaff_ESI[5] - puVar1 >> 2;\n    }\n    arg_14h = unaff_ESI[4];\n    if (arg_14h - puVar1 >> 2 < uVar2) {\n        *arg_14h = *unaff_EBX;\n        unaff_ESI[4] = arg_14h + 1;\n    }\n    else {\n        if (arg_14h < puVar1) {\n            fcn.00409801();\n        }\n        fcn.00406074(&var_8h, unaff_EBX, *unaff_ESI, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00405cd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405cd5(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.00406749(arg_8h);\n    if (cVar1 == '\\0') {\n        if ((-*(in_EAX + 0x14) - 1U <= arg_ch) || (*(in_EAX + 0x14) + arg_ch < *(in_EAX + 0x14))) {\n            fcn.00408605();\n        }\n        if (arg_ch != 0) {\n            iVar3 = *(in_EAX + 0x14) + arg_ch;\n            cVar1 = fcn.00405fc9(iVar3, 0);\n            if (cVar1 != '\\0') {\n                if (*(in_EAX + 0x18) < 0x10) {\n                    iVar2 = in_EAX + 4;\n                }\n                else {\n                    iVar2 = *(in_EAX + 4);\n                }\n                fcn.0040104c(*(in_EAX + 0x14) + iVar2, *(in_EAX + 0x18) - *(in_EAX + 0x14), arg_8h, arg_ch);\n                fcn.00405faa(iVar3);\n            }\n        }\n    }\n    else {\n        if (*(in_EAX + 0x18) < 0x10) {\n            iVar3 = in_EAX + 4;\n        }\n        else {\n            iVar3 = *(in_EAX + 4);\n        }\n        fcn.00406536(arg_8h - iVar3, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "00405d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d70(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t unaff_EBX;\n    int32_t arg_8h_00;\n    int32_t unaff_EDI;\n    \n    if (-*(unaff_EDI + 0x14) - 1U <= unaff_EBX) {\n        fcn.00408605();\n    }\n    if (unaff_EBX != 0) {\n        arg_8h_00 = *(unaff_EDI + 0x14) + unaff_EBX;\n        cVar1 = fcn.00405fc9(arg_8h_00, 0);\n        if (cVar1 != '\\0') {\n            fcn.00405f6a(unaff_EBX);\n            fcn.00405faa(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00405db7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405db7(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint32_t arg_8h_01;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.0040863d();\n    }\n    arg_8h_01 = *(arg_8h + 0x14) - arg_ch;\n    if (arg_10h < arg_8h_01) {\n        arg_8h_01 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00405e6a(arg_8h_01 + arg_ch, 0xffffffff);\n        fcn.00405e6a(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.00405fc9(arg_8h_01, 0);\n        if (cVar1 != '\\0') {\n            if (*(arg_8h + 0x18) < 0x10) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            if (*(in_ECX + 0x18) < 0x10) {\n                arg_8h_00 = in_ECX + 4;\n            }\n            else {\n                arg_8h_00 = *(in_ECX + 4);\n            }\n            fcn.0040104c(arg_8h_00, *(in_ECX + 0x18), arg_8h + arg_ch, arg_8h_01);\n            fcn.00405faa(arg_8h_01);\n        }\n    }\n    return;\n}\n",
        "token_count": 419
    },
    "0040611a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040611a(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint *unaff_ESI;\n    \n    puVar1 = unaff_ESI;\n    iVar2 = in_EDX;\n    if (in_EDX != 0) {\n        do {\n            *puVar1 = *arg_8h;\n            iVar2 = iVar2 + -1;\n            puVar1 = puVar1 + 1;\n        } while (iVar2 != 0);\n    }\n    return unaff_ESI + in_EDX;\n}\n",
        "token_count": 141
    },
    "0040613d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0040613d(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch_2;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0041b5ec();\n    *(unaff_EBP + -0x10) = &var_14h;\n    iVar1 = *(unaff_EBP + 8);\n    *(iVar1 + 0xc) = 0;\n    *(iVar1 + 0x10) = 0;\n    *(iVar1 + 0x14) = 0;\n    iVar2 = fcn.004069fe();\n    *(iVar1 + 0xc) = iVar2;\n    *(iVar1 + 0x10) = iVar2;\n    *(iVar1 + 0x14) = iVar2 + 0x500000;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = *(iVar1 + 0xc);\n    *(unaff_EBP + -0x14) = 0x500000;\n    *(unaff_EBP + -0x18) = iVar2;\n    while (*(unaff_EBP + -0x14) != 0) {\n        **(unaff_EBP + -0x18) = **(unaff_EBP + 0xc);\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + -1;\n        *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 1;\n    }\n    *(iVar1 + 0x10) = iVar2 + 0x500000;\n    *(unaff_EBP + -4) = 0xffffffff;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 471
    },
    "00406211": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406211(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar auStack36 [4];\n    int32_t *piStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t *piStack16;\n    int32_t iStack12;\n    \n    uVar1 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n    auStack36[0] = 0;\n    if (uVar1 < arg_8h) {\n        fcn.004082a3();\n        fcn.00406c92(auStack36, piStack32, iStack28);\n        return;\n    }\n    if (uVar1 <= arg_8h) {\n        return;\n    }\n    fcn.004082a3();\n    fcn.004082a3();\n    piStack16 = piStack32;\n    iStack12 = iStack28;\n    if (piStack32 == NULL) {\n        fcn.00409801();\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *piStack32;\n    }\n    arg_8h = iStack28 + arg_8h;\n    if (arg_8h < *(iVar2 + 0x10) || arg_8h == *(iVar2 + 0x10)) {\n        if (piStack32 == NULL) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *piStack32;\n        }\n        if (*(iVar2 + 0xc) <= arg_8h) goto code_r0x004062ad;\n    }\n    fcn.00409801();\ncode_r0x004062ad:\n    fcn.00406c2f(&piStack16, piStack16, arg_8h, uStack24, uStack20);\n    return;\n}\n",
        "token_count": 435
    },
    "00406536": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406536(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x14) < arg_8h) {\n        fcn.0040863d();\n    }\n    uVar2 = *(in_EAX + 0x14) - arg_8h;\n    if (uVar2 < arg_ch) {\n        arg_ch = uVar2;\n    }\n    if ((-*(unaff_ESI + 0x14) - 1U <= arg_ch) || (*(unaff_ESI + 0x14) + arg_ch < *(unaff_ESI + 0x14))) {\n        fcn.00408605();\n    }\n    if (arg_ch != 0) {\n        arg_8h_00 = *(unaff_ESI + 0x14) + arg_ch;\n        cVar1 = fcn.00405fc9(arg_8h_00, 0);\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x18) < 0x10) {\n                iVar4 = in_EAX + 4;\n            }\n            else {\n                iVar4 = *(in_EAX + 4);\n            }\n            if (*(unaff_ESI + 0x18) < 0x10) {\n                iVar3 = unaff_ESI + 4;\n            }\n            else {\n                iVar3 = *(unaff_ESI + 4);\n            }\n            fcn.0040104c(*(unaff_ESI + 0x14) + iVar3, *(unaff_ESI + 0x18) - *(unaff_ESI + 0x14), iVar4 + arg_8h, arg_ch)\n            ;\n            fcn.00405faa(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "00406c2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00406c2f(int32_t *arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t in_EAX;\n    int32_t arg_ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    fcn.004082a3();\n    fcn.004082a3();\n    if ((*arg_8h == 0) || (*arg_8h != var_ch)) {\n        fcn.00409801();\n    }\n    arg_8h_00 = arg_8h[1];\n    if (arg_8h_00 != var_8h) {\n        arg_ch = *(in_EAX + 0x10) - var_8h;\n        if (0 < arg_ch) {\n            fcn.004086c8(arg_8h_00, arg_ch, var_8h, arg_ch);\n        }\n        *(in_EAX + 0x10) = arg_ch + arg_8h_00;\n    }\n    return arg_8h;\n}\n",
        "token_count": 262
    },
    "0040768f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040768f(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    \n    *unaff_EDI = 0;\n    if ((unaff_ESI != 0) && (unaff_EBX != NULL)) {\n        puVar1 = unaff_ESI + 4;\n        puVar2 = puVar1;\n        if (0xf < *(unaff_ESI + 0x18)) {\n            puVar2 = *puVar1;\n        }\n        if (puVar2 <= unaff_EBX) {\n            if (0xf < *(unaff_ESI + 0x18)) {\n                puVar1 = *puVar1;\n            }\n            if (unaff_EBX <= *(unaff_ESI + 0x14) + puVar1) goto code_r0x004076c4;\n        }\n    }\n    fcn.00409801();\ncode_r0x004076c4:\n    *unaff_EDI = unaff_ESI;\n    unaff_EDI[1] = unaff_EBX;\n    return;\n}\n",
        "token_count": 265
    },
    "004082c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004082c3(void)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    piVar1 = in_EAX[1];\n    piVar2 = *in_EAX;\n    uVar5 = piVar1 >> 4;\n    if (piVar2 == NULL) {\n        fcn.00409801();\n        piVar2 = *in_EAX;\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n            goto code_r0x004082ec;\n        }\n    }\n    iVar4 = *piVar2;\ncode_r0x004082ec:\n    if (piVar2 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = *piVar2;\n    }\n    if (*(iVar3 + 0x1c) + *(iVar4 + 0x18) <= in_EAX[1]) {\n        fcn.00409801();\n    }\n    piVar2 = *in_EAX;\n    if (piVar2 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = *piVar2;\n    }\n    if (*(iVar4 + 0x14) < uVar5 || *(iVar4 + 0x14) == uVar5) {\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        uVar5 = uVar5 - *(iVar4 + 0x14);\n    }\n    if (piVar2 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = *piVar2;\n    }\n    return *(*(iVar4 + 0x10) + uVar5 * 4) + (piVar1 & 0xf);\n}\n",
        "token_count": 437
    },
    "004084dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004084dd(uint param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    bool bVar7;\n    bool bVar8;\n    \n    pcVar1 = 0x42134f;\n    do {\n        pcVar2 = pcVar1;\n        pcVar1 = pcVar2 + 1;\n    } while (*pcVar2 != '\\0');\n    pcVar1 = *(param_2 + 0x14);\n    pcVar2 = pcVar2 + -0x42134f;\n    pcVar3 = pcVar1;\n    if (pcVar2 <= pcVar1) {\n        pcVar3 = pcVar2;\n    }\n    if (*(param_2 + 0x18) < 0x10) {\n        puVar4 = param_2 + 4;\n    }\n    else {\n        puVar4 = *(param_2 + 4);\n    }\n    bVar7 = false;\n    uVar5 = 0;\n    bVar8 = true;\n    puVar6 = 0x42134f;\n    do {\n        if (pcVar3 == NULL) break;\n        pcVar3 = pcVar3 + -1;\n        bVar7 = *puVar4 < *puVar6;\n        bVar8 = *puVar4 == *puVar6;\n        puVar4 = puVar4 + 1;\n        puVar6 = puVar6 + 1;\n    } while (bVar8);\n    if (!bVar8) {\n        uVar5 = (1 - bVar7) - (bVar7 != 0);\n    }\n    if (uVar5 == 0) {\n        if (pcVar1 < pcVar2) {\n            uVar5 = 0xffffffff;\n        }\n        else {\n            uVar5 = pcVar1 != pcVar2;\n        }\n    }\n    return uVar5 == 0;\n}\n",
        "token_count": 461
    },
    "00408575": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408575(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t in_EDX;\n    \n    iVar1 = in_EAX - arg_8h >> 2;\n    arg_ch = iVar1 * 4;\n    if (iVar1 != 0) {\n        fcn.004086c8(in_EDX, arg_ch, arg_8h, arg_ch);\n    }\n    return arg_ch + in_EDX;\n}\n",
        "token_count": 123
    },
    "004085a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004085a0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t arg_ch;\n    int32_t in_ECX;\n    \n    arg_ch = in_EAX - arg_8h;\n    if (arg_ch != 0) {\n        fcn.004086c8(in_ECX, arg_ch, arg_8h, arg_ch);\n    }\n    return arg_ch + in_ECX;\n}\n",
        "token_count": 104
    },
    "004085c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004085c1(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t in_EDX;\n    \n    iVar1 = in_EAX - arg_8h >> 2;\n    arg_ch = iVar1 * 4;\n    if (iVar1 != 0) {\n        fcn.004086c8(in_EDX, arg_ch, arg_8h, arg_ch);\n    }\n    return arg_ch + in_EDX;\n}\n",
        "token_count": 124
    },
    "00409513": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409513(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040944f(arg_8h, arg_ch, 0x40);\n    return;\n}\n",
        "token_count": 46
    },
    "00409811": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00409811(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0040c440(0x425f68, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.0040a857();\n        *puVar1 = 0x16;\n        fcn.004097db(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.0040c28a();\n        fcn.0040c3a2(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040c28a();\n        arg_8h_00 = fcn.0040ed8c(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0040c28a();\n        uVar4 = fcn.0040ab31(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0040c28a();\n        fcn.0040ee28(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004098ad();\n    }\n    fcn.0040c485();\n    return;\n}\n",
        "token_count": 467
    },
    "004098ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004098ad(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040c28a();\n    fcn.0040c410(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 55
    },
    "0040a00f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a00f(uint arg_8h)\n\n{\n    fcn.00409ee3(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "0040faa6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040faba)\n// WARNING: Removing unreachable block (ram,0x0040fac0)\n// WARNING: Removing unreachable block (ram,0x0040fac2)\n\nvoid fcn.0040faa6(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "0041427a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041427a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c440(0x4264c8, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0040a857();\n        *puVar1 = 0x16;\n        fcn.004097db(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00413b5b(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00414318();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.0040c485();\n    return;\n}\n",
        "token_count": 455
    },
    "00414346": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414346(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0041427a(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 77
    },
    "00414867": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414867(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0040a857();\n        *puVar1 = 0x16;\n        fcn.004097db(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x42af64;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 135
    },
    "004148a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004148a0(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0040a857();\n        *puVar1 = 0x16;\n        fcn.004097db(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x42af68;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "004148d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004148d9(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0040a857();\n        *puVar1 = 0x16;\n        fcn.004097db(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x42af60;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "0041750f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041750f(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0040a857();\n        *puVar1 = 0x16;\n        fcn.004097db(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x42c294;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "0041b1a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041b1a6(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 308
    },
    "0041ca5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ca5b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    uint var_8fh;\n    \n    fcn.0041cc24(arg_8h, arg_ch);\n    fcn.0041cc24(arg_10h, arg_14h);\n    fcn.0041bf27();\n    fcn.0041caa3();\n    return;\n}\n",
        "token_count": 108
    },
    "0041cbf1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cbf1(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.0041cc24(arg_8h, arg_ch);\n    fcn.0041bec0();\n    fcn.0041caa3();\n    return;\n}\n",
        "token_count": 71
    },
    "0041cc24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nfloat10 __cdecl fcn.0041cc24(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    float10 fVar1;\n    uint var_ah;\n    uint var_6h;\n    uint var_2h;\n    \n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        fVar1 = CONCAT28(arg_ch._2_2_, CONCAT44(arg_ch << 0xb | arg_8h >> 0x15, arg_8h)) | 0x7fff;\n    }\n    else {\n        fVar1 = CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h));\n    }\n    return fVar1;\n}\n",
        "token_count": 181
    },
    "0040a444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a444(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004114d8(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00405a98": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00405a98(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *unaff_ESI;\n    \n    ppiVar1 = fcn.0040a0c2(4);\n    if (ppiVar1 == NULL) {\n        ppiVar1 = NULL;\n    }\n    else {\n        *ppiVar1 = unaff_ESI;\n    }\n    *unaff_ESI = ppiVar1;\n    unaff_ESI[4] = 0;\n    unaff_ESI[5] = 0;\n    unaff_ESI[6] = 0;\n    unaff_ESI[7] = 0;\n    return;\n}\n",
        "token_count": 150
    },
    "004171bd": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004171bd(void)\n\n{\n    *0x42b190 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONIN$\", 0xc0000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "004171dc": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004171dc(void)\n\n{\n    *0x42b194 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "004058bd": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004058bd(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *unaff_ESI;\n    \n    ppiVar1 = fcn.0040a0c2(4);\n    if (ppiVar1 == NULL) {\n        ppiVar1 = NULL;\n    }\n    else {\n        *ppiVar1 = unaff_ESI;\n    }\n    *unaff_ESI = ppiVar1;\n    unaff_ESI[3] = 0;\n    unaff_ESI[4] = 0;\n    unaff_ESI[5] = 0;\n    return;\n}\n",
        "token_count": 137
    },
    "004058e1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004058e1(void)\n\n{\n    uint *unaff_ESI;\n    \n    if (unaff_ESI[3] != 0) {\n        fcn.004098e1(unaff_ESI[3]);\n    }\n    unaff_ESI[3] = 0;\n    unaff_ESI[4] = 0;\n    unaff_ESI[5] = 0;\n    fcn.004098e1(*unaff_ESI);\n    return;\n}\n",
        "token_count": 107
    },
    "004079b5": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.004079b5(void)\n\n{\n    uint *puVar1;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0041b5ec();\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    puVar1 = fcn.0040a0c2(0x18);\n    *(unaff_EBP + -0x14) = puVar1;\n    *(unaff_EBP + -4) = 0;\n    if (puVar1 != NULL) {\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[1] = *(unaff_EBP + 0xc);\n        puVar1[2] = *(unaff_EBP + 0x10);\n        puVar1[3] = *extraout_ECX;\n        puVar1[4] = extraout_ECX[1];\n        *(puVar1 + 5) = 0;\n        *(puVar1 + 0x15) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 358
    },
    "004011cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004011cc(void)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 0x104;\n    iVar2 = 0;\n    pcVar1 = in_EAX;\n    do {\n        if (*pcVar1 == '\\0') break;\n        pcVar1 = pcVar1 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    if (iVar4 == 0) {\n        iVar2 = -0x7ff8ffa9;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = 0x104 - iVar4;\n    }\n    if (iVar2 < 0) {\n        return iVar2;\n    }\n    iVar2 = 0x104 - iVar4;\n    pcVar1 = in_EAX + iVar4;\n    iVar4 = 0;\n    if (iVar2 != 0) {\n        iVar3 = 0x7fffffff;\n        iVar5 = \"No network detected.\" - pcVar1;\n        do {\n            if ((iVar3 == 0) || (pcVar1[iVar5] == '\\0')) break;\n            *pcVar1 = pcVar1[iVar5];\n            pcVar1 = pcVar1 + 1;\n            iVar2 = iVar2 + -1;\n            iVar3 = iVar3 + -1;\n        } while (iVar2 != 0);\n        if (iVar2 != 0) goto code_r0x0040122b;\n    }\n    pcVar1 = pcVar1 + -1;\n    iVar4 = -0x7ff8ff86;\ncode_r0x0040122b:\n    *pcVar1 = '\\0';\n    return iVar4;\n}\n",
        "token_count": 409
    },
    "00405725": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405725(uint arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = arg_ch;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00405cd5(arg_ch, pcVar2 - (arg_ch + 1));\n    return;\n}\n",
        "token_count": 106
    },
    "00405b18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405b18(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *unaff_ESI;\n    int32_t iVar3;\n    \n    while (unaff_ESI[7] != 0) {\n        if ((unaff_ESI[7] != 0) && (iVar3 = unaff_ESI[7] + -1,  unaff_ESI[7] = iVar3,  iVar3 == 0)) {\n            unaff_ESI[6] = 0;\n        }\n    }\n    iVar3 = unaff_ESI[5];\n    while (iVar2 = unaff_ESI[4],  iVar3 != 0) {\n        iVar3 = iVar3 + -1;\n        piVar1 = iVar2 + iVar3 * 4;\n        if (*piVar1 != 0) {\n            fcn.004098e1(*piVar1);\n        }\n    }\n    if (iVar2 != 0) {\n        fcn.004098e1(iVar2);\n    }\n    unaff_ESI[5] = 0;\n    unaff_ESI[4] = 0;\n    fcn.004098e1(*unaff_ESI);\n    return;\n}\n",
        "token_count": 275
    },
    "00405e49": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e49(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004065da(arg_8h, pcVar2 - (arg_8h + 1));\n    return;\n}\n",
        "token_count": 108
    },
    "004083b2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004083b2(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI == 0) {\n        fcn.00409801();\n    }\n    iVar2 = unaff_ESI[1];\n    if (*(iVar2 + 0x15) == '\\0') {\n        piVar1 = *(iVar2 + 8);\n        if (*(*(iVar2 + 8) + 0x15) == '\\0') {\n            do {\n                piVar3 = piVar1;\n                piVar1 = *piVar3;\n            } while (*(piVar1 + 0x15) == '\\0');\n            unaff_ESI[1] = piVar3;\n        }\n        else {\n            while ((iVar2 = *(iVar2 + 4),  *(iVar2 + 0x15) == '\\0' && (unaff_ESI[1] == *(iVar2 + 8)))) {\n                unaff_ESI[1] = iVar2;\n            }\n            unaff_ESI[1] = iVar2;\n        }\n    }\n    else {\n        fcn.00409801();\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "00408434": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00408434(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI == 0) {\n        fcn.00409801();\n    }\n    iVar2 = unaff_ESI[1];\n    if (*(iVar2 + 0x11) == '\\0') {\n        piVar1 = *(iVar2 + 8);\n        if (*(*(iVar2 + 8) + 0x11) == '\\0') {\n            do {\n                piVar3 = piVar1;\n                piVar1 = *piVar3;\n            } while (*(piVar1 + 0x11) == '\\0');\n            unaff_ESI[1] = piVar3;\n        }\n        else {\n            while ((iVar2 = *(iVar2 + 4),  *(iVar2 + 0x11) == '\\0' && (unaff_ESI[1] == *(iVar2 + 8)))) {\n                unaff_ESI[1] = iVar2;\n            }\n            unaff_ESI[1] = iVar2;\n        }\n    }\n    else {\n        fcn.00409801();\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00408481": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00408481(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI == 0) {\n        fcn.00409801();\n    }\n    iVar2 = unaff_ESI[1];\n    if (*(iVar2 + 0xf) == '\\0') {\n        piVar1 = *(iVar2 + 8);\n        if (*(*(iVar2 + 8) + 0xf) == '\\0') {\n            do {\n                piVar3 = piVar1;\n                piVar1 = *piVar3;\n            } while (*(piVar1 + 0xf) == '\\0');\n            unaff_ESI[1] = piVar3;\n        }\n        else {\n            while ((iVar2 = *(iVar2 + 4),  *(iVar2 + 0xf) == '\\0' && (unaff_ESI[1] == *(iVar2 + 8)))) {\n                unaff_ESI[1] = iVar2;\n            }\n            unaff_ESI[1] = iVar2;\n        }\n    }\n    else {\n        fcn.00409801();\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "00408675": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00408675(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack16 [12];\n    \n    do {\n        iVar2 = fcn.0040908c(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040d979(param_1);\n    } while (iVar2 != 0);\n    if ((*0x42b7e8 & 1) == 0) {\n        *0x42b7e8 = *0x42b7e8 | 1;\n        fcn.0040a0a7();\n        fcn.0040fa8f(0x41e7bb);\n    }\n    fcn.004085ea(0x42b7dc);\n    fcn.0040a36b(auStack16, 0x42667c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 222
    },
    "0040f655": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f655(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c440(0x426160, 0xc);\n    fcn.0040cc5f(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x42bcc4;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x42bcc0;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040f699;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040b731(arg_8h_00);\ncode_r0x0040f699:\n        fcn.0040b731(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040f6bc();\n    fcn.0040c485();\n    return;\n}\n",
        "token_count": 398
    }
}